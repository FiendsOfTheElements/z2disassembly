; DISASSEMBLY ORIGINALLY WROTE BY TRAX (99.9% of his work)
 * = $8000                                                                      ;
; da65 V2.18 
; Created     2021-04-12 11 24 27                                              ;
; Input file  bank3_and_7.nes                                                  ;
; Page        1                                                                ;
                                                                               ;
                                                                               ;
;.setcpu  "6502"                                                               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L0000     = $0000                                                              ;
L0002     = $0002                                                              ;
L000E     = $000E                                                              ;
L0302     = $0302                                                              ;
L0363     = $0363                                                              ;
L03A4     = $03A4                                                              ;
L05C9     = $05C9                                                              ;
L0600     = $0600                                                              ;
L0620     = $0620                                                              ;
L0640     = $0640                                                              ;
L0660     = $0660                                                              ;
L0680     = $0680                                                              ;
L06A0     = $06A0                                                              ;
L06C0     = $06C0                                                              ;
L6060     = $6060                                                              ;
L6261     = $6261                                                              ;
L696C     = $696C                                                              ;
L7000     = $7000                                                              ;
L700D     = $700D                                                              ;
L7018     = $7018                                                              ;
L7025     = $7025                                                              ;
L7032     = $7032                                                              ;
L7033     = $7033                                                              ;
L7036     = $7036                                                              ;
L7041     = $7041                                                              ;
L704C     = $704C                                                              ;
L7057     = $7057                                                              ;
L7062     = $7062                                                              ;
L706D     = $706D                                                              ;
L7070     = $7070                                                              ;
L7075     = $7075                                                              ;
L7078     = $7078                                                              ;
L707B     = $707B                                                              ;
L7080     = $7080                                                              ;
L7085     = $7085                                                              ;
L708E     = $708E                                                              ;
L7091     = $7091                                                              ;
L709C     = $709C                                                              ;
L70A0     = $70A0                                                              ;
L70A9     = $70A9                                                              ;
L70B2     = $70B2                                                              ;
L70BF     = $70BF                                                              ;
L70C8     = $70C8                                                              ;
L70D5     = $70D5                                                              ;
L70E4     = $70E4                                                              ;
L70EF     = $70EF                                                              ;
L70F0     = $70F0                                                              ;
L7101     = $7101                                                              ;
L7106     = $7106                                                              ;
L7109     = $7109                                                              ;
L710C     = $710C                                                              ;
L710F     = $710F                                                              ;
L711A     = $711A                                                              ;
L711D     = $711D                                                              ;
; ---------------------------------------------------------------------------- ;
bank3_Pointer_table_for_Background_Areas_Data                                  ;
.word    L9B5C                         ; 0xc010 $8000 5C 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc012 $8002 48 9B                    ;
.word    L0000                         ; 0xc014 $8004 00 00                    ;
.word    L0000                         ; 0xc016 $8006 00 00                    ;
.word    L0000                         ; 0xc018 $8008 00 00                    ;
.word    L0000                         ; 0xc01a $800A 00 00                    ;
.word    L0000                         ; 0xc01c $800C 00 00                    ;
; ---------------------------------------------------------------------------- ;
bank3_Palettes_for_Towns                                                       ;
;The first byte of 0x10 sets the background color                              ;
;FF = transparency                                                             ;
.byt    $22,$30,$12,$16,$22,$30,$29,$0F; 0xc01e $800E 22 30 12 16 22 30 29 0F  ;
.byt    $22,$27,$17,$0F,$22,$30,$10,$0F; 0xc026 $8016 22 27 17 0F 22 30 10 0F  ;
.byt    $22,$30,$12,$16,$22,$30,$28,$0F; 0xc02e $801E 22 30 12 16 22 30 28 0F  ;
.byt    $22,$28,$18,$0F,$22,$30,$26,$0F; 0xc036 $8026 22 28 18 0F 22 30 26 0F  ;
.byt    $22,$30,$12,$16,$22,$37,$2A,$0F; 0xc03e $802E 22 30 12 16 22 37 2A 0F  ;
.byt    $22,$30,$1C,$0F,$22,$30,$1A,$0F; 0xc046 $8036 22 30 1C 0F 22 30 1A 0F  ;
.byt    $22,$30,$12,$16,$22,$30,$30,$30; 0xc04e $803E 22 30 12 16 22 30 30 30  ;
.byt    $22,$30,$27,$0F,$22,$30,$10,$0F; 0xc056 $8046 22 30 27 0F 22 30 10 0F  ;
.byt    $13,$30,$12,$16,$13,$30,$27,$0F; 0xc05e $804E 13 30 12 16 13 30 27 0F  ;
.byt    $13,$39,$19,$0F,$13,$30,$12,$0F; 0xc066 $8056 13 39 19 0F 13 30 12 0F  ;
.byt    $02,$30,$12,$16,$02,$01,$17,$0F; 0xc06e $805E 02 30 12 16 02 01 17 0F  ;
.byt    $02,$10,$00,$0F,$02,$30,$10,$0F; 0xc076 $8066 02 10 00 0F 02 30 10 0F  ;
.byt    $0F,$30,$12,$16,$0F,$30,$29,$17; 0xc07e $806E 0F 30 12 16 0F 30 29 17  ;
.byt    $0F,$30,$16,$21,$0F,$26,$16,$0F; 0xc086 $8076 0F 30 16 21 0F 26 16 0F  ;
.byt    $0F,$30,$12,$16,$0F,$2C,$1C,$0C; 0xc08e $807E 0F 30 12 16 0F 2C 1C 0C  ;
.byt    $0F,$30,$16,$21,$0F,$26,$16,$07; 0xc096 $8086 0F 30 16 21 0F 26 16 07  ;
.byt    $0F,$30,$12,$16,$0F,$30,$29,$17; 0xc09e $808E 0F 30 12 16 0F 30 29 17  ;
.byt    $0F,$30,$16,$21,$0F,$26,$16,$0F; 0xc0a6 $8096 0F 30 16 21 0F 26 16 0F  ;
.byt    $FF,$18,$36,$2A,$FF,$16,$27,$30; 0xc0ae $809E FF 18 36 2A FF 16 27 30  ;
.byt    $FF,$0F,$16,$36,$FF,$0F,$13,$36; 0xc0b6 $80A6 FF 0F 16 36 FF 0F 13 36  ;
.byt    $FF,$18,$36,$2A,$FF,$16,$27,$30; 0xc0be $80AE FF 18 36 2A FF 16 27 30  ;
.byt    $FF,$06,$16,$36,$FF,$03,$10,$36; 0xc0c6 $80B6 FF 06 16 36 FF 03 10 36  ;
.byt    $FF,$18,$36,$2A,$FF,$16,$27,$30; 0xc0ce $80BE FF 18 36 2A FF 16 27 30  ;
.byt    $FF,$0F,$1C                    ; 0xc0d6 $80C6 FF 0F 1C                 ;
L80C9                                                                          ;
.byt    $2C,$FF,$0F,$15,$25,$FF,$18,$36; 0xc0d9 $80C9 2C FF 0F 15 25 FF 18 36  ;
.byt    $2A,$FF,$16,$27,$30,$FF,$0F,$2A; 0xc0e1 $80D1 2A FF 16 27 30 FF 0F 2A  ;
.byt    $30,$FF,$0F,$16,$26,$FF,$18,$36; 0xc0e9 $80D9 30 FF 0F 16 26 FF 18 36  ;
.byt    $2A,$FF,$16,$27                ; 0xc0f1 $80E1 2A FF 16 27              ;
L80E5                                                                          ;
.byt    $30,$FF,$11,$21,$30,$FF,$07,$16; 0xc0f5 $80E5 30 FF 11 21 30 FF 07 16  ;
.byt    $30                            ; 0xc0fd $80ED 30                       ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Cross_Hatched_Roof_2_high_X_wide_1x        ;
ldx      #$00                          ; 0xc0fe $80EE A2 00                    ;;X = #$00 0000_0000
beq      L8104                         ; 0xc100 $80F0 F0 12                    ;
bank3_Objects_Construction_Routines_White_Shingle_Roof_2_high_X_wide_3x        ;
ldx      #$01                          ; 0xc102 $80F2 A2 01                    ;;X = #$01 0000_0001
bne      L8104                         ; 0xc104 $80F4 D0 0E                    ;
bank3_Objects_Construction_Routines_Green_Shingle_Roof_2_high_X_wide_4x        ;
ldx      #$02                          ; 0xc106 $80F6 A2 02                    ;;X = #$02 0000_0010
bne      L8104                         ; 0xc108 $80F8 D0 0A                    ;
bank3_Tile_Codes_for_House_Roofs                                               ;
.byt    $84,$CF,$57,$55                ; 0xc10a $80FA 84 CF 57 55              ;
L80FE                                                                          ;
.byt    $85,$D0,$52,$55                ; 0xc10e $80FE 85 D0 52 55              ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Blocks_wall_in_caves_2_high_X_wide_Dx      ;
ldx      #$03                          ; 0xc112 $8102 A2 03                    ; X = 03
L8104                                                                          ;
lda      bank3_Tile_Codes_for_House_Roofs,x; 0xc114 $8104 BD FA 80             ; refer to table at $C0FA
sta      L0000                         ; 0xc117 $8107 85 00                    ;
lda      L80FE,x                       ; 0xc119 $8109 BD FE 80                 ; refer to table at $C0FA (offset +4)
sta      $01                           ; 0xc11c $810C 85 01                    ;
lda      #$01                          ; 0xc11e $810E A9 01                    ; A = 01
pha                                    ; 0xc120 $8110 48                       ;
lda      L0000                         ; 0xc121 $8111 A5 00                    ;
sta      $0112                         ; 0xc123 $8113 8D 12 01                 ;; Tile Code 0 for Object
L8116                                                                          ;
lda      $0731                         ; 0xc126 $8116 AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xc129 $8119 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xc12b $811B AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc12c $811C 20 44 C9           ; Set RAM Address for Object (0E-0F)
L811F                                                                          ;
lda      $0112                         ; 0xc12f $811F AD 12 01                 ;; Tile Code 0 for Object
jsr      bank7_Set_tile_and_move_right_1_column; 0xc132 $8122 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xc135 $8125 CA                       ;
bpl      L811F                         ; 0xc136 $8126 10 F7                    ;
jsr      LDF4C                         ; 0xc138 $8128 20 4C DF                 ; Go down 1 row
pla                                    ; 0xc13b $812B 68                       ;
tax                                    ; 0xc13c $812C AA                       ;
dex                                    ; 0xc13d $812D CA                       ;
L812F     = * + $0001                                                          ;
bmi      L813A                         ; 0xc13e $812E 30 0A                    ;
txa                                    ; 0xc140 $8130 8A                       ;
pha                                    ; 0xc141 $8131 48                       ;
lda      $01                           ; 0xc142 $8132 A5 01                    ;
sta      $0112                         ; 0xc144 $8134 8D 12 01                 ;; Tile Code 0 for Object
jmp      L8116                         ; 0xc147 $8137 4C 16 81                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L813A                                                                          ;
rts                                    ; 0xc14a $813A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_House_Facade__Bricks_X_wide__5x            ;
ldx      #$00                          ; 0xc14b $813B A2 00                    ; X = 00
beq      L8157                         ; 0xc14d $813D F0 18                    ;
bank3_Objects_Construction_Routines_House_Facade__Small_bricks_X_wide_6x       ;
L8140     = * + $0001                                                          ;
ldx      #$01                          ; 0xc14f $813F A2 01                    ; X = 01
bne      L8157                         ; 0xc151 $8141 D0 14                    ;
bank3_Objects_Construction_Routines_House_Facade__Grass_X_wide__7x             ;
ldx      #$02                          ; 0xc153 $8143 A2 02                    ; X = 02
bne      L8157                         ; 0xc155 $8145 D0 10                    ;
bank3_Objects_Construction_Routines_House_Facade__White_bricks_X_wide_8x       ;
ldx      #$03                          ; 0xc157 $8147 A2 03                    ; X = 03
L8149                                                                          ;
bne      L8157                         ; 0xc159 $8149 D0 0C                    ;
bank3_Tile_Codes_for_House_Facades                                             ;
;First byte sets all columns except the rightmost one                          ;
;Second byte sets the rightmost column                                         ;
.byt    $80,$CD,$4E,$CB,$82            ; 0xc15b $814B 80 CD 4E CB 82           ;
L8150                                                                          ;
.byt    $81,$CE,$4F,$CB,$83            ; 0xc160 $8150 81 CE 4F CB 83           ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_House_Facade__Logs_X_wide__9x              ;
ldx      #$04                          ; 0xc165 $8155 A2 04                    ; X = 04
L8157                                                                          ;
lda      bank3_Tile_Codes_for_House_Facades,x; 0xc167 $8157 BD 4B 81           ; refer to table at $C14B
sta      L0000                         ; 0xc16a $815A 85 00                    ;
lda      L8150,x                       ; 0xc16c $815C BD 50 81                 ; refer to table at $C14B (offset +5)
sta      $01                           ; 0xc16f $815F 85 01                    ;
L8161                                                                          ;
lda      $0731                         ; 0xc171 $8161 AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xc174 $8164 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xc176 $8166 AA                       ;
L8167                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc177 $8167 20 44 C9           ;
L816A                                                                          ;
lda      L0000                         ; 0xc17a $816A A5 00                    ;
jsr      bank7_Set_tile_and_move_right_1_column; 0xc17c $816C 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xc17f $816F CA                       ;
bne      L816A                         ; 0xc180 $8170 D0 F8                    ;
lda      $01                           ; 0xc182 $8172 A5 01                    ;
jsr      bank7_Set_tile_and_go_down_1_row_in_2x2_tiles_units; 0xc184 $8174 20 4A DF;
and      #$F0                          ; 0xc187 $8177 29 F0                    ; keep bits xxxx ....
cmp      #$B0                          ; 0xc189 $8179 C9 B0                    ; B0 = normal ground level
L817B                                                                          ;
bne      L8161                         ; 0xc18b $817B D0 E4                    ;
rts                                    ; 0xc18d $817D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Square_Window_1_wide_2_high_repeat_down_Ax ;
ldx      #$00                          ; 0xc18e $817E A2 00                    ; X = 00
beq      L818E                         ; 0xc190 $8180 F0 0C                    ;
bank3_Objects_Construction_Routines_Rounded_Window_1_wide_2_high_repeat_down_Bx ;
ldx      #$01                          ; 0xc192 $8182 A2 01                    ; X = 01
bne      L818E                         ; 0xc194 $8184 D0 08                    ;
bank3_Tile_Codes_for_House_Windows                                             ;
.byt    $86,$D1,$87                    ; 0xc196 $8186 86 D1 87                 ;
L8189                                                                          ;
.byt    $86,$D2,$88                    ; 0xc199 $8189 86 D2 88                 ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Hatched_Window_1_wide_2_high_repeat_down_Cx ;
ldx      #$02                          ; 0xc19c $818C A2 02                    ; X = 02
L818E                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc19e $818E 20 44 C9           ; Set RAM Address for Object (0E-0F)
L8191                                                                          ;
lda      bank3_Tile_Codes_for_House_Windows,x; 0xc1a1 $8191 BD 86 81           ;
jsr      LDF56                         ; 0xc1a4 $8194 20 56 DF                 ; Set tile and go down 1 row
lda      L8189,x                       ; 0xc1a7 $8197 BD 89 81                 ; refer to table at $C186 (offset +3)
sta      (L000E),y                     ; 0xc1aa $819A 91 0E                    ;
tya                                    ; 0xc1ac $819C 98                       ;
clc                                    ; 0xc1ad $819D 18                       ;
adc      #$20                          ; 0xc1ae $819E 69 20                    ;
tay                                    ; 0xc1b0 $81A0 A8                       ;
and      #$F0                          ; 0xc1b1 $81A1 29 F0                    ; keep bits xxxx ....
L81A3                                                                          ;
cmp      #$A0                          ; 0xc1b3 $81A3 C9 A0                    ;
bcc      L8191                         ; 0xc1b5 $81A5 90 EA                    ;
rts                                    ; 0xc1b7 $81A7 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Indoor_Ceiling_3Step_Stairs_3_high_X_wide_3x ;
lda      #$02                          ; 0xc1b8 $81A8 A9 02                    ; A = 02
sta      $04                           ; 0xc1ba $81AA 85 04                    ;
lda      $0730                         ; 0xc1bc $81AC AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xc1bf $81AF 29 0F                    ; keep bits .... xxxx
L81B1                                                                          ;
ora      #$20                          ; 0xc1c1 $81B1 09 20                    ; set bits  ..x. ....
sta      $0730                         ; 0xc1c3 $81B3 8D 30 07                 ; Position of Object Placement
L81B6                                                                          ;
lda      $0731                         ; 0xc1c6 $81B6 AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xc1c9 $81B9 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xc1cb $81BB AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc1cc $81BC 20 44 C9           ; Set RAM Address for Object (0E-0F)
L81BF                                                                          ;
lda      #$44                          ; 0xc1cf $81BF A9 44                    ; A = 44
jsr      bank7_Set_tile_and_move_right_1_column; 0xc1d1 $81C1 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xc1d4 $81C4 CA                       ;
bpl      L81BF                         ; 0xc1d5 $81C5 10 F8                    ;
jsr      LDF4C                         ; 0xc1d7 $81C7 20 4C DF                 ; Go down 1 row
inc      $0730                         ; 0xc1da $81CA EE 30 07                 ; Position of Object Placement
dec      $04                           ; 0xc1dd $81CD C6 04                    ;
bpl      L81B6                         ; 0xc1df $81CF 10 E5                    ;
rts                                    ; 0xc1e1 $81D1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Indoor_Ceiling_3Step_Stairs_3_high_X_wide_4x ;
lda      #$02                          ; 0xc1e2 $81D2 A9 02                    ;  A = 02
sta      $04                           ; 0xc1e4 $81D4 85 04                    ;
lda      $0730                         ; 0xc1e6 $81D6 AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xc1e9 $81D9 29 0F                    ; keep bits .... xxxx
ora      #$20                          ; 0xc1eb $81DB 09 20                    ; set bits  ..x. ....
sta      $0730                         ; 0xc1ed $81DD 8D 30 07                 ; Position of Object Placement
L81E0                                                                          ;
lda      $0731                         ; 0xc1f0 $81E0 AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xc1f3 $81E3 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xc1f5 $81E5 AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc1f6 $81E6 20 44 C9           ; Set RAM Address for Object (0E-0F)
L81E9                                                                          ;
lda      #$44                          ; 0xc1f9 $81E9 A9 44                    ; A = 44
jsr      bank7_Set_tile_and_move_right_1_column; 0xc1fb $81EB 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xc1fe $81EE CA                       ;
bpl      L81E9                         ; 0xc1ff $81EF 10 F8                    ;
jsr      LDF4C                         ; 0xc201 $81F1 20 4C DF                 ; Go down 1 row
dec      $0731                         ; 0xc204 $81F4 CE 31 07                 ; Level Object Type and Size
dec      $04                           ; 0xc207 $81F7 C6 04                    ;
bpl      L81E0                         ; 0xc209 $81F9 10 E5                    ;
rts                                    ; 0xc20b $81FB 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Tile_Codes_for_Portals_and_Walls                                         ;
.byt    $C1,$C1,$C1,$C1,$C1,$C1,$C0,$44; 0xc20c $81FC C1 C1 C1 C1 C1 C1 C0 44  ;
.byt    $44,$D6,$D6                    ; 0xc214 $8204 44 D6 D6                 ;
L8207                                                                          ;
.byt    $D6,$C2,$C1,$C1,$C1,$C0,$44,$D6; 0xc217 $8207 D6 C2 C1 C1 C1 C0 44 D6  ;
.byt    $D6,$D6,$C3,$C1,$C1,$C1,$C1,$C0; 0xc21f $820F D6 D6 C3 C1 C1 C1 C1 C0  ;
.byt    $D6,$D6,$D6,$CA,$C8,$C8,$C8,$C8; 0xc227 $8217 D6 D6 D6 CA C8 C8 C8 C8  ;
.byt    $C7,$D6,$D6,$D6,$C9,$C8,$C8,$C8; 0xc22f $821F C7 D6 D6 D6 C9 C8 C8 C8  ;
.byt    $C7,$44,$C8,$C8,$C8,$C8,$C8,$C8; 0xc237 $8227 C7 44 C8 C8 C8 C8 C8 C8  ;
.byt    $C7,$44,$44,$C1,$C1,$C1,$C1,$C1; 0xc23f $822F C7 44 44 C1 C1 C1 C1 C1  ;
.byt    $C1,$E7,$44,$44,$C1,$C1,$C1,$C1; 0xc247 $8237 C1 E7 44 44 C1 C1 C1 C1  ;
.byt    $C1,$C1,$C1,$E7,$44,$E8,$E8,$E8; 0xc24f $823F C1 C1 C1 E7 44 E8 E8 E8  ;
.byt    $E8,$E8,$E8,$E8,$E8,$E7,$E6,$E6; 0xc257 $8247 E8 E8 E8 E8 E8 E7 E6 E6  ;
.byt    $E6,$E6,$E6,$E6,$E6,$E6,$E5,$C8; 0xc25f $824F E6 E6 E6 E6 E6 E6 E5 C8  ;
.byt    $C8,$C8,$C8,$C8,$C8,$C8,$E5,$44; 0xc267 $8257 C8 C8 C8 C8 C8 C8 E5 44  ;
.byt    $C8,$C8,$C8,$C8,$C8,$C8,$E5,$44; 0xc26f $825F C8 C8 C8 C8 C8 C8 E5 44  ;
.byt    $44                            ; 0xc277 $8267 44                       ;
bank3_Table_for_Portal_Wall_Tile_Codes_Offset                                  ;
.byt    $1A,$35,$50,$6B                ; 0xc278 $8268 1A 35 50 6B              ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Portal_to_Left_00                       ;
ldy      #$00                          ; 0xc27c $826C A0 00                    ; Y = 00
beq      L827A                         ; 0xc27e $826E F0 0A                    ;
bank3_SmallObjectsConstructionRoutines_Portal_to_Right_01                      ;
ldy      #$01                          ; 0xc280 $8270 A0 01                    ; Y = 01
bne      L827A                         ; 0xc282 $8272 D0 06                    ;
bank3_SmallObjectsConstructionRoutines_Wall_to_Left_02                         ;
ldy      #$02                          ; 0xc284 $8274 A0 02                    ; Y = 02
bne      L827A                         ; 0xc286 $8276 D0 02                    ;
bank3_SmallObjectsConstructionRoutines_Wall_to_Right_03                        ;
ldy      #$03                          ; 0xc288 $8278 A0 03                    ; Y = 03
L827A                                                                          ;
ldx      bank3_Table_for_Portal_Wall_Tile_Codes_Offset,y; 0xc28a $827A BE 68 82; refer to table at $C268		03:827A
lda      #$1A                          ; 0xc28d $827D A9 1A                    ; A = 1A
sta      L0000                         ; 0xc28f $827F 85 00                    ;
lda      $0730                         ; 0xc291 $8281 AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xc294 $8284 29 0F                    ; keep bits .... xxxx
ora      #$20                          ; 0xc296 $8286 09 20                    ; set bits  ..x. ....
sta      $0730                         ; 0xc298 $8288 8D 30 07                 ; Position of Object Placement
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc29b $828B 20 44 C9           ; Set RAM Address for Object (0E-0F)
L828E                                                                          ;
lda      bank3_Tile_Codes_for_Portals_and_Walls,x; 0xc29e $828E BD FC 81       ;
cmp      #$44                          ; 0xc2a1 $8291 C9 44                    ;
beq      L8297                         ; 0xc2a3 $8293 F0 02                    ;
sta      (L000E),y                     ; 0xc2a5 $8295 91 0E                    ;
L8297                                                                          ;
dec      L0000                         ; 0xc2a7 $8297 C6 00                    ;
dex                                    ; 0xc2a9 $8299 CA                       ;
jsr      LDF58                         ; 0xc2aa $829A 20 58 DF                 ; Go down 1 row
cmp      #$B0                          ; 0xc2ad $829D C9 B0                    ;
bcc      L828E                         ; 0xc2af $829F 90 ED                    ;
inc      $0730                         ; 0xc2b1 $82A1 EE 30 07                 ; Position of Object Placement
ldy      $0730                         ; 0xc2b4 $82A4 AC 30 07                 ;; Position of Object Placement
lda      L0000                         ; 0xc2b7 $82A7 A5 00                    ;
cmp      #$FF                          ; 0xc2b9 $82A9 C9 FF                    ;
bne      L828E                         ; 0xc2bb $82AB D0 E1                    ;
rts                                    ; 0xc2bd $82AD 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_table0                                                                   ;
.byt    $4D,$4C,$4B,$4B                ; 0xc2be $82AE 4D 4C 4B 4B              ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Table__08                               ;
ldx      #$03                          ; 0xc2c2 $82B2 A2 03                    ; X = 03
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc2c4 $82B4 20 44 C9           ; Set RAM Address for Object (0E-0F)
L82B7                                                                          ;
lda      bank3_table0,x                ; 0xc2c7 $82B7 BD AE 82                 ; refer to table at $C2AE
sta      (L000E),y                     ; 0xc2ca $82BA 91 0E                    ;
iny                                    ; 0xc2cc $82BC C8                       ;
dex                                    ; 0xc2cd $82BD CA                       ;
lda      bank3_table0,x                ; 0xc2ce $82BE BD AE 82                 ;
jsr      bank7_Set_tile_and_go_down_1_row_in_2x2_tiles_units; 0xc2d1 $82C1 20 4A DF; Set tile and go down 1 row
tay                                    ; 0xc2d4 $82C4 A8                       ;
dex                                    ; 0xc2d5 $82C5 CA                       ;
bpl      L82B7                         ; 0xc2d6 $82C6 10 EF                    ;
rts                                    ; 0xc2d8 $82C8 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_table1                                                                   ;
.byt    $EA,$90,$8F,$EA,$8E,$8D        ; 0xc2d9 $82C9 EA 90 8F EA 8E 8D        ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Fireplace_04                            ;
ldx      #$05                          ; 0xc2df $82CF A2 05                    ; X = 05				;$82CF
lda      $0730                         ; 0xc2e1 $82D1 AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xc2e4 $82D4 29 0F                    ; keep bits .... xxxx
ora      #$90                          ; 0xc2e6 $82D6 09 90                    ; set bits  x..x ....
sta      $0730                         ; 0xc2e8 $82D8 8D 30 07                 ; Position of Object Placement
L82DB                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc2eb $82DB 20 44 C9           ; Set RAM Address for Object (0E-0F)
L82DE                                                                          ;
lda      bank3_table1,x                ; 0xc2ee $82DE BD C9 82                 ; refer to table at $C2C9
sta      (L000E),y                     ; 0xc2f1 $82E1 91 0E                    ;
dex                                    ; 0xc2f3 $82E3 CA                       ;
jsr      LDF58                         ; 0xc2f4 $82E4 20 58 DF                 ; Go down 1 row
and      #$F0                          ; 0xc2f7 $82E7 29 F0                    ; keep bits xxxx ....
cmp      #$C0                          ; 0xc2f9 $82E9 C9 C0                    ;
bcc      L82DE                         ; 0xc2fb $82EB 90 F1                    ;
inc      $0730                         ; 0xc2fd $82ED EE 30 07                 ; Position of Object Placement
cpx      #$FF                          ; 0xc300 $82F0 E0 FF                    ;
bne      L82DB                         ; 0xc302 $82F2 D0 E7                    ;
rts                                    ; 0xc304 $82F4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Undefined_Object_2_wide_extending_to_ground_04 ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc305 $82F5 20 44 C9           ; Set RAM Address for Object (0E-0F)
L82F8                                                                          ;
lda      #$49                          ; 0xc308 $82F8 A9 49                    ; A = 49
sta      (L000E),y                     ; 0xc30a $82FA 91 0E                    ;
iny                                    ; 0xc30c $82FC C8                       ;
lda      #$49                          ; 0xc30d $82FD A9 49                    ; A = 49
jsr      bank7_Set_tile_and_go_down_1_row_in_2x2_tiles_units; 0xc30f $82FF 20 4A DF; Go down 1 row
tay                                    ; 0xc312 $8302 A8                       ;
and      #$F0                          ; 0xc313 $8303 29 F0                    ; keep bits xxxx ....
cmp      #$B0                          ; 0xc315 $8305 C9 B0                    ;
bcc      L82F8                         ; 0xc317 $8307 90 EF                    ;
rts                                    ; 0xc319 $8309 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Water_X_wide_Y_Position_A___7x             ;
lda      $0730                         ; 0xc31a $830A AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xc31d $830D 29 0F                    ; keep bits .... xxxx
ora      #$B0                          ; 0xc31f $830F 09 B0                    ; set bits  x.xx ....
sta      $0730                         ; 0xc321 $8311 8D 30 07                 ; Position of Object Placement
lda      #$40                          ; 0xc324 $8314 A9 40                    ; A = 40
sta      L0000                         ; 0xc326 $8316 85 00                    ;
L8318                                                                          ;
lda      $0731                         ; 0xc328 $8318 AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xc32b $831B 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xc32d $831D AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc32e $831E 20 44 C9           ;
L8321                                                                          ;
lda      L0000                         ; 0xc331 $8321 A5 00                    ;
jsr      bank7_Set_tile_and_move_right_1_column; 0xc333 $8323 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xc336 $8326 CA                       ;
bpl      L8321                         ; 0xc337 $8327 10 F8                    ;
lda      #$92                          ; 0xc339 $8329 A9 92                    ; A = 92
sta      L0000                         ; 0xc33b $832B 85 00                    ;
jsr      LDF4C                         ; 0xc33d $832D 20 4C DF                 ;
and      #$F0                          ; 0xc340 $8330 29 F0                    ; keep bits xxxx ....
cmp      #$D0                          ; 0xc342 $8332 C9 D0                    ;
bcc      L8318                         ; 0xc344 $8334 90 E2                    ;
rts                                    ; 0xc346 $8336 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Tile_Codes_for_Special_Object_2x                                         ;
.byt    $D3,$CC,$CC                    ; 0xc347 $8337 D3 CC CC                 ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Background_wall_3_wide_X_high_Y_Position_4_2x ;
lda      $0731                         ; 0xc34a $833A AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xc34d $833D 29 0F                    ; keep bits .... xxxx
sta      $0731                         ; 0xc34f $833F 8D 31 07                 ;; Level Object Type and Size
lda      $0730                         ; 0xc352 $8342 AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xc355 $8345 29 0F                    ; keep bits .... xxxx
ora      #$40                          ; 0xc357 $8347 09 40                    ; set bits  .x.. ....
sta      $0730                         ; 0xc359 $8349 8D 30 07                 ;; Position of Object Placement
L834C                                                                          ;
ldx      #$02                          ; 0xc35c $834C A2 02                    ; X = 02
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc35e $834E 20 44 C9           ; Set RAM Address for Object (0E-0F)
L8351                                                                          ;
lda      bank3_Tile_Codes_for_Special_Object_2x,x; 0xc361 $8351 BD 37 83       ; refer to table at $C337
sta      (L000E),y                     ; 0xc364 $8354 91 0E                    ;
iny                                    ; 0xc366 $8356 C8                       ;
dex                                    ; 0xc367 $8357 CA                       ;
bpl      L8351                         ; 0xc368 $8358 10 F7                    ;
jsr      LDF4C                         ; 0xc36a $835A 20 4C DF                 ; Go down 1 row
dec      $0731                         ; 0xc36d $835D CE 31 07                 ; Level Object Type and Size
bpl      L834C                         ; 0xc370 $8360 10 EA                    ;
rts                                    ; 0xc372 $8362 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Tile_Codes_for_Bridge_with_Water                                         ;
.byt    $92,$56,$51                    ; 0xc373 $8363 92 56 51                 ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Bridge_with_Water_X_wide_Y_Position_A_6x   ;
lda      #$02                          ; 0xc376 $8366 A9 02                    ; A = 02
L8368                                                                          ;
sta      L0000                         ; 0xc378 $8368 85 00                    ;
lda      $0730                         ; 0xc37a $836A AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xc37d $836D 29 0F                    ; keep bits .... xxxx
ora      #$A0                          ; 0xc37f $836F 09 A0                    ; set  bits x.x. ....
sta      $0730                         ; 0xc381 $8371 8D 30 07                 ; Position of Object Placement
L8374                                                                          ;
ldx      L0000                         ; 0xc384 $8374 A6 00                    ;
lda      bank3_Tile_Codes_for_Bridge_with_Water,x; 0xc386 $8376 BD 63 83       ;
sta      $01                           ; 0xc389 $8379 85 01                    ;
lda      $0731                         ; 0xc38b $837B AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xc38e $837E 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xc390 $8380 AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc391 $8381 20 44 C9           ; Set RAM Address for Object (0E-0F)
L8384                                                                          ;
lda      $01                           ; 0xc394 $8384 A5 01                    ;
jsr      bank7_Set_tile_and_move_right_1_column; 0xc396 $8386 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xc399 $8389 CA                       ;
bpl      L8384                         ; 0xc39a $838A 10 F8                    ;
jsr      LDF4C                         ; 0xc39c $838C 20 4C DF                 ; Go down 1 row
dec      L0000                         ; 0xc39f $838F C6 00                    ;
bpl      L8374                         ; 0xc3a1 $8391 10 E1                    ;
rts                                    ; 0xc3a3 $8393 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Tile_Codes_for_Doors                                                     ;
.byt    $53,$8B,$8A,$89,$54,$91,$91,$8C; 0xc3a4 $8394 53 8B 8A 89 54 91 91 8C  ;
.byt    $EA,$91,$91,$8C,$58            ; 0xc3ac $839C EA 91 91 8C 58           ;
L83A1                                                                          ;
.byt    $91,$91,$8C                    ; 0xc3b1 $83A1 91 91 8C                 ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Closed_Door_with_Grass_00               ;
lda      #$00                          ; 0xc3b4 $83A4 A9 00                    ; A = 00
beq      L83B2                         ; 0xc3b6 $83A6 F0 0A                    ;
bank3_SmallObjectsConstructionRoutines_Open_Door_with_Grass_01                 ;
lda      #$01                          ; 0xc3b8 $83A8 A9 01                    ; A = 01
bne      L83B2                         ; 0xc3ba $83AA D0 06                    ;
bank3_SmallObjectsConstructionRoutines_Open_Door_with_Lines_02                 ;
lda      #$02                          ; 0xc3bc $83AC A9 02                    ; A = 02
bne      L83B2                         ; 0xc3be $83AE D0 02                    ;
bank3_SmallObjectsConstructionRoutines_Open_Door_with_Bricks_03                ;
lda      #$03                          ; 0xc3c0 $83B0 A9 03                    ; A = 03
L83B2                                                                          ;
asl                                    ; 0xc3c2 $83B2 0A                       ;
asl                                    ; 0xc3c3 $83B3 0A                       ;
ora      #$03                          ; 0xc3c4 $83B4 09 03                    ; set  bits .... ..xx
tax                                    ; 0xc3c6 $83B6 AA                       ;
lda      #$03                          ; 0xc3c7 $83B7 A9 03                    ; A = 03
sta      L0000                         ; 0xc3c9 $83B9 85 00                    ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc3cb $83BB 20 44 C9           ; Set RAM Address for Object (0E-0F)
L83BE                                                                          ;
lda      bank3_Tile_Codes_for_Doors,x  ; 0xc3ce $83BE BD 94 83                 ;
jsr      LDF56                         ; 0xc3d1 $83C1 20 56 DF                 ; Set tile and go down 1 row
dex                                    ; 0xc3d4 $83C4 CA                       ;
dec      L0000                         ; 0xc3d5 $83C5 C6 00                    ;
bpl      L83BE                         ; 0xc3d7 $83C7 10 F5                    ;
rts                                    ; 0xc3d9 $83C9 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Table_2_for_Area_Objects_Tile_Mappings                                   ;
.byt    $42,$42,$42,$42,$42            ; 0xc3da $83CA 42 42 42 42 42           ;
L83CF                                                                          ;
.byt    $42,$FF,$FF,$37,$37,$37,$37,$37; 0xc3df $83CF 42 FF FF 37 37 37 37 37  ;
.byt    $37,$FF,$FF,$45,$45,$45,$45,$45; 0xc3e7 $83D7 37 FF FF 45 45 45 45 45  ;
.byt    $FF,$45,$FF,$5F,$5F,$5F,$5F,$3C; 0xc3ef $83DF FF 45 FF 5F 5F 5F 5F 3C  ;
.byt    $3D,$3E,$3F,$3D,$3D,$3F,$3F,$49; 0xc3f7 $83E7 3D 3E 3F 3D 3D 3F 3F 49  ;
.byt    $40,$4A,$40,$40,$41,$40,$40,$40; 0xc3ff $83EF 40 4A 40 40 41 40 40 40  ;
.byt    $47,$40,$48,$49,$FF,$4A,$FF,$55; 0xc407 $83F7 47 40 48 49 FF 4A FF 55  ;
.byt    $55,$55,$F4,$55,$55,$F4,$F4,$55; 0xc40f $83FF 55 55 F4 55 55 F4 F4 55  ;
.byt    $F4,$55                        ; 0xc417 $8407 F4 55                    ;
L8409                                                                          ;
.byt    $55,$F4,$F4,$55,$55,$FF,$FF,$FF; 0xc419 $8409 55 F4 F4 55 55 FF FF FF  ;
.byt    $FF,$98,$99,$98,$99,$A5,$A5,$A6; 0xc421 $8411 FF 98 99 98 99 A5 A5 A6  ;
.byt    $A6,$8E,$8F,$90,$91,$AF,$B0,$B1; 0xc429 $8419 A6 8E 8F 90 91 AF B0 B1  ;
.byt    $B2,$2C,$2D,$F5,$F5,$F5,$F5,$2E; 0xc431 $8421 B2 2C 2D F5 F5 F5 F5 2E  ;
.byt    $2F,$9A,$9B,$9A,$9B            ; 0xc439 $8429 2F 9A 9B 9A 9B           ;
bank3_Table_3_for_Area_Objects_Tile_Mappings                                   ;
.byt    $57,$56,$F4,$57,$56,$56,$56,$56; 0xc43e $842E 57 56 F4 57 56 56 56 56  ;
.byt    $56,$58,$56,$59,$58,$FF,$59,$FF; 0xc446 $8436 56 58 56 59 58 FF 59 FF  ;
.byt    $B3,$B4,$B5,$B6,$B5,$B6,$B7,$B8; 0xc44e $843E B3 B4 B5 B6 B5 B6 B7 B8  ;
.byt    $B7,$B8,$F4,$F4,$F4,$5B,$5B,$5A; 0xc456 $8446 B7 B8 F4 F4 F4 5B 5B 5A  ;
.byt    $5A,$5A,$5A,$5A,$5A,$5C,$5A,$5D; 0xc45e $844E 5A 5A 5A 5A 5A 5C 5A 5D  ;
.byt    $5C,$FF,$5D,$FF,$54,$54,$54,$54; 0xc466 $8456 5C FF 5D FF 54 54 54 54  ;
.byt    $55,$55,$55,$55,$43,$43,$43,$43; 0xc46e $845E 55 55 55 55 43 43 43 43  ;
.byt    $43,$43,$FF,$FF,$46,$46,$46,$46; 0xc476 $8466 43 43 FF FF 46 46 46 46  ;
.byt    $46,$FF                        ; 0xc47e $846E 46 FF                    ;
L8470                                                                          ;
.byt    $46,$FF,$38,$39,$3A,$3B,$39,$39; 0xc480 $8470 46 FF 38 39 3A 3B 39 39  ;
.byt    $3B,$3B,$F4,$F4,$F4,$F4,$FD,$FD; 0xc488 $8478 3B 3B F4 F4 F4 F4 FD FD  ;
.byt    $FD,$FD,$FE,$FE,$FE,$FE,$FF,$FF; 0xc490 $8480 FD FD FE FE FE FE FF FF  ;
.byt    $FF,$FF,$F4,$74,$F4,$75,$F4,$75; 0xc498 $8488 FF FF F4 74 F4 75 F4 75  ;
.byt    $F4,$75,$F4,$7A,$77,$78,$7B,$75; 0xc4a0 $8490 F4 75 F4 7A 77 78 7B 75  ;
.byt    $79,$75,$F4,$75,$F4,$76,$AD,$AE; 0xc4a8 $8498 79 75 F4 75 F4 76 AD AE  ;
.byt    $F4,$F4,$28,$29,$2A,$2B,$F4,$F4; 0xc4b0 $84A0 F4 F4 28 29 2A 2B F4 F4  ;
.byt    $F4,$30,$30,$31,$31,$30,$30,$49; 0xc4b8 $84A8 F4 30 30 31 31 30 30 49  ;
.byt    $31,$4A,$F4,$31,$F4,$F4,$30,$30; 0xc4c0 $84B0 31 4A F4 31 F4 F4 30 30  ;
.byt    $31,$31,$F4,$50,$F4,$51,$60,$60; 0xc4c8 $84B8 31 31 F4 50 F4 51 60 60  ;
.byt    $61,$61,$F4,$5B,$5B,$5A,$5A,$5A; 0xc4d0 $84C0 61 61 F4 5B 5B 5A 5A 5A  ;
.byt    $5A,$5A,$57,$56,$F4,$57,$56,$56; 0xc4d8 $84C8 5A 5A 57 56 F4 57 56 56  ;
.byt    $56,$56,$5E,$5E,$5E,$5E,$5E,$5E; 0xc4e0 $84D0 56 56 5E 5E 5E 5E 5E 5E  ;
L84D8                                                                          ;
.byt    $5E,$5E                        ; 0xc4e8 $84D8 5E 5E                    ;
bank3_UNUSED_84DA                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xc4ea $84DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xc4f2 $84E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xc4fa $84EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xc502 $84F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0xc50a $84FA FF FF FF FF FF FF        ;
; ---------------------------------------------------------------------------- ;
bank3_Pointer_table_for_Objects_Tile_Mappings                                  ;
.word    bank3_Table_0_1_for_Area_Objects_Tile_Mappings; 0xc510 $8500 A2 86    ;
.word    bank3_Table_0_1_for_Area_Objects_Tile_Mappings; 0xc512 $8502 A2 86    ;
.word    bank3_Table_2_for_Area_Objects_Tile_Mappings; 0xc514 $8504 CA 83      ;
.word    bank3_Table_3_for_Area_Objects_Tile_Mappings; 0xc516 $8506 2E 84      ;
; ---------------------------------------------------------------------------- ;
bank3_unused_table                                                             ;
.byt    $FF                            ; 0xc518 $8508 FF                       ;
L8509                                                                          ;
.byt    $FF,$FF,$FF                    ; 0xc519 $8509 FF FF FF                 ;
; ---------------------------------------------------------------------------- ;
bank3_code7                                                                    ;
pha                                    ; 0xc51c $850C 48                       ;
and      #$C0                          ; 0xc51d $850D 29 C0                    ; keep bits xx.. ....
clc                                    ; 0xc51f $850F 18                       ;
rol                                    ; 0xc520 $8510 2A                       ;
rol                                    ; 0xc521 $8511 2A                       ;
rol                                    ; 0xc522 $8512 2A                       ;
tay                                    ; 0xc523 $8513 A8                       ;
dey                                    ; 0xc524 $8514 88                       ;
pla                                    ; 0xc525 $8515 68                       ;
cmp      L870E,y                       ; 0xc526 $8516 D9 0E 87                 ;
rts                                    ; 0xc529 $8519 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_table3                                                                   ;
.byt    $54                            ; 0xc52a $851A 54                       ;
L851B                                                                          ;
.byt    $EA                            ; 0xc52b $851B EA                       ;
L851C                                                                          ;
.byt    $58,$59                        ; 0xc52c $851C 58 59                    ;
L851E                                                                          ;
.byt    $00                            ; 0xc52e $851E 00                       ;
L851F                                                                          ;
.byt    $00                            ; 0xc52f $851F 00                       ;
L8520                                                                          ;
.byt    $92                            ; 0xc530 $8520 92                       ;
L8521                                                                          ;
.byt    $00                            ; 0xc531 $8521 00                       ;
L8522                                                                          ;
.byt    $00                            ; 0xc532 $8522 00                       ;
; ---------------------------------------------------------------------------- ;
bank3_Area_Pointers__Towns                                                     ;
.word    bank3_Area_Data_Towns1        ; 0xc533 $8523 C0 89                    ;
.word    bank3_Area_Data_Towns1        ; 0xc535 $8525 C0 89                    ;
.word    L89F6                         ; 0xc537 $8527 F6 89                    ;
.word    L8A28                         ; 0xc539 $8529 28 8A                    ;
.word    L8A28                         ; 0xc53b $852B 28 8A                    ;
.word    L8A48                         ; 0xc53d $852D 48 8A                    ;
.word    L8A76                         ; 0xc53f $852F 76 8A                    ;
.word    L8A90                         ; 0xc541 $8531 90 8A                    ;
.word    L8AC4                         ; 0xc543 $8533 C4 8A                    ;
.word    L8AE8                         ; 0xc545 $8535 E8 8A                    ;
.word    L8B10                         ; 0xc547 $8537 10 8B                    ;
.word    L8B48                         ; 0xc549 $8539 48 8B                    ;
.word    bank3_Area_Data_Towns4        ; 0xc54b $853B 00 A0                    ;
.word    LA02C                         ; 0xc54d $853D 2C A0                    ;
.word    LA05A                         ; 0xc54f $853F 5A A0                    ;
.word    LA08C                         ; 0xc551 $8541 8C A0                    ;
.word    LA0C4                         ; 0xc553 $8543 C4 A0                    ;
.word    LA100                         ; 0xc555 $8545 00 A1                    ;
.word    LA144                         ; 0xc557 $8547 44 A1                    ;
.word    LA180                         ; 0xc559 $8549 80 A1                    ;
.word    LA1BC                         ; 0xc55b $854B BC A1                    ;
.word    LA1C6                         ; 0xc55d $854D C6 A1                    ;
.word    LA1EA                         ; 0xc55f $854F EA A1                    ;
.word    LA214                         ; 0xc561 $8551 14 A2                    ;
.word    L8B82                         ; 0xc563 $8553 82 8B                    ;
.word    bank3_Area_Data_Towns3        ; 0xc565 $8555 C2 9C                    ;
L8558     = * + $0001                                                          ;
.word    bank3_Area_Data               ; 0xc567 $8557 F0 90                    ;
.word    bank3_Area_Data               ; 0xc569 $8559 F0 90                    ;
.word    bank3_Area_Data_Towns3        ; 0xc56b $855B C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc56d $855D C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc56f $855F C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc571 $8561 C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc573 $8563 C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc575 $8565 C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc577 $8567 C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc579 $8569 C2 9C                    ;
.word    bank3_Background_Areas_Data   ; 0xc57b $856B 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc57d $856D 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc57f $856F 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc581 $8571 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc583 $8573 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc585 $8575 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc587 $8577 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc589 $8579 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc58b $857B 48 9B                    ;
.word    bank3_Background_Areas_Data   ; 0xc58d $857D 48 9B                    ;
.word    bank3_Area_Data_Towns2        ; 0xc58f $857F 74 9B                    ;
.word    L9B7D                         ; 0xc591 $8581 7D 9B                    ;
.word    bank3_Area_Data               ; 0xc593 $8583 F0 90                    ;
.word    bank3_Area_Data               ; 0xc595 $8585 F0 90                    ;
.word    bank3_Area_Data               ; 0xc597 $8587 F0 90                    ;
.word    bank3_Area_Data               ; 0xc599 $8589 F0 90                    ;
.word    bank3_Area_Data               ; 0xc59b $858B F0 90                    ;
.word    bank3_Area_Data               ; 0xc59d $858D F0 90                    ;
.word    bank3_Area_Data               ; 0xc59f $858F F0 90                    ;
.word    bank3_Area_Data               ; 0xc5a1 $8591 F0 90                    ;
.word    bank3_Area_Data               ; 0xc5a3 $8593 F0 90                    ;
.word    bank3_Area_Data               ; 0xc5a5 $8595 F0 90                    ;
.word    bank3_Area_Data               ; 0xc5a7 $8597 F0 90                    ;
.word    bank3_Area_Data               ; 0xc5a9 $8599 F0 90                    ;
.word    L8A66                         ; 0xc5ab $859B 66 8A                    ;
.word    bank3_Area_Data_Towns3        ; 0xc5ad $859D C2 9C                    ;
.word    bank3_Area_Data_Towns3        ; 0xc5af $859F C2 9C                    ;
bank3_Enemy_Pointers__Towns                                                    ;
.word    L7000                         ; 0xc5b1 $85A1 00 70                    ;; Enemy Data
.word    L7000                         ; 0xc5b3 $85A3 00 70                    ;; Enemy Data
.word    L700D                         ; 0xc5b5 $85A5 0D 70                    ;
.word    L7018                         ; 0xc5b7 $85A7 18 70                    ;
.word    L7018                         ; 0xc5b9 $85A9 18 70                    ;
.word    L7025                         ; 0xc5bb $85AB 25 70                    ;
.word    L7033                         ; 0xc5bd $85AD 33 70                    ;
.word    L7036                         ; 0xc5bf $85AF 36 70                    ;
.word    L7041                         ; 0xc5c1 $85B1 41 70                    ;
.word    L704C                         ; 0xc5c3 $85B3 4C 70                    ;
.word    L7057                         ; 0xc5c5 $85B5 57 70                    ;
.word    L7062                         ; 0xc5c7 $85B7 62 70                    ;
.word    L7091                         ; 0xc5c9 $85B9 91 70                    ;
.word    L709C                         ; 0xc5cb $85BB 9C 70                    ;
.word    L70A9                         ; 0xc5cd $85BD A9 70                    ;
.word    L70B2                         ; 0xc5cf $85BF B2 70                    ;
.word    L70BF                         ; 0xc5d1 $85C1 BF 70                    ;
.word    L70C8                         ; 0xc5d3 $85C3 C8 70                    ;
.word    L70D5                         ; 0xc5d5 $85C5 D5 70                    ;
.word    L70E4                         ; 0xc5d7 $85C7 E4 70                    ;
.word    L70EF                         ; 0xc5d9 $85C9 EF 70                    ;
.word    L70F0                         ; 0xc5db $85CB F0 70                    ;
.word    L70F0                         ; 0xc5dd $85CD F0 70                    ;
.word    L710F                         ; 0xc5df $85CF 0F 71                    ;
.word    L7032                         ; 0xc5e1 $85D1 32 70                    ;
.word    L7032                         ; 0xc5e3 $85D3 32 70                    ;
.word    L710C                         ; 0xc5e5 $85D5 0C 71                    ;
.word    L70EF                         ; 0xc5e7 $85D7 EF 70                    ;
.word    L707B                         ; 0xc5e9 $85D9 7B 70                    ;
.word    L7080                         ; 0xc5eb $85DB 80 70                    ;
.word    L7085                         ; 0xc5ed $85DD 85 70                    ;
.word    L7070                         ; 0xc5ef $85DF 70 70                    ;
.word    L7101                         ; 0xc5f1 $85E1 01 71                    ;
.word    L7106                         ; 0xc5f3 $85E3 06 71                    ;
.word    L7109                         ; 0xc5f5 $85E5 09 71                    ;
.word    L711D                         ; 0xc5f7 $85E7 1D 71                    ;
.word    L7075                         ; 0xc5f9 $85E9 75 70                    ;
.word    L7075                         ; 0xc5fb $85EB 75 70                    ;
.word    L7075                         ; 0xc5fd $85ED 75 70                    ;
.word    L7075                         ; 0xc5ff $85EF 75 70                    ;
.word    L7075                         ; 0xc601 $85F1 75 70                    ;
.word    L7075                         ; 0xc603 $85F3 75 70                    ;
.word    L7075                         ; 0xc605 $85F5 75 70                    ;
.word    L7075                         ; 0xc607 $85F7 75 70                    ;
.word    L7078                         ; 0xc609 $85F9 78 70                    ;
.word    L7078                         ; 0xc60b $85FB 78 70                    ;
.word    L70EF                         ; 0xc60d $85FD EF 70                    ;
.word    L70EF                         ; 0xc60f $85FF EF 70                    ;
.word    L706D                         ; 0xc611 $8601 6D 70                    ;
.word    L7032                         ; 0xc613 $8603 32 70                    ;
.word    L7032                         ; 0xc615 $8605 32 70                    ;
.word    L7032                         ; 0xc617 $8607 32 70                    ;
.word    L70EF                         ; 0xc619 $8609 EF 70                    ;
.word    L70EF                         ; 0xc61b $860B EF 70                    ;
.word    L70EF                         ; 0xc61d $860D EF 70                    ;
.word    L70EF                         ; 0xc61f $860F EF 70                    ;
.word    L7032                         ; 0xc621 $8611 32 70                    ;
.word    L70EF                         ; 0xc623 $8613 EF 70                    ;
.word    L711A                         ; 0xc625 $8615 1A 71                    ;
.word    L70EF                         ; 0xc627 $8617 EF 70                    ;
.word    L708E                         ; 0xc629 $8619 8E 70                    ;
.word    L7000                         ; 0xc62b $861B 00 70                    ;; Enemy Data
.word    L7000                         ; 0xc62d $861D 00 70                    ;; Enemy Data
; ---------------------------------------------------------------------------- ;
bank3_Tables_for_Level_Layers_Data                                             ;
.byt    $42,$42,$42,$55,$42,$42,$55,$55; 0xc62f $861F 42 42 42 55 42 42 55 55  ;
.byt    $55,$40,$40,$40,$E9,$40,$40,$CB; 0xc637 $8627 55 40 40 40 E9 40 40 CB  ;
.byt    $CB,$E9,$40,$40,$40,$53,$40,$40; 0xc63f $862F CB E9 40 40 40 53 40 40  ;
.byt    $53,$53,$53,$40,$40,$40,$53,$40; 0xc647 $8637 53 53 53 40 40 40 53 40  ;
.byt    $40,$53,$53,$53                ; 0xc64f $863F 40 53 53 53              ;
bank3_Table_for_Level_Layers_Data_pointers                                     ;
.byt    $1F,$28,$31,$3A                ; 0xc653 $8643 1F 28 31 3A              ;Pointer created from 86 (C650) and a value from this table
; ---------------------------------------------------------------------------- ;
bank3_Build_a_pointer_with_86_and_a_value_from_C643                            ;
ldx      $010C                         ; 0xc657 $8647 AE 0C 01                 ;; Area Palette Group (Type of Area)	; Area Ground Type (0-7)
lda      bank3_Table_for_Level_Layers_Data_pointers,x; 0xc65a $864A BD 43 86   ;
sta      $0C                           ; 0xc65d $864D 85 0C                    ;
lda      #$86                          ; 0xc65f $864F A9 86                    ; A = 86
sta      $0D                           ; 0xc661 $8651 85 0D                    ;
ldy      #$08                          ; 0xc663 $8653 A0 08                    ; Y = 08
lda      ($0C),y                       ; 0xc665 $8655 B1 0C                    ;
sta      $010D                         ; 0xc667 $8657 8D 0D 01                 ;; Area Bottom Row Tile Code
rts                                    ; 0xc66a $865A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Bagu_maybe_confused_red_lumberjack__5x     ;
lda      $010A                         ; 0xc66b $865B AD 0A 01                 ;
sta      $0757                         ; 0xc66e $865E 8D 57 07                 ;; Position of Elevator in Map
rts                                    ; 0xc671 $8661 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Cloud__Long_06                          ;
ldx      #$00                          ; 0xc672 $8662 A2 00                    ; X = 00
beq      L866A                         ; 0xc674 $8664 F0 04                    ;
bank3_Tile_Codes_for_Clouds_LongShort                                          ;
.byt    $C5,$C6                        ; 0xc676 $8666 C5 C6                    ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Cloud__Short_07                         ;
ldx      #$01                          ; 0xc678 $8668 A2 01                    ; X = 01
L866A                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc67a $866A 20 44 C9           ;
lda      #$C4                          ; 0xc67d $866D A9 C4                    ; A = C4
sta      (L000E),y                     ; 0xc67f $866F 91 0E                    ;
iny                                    ; 0xc681 $8671 C8                       ;
lda      bank3_Tile_Codes_for_Clouds_LongShort,x; 0xc682 $8672 BD 66 86        ;
sta      (L000E),y                     ; 0xc685 $8675 91 0E                    ;
rts                                    ; 0xc687 $8677 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Churchbell_0D                           ;
ldx      #$02                          ; 0xc688 $8678 A2 02                    ; X = 02
bne      L8685                         ; 0xc68a $867A D0 09                    ;
bank3_SmallObjectsConstructionRoutines_Cross__0A                               ;
ldx      #$00                          ; 0xc68c $867C A2 00                    ; X = 00
beq      L8685                         ; 0xc68e $867E F0 05                    ;
L8680                                                                          ;
.byt    $DC                            ; 0xc690 $8680 DC                       ;
bank3_table4                                                                   ;
.byt    $4A,$DD                        ; 0xc691 $8681 4A DD                    ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Chair__05                               ;
ldx      #$01                          ; 0xc693 $8683 A2 01                    ; X = 01
L8685                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc695 $8685 20 44 C9           ; Set RAM Address for Object (0E-0F)
lda      L8680,x                       ; 0xc698 $8688 BD 80 86                 ;
sta      (L000E),y                     ; 0xc69b $868B 91 0E                    ;
rts                                    ; 0xc69d $868D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Tile_Codes_for_Bench                                                     ;
.byt    $48,$48,$47,$46,$46            ; 0xc69e $868E 48 48 47 46 46           ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Bench__09                               ;
ldx      #$04                          ; 0xc6a3 $8693 A2 04                    ; X = 04
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xc6a5 $8695 20 44 C9           ; Set RAM Address for Object (0E-0F)
L8698                                                                          ;
lda      bank3_Tile_Codes_for_Bench,x  ; 0xc6a8 $8698 BD 8E 86                 ;
sta      (L000E),y                     ; 0xc6ab $869B 91 0E                    ;
iny                                    ; 0xc6ad $869D C8                       ;
dex                                    ; 0xc6ae $869E CA                       ;
bpl      L8698                         ; 0xc6af $869F 10 F7                    ;
rts                                    ; 0xc6b1 $86A1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Table_0_1_for_Area_Objects_Tile_Mappings                                 ;
.byt    $F4,$F4,$F4,$F4,$F0,$F0,$F1,$F1; 0xc6b2 $86A2 F4 F4 F4 F4 F0 F0 F1 F1  ;
.byt    $52,$53,$53,$52,$53,$53,$54,$54; 0xc6ba $86AA 52 53 53 52 53 53 54 54  ;
.byt    $F4,$F4,$F4,$F4,$4C,$4D,$4E,$4F; 0xc6c2 $86B2 F4 F4 F4 F4 4C 4D 4E 4F  ;
.byt    $62,$63,$62,$F4,$62,$F4,$62,$F4; 0xc6ca $86BA 62 63 62 F4 62 F4 62 F4  ;
.byt    $62,$F4,$62,$63,$60,$61,$60,$61; 0xc6d2 $86C2 62 F4 62 63 60 61 60 61  ;
.byt    $6C,$6D,$6E,$6F,$69,$68,$69,$68; 0xc6da $86CA 6C 6D 6E 6F 69 68 69 68  ;
.byt    $6A,$6B,$6A,$F4,$6A,$F4,$6A,$6B; 0xc6e2 $86D2 6A 6B 6A F4 6A F4 6A 6B  ;
.byt    $44,$44,$44,$44,$44,$44,$FF,$FF; 0xc6ea $86DA 44 44 44 44 44 44 FF FF  ;
.byt    $C3,$C3,$C4,$C4,$F4,$7C,$F4,$7C; 0xc6f2 $86E2 C3 C3 C4 C4 F4 7C F4 7C  ;
.byt    $46,$FF,$46,$FF,$4B,$4B,$4B,$4B; 0xc6fa $86EA 46 FF 46 FF 4B 4B 4B 4B  ;
.byt    $4B,$4B,$4B,$4B,$70,$71,$72,$73; 0xc702 $86F2 4B 4B 4B 4B 70 71 72 73  ;
.byt    $7D,$F4,$7D,$F4,$46,$46,$46,$46; 0xc70a $86FA 7D F4 7D F4 46 46 46 46  ;
.byt    $46,$46,$46,$46,$42,$42,$42,$42; 0xc712 $8702 46 46 46 46 42 42 42 42  ;
.byt    $42,$42,$42,$42                ; 0xc71a $870A 42 42 42 42              ;
L870E                                                                          ;
.byt    $53,$FF,$E5,$FF,$FF,$FF,$FF,$FF; 0xc71e $870E 53 FF E5 FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF            ; 0xc726 $8716 FF FF FF FF FF           ;
bank3_Room_Connectivity_Data_size_unknown                                      ;
.byt    $FD,$FC,$FC,$FC,$FD,$00,$00,$08; 0xc72b $871B FD FC FC FC FD 00 00 08  ;
.byt    $07,$00,$00,$FD,$FD,$FC,$FC,$FC; 0xc733 $8723 07 00 00 FD FD FC FC FC  ;
.byt    $FD,$00,$00,$14,$13,$00,$00,$FD; 0xc73b $872B FD 00 00 14 13 00 00 FD  ;
.byt    $FC,$00,$00,$1C,$1B,$00,$00,$20; 0xc743 $8733 FC 00 00 1C 1B 00 00 20  ;
.byt    $1F,$00,$00,$FD,$FD,$00,$00,$28; 0xc74b $873B 1F 00 00 FD FD 00 00 28  ;
.byt    $27,$00,$00,$2C,$2B,$00,$00,$FD; 0xc753 $8743 27 00 00 2C 2B 00 00 FD  ;
.byt    $FD,$00,$00,$34,$33,$00,$00,$38; 0xc75b $874B FD 00 00 34 33 00 00 38  ;
.byt    $37,$00,$00,$FD,$FD,$00,$00,$40; 0xc763 $8753 37 00 00 FD FD 00 00 40  ;
.byt    $3F,$00,$00,$44,$43,$00,$00,$FD; 0xc76b $875B 3F 00 00 44 43 00 00 FD  ;
.byt    $FC,$00,$00,$4C,$4B,$00,$00,$50; 0xc773 $8763 FC 00 00 4C 4B 00 00 50  ;
.byt    $4F,$00,$00,$FD,$FD,$00,$00,$58; 0xc77b $876B 4F 00 00 FD FD 00 00 58  ;
.byt    $57,$00,$00,$5C,$5B,$00,$00,$FD; 0xc783 $8773 57 00 00 5C 5B 00 00 FD  ;
.byt    $FC,$00,$00,$FC,$00,$00,$00,$00; 0xc78b $877B FC 00 00 FC 00 00 00 00  ;
.byt    $00,$00,$4D,$4D,$00,$00,$00,$00; 0xc793 $8783 00 00 4D 4D 00 00 00 00  ;
.byt    $00,$05,$00,$09,$00,$12,$14,$00; 0xc79b $878B 00 05 00 09 00 12 14 00  ;
.byt    $1F,$1B,$1D,$1A,$00,$60,$2C,$00; 0xc7a3 $8793 1F 1B 1D 1A 00 60 2C 00  ;
L879B                                                                          ;
.byt    $00,$39,$32,$00,$00,$56,$46,$00; 0xc7ab $879B 00 39 32 00 00 56 46 00  ;
.byt    $57,$58,$50,$4A,$5D,$5A,$59,$58; 0xc7b3 $87A3 57 58 50 4A 5D 5A 59 58  ;
.byt    $C1,$00,$00,$00,$C5,$00,$00,$00; 0xc7bb $87AB C1 00 00 00 C5 00 00 00  ;
.byt    $C9,$00,$00,$00,$CD,$00,$00,$00; 0xc7c3 $87B3 C9 00 00 00 CD 00 00 00  ;
.byt    $D1,$00,$00,$00,$D5,$00,$00,$00; 0xc7cb $87BB D1 00 00 00 D5 00 00 00  ;
.byt    $6A,$00,$00,$00,$DD,$00,$00,$00; 0xc7d3 $87C3 6A 00 00 00 DD 00 00 00  ;
.byt    $E1,$00,$00,$00,$E5,$00,$00,$00; 0xc7db $87CB E1 00 00 00 E5 00 00 00  ;
.byt    $E9,$00,$00,$00,$50,$00,$00,$00; 0xc7e3 $87D3 E9 00 00 00 50 00 00 00  ;
.byt    $07,$90,$00,$00,$13,$94,$00,$00; 0xc7eb $87DB 07 90 00 00 13 94 00 00  ;
.byt    $21,$98,$00,$00,$27,$9C,$00,$00; 0xc7f3 $87E3 21 98 00 00 27 9C 00 00  ;
.byt    $37,$A0,$00,$00,$3F,$A4,$00,$00; 0xc7fb $87EB 37 A0 00 00 3F A4 00 00  ;
L87F3                                                                          ;
.byt    $00,$00,$00,$00,$5E,$AC,$00,$00; 0xc803 $87F3 00 00 00 00 5E AC 00 00  ;
.byt    $29,$B0,$00,$00,$43,$B4,$00,$00; 0xc80b $87FB 29 B0 00 00 43 B4 00 00  ;
.byt    $49,$B8,$00,$00,$00,$00,$00,$00; 0xc813 $8803 49 B8 00 00 00 00 00 00  ;
.byt    $FC,$FC,$FC,$FC,$00,$00,$00,$00; 0xc81b $880B FC FC FC FC 00 00 00 00  ;
.byt    $00,$00,$00,$00                ; 0xc823 $8813 00 00 00 00              ;
bank3_Door_Destinations_in_Towns                                               ;
.byt    $00,$00,$00,$00,$00,$71,$C0,$00; 0xc827 $8817 00 00 00 00 00 71 C0 00  ;
.byt    $00,$73,$00,$00,$00,$00,$00,$00; 0xc82f $881F 00 73 00 00 00 00 00 00  ;
.byt    $00,$00,$75,$C4,$76,$00,$00,$00; 0xc837 $8827 00 00 75 C4 76 00 00 00  ;
.byt    $00,$00,$7B,$79,$00,$7A,$00,$78; 0xc83f $882F 00 00 7B 79 00 7A 00 78  ;
.byt    $00,$C8,$00,$00,$00,$00,$00,$CC; 0xc847 $8837 00 C8 00 00 00 00 00 CC  ;
.byt    $00,$E0,$00,$00,$7E,$00,$00,$00; 0xc84f $883F 00 E0 00 00 7E 00 00 00  ;
.byt    $00,$00,$82,$00,$00,$00,$00,$D0; 0xc857 $8847 00 00 82 00 00 00 00 D0  ;
.byt    $00,$81,$00,$00,$00,$00,$00,$D4; 0xc85f $884F 00 81 00 00 00 00 00 D4  ;
.byt    $00,$00,$00,$E4,$00,$00,$86,$00; 0xc867 $8857 00 00 00 E4 00 00 86 00  ;
.byt    $00,$E8,$8B,$00,$00,$6A,$00,$00; 0xc86f $885F 00 E8 8B 00 00 6A 00 00  ;
.byt    $BC,$00,$00,$00,$00,$00,$85,$88; 0xc877 $8867 BC 00 00 00 00 00 85 88  ;
.byt    $8F,$8E,$00,$8D,$00,$8C,$DC,$00; 0xc87f $886F 8F 8E 00 8D 00 8C DC 00  ;
.byt    $7D,$00,$00,$00,$00,$00,$00,$00; 0xc887 $8877 7D 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$A8,$00,$00,$00,$00; 0xc88f $887F 00 00 00 A8 00 00 00 00  ;
bank3_UNUSED_8887                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xc897 $8887 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xc89f $888F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xc8a7 $8897 FF FF FF FF FF FF FF FF  ;
.byt    $FF                            ; 0xc8af $889F FF                       ;
bank3_Enemy_Data_Towns_                                                        ;
.byt    $0D,$7A,$22,$7F,$23,$79,$60,$72; 0xc8b0 $88A0 0D 7A 22 7F 23 79 60 72  ;
.byt    $94,$70,$E3,$7A,$DF,$0B,$7D,$17; 0xc8b8 $88A8 94 70 E3 7A DF 0B 7D 17  ;
.byt    $7F,$23,$72,$92,$70,$E3,$75,$E2; 0xc8c0 $88B0 7F 23 72 92 70 E3 75 E2  ;
.byt    $0D,$78,$22,$7F,$23,$7D,$51,$70; 0xc8c8 $88B8 0D 78 22 7F 23 7D 51 70  ;
.byt    $E3,$73,$D6,$7A,$DD,$0D,$7F,$23; 0xc8d0 $88C0 E3 73 D6 7A DD 0D 7F 23  ;
.byt    $79,$58,$7E,$5F,$75,$97,$70,$E3; 0xc8d8 $88C8 79 58 7E 5F 75 97 70 E3  ;
.byt    $76,$E2,$01,$03,$7C,$22,$0B,$79; 0xc8e0 $88D0 76 E2 01 03 7C 22 0B 79  ;
.byt    $17,$7F,$23,$7B,$58,$74,$A0,$70; 0xc8e8 $88D8 17 7F 23 7B 58 74 A0 70  ;
.byt    $E3,$0B,$7F,$23,$75,$54,$71,$D0; 0xc8f0 $88E0 E3 0B 7F 23 75 54 71 D0  ;
.byt    $70,$E3,$7A,$E2,$0B,$78,$21,$7F; 0xc8f8 $88E8 70 E3 7A E2 0B 78 21 7F  ;
.byt    $23,$70,$5F,$70,$E3,$71,$D5,$0B; 0xc900 $88F0 23 70 5F 70 E3 71 D5 0B  ;
.byt    $78,$18,$7F,$23,$7E,$62,$79,$9D; 0xc908 $88F8 78 18 7F 23 7E 62 79 9D  ;
.byt    $70,$E3,$0B,$7F,$23,$73,$60,$73; 0xc910 $8900 70 E3 0B 7F 23 73 60 73  ;
.byt    $97,$70,$E3,$79,$E1,$03,$74,$51; 0xc918 $8908 97 70 E3 79 E1 03 74 51  ;
.byt    $05,$73,$50,$7C,$8E,$03,$7C,$4F; 0xc920 $8910 05 73 50 7C 8E 03 7C 4F  ;
.byt    $03,$7C,$4D,$05,$75,$50,$75,$CE; 0xc928 $8918 03 7C 4D 05 75 50 75 CE  ;
.byt    $05,$75,$52,$7A,$8E,$09,$7A,$21; 0xc930 $8920 05 75 52 7A 8E 09 7A 21  ;
.byt    $75,$4D,$7A,$8B,$75,$CD,$03,$7C; 0xc938 $8928 75 4D 7A 8B 75 CD 03 7C  ;
.byt    $0D,$0B,$7F,$23,$70,$62,$75,$9F; 0xc940 $8930 0D 0B 7F 23 70 62 75 9F  ;
.byt    $70,$E3,$76,$D1,$0D,$7B,$17,$7F; 0xc948 $8938 70 E3 76 D1 0D 7B 17 7F  ;
.byt    $23,$79,$5D,$72,$A1,$70,$E3,$72; 0xc950 $8940 23 79 5D 72 A1 70 E3 72  ;
.byt    $D6,$09,$7D,$18,$7F,$23,$70,$E3; 0xc958 $8948 D6 09 7D 18 7F 23 70 E3  ;
.byt    $76,$E2,$0D,$74,$21,$7F,$23,$74; 0xc960 $8950 76 E2 0D 74 21 7F 23 74  ;
.byt    $60,$76,$90,$70,$E3,$73,$D5,$09; 0xc968 $8958 60 76 90 70 E3 73 D5 09  ;
.byt    $7F,$23,$77,$9D,$70,$E3,$78,$CC; 0xc970 $8960 7F 23 77 9D 70 E3 78 CC  ;
.byt    $0D,$79,$18,$7F,$23,$79,$57,$7C; 0xc978 $8968 0D 79 18 7F 23 79 57 7C  ;
.byt    $A0,$70,$E3,$78,$E1,$0F,$74,$22; 0xc980 $8970 A0 70 E3 78 E1 0F 74 22  ;
.byt    $7F,$23,$75,$55,$71,$51,$7C,$9E; 0xc988 $8978 7F 23 75 55 71 51 7C 9E  ;
.byt    $70,$E3,$75,$D8,$0B,$79,$17,$7F; 0xc990 $8980 70 E3 75 D8 0B 79 17 7F  ;
.byt    $23,$77,$5F,$76,$DD,$70,$E3,$01; 0xc998 $8988 23 77 5F 76 DD 70 E3 01  ;
.byt    $11,$78,$06,$5A,$06,$68,$46,$5A; 0xc9a0 $8990 11 78 06 5A 06 68 46 5A  ;
.byt    $46,$68,$86,$5A,$86,$68,$C6,$78; 0xc9a8 $8998 46 68 86 5A 86 68 C6 78  ;
L89A0                                                                          ;
.byt    $C6,$05,$75,$4E,$38,$8A,$03,$6D; 0xc9b0 $89A0 C6 05 75 4E 38 8A 03 6D  ;
.byt    $A2,$03,$79,$CC,$03,$76,$E1,$0B; 0xc9b8 $89A8 A2 03 79 CC 03 76 E1 0B  ;
.byt    $78,$06,$5A,$46,$68,$86,$76,$C6; 0xc9c0 $89B0 78 06 5A 46 68 86 76 C6  ;
.byt    $77,$E1,$03,$79,$52,$03,$79,$E2; 0xc9c8 $89B8 77 E1 03 79 52 03 79 E2  ;
bank3_Area_Data_Towns1                                                         ;
.byt    $36,$60,$A0,$01,$F7,$10,$F2,$10; 0xc9d0 $89C0 36 60 A0 01 F7 10 F2 10  ;
.byt    $F1,$06,$F2,$11,$24,$26,$40,$56; 0xc9d8 $89C8 F1 06 F2 11 24 26 40 56  ;
.byt    $51,$C1,$52,$C0,$80,$01,$52,$C1; 0xc9e0 $89D0 51 C1 52 C0 80 01 52 C1  ;
.byt    $F3,$11,$62,$3C,$80,$6C,$81,$B0; 0xc9e8 $89D8 F3 11 62 3C 80 6C 81 B0  ;
.byt    $82,$B0,$85,$00,$F6,$13,$34,$2C; 0xc9f0 $89E0 82 B0 85 00 F6 13 34 2C  ;
.byt    $50,$5C,$51,$C1,$52,$C1,$52,$C1; 0xc9f8 $89E8 50 5C 51 C1 52 C1 52 C1  ;
.byt    $52,$C1,$83,$00,$F7,$01        ; 0xca00 $89F0 52 C1 83 00 F7 01        ;
L89F6                                                                          ;
.byt    $32,$60,$A0,$01,$F0,$00,$F4,$13; 0xca06 $89F6 32 60 A0 01 F0 00 F4 13  ;
.byt    $66,$36,$80,$66,$81,$B0,$82,$00; 0xca0e $89FE 66 36 80 66 81 B0 82 00  ;
.byt    $82,$B0,$F3,$11,$64,$28,$80,$58; 0xca16 $8A06 82 B0 F3 11 64 28 80 58  ;
.byt    $81,$C0,$82,$C0,$83,$01,$F4,$11; 0xca1e $8A0E 81 C0 82 C0 83 01 F4 11  ;
.byt    $68,$28,$80,$58,$81,$C0,$83,$00; 0xca26 $8A16 68 28 80 58 81 C0 83 00  ;
.byt    $83,$C0,$F3,$11,$F3,$06,$F3,$11; 0xca2e $8A1E 83 C0 F3 11 F3 06 F3 11  ;
.byt    $F3,$10                        ; 0xca36 $8A26 F3 10                    ;
L8A28                                                                          ;
.byt    $20,$60,$A0,$09,$F8,$06,$5A,$29; 0xca38 $8A28 20 60 A0 09 F8 06 5A 29  ;
.byt    $60,$29,$81,$97,$84,$00,$5B,$27; 0xca40 $8A30 60 29 81 97 84 00 5B 27  ;
.byt    $60,$27,$81,$95,$83,$01,$58,$29; 0xca48 $8A38 60 27 81 95 83 01 58 29  ;
.byt    $60,$29,$81,$97,$84,$00,$FA,$01; 0xca50 $8A40 60 29 81 97 84 00 FA 01  ;
L8A48                                                                          ;
.byt    $1E,$60,$A0,$09,$F0,$00,$78,$73; 0xca58 $8A48 1E 60 A0 09 F0 00 78 73  ;
.byt    $82,$01,$5C,$27,$60,$27,$81,$95; 0xca60 $8A50 82 01 5C 27 60 27 81 95  ;
.byt    $82,$00,$57,$29,$60,$29,$81,$97; 0xca68 $8A58 82 00 57 29 60 29 81 97  ;
.byt    $84,$00,$E3,$00,$F6,$06        ; 0xca70 $8A60 84 00 E3 00 F6 06        ;
L8A66                                                                          ;
.byt    $10,$00,$A0,$11,$82,$E2,$A3,$F6; 0xca76 $8A66 10 00 A0 11 82 E2 A3 F6  ;
.byt    $F2,$08,$F1,$07,$F1,$09,$85,$E2; 0xca7e $8A6E F2 08 F1 07 F1 09 85 E2  ;
L8A76                                                                          ;
.byt    $1A,$60,$A0,$11,$FC,$06,$F8,$15; 0xca86 $8A76 1A 60 A0 11 FC 06 F8 15  ;
.byt    $E2,$00,$6C,$22,$80,$72,$81,$01; 0xca8e $8A7E E2 00 6C 22 80 72 81 01  ;
.byt    $F3,$77,$69,$22,$80,$72,$81,$01; 0xca96 $8A86 F3 77 69 22 80 72 81 01  ;
.byt    $F3,$01                        ; 0xca9e $8A8E F3 01                    ;
L8A90                                                                          ;
.byt    $34,$60,$A0,$11,$F0,$00,$36,$24; 0xcaa0 $8A90 34 60 A0 11 F0 00 36 24  ;
.byt    $50,$54,$51,$C1,$82,$00,$F3,$63; 0xcaa8 $8A98 50 54 51 C1 82 00 F3 63  ;
L8AA0                                                                          ;
.byt    $36,$24,$50,$54,$51,$C1,$82,$01; 0xcab0 $8AA0 36 24 50 54 51 C1 82 01  ;
.byt    $63,$24,$80,$74,$83,$00,$F3,$67; 0xcab8 $8AA8 63 24 80 74 83 00 F3 67  ;
.byt    $A9,$0A,$A1,$0A,$A2,$0A,$A1,$0A; 0xcac0 $8AB0 A9 0A A1 0A A2 0A A1 0A  ;
.byt    $A1,$0A,$A2,$0A,$F2,$63,$66,$74; 0xcac8 $8AB8 A1 0A A2 0A F2 63 66 74  ;
.byt    $83,$01,$F4,$01                ; 0xcad0 $8AC0 83 01 F4 01              ;
L8AC4                                                                          ;
.byt    $24,$60,$A0,$11,$F0,$00,$F6,$69; 0xcad4 $8AC4 24 60 A0 11 F0 00 F6 69  ;
.byt    $3C,$2A,$50,$5A,$51,$C1,$52,$C0; 0xcadc $8ACC 3C 2A 50 5A 51 C1 52 C0  ;
.byt    $80,$00,$52,$C1,$52,$C1,$52,$C1; 0xcae4 $8AD4 80 00 52 C1 52 C1 52 C1  ;
.byt    $F4,$67,$6A,$26,$80,$76,$83,$00; 0xcaec $8ADC F4 67 6A 26 80 76 83 00  ;
.byt    $F5,$67,$F9,$06                ; 0xcaf4 $8AE4 F5 67 F9 06              ;
L8AE8                                                                          ;
.byt    $28,$60,$A0,$19,$F8,$06,$6A,$78; 0xcaf8 $8AE8 28 60 A0 19 F8 06 6A 78  ;
.byt    $81,$A0,$83,$00,$83,$A0,$37,$2C; 0xcb00 $8AF0 81 A0 83 00 83 A0 37 2C  ;
.byt    $50,$7C,$51,$C1,$52,$C1,$82,$00; 0xcb08 $8AF8 50 7C 51 C1 52 C1 82 00  ;
.byt    $52,$C1,$52,$C1,$52,$C1,$65,$7A; 0xcb10 $8B00 52 C1 52 C1 52 C1 65 7A  ;
.byt    $81,$00,$84,$A0,$82,$A0,$F6,$01; 0xcb18 $8B08 81 00 84 A0 82 A0 F6 01  ;
L8B10                                                                          ;
.byt    $38,$60,$A0,$19,$F0,$00,$34,$28; 0xcb20 $8B10 38 60 A0 19 F0 00 34 28  ;
.byt    $50,$78,$51,$C1,$53,$C0,$80,$00; 0xcb28 $8B18 50 78 51 C1 53 C0 80 00  ;
.byt    $53,$C1,$63,$28,$80,$68,$81,$C0; 0xcb30 $8B20 53 C1 63 28 80 68 81 C0  ;
.byt    $82,$C0,$82,$C0,$82,$C0,$18,$72; 0xcb38 $8B28 82 C0 82 C0 82 C0 18 72  ;
.byt    $01,$0D,$E1,$00,$6B,$46,$80,$76; 0xcb40 $8B30 01 0D E1 00 6B 46 80 76  ;
.byt    $81,$C0,$82,$00,$30,$03,$82,$C0; 0xcb48 $8B38 81 C0 82 00 30 03 82 C0  ;
.byt    $6A,$28,$80,$78,$87,$00,$FC,$01; 0xcb50 $8B40 6A 28 80 78 87 00 FC 01  ;
L8B48                                                                          ;
.byt    $3A,$60,$A0,$19,$F0,$00,$66,$7C; 0xcb58 $8B48 3A 60 A0 19 F0 00 66 7C  ;
L8B50                                                                          ;
.byt    $81,$A0,$82,$A0,$82,$01,$84,$A0; 0xcb60 $8B50 81 A0 82 A0 82 01 84 A0  ;
.byt    $82,$A0,$35,$36,$50,$66,$51,$A1; 0xcb68 $8B58 82 A0 35 36 50 66 51 A1  ;
.byt    $52,$A0,$80,$00,$52,$A1,$62,$32; 0xcb70 $8B60 52 A0 80 00 52 A1 62 32  ;
.byt    $80                            ; 0xcb78 $8B68 80                       ;
L8B69                                                                          ;
.byt    $62,$81,$00,$32,$36,$50,$66,$51; 0xcb79 $8B69 62 81 00 32 36 50 66 51  ;
.byt    $A1,$52,$A0,$80,$00,$52,$A1,$67; 0xcb81 $8B71 A1 52 A0 80 00 52 A1 67  ;
.byt    $76,$81,$A0,$82,$A0,$82,$00,$F8; 0xcb89 $8B79 76 81 A0 82 A0 82 00 F8  ;
.byt    $06                            ; 0xcb91 $8B81 06                       ;
L8B82                                                                          ;
.byt    $0C,$00,$A0,$09,$F0,$1F,$64,$27; 0xcb92 $8B82 0C 00 A0 09 F0 1F 64 27  ;
.byt    $80,$97,$83,$01                ; 0xcb9a $8B8A 80 97 83 01              ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Locked_Door_glitched_tiles_0E           ;
lda      $010A                         ; 0xcb9e $8B8E AD 0A 01                 ;
sta      $0758                         ; 0xcba1 $8B91 8D 58 07                 ;; Position of Locked Door in Map
rts                                    ; 0xcba4 $8B94 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Bushes_1_high_X_wide_Y_Position_A__1x      ;
lda      $0731                         ; 0xcba5 $8B95 AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xcba8 $8B98 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xcbaa $8B9A AA                       ;
lda      $0730                         ; 0xcbab $8B9B AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xcbae $8B9E 29 0F                    ; keep bits .... xxxx
L8BA0                                                                          ;
ora      #$A0                          ; 0xcbb0 $8BA0 09 A0                    ; set  bits x.x. .... (height of bushes layer)
sta      $0730                         ; 0xcbb2 $8BA2 8D 30 07                 ;; Position of Object Placement
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xcbb5 $8BA5 20 44 C9           ;
L8BA8                                                                          ;
lda      #$45                          ; 0xcbb8 $8BA8 A9 45                    ; A = 45 (Tile Code for bushes)
jsr      bank7_Set_tile_and_move_right_1_column; 0xcbba $8BAA 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xcbbd $8BAD CA                       ;
bpl      L8BA8                         ; 0xcbbe $8BAE 10 F8                    ;
rts                                    ; 0xcbc0 $8BB0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_UNUSED_8BB1                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbc1 $8BB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0xcbc9 $8BB9 FF FF FF FF FF FF        ;
L8BBF                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbcf $8BBF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbd7 $8BC7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbdf $8BCF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbe7 $8BD7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbef $8BDF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbf7 $8BE7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcbff $8BEF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc07 $8BF7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc0f $8BFF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc17 $8C07 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc1f $8C0F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc27 $8C17 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc2f $8C1F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc37 $8C27 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc3f $8C2F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc47 $8C37 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc4f $8C3F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc57 $8C47 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc5f $8C4F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc67 $8C57 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc6f $8C5F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc77 $8C67 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc7f $8C6F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc87 $8C77 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc8f $8C7F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc97 $8C87 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcc9f $8C8F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcca7 $8C97 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccaf $8C9F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccb7 $8CA7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccbf $8CAF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccc7 $8CB7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcccf $8CBF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccd7 $8CC7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccdf $8CCF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcce7 $8CD7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF                        ; 0xccef $8CDF FF FF                    ;
L8CE1                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccf1 $8CE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xccf9 $8CE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd01 $8CF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd09 $8CF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd11 $8D01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd19 $8D09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd21 $8D11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd29 $8D19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd31 $8D21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd39 $8D29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd41 $8D31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd49 $8D39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd51 $8D41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd59 $8D49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd61 $8D51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd69 $8D59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd71 $8D61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd79 $8D69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd81 $8D71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd89 $8D79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd91 $8D81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcd99 $8D89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcda1 $8D91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcda9 $8D99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdb1 $8DA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdb9 $8DA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdc1 $8DB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdc9 $8DB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF                        ; 0xcdd1 $8DC1 FF FF                    ;
L8DC3                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdd3 $8DC3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcddb $8DCB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcde3 $8DD3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdeb $8DDB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdf3 $8DE3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcdfb $8DEB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce03 $8DF3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce0b $8DFB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce13 $8E03 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce1b $8E0B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce23 $8E13 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce2b $8E1B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce33 $8E23 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce3b $8E2B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce43 $8E33 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce4b $8E3B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce53 $8E43 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce5b $8E4B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce63 $8E53 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce6b $8E5B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce73 $8E63 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce7b $8E6B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce83 $8E73 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce8b $8E7B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce93 $8E83 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xce9b $8E8B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcea3 $8E93 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xceab $8E9B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xceb3 $8EA3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcebb $8EAB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcec3 $8EB3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcecb $8EBB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xced3 $8EC3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcedb $8ECB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcee3 $8ED3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xceeb $8EDB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcef3 $8EE3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcefb $8EEB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf03 $8EF3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf0b $8EFB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf13 $8F03 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf1b $8F0B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf23 $8F13 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf2b $8F1B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf33 $8F23 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf3b $8F2B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf43 $8F33 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf4b $8F3B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf53 $8F43 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf5b $8F4B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf63 $8F53 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf6b $8F5B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf73 $8F63 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf7b $8F6B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf83 $8F73 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf8b $8F7B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf93 $8F83 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcf9b $8F8B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfa3 $8F93 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfab $8F9B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfb3 $8FA3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfbb $8FAB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF                ; 0xcfc3 $8FB3 FF FF FF FF              ;
L8FB7                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfc7 $8FB7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfcf $8FBF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfd7 $8FC7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfdf $8FCF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfe7 $8FD7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfef $8FDF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcff7 $8FE7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xcfff $8FEF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd007 $8FF7 FF FF FF FF FF FF FF FF  ;
.byt    $FF                            ; 0xd00f $8FFF FF                       ;
L9000                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd010 $9000 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd018 $9008 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd020 $9010 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd028 $9018 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd030 $9020 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd038 $9028 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd040 $9030 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF                        ; 0xd048 $9038 FF FF                    ;
L903A                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd04a $903A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd052 $9042 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd05a $904A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd062 $9052 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd06a $905A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd072 $9062 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd07a $906A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd082 $9072 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd08a $907A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd092 $9082 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd09a $908A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0a2 $9092 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0aa $909A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0b2 $90A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0ba $90AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0c2 $90B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0ca $90BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0d2 $90C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0da $90CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0e2 $90D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0ea $90DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd0f2 $90E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0xd0fa $90EA FF FF FF FF FF FF        ;
bank3_Area_Data                                                                ;
.byt    $44,$20,$18,$30,$F0,$00,$F1,$3F; 0xd100 $90F0 44 20 18 30 F0 00 F1 3F  ;
.byt    $52,$8F,$71,$A0,$72,$A0,$F4,$26; 0xd108 $90F8 52 8F 71 A0 72 A0 F4 26  ;
.byt    $74,$A0,$A1,$05,$F1,$4E,$70,$A0; 0xd110 $9100 74 A0 A1 05 F1 4E 70 A0  ;
.byt    $90,$08,$A2,$05,$51,$89,$F1,$26; 0xd118 $9108 90 08 A2 05 51 89 F1 26  ;
.byt    $F9,$01,$F3,$00,$F1,$3F,$52,$8C; 0xd120 $9110 F9 01 F3 00 F1 3F 52 8C  ;
.byt    $A1,$09,$72,$A0,$74,$A0,$74,$A0; 0xd128 $9118 A1 09 72 A0 74 A0 74 A0  ;
.byt    $A1,$05,$F1,$4E,$50,$8C,$90,$08; 0xd130 $9120 A1 05 F1 4E 50 8C 90 08  ;
.byt    $72,$A0,$A0,$05,$F4,$26,$F0,$04; 0xd138 $9128 72 A0 A0 05 F4 26 F0 04  ;
.byt    $A3,$09,$F4,$03                ; 0xd140 $9130 A3 09 F4 03              ;
bank3_UNUSED_9134                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd144 $9134 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd14c $913C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd154 $9144 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd15c $914C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd164 $9154 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd16c $915C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd174 $9164 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd17c $916C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd184 $9174 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd18c $917C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd194 $9184 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd19c $918C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1a4 $9194 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1ac $919C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1b4 $91A4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1bc $91AC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1c4 $91B4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1cc $91BC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1d4 $91C4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1dc $91CC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1e4 $91D4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1ec $91DC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1f4 $91E4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd1fc $91EC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd204 $91F4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd20c $91FC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd214 $9204 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd21c $920C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd224 $9214 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd22c $921C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd234 $9224 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd23c $922C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd244 $9234 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd24c $923C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd254 $9244 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd25c $924C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd264 $9254 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd26c $925C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd274 $9264 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd27c $926C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd284 $9274 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd28c $927C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd294 $9284 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd29c $928C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2a4 $9294 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2ac $929C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2b4 $92A4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2bc $92AC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2c4 $92B4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2cc $92BC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2d4 $92C4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2dc $92CC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2e4 $92D4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2ec $92DC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2f4 $92E4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd2fc $92EC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd304 $92F4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd30c $92FC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd314 $9304 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd31c $930C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd324 $9314 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd32c $931C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd334 $9324 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd33c $932C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd344 $9334 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd34c $933C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd354 $9344 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd35c $934C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd364 $9354 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd36c $935C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd374 $9364 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd37c $936C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd384 $9374 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd38c $937C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd394 $9384 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd39c $938C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3a4 $9394 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3ac $939C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3b4 $93A4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3bc $93AC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3c4 $93B4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3cc $93BC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3d4 $93C4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3dc $93CC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3e4 $93D4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3ec $93DC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3f4 $93E4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd3fc $93EC FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xd404 $93F4 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF                ; 0xd40c $93FC FF FF FF FF              ;
; ---------------------------------------------------------------------------- ;
bank3_pointer_table2                                                           ;
.word    bank3_rts                     ; 0xd410 $9400 AD 95                    ;
.word    bank3_rts                     ; 0xd412 $9402 AD 95                    ;
.word    bank3_rts                     ; 0xd414 $9404 AD 95                    ;
.word    bank3_rts                     ; 0xd416 $9406 AD 95                    ;
.word    bank3_rts                     ; 0xd418 $9408 AD 95                    ;
.word    bank3_rts                     ; 0xd41a $940A AD 95                    ;
.word    bank3_rts                     ; 0xd41c $940C AD 95                    ;
.word    bank3_rts                     ; 0xd41e $940E AD 95                    ;
.word    bank3_rts                     ; 0xd420 $9410 AD 95                    ;
.word    bank3_rts                     ; 0xd422 $9412 AD 95                    ;
.word    bank3_rts                     ; 0xd424 $9414 AD 95                    ;
.word    bank3_rts                     ; 0xd426 $9416 AD 95                    ;
; ---------------------------------------------------------------------------- ;
bank3_table5                                                                   ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0xd428 $9418 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$30; 0xd430 $9420 00 00 00 00 00 00 00 30  ;
.byt    $00,$00,$00,$08,$00,$00,$00,$00; 0xd438 $9428 00 00 00 08 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0xd440 $9430 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0xd448 $9438 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00            ; 0xd450 $9440 00 00 00 00 00           ;
; ---------------------------------------------------------------------------- ;
bank3_pointer_table3                                                           ;
.word    bank3_rts                     ; 0xd455 $9445 AD 95                    ;
.word    bank3_rts                     ; 0xd457 $9447 AD 95                    ;
.word    bank3_rts                     ; 0xd459 $9449 AD 95                    ;
.word    bank3_rts                     ; 0xd45b $944B AD 95                    ;
.word    bank3_rts                     ; 0xd45d $944D AD 95                    ;
.word    bank3_rts                     ; 0xd45f $944F AD 95                    ;
.word    bank3_rts                     ; 0xd461 $9451 AD 95                    ;
.word    bank3_rts                     ; 0xd463 $9453 AD 95                    ;
.word    L976B                         ; 0xd465 $9455 6B 97                    ;
.word    L976B                         ; 0xd467 $9457 6B 97                    ;
.word    L976B                         ; 0xd469 $9459 6B 97                    ;
.word    L976B                         ; 0xd46b $945B 6B 97                    ;
.word    L976B                         ; 0xd46d $945D 6B 97                    ;
.word    L976B                         ; 0xd46f $945F 6B 97                    ;
.word    L976B                         ; 0xd471 $9461 6B 97                    ;
.word    L976B                         ; 0xd473 $9463 6B 97                    ;
.word    L976B                         ; 0xd475 $9465 6B 97                    ;
.word    L976B                         ; 0xd477 $9467 6B 97                    ;
.word    L976B                         ; 0xd479 $9469 6B 97                    ;
.word    L9756                         ; 0xd47b $946B 56 97                    ;
.word    L9756                         ; 0xd47d $946D 56 97                    ;
.word    L9756                         ; 0xd47f $946F 56 97                    ;
.word    L9756                         ; 0xd481 $9471 56 97                    ;
.word    L976B                         ; 0xd483 $9473 6B 97                    ;
.word    L976B                         ; 0xd485 $9475 6B 97                    ;
.word    L976B                         ; 0xd487 $9477 6B 97                    ;
.word    L976B                         ; 0xd489 $9479 6B 97                    ;
.word    L976B                         ; 0xd48b $947B 6B 97                    ;
.word    L976B                         ; 0xd48d $947D 6B 97                    ;
.word    bank3_code15                  ; 0xd48f $947F 43 97                    ;
.word    bank3_code15                  ; 0xd491 $9481 43 97                    ;
.word    bank3_code15                  ; 0xd493 $9483 43 97                    ;
.word    bank3_code15                  ; 0xd495 $9485 43 97                    ;
.word    L976B                         ; 0xd497 $9487 6B 97                    ;
.word    L976B                         ; 0xd499 $9489 6B 97                    ;
.word    L96B2                         ; 0xd49b $948B B2 96                    ;
.word    bank7_Enemy_Routines1_Fairy   ; 0xd49d $948D 1E D9                    ;
.word    bank7_Enemy_Routines1_Red_Jar ; 0xd49f $948F 59 D9                    ;
.word    bank7_Enemy_Routines1_Locked_Door; 0xd4a1 $9491 91 D9                 ;
.word    bank3_code13                  ; 0xd4a3 $9493 A8 96                    ;
.word    bank7_Enemy_Routines1_Bot     ; 0xd4a5 $9495 0C DA                    ;
.word    bank7_Enemy_Routines1_Bit     ; 0xd4a7 $9497 2B DA                    ;
.word    bank7_Enemy_Routines1_Moa     ; 0xd4a9 $9499 CF DA                    ;
.word    bank7_Enemy_Routines1_Ache_and_Acheman; 0xd4ab $949B 53 DB            ;
.word    L9878                         ; 0xd4ad $949D 78 98                    ;
.word    L9878                         ; 0xd4af $949F 78 98                    ;
.word    L9793                         ; 0xd4b1 $94A1 93 97                    ;
.word    bank3_code16                  ; 0xd4b3 $94A3 83 97                    ;
.word    L9ABD                         ; 0xd4b5 $94A5 BD 9A                    ;
.word    L9793                         ; 0xd4b7 $94A7 93 97                    ;
.word    L9793                         ; 0xd4b9 $94A9 93 97                    ;
.word    L97A9                         ; 0xd4bb $94AB A9 97                    ;
.word    L9793                         ; 0xd4bd $94AD 93 97                    ;
.word    L9793                         ; 0xd4bf $94AF 93 97                    ;
.word    L9793                         ; 0xd4c1 $94B1 93 97                    ;
.word    L97D4                         ; 0xd4c3 $94B3 D4 97                    ;
.word    L97D4                         ; 0xd4c5 $94B5 D4 97                    ;
.word    L97D4                         ; 0xd4c7 $94B7 D4 97                    ;
.word    L97D4                         ; 0xd4c9 $94B9 D4 97                    ;
.word    L97D4                         ; 0xd4cb $94BB D4 97                    ;
.word    L97D4                         ; 0xd4cd $94BD D4 97                    ;
.word    L9878                         ; 0xd4cf $94BF 78 98                    ;
.word    L9878                         ; 0xd4d1 $94C1 78 98                    ;
.word    L9878                         ; 0xd4d3 $94C3 78 98                    ;
.word    L9878                         ; 0xd4d5 $94C5 78 98                    ;
.word    L9878                         ; 0xd4d7 $94C7 78 98                    ;
.word    L9878                         ; 0xd4d9 $94C9 78 98                    ;
.word    L9878                         ; 0xd4db $94CB 78 98                    ;
.word    L9878                         ; 0xd4dd $94CD 78 98                    ;
.word    L9ABD                         ; 0xd4df $94CF BD 9A                    ;
.word    L9ABD                         ; 0xd4e1 $94D1 BD 9A                    ;
.word    bank3_code14                  ; 0xd4e3 $94D3 E0 96                    ;
; ---------------------------------------------------------------------------- ;
bank3_Enemy_Attributes_Tile_Mapping_Codes_6DD5_in_RAM                          ;
;x... ....	? (enemies have bit 7 set, including talkers)                       ;
;.xxx xxxx	Tile Mappings Code (offset)                                         ;
.byt    $40,$40,$40,$C2,$C0,$80,$C6,$C3; 0xd4e5 $94D5 40 40 40 C2 C0 80 C6 C3  ;
.byt    $00,$00,$80,$C0,$00,$18,$10,$20; 0xd4ed $94DD 00 00 80 C0 00 18 10 20  ;
.byt    $34,$08,$18,$10,$08,$18,$00,$00; 0xd4f5 $94E5 34 08 18 10 08 18 00 00  ;
.byt    $18,$10,$08,$18,$00,$10,$2C,$2C; 0xd4fd $94ED 18 10 08 18 00 10 2C 2C  ;
.byt    $00,$00,$00,$00                ; 0xd505 $94F5 00 00 00 00              ;
bank3_Enemy_Palette_Codes_and_Animation_6DF9_in_RAM                            ;
;x... ....	Enemy is Immobile (0 = 2-Frame Animation)                           ;
;.xxx xx..	? (not used)                                                        ;
;.... ..xx	Palette Code                                                        ;
.byt    $00,$00,$00,$02,$00,$00,$03,$00; 0xd509 $94F9 00 00 00 02 00 00 03 00  ;
.byt    $01,$02,$00,$00,$00,$83,$83,$01; 0xd511 $9501 01 02 00 00 00 83 83 01  ;
.byt    $82,$83,$82,$02,$03,$03,$02,$02; 0xd519 $9509 82 83 82 02 03 03 02 02  ;
.byt    $01,$03,$02,$02,$03,$03,$02,$02; 0xd521 $9511 01 03 02 02 03 03 02 02  ;
.byt    $03,$00,$00,$00                ; 0xd529 $9519 03 00 00 00              ;
bank3_Enemy_Size_Codes_6E1D_in_RAM                                             ;
.byt    $01,$01,$04,$00,$01,$01,$01,$01; 0xd52d $951D 01 01 04 00 01 01 01 01  ;
.byt    $0C,$0C,$0C,$0C,$00,$0C,$0C,$0C; 0xd535 $9525 0C 0C 0C 0C 00 0C 0C 0C  ;
.byt    $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C; 0xd53d $952D 0C 0C 0C 0C 0C 0C 0C 0C  ;
.byt    $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C; 0xd545 $9535 0C 0C 0C 0C 0C 0C 0C 0C  ;
.byt    $0C,$00,$00,$00                ; 0xd54d $953D 0C 00 00 00              ;
bank3_Other_Enemy_Attributes_6E41_in_RAM                                       ;
;x... ....	Immune to Thunder Spell                                             ;
;.x.. ....	Regenerates                                                         ;
;..x. ....	?                                                                   ;
;...x ....	Not hittable with sword                                             ;
;.... xxxx	?                                                                   ;
.byt    $86,$86,$86,$06,$06,$06,$06,$00; 0xd551 $9541 86 86 86 06 06 06 06 00  ;
.byt    $80,$80,$80,$80,$80,$80,$80,$80; 0xd559 $9549 80 80 80 80 80 80 80 80  ;
.byt    $80,$80,$80,$80,$80,$80,$80,$80; 0xd561 $9551 80 80 80 80 80 80 80 80  ;
.byt    $80,$80,$80,$80,$80,$80,$80,$80; 0xd569 $9559 80 80 80 80 80 80 80 80  ;
.byt    $80,$80,$80,$80                ; 0xd571 $9561 80 80 80 80              ;
; ---------------------------------------------------------------------------- ;
bank3_Pointer_table_for_Enemy_Routines                                         ;
.word    bank7_Enemy_Routines2_Fairy   ; 0xd575 $9565 DD F0                    ;Fairy
.word    bank7_Enemy_Routines2_RedJar  ; 0xd577 $9567 12 F1                    ;Red Jar
.word    bank7_Enemy_Routines2_LockedDoor; 0xd579 $9569 3A F1                  ;Locked Door
.word    bank7_Enemy_Routines2_Ache_and_Acheman; 0xd57b $956B 7E F1            ;Ache
.word    bank7_Enemy_Routines2_Bot_and_Bit; 0xd57d $956D 91 EF                 ;Bit
.word    bank7_Enemy_Routines2_Bot_and_Bit; 0xd57f $956F 91 EF                 ;Bot
.word    bank7_Enemy_Routines2_Moa     ; 0xd581 $9571 F2 EF                    ;Moa
.word    bank7_Enemy_Routines2_Ache_and_Acheman; 0xd583 $9573 7E F1            ;Acheman
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd585 $9575 E8 9A                    ;Orange Lady - Walking
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd587 $9577 E8 9A                    ;Orange Lady - Walking
.word    bank7_Enemy_Routines2_Ache_and_Acheman; 0xd589 $9579 7E F1            ;Ache (talker)
.word    bank7_Enemy_Routines2_Bot_and_Bit; 0xd58b $957B 91 EF                 ;Bit (talker)
.word    bank3_rts                     ; 0xd58d $957D AD 95                    ;Invisible Dialog ("Welcome" sign)
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd58f $957F E8 9A                    ;Blue Old Woman - Immobile
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd591 $9581 E8 9A                    ;Blue Lumberjack - Immobile
.word    bank3_Enemy_Routines1_Wise_Man; 0xd593 $9583 C8 9A                    ;Wise Man
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd595 $9585 E8 9A                    ;Little Kid - Immobile
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd597 $9587 E8 9A                    ;Blue Lady with Bowl - Immobile
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd599 $9589 E8 9A                    ;Red Old Woman - Immobile
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd59b $958B E8 9A                    ;Red Lumberjack - Idle
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd59d $958D E8 9A                    ;Blue Lady with Bowl - Idle
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd59f $958F E8 9A                    ;Blue Old Woman - Idle
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5a1 $9591 E8 9A                    ;Red Lady - Idle
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5a3 $9593 E8 9A                    ;Red Lady - Idle (healing lady)
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5a5 $9595 E8 9A                    ;Orange Old Woman - Idle (magic woman)
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5a7 $9597 E8 9A                    ;Blue Lumberjack - Walking (default random Townfolk)
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5a9 $9599 E8 9A                    ;Red Lady with Bowl - Walking (default random Townfolk)
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5ab $959B E8 9A                    ;Red Old Woman - Walking (default random Townfolk)
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5ad $959D E8 9A                    ;Blue Lady - Walking (default random Townfolk)
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5af $959F E8 9A                    ;Blue Lumberjack - Walking
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5b1 $95A1 E8 9A                    ;Red Young Lad - Walking
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5b3 $95A3 E8 9A                    ;Red Young Lad - Walking
.word    bank3_Enemy_Routines1_ManyNPC ; 0xd5b5 $95A5 E8 9A                    ;Blue Lady - Walking
.word    bank3_rts                     ; 0xd5b7 $95A7 AD 95                    ;Invisible Dialog (Mirror)
.word    bank3_rts                     ; 0xd5b9 $95A9 AD 95                    ;Invisible Dialog ("Welcome" sign)
.word    bank3_rts                     ; 0xd5bb $95AB AD 95                    ;Townfolks Generator
; ---------------------------------------------------------------------------- ;
bank3_rts                                                                      ;
rts                                    ; 0xd5bd $95AD 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_table6                                                                   ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0xd5be $95AE 00 00 00 00 00 00 00 00  ;Padding ? (12 bytes)
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0xd5c6 $95B6 00 00 00 00 00 00 00 00  ;
.byt    $00,$00                        ; 0xd5ce $95BE 00 00                    ;
; ---------------------------------------------------------------------------- ;
bank3_pointer_table4                                                           ;
.word    bank3_rts                     ; 0xd5d0 $95C0 AD 95                    ;
.word    bank3_rts                     ; 0xd5d2 $95C2 AD 95                    ;
.word    bank3_rts                     ; 0xd5d4 $95C4 AD 95                    ;
.word    bank3_rts                     ; 0xd5d6 $95C6 AD 95                    ;
.word    bank3_rts                     ; 0xd5d8 $95C8 AD 95                    ;
.word    bank3_rts                     ; 0xd5da $95CA AD 95                    ;
.word    bank3_rts                     ; 0xd5dc $95CC AD 95                    ;
.word    bank3_rts                     ; 0xd5de $95CE AD 95                    ;
.word    bank3_rts                     ; 0xd5e0 $95D0 AD 95                    ;
.word    bank3_rts                     ; 0xd5e2 $95D2 AD 95                    ;
; ---------------------------------------------------------------------------- ;
bank3_Townfolks_Tile_Mappings_Lady__Walking_Frame_1                            ;
.byt    $D8,$DA,$E0,$E2                ; 0xd5e4 $95D4 D8 DA E0 E2              ;
bank3_Townfolks_Tile_Mappings_Lady__Walking_Frame_2                            ;
.byt    $D8,$DA,$E4,$E6                ; 0xd5e8 $95D8 D8 DA E4 E6              ;
bank3_Townfolks_Tile_Mappings_Lady_with_Bowl__Walking_Frame_1                  ;
.byt    $DC,$DE,$E0,$E2                ; 0xd5ec $95DC DC DE E0 E2              ;
bank3_Townfolks_Tile_Mappings_Lady_with_Bowl__Walking_Frame_2                  ;
.byt    $DC,$DE,$E4,$E6                ; 0xd5f0 $95E0 DC DE E4 E6              ;
bank3_Townfolks_Tile_Mappings_Lumberjack__Walking_Frame_1                      ;
.byt    $E8,$EA,$F0,$F2                ; 0xd5f4 $95E4 E8 EA F0 F2              ;
bank3_Townfolks_Tile_Mappings_Lumberjack__Walking_Frame_2                      ;
.byt    $E8,$EA,$EC,$EE                ; 0xd5f8 $95E8 E8 EA EC EE              ;
bank3_Townfolks_Tile_Mappings_Old_Woman__Walking_Frame_1                       ;
.byt    $F4,$F6,$F8,$FA                ; 0xd5fc $95EC F4 F6 F8 FA              ;
bank3_Townfolks_Tile_Mappings_Old_Woman__Walking_Frame_2                       ;
.byt    $F4,$F6,$FC,$FE                ; 0xd600 $95F0 F4 F6 FC FE              ;
bank3_Townfolks_Tile_Mappings_Wise_Man__Frame_1                                ;
.byt    $D0,$D2,$D4,$D6                ; 0xd604 $95F4 D0 D2 D4 D6              ;
bank3_Townfolks_Tile_Mappings_Wise_Man__Frame_2                                ;
.byt    $74,$76,$D4,$D6                ; 0xd608 $95F8 74 76 D4 D6              ;
bank3_Townfolks_Tile_Mappings_Guard_from_Japanese_Version_never_used           ;
.byt    $65,$67,$F0,$F2                ; 0xd60c $95FC 65 67 F0 F2              ;
bank3_Townfolks_Tile_Mappings_Young_Lad__Walking_Frame_1                       ;
.byt    $C0,$C2,$C4,$C6                ; 0xd610 $9600 C0 C2 C4 C6              ;
bank3_Townfolks_Tile_Mappings_Young_Lad__Walking_Frame_2                       ;
.byt    $C0,$C2,$C8,$CA                ; 0xd614 $9604 C0 C2 C8 CA              ;
bank3_Townfolks_Tile_Mappings_Little_Kid__Walking_Frame_1                      ;
.byt    $F5,$F5,$B0,$BA                ; 0xd618 $9608 F5 F5 B0 BA              ;
bank3_Townfolks_Tile_Mappings_Little_Kid__Walking_Frame_2                      ;
.byt    $F5,$F5,$BC,$BE                ; 0xd61c $960C F5 F5 BC BE              ;
bank3_Townfolks_Tile_Mappings_Fat_Woman__Walking_Frame_1                       ;
.byt    $11,$13,$15,$17                ; 0xd620 $9610 11 13 15 17              ;
bank3_Townfolks_Tile_Mappings_Fat_Woman__Walking_Frame_2                       ;
.byt    $19,$1B,$1D,$1F                ; 0xd624 $9614 19 1B 1D 1F              ;
bank3_Townfolks_Tile_Mappings_River_Guard                                      ;
.byt    $01,$03,$05,$07                ; 0xd628 $9618 01 03 05 07              ;
bank3_Townfolks_Tile_Mappings_Knight_2_with_spear                              ;
.byt    $09,$0B,$0D,$0F                ; 0xd62c $961C 09 0B 0D 0F              ;
bank3_Townfolks_Tile_Mappings_Wise_Man__Spell_Frame                            ;
.byt    $62,$64,$CC,$CE                ; 0xd630 $9620 62 64 CC CE              ;
bank3_Townfolks_Tile_Mappings_unknown0                                         ;
.byt    $30                            ; 0xd634 $9624 30                       ;
L9625                                                                          ;
.byt    $96,$44,$96                    ; 0xd635 $9625 96 44 96                 ;
bank3_Townfolks_Tile_Mappings_unknown1                                         ;
.byt    $58,$96,$6C,$96                ; 0xd638 $9628 58 96 6C 96              ;
bank3_Townfolks_Tile_Mappings_unknown2                                         ;
.byt    $80,$96,$94,$96                ; 0xd63c $962C 80 96 94 96              ;
bank3_Related_to_Enemy_Velocities_in_Towns                                     ;
.byt    $28,$10,$20,$10,$08,$3C,$10,$08; 0xd640 $9630 28 10 20 10 08 3C 10 08  ;
.byt    $18,$00,$00,$18,$10,$08,$18,$00; 0xd648 $9638 18 00 00 18 10 08 18 00  ;
.byt    $2C,$08,$18,$00,$44,$10,$20,$2C; 0xd650 $9640 2C 08 18 00 44 10 20 2C  ;
.byt    $2C,$2C,$2C,$08,$2C,$2C,$00,$18; 0xd658 $9648 2C 2C 2C 08 2C 2C 00 18  ;
.byt    $10,$08,$18,$00,$2C,$2C,$18,$3C; 0xd660 $9650 10 08 18 00 2C 2C 18 3C  ;
.byt    $44,$2C,$20,$10,$3C,$3C,$3C,$3C; 0xd668 $9658 44 2C 20 10 3C 3C 3C 3C  ;
.byt    $18,$3C,$00,$18,$10,$08,$18,$00; 0xd670 $9660 18 3C 00 18 10 08 18 00  ;
.byt    $34,$08,$18,$00,$28,$2C,$20,$10; 0xd678 $9668 34 08 18 00 28 2C 20 10  ;
.byt    $08,$18,$10,$08,$18,$00,$00,$18; 0xd680 $9670 08 18 10 08 18 00 00 18  ;
.byt    $10,$08,$18,$00,$34,$08,$3C,$00; 0xd688 $9678 10 08 18 00 34 08 3C 00  ;
.byt    $48,$34,$20,$34,$34,$34,$34,$34; 0xd690 $9680 48 34 20 34 34 34 34 34  ;
.byt    $18,$34,$00,$18,$10            ; 0xd698 $9688 18 34 00 18 10           ;
L968D                                                                          ;
.byt    $08,$18,$00,$10,$08,$18,$3C,$28; 0xd69d $968D 08 18 00 10 08 18 3C 28  ;
.byt    $10,$20,$10,$08,$18            ; 0xd6a5 $9695 10 20 10 08 18           ;
L969A                                                                          ;
.byt    $10,$08,$18,$00,$00,$18,$10,$08; 0xd6aa $969A 10 08 18 00 00 18 10 08  ;
.byt    $18,$00,$10,$3C,$18,$00        ; 0xd6b2 $96A2 18 00 10 3C 18 00        ;
; ---------------------------------------------------------------------------- ;
bank3_code13                                                                   ;
lda      $C9                           ; 0xd6b8 $96A8 A5 C9                    ;
beq      L96AF                         ; 0xd6ba $96AA F0 03                    ;
jmp      LDD3D                         ; 0xd6bc $96AC 4C 3D DD                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96AF                                                                          ;
jmp      bank7_Enemy_Routines1_Ache_and_Acheman; 0xd6bf $96AF 4C 53 DB         ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96B2                                                                          ;
ldy      #$05                          ; 0xd6c2 $96B2 A0 05                    ; Y = 05
L96B4                                                                          ;
cpy      $10                           ; 0xd6c4 $96B4 C4 10                    ;; used as monster x register ;draw boss hp bar
beq      L96C4                         ; 0xd6c6 $96B6 F0 0C                    ;
lda      $B6,y                         ; 0xd6c8 $96B8 B9 B6 00                 ; Generated Enemy Slot
beq      L96C4                         ; 0xd6cb $96BB F0 07                    ;
lda      $A1,y                         ; 0xd6cd $96BD B9 A1 00                 ; Enemy Code
cmp      $A1,x                         ; 0xd6d0 $96C0 D5 A1                    ;; Enemy Code
beq      L96C8                         ; 0xd6d2 $96C2 F0 04                    ;
L96C4                                                                          ;
dey                                    ; 0xd6d4 $96C4 88                       ;
bpl      L96B4                         ; 0xd6d5 $96C5 10 ED                    ;
rts                                    ; 0xd6d7 $96C7 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96C8                                                                          ;
tya                                    ; 0xd6d8 $96C8 98                       ;
tax                                    ; 0xd6d9 $96C9 AA                       ;
jsr      LDD3D                         ; 0xd6da $96CA 20 3D DD                 ;
ldx      $10                           ; 0xd6dd $96CD A6 10                    ;; used as monster x register ;draw boss hp bar
rts                                    ; 0xd6df $96CF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Table_for_Random_Townfolks_Codes                                         ;
;19	Blue Lumberjack                                                            ;
;1A	Red Lady with Bowl                                                         ;
;1B	Red Old Woman                                                              ;
;1C	Blue Lady                                                                  ;
.byt    $19,$1A,$1B                    ; 0xd6e0 $96D0 19 1A 1B                 ;
L96D3                                                                          ;
.byt    $1C                            ; 0xd6e3 $96D3 1C                       ;
bank3_Table_for_Random_Townfolks_X_Velocities                                  ;
;10 F0	Blue Lumberjack                                                         ;
;0C F4	Red Lady with Bowl                                                      ;
;08 F8	Red Old Woman                                                           ;
;0C F4	Blue Lady                                                               ;
.byt    $10,$F0,$0C,$F4,$08,$F8,$0C,$F4; 0xd6e4 $96D4 10 F0 0C F4 08 F8 0C F4  ;
bank3_Townfolks_initial_X_Position_adjustment_2low_then_2high                  ;
.byt    $E0,$08                        ; 0xd6ec $96DC E0 08                    ;Townfolks initial X Position adjustment, low byte (2 bytes)
L96DE                                                                          ;
.byt    $FF,$01                        ; 0xd6ee $96DE FF 01                    ;Townfolks initial X Position adjustment, high byte (2 bytes)
; ---------------------------------------------------------------------------- ;
bank3_code14                                                                   ;
inc      $AF,x                         ; 0xd6f0 $96E0 F6 AF                    ;; Various enemy state variables
bne      L96EF                         ; 0xd6f2 $96E2 D0 0B                    ;
ldx      #$05                          ; 0xd6f4 $96E4 A2 05                    ; X = 05
L96E6                                                                          ;
lda      $B6,x                         ; 0xd6f6 $96E6 B5 B6                    ;; Generated Enemy Slot
beq      L96F0                         ; 0xd6f8 $96E8 F0 06                    ;
dex                                    ; 0xd6fa $96EA CA                       ;
bpl      L96E6                         ; 0xd6fb $96EB 10 F9                    ;
ldx      $10                           ; 0xd6fd $96ED A6 10                    ;; used as monster x register ;draw boss hp bar
L96EF                                                                          ;
rts                                    ; 0xd6ff $96EF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96F0                                                                          ;
lda      $051B,x                       ; 0xd700 $96F0 BD 1B 05                 ; Randomizer
sta      L0002                         ; 0xd703 $96F3 85 02                    ;
and      #$03                          ; 0xd705 $96F5 29 03                    ; keep bits .... ..xx
tay                                    ; 0xd707 $96F7 A8                       ;
asl                                    ; 0xd708 $96F8 0A                       ;
sta      L0000                         ; 0xd709 $96F9 85 00                    ;
lda      bank3_Table_for_Random_Townfolks_Codes,y; 0xd70b $96FB B9 D0 96       ;
sta      $A1,x                         ; 0xd70e $96FE 95 A1                    ; Enemy Code
lda      #$01                          ; 0xd710 $9700 A9 01                    ; A = 01
sta      $B6,x                         ; 0xd712 $9702 95 B6                    ; Generated Enemy Slot
lda      #$FF                          ; 0xd714 $9704 A9 FF                    ; A = FF
sta      $BC,x                         ; 0xd716 $9706 95 BC                    ;; Generated Enemy Y Position ?
lda      #$01                          ; 0xd718 $9708 A9 01                    ; A = 01
sta      $1A,x                         ; 0xd71a $970A 95 1A                    ;
lsr                                    ; 0xd71c $970C 4A                       ;
sta      $AF,x                         ; 0xd71d $970D 95 AF                    ;; Various enemy state variables
lda      #$B0                          ; 0xd71f $970F A9 B0                    ; A = B0
sta      $2A,x                         ; 0xd721 $9711 95 2A                    ; Enemy Y Position
lda      $F7                           ; 0xd723 $9713 A5 F7                    ; Controller 1 buttons held
and      #$03                          ; 0xd725 $9715 29 03                    ; keep bits .... ..xx (Right and Left)
bne      L971B                         ; 0xd727 $9717 D0 02                    ;
lda      L0002                         ; 0xd729 $9719 A5 02                    ;
L971B                                                                          ;
and      #$01                          ; 0xd72b $971B 29 01                    ; keep bits .... ...x
tay                                    ; 0xd72d $971D A8                       ;
lda      $072C                         ; 0xd72e $971E AD 2C 07                 ; Scrolling Offset Low Byte
clc                                    ; 0xd731 $9721 18                       ;
adc      bank3_Townfolks_initial_X_Position_adjustment_2low_then_2high,y; 0xd732 $9722 79 DC 96;
sta      $4E,x                         ; 0xd735 $9725 95 4E                    ; Enemy X Position (low byte)
lda      $072A                         ; 0xd737 $9727 AD 2A 07                 ; Scrolling Offset High Byte
adc      L96DE,y                       ; 0xd73a $972A 79 DE 96                 ;
sta      $3C,x                         ; 0xd73d $972D 95 3C                    ; Enemy X Position (high byte)
iny                                    ; 0xd73f $972F C8                       ;
sty      $60,x                         ; 0xd740 $9730 94 60                    ; Enemy facing direction
tya                                    ; 0xd742 $9732 98                       ;
adc      L0000                         ; 0xd743 $9733 65 00                    ;
tay                                    ; 0xd745 $9735 A8                       ;
lda      L96D3,y                       ; 0xd746 $9736 B9 D3 96                 ;
sta      $71,x                         ; 0xd749 $9739 95 71                    ; Enemy X Velocity
jsr      L976B                         ; 0xd74b $973B 20 6B 97                 ;
ldx      $10                           ; 0xd74e $973E A6 10                    ;; used as monster x register ;draw boss hp bar
L9740                                                                          ;
rts                                    ; 0xd750 $9740 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_table8                                                                   ;
.byt    $F2,$0E                        ; 0xd751 $9741 F2 0E                    ;
; ---------------------------------------------------------------------------- ;
bank3_code15                                                                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0xd753 $9743 20 91 DC; Determine Enemy Facing Direction
sty      L0000                         ; 0xd756 $9746 84 00                    ;
lda      $A1,x                         ; 0xd758 $9748 B5 A1                    ; Enemy Code
asl                                    ; 0xd75a $974A 0A                       ;
adc      L0000                         ; 0xd75b $974B 65 00                    ;
tay                                    ; 0xd75d $974D A8                       ;
lda      L969A,y                       ; 0xd75e $974E B9 9A 96                 ;
sta      $71,x                         ; 0xd761 $9751 95 71                    ; Enemy X Velocity
jmp      L976B                         ; 0xd763 $9753 4C 6B 97                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9756                                                                          ;
lda      $2A,x                         ; 0xd766 $9756 B5 2A                    ; Enemy Y Position
sec                                    ; 0xd768 $9758 38                       ;
sbc      #$08                          ; 0xd769 $9759 E9 08                    ; Y Offset when Townfolk gets out of house
sta      $2A,x                         ; 0xd76b $975B 95 2A                    ;; Enemy Y Position
L975D                                                                          ;
lda      #$80                          ; 0xd76d $975D A9 80                    ; A = 80
sta      $AF,x                         ; 0xd76f $975F 95 AF                    ;; Various enemy state variables
ldy      $60,x                         ; 0xd771 $9761 B4 60                    ; Enemy Facing Direction
L9764     = * + $0001                                                          ;
lda      $4E,x                         ; 0xd773 $9763 B5 4E                    ; Enemy X Position (low byte)
clc                                    ; 0xd775 $9765 18                       ;
adc      L9740,y                       ; 0xd776 $9766 79 40 97                 ;
sta      $4E,x                         ; 0xd779 $9769 95 4E                    ; Enemy X Position (low byte)
L976B                                                                          ;
lda      #$00                          ; 0xd77b $976B A9 00                    ; A = 00
sta      $05A5,x                       ; 0xd77d $976D 9D A5 05                 ;;town npc chat counter
sta      $05B7,x                       ; 0xd780 $9770 9D B7 05                 ;
sta      $05AB,x                       ; 0xd783 $9773 9D AB 05                 ;
lda      #$10                          ; 0xd786 $9776 A9 10                    ; A = 10
sta      $05B1,x                       ; 0xd788 $9778 9D B1 05                 ;
lda      #$90                          ; 0xd78b $977B A9 90                    ; A = 90 (delay before leaving house)
sta      $05BD,x                       ; 0xd78d $977D 9D BD 05                 ;
L9780                                                                          ;
rts                                    ; 0xd790 $9780 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_table9                                                                   ;
.byt    $10,$00                        ; 0xd791 $9781 10 00                    ;
; ---------------------------------------------------------------------------- ;
bank3_code16                                                                   ;
lda      $12                           ; 0xd793 $9783 A5 12                    ;; Frame Counter (ascending)
and      #$80                          ; 0xd795 $9785 29 80                    ; keep bits x... ....
bne      L9791                         ; 0xd797 $9787 D0 08                    ;
lda      $12                           ; 0xd799 $9789 A5 12                    ;; Frame Counter (ascending)
and      #$18                          ; 0xd79b $978B 29 18                    ; keep bits ...x x...
sta      $81,x                         ; 0xd79d $978D 95 81                    ; Current Animation Frame for Enemy
lda      #$00                          ; 0xd79f $978F A9 00                    ; A = 00
L9791                                                                          ;
sta      $AF,x                         ; 0xd7a1 $9791 95 AF                    ;; Various enemy state variables
L9793                                                                          ;
jsr      bank3_code17                  ; 0xd7a3 $9793 20 9B 9A                 ;
jsr      L9A8D                         ; 0xd7a6 $9796 20 8D 9A                 ;
lda      $12                           ; 0xd7a9 $9799 A5 12                    ;; Frame Counter (ascending)
and      #$3F                          ; 0xd7ab $979B 29 3F                    ; keep bits ..xx xxxx
bne      L97A2                         ; 0xd7ad $979D D0 03                    ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0xd7af $979F 20 91 DC; Determine Enemy Facing Direction
L97A2                                                                          ;
lda      #$00                          ; 0xd7b2 $97A2 A9 00                    ; A = 00
sta      $AF,x                         ; 0xd7b4 $97A4 95 AF                    ;; Various enemy state variables
jmp      L99B9                         ; 0xd7b6 $97A6 4C B9 99                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L97A9                                                                          ;
jsr      bank3_code17                  ; 0xd7b9 $97A9 20 9B 9A                 ;
jsr      L9A8D                         ; 0xd7bc $97AC 20 8D 9A                 ;
lda      $C9                           ; 0xd7bf $97AF A5 C9                    ;
bne      L97D3                         ; 0xd7c1 $97B1 D0 20                    ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0xd7c3 $97B3 20 91 DC; Determine Enemy Facing Direction
lda      $05A5,x                       ; 0xd7c6 $97B6 BD A5 05                 ;;town npc chat counter
bne      L97D3                         ; 0xd7c9 $97B9 D0 18                    ;
lda      $0F                           ; 0xd7cb $97BB A5 0F                    ;
adc      #$20                          ; 0xd7cd $97BD 69 20                    ;
cmp      #$40                          ; 0xd7cf $97BF C9 40                    ;
bcs      L97D3                         ; 0xd7d1 $97C1 B0 10                    ;
lda      $A7                           ; 0xd7d3 $97C3 A5 A7                    ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      $0479                         ; 0xd7d5 $97C5 AD 79 04                 ; Link is in mid-air ? (1 = mid-air)
bne      L97D3                         ; 0xd7d8 $97C8 D0 09                    ;
stx      $048B                         ; 0xd7da $97CA 8E 8B 04                 ;; Conversation Pointer; Townfolk Slot				used as X position for monster ID
jmp      L9A33                         ; 0xd7dd $97CD 4C 33 9A                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
inc      $05C3,x                       ; 0xd7e0 $97D0 FE C3 05                 ;
L97D3                                                                          ;
rts                                    ; 0xd7e3 $97D3 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L97D4                                                                          ;
jsr      bank3_code17                  ; 0xd7e4 $97D4 20 9B 9A                 ;
lda      $AF,x                         ; 0xd7e7 $97D7 B5 AF                    ;; Various enemy state variables
beq      L983F                         ; 0xd7e9 $97D9 F0 64                    ;
bpl      L983C                         ; 0xd7eb $97DB 10 5F                    ;
cmp      #$80                          ; 0xd7ed $97DD C9 80                    ;
bne      L9808                         ; 0xd7ef $97DF D0 27                    ;
jsr      L9A90                         ; 0xd7f1 $97E1 20 90 9A                 ;
lda      $C9                           ; 0xd7f4 $97E4 A5 C9                    ;
ora      $05BD,x                       ; 0xd7f6 $97E6 1D BD 05                 ;
bne      L983B                         ; 0xd7f9 $97E9 D0 50                    ;
lda      $CC                           ; 0xd7fb $97EB A5 CC                    ; Link's X Position on Screen
sbc      $CD                           ; 0xd7fd $97ED E5 CD                    ;
adc      #$60                          ; 0xd7ff $97EF 69 60                    ;
cmp      #$C0                          ; 0xd801 $97F1 C9 C0                    ;
bcs      L983B                         ; 0xd803 $97F3 B0 46                    ;
jsr      LEA32                         ; 0xd805 $97F5 20 32 EA                 ;
jsr      L989F                         ; 0xd808 $97F8 20 9F 98                 ;
ldy      $60,x                         ; 0xd80b $97FB B4 60                    ; Enemy facing direction
lda      $4E,x                         ; 0xd80d $97FD B5 4E                    ; Enemy X position (low byte)
sec                                    ; 0xd80f $97FF 38                       ;
sbc      L9740,y                       ; 0xd810 $9800 F9 40 97                 ;
sta      $4E,x                         ; 0xd813 $9803 95 4E                    ; Enemy X Position (low byte)
jmp      bank3_Related_to_woman_opening_door; 0xd815 $9805 4C 46 99            ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9808                                                                          ;
inc      $AF,x                         ; 0xd818 $9808 F6 AF                    ;; Various enemy state variables
cmp      #$90                          ; 0xd81a $980A C9 90                    ;
bcc      L981B                         ; 0xd81c $980C 90 0D                    ;
lda      $AF,x                         ; 0xd81e $980E B5 AF                    ;; Various enemy state variables
pha                                    ; 0xd820 $9810 48                       ;
lda      #$01                          ; 0xd821 $9811 A9 01                    ; A = 01
sta      $AF,x                         ; 0xd823 $9813 95 AF                    ;; Various enemy state variables
jsr      L9A8A                         ; 0xd825 $9815 20 8A 9A                 ;
pla                                    ; 0xd828 $9818 68                       ;
sta      $AF,x                         ; 0xd829 $9819 95 AF                    ;; Various enemy state variables
L981B                                                                          ;
lda      $AF,x                         ; 0xd82b $981B B5 AF                    ;; Various enemy state variables
cmp      #$90                          ; 0xd82d $981D C9 90                    ;
bne      L9824                         ; 0xd82f $981F D0 03                    ;
jmp      L994A                         ; 0xd831 $9821 4C 4A 99                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9824                                                                          ;
cmp      #$A0                          ; 0xd834 $9824 C9 A0                    ;
bne      L982B                         ; 0xd836 $9826 D0 03                    ;
jmp      bank3_Related_to_woman_opening_door; 0xd838 $9828 4C 46 99            ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L982B                                                                          ;
cmp      #$B0                          ; 0xd83b $982B C9 B0                    ;
bne      L983B                         ; 0xd83d $982D D0 0C                    ;
lda      #$00                          ; 0xd83f $982F A9 00                    ; A = 00
sta      $AF,x                         ; 0xd841 $9831 95 AF                    ;; Various enemy state variables
lda      #$90                          ; 0xd843 $9833 A9 90                    ; A = 90
sta      $05BD,x                       ; 0xd845 $9835 9D BD 05                 ;
jmp      L994E                         ; 0xd848 $9838 4C 4E 99                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L983B                                                                          ;
rts                                    ; 0xd84b $983B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L983C                                                                          ;
jmp      L9878                         ; 0xd84c $983C 4C 78 98                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L983F                                                                          ;
lda      $2A,x                         ; 0xd84f $983F B5 2A                    ; Enemy Y Position
cmp      #$B0                          ; 0xd851 $9841 C9 B0                    ;
bcs      L9851                         ; 0xd853 $9843 B0 0C                    ;
lda      $12                           ; 0xd855 $9845 A5 12                    ;; Frame Counter (ascending)
L9847                                                                          ;
and      #$0F                          ; 0xd857 $9847 29 0F                    ; keep bits .... xxxx
bne      L9851                         ; 0xd859 $9849 D0 06                    ;
lda      $2A,x                         ; 0xd85b $984B B5 2A                    ; Enemy Y Position
adc      #$04                          ; 0xd85d $984D 69 04                    ;
sta      $2A,x                         ; 0xd85f $984F 95 2A                    ;; Enemy Y Position
L9851                                                                          ;
lda      $05BD,x                       ; 0xd861 $9851 BD BD 05                 ;
beq      L9868                         ; 0xd864 $9854 F0 12                    ;
cmp      #$40                          ; 0xd866 $9856 C9 40                    ;
bcs      L9870                         ; 0xd868 $9858 B0 16                    ;
lda      $71,x                         ; 0xd86a $985A B5 71                    ; Enemy X Velocity
pha                                    ; 0xd86c $985C 48                       ;
lda      #$00                          ; 0xd86d $985D A9 00                    ; A = 00
sta      $71,x                         ; 0xd86f $985F 95 71                    ;; Enemy X Velocity
jsr      L9870                         ; 0xd871 $9861 20 70 98                 ;
pla                                    ; 0xd874 $9864 68                       ;
sta      $71,x                         ; 0xd875 $9865 95 71                    ;; Enemy X Velocity
rts                                    ; 0xd877 $9867 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9868                                                                          ;
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0xd878 $9868 20 EB E8;
lda      #$E0                          ; 0xd87b $986B A9 E0                    ; A = E0
sta      $05BD,x                       ; 0xd87d $986D 9D BD 05                 ;
L9870                                                                          ;
lda      $05B7,x                       ; 0xd880 $9870 BD B7 05                 ;
bne      L983C                         ; 0xd883 $9873 D0 C7                    ;
jmp      L99B0                         ; 0xd885 $9875 4C B0 99                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9878                                                                          ;
jsr      bank3_code17                  ; 0xd888 $9878 20 9B 9A                 ;
jsr      L99B9                         ; 0xd88b $987B 20 B9 99                 ;
jsr      L9A8A                         ; 0xd88e $987E 20 8A 9A                 ;
lda      $AF,x                         ; 0xd891 $9881 B5 AF                    ;; Various enemy state variables
bne      L98BC                         ; 0xd893 $9883 D0 37                    ;
jsr      L9A68                         ; 0xd895 $9885 20 68 9A                 ;
lda      $A1,x                         ; 0xd898 $9888 B5 A1                    ; Enemy Code
cmp      #$0A                          ; 0xd89a $988A C9 0A                    ;
bcc      L98BB                         ; 0xd89c $988C 90 2D                    ;
cmp      #$19                          ; 0xd89e $988E C9 19                    ;
bcc      L9896                         ; 0xd8a0 $9890 90 04                    ;
cmp      #$21                          ; 0xd8a2 $9892 C9 21                    ;
bcc      L98BB                         ; 0xd8a4 $9894 90 25                    ;
L9896                                                                          ;
jsr      LEA32                         ; 0xd8a6 $9896 20 32 EA                 ;
lda      $D9                           ; 0xd8a9 $9899 A5 D9                    ; Thunder Spell modifier ?
cmp      #$8B                          ; 0xd8ab $989B C9 8B                    ;
bne      L98BB                         ; 0xd8ad $989D D0 1C                    ;
L989F                                                                          ;
inc      $AF,x                         ; 0xd8af $989F F6 AF                    ;; Various enemy state variables
lda      $DC                           ; 0xd8b1 $98A1 A5 DC                    ;
sta      $058D,x                       ; 0xd8b3 $98A3 9D 8D 05                 ;
lda      $DD                           ; 0xd8b6 $98A6 A5 DD                    ;
sta      $0593,x                       ; 0xd8b8 $98A8 9D 93 05                 ;
ldy      $60,x                         ; 0xd8bb $98AB B4 60                    ;; Enemy facing direction
lda      $4E,x                         ; 0xd8bd $98AD B5 4E                    ; Enemy X position (low byte)
clc                                    ; 0xd8bf $98AF 18                       ;
adc      L9780,y                       ; 0xd8c0 $98B0 79 80 97                 ;
sta      $0599,x                       ; 0xd8c3 $98B3 9D 99 05                 ;
lda      $3C,x                         ; 0xd8c6 $98B6 B5 3C                    ; Enemy X position (high byte)
sta      $059F,x                       ; 0xd8c8 $98B8 9D 9F 05                 ;
L98BB                                                                          ;
rts                                    ; 0xd8cb $98BB 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L98BC                                                                          ;
inc      $AF,x                         ; 0xd8cc $98BC F6 AF                    ;; Various enemy state variables
cmp      #$10                          ; 0xd8ce $98BE C9 10                    ;
bne      L98C5                         ; 0xd8d0 $98C0 D0 03                    ;
jmp      bank3_Related_to_woman_opening_door; 0xd8d2 $98C2 4C 46 99            ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L98C5                                                                          ;
cmp      #$20                          ; 0xd8d5 $98C5 C9 20                    ;
bne      L98CC                         ; 0xd8d7 $98C7 D0 03                    ;
jmp      L994A                         ; 0xd8d9 $98C9 4C 4A 99                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L98CC                                                                          ;
cmp      #$40                          ; 0xd8dc $98CC C9 40                    ;
bne      L98D8                         ; 0xd8de $98CE D0 08                    ;
jsr      L98F9                         ; 0xd8e0 $98D0 20 F9 98                 ;
lda      #$54                          ; 0xd8e3 $98D3 A9 54                    ; A = 54
sta      (L0000),y                     ; 0xd8e5 $98D5 91 00                    ;
rts                                    ; 0xd8e7 $98D7 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L98D8                                                                          ;
cmp      #$70                          ; 0xd8e8 $98D8 C9 70                    ;
bne      L98DF                         ; 0xd8ea $98DA D0 03                    ;
jmp      bank3_Related_to_woman_opening_door; 0xd8ec $98DC 4C 46 99            ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L98DF                                                                          ;
cmp      #$7E                          ; 0xd8ef $98DF C9 7E                    ;
bne      L990A                         ; 0xd8f1 $98E1 D0 27                    ;
jsr      L994E                         ; 0xd8f3 $98E3 20 4E 99                 ;
lda      $A1,x                         ; 0xd8f6 $98E6 B5 A1                    ; Enemy Code
cmp      #$17                          ; 0xd8f8 $98E8 C9 17                    ;
bcc      L98F6                         ; 0xd8fa $98EA 90 0A                    ;
jsr      L975D                         ; 0xd8fc $98EC 20 5D 97                 ;
lda      #$FF                          ; 0xd8ff $98EF A9 FF                    ; A = FF
sta      $05BD,x                       ; 0xd901 $98F1 9D BD 05                 ;
bne      L98F9                         ; 0xd904 $98F4 D0 03                    ;
L98F6                                                                          ;
jsr      LDD3D                         ; 0xd906 $98F6 20 3D DD                 ;
L98F9                                                                          ;
lda      $058D,x                       ; 0xd909 $98F9 BD 8D 05                 ;
sta      L0000                         ; 0xd90c $98FC 85 00                    ;
lda      $0593,x                       ; 0xd90e $98FE BD 93 05                 ;
sta      $01                           ; 0xd911 $9901 85 01                    ;
ldy      #$B0                          ; 0xd913 $9903 A0 B0                    ; Y = B0
lda      #$53                          ; 0xd915 $9905 A9 53                    ; A = 53
sta      (L0000),y                     ; 0xd917 $9907 91 00                    ;
rts                                    ; 0xd919 $9909 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L990A                                                                          ;
cmp      #$20                          ; 0xd91a $990A C9 20                    ;
bcc      L9921                         ; 0xd91c $990C 90 13                    ;
cmp      #$40                          ; 0xd91e $990E C9 40                    ;
bcs      L9921                         ; 0xd920 $9910 B0 0F                    ;
and      #$0F                          ; 0xd922 $9912 29 0F                    ; keep bits .... xxxx
cmp      #$07                          ; 0xd924 $9914 C9 07                    ;
bne      L991E                         ; 0xd926 $9916 D0 06                    ;
lda      $2A,x                         ; 0xd928 $9918 B5 2A                    ; Enemy Y Position
sbc      #$04                          ; 0xd92a $991A E9 04                    ;
sta      $2A,x                         ; 0xd92c $991C 95 2A                    ;; Enemy Y Position
L991E                                                                          ;
jmp      L9A68                         ; 0xd92e $991E 4C 68 9A                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9921                                                                          ;
rts                                    ; 0xd931 $9921 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Tile_Mappings_for_Opening_Door                                           ;
.byt    $49,$FF,$FF                    ; 0xd932 $9922 49 FF FF                 ;
L9925                                                                          ;
.byt    $FF,$FF,$47,$49,$FF,$FF,$FF,$FF; 0xd935 $9925 FF FF 47 49 FF FF FF FF  ;
.byt    $47,$49,$40,$40,$41,$40,$47    ; 0xd93d $992D 47 49 40 40 41 40 47     ;
L9934                                                                          ;
.byt    $4A,$40,$40,$41,$40,$48,$4A,$FF; 0xd944 $9934 4A 40 40 41 40 48 4A FF  ;
.byt    $FF,$FF,$FF,$48,$4A,$40,$40,$40; 0xd94c $993C FF FF FF 48 4A 40 40 40  ;
.byt    $40,$48                        ; 0xd954 $9944 40 48                    ;
; ---------------------------------------------------------------------------- ;
bank3_Related_to_woman_opening_door                                            ;
ldx      #$00                          ; 0xd956 $9946 A2 00                    ; X = 00
beq      L9950                         ; 0xd958 $9948 F0 06                    ;
L994A                                                                          ;
ldx      #$06                          ; 0xd95a $994A A2 06                    ; X = 06
bne      L9950                         ; 0xd95c $994C D0 02                    ;
L994E                                                                          ;
ldx      #$0C                          ; 0xd95e $994E A2 0C                    ; X = 0C
L9950                                                                          ;
lda      $C9                           ; 0xd960 $9950 A5 C9                    ;
and      #$0C                          ; 0xd962 $9952 29 0C                    ; keep bits .... xx..
cmp      #$0C                          ; 0xd964 $9954 C9 0C                    ;
bne      L995A                         ; 0xd966 $9956 D0 02                    ;
ldx      #$0C                          ; 0xd968 $9958 A2 0C                    ; X = 0C
L995A                                                                          ;
lda      #$05                          ; 0xd96a $995A A9 05                    ; A = 05
sta      L0000                         ; 0xd96c $995C 85 00                    ;
ldy      $0301                         ; 0xd96e $995E AC 01 03                 ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
L9961                                                                          ;
lda      bank3_Tile_Mappings_for_Opening_Door,x; 0xd971 $9961 BD 22 99         ;
sta      $0305,y                       ; 0xd974 $9964 99 05 03                 ;
lda      L9934,x                       ; 0xd977 $9967 BD 34 99                 ;
sta      $030E,y                       ; 0xd97a $996A 99 0E 03                 ;
inx                                    ; 0xd97d $996D E8                       ;
iny                                    ; 0xd97e $996E C8                       ;
dec      L0000                         ; 0xd97f $996F C6 00                    ;
bpl      L9961                         ; 0xd981 $9971 10 EE                    ;
ldx      $10                           ; 0xd983 $9973 A6 10                    ;; used as monster x register ;draw boss hp bar
ldy      $0301                         ; 0xd985 $9975 AC 01 03                 ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
lda      $0599,x                       ; 0xd988 $9978 BD 99 05                 ;
lsr                                    ; 0xd98b $997B 4A                       ;
lsr                                    ; 0xd98c $997C 4A                       ;
lsr                                    ; 0xd98d $997D 4A                       ;
lsr                                    ; 0xd98e $997E 4A                       ;
asl                                    ; 0xd98f $997F 0A                       ;
adc      #$80                          ; 0xd990 $9980 69 80                    ;
sta      $0303,y                       ; 0xd992 $9982 99 03 03                 ;
adc      #$01                          ; 0xd995 $9985 69 01                    ;
sta      $030C,y                       ; 0xd997 $9987 99 0C 03                 ;
lda      $059F,x                       ; 0xd99a $998A BD 9F 05                 ;
and      #$01                          ; 0xd99d $998D 29 01                    ; keep bits .... ...x
asl                                    ; 0xd99f $998F 0A                       ;
asl                                    ; 0xd9a0 $9990 0A                       ;
ora      #$22                          ; 0xd9a1 $9991 09 22                    ; set  bits ..x. ..x.
sta      L0302,y                       ; 0xd9a3 $9993 99 02 03                 ;
sta      $030B,y                       ; 0xd9a6 $9996 99 0B 03                 ;
lda      #$86                          ; 0xd9a9 $9999 A9 86                    ; A = 86
sta      $0304,y                       ; 0xd9ab $999B 99 04 03                 ;
sta      $030D,y                       ; 0xd9ae $999E 99 0D 03                 ;
lda      #$FF                          ; 0xd9b1 $99A1 A9 FF                    ; A = FF
sta      $0314,y                       ; 0xd9b3 $99A3 99 14 03                 ;
tya                                    ; 0xd9b6 $99A6 98                       ;
clc                                    ; 0xd9b7 $99A7 18                       ;
adc      #$12                          ; 0xd9b8 $99A8 69 12                    ;
sta      $0301                         ; 0xd9ba $99AA 8D 01 03                 ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
ldx      $10                           ; 0xd9bd $99AD A6 10                    ;; used as monster x register ;draw boss hp bar
rts                                    ; 0xd9bf $99AF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L99B0                                                                          ;
jsr      bank3_code17                  ; 0xd9c0 $99B0 20 9B 9A                 ;
jsr      L9A8A                         ; 0xd9c3 $99B3 20 8A 9A                 ;
jsr      L9A68                         ; 0xd9c6 $99B6 20 68 9A                 ;
L99B9                                                                          ;
lda      $C9                           ; 0xd9c9 $99B9 A5 C9                    ;
ora      $074C                         ; 0xd9cb $99BB 0D 4C 07                 ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
bne      L9A1C                         ; 0xd9ce $99BE D0 5C                    ;
lda      $A1,x                         ; 0xd9d0 $99C0 B5 A1                    ; Enemy Code
cmp      #$0A                          ; 0xd9d2 $99C2 C9 0A                    ;
beq      L99CB                         ; 0xd9d4 $99C4 F0 05                    ;
lda      $0479                         ; 0xd9d6 $99C6 AD 79 04                 ; Link is in mid-air ? (1 = mid-air)
bne      L9A1C                         ; 0xd9d9 $99C9 D0 51                    ;
L99CB                                                                          ;
jsr      LE4D9                         ; 0xd9db $99CB 20 D9 E4                 ;
lda      $A8,x                         ; 0xd9de $99CE B5 A8                    ;; Enemy State
and      #$10                          ; 0xd9e0 $99D0 29 10                    ; keep bits ...x ....
beq      L9A1C                         ; 0xd9e2 $99D2 F0 48                    ;
stx      $048B                         ; 0xd9e4 $99D4 8E 8B 04                 ;; Conversation Pointer; Townfolk Slot				used as X position for monster ID
lda      $0736                         ; 0xd9e7 $99D7 AD 36 07                 ; Game Mode
cmp      #$16                          ; 0xd9ea $99DA C9 16                    ;
bne      L9A1D                         ; 0xd9ec $99DC D0 3F                    ;
lda      $AF,x                         ; 0xd9ee $99DE B5 AF                    ;; Various enemy state variables
cmp      #$40                          ; 0xd9f0 $99E0 C9 40                    ;
bcc      L9A1C                         ; 0xd9f2 $99E2 90 38                    ;
lda      $A1,x                         ; 0xd9f4 $99E4 B5 A1                    ; Enemy Code
L99E6                                                                          ;
cmp      #$17                          ; 0xd9f6 $99E6 C9 17                    ;healer lady?
bcc      L9A1C                         ; 0xd9f8 $99E8 90 32                    ;
jsr      L98F9                         ; 0xd9fa $99EA 20 F9 98                 ;
ldy      #$04                          ; 0xd9fd $99ED A0 04                    ; Y = 04
sty      $074C                         ; 0xd9ff $99EF 8C 4C 07                 ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
sty      $DE                           ; 0xda02 $99F2 84 DE                    ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
inc      $05C3,x                       ; 0xda04 $99F4 FE C3 05                 ;
lda      #$0B                          ; 0xda07 $99F7 A9 0B                    ; A = 0B
sta      $0736                         ; 0xda09 $99F9 8D 36 07                 ; Game Mode
dec      $075B                         ; 0xda0c $99FC CE 5B 07                 ;
inc      $048D                         ; 0xda0f $99FF EE 8D 04                 ;; Related to Link's flicker after being hit ?
lda      #$00                          ; 0xda12 $9A02 A9 00                    ; A = 00
L9A04                                                                          ;
sta      $0726                         ; 0xda14 $9A04 8D 26 07                 ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
ldx      #$05                          ; 0xda17 $9A07 A2 05                    ; X = 05
L9A09                                                                          ;
lda      $B6,x                         ; 0xda19 $9A09 B5 B6                    ; Generated Enemy Slot
beq      L9A17                         ; 0xda1b $9A0B F0 0A                    ;
ldy      $BC,x                         ; 0xda1d $9A0D B4 BC                    ;; Generated Enemy Y Position ?
bmi      L9A17                         ; 0xda1f $9A0F 30 06                    ;
lda      ($D6),y                       ; 0xda21 $9A11 B1 D6                    ;
ora      #$80                          ; 0xda23 $9A13 09 80                    ; set bits x... ....
sta      ($D6),y                       ; 0xda25 $9A15 91 D6                    ;
L9A17                                                                          ;
dex                                    ; 0xda27 $9A17 CA                       ;
bpl      L9A09                         ; 0xda28 $9A18 10 EF                    ;
ldx      $10                           ; 0xda2a $9A1A A6 10                    ;; used as monster x register ;draw boss hp bar
L9A1C                                                                          ;
rts                                    ; 0xda2c $9A1C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A1D                                                                          ;
lda      $05BD,x                       ; 0xda2d $9A1D BD BD 05                 ;
cmp      #$65                          ; 0xda30 $9A20 C9 65                    ;
bcc      L9A28                         ; 0xda32 $9A22 90 04                    ;
cmp      #$AC                          ; 0xda34 $9A24 C9 AC                    ;
bcc      L9A4F                         ; 0xda36 $9A26 90 27                    ;
L9A28                                                                          ;
lda      $AF,x                         ; 0xda38 $9A28 B5 AF                    ;; Various enemy state variables
bne      L9A4F                         ; 0xda3a $9A2A D0 23                    ;
bank3_Check_for_B_button_to_talk_to_people                                     ;
lda       !$F5                         ; 0xda3c $9A2C AD F5 00                 ; Controller 1 buttons pressed
and      #$40                          ; 0xda3f $9A2F 29 40                    ; keep bits .x.. .... (B button)
beq      L9A4F                         ; 0xda41 $9A31 F0 1C                    ;
L9A33                                                                          ;
lda      #$02                          ; 0xda43 $9A33 A9 02                    ; A = 02
sta      $074C                         ; 0xda45 $9A35 8D 4C 07                 ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
sta      $DE                           ; 0xda48 $9A38 85 DE                    ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
inc      $05C3,x                       ; 0xda4a $9A3A FE C3 05                 ;
lda      #$00                          ; 0xda4d $9A3D A9 00                    ; A = 00
sta      $0400                         ; 0xda4f $9A3F 8D 00 04                 ; Sword slash frame code
lda      #$03                          ; 0xda52 $9A42 A9 03                    ; A = 03 (Link set to stand when talking)
sta      $80                           ; 0xda54 $9A44 85 80                    ; Current Animation Frame for Link
L9A46                                                                          ;
lda      $29                           ; 0xda56 $9A46 A5 29                    ; Link's Y position
and      #$F0                          ; 0xda58 $9A48 29 F0                    ; keep bits xxxx ....
sta      $29                           ; 0xda5a $9A4A 85 29                    ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
inc      $05A5,x                       ; 0xda5c $9A4C FE A5 05                 ;;town npc chat counter
L9A4F                                                                          ;
rts                                    ; 0xda5f $9A4F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A50                                                                          ;
lda      #$FF                          ; 0xda60 $9A50 A9 FF                    ; A = FF
sta      $05BD,x                       ; 0xda62 $9A52 9D BD 05                 ;
lda      #$02                          ; 0xda65 $9A55 A9 02                    ; A = 02
sta      $05B7,x                       ; 0xda67 $9A57 9D B7 05                 ;
ldy      $05AB,x                       ; 0xda6a $9A5A BC AB 05                 ;
bpl      L9A60                         ; 0xda6d $9A5D 10 01                    ;
lsr                                    ; 0xda6f $9A5F 4A                       ;
L9A60                                                                          ;
cmp      $60,x                         ; 0xda70 $9A60 D5 60                    ;; Enemy facing direction
beq      L9A67                         ; 0xda72 $9A62 F0 03                    ;
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0xda74 $9A64 20 EB E8;
L9A67                                                                          ;
rts                                    ; 0xda77 $9A67 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A68                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0xda78 $9A68 20 B8 DE               ;
inc      $05B1,x                       ; 0xda7b $9A6B FE B1 05                 ;
lda      $05B1,x                       ; 0xda7e $9A6E BD B1 05                 ;
and      #$0F                          ; 0xda81 $9A71 29 0F                    ; keep bits .... xxxx
bne      L9A89                         ; 0xda83 $9A73 D0 14                    ;
lda      #$01                          ; 0xda85 $9A75 A9 01                    ; A = 01
ldy      $71,x                         ; 0xda87 $9A77 B4 71                    ;; Enemy X Velocity
beq      L9A89                         ; 0xda89 $9A79 F0 0E                    ;
bpl      L9A84                         ; 0xda8b $9A7B 10 07                    ;
asl                                    ; 0xda8d $9A7D 0A                       ;
dec      $05AB,x                       ; 0xda8e $9A7E DE AB 05                 ;
dec      $05AB,x                       ; 0xda91 $9A81 DE AB 05                 ;
L9A84                                                                          ;
inc      $05AB,x                       ; 0xda94 $9A84 FE AB 05                 ;
sta      $60,x                         ; 0xda97 $9A87 95 60                    ;; Enemy facing direction
L9A89                                                                          ;
rts                                    ; 0xda99 $9A89 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A8A                                                                          ;
jsr      LDE6C                         ; 0xda9a $9A8A 20 6C DE                 ;
L9A8D                                                                          ;
jsr      bank7_Display                 ; 0xda9d $9A8D 20 11 EF                 ;
L9A90                                                                          ;
lda      $05BD,x                       ; 0xdaa0 $9A90 BD BD 05                 ;
beq      L9A98                         ; 0xdaa3 $9A93 F0 03                    ;
dec      $05BD,x                       ; 0xdaa5 $9A95 DE BD 05                 ;
L9A98                                                                          ;
rts                                    ; 0xdaa8 $9A98 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_table10                                                                  ;
.byt    $02,$01                        ; 0xdaa9 $9A99 02 01                    ;
; ---------------------------------------------------------------------------- ;
bank3_code17                                                                   ;
lda      $05C3,x                       ; 0xdaab $9A9B BD C3 05                 ;
beq      L9A98                         ; 0xdaae $9A9E F0 F8                    ;
lda      $60,x                         ; 0xdab0 $9AA0 B5 60                    ;; Enemy facing direction
pha                                    ; 0xdab2 $9AA2 48                       ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0xdab3 $9AA3 20 91 DC;
lda      bank3_table10,y               ; 0xdab6 $9AA6 B9 99 9A                 ;
sta      $9F                           ; 0xdab9 $9AA9 85 9F                    ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
pla                                    ; 0xdabb $9AAB 68                       ;
ldy      $A1,x                         ; 0xdabc $9AAC B4 A1                    ; Enemy Code
cpy      #$13                          ; 0xdabe $9AAE C0 13                    ;
bcc      L9AB8                         ; 0xdac0 $9AB0 90 06                    ;
cpy      #$19                          ; 0xdac2 $9AB2 C0 19                    ;
bcs      L9AB8                         ; 0xdac4 $9AB4 B0 02                    ;
sta      $60,x                         ; 0xdac6 $9AB6 95 60                    ;; Enemy facing direction
L9AB8                                                                          ;
pla                                    ; 0xdac8 $9AB8 68                       ;
pla                                    ; 0xdac9 $9AB9 68                       ;
jmp      bank7_Display                 ; 0xdaca $9ABA 4C 11 EF                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9ABD                                                                          ;
lda      #$00                          ; 0xdacd $9ABD A9 00                    ; A = 00
sta      $05BD,x                       ; 0xdacf $9ABF 9D BD 05                 ;
jsr      L99B9                         ; 0xdad2 $9AC2 20 B9 99                 ;
jmp      LDE6C                         ; 0xdad5 $9AC5 4C 6C DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Enemy_Routines1_Wise_Man                                                 ;
lda      $049E                         ; 0xdad8 $9AC8 AD 9E 04                 ;
beq      bank3_Enemy_Routines1_ManyNPC ; 0xdadb $9ACB F0 1B                    ;
dec      $049E                         ; 0xdadd $9ACD CE 9E 04                 ;
lda      #$00                          ; 0xdae0 $9AD0 A9 00                    ; A = 00
sta      $05C3,x                       ; 0xdae2 $9AD2 9D C3 05                 ;
dec      L0000                         ; 0xdae5 $9AD5 C6 00                    ;
dec      L0000                         ; 0xdae7 $9AD7 C6 00                    ;
dec      L0000                         ; 0xdae9 $9AD9 C6 00                    ;
dec      L0000                         ; 0xdaeb $9ADB C6 00                    ;
lda      #$01                          ; 0xdaed $9ADD A9 01                    ; A = 01
sta      $03                           ; 0xdaef $9ADF 85 03                    ;
ldy      $91,x                         ; 0xdaf1 $9AE1 B4 91                    ;
ldx      #$4C                          ; 0xdaf3 $9AE3 A2 4C                    ; X = 4C
jmp      L9B3F                         ; 0xdaf5 $9AE5 4C 3F 9B                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Enemy_Routines1_ManyNPC                                                  ;
lda      $71,x                         ; 0xdaf8 $9AE8 B5 71                    ; Enemy X Velocity
sta      $09                           ; 0xdafa $9AEA 85 09                    ;
lda      $AF,x                         ; 0xdafc $9AEC B5 AF                    ;; Various enemy state variables
pha                                    ; 0xdafe $9AEE 48                       ;
lda      $05C3,x                       ; 0xdaff $9AEF BD C3 05                 ;
sta      $05                           ; 0xdb02 $9AF2 85 05                    ;
ldy      $A1,x                         ; 0xdb04 $9AF4 B4 A1                    ; Enemy Code
lda      $6DF9,y                       ; 0xdb06 $9AF6 B9 F9 6D                 ;
sta      $03                           ; 0xdb09 $9AF9 85 03                    ;
lda      $6DD5,y                       ; 0xdb0b $9AFB B9 D5 6D                 ;
ldy      $91,x                         ; 0xdb0e $9AFE B4 91                    ;
sty      $0F                           ; 0xdb10 $9B00 84 0F                    ;
tax                                    ; 0xdb12 $9B02 AA                       ;
pla                                    ; 0xdb13 $9B03 68                       ;
asl      $03                           ; 0xdb14 $9B04 06 03                    ;
bcc      L9B0A                         ; 0xdb16 $9B06 90 02                    ;
bcs      L9B3B                         ; 0xdb18 $9B08 B0 31                    ;
L9B0A                                                                          ;
cmp      #$40                          ; 0xdb1a $9B0A C9 40                    ;
bcs      L9B45                         ; 0xdb1c $9B0C B0 37                    ;
asl      $05                           ; 0xdb1e $9B0E 06 05                    ;
bne      L9B3B                         ; 0xdb20 $9B10 D0 29                    ;
cmp      #$00                          ; 0xdb22 $9B12 C9 00                    ;
beq      L9B20                         ; 0xdb24 $9B14 F0 0A                    ;
cmp      #$40                          ; 0xdb26 $9B16 C9 40                    ;
bcc      L9B1C                         ; 0xdb28 $9B18 90 02                    ;
bcs      L9B45                         ; 0xdb2a $9B1A B0 29                    ;
L9B1C                                                                          ;
cmp      #$20                          ; 0xdb2c $9B1C C9 20                    ;
bcc      L9B37                         ; 0xdb2e $9B1E 90 17                    ;
L9B20                                                                          ;
lda      $09                           ; 0xdb30 $9B20 A5 09                    ;
beq      L9B3B                         ; 0xdb32 $9B22 F0 17                    ;
bpl      L9B2B                         ; 0xdb34 $9B24 10 05                    ;
eor      #$FF                          ; 0xdb36 $9B26 49 FF                    ; flip all bits
clc                                    ; 0xdb38 $9B28 18                       ;
adc      #$01                          ; 0xdb39 $9B29 69 01                    ;
L9B2B                                                                          ;
tay                                    ; 0xdb3b $9B2B A8                       ;
lda      #$08                          ; 0xdb3c $9B2C A9 08                    ; A = 08
cpy      #$10                          ; 0xdb3e $9B2E C0 10                    ;
bcs      L9B33                         ; 0xdb40 $9B30 B0 01                    ;
asl                                    ; 0xdb42 $9B32 0A                       ;
L9B33                                                                          ;
and      $12                           ; 0xdb43 $9B33 25 12                    ;; Frame Counter (ascending)
bne      L9B3B                         ; 0xdb45 $9B35 D0 04                    ;
L9B37                                                                          ;
inx                                    ; 0xdb47 $9B37 E8                       ;
inx                                    ; 0xdb48 $9B38 E8                       ;
inx                                    ; 0xdb49 $9B39 E8                       ;
inx                                    ; 0xdb4a $9B3A E8                       ;
L9B3B                                                                          ;
lsr      $03                           ; 0xdb4b $9B3B 46 03                    ;
ldy      $0F                           ; 0xdb4d $9B3D A4 0F                    ;
L9B3F                                                                          ;
jsr      LF1F4                         ; 0xdb4f $9B3F 20 F4 F1                 ;
jmp      LF0D7                         ; 0xdb52 $9B42 4C D7 F0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B45                                                                          ;
ldx      $10                           ; 0xdb55 $9B45 A6 10                    ;; used as monster x register ;draw boss hp bar
rts                                    ; 0xdb57 $9B47 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Background_Areas_Data                                                    ;
.byt    $14,$20,$06,$78,$00,$D7,$D2,$04; 0xdb58 $9B48 14 20 06 78 00 D7 D2 04  ;
.byt    $D2,$02,$20,$D3,$D2,$0C,$D2,$0E; 0xdb60 $9B50 D2 02 20 D3 D2 0C D2 0E  ;
.byt    $D8,$00,$DE,$0F                ; 0xdb68 $9B58 D8 00 DE 0F              ;
L9B5C                                                                          ;
.byt    $18,$60,$90,$00,$14,$06,$32,$07; 0xdb6c $9B5C 18 60 90 00 14 06 32 07  ;
.byt    $21,$06,$0D,$07,$48,$06,$18,$06; 0xdb74 $9B64 21 06 0D 07 48 06 18 06  ;
.byt    $32,$07,$28,$06,$06,$07,$46,$06; 0xdb7c $9B6C 32 07 28 06 06 07 46 06  ;
bank3_Area_Data_Towns2                                                         ;
.byt    $09,$20,$08,$7A,$E1,$00,$AB,$0F; 0xdb84 $9B74 09 20 08 7A E1 00 AB 0F  ;
.byt    $0E                            ; 0xdb8c $9B7C 0E                       ;
L9B7D                                                                          ;
.byt    $09,$20,$08,$7A,$E1,$00,$AB,$0F; 0xdb8d $9B7D 09 20 08 7A E1 00 AB 0F  ;
.byt    $07                            ; 0xdb95 $9B85 07                       ;
; ---------------------------------------------------------------------------- ;
bank3_code18                                                                   ;
txa                                    ; 0xdb96 $9B86 8A                       ;
lsr                                    ; 0xdb97 $9B87 4A                       ;
lsr                                    ; 0xdb98 $9B88 4A                       ;
lsr                                    ; 0xdb99 $9B89 4A                       ;
lsr                                    ; 0xdb9a $9B8A 4A                       ;
tax                                    ; 0xdb9b $9B8B AA                       ;
dex                                    ; 0xdb9c $9B8C CA                       ;
lda      $0730                         ; 0xdb9d $9B8D AD 30 07                 ; Position of Object Placement
and      #$F0                          ; 0xdba0 $9B90 29 F0                    ; keep bits xxxx ....
cmp      #$F0                          ; 0xdba2 $9B92 C9 F0                    ;
bne      L9B9B                         ; 0xdba4 $9B94 D0 05                    ;
txa                                    ; 0xdba6 $9B96 8A                       ;
clc                                    ; 0xdba7 $9B97 18                       ;
adc      #$0F                          ; 0xdba8 $9B98 69 0F                    ;
tax                                    ; 0xdbaa $9B9A AA                       ;
L9B9B                                                                          ;
txa                                    ; 0xdbab $9B9B 8A                       ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0xdbac $9B9C 20 85 D3; Set Object Construction Address
bank3_Pointer_table_for_Objects_Construction_Routines                          ;
.word    bank3_Objects_Construction_Routines_Cross_Hatched_Roof_2_high_X_wide_1x; 0xdbaf $9B9F EE 80;Cross Hatched Roof, 2 high, X wide	(1x)
.word    bank3_Objects_Construction_Routines_Cross_Hatched_Roof_2_high_X_wide_1x; 0xdbb1 $9BA1 EE 80;Cross Hatched Roof, 2 high, X wide	(2x)
.word    bank3_Objects_Construction_Routines_White_Shingle_Roof_2_high_X_wide_3x; 0xdbb3 $9BA3 F2 80;White Shingle Roof, 2 high, X wide	(3x)
.word    bank3_Objects_Construction_Routines_Green_Shingle_Roof_2_high_X_wide_4x; 0xdbb5 $9BA5 F6 80;Green Shingle Roof, 2 high, X wide	(4x)
.word    bank3_Objects_Construction_Routines_House_Facade__Bricks_X_wide__5x; 0xdbb7 $9BA7 3B 81;House Facade - Bricks, X wide		(5x)
.word    bank3_Objects_Construction_Routines_House_Facade__Small_bricks_X_wide_6x; 0xdbb9 $9BA9 3F 81;House Facade - Small bricks, X wide	(6x)
.word    bank3_Objects_Construction_Routines_House_Facade__Grass_X_wide__7x; 0xdbbb $9BAB 43 81;House Facade - Grass, X wide		(7x)
.word    bank3_Objects_Construction_Routines_House_Facade__White_bricks_X_wide_8x; 0xdbbd $9BAD 47 81;House Facade - White bricks, X wide	(8x)
.word    bank3_Objects_Construction_Routines_House_Facade__Logs_X_wide__9x; 0xdbbf $9BAF 55 81;House Facade - Logs, X wide		(9x)
.word    bank3_Objects_Construction_Routines_Square_Window_1_wide_2_high_repeat_down_Ax; 0xdbc1 $9BB1 7E 81;Square Window, 1 wide, 2 high, repeat down	(Ax)
.word    bank3_Objects_Construction_Routines_Rounded_Window_1_wide_2_high_repeat_down_Bx; 0xdbc3 $9BB3 82 81;Rounded Window, 1 wide, 2 high, repeat down	(Bx)
.word    bank3_Objects_Construction_Routines_Hatched_Window_1_wide_2_high_repeat_down_Cx; 0xdbc5 $9BB5 8C 81;Hatched Window, 1 wide, 2 high, repeat down	(Cx)
.word    bank3_Objects_Construction_Routines_Blocks_wall_in_caves_2_high_X_wide_Dx; 0xdbc7 $9BB7 02 81;Blocks wall in caves, 2 high, X wide	(Dx)
.word    bank3_Objects_Construction_Routines_Column_X_high_1_wide___Ex; 0xdbc9 $9BB9 6D 9C;Column, X high, 1 wide			(Ex)
.word    bank3_Objects_Construction_Routines_Square_brick_wall_1_high_X_wide_Fx; 0xdbcb $9BBB 8C 9C;Square brick wall, 1 high, X wide	(Fx)
.word    bank3_Objects_Construction_Routines_Bushes_1_high_X_wide_Y_Position_A__1x; 0xdbcd $9BBD 95 8B;Bushes, 1 high, X wide (Y Position A)		(1x)
.word    bank3_Objects_Construction_Routines_Background_wall_3_wide_X_high_Y_Position_4_2x; 0xdbcf $9BBF 3A 83;Background wall, 3 wide, X high (Y Position 4)	(2x)
.word    bank3_Objects_Construction_Routines_Indoor_Ceiling_3Step_Stairs_3_high_X_wide_3x; 0xdbd1 $9BC1 A8 81;Indoor Ceiling (3-Step Stairs), 3 high, X wide	(3x)
.word    bank3_Objects_Construction_Routines_Indoor_Ceiling_3Step_Stairs_3_high_X_wide_4x; 0xdbd3 $9BC3 D2 81;Indoor Ceiling (3-Step Stairs), 3 high, X wide	(4x)
.word    bank3_Objects_Construction_Routines_Bagu_maybe_confused_red_lumberjack__5x; 0xdbd5 $9BC5 5B 86;Bagu ? (confused red lumberjack)		(5x)
.word    bank3_Objects_Construction_Routines_Bridge_with_Water_X_wide_Y_Position_A_6x; 0xdbd7 $9BC7 66 83;Bridge with Water, X wide (Y Position A)	(6x)
.word    bank3_Objects_Construction_Routines_Water_X_wide_Y_Position_A___7x; 0xdbd9 $9BC9 0A 83;Water, X wide (Y Position A)			(7x)
; ---------------------------------------------------------------------------- ;
bank3_code19                                                                   ;
lda      $0730                         ; 0xdbdb $9BCB AD 30 07                 ; Position of Object Placement
and      #$F0                          ; 0xdbde $9BCE 29 F0                    ; keep bits xxxx ....
cmp      #$F0                          ; 0xdbe0 $9BD0 C9 F0                    ;
bne      L9BD9                         ; 0xdbe2 $9BD2 D0 05                    ;
txa                                    ; 0xdbe4 $9BD4 8A                       ;
clc                                    ; 0xdbe5 $9BD5 18                       ;
adc      #$10                          ; 0xdbe6 $9BD6 69 10                    ;
tax                                    ; 0xdbe8 $9BD8 AA                       ;
L9BD9                                                                          ;
txa                                    ; 0xdbe9 $9BD9 8A                       ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0xdbea $9BDA 20 85 D3;
bank3_Table_for_Small_Objects_Construction_Routines                            ;
.word    bank3_SmallObjectsConstructionRoutines_Closed_Door_with_Grass_00; 0xdbed $9BDD A4 83;Closed Door with Grass	(00)
.word    bank3_SmallObjectsConstructionRoutines_Open_Door_with_Grass_01; 0xdbef $9BDF A8 83;Open Door with Grass	(01)
.word    bank3_SmallObjectsConstructionRoutines_Open_Door_with_Lines_02; 0xdbf1 $9BE1 AC 83;Open Door with Lines	(02)
.word    bank3_SmallObjectsConstructionRoutines_Open_Door_with_Bricks_03; 0xdbf3 $9BE3 B0 83;Open Door with Bricks	(03)
.word    bank3_SmallObjectsConstructionRoutines_Undefined_Object_2_wide_extending_to_ground_04; 0xdbf5 $9BE5 F5 82;Undefined Object, 2 wide, extending to ground (04)
.word    bank3_SmallObjectsConstructionRoutines_Chair__05; 0xdbf7 $9BE7 83 86  ;Chair		(05)
.word    bank3_SmallObjectsConstructionRoutines_Cloud__Long_06; 0xdbf9 $9BE9 62 86;Cloud - Long	(06)
.word    bank3_SmallObjectsConstructionRoutines_Cloud__Short_07; 0xdbfb $9BEB 68 86;Cloud - Short	(07)
.word    bank3_SmallObjectsConstructionRoutines_Table__08; 0xdbfd $9BED B2 82  ;Table		(08)
.word    bank3_SmallObjectsConstructionRoutines_Bench__09; 0xdbff $9BEF 93 86  ;Bench		(09)
.word    bank3_SmallObjectsConstructionRoutines_Cross__0A; 0xdc01 $9BF1 7C 86  ;Cross		(0A)
.word    bank3_SmallObjectsConstructionRoutines_Chimney_2_wide_1_high_can_crouch_in_it_0B; 0xdc03 $9BF3 56 9C;Chimney, 2 wide, 1 high (can crouch in it)	(0B)
.word    bank3_SmallObjectsConstructionRoutines_Chimney_2_wide_1_high_cant_go_in__0C; 0xdc05 $9BF5 5C 9C;Chimney, 2 wide, 1 high (can't go in)		(0C)
.word    bank3_SmallObjectsConstructionRoutines_Churchbell_0D; 0xdc07 $9BF7 78 86;Churchbell	(0D)
.word    bank3_SmallObjectsConstructionRoutines_Locked_Door_glitched_tiles_0E; 0xdc09 $9BF9 8E 8B;Locked Door (glitched tiles)	(0E)
.word    bank3_SmallObjectsConstructionRoutines_Locked_Door_glitched_tiles_0E; 0xdc0b $9BFB 8E 8B;Crash	(0F)
.word    bank3_SmallObjectsConstructionRoutines_Portal_to_Left_00; 0xdc0d $9BFD 6C 82;Portal to Left	(00)
.word    bank3_SmallObjectsConstructionRoutines_Portal_to_Right_01; 0xdc0f $9BFF 70 82;Portal to Right	(01)
.word    bank3_SmallObjectsConstructionRoutines_Wall_to_Left_02; 0xdc11 $9C01 74 82;Wall to Left	(02)
.word    bank3_SmallObjectsConstructionRoutines_Wall_to_Right_03; 0xdc13 $9C03 78 82;Wall to Right	(03)
.word    bank3_SmallObjectsConstructionRoutines_Fireplace_04; 0xdc15 $9C05 CF 82;Fireplace	(04)
.word    bank3_SmallObjectsConstructionRoutines_Fountain_05; 0xdc17 $9C07 32 9C;Fountain	(05)
.word    bank3_SmallObjectsConstructionRoutines_Sign__06; 0xdc19 $9C09 11 9C   ;Sign		(06)
.word    bank3_SmallObjectsConstructionRoutines_Gravestone_07; 0xdc1b $9C0B A1 9C;Gravestone	(07)
.word    bank3_SmallObjectsConstructionRoutines_Tomb_Decoration__Left_08; 0xdc1d $9C0D A5 9C;Tomb Decoration - Left	(08)
.word    bank3_SmallObjectsConstructionRoutines_Tomb_Decoration__Right_09; 0xdc1f $9C0F AC 9C;Tomb Decoration - Right	(09)
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Sign__06                                ;
lda      $0730                         ; 0xdc21 $9C11 AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xdc24 $9C14 29 0F                    ; keep bits .... xxxx
ora      #$90                          ; 0xdc26 $9C16 09 90                    ; set  bits x..x ....
sta      $0730                         ; 0xdc28 $9C18 8D 30 07                 ;; Position of Object Placement
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xdc2b $9C1B 20 44 C9           ;
lda      #$E3                          ; 0xdc2e $9C1E A9 E3                    ; A = E3
jsr      LDF56                         ; 0xdc30 $9C20 20 56 DF                 ;
lda      #$E4                          ; 0xdc33 $9C23 A9 E4                    ; A = E4
sta      (L000E),y                     ; 0xdc35 $9C25 91 0E                    ;
rts                                    ; 0xdc37 $9C27 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Tile_Codes_for_Fountain                                                  ;
.byt    $DB,$D8,$DA,$D8,$D7,$40,$40,$D9; 0xdc38 $9C28 DB D8 DA D8 D7 40 40 D9  ;
.byt    $40,$40                        ; 0xdc40 $9C30 40 40                    ;
bank3_SmallObjectsConstructionRoutines_Fountain_05                             ;
.byt    $A2,$09,$AD,$30,$07,$29,$0F,$09; 0xdc42 $9C32 A2 09 AD 30 07 29 0F 09  ; X = 09
.byt    $90,$8D,$30,$07,$20,$44,$C9,$BD; 0xdc4a $9C3A 90 8D 30 07 20 44 C9 BD  ;
.byt    $28,$9C,$20,$E7,$DE,$CA,$30,$0B; 0xdc52 $9C42 28 9C 20 E7 DE CA 30 0B  ;
.byt    $E0,$04,$D0,$F3,$20,$4C,$DF,$A8; 0xdc5a $9C4A E0 04 D0 F3 20 4C DF A8  ;
.byt    $4C,$41,$9C,$60                ; 0xdc62 $9C52 4C 41 9C 60              ;
bank3_SmallObjectsConstructionRoutines_Chimney_2_wide_1_high_can_crouch_in_it_0B ;
.byt    $A2,$00,$F0,$04                ; 0xdc66 $9C56 A2 00 F0 04              ; X = 00
bank3_table11                                                                  ;
.byt    $59,$5A                        ; 0xdc6a $9C5A 59 5A                    ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Chimney_2_wide_1_high_cant_go_in__0C    ;
ldx      #$01                          ; 0xdc6c $9C5C A2 01                    ; X = 01
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xdc6e $9C5E 20 44 C9           ; Set RAM Address for Object (0E-0F)
lda      bank3_table11,x               ; 0xdc71 $9C61 BD 5A 9C                 ;
jsr      bank7_Set_tile_and_move_right_1_column; 0xdc74 $9C64 20 E7 DE         ; Set tile and move right 1 column
lda      bank3_table11,x               ; 0xdc77 $9C67 BD 5A 9C                 ;
sta      (L000E),y                     ; 0xdc7a $9C6A 91 0E                    ;
rts                                    ; 0xdc7c $9C6C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Column_X_high_1_wide___Ex                  ;
lda      $0731                         ; 0xdc7d $9C6D AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xdc80 $9C70 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xdc82 $9C72 AA                       ;
ldy      $0730                         ; 0xdc83 $9C73 AC 30 07                 ; Position of Object Placement
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xdc86 $9C76 20 44 C9           ;
lda      #$94                          ; 0xdc89 $9C79 A9 94                    ; A = 94
sta      (L000E),y                     ; 0xdc8b $9C7B 91 0E                    ;
bne      L9C83                         ; 0xdc8d $9C7D D0 04                    ;
L9C7F                                                                          ;
lda      #$93                          ; 0xdc8f $9C7F A9 93                    ; A = 93
sta      (L000E),y                     ; 0xdc91 $9C81 91 0E                    ;
L9C83                                                                          ;
tya                                    ; 0xdc93 $9C83 98                       ;
clc                                    ; 0xdc94 $9C84 18                       ;
adc      #$10                          ; 0xdc95 $9C85 69 10                    ;
tay                                    ; 0xdc97 $9C87 A8                       ;
dex                                    ; 0xdc98 $9C88 CA                       ;
bpl      L9C7F                         ; 0xdc99 $9C89 10 F4                    ;
rts                                    ; 0xdc9b $9C8B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Objects_Construction_Routines_Square_brick_wall_1_high_X_wide_Fx         ;
lda      $0731                         ; 0xdc9c $9C8C AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0xdc9f $9C8F 29 0F                    ; keep bits .... xxxx
tax                                    ; 0xdca1 $9C91 AA                       ;
ldy      $0730                         ; 0xdca2 $9C92 AC 30 07                 ; Position of Object Placement
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xdca5 $9C95 20 44 C9           ;
L9C98                                                                          ;
lda      #$98                          ; 0xdca8 $9C98 A9 98                    ; A = 98
jsr      bank7_Set_tile_and_move_right_1_column; 0xdcaa $9C9A 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0xdcad $9C9D CA                       ;
bpl      L9C98                         ; 0xdcae $9C9E 10 F8                    ;
rts                                    ; 0xdcb0 $9CA0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Gravestone_07                           ;
ldx      #$00                          ; 0xdcb1 $9CA1 A2 00                    ; X = 00
beq      L9CAE                         ; 0xdcb3 $9CA3 F0 09                    ;
bank3_SmallObjectsConstructionRoutines_Tomb_Decoration__Left_08                ;
ldx      #$01                          ; 0xdcb5 $9CA5 A2 01                    ; X = 01
bne      L9CAE                         ; 0xdcb7 $9CA7 D0 05                    ;
bank3_Tile_Codes_for_Gravestone_and_Decorations                                ;
.byt    $95,$96,$97                    ; 0xdcb9 $9CA9 95 96 97                 ;
; ---------------------------------------------------------------------------- ;
bank3_SmallObjectsConstructionRoutines_Tomb_Decoration__Right_09               ;
ldx      #$02                          ; 0xdcbc $9CAC A2 02                    ; X = 02
L9CAE                                                                          ;
lda      $0730                         ; 0xdcbe $9CAE AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0xdcc1 $9CB1 29 0F                    ; keep bits .... xxxx
ora      #$90                          ; 0xdcc3 $9CB3 09 90                    ; set  bits x..x ....
sta      $0730                         ; 0xdcc5 $9CB5 8D 30 07                 ;; Position of Object Placement
tay                                    ; 0xdcc8 $9CB8 A8                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0xdcc9 $9CB9 20 44 C9           ;
lda      bank3_Tile_Codes_for_Gravestone_and_Decorations,x; 0xdccc $9CBC BD A9 9C;
sta      (L000E),y                     ; 0xdccf $9CBF 91 0E                    ;
rts                                    ; 0xdcd1 $9CC1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Area_Data_Towns3                                                         ;
.byt    $48,$00,$18,$30,$F0,$00,$F1,$38; 0xdcd2 $9CC2 48 00 18 30 F0 00 F1 38  ;
.byt    $52,$89,$71,$A0,$72,$A0,$A3,$05; 0xdcda $9CCA 52 89 71 A0 72 A0 A3 05  ;
.byt    $F1,$45,$90,$08,$A2,$05,$F1,$03; 0xdce2 $9CD2 F1 45 90 08 A2 05 F1 03  ;
.byt    $F3,$02,$F1,$38,$52,$89,$71,$A0; 0xdcea $9CDA F3 02 F1 38 52 89 71 A0  ;
.byt    $F4,$26,$F2,$44,$F3,$01,$F3,$00; 0xdcf2 $9CE2 F4 26 F2 44 F3 01 F3 00  ;
.byt    $F1,$39,$52,$89,$71,$A0,$72,$A0; 0xdcfa $9CEA F1 39 52 89 71 A0 72 A0  ;
.byt    $72,$A0,$A0,$09,$72,$A0,$F0,$44; 0xdd02 $9CF2 72 A0 A0 09 72 A0 F0 44  ;
.byt    $F3,$03,$F3,$02,$F1,$38,$52,$89; 0xdd0a $9CFA F3 03 F3 02 F1 38 52 89  ;
.byt    $71,$A0,$F4,$26,$F2,$44,$F3,$01; 0xdd12 $9D02 71 A0 F4 26 F2 44 F3 01  ;
bank3_UNUSED_9D0A                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd1a $9D0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd22 $9D12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd2a $9D1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd32 $9D22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd3a $9D2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd42 $9D32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd4a $9D3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd52 $9D42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd5a $9D4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF                        ; 0xdd62 $9D52 FF FF                    ;
L9D54                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd64 $9D54 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd6c $9D5C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd74 $9D64 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd7c $9D6C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd84 $9D74 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd8c $9D7C FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdd94 $9D84 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF            ; 0xdd9c $9D8C FF FF FF FF FF           ;
L9D91                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdda1 $9D91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdda9 $9D99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddb1 $9DA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddb9 $9DA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddc1 $9DB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddc9 $9DB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddd1 $9DC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddd9 $9DC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdde1 $9DD1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdde9 $9DD9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddf1 $9DE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xddf9 $9DE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde01 $9DF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde09 $9DF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde11 $9E01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde19 $9E09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde21 $9E11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde29 $9E19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde31 $9E21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde39 $9E29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde41 $9E31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde49 $9E39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde51 $9E41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde59 $9E49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde61 $9E51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde69 $9E59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde71 $9E61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde79 $9E69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde81 $9E71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde89 $9E79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde91 $9E81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xde99 $9E89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdea1 $9E91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdea9 $9E99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdeb1 $9EA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdeb9 $9EA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdec1 $9EB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdec9 $9EB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xded1 $9EC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xded9 $9EC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdee1 $9ED1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdee9 $9ED9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdef1 $9EE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdef9 $9EE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf01 $9EF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf09 $9EF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf11 $9F01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf19 $9F09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf21 $9F11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf29 $9F19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf31 $9F21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf39 $9F29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf41 $9F31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf49 $9F39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf51 $9F41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf59 $9F49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf61 $9F51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf69 $9F59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf71 $9F61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf79 $9F69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf81 $9F71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf89 $9F79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf91 $9F81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdf99 $9F89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfa1 $9F91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfa9 $9F99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfb1 $9FA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfb9 $9FA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfc1 $9FB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfc9 $9FB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfd1 $9FC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfd9 $9FC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfe1 $9FD1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdfe9 $9FD9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdff1 $9FE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xdff9 $9FE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xe001 $9FF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF    ; 0xe009 $9FF9 FF FF FF FF FF FF FF     ;
bank3_Area_Data_Towns4                                                         ;
.byt    $2C,$60,$A0,$01,$F4,$11,$62,$26; 0xe010 $A000 2C 60 A0 01 F4 11 62 26  ;
.byt    $80,$56,$81,$C0,$82,$00,$82,$C0; 0xe018 $A008 80 56 81 C0 82 00 82 C0  ;
.byt    $F5,$06,$32,$3B,$50,$6B,$83,$00; 0xe020 $A010 F5 06 32 3B 50 6B 83 00  ;
.byt    $FB,$13,$36,$26,$50,$56,$51,$C0; 0xe028 $A018 FB 13 36 26 50 56 51 C0  ;
.byt    $52,$C0,$80,$01,$52,$C0,$F7,$05; 0xe030 $A020 52 C0 80 01 52 C0 F7 05  ;
.byt    $F6,$13,$F5,$01                ; 0xe038 $A028 F6 13 F5 01              ;
LA02C                                                                          ;
.byt    $2E,$60,$A0,$01,$F0,$00,$66,$38; 0xe03c $A02C 2E 60 A0 01 F0 00 66 38  ;
.byt    $80,$68,$81,$B0,$82,$B0,$82,$00; 0xe044 $A034 80 68 81 B0 82 B0 82 00  ;
.byt    $82,$B0,$33,$66,$51,$B1,$52,$B1; 0xe04c $A03C 82 B0 33 66 51 B1 52 B1  ;
.byt    $52,$B0,$80,$00,$F5,$14,$F6,$05; 0xe054 $A044 52 B0 80 00 F5 14 F6 05  ;
.byt    $F6,$14,$3A,$28,$50,$58,$82,$00; 0xe05c $A04C F6 14 3A 28 50 58 82 00  ;
.byt    $53,$C1,$52,$C1,$F6,$01        ; 0xe064 $A054 53 C1 52 C1 F6 01        ;
LA05A                                                                          ;
.byt    $32,$60,$A0,$01,$F0,$00,$F4,$13; 0xe06a $A05A 32 60 A0 01 F0 00 F4 13  ;
.byt    $66,$36,$80,$66,$81,$B0,$82,$00; 0xe072 $A062 66 36 80 66 81 B0 82 00  ;
.byt    $82,$B0,$F3,$11,$64,$28,$80,$58; 0xe07a $A06A 82 B0 F3 11 64 28 80 58  ;
.byt    $81,$A0,$82,$A0,$83,$01,$F4,$11; 0xe082 $A072 81 A0 82 A0 83 01 F4 11  ;
.byt    $68,$28,$80,$58                ; 0xe08a $A07A 68 28 80 58              ;
LA07E                                                                          ;
.byt    $81,$A0,$83,$00,$83,$A0,$F3,$11; 0xe08e $A07E 81 A0 83 00 83 A0 F3 11  ;
.byt    $F4,$06,$F2,$11,$F1,$10        ; 0xe096 $A086 F4 06 F2 11 F1 10        ;
LA08C                                                                          ;
.byt    $38,$60,$A0,$21,$F4,$06,$64,$36; 0xe09c $A08C 38 60 A0 21 F4 06 64 36  ;
.byt    $80,$66,$81,$B0,$82,$00,$82,$B0; 0xe0a4 $A094 80 66 81 B0 82 00 82 B0  ;
.byt    $33,$36,$50,$66,$51,$B1,$52,$B0; 0xe0ac $A09C 33 36 50 66 51 B1 52 B0  ;
.byt    $80,$00,$52,$B1,$69,$4E,$80,$5E; 0xe0b4 $A0A4 80 00 52 B1 69 4E 80 5E  ;
.byt    $81,$C0,$51,$0C,$81,$C0,$82,$C0; 0xe0bc $A0AC 81 C0 51 0C 81 C0 82 C0  ;
.byt    $86,$00,$67,$48,$80,$58,$83,$00; 0xe0c4 $A0B4 86 00 67 48 80 58 83 00  ;
.byt    $82,$C0,$51,$0C,$81,$C0,$F6,$01; 0xe0cc $A0BC 82 C0 51 0C 81 C0 F6 01  ;
LA0C4                                                                          ;
.byt    $3C,$60,$A0,$21,$F0,$00,$38,$48; 0xe0d4 $A0C4 3C 60 A0 21 F0 00 38 48  ;
.byt    $50,$58,$51,$C1,$52,$C0,$80,$00; 0xe0dc $A0CC 50 58 51 C1 52 C0 80 00  ;
.byt    $52,$C1,$21,$0C,$51,$C1,$67,$44; 0xe0e4 $A0D4 52 C1 21 0C 51 C1 67 44  ;
.byt    $80,$74,$58,$48,$70,$78,$81,$A0; 0xe0ec $A0DC 80 74 58 48 70 78 81 A0  ;
.byt    $82,$A0,$82,$00,$35,$48,$50,$58; 0xe0f4 $A0E4 82 A0 82 00 35 48 50 58  ;
.byt    $51,$C1,$52,$C0,$80,$00,$52,$C1; 0xe0fc $A0EC 51 C1 52 C0 80 00 52 C1  ;
.byt    $52,$C1,$55,$46,$70,$56,$44,$0B; 0xe104 $A0F4 52 C1 55 46 70 56 44 0B  ;
LA0FC                                                                          ;
.byt    $80,$00,$F5,$01                ; 0xe10c $A0FC 80 00 F5 01              ;
LA100                                                                          ;
.byt    $44,$60,$A0,$21,$F0,$00,$36,$46; 0xe110 $A100 44 60 A0 21 F0 00 36 46  ;
.byt    $50,$56,$51,$C0,$52,$C0,$80,$00; 0xe118 $A108 50 56 51 C0 52 C0 80 00  ;
.byt    $21,$0C,$51,$C0,$33,$46,$50,$56; 0xe120 $A110 21 0C 51 C0 33 46 50 56  ;
.byt    $51,$C0,$52,$C0,$80,$00,$21,$0C; 0xe128 $A118 51 C0 52 C0 80 00 21 0C  ;
.byt    $51,$C0,$33,$46,$50,$56,$51,$C0; 0xe130 $A120 51 C0 33 46 50 56 51 C0  ;
.byt    $52,$C0,$80,$00,$21,$0C,$51,$C0; 0xe138 $A128 52 C0 80 00 21 0C 51 C0  ;
.byt    $67,$48,$80,$58,$81,$C0,$82,$01; 0xe140 $A130 67 48 80 58 81 C0 82 01  ;
.byt    $82,$C0,$51,$0C,$81,$C0,$65,$34; 0xe148 $A138 82 C0 51 0C 81 C0 65 34  ;
.byt    $80,$74,$FA,$06                ; 0xe150 $A140 80 74 FA 06              ;
LA144                                                                          ;
.byt    $3C,$60,$A0,$11,$F0,$1F,$F4,$06; 0xe154 $A144 3C 60 A0 11 F0 1F F4 06  ;
.byt    $72,$76,$81,$A0,$82,$00,$82,$A0; 0xe15c $A14C 72 76 81 A0 82 00 82 A0  ;
.byt    $65,$38,$80,$78,$81,$A0,$82,$A0; 0xe164 $A154 65 38 80 78 81 A0 82 A0  ;
.byt    $82,$00,$82,$A0,$F2,$18,$31,$34; 0xe16c $A15C 82 00 82 A0 F2 18 31 34  ;
.byt    $50,$74,$51,$A1,$82,$00,$63,$7A; 0xe174 $A164 50 74 51 A1 82 00 63 7A  ;
.byt    $85,$01,$F6,$1F,$45,$78,$51,$A1; 0xe17c $A16C 85 01 F6 1F 45 78 51 A1  ;
.byt    $52,$A1,$52,$A0,$80,$00,$52,$A1; 0xe184 $A174 52 A1 52 A0 80 00 52 A1  ;
.byt    $F2,$13,$F4,$01                ; 0xe18c $A17C F2 13 F4 01              ;
LA180                                                                          ;
.byt    $3C,$60,$A0,$11,$F0,$00,$F3,$1F; 0xe190 $A180 3C 60 A0 11 F0 00 F3 1F  ;
.byt    $31,$3A,$50,$7A,$51,$A1,$52,$A1; 0xe198 $A188 31 3A 50 7A 51 A1 52 A1  ;
.byt    $52,$A0,$80,$00,$52,$A0,$52,$A1; 0xe1a0 $A190 52 A0 80 00 52 A0 52 A1  ;
.byt    $55                            ; 0xe1a8 $A198 55                       ;
LA199                                                                          ;
.byt    $76,$81,$00                    ; 0xe1a9 $A199 76 81 00                 ;
LA19C                                                                          ;
.byt    $82,$A0,$82,$A0,$F2,$1F,$61,$78; 0xe1ac $A19C 82 A0 82 A0 F2 1F 61 78  ;
.byt    $81,$A0,$82,$01,$82,$A0,$82,$A0; 0xe1b4 $A1A4 81 A0 82 01 82 A0 82 A0  ;
.byt    $35,$78,$51,$A1,$52,$A1,$82,$00; 0xe1bc $A1AC 35 78 51 A1 52 A1 82 00  ;
.byt    $52,$A1,$F2,$1F,$F2,$05,$FC,$01; 0xe1c4 $A1B4 52 A1 F2 1F F2 05 FC 01  ;
LA1BC                                                                          ;
.byt    $0A,$60,$A0,$11,$F0,$00,$E1,$00; 0xe1cc $A1BC 0A 60 A0 11 F0 00 E1 00  ;
.byt    $D5,$0F                        ; 0xe1d4 $A1C4 D5 0F                    ;
LA1C6                                                                          ;
.byt    $24,$60,$A0,$29,$F6,$06,$84,$63; 0xe1d6 $A1C6 24 60 A0 29 F6 06 84 63  ;
.byt    $92,$61,$A4,$61,$45,$62,$51,$B1; 0xe1de $A1CE 92 61 A4 61 45 62 51 B1  ;
.byt    $01,$61,$89,$6B,$66,$65,$81,$01; 0xe1e6 $A1D6 01 61 89 6B 66 65 81 01  ;
.byt    $41,$33,$68,$68,$52,$66,$42,$64; 0xe1ee $A1DE 41 33 68 68 52 66 42 64  ;
.byt    $81,$01,$F8,$01                ; 0xe1f6 $A1E6 81 01 F8 01              ;
LA1EA                                                                          ;
.byt    $2A,$60,$A0,$29,$F0,$00,$26,$38; 0xe1fa $A1EA 2A 60 A0 29 F0 00 26 38  ;
.byt    $40,$68,$84,$01,$1C,$61,$41,$62; 0xe202 $A1F2 40 68 84 01 1C 61 41 62  ;
.byt    $80,$01,$67,$63,$83,$62,$A2,$6A; 0xe20a $A1FA 80 01 67 63 83 62 A2 6A  ;
.byt    $95,$65,$62,$63,$80,$00,$11,$32; 0xe212 $A202 95 65 62 63 80 00 11 32  ;
.byt    $31,$61,$54,$37,$70,$67,$84,$01; 0xe21a $A20A 31 61 54 37 70 67 84 01  ;
.byt    $F9,$01                        ; 0xe222 $A212 F9 01                    ;
LA214                                                                          ;
.byt    $24,$60,$A0,$29,$F0,$00,$1E,$36; 0xe224 $A214 24 60 A0 29 F0 00 1E 36  ;
.byt    $30,$66,$85,$01,$51,$63,$95,$62; 0xe22c $A21C 30 66 85 01 51 63 95 62  ;
.byt    $82,$65,$32,$61,$40,$B1,$61,$62; 0xe234 $A224 82 65 32 61 40 B1 61 62  ;
.byt    $87,$6B,$66,$62,$81,$01,$51,$33; 0xe23c $A22C 87 6B 66 62 81 01 51 33  ;
.byt    $70,$63,$FA,$06                ; 0xe244 $A234 70 63 FA 06              ;
bank3_related_to_dialog_indexes1                                               ;
.byt    $31,$31,$31,$31,$31,$31,$31,$31; 0xe248 $A238 31 31 31 31 31 31 31 31  ;
.byt    $0B,$14,$1F,$2A,$33,$19,$24,$2F; 0xe250 $A240 0B 14 1F 2A 33 19 24 2F  ;
.byt    $1E,$19,$1C,$2D,$0F,$18,$23,$2E; 0xe258 $A248 1E 19 1C 2D 0F 18 23 2E  ;
.byt    $0C,$0F,$1C,$30,$08,$12        ; 0xe260 $A250 0C 0F 1C 30 08 12        ;
LA256                                                                          ;
.byt    $1C,$26,$20,$21,$1C,$26,$0A,$16; 0xe266 $A256 1C 26 20 21 1C 26 0A 16  ;
.byt    $1C,$26,$22,$16,$16,$26,$0A,$0F; 0xe26e $A25E 1C 26 22 16 16 26 0A 0F  ;
.byt    $1C,$2B,$0D,$0D,$1C,$26,$00,$00; 0xe276 $A266 1C 2B 0D 0D 1C 26 00 00  ;
.byt    $00,$00,$02,$02,$02,$02,$04,$04; 0xe27e $A26E 00 00 02 02 02 02 04 04  ;
.byt    $04,$04,$05,$05,$05,$05,$06,$06; 0xe286 $A276 04 04 05 05 05 05 06 06  ;
.byt    $06,$06,$07,$07,$07,$07,$10,$13; 0xe28e $A27E 06 06 07 07 07 07 10 13  ;
.byt    $1C,$27,$09,$12,$1C,$26,$0A,$11; 0xe296 $A286 1C 27 09 12 1C 26 0A 11  ;
.byt    $20,$28,$09,$12,$1B,$26,$15,$15; 0xe29e $A28E 20 28 09 12 1B 26 15 15  ;
.byt    $15,$29,$0B,$14,$1D,$2A        ; 0xe2a6 $A296 15 29 0B 14 1D 2A        ;
bank3_related_to_dialog_indexes2                                               ;
.byt    $32,$32,$32,$32,$32,$32,$32,$32; 0xe2ac $A29C 32 32 32 32 32 32 32 32  ;
.byt    $32,$32,$32,$32,$33,$0F,$25,$10; 0xe2b4 $A2A4 32 32 32 32 33 0F 25 10  ;
.byt    $1E,$1A,$1C,$2B,$0F,$18,$23,$2E; 0xe2bc $A2AC 1E 1A 1C 2B 0F 18 23 2E  ;
.byt    $0A,$0F,$1C,$26,$0A,$0F,$1C,$26; 0xe2c4 $A2B4 0A 0F 1C 26 0A 0F 1C 26  ;
.byt    $0A,$21,$1C,$26,$0A,$17,$1C,$26; 0xe2cc $A2BC 0A 21 1C 26 0A 17 1C 26  ;
.byt    $22,$17,$17,$26,$0A,$0F,$1C,$2C; 0xe2d4 $A2C4 22 17 17 26 0A 0F 1C 2C  ;
.byt    $0E,$0E,$1C,$26,$01,$01,$01,$01; 0xe2dc $A2CC 0E 0E 1C 26 01 01 01 01  ;
.byt    $03,$03,$03,$03,$10,$10,$10,$10; 0xe2e4 $A2D4 03 03 03 03 10 10 10 10  ;
bank3_related_to_dialog_indexes3                                               ;
.byt    $21,$21,$21,$21,$21,$21,$21,$21; 0xe2ec $A2DC 21 21 21 21 21 21 21 21  ;
.byt    $0A,$1A,$10,$2A,$0A,$1E,$1F,$00; 0xe2f4 $A2E4 0A 1A 10 2A 0A 1E 1F 00  ;
.byt    $0F,$15,$1F,$00,$11,$11,$11,$2B; 0xe2fc $A2EC 0F 15 1F 00 11 11 11 2B  ;
.byt    $0A,$15,$10,$00,$0C,$15,$1F,$00; 0xe304 $A2F4 0A 15 10 00 0C 15 1F 00  ;
.byt    $0A,$15,$28,$00,$0A,$15,$1F,$00; 0xe30c $A2FC 0A 15 28 00 0A 15 1F 00  ;
.byt    $0A,$15,$1F,$00,$0A,$1B,$26,$00; 0xe314 $A304 0A 15 1F 00 0A 1B 26 00  ;
.byt    $0D,$15,$1F                    ; 0xe31c $A30C 0D 15 1F                 ;
LA30F                                                                          ;
.byt    $00,$00,$00,$00,$00,$02        ; 0xe31f $A30F 00 00 00 00 00 02        ;
LA315                                                                          ;
.byt    $02,$02,$02,$04,$04,$04,$04,$05; 0xe325 $A315 02 02 02 04 04 04 04 05  ;
.byt    $05,$05,$05,$06,$06,$06,$06,$07; 0xe32d $A31D 05 05 05 06 06 06 06 07  ;
.byt    $07,$07,$07,$09                ; 0xe335 $A325 07 07 07 09              ;
LA329                                                                          ;
.byt    $17,$24,$00,$0C,$17,$20,$00,$08; 0xe339 $A329 17 24 00 0C 17 20 00 08  ;
.byt    $16,$25,$00                    ; 0xe341 $A331 16 25 00                 ;
LA334                                                                          ;
.byt    $0A,$14,$1F,$00                ; 0xe344 $A334 0A 14 1F 00              ;
LA338                                                                          ;
.byt    $0B,$18,$23,$2A,$0A,$19,$22,$16; 0xe348 $A338 0B 18 23 2A 0A 19 22 16  ;
bank3_related_to_dialog_indexes4                                               ;
.byt    $2D,$2D,$2D,$2D,$2D,$2D,$2D,$2D; 0xe350 $A340 2D 2D 2D 2D 2D 2D 2D 2D  ;
.byt    $00,$00,$00,$00,$0A,$15,$1F,$00; 0xe358 $A348 00 00 00 00 0A 15 1F 00  ;
.byt    $0F,$15,$1F,$00,$12,$1D,$29,$2C; 0xe360 $A350 0F 15 1F 00 12 1D 29 2C  ;
.byt    $0A,$15,$10,$00,$0A,$15,$1F,$00; 0xe368 $A358 0A 15 10 00 0A 15 1F 00  ;
.byt    $0A,$15,$1F,$00,$0A,$15,$1F,$00; 0xe370 $A360 0A 15 1F 00 0A 15 1F 00  ;
.byt    $0A,$15,$1F,$00,$0A,$1C,$27,$00; 0xe378 $A368 0A 15 1F 00 0A 1C 27 00  ;
.byt    $0E,$15,$1F,$00,$01,$01,$01,$01; 0xe380 $A370 0E 15 1F 00 01 01 01 01  ;
.byt    $03,$03,$03,$03,$13,$13,$13,$13; 0xe388 $A378 03 03 03 03 13 13 13 13  ;
bank3_Dialogs_Text_Table                                                       ;
.byt    $E9,$E5,$DE,$DA,$EC,$DE,$F4,$E5; 0xe390 $A380 E9 E5 DE DA EC DE F4 E5  ;
.byt    $DE,$ED,$FD,$E6,$DE,$F4,$E1,$DE; 0xe398 $A388 DE ED FD E6 DE F4 E1 DE  ;
.byt    $E5,$E9,$FD,$F2,$E8,$EE,$CF,$F4; 0xe3a0 $A390 E5 E9 FD F2 E8 EE CF F4  ;
.byt    $DC,$E8,$E6,$DE,$FD,$E2,$E7,$EC; 0xe3a8 $A398 DC E8 E6 DE FD E2 E7 EC  ;
.byt    $E2,$DD,$DE,$CF,$FF            ; 0xe3b0 $A3A0 E2 DD DE CF FF           ;
LA3A5                                                                          ;
.byt    $E2,$F4,$DC,$DA,$E7,$FD,$EB,$DE; 0xe3b5 $A3A5 E2 F4 DC DA E7 FD EB DE  ;
.byt    $EC,$ED,$E8,$EB,$DE,$FD,$F2,$E8; 0xe3bd $A3AD EC ED E8 EB DE FD F2 E8  ;
.byt    $EE,$EB,$F4,$E5,$E2,$DF,$DE,$CF; 0xe3c5 $A3B5 EE EB F4 E5 E2 DF DE CF  ;
.byt    $FF                            ; 0xe3cd $A3BD FF                       ;
LA3BE                                                                          ;
.byt    $EC,$ED,$E8,$E9,$F4,$DA,$E7,$DD; 0xe3ce $A3BE EC ED E8 E9 F4 DA E7 DD  ;
.byt    $FD,$EB,$DE,$EC,$ED,$F4,$E1,$DE; 0xe3d6 $A3C6 FD EB DE EC ED F4 E1 DE  ;
.byt    $EB,$DE,$CF,$FF                ; 0xe3de $A3CE EB DE CF FF              ;
LA3D2                                                                          ;
.byt    $E2,$F4,$DC,$DA,$E7,$F4,$E0,$E2; 0xe3e2 $A3D2 E2 F4 DC DA E7 F4 E0 E2  ;
.byt    $EF,$DE,$FD,$F2,$E8,$EE,$F4,$E6; 0xe3ea $A3DA EF DE FD F2 E8 EE F4 E6  ;
.byt    $DA,$E0,$E2,$DC,$CF,$FE,$DC,$E8; 0xe3f2 $A3E2 DA E0 E2 DC CF FE DC E8  ;
.byt    $E6,$DE,$F4,$DB,$DA,$DC,$E4,$FD; 0xe3fa $A3EA E6 DE F4 DB DA DC E4 FD  ;
.byt    $DA,$E7,$F2,$ED,$E2,$E6,$DE,$CF; 0xe402 $A3F2 DA E7 F2 ED E2 E6 DE CF  ;
.byt    $FF                            ; 0xe40a $A3FA FF                       ;
LA3FB                                                                          ;
.byt    $E2,$F4,$DA,$E6,$F4,$E6,$EE,$DC; 0xe40b $A3FB E2 F4 DA E6 F4 E6 EE DC  ;
.byt    $E1,$FD,$ED,$E8,$E8,$F4,$DB,$EE; 0xe413 $A403 E1 FD ED E8 E8 F4 DB EE  ;
.byt    $EC,$F2,$FD,$ED,$E8,$F4,$ED,$DA; 0xe41b $A40B EC F2 FD ED E8 F4 ED DA  ;
.byt    $E5,$E4,$F4,$ED,$E8,$FD,$DA,$F4; 0xe423 $A413 E5 E4 F4 ED E8 FD DA F4  ;
.byt    $EC,$ED,$EB,$DA,$E7,$E0,$DE,$EB; 0xe42b $A41B EC ED EB DA E7 E0 DE EB  ;
.byt    $CF,$FF                        ; 0xe433 $A423 CF FF                    ;
LA425                                                                          ;
.byt    $E1,$DE,$E5,$E5,$E8,$36,$FF    ; 0xe435 $A425 E1 DE E5 E5 E8 36 FF     ;
LA42C                                                                          ;
.byt    $E1,$DE,$E5,$E5,$E8,$FD,$F2,$E8; 0xe43c $A42C E1 DE E5 E5 E8 FD F2 E8  ;
.byt    $EE,$E7,$E0,$FD,$DF,$DE,$E5,$E5; 0xe444 $A434 EE E7 E0 FD DF DE E5 E5  ;
.byt    $E8,$F0,$CF,$FF                ; 0xe44c $A43C E8 F0 CF FF              ;
LA440                                                                          ;
.byt    $EC,$E8,$EB,$EB,$F2,$CF,$FD,$E2; 0xe450 $A440 EC E8 EB EB F2 CF FD E2  ;
.byt    $F4,$E4,$E7,$E8,$F0,$FD,$E7,$E8; 0xe458 $A448 F4 E4 E7 E8 F0 FD E7 E8  ;
.byt    $ED,$E1,$E2,$E7,$E0,$CF,$FF    ; 0xe460 $A450 ED E1 E2 E7 E0 CF FF     ;
LA457                                                                          ;
.byt    $DE,$DA,$DC,$E1,$F4,$ED,$E8,$F0; 0xe467 $A457 DE DA DC E1 F4 ED E8 F0  ;
.byt    $E7,$FD,$E1,$DA,$EC,$F4,$DA,$F4; 0xe46f $A45F E7 FD E1 DA EC F4 DA F4  ;
.byt    $F0,$E2,$EC,$DE,$FD,$E6,$DA,$E7; 0xe477 $A467 F0 E2 EC DE FD E6 DA E7  ;
.byt    $CF,$F4,$E5,$DE,$DA,$EB,$E7,$FD; 0xe47f $A46F CF F4 E5 DE DA EB E7 FD  ;
.byt    $DF,$EB,$E8,$E6,$F4,$E1,$E2,$E6; 0xe487 $A477 DF EB E8 E6 F4 E1 E2 E6  ;
.byt    $CF,$FF                        ; 0xe48f $A47F CF FF                    ;
LA481                                                                          ;
.byt    $DF,$E2,$E7,$DD,$F4,$ED,$E1,$DE; 0xe491 $A481 DF E2 E7 DD F4 ED E1 DE  ;
.byt    $FD,$E1,$DE,$DA,$EB,$ED,$F4,$E2; 0xe499 $A489 FD E1 DE DA EB ED F4 E2  ;
.byt    $E7,$FD,$EC,$E8,$EE,$ED,$E1,$DE; 0xe4a1 $A491 E7 FD EC E8 EE ED E1 DE  ;
.byt    $EB,$E7,$FD,$E9,$DA,$EB,$DA,$E9; 0xe4a9 $A499 EB E7 FD E9 DA EB DA E9  ;
.byt    $DA,$CF,$FF                    ; 0xe4b1 $A4A1 DA CF FF                 ;
LA4A4                                                                          ;
.byt    $E8,$E7,$E5,$F2,$F4,$ED,$E1,$DE; 0xe4b4 $A4A4 E8 E7 E5 F2 F4 ED E1 DE  ;
.byt    $FD,$E1,$DA,$E6,$E6,$DE,$EB,$F4; 0xe4bc $A4AC FD E1 DA E6 E6 DE EB F4  ;
.byt    $DC,$DA,$E7,$FD,$DD,$DE,$EC,$ED; 0xe4c4 $A4B4 DC DA E7 FD DD DE EC ED  ;
.byt    $EB,$E8,$F2,$F4,$DA,$FD,$EB,$E8; 0xe4cc $A4BC EB E8 F2 F4 DA FD EB E8  ;
.byt    $DA,$DD,$DB,$E5,$E8,$DC,$E4,$CF; 0xe4d4 $A4C4 DA DD DB E5 E8 DC E4 CF  ;
.byt    $FF                            ; 0xe4dc $A4CC FF                       ;
LA4CD                                                                          ;
.byt    $F0,$DE,$E5,$DC,$E8,$E6,$DE,$FD; 0xe4dd $A4CD F0 DE E5 DC E8 E6 DE FD  ;
.byt    $F4,$F4,$ED,$E8,$FD,$F4,$EB,$DA; 0xe4e5 $A4D5 F4 F4 ED E8 FD F4 EB DA  ;
.byt    $EE,$EB,$EE,$FF                ; 0xe4ed $A4DD EE EB EE FF              ;
LA4E1                                                                          ;
.byt    $E0,$DE,$ED,$F4,$DC,$DA,$E7,$DD; 0xe4f1 $A4E1 E0 DE ED F4 DC DA E7 DD  ;
.byt    $E5,$DE,$FD,$E2,$E7,$F4,$E9,$DA; 0xe4f9 $A4E9 E5 DE FD E2 E7 F4 E9 DA  ;
.byt    $EB,$DA,$E9,$DA,$FD,$E9,$DA,$E5; 0xe501 $A4F1 EB DA E9 DA FD E9 DA E5  ;
.byt    $DA,$DC,$DE,$CF,$FD,$E0,$E8,$F4; 0xe509 $A4F9 DA DC DE CF FD E0 E8 F4  ;
.byt    $F0,$DE,$EC,$ED,$CF,$FF        ; 0xe511 $A501 F0 DE EC ED CF FF        ;
LA507                                                                          ;
.byt    $E0,$E8,$EB,$E2,$F2,$DA,$F4,$E8; 0xe517 $A507 E0 E8 EB E2 F2 DA F4 E8  ;
.byt    $DF,$FD,$ED,$DA,$E7,$ED,$DA,$EB; 0xe51f $A50F DF FD ED DA E7 ED DA EB  ;
.byt    $E2,$FD,$EC,$ED,$E8,$E5,$DE,$F4; 0xe527 $A517 E2 FD EC ED E8 E5 DE F4  ;
.byt    $E8,$EE,$EB,$FD,$ED,$EB,$E8,$E9; 0xe52f $A51F E8 EE EB FD ED EB E8 E9  ;
.byt    $E1,$F2,$CF,$FF                ; 0xe537 $A527 E1 F2 CF FF              ;
LA52B                                                                          ;
.byt    $F2,$E8,$EE,$F4,$EC,$DA,$EF,$DE; 0xe53b $A52B F2 E8 EE F4 EC DA EF DE  ;
.byt    $DD,$FD,$ED,$E1,$DE,$F4,$ED,$EB; 0xe543 $A533 DD FD ED E1 DE F4 ED EB  ;
.byt    $E8,$E9,$E1,$F2,$FE,$DC,$E8,$E6; 0xe54b $A53B E8 E9 E1 F2 FE DC E8 E6  ;
.byt    $DE,$F4,$EC,$DE,$DE,$FD,$E6,$F2; 0xe553 $A543 DE F4 EC DE DE FD E6 F2  ;
.byt    $F4,$EE,$E7,$DC,$E5,$DE,$CF,$FF; 0xe55b $A54B F4 EE E7 DC E5 DE CF FF  ;
LA553                                                                          ;
.byt    $E2,$E7,$F4,$E9,$DA,$EB,$DA,$E9; 0xe563 $A553 E2 E7 F4 E9 DA EB DA E9  ;
.byt    $DA,$FD,$DD,$DE,$EC,$DE,$EB,$ED; 0xe56b $A55B DA FD DD DE EC DE EB ED  ;
.byt    $F4,$EE,$EC,$DE,$FD,$ED,$E1,$E2; 0xe573 $A563 F4 EE EC DE FD ED E1 E2  ;
.byt    $EC,$F4,$E6,$DA,$E0,$E2,$DC,$FD; 0xe57b $A56B EC F4 E6 DA E0 E2 DC FD  ;
.byt    $ED,$E8,$F4,$EC,$EE,$EB,$EF,$E2; 0xe583 $A573 ED E8 F4 EC EE EB EF E2  ;
.byt    $EF,$DE,$FF                    ; 0xe58b $A57B EF DE FF                 ;
LA57E                                                                          ;
.byt    $E2,$F4,$DC,$DA,$E7,$E7,$E8,$ED; 0xe58e $A57E E2 F4 DC DA E7 E7 E8 ED  ;
.byt    $FD,$E1,$DE,$E5,$E9,$F4,$F2,$E8; 0xe596 $A586 FD E1 DE E5 E9 F4 F2 E8  ;
.byt    $EE,$FD,$DA,$E7,$F2,$E6,$E8,$EB; 0xe59e $A58E EE FD DA E7 F2 E6 E8 EB  ;
.byt    $DE,$CF,$FD,$E0,$E8,$F4,$E7,$E8; 0xe5a6 $A596 DE CF FD E0 E8 F4 E7 E8  ;
.byt    $F0,$CF,$FF                    ; 0xe5ae $A59E F0 CF FF                 ;
LA5A1                                                                          ;
.byt    $E1,$DA,$E6,$E6,$DE,$EB,$CF,$CF; 0xe5b1 $A5A1 E1 DA E6 E6 DE EB CF CF  ;
.byt    $CF,$FE,$EC,$E9,$DE,$DC,$ED,$DA; 0xe5b9 $A5A9 CF FE EC E9 DE DC ED DA  ;
.byt    $DC,$E5,$DE,$FD,$EB,$E8,$DC,$E4; 0xe5c1 $A5B1 DC E5 DE FD EB E8 DC E4  ;
.byt    $CF,$CF,$CF,$FD,$DD,$DE,$DA,$ED; 0xe5c9 $A5B9 CF CF CF FD DD DE DA ED  ;
.byt    $E1,$F4,$E6,$ED,$E7,$CF,$FF    ; 0xe5d1 $A5C1 E1 F4 E6 ED E7 CF FF     ;
LA5C8                                                                          ;
.byt    $DD,$E8,$F4,$E7,$E8,$ED,$F4,$E0; 0xe5d8 $A5C8 DD E8 F4 E7 E8 ED F4 E0  ;
.byt    $E8,$FD,$EC,$E8,$EE,$ED,$E1,$FD; 0xe5e0 $A5D0 E8 FD EC E8 EE ED E1 FD  ;
.byt    $F0,$E2,$ED,$E1,$E8,$EE,$ED,$F4; 0xe5e8 $A5D8 F0 E2 ED E1 E8 EE ED F4  ;
.byt    $DA,$FD,$DC,$DA,$E7,$DD,$E5,$DE; 0xe5f0 $A5E0 DA FD DC DA E7 DD E5 DE  ;
.byt    $CF,$FF                        ; 0xe5f8 $A5E8 CF FF                    ;
LA5EA                                                                          ;
.byt    $DF,$E2,$E7,$DD,$F4,$E6,$DA,$E0; 0xe5fa $A5EA DF E2 E7 DD F4 E6 DA E0  ;
.byt    $E2,$DC,$FD,$E2,$E7,$F4,$DA,$F4; 0xe602 $A5F2 E2 DC FD E2 E7 F4 DA F4  ;
.byt    $DC,$DA,$EF,$DE,$FD,$EC,$E8,$EE; 0xe60a $A5FA DC DA EF DE FD EC E8 EE  ;
.byt    $ED,$E1,$F4,$E8,$DF,$FD,$ED,$E1; 0xe612 $A602 ED E1 F4 E8 DF FD ED E1  ;
.byt    $DE,$F4,$DC,$DA,$EC,$ED        ; 0xe61a $A60A DE F4 DC DA EC ED        ;
LA610                                                                          ;
.byt    $E5,$DE,$CF,$FF                ; 0xe620 $A610 E5 DE CF FF              ;
LA614                                                                          ;
.byt    $ED,$E8,$F0,$E7,$FD,$F4,$E8,$DF; 0xe624 $A614 ED E8 F0 E7 FD F4 E8 DF  ;
.byt    $FD,$EB,$EE,$ED,$E8,$FF        ; 0xe62c $A61C FD EB EE ED E8 FF        ;
LA622                                                                          ;
.byt    $E2,$F4,$DF,$E8,$EE,$E7,$DD,$F4; 0xe632 $A622 E2 F4 DF E8 EE E7 DD F4  ;
.byt    $DA,$FD,$E6,$E2,$EB,$EB,$E8,$EB; 0xe63a $A62A DA FD E6 E2 EB EB E8 EB  ;
.byt    $FD,$EE,$E7,$DD,$DE,$EB,$F4,$ED; 0xe642 $A632 FD EE E7 DD DE EB F4 ED  ;
.byt    $E1,$DE,$FD,$ED,$DA,$DB,$E5,$DE; 0xe64a $A63A E1 DE FD ED DA DB E5 DE  ;
.byt    $CF,$FF                        ; 0xe652 $A642 CF FF                    ;
LA644                                                                          ;
.byt    $E2,$F4,$E5,$E8,$EC,$ED,$FD,$E6; 0xe654 $A644 E2 F4 E5 E8 EC ED FD E6  ;
.byt    $F2,$F4,$E6,$E2,$EB,$EB,$E8,$EB; 0xe65c $A64C F2 F4 E6 E2 EB EB E8 EB  ;
.byt    $CF,$FF                        ; 0xe664 $A654 CF FF                    ;
LA656                                                                          ;
.byt    $E8,$E1,$36,$F4,$F2,$E8,$EE,$FD; 0xe666 $A656 E8 E1 36 F4 F2 E8 EE FD  ;
.byt    $DF,$E8,$EE,$E7,$DD,$F4,$E6,$F2; 0xe66e $A65E DF E8 EE E7 DD F4 E6 F2  ;
.byt    $FD,$E6,$E2,$EB,$EB,$E8,$EB,$36; 0xe676 $A666 FD E6 E2 EB EB E8 EB 36  ;
.byt    $FD,$DF,$E8,$E5,$E5,$E8,$F0,$F4; 0xe67e $A66E FD DF E8 E5 E5 E8 F0 F4  ;
.byt    $E6,$DE,$CF,$FF                ; 0xe686 $A676 E6 DE CF FF              ;
LA67A                                                                          ;
.byt    $F0,$E2,$ED,$E1,$F4,$ED,$E1,$E2; 0xe68a $A67A F0 E2 ED E1 F4 ED E1 E2  ;
.byt    $EC,$FD,$F2,$E8,$EE,$F4,$DC,$DA; 0xe692 $A682 EC FD F2 E8 EE F4 DC DA  ;
.byt    $E7,$FD,$E3,$EE,$E6,$E9,$F4,$EF; 0xe69a $A68A E7 FD E3 EE E6 E9 F4 EF  ;
.byt    $DE,$EB,$F2,$FD,$E1,$E2,$E0,$E1; 0xe6a2 $A692 DE EB F2 FD E1 E2 E0 E1  ;
.byt    $CF,$FF                        ; 0xe6aa $A69A CF FF                    ;
LA69C                                                                          ;
.byt    $E2,$F4,$DA,$E6                ; 0xe6ac $A69C E2 F4 DA E6              ;
LA6A0                                                                          ;
.byt    $FD,$DE,$EB,$EB,$E8,$EB,$CF,$FF; 0xe6b0 $A6A0 FD DE EB EB E8 EB CF FF  ;
LA6A8                                                                          ;
.byt    $EC,$E8,$EE,$ED,$E1,$F4,$E8,$DF; 0xe6b8 $A6A8 EC E8 EE ED E1 F4 E8 DF  ;
.byt    $FD,$E4,$E2,$E7,$E0,$EC,$F4,$ED; 0xe6c0 $A6B0 FD E4 E2 E7 E0 EC F4 ED  ;
.byt    $E8,$E6,$DB,$FD,$E2,$E7,$F4,$E6; 0xe6c8 $A6B8 E8 E6 DB FD E2 E7 F4 E6  ;
.byt    $E2,$DD,$E8,$F4,$E2,$EC,$FD,$DA; 0xe6d0 $A6C0 E2 DD E8 F4 E2 EC FD DA  ;
.byt    $F4,$ED,$EE,$E7,$E7,$DE,$E5,$CF; 0xe6d8 $A6C8 F4 ED EE E7 E7 DE E5 CF  ;
.byt    $FF                            ; 0xe6e0 $A6D0 FF                       ;
LA6D1                                                                          ;
.byt    $E2                            ; 0xe6e1 $A6D1 E2                       ;
LA6D2                                                                          ;
.byt    $E7,$F4,$E6,$E2,$DD,$E8,$EB,$E8; 0xe6e2 $A6D2 E7 F4 E6 E2 DD E8 EB E8  ;
.byt    $FD,$EC,$F0,$DA,$E6,$E9,$F4,$DF; 0xe6ea $A6DA FD EC F0 DA E6 E9 F4 DF  ;
.byt    $E2,$E7,$DD,$FD,$DA,$F4,$E1,$DA; 0xe6f2 $A6E2 E2 E7 DD FD DA F4 E1 DA  ;
.byt    $E7,$DD,$F2,$FD,$E0,$E5,$E8,$EF; 0xe6fa $A6EA E7 DD F2 FD E0 E5 E8 EF  ;
.byt    $DE,$CF,$FF                    ; 0xe702 $A6F2 DE CF FF                 ;
LA6F5                                                                          ;
.byt    $DE,$F2,$DE,$EC,$F4,$E8,$DF,$FD; 0xe705 $A6F5 DE F2 DE EC F4 E8 DF FD  ;
.byt    $E0,$DA,$E7,$E8,$E7,$F4,$DA,$EB; 0xe70d $A6FD E0 DA E7 E8 E7 F4 DA EB  ;
.byt    $DE,$FD,$DE,$EF,$DE,$EB,$F2,$F0; 0xe715 $A705 DE FD DE EF DE EB F2 F0  ;
.byt    $E1,$DE,$EB,$DE,$FD,$DB,$DE,$F4; 0xe71d $A70D E1 DE EB DE FD DB DE F4  ;
.byt    $DC,$DA,$EB,$DE,$DF,$EE,$E5,$FF; 0xe725 $A715 DC DA EB DE DF EE E5 FF  ;
LA71D                                                                          ;
.byt    $F0,$DA,$ED,$DE,$EB,$F4,$ED,$E8; 0xe72d $A71D F0 DA ED DE EB F4 ED E8  ;
.byt    $F0,$E7,$FD,$F4,$F4,$F4,$F4,$E8; 0xe735 $A725 F0 E7 FD F4 F4 F4 F4 E8  ;
.byt    $DF,$FD,$F4,$F4,$EC,$DA,$EB,$E2; 0xe73d $A72D DF FD F4 F4 EC DA EB E2  ;
.byt    $DA,$FF                        ; 0xe745 $A735 DA FF                    ;
LA737                                                                          ;
.byt    $E2,$DF,$F4,$DA,$E5,$E5,$FD,$DE; 0xe747 $A737 E2 DF F4 DA E5 E5 FD DE  ;
.byt    $E5,$EC,$DE,$F4,$DF,$DA,$E2,$E5; 0xe74f $A73F E5 EC DE F4 DF DA E2 E5  ;
.byt    $EC,$FD,$EE,$EC,$DE,$F4,$DF,$E2; 0xe757 $A747 EC FD EE EC DE F4 DF E2  ;
.byt    $EB,$DE,$CF,$FF                ; 0xe75f $A74F EB DE CF FF              ;
LA753                                                                          ;
.byt    $E7,$E8,$ED,$E1,$E2,$E7,$E0,$CF; 0xe763 $A753 E7 E8 ED E1 E2 E7 E0 CF  ;
.byt    $FF                            ; 0xe76b $A75B FF                       ;
LA75C                                                                          ;
.byt    $EB,$DE,$ED,$EE,$EB,$E7,$F4,$ED; 0xe76c $A75C EB DE ED EE EB E7 F4 ED  ;
.byt    $E1,$DE,$FD,$DC,$EB,$F2,$EC,$ED; 0xe774 $A764 E1 DE FD DC EB F2 EC ED  ;
.byt    $DA,$E5,$F4,$ED,$E8,$FD,$ED,$E1; 0xe77c $A76C DA E5 F4 ED E8 FD ED E1  ;
.byt    $DE,$F4,$E9,$DA,$E5,$DA,$DC,$DE; 0xe784 $A774 DE F4 E9 DA E5 DA DC DE  ;
.byt    $FD,$E2,$E7,$F4,$E9,$DA,$EB,$DA; 0xe78c $A77C FD E2 E7 F4 E9 DA EB DA  ;
.byt    $E9,$DA,$CF,$FF                ; 0xe794 $A784 E9 DA CF FF              ;
LA788                                                                          ;
.byt    $EE,$EC,$DE,$F4,$E4,$DE,$F2,$EC; 0xe798 $A788 EE EC DE F4 E4 DE F2 EC  ;
.byt    $FD,$E2,$E7,$F4,$E9,$DA,$E5,$DA; 0xe7a0 $A790 FD E2 E7 F4 E9 DA E5 DA  ;
.byt    $DC,$DE,$EC,$FD,$ED,$E1,$DE,$F2; 0xe7a8 $A798 DC DE EC FD ED E1 DE F2  ;
.byt    $F4,$DA,$EB,$DE,$FD,$DF,$E8,$EE; 0xe7b0 $A7A0 F4 DA EB DE FD DF E8 EE  ;
.byt    $E7,$DD,$F4                    ; 0xe7b8 $A7A8 E7 DD F4                 ;
LA7AB                                                                          ;
.byt    $E2,$E7,$CF,$FF                ; 0xe7bb $A7AB E2 E7 CF FF              ;
LA7AF                                                                          ;
.byt    $ED,$DA,$E5,$E4,$F4,$F0,$E2,$ED; 0xe7bf $A7AF ED DA E5 E4 F4 F0 E2 ED  ;
.byt    $E1,$FD,$E6,$F2,$F4,$DF,$DA,$ED; 0xe7c7 $A7B7 E1 FD E6 F2 F4 DF DA ED  ;
.byt    $E1,$DE,$EB,$FD,$DB,$DE,$DF,$E8; 0xe7cf $A7BF E1 DE EB FD DB DE DF E8  ;
.byt    $EB,$DE,$F4,$F2,$E8,$EE,$FD,$E5; 0xe7d7 $A7C7 EB DE F4 F2 E8 EE FD E5  ;
.byt    $DE,$DA,$EF,$DE,$F4,$ED,$E8,$F0; 0xe7df $A7CF DE DA EF DE F4 ED E8 F0  ;
.byt    $E7,$FF                        ; 0xe7e7 $A7D7 E7 FF                    ;
LA7D9                                                                          ;
.byt    $EE,$EC,$DE,$F4,$ED,$E1,$E2,$EC; 0xe7e9 $A7D9 EE EC DE F4 ED E1 E2 EC  ;
.byt    $FD,$E6,$DA,$E0,$E2,$DC,$F4,$ED; 0xe7f1 $A7E1 FD E6 DA E0 E2 DC F4 ED  ;
.byt    $E8,$FD,$EB,$DE,$EC,$ED,$E8,$EB; 0xe7f9 $A7E9 E8 FD EB DE EC ED E8 EB  ;
.byt    $DE,$FD,$F2,$E8,$EE,$EB,$F4,$E5; 0xe801 $A7F1 DE FD F2 E8 EE EB F4 E5  ;
.byt    $E2,$DF,$DE,$CF,$FF            ; 0xe809 $A7F9 E2 DF DE CF FF           ;
LA7FE                                                                          ;
.byt    $E8,$E7,$E5,$F2,$F4,$ED,$E8,$F0; 0xe80e $A7FE E8 E7 E5 F2 F4 ED E8 F0  ;
.byt    $E7,$FD,$DF,$E8,$E5,$E4,$F4,$E6; 0xe816 $A806 E7 FD DF E8 E5 E4 F4 E6  ;
.byt    $DA,$F2,$FD,$DC,$EB,$E8,$EC,$EC; 0xe81e $A80E DA F2 FD DC EB E8 EC EC  ;
.byt    $F4,$ED,$E1,$E2,$EC,$FD,$EB,$E2; 0xe826 $A816 F4 ED E1 E2 EC FD EB E2  ;
.byt    $EF,$DE,$EB,$36,$FF            ; 0xe82e $A81E EF DE EB 36 FF           ;
LA823                                                                          ;
.byt    $F2,$E8,$EE,$F4,$E4,$E7,$E8    ; 0xe833 $A823 F2 E8 EE F4 E4 E7 E8     ;
LA82A                                                                          ;
.byt    $F0,$FD,$DB,$DA,$E0,$EE,$34,$F4; 0xe83a $A82A F0 FD DB DA E0 EE 34 F4  ;
.byt    $ED,$E1,$DE,$E7                ; 0xe842 $A832 ED E1 DE E7              ;
LA836                                                                          ;
.byt    $FD,$E2,$F4,$DC,$DA,$E7,$F4,$E1; 0xe846 $A836 FD E2 F4 DC DA E7 F4 E1  ;
.byt    $DE,$E5,$E9,$FD,$F2,$E8,$EE,$F4; 0xe84e $A83E DE E5 E9 FD F2 E8 EE F4  ;
.byt    $DC,$EB,$E8,$EC,$EC,$CF,$FF    ; 0xe856 $A846 DC EB E8 EC EC CF FF     ;
LA84D                                                                          ;
.byt    $E7,$E8,$F4,$E8,$E7,$DE,$F4,$E2; 0xe85d $A84D E7 E8 F4 E8 E7 DE F4 E2  ;
.byt    $EC,$FD,$E1,$DE,$EB,$DE,$F4,$DB; 0xe865 $A855 EC FD E1 DE EB DE F4 DB  ;
.byt    $EE,$ED,$F4,$DA,$FD,$DC,$E1,$EE; 0xe86d $A85D EE ED F4 DA FD DC E1 EE  ;
.byt    $EB,$DC,$E1,$DB,$DE,$E5,$E5,$FD; 0xe875 $A865 EB DC E1 DB DE E5 E5 FD  ;
.byt    $F0,$E2,$E5,$E5,$F4,$EB,$E2,$E7; 0xe87d $A86D F0 E2 E5 E5 F4 EB E2 E7  ;
.byt    $E0,$CF,$FF                    ; 0xe885 $A875 E0 CF FF                 ;
LA878                                                                          ;
.byt    $ED,$E1,$DE,$F4,$E2,$EC,$E5,$DA; 0xe888 $A878 ED E1 DE F4 E2 EC E5 DA  ;
.byt    $E7,$DD,$FD,$E9,$DA,$E5,$DA,$DC; 0xe890 $A880 E7 DD FD E9 DA E5 DA DC  ;
.byt    $DE,$F4,$E2,$E7,$FD,$ED,$E1,$DE; 0xe898 $A888 DE F4 E2 E7 FD ED E1 DE  ;
.byt    $F4,$EC,$E8,$EE,$ED,$E1,$FD,$E1; 0xe8a0 $A890 F4 EC E8 EE ED E1 FD E1  ;
.byt    $DA,$EC,$F4,$DA,$F4,$EB,$DA,$DF; 0xe8a8 $A898 DA EC F4 DA F4 EB DA DF  ;
.byt    $ED,$FF                        ; 0xe8b0 $A8A0 ED FF                    ;
LA8A2                                                                          ;
.byt    $DF,$E2,$E7,$DD,$F4,$E6,$DA,$E0; 0xe8b2 $A8A2 DF E2 E7 DD F4 E6 DA E0  ;
.byt    $E2,$DC,$FD,$E2,$E7,$F4,$DA,$F4; 0xe8ba $A8AA E2 DC FD E2 E7 F4 DA F4  ;
.byt    $DC,$DA,$EF,$DE,$FD,$E2,$E7,$F4; 0xe8c2 $A8B2 DC DA EF DE FD E2 E7 F4  ;
.byt    $E6,$E8,$EB,$EE,$E0,$DE,$FD,$EC; 0xe8ca $A8BA E6 E8 EB EE E0 DE FD EC  ;
.byt    $F0,$DA,$E6,$E9,$CF,$FF        ; 0xe8d2 $A8C2 F0 DA E6 E9 CF FF        ;
LA8C8                                                                          ;
.byt    $E1,$DA,$EB,$DB,$E8,$EB,$FD,$F4; 0xe8d8 $A8C8 E1 DA EB DB E8 EB FD F4  ;
.byt    $ED,$E8,$F0,$E7,$FD,$F4,$F4,$E8; 0xe8e0 $A8D0 ED E8 F0 E7 FD F4 F4 E8  ;
.byt    $DF,$FD,$F4,$E6,$E2,$DD,$E8,$FF; 0xe8e8 $A8D8 DF FD F4 E6 E2 DD E8 FF  ;
LA8E0                                                                          ;
.byt    $ED,$E1,$DE,$F4,$DD,$E8,$E8,$EB; 0xe8f0 $A8E0 ED E1 DE F4 DD E8 E8 EB  ;
.byt    $FD,$F0,$E2,$E5,$E5,$F4,$E7,$E8; 0xe8f8 $A8E8 FD F0 E2 E5 E5 F4 E7 E8  ;
.byt    $ED,$FD,$E8,$E9,$DE,$E7,$CF,$F4; 0xe900 $A8F0 ED FD E8 E9 DE E7 CF F4  ;
.byt    $E2,$ED,$EC,$FD,$EF,$DE,$EB,$F2; 0xe908 $A8F8 E2 ED EC FD EF DE EB F2  ;
.byt    $F4,$EA,$EE,$E2,$DE,$ED,$FF    ; 0xe910 $A900 F4 EA EE E2 DE ED FF     ;
LA907                                                                          ;
.byt    $E9,$E5,$DE,$DA,$EC,$DE,$CF,$F4; 0xe917 $A907 E9 E5 DE DA EC DE CF F4  ;
.byt    $E6,$F2,$FD,$DD,$DA,$EE,$E0,$E1; 0xe91f $A90F E6 F2 FD DD DA EE E0 E1  ;
.byt    $ED,$DE,$EB,$FD,$E2,$EC,$F4,$EC; 0xe927 $A917 ED DE EB FD E2 EC F4 EC  ;
.byt    $E2,$DC,$E4,$CF,$FD,$E1,$DE,$E5; 0xe92f $A91F E2 DC E4 CF FD E1 DE E5  ;
.byt    $E9,$F4,$E1,$DE,$EB,$36,$FF    ; 0xe937 $A927 E9 F4 E1 DE EB 36 FF     ;
LA92E                                                                          ;
.byt    $ED,$E1,$DE,$F4,$F0,$DA,$ED,$DE; 0xe93e $A92E ED E1 DE F4 F0 DA ED DE  ;
.byt    $EB,$FD,$E8,$DF,$F4,$E5,$E2,$DF; 0xe946 $A936 EB FD E8 DF F4 E5 E2 DF  ;
.byt    $DE,$36,$FD,$EA,$EE,$E2,$DC,$E4; 0xe94e $A93E DE 36 FD EA EE E2 DC E4  ;
.byt    $F4,$DC,$E8,$E6,$DE,$FD,$F0,$E2; 0xe956 $A946 F4 DC E8 E6 DE FD F0 E2  ;
.byt    $ED,$E1,$F4,$E6,$DE,$CF,$FF    ; 0xe95e $A94E ED E1 F4 E6 DE CF FF     ;
LA955                                                                          ;
.byt    $DA,$EC,$E4,$F4,$DE,$EB,$EB,$E8; 0xe965 $A955 DA EC E4 F4 DE EB EB E8  ;
.byt    $EB,$FD,$E8,$DF,$F4,$EB,$EE,$ED; 0xe96d $A95D EB FD E8 DF F4 EB EE ED  ;
.byt    $E8,$FD,$DA,$DB,$E8,$EE,$ED,$F4; 0xe975 $A965 E8 FD DA DB E8 EE ED F4  ;
.byt    $ED,$E1,$DE,$FD,$E9,$DA,$E5,$DA; 0xe97d $A96D ED E1 DE FD E9 DA E5 DA  ;
.byt    $DC,$DE,$CF,$FF                ; 0xe985 $A975 DC DE CF FF              ;
LA979                                                                          ;
.byt    $ED,$E1,$E2,$EC,$F4,$E6,$DA,$E0; 0xe989 $A979 ED E1 E2 EC F4 E6 DA E0  ;
.byt    $E2,$DC,$FD,$F0,$E8,$EB,$DD,$F4; 0xe991 $A981 E2 DC FD F0 E8 EB DD F4  ;
.byt    $F0,$E2,$E5,$E5,$FD,$E0,$E2,$EF; 0xe999 $A989 F0 E2 E5 E5 FD E0 E2 EF  ;
.byt    $DE,$F4,$F2,$E8,$EE,$FD,$E9,$E8; 0xe9a1 $A991 DE F4 F2 E8 EE FD E9 E8  ;
.byt    $F0,$DE,$EB,$CF,$FF            ; 0xe9a9 $A999 F0 DE EB CF FF           ;
LA99E                                                                          ;
.byt    $F0,$E1,$DE,$E7,$F4,$F2,$E8,$EE; 0xe9ae $A99E F0 E1 DE E7 F4 F2 E8 EE  ;
.byt    $FD,$E3,$EE,$E6,$E9,$F4,$E9,$EB; 0xe9b6 $A9A6 FD E3 EE E6 E9 F4 E9 EB  ;
.byt    $DE,$EC,$EC,$FD,$DD,$E8,$F0,$E7; 0xe9be $A9AE DE EC EC FD DD E8 F0 E7  ;
.byt    $F0,$DA,$EB,$DD,$FD,$ED,$E8,$F4; 0xe9c6 $A9B6 F0 DA EB DD FD ED E8 F4  ;
.byt    $EC,$ED,$DA,$DB,$CF,$FF        ; 0xe9ce $A9BE EC ED DA DB CF FF        ;
LA9C4                                                                          ;
.byt    $DB,$DA,$E0,$EE,$F4,$E2,$EC,$F4; 0xe9d4 $A9C4 DB DA E0 EE F4 E2 EC F4  ;
.byt    $E6,$F2,$FD,$E7,$DA,$E6,$DE,$CF; 0xe9dc $A9CC E6 F2 FD E7 DA E6 DE CF  ;
.byt    $F4,$EC,$E1,$E8,$F0,$FD,$E6,$F2; 0xe9e4 $A9D4 F4 EC E1 E8 F0 FD E6 F2  ;
.byt    $F4,$E7,$E8,$ED,$DE,$F4,$ED,$E8; 0xe9ec $A9DC F4 E7 E8 ED DE F4 ED E8  ;
.byt    $FD,$EB,$E2,$EF,$DE,$EB,$F4,$E6; 0xe9f4 $A9E4 FD EB E2 EF DE EB F4 E6  ;
.byt    $DA,$E7,$CF,$FF                ; 0xe9fc $A9EC DA E7 CF FF              ;
LA9F0                                                                          ;
.byt    $F3,$F3,$F3,$CF,$CF,$CF,$FF    ; 0xea00 $A9F0 F3 F3 F3 CF CF CF FF     ;
LA9F7                                                                          ;
.byt    $E5,$DE,$ED,$F4,$E6,$DE,$F4,$DB; 0xea07 $A9F7 E5 DE ED F4 E6 DE F4 DB  ;
.byt    $DE,$36,$FD,$E6,$DA,$EC,$ED,$DE; 0xea0f $A9FF DE 36 FD E6 DA EC ED DE  ;
.byt    $EB                            ; 0xea17 $AA07 EB                       ;
LAA08                                                                          ;
.byt    $F4,$E2,$EC,$FD,$E2,$E7,$F4,$F0; 0xea18 $AA08 F4 E2 EC FD E2 E7 F4 F0  ;
.byt    $E8,$E8,$DD,$EC,$FD,$E7,$F4,$E8; 0xea20 $AA10 E8 E8 DD EC FD E7 F4 E8  ;
.byt    $DF,$F4,$EB,$E2,$EF,$DE,$EB,$FF; 0xea28 $AA18 DF F4 EB E2 EF DE EB FF  ;
LAA20                                                                          ;
.byt    $ED,$E1,$E2,$EC,$F4,$E2,$EC,$FD; 0xea30 $AA20 ED E1 E2 EC F4 E2 EC FD  ;
.byt    $E4,$E2,$E7,$E0,$EC,$F4,$ED,$E8; 0xea38 $AA28 E4 E2 E7 E0 EC F4 ED E8  ;
.byt    $E6,$DB,$FF                    ; 0xea40 $AA30 E6 DB FF                 ;
LAA33                                                                          ;
.byt    $EC,$ED,$E8,$E9,$F4,$DB,$F2,$FD; 0xea43 $AA33 EC ED E8 E9 F4 DB F2 FD  ;
.byt    $DF,$E8,$EB,$F4,$DA,$F0,$E1,$E2; 0xea4b $AA3B DF E8 EB F4 DA F0 E1 E2  ;
.byt    $E5,$DE,$FF                    ; 0xea53 $AA43 E5 DE FF                 ;
LAA46                                                                          ;
.byt    $EB,$DE,$EF,$E2,$EF,$DE,$DD,$36; 0xea56 $AA46 EB DE EF E2 EF DE DD 36  ;
.byt    $FF                            ; 0xea5e $AA4E FF                       ;
LAA4F                                                                          ;
.byt    $EB,$DE,$EC,$ED,$F4,$E1,$DE,$EB; 0xea5f $AA4F EB DE EC ED F4 E1 DE EB  ;
.byt    $DE,$CF,$FF                    ; 0xea67 $AA57 DE CF FF                 ;
LAA5A                                                                          ;
.byt    $E1,$E8,$F0,$F4,$DA,$DB,$E8,$EE; 0xea6a $AA5A E1 E8 F0 F4 DA DB E8 EE  ;
.byt    $ED,$FD,$ED,$E1,$DA,$ED,$34,$F4; 0xea72 $AA62 ED FD ED E1 DA ED 34 F4  ;
.byt    $E2,$ED,$EC,$FD,$E6,$F2,$F4,$EC; 0xea7a $AA6A E2 ED EC FD E6 F2 F4 EC  ;
.byt    $E9,$DE,$DC,$E2,$DA,$E5,$FD,$E6; 0xea82 $AA72 E9 DE DC E2 DA E5 FD E6  ;
.byt    $DE,$DD,$E2,$DC,$E2,$E7,$DE,$CF; 0xea8a $AA7A DE DD E2 DC E2 E7 DE CF  ;
.byt    $FF                            ; 0xea92 $AA82 FF                       ;
LAA83                                                                          ;
.byt    $E2,$F4,$E4,$E7,$E8,$F0,$FD,$E7; 0xea93 $AA83 E2 F4 E4 E7 E8 F0 FD E7  ;
.byt    $E8,$ED,$E1,$E2,$E7,$E0,$CF,$FF; 0xea9b $AA8B E8 ED E1 E2 E7 E0 CF FF  ;
LAA93                                                                          ;
.byt    $E9,$E5,$DE,$DA,$EC,$DE,$FD,$EC; 0xeaa3 $AA93 E9 E5 DE DA EC DE FD EC  ;
.byt    $DA,$EF,$DE,$F4,$E8,$EE,$EB,$FD; 0xeaab $AA9B DA EF DE F4 E8 EE EB FD  ;
.byt    $ED,$E8,$F0,$E7,$36,$FF        ; 0xeab3 $AAA3 ED E8 F0 E7 36 FF        ;
LAAA9                                                                          ;
.byt    $F2,$E8,$EE,$F4,$E6,$EE,$EC,$ED; 0xeab9 $AAA9 F2 E8 EE F4 E6 EE EC ED  ;
.byt    $FD,$EC,$DA,$EF,$DE,$FD,$E1,$F2; 0xeac1 $AAB1 FD EC DA EF DE FD E1 F2  ;
.byt    $EB,$EE,$E5,$DE,$36,$FF        ; 0xeac9 $AAB9 EB EE E5 DE 36 FF        ;
LAABF                                                                          ;
.byt    $E2,$F4,$DC,$DA,$E7,$F4,$E7,$E8; 0xeacf $AABF E2 F4 DC DA E7 F4 E7 E8  ;
.byt    $ED,$FD,$E1,$DE,$E5,$E9,$F4,$F2; 0xead7 $AAC7 ED FD E1 DE E5 E9 F4 F2  ;
.byt    $E8,$EE,$CF,$FF                ; 0xeadf $AACF E8 EE CF FF              ;
LAAD3                                                                          ;
.byt    $ED,$E1,$DE,$F4,$EB,$E2,$EF,$DE; 0xeae3 $AAD3 ED E1 DE F4 EB E2 EF DE  ;
.byt    $EB,$FD,$DD,$DE,$EF,$E2,$E5,$F4; 0xeaeb $AADB EB FD DD DE EF E2 E5 F4  ;
.byt    $DE,$DA,$ED,$EC,$FD,$ED,$E1,$E8; 0xeaf3 $AAE3 DE DA ED EC FD ED E1 E8  ;
.byt    $EC,$DE,$F4,$F0,$E1,$E8,$FD,$DA; 0xeafb $AAEB EC DE F4 F0 E1 E8 FD DA  ;
.byt    $EB,$DE,$F4,$F0,$DE,$DA,$E4,$CF; 0xeb03 $AAF3 EB DE F4 F0 DE DA E4 CF  ;
.byt    $FF                            ; 0xeb0b $AAFB FF                       ;
LAAFC                                                                          ;
.byt    $E3,$EE,$E6,$E9,$F4,$E2,$E7,$F4; 0xeb0c $AAFC E3 EE E6 E9 F4 E2 E7 F4  ;
.byt    $DA,$FD,$E1,$E8,$E5,$DE,$F4,$E2; 0xeb14 $AB04 DA FD E1 E8 E5 DE F4 E2  ;
.byt    $E7,$FD,$ED,$E1,$DE,$F4,$E9,$DA; 0xeb1c $AB0C E7 FD ED E1 DE F4 E9 DA  ;
.byt    $E5,$DA,$DC,$DE,$FD,$E2,$DF,$F4; 0xeb24 $AB14 E5 DA DC DE FD E2 DF F4  ;
.byt    $F2,$E8,$EE,$F4,$E0,$E8,$CF,$FF; 0xeb2c $AB1C F2 E8 EE F4 E0 E8 CF FF  ;
LAB24                                                                          ;
.byt    $F0,$DE,$E5,$DC,$E8,$E6,$DE,$FD; 0xeb34 $AB24 F0 DE E5 DC E8 E6 DE FD  ;
.byt    $F4,$F4,$ED,$E8,$FD,$E7,$DA,$DB; 0xeb3c $AB2C F4 F4 ED E8 FD E7 DA DB  ;
.byt    $E8,$E8,$EB,$EE,$FF            ; 0xeb44 $AB34 E8 E8 EB EE FF           ;
LAB39                                                                          ;
.byt    $F0,$DA,$E7,$ED,$F4,$ED,$E8,$FD; 0xeb49 $AB39 F0 DA E7 ED F4 ED E8 FD  ;
.byt    $E0,$DE,$ED,$F4,$EC,$E8,$E6,$DE; 0xeb51 $AB41 E0 DE ED F4 EC E8 E6 DE  ;
.byt    $FD,$F0,$DA,$ED,$DE,$EB,$34,$FF; 0xeb59 $AB49 FD F0 DA ED DE EB 34 FF  ;
LAB51                                                                          ;
.byt    $EC,$DE,$DE,$F4,$DA,$F4,$E6,$DA; 0xeb61 $AB51 EC DE DE F4 DA F4 E6 DA  ;
.byt    $E7,$FD,$E2,$E7,$F4,$DD,$DA,$EB; 0xeb69 $AB59 E7 FD E2 E7 F4 DD DA EB  ;
.byt    $EE,$E7,$E2,$DA,$FD,$DB,$DE,$DF; 0xeb71 $AB61 EE E7 E2 DA FD DB DE DF  ;
.byt    $E8,$EB,$DE,$F4,$ED,$E1,$DE,$FD; 0xeb79 $AB69 E8 EB DE F4 ED E1 DE FD  ;
.byt    $E2,$EC,$E5,$DA,$E7,$DD,$EC,$CF; 0xeb81 $AB71 E2 EC E5 DA E7 DD EC CF  ;
.byt    $FF                            ; 0xeb89 $AB79 FF                       ;
LAB7A                                                                          ;
.byt    $E2,$F4,$DA,$E6,$FD,$ED,$E1,$E2; 0xeb8a $AB7A E2 F4 DA E6 FD ED E1 E2  ;
.byt    $EB,$EC,$ED,$F2,$CF,$FF        ; 0xeb92 $AB82 EB EC ED F2 CF FF        ;
LAB88                                                                          ;
.byt    $F2,$E8,$EE,$F4,$E1,$DA,$EF,$DE; 0xeb98 $AB88 F2 E8 EE F4 E1 DA EF DE  ;
.byt    $FD,$F0,$DA,$ED,$DE,$EB,$CF,$FD; 0xeba0 $AB90 FD F0 DA ED DE EB CF FD  ;
.byt    $DC,$E8,$E6,$DE,$F4,$ED,$E8,$FD; 0xeba8 $AB98 DC E8 E6 DE F4 ED E8 FD  ;
.byt    $E6,$F2,$F4,$E1,$E8,$EE,$EC,$DE; 0xebb0 $ABA0 E6 F2 F4 E1 E8 EE EC DE  ;
.byt    $CF,$FF                        ; 0xebb8 $ABA8 CF FF                    ;
LABAA                                                                          ;
.byt    $F0,$E2,$ED,$E1,$F4,$DB,$E8,$E8; 0xebba $ABAA F0 E2 ED E1 F4 DB E8 E8  ;
.byt    $ED,$EC,$FD,$E2,$F4,$DC,$E8,$EE; 0xebc2 $ABB2 ED EC FD E2 F4 DC E8 EE  ;
.byt    $E5,$DD,$FD,$F0,$DA,$E5,$E4,$F4; 0xebca $ABBA E5 DD FD F0 DA E5 E4 F4  ;
.byt    $E8,$E7,$FD,$ED,$E1,$DE,$F4,$F0; 0xebd2 $ABC2 E8 E7 FD ED E1 DE F4 F0  ;
.byt    $DA,$ED,$DE,$EB,$CF,$FF        ; 0xebda $ABCA DA ED DE EB CF FF        ;
LABD0                                                                          ;
.byt    $DE,$DA,$EC,$ED,$F4,$E8,$DF,$FD; 0xebe0 $ABD0 DE DA EC ED F4 E8 DF FD  ;
.byt    $ED,$EB,$E2,$E9,$E5,$DE,$F4,$DE; 0xebe8 $ABD8 ED EB E2 E9 E5 DE F4 DE  ;
.byt    $F2,$DE,$FD,$EB,$E8,$DC,$E4,$F4; 0xebf0 $ABE0 F2 DE FD EB E8 DC E4 F4  ;
.byt    $DA,$ED,$FD,$EC,$DE,$DA,$EC,$E1; 0xebf8 $ABE8 DA ED FD EC DE DA EC E1  ;
.byt    $E8,$EB,$DE,$CF,$FF            ; 0xec00 $ABF0 E8 EB DE CF FF           ;
LABF5                                                                          ;
.byt    $DC,$E8,$E6,$DE,$F4,$DB,$DA,$DC; 0xec05 $ABF5 DC E8 E6 DE F4 DB DA DC  ;
.byt    $E4,$FD,$F0,$E1,$DE,$E7,$F4,$F2; 0xec0d $ABFD E4 FD F0 E1 DE E7 F4 F2  ;
.byt    $E8,$EE,$FD,$DA,$EB,$DE,$F4,$EB; 0xec15 $AC05 E8 EE FD DA EB DE F4 EB  ;
.byt    $DE,$DA,$DD,$F2,$CF,$FF        ; 0xec1d $AC0D DE DA DD F2 CF FF        ;
LAC13                                                                          ;
.byt    $ED,$E1,$E2,$EC,$F4,$E6,$DA,$E0; 0xec23 $AC13 ED E1 E2 EC F4 E6 DA E0  ;
.byt    $E2,$DC,$FD,$F0,$E2,$E5,$E5,$F4; 0xec2b $AC1B E2 DC FD F0 E2 E5 E5 F4  ;
.byt    $E6,$DA,$E4,$DE,$FD,$F2,$E8,$EE; 0xec33 $AC23 E6 DA E4 DE FD F2 E8 EE  ;
.byt    $EB,$F4,$EC,$F0,$E8,$EB,$DD,$FD; 0xec3b $AC2B EB F4 EC F0 E8 EB DD FD  ;
.byt    $EC,$E1,$E8,$E8,$ED,$F4,$DF,$E2; 0xec43 $AC33 EC E1 E8 E8 ED F4 DF E2  ;
.byt    $EB,$DE,$FF                    ; 0xec4b $AC3B EB DE FF                 ;
LAC3E                                                                          ;
.byt    $F2,$E8,$EE,$F4,$E4,$E7,$E8,$F0; 0xec4e $AC3E F2 E8 EE F4 E4 E7 E8 F0  ;
.byt    $FD,$DA,$E5,$E5,$F4,$E2,$F4,$DC; 0xec56 $AC46 FD DA E5 E5 F4 E2 F4 DC  ;
.byt    $DA,$E7,$FD,$ED,$DE,$DA,$DC,$E1; 0xec5e $AC4E DA E7 FD ED DE DA DC E1  ;
.byt    $F4,$F2,$E8,$EE,$CF,$FD,$E0,$E8; 0xec66 $AC56 F4 F2 E8 EE CF FD E0 E8  ;
.byt    $CF,$FF                        ; 0xec6e $AC5E CF FF                    ;
LAC60                                                                          ;
.byt    $ED,$E1,$DE,$F4,$DD,$DE,$EF,$E2; 0xec70 $AC60 ED E1 DE F4 DD DE EF E2  ;
.byt    $E5,$FD,$DD,$E8,$DE,$EC,$F4,$E7; 0xec78 $AC68 E5 FD DD E8 DE EC F4 E7  ;
.byt    $E8,$ED,$FD,$E5,$E2,$E4,$DE,$F4; 0xec80 $AC70 E8 ED FD E5 E2 E4 DE F4  ;
.byt    $E7,$E8,$E2,$EC,$DE,$FF        ; 0xec88 $AC78 E7 E8 E2 EC DE FF        ;
LAC7E                                                                          ;
.byt    $DA,$F4,$E9,$E8,$F0,$DE,$EB,$DF; 0xec8e $AC7E DA F4 E9 E8 F0 DE EB DF  ;
.byt    $EE,$E5,$FD,$E4,$E7,$E2,$E0,$E1; 0xec96 $AC86 EE E5 FD E4 E7 E2 E0 E1  ;
.byt    $ED,$FD,$E5,$E2,$EF,$DE,$EC,$F4; 0xec9e $AC8E ED FD E5 E2 EF DE EC F4  ;
.byt    $E2,$E7,$FD,$ED,$E1,$E2,$EC,$F4; 0xeca6 $AC96 E2 E7 FD ED E1 E2 EC F4  ;
.byt    $ED,$E8,$F0,$E7,$CF,$FF        ; 0xecae $AC9E ED E8 F0 E7 CF FF        ;
LACA4                                                                          ;
.byt    $E6,$DA,$E0,$E2,$DC,$F4,$E4,$DE; 0xecb4 $ACA4 E6 DA E0 E2 DC F4 E4 DE  ;
.byt    $F2,$FD,$EB,$DE,$DA,$DD,$EC,$CF; 0xecbc $ACAC F2 FD EB DE DA DD EC CF  ;
.byt    $CF,$CF,$FE,$ED,$EB,$DE,$DA,$EC; 0xecc4 $ACB4 CF CF FE ED EB DE DA EC  ;
.byt    $EE,$EB,$DE,$FD,$E8,$DF,$F4,$E4; 0xeccc $ACBC EE EB DE FD E8 DF F4 E4  ;
.byt    $DA,$EC,$EE,$ED,$E8,$FF        ; 0xecd4 $ACC4 DA EC EE ED E8 FF        ;
LACCA                                                                          ;
.byt    $ED,$E1,$DE,$F4,$E9,$DA,$E5,$DA; 0xecda $ACCA ED E1 DE F4 E9 DA E5 DA  ;
.byt    $DC,$DE,$FD,$E1,$DA,$EC,$F4,$DA; 0xece2 $ACD2 DC DE FD E1 DA EC F4 DA  ;
.byt    $FD,$DF,$DA,$E5,$EC,$DE,$F4,$F0; 0xecea $ACDA FD DF DA E5 EC DE F4 F0  ;
.byt    $DA,$E5,$E5,$FF                ; 0xecf2 $ACE2 DA E5 E5 FF              ;
LACE6                                                                          ;
.byt    $E6,$E8,$EE,$E7,$ED,$DA,$E2,$E7; 0xecf6 $ACE6 E6 E8 EE E7 ED DA E2 E7  ;
.byt    $FD,$F4,$ED,$E8,$F0,$E7,$F4,$E8; 0xecfe $ACEE FD F4 ED E8 F0 E7 F4 E8  ;
.byt    $DF,$FD,$F4,$DD,$DA,$EB,$EE,$E7; 0xed06 $ACF6 DF FD F4 DD DA EB EE E7  ;
.byt    $E2,$DA,$FF                    ; 0xed0e $ACFE E2 DA FF                 ;
LAD01                                                                          ;
.byt    $E2,$ED,$F4,$E2,$EC,$F4,$EC,$DA; 0xed11 $AD01 E2 ED F4 E2 EC F4 EC DA  ;
.byt    $E2,$DD,$FD,$ED,$E1,$DE,$F4,$DE; 0xed19 $AD09 E2 DD FD ED E1 DE F4 DE  ;
.byt    $DA,$EC,$ED,$FD,$E8,$DF,$F4,$E7; 0xed21 $AD11 DA EC ED FD E8 DF F4 E7  ;
.byt    $DA,$DB,$E8,$E8,$EB,$EE,$FD,$E1; 0xed29 $AD19 DA DB E8 E8 EB EE FD E1  ;
.byt    $DA,$EC,$CF,$CF,$CF,$FF        ; 0xed31 $AD21 DA EC CF CF CF FF        ;
LAD27                                                                          ;
.byt    $ED,$E1,$DE,$EB,$DE,$F4,$E2,$EC; 0xed37 $AD27 ED E1 DE EB DE F4 E2 EC  ;
.byt    $FD,$EC,$E8,$E6,$DE,$E8,$E7,$DE; 0xed3f $AD2F FD EC E8 E6 DE E8 E7 DE  ;
.byt    $FD,$DB,$DE,$E1,$E2,$E7,$DD,$F4; 0xed47 $AD37 FD DB DE E1 E2 E7 DD F4  ;
.byt    $ED,$E1,$DE,$FD,$DD,$E8,$E8,$EB; 0xed4f $AD3F ED E1 DE FD DD E8 E8 EB  ;
.byt    $36,$FF                        ; 0xed57 $AD47 36 FF                    ;
LAD49                                                                          ;
.byt    $EB,$DE,$EC,$DC,$EE,$DE,$F4,$ED; 0xed59 $AD49 EB DE EC DC EE DE F4 ED  ;
.byt    $E1,$DE,$FD,$E4,$E2,$DD,$E7,$DA; 0xed61 $AD51 E1 DE FD E4 E2 DD E7 DA  ;
.byt    $E9,$E9,$DE,$DD,$FD,$DC,$E1,$E2; 0xed69 $AD59 E9 E9 DE DD FD DC E1 E2  ;
.byt    $E5,$DD,$F4,$E8,$E7,$FD,$ED,$E1; 0xed71 $AD61 E5 DD F4 E8 E7 FD ED E1  ;
.byt    $DE,$F4,$E2,$EC,$E5,$DA,$E7,$DD; 0xed79 $AD69 DE F4 E2 EC E5 DA E7 DD  ;
.byt    $FF                            ; 0xed81 $AD71 FF                       ;
LAD72                                                                          ;
.byt    $F2,$E8,$EE,$F4,$DA,$EB,$DE,$F4; 0xed82 $AD72 F2 E8 EE F4 DA EB DE F4  ;
.byt    $DA,$FD,$E1,$DE,$EB,$E8,$F4,$DF; 0xed8a $AD7A DA FD E1 DE EB E8 F4 DF  ;
.byt    $E8,$EB,$FD,$EC,$DA,$EF,$E2,$E7; 0xed92 $AD82 E8 EB FD EC DA EF E2 E7  ;
.byt    $E0,$F4,$E6,$F2,$FD,$DC,$E1,$E2; 0xed9a $AD8A E0 F4 E6 F2 FD DC E1 E2  ;
.byt    $E5,$DD,$CF,$DC,$E8,$E6,$DE,$FF; 0xeda2 $AD92 E5 DD CF DC E8 E6 DE FF  ;
LAD9A                                                                          ;
.byt    $ED,$E1,$E2,$EC,$F4,$E6,$DA,$E0; 0xedaa $AD9A ED E1 E2 EC F4 E6 DA E0  ;
.byt    $E2,$DC,$FD,$F0,$E2,$E5,$E5,$FD; 0xedb2 $ADA2 E2 DC FD F0 E2 E5 E5 FD  ;
.byt    $EC,$ED,$EB,$DE,$E7,$E0,$ED,$E1; 0xedba $ADAA EC ED EB DE E7 E0 ED E1  ;
.byt    $DE,$E7,$FD,$DA,$F4,$EC,$E1,$E2; 0xedc2 $ADB2 DE E7 FD DA F4 EC E1 E2  ;
.byt    $DE,$E5,$DD,$CF,$FF            ; 0xedca $ADBA DE E5 DD CF FF           ;
LADBF                                                                          ;
.byt    $F0,$E1,$DE,$E7,$F4,$F2,$E8,$EE; 0xedcf $ADBF F0 E1 DE E7 F4 F2 E8 EE  ;
.byt    $FD,$E3,$EE,$E6,$E9,$F4,$E9,$EB; 0xedd7 $ADC7 FD E3 EE E6 E9 F4 E9 EB  ;
.byt    $DE,$EC,$EC,$FD,$EE,$E9,$F4,$ED; 0xeddf $ADCF DE EC EC FD EE E9 F4 ED  ;
.byt    $E8,$F4,$EC,$ED,$DA,$DB,$CF,$FF; 0xede7 $ADD7 E8 F4 EC ED DA DB CF FF  ;
LADDF                                                                          ;
.byt    $F0,$DE,$F4,$E1,$DA,$DD,$FD,$ED; 0xedef $ADDF F0 DE F4 E1 DA DD FD ED  ;
.byt    $E8,$F4,$DF,$E5,$DE,$DE,$FD,$E4; 0xedf7 $ADE7 E8 F4 DF E5 DE DE FD E4  ;
.byt    $DA,$EC,$EE,$ED,$E8,$CF,$FF    ; 0xedff $ADEF DA EC EE ED E8 CF FF     ;
LADF6                                                                          ;
.byt    $ED,$E1,$DE,$F4,$E8,$E5,$DD,$FD; 0xee06 $ADF6 ED E1 DE F4 E8 E5 DD FD  ;
.byt    $E6,$DA,$E7,$F4,$F0,$E1,$E8,$FD; 0xee0e $ADFE E6 DA E7 F4 F0 E1 E8 FD  ;
.byt    $EB,$DE,$E6,$DA,$E2,$E7,$EC,$FD; 0xee16 $AE06 EB DE E6 DA E2 E7 EC FD  ;
.byt    $E1,$DA,$EC,$F4,$E6,$DA,$E0,$E2; 0xee1e $AE0E E1 DA EC F4 E6 DA E0 E2  ;
.byt    $DC,$CF,$FF                    ; 0xee26 $AE16 DC CF FF                 ;
LAE19                                                                          ;
.byt    $32,$32,$32,$32,$32,$FF        ; 0xee29 $AE19 32 32 32 32 32 FF        ;
LAE1F                                                                          ;
.byt    $E1,$E2,$DD,$DD,$DE,$E7,$FD,$F4; 0xee2f $AE1F E1 E2 DD DD DE E7 FD F4  ;
.byt    $ED,$E8,$F0,$E7,$FD,$F4,$F4,$E8; 0xee37 $AE27 ED E8 F0 E7 FD F4 F4 E8  ;
.byt    $DF,$FD,$E4,$DA,$EC,$EE,$ED,$E8; 0xee3f $AE2F DF FD E4 DA EC EE ED E8  ;
.byt    $FF                            ; 0xee47 $AE37 FF                       ;
LAE38                                                                          ;
.byt    $E5,$E8,$E8,$E4,$EC,$F4,$E5,$E2; 0xee48 $AE38 E5 E8 E8 E4 EC F4 E5 E2  ;
.byt    $E4,$DE,$FD,$E2,$F4,$DC,$DA,$E7; 0xee50 $AE40 E4 DE FD E2 F4 DC DA E7  ;
.byt    $F4,$E0,$DE,$ED,$FD,$E2,$E7,$F4; 0xee58 $AE48 F4 E0 DE ED FD E2 E7 F4  ;
.byt    $ED,$E1,$DE,$FD,$DF,$E2,$EB,$DE; 0xee60 $AE50 ED E1 DE FD DF E2 EB DE  ;
.byt    $E9,$E5,$DA,$DC,$DE,$CF,$FF    ; 0xee68 $AE58 E9 E5 DA DC DE CF FF     ;
LAE5F                                                                          ;
.byt    $DC,$DA,$E5,$E5,$F4,$DF,$E8,$EB; 0xee6f $AE5F DC DA E5 E5 F4 DF E8 EB  ;
.byt    $FD,$E1,$DE,$E5,$E9,$F4,$DA,$ED; 0xee77 $AE67 FD E1 DE E5 E9 F4 DA ED  ;
.byt    $FD,$ED,$E1,$DE,$F4,$ED,$E1,$EB; 0xee7f $AE6F FD ED E1 DE F4 ED E1 EB  ;
.byt    $DE,$DE,$FD,$DE,$F2,$DE,$F4,$EB; 0xee87 $AE77 DE DE FD DE F2 DE F4 EB  ;
.byt    $E8,$DC,$E4,$EC,$CF,$FF        ; 0xee8f $AE7F E8 DC E4 EC CF FF        ;
LAE85                                                                          ;
.byt    $ED,$E1,$DE,$F4,$E1,$E8,$E5,$DE; 0xee95 $AE85 ED E1 DE F4 E1 E8 E5 DE  ;
.byt    $FD,$E2,$E7,$F4,$E9,$DA,$E5,$DA; 0xee9d $AE8D FD E2 E7 F4 E9 DA E5 DA  ;
.byt    $DC,$DE,$FD,$E2,$EC,$F4,$DE,$E7; 0xeea5 $AE95 DC DE FD E2 EC F4 DE E7  ;
.byt    $DD,$E5,$DE,$EC,$EC,$FD,$ED,$EB; 0xeead $AE9D DD E5 DE EC EC FD ED EB  ;
.byt    $DA,$E9,$CF,$FF                ; 0xeeb5 $AEA5 DA E9 CF FF              ;
LAEA9                                                                          ;
.byt    $DD,$E8,$F4,$F2,$E8,$EE,$FD,$E1; 0xeeb9 $AEA9 DD E8 F4 F2 E8 EE FD E1  ;
.byt    $DA,$EF,$DE,$F4,$ED,$E1,$DE,$FD; 0xeec1 $AEB1 DA EF DE F4 ED E1 DE FD  ;
.byt    $D7,$F4,$E6,$DA,$E0,$E2,$DC,$FD; 0xeec9 $AEB9 D7 F4 E6 DA E0 E2 DC FD  ;
.byt    $DC,$E8,$E7,$ED,$DA,$E2,$E7,$DE; 0xeed1 $AEC1 DC E8 E7 ED DA E2 E7 DE  ;
.byt    $EB,$EC,$FF                    ; 0xeed9 $AEC9 EB EC FF                 ;
LAECC                                                                          ;
.byt    $F2,$E8,$EE,$FD,$DD,$DE,$EC,$DE; 0xeedc $AECC F2 E8 EE FD DD DE EC DE  ;
.byt    $EB,$EF,$DE,$FD,$E6,$F2,$F4,$E1; 0xeee4 $AED4 EB EF DE FD E6 F2 F4 E1  ;
.byt    $DE,$E5,$E9,$CF,$FD,$DF,$E8,$E5; 0xeeec $AEDC DE E5 E9 CF FD DF E8 E5  ;
.byt    $E5,$E8,$F0,$F4,$E6,$DE,$CF,$FF; 0xeef4 $AEE4 E5 E8 F0 F4 E6 DE CF FF  ;
LAEEC                                                                          ;
.byt    $ED,$E1,$DE,$EB,$DE,$F4,$E2,$EC; 0xeefc $AEEC ED E1 DE EB DE F4 E2 EC  ;
.byt    $FD,$DA,$F4,$EC,$DE,$DC,$EB,$DE; 0xef04 $AEF4 FD DA F4 EC DE DC EB DE  ;
.byt    $ED,$FD,$DA,$ED,$F4,$DE,$DD,$E0; 0xef0c $AEFC ED FD DA ED F4 DE DD E0  ;
.byt    $DE,$FD,$E8,$DF,$F4,$ED,$E8,$F0; 0xef14 $AF04 DE FD E8 DF F4 ED E8 F0  ;
.byt    $E7,$CF,$FF                    ; 0xef1c $AF0C E7 CF FF                 ;
LAF0F                                                                          ;
.byt    $EB,$DE,$E6,$DE,$E6,$DB,$DE,$EB; 0xef1f $AF0F EB DE E6 DE E6 DB DE EB  ;
.byt    $FD,$ED,$E1,$DE,$F4,$E6,$DA,$E0; 0xef27 $AF17 FD ED E1 DE F4 E6 DA E0  ;
.byt    $E2,$DC,$FD,$F0,$E8,$EB,$DD,$CF; 0xef2f $AF1F E2 DC FD F0 E8 EB DD CF  ;
.byt    $FF                            ; 0xef37 $AF27 FF                       ;
LAF28                                                                          ;
.byt    $E4,$DA,$EC,$EE,$ED,$E8,$CF,$FD; 0xef38 $AF28 E4 DA EC EE ED E8 CF FD  ;
.byt    $EC,$ED,$EB,$DA,$E7,$E0,$DE,$CF; 0xef40 $AF30 EC ED EB DA E7 E0 DE CF  ;
.byt    $CF,$CF,$FE,$E2,$ED,$F4,$E2,$EC; 0xef48 $AF38 CF CF FE E2 ED F4 E2 EC  ;
.byt    $FD,$DD,$DE,$EC,$DE,$EB,$ED,$DE; 0xef50 $AF40 FD DD DE EC DE EB ED DE  ;
.byt    $DD,$CF,$FF                    ; 0xef58 $AF48 DD CF FF                 ;
LAF4B                                                                          ;
.byt    $ED,$E1,$DE,$F4,$ED,$E8,$F0,$E7; 0xef5b $AF4B ED E1 DE F4 ED E8 F0 E7  ;
.byt    $FD,$E2,$EC,$F4,$DD,$DE,$DA,$DD; 0xef63 $AF53 FD E2 EC F4 DD DE DA DD  ;
.byt    $CF,$FE,$E5,$E8,$E8,$E4,$F4,$DE; 0xef6b $AF5B CF FE E5 E8 E8 E4 F4 DE  ;
.byt    $DA,$EC,$ED,$FD,$E2,$E7,$F4,$F0; 0xef73 $AF63 DA EC ED FD E2 E7 F4 F0  ;
.byt    $E8,$E8,$DD,$EC,$CF,$FF        ; 0xef7b $AF6B E8 E8 DD EC CF FF        ;
LAF71                                                                          ;
.byt    $E2,$F4,$DC,$DA,$E7,$F4,$E0,$E2; 0xef81 $AF71 E2 F4 DC DA E7 F4 E0 E2  ;
.byt    $EF,$DE,$FD,$F2,$E8,$EE,$F4,$E6; 0xef89 $AF79 EF DE FD F2 E8 EE F4 E6  ;
.byt    $E8,$EC,$ED,$FD,$E9,$E8,$F0,$DE; 0xef91 $AF81 E8 EC ED FD E9 E8 F0 DE  ;
.byt    $EB,$DF,$EE,$E5,$FD,$E6,$DA,$E0; 0xef99 $AF89 EB DF EE E5 FD E6 DA E0  ;
.byt    $E2,$DC,$CF,$FF                ; 0xefa1 $AF91 E2 DC CF FF              ;
LAF95                                                                          ;
.byt    $F2,$E8,$EE,$F4,$DA,$EB,$DE,$FD; 0xefa5 $AF95 F2 E8 EE F4 DA EB DE FD  ;
.byt    $E9,$DE,$EB,$EC,$E2,$EC,$ED,$DE; 0xefad $AF9D E9 DE EB EC E2 EC ED DE  ;
.byt    $E7,$ED,$FD,$DF,$E2,$E7,$DD,$F4; 0xefb5 $AFA5 E7 ED FD DF E2 E7 DD F4  ;
.byt    $E1,$DE,$DA,$EB,$ED,$FD,$E8,$EF; 0xefbd $AFAD E1 DE DA EB ED FD E8 EF  ;
.byt    $DE,$EB,$F4,$E8,$DC,$DE,$DA,$E7; 0xefc5 $AFB5 DE EB F4 E8 DC DE DA E7  ;
.byt    $FF                            ; 0xefcd $AFBD FF                       ;
; ---------------------------------------------------------------------------- ;
bank3_Dialogs_Pointer_Table_Towns_in_West_Hyrule                               ;
.word    bank3_Dialogs_Text_Table      ; 0xefce $AFBE 80 A3                    ;*007
.word    LA3A5                         ; 0xefd0 $AFC0 A5 A3                    ;
.word    LA3BE                         ; 0xefd2 $AFC2 BE A3                    ;
.word    LA3D2                         ; 0xefd4 $AFC4 D2 A3                    ;
.word    LA3FB                         ; 0xefd6 $AFC6 FB A3                    ;
.word    LA425                         ; 0xefd8 $AFC8 25 A4                    ;
.word    LA42C                         ; 0xefda $AFCA 2C A4                    ;
.word    LA440                         ; 0xefdc $AFCC 40 A4                    ;
.word    LA457                         ; 0xefde $AFCE 57 A4                    ;
.word    LA481                         ; 0xefe0 $AFD0 81 A4                    ;
.word    LA4A4                         ; 0xefe2 $AFD2 A4 A4                    ;
.word    LA4CD                         ; 0xefe4 $AFD4 CD A4                    ;
.word    LA4E1                         ; 0xefe6 $AFD6 E1 A4                    ;
.word    LA507                         ; 0xefe8 $AFD8 07 A5                    ;
.word    LA52B                         ; 0xefea $AFDA 2B A5                    ;
.word    LA553                         ; 0xefec $AFDC 53 A5                    ;
.word    LA57E                         ; 0xefee $AFDE 7E A5                    ;
.word    LA5A1                         ; 0xeff0 $AFE0 A1 A5                    ;
.word    LA5C8                         ; 0xeff2 $AFE2 C8 A5                    ;
.word    LA5EA                         ; 0xeff4 $AFE4 EA A5                    ;
.word    LA614                         ; 0xeff6 $AFE6 14 A6                    ;
.word    LA622                         ; 0xeff8 $AFE8 22 A6                    ;
.word    LA644                         ; 0xeffa $AFEA 44 A6                    ;
.word    LA656                         ; 0xeffc $AFEC 56 A6                    ;
.word    LA67A                         ; 0xeffe $AFEE 7A A6                    ;
.word    LA69C                         ; 0xf000 $AFF0 9C A6                    ;
.word    LA6A8                         ; 0xf002 $AFF2 A8 A6                    ;
.word    LA6D1                         ; 0xf004 $AFF4 D1 A6                    ;
.word    LA6F5                         ; 0xf006 $AFF6 F5 A6                    ;
.word    LA71D                         ; 0xf008 $AFF8 1D A7                    ;
.word    LA737                         ; 0xf00a $AFFA 37 A7                    ;
.word    LA753                         ; 0xf00c $AFFC 53 A7                    ;
.word    LA75C                         ; 0xf00e $AFFE 5C A7                    ;
.word    LA788                         ; 0xf010 $B000 88 A7                    ;
.word    LA7AF                         ; 0xf012 $B002 AF A7                    ;
.word    LA7D9                         ; 0xf014 $B004 D9 A7                    ;
.word    LA7FE                         ; 0xf016 $B006 FE A7                    ;
.word    LA823                         ; 0xf018 $B008 23 A8                    ;
.word    LA84D                         ; 0xf01a $B00A 4D A8                    ;
.word    LA878                         ; 0xf01c $B00C 78 A8                    ;
.word    LA8A2                         ; 0xf01e $B00E A2 A8                    ;
.word    LA8C8                         ; 0xf020 $B010 C8 A8                    ;
.word    LA8E0                         ; 0xf022 $B012 E0 A8                    ;
.word    LA907                         ; 0xf024 $B014 07 A9                    ;
.word    LA92E                         ; 0xf026 $B016 2E A9                    ;
.word    LA955                         ; 0xf028 $B018 55 A9                    ;
.word    LA979                         ; 0xf02a $B01A 79 A9                    ;
.word    LA99E                         ; 0xf02c $B01C 9E A9                    ;
.word    LA9C4                         ; 0xf02e $B01E C4 A9                    ;
.word    LA9F0                         ; 0xf030 $B020 F0 A9                    ;
.word    LA9F7                         ; 0xf032 $B022 F7 A9                    ;
.word    LAA20                         ; 0xf034 $B024 20 AA                    ;
bank3_Dialogs_Pointer_Table_Towns_in_East_Hyrule                               ;
.word    LAA33                         ; 0xf036 $B026 33 AA                    ;
.word    LAA46                         ; 0xf038 $B028 46 AA                    ;
.word    LAA4F                         ; 0xf03a $B02A 4F AA                    ;
.word    LAA5A                         ; 0xf03c $B02C 5A AA                    ;
.word    LAA83                         ; 0xf03e $B02E 83 AA                    ;
.word    LAA93                         ; 0xf040 $B030 93 AA                    ;
.word    LAAA9                         ; 0xf042 $B032 A9 AA                    ;
.word    LAABF                         ; 0xf044 $B034 BF AA                    ;
.word    LAAD3                         ; 0xf046 $B036 D3 AA                    ;
.word    LAAFC                         ; 0xf048 $B038 FC AA                    ;
.word    LAB24                         ; 0xf04a $B03A 24 AB                    ;
.word    LAB39                         ; 0xf04c $B03C 39 AB                    ;
.word    LAB51                         ; 0xf04e $B03E 51 AB                    ;
.word    LAB7A                         ; 0xf050 $B040 7A AB                    ;
.word    LAB88                         ; 0xf052 $B042 88 AB                    ;
.word    LABAA                         ; 0xf054 $B044 AA AB                    ;
.word    LABD0                         ; 0xf056 $B046 D0 AB                    ;
.word    LABF5                         ; 0xf058 $B048 F5 AB                    ;
.word    LAC13                         ; 0xf05a $B04A 13 AC                    ;
.word    LAC3E                         ; 0xf05c $B04C 3E AC                    ;
.word    LAC60                         ; 0xf05e $B04E 60 AC                    ;
.word    LAC7E                         ; 0xf060 $B050 7E AC                    ;
.word    LACA4                         ; 0xf062 $B052 A4 AC                    ;
.word    LACCA                         ; 0xf064 $B054 CA AC                    ;
.word    LACE6                         ; 0xf066 $B056 E6 AC                    ;
.word    LAD01                         ; 0xf068 $B058 01 AD                    ;
.word    LAD27                         ; 0xf06a $B05A 27 AD                    ;
.word    LAD49                         ; 0xf06c $B05C 49 AD                    ;
.word    LAD72                         ; 0xf06e $B05E 72 AD                    ;
.word    LAD9A                         ; 0xf070 $B060 9A AD                    ;
.word    LADBF                         ; 0xf072 $B062 BF AD                    ;
.word    LADDF                         ; 0xf074 $B064 DF AD                    ;
.word    LADF6                         ; 0xf076 $B066 F6 AD                    ;
.word    LAE19                         ; 0xf078 $B068 19 AE                    ;
.word    LAE1F                         ; 0xf07a $B06A 1F AE                    ;
.word    LAE38                         ; 0xf07c $B06C 38 AE                    ;
.word    LAE5F                         ; 0xf07e $B06E 5F AE                    ;
.word    LAE85                         ; 0xf080 $B070 85 AE                    ;
.word    LAEA9                         ; 0xf082 $B072 A9 AE                    ;
.word    LAECC                         ; 0xf084 $B074 CC AE                    ;
.word    LAEEC                         ; 0xf086 $B076 EC AE                    ;
.word    LAF0F                         ; 0xf088 $B078 0F AF                    ;
.word    LAF28                         ; 0xf08a $B07A 28 AF                    ;
.word    LAF4B                         ; 0xf08c $B07C 4B AF                    ;
.word    LAF71                         ; 0xf08e $B07E 71 AF                    ;
.word    LAF95                         ; 0xf090 $B080 95 AF                    ;
; ---------------------------------------------------------------------------- ;
bank3_code20                                                                   ;
lda      $0524                         ; 0xf092 $B082 AD 24 05                 ; Routine Counter
cmp      #$0C                          ; 0xf095 $B085 C9 0C                    ;
beq      LB0AE                         ; 0xf097 $B087 F0 25                    ;
ldy      #$F0                          ; 0xf099 $B089 A0 F0                    ; Y = F0
LB08B                                                                          ;
nop                                    ; 0xf09b $B08B EA                       ;
dey                                    ; 0xf09c $B08C 88                       ;
bne      LB08B                         ; 0xf09d $B08D D0 FC                    ; delay loop ?
LB08F                                                                          ;
bit      $2002                         ; 0xf09f $B08F 2C 02 20                 ;
bvc      LB08F                         ; 0xf0a2 $B092 50 FB                    ;
lda      $FF                           ; 0xf0a4 $B094 A5 FF                    ;; Sprite Bank ?
ora      $0746                         ; 0xf0a6 $B096 0D 46 07                 ;
sta      $FF                           ; 0xf0a9 $B099 85 FF                    ;; Sprite Bank ?
ldx      $FD                           ; 0xf0ab $B09B A6 FD                    ;
ldy      #$10                          ; 0xf0ad $B09D A0 10                    ; Y = 10
LB09F                                                                          ;
dey                                    ; 0xf0af $B09F 88                       ;
bne      LB09F                         ; 0xf0b0 $B0A0 D0 FD                    ;
sta      $2000                         ; 0xf0b2 $B0A2 8D 00 20                 ;
stx      $2005                         ; 0xf0b5 $B0A5 8E 05 20                 ;
sty      $2005                         ; 0xf0b8 $B0A8 8C 05 20                 ;
lda      $0524                         ; 0xf0bb $B0AB AD 24 05                 ;;menu control	(and) ; OVERWORLD: 	set to 1 to pause (will change to 2) , set to 3 to unpause (will change to 0); Routine Index
LB0AE                                                                          ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0xf0be $B0AE 20 85 D3;
bank3_Pointer_table_for_Dialog_Routines                                        ;
.word    bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2; 0xf0c1 $B0B1 07 B1;advance to next routine in this table;advance to next routine in this table
.word    bank3_Dialog_Routines_play_sound__R0; 0xf0c3 $B0B3 CB B0              ;play sound
.word    bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2_duplicate; 0xf0c5 $B0B5 21 B6;
.word    bank3_Dialog_Routines_save_palette_mappings_to_memory__R4; 0xf0c7 $B0B7 50 B3;save palette mappings to memory
.word    bank3_Dialog_Routines_load_tiles_to_draw_the_dialog_box_lines_and_more__R1; 0xf0c9 $B0B9 D2 B0;load tiles to draw the dialog box lines (and more)
.word    bank3_Dialog_Routines_Set_text_pointer_according_to_Townfolk_type__R5; 0xf0cb $B0BB 80 B4;Set text pointer according to Townfolk type (has the jmp $02)
.word    bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2_duplicate; 0xf0cd $B0BD 21 B6;
.word    LB6A2                         ; 0xf0cf $B0BF A2 B6                    ;
.word    bank3_Dialog_Routines_life_magic_restore; 0xf0d1 $B0C1 5B B7          ;life/magic restore
.word    bank3_Dialog_Routines_wait_for_B_button; 0xf0d3 $B0C3 A6 B7           ;wait for B button
.word    bank3_Dialog_Routines_save_palette_mappings_to_memory__R4; 0xf0d5 $B0C5 50 B3;
.word    bank3_Dialog_Routines_decrease_the_line_count_when_erasing_the_box__R3; 0xf0d7 $B0C7 83 B1;decrease the line count when erasing the box
.word    LB7B2                         ; 0xf0d9 $B0C9 B2 B7                    ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Routines_play_sound__R0                                           ;
lda      #$08                          ; 0xf0db $B0CB A9 08                    ; 08 = Dialog Box Sound
sta      $EE                           ; 0xf0dd $B0CD 85 EE                    ; Sound Effects Type 3
jmp      bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2_duplicate; 0xf0df $B0CF 4C 21 B6; Advance to Next Routine
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Routines_load_tiles_to_draw_the_dialog_box_lines_and_more__R1     ;
lda      $0525                         ; 0xf0e2 $B0D2 AD 25 05                 ; Routine Delay
asl                                    ; 0xf0e5 $B0D5 0A                       ;
tay                                    ; 0xf0e6 $B0D6 A8                       ;
lda      bank3_Pointer_table_for_rows_of_dialog_box,y; 0xf0e7 $B0D7 B9 F3 B3   ;
sta      L0002                         ; 0xf0ea $B0DA 85 02                    ;
lda      bank3_Pointer_table_for_rows_of_dialog_box+$01,y; 0xf0ec $B0DC B9 F4 B3;
sta      $03                           ; 0xf0ef $B0DF 85 03                    ;
lda      bank3_Pointer_table_for_rows_of_dialog_box+$01+$09,y; 0xf0f1 $B0E1 B9 FD B3;
sta      $04                           ; 0xf0f4 $B0E4 85 04                    ;
lda      bank3_Pointer_table_for_rows_of_dialog_box+$01+$09+$01,y; 0xf0f6 $B0E6 B9 FE B3;
sta      $05                           ; 0xf0f9 $B0E9 85 05                    ;
ldy      #$0D                          ; 0xf0fb $B0EB A0 0D                    ; Y = 0D
LB0ED                                                                          ;
lda      (L0002),y                     ; 0xf0fd $B0ED B1 02                    ;
sta      $053E,y                       ; 0xf0ff $B0EF 99 3E 05                 ;;temp area used to copy from to generate the ppu macro for the spell menu 
lda      ($04),y                       ; 0xf102 $B0F2 B1 04                    ;
sta      $054C,y                       ; 0xf104 $B0F4 99 4C 05                 ;
dey                                    ; 0xf107 $B0F7 88                       ;
bpl      LB0ED                         ; 0xf108 $B0F8 10 F3                    ;
jsr      bank3_Palette_modification_routine; 0xf10a $B0FA 20 0B B1             ; Palette modification routine
inc      $0525                         ; 0xf10d $B0FD EE 25 05                 ; Routine Delay
lda      $0525                         ; 0xf110 $B100 AD 25 05                 ;; Routine Delay
cmp      #$05                          ; 0xf113 $B103 C9 05                    ;
bcc      LB10A                         ; 0xf115 $B105 90 03                    ; if A < 05, return
bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2                ;
inc      $0524                         ; 0xf117 $B107 EE 24 05                 ; advance to next routine...
LB10A                                                                          ;
rts                                    ; 0xf11a $B10A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Palette_modification_routine                                             ;
jsr      bank3_draw_tiles_for_2_rows   ; 0xf11b $B10B 20 F2 B2                 ; draw tiles for 2 rows
LB10E                                                                          ;
jsr      LB15F                         ; 0xf11e $B10E 20 5F B1                 ;
;$02 = Routine Delay + 1                                                       ;
and      #$FE                          ; 0xf121 $B111 29 FE                    ;;Keep Bits:1111_1110
asl                                    ; 0xf123 $B113 0A                       ;
asl                                    ; 0xf124 $B114 0A                       ;
adc      #$C8                          ; 0xf125 $B115 69 C8                    ;
;A = $02 rounded to lower even * 4 + C8                                        ;
jsr      LB304                         ; 0xf127 $B117 20 04 B3                 ;
;From here, X = $02 rounded to lower even * 2 + $04                            ;
lda      #$0F                          ; 0xf12a $B11A A9 0F                    ; A = 0F
sta      $05                           ; 0xf12c $B11C 85 05                    ;
jsr      bank3_check_if_Scrolling_Offset__bits_4_to_7__is_even; 0xf12e $B11E 20 17 B3; check if Scrolling Offset (bits 4-7) is even
beq      LB12F                         ; 0xf131 $B121 F0 0C                    ;
;Scrolling Offset (bits 4-7) is Odd                                            ;
lda      $04                           ; 0xf133 $B123 A5 04                    ;
bne      LB13D                         ; 0xf135 $B125 D0 16                    ;
;$04 == 0 (first Palette Mapping block from left)                              ;
;Use Top-Left Corner Mask                                                      ;
lda      #$3F                          ; 0xf137 $B127 A9 3F                    ; A = 3F
sta      $05                           ; 0xf139 $B129 85 05                    ;
lda      #$F3                          ; 0xf13b $B12B A9 F3                    ; A = F3
bne      LB13B                         ; 0xf13d $B12D D0 0C                    ;
;Scrolling Offset (bits 4-7) is Even                                           ;
LB12F                                                                          ;
lda      $04                           ; 0xf13f $B12F A5 04                    ;
cmp      #$03                          ; 0xf141 $B131 C9 03                    ;
bne      LB13D                         ; 0xf143 $B133 D0 08                    ;
;$04 == 03 (right end of box)                                                  ;
;Use Top-Right Corner Mask                                                     ;
lda      #$CF                          ; 0xf145 $B135 A9 CF                    ; A = CF
sta      $05                           ; 0xf147 $B137 85 05                    ;
lda      #$FC                          ; 0xf149 $B139 A9 FC                    ; A = FC
LB13B                                                                          ;
sta      $06                           ; 0xf14b $B13B 85 06                    ;
;$04 > 0 and Scrolling Offset (bits 4-7) is Odd                                ;
LB13D                                                                          ;
lda      L0002                         ; 0xf14d $B13D A5 02                    ;
lsr                                    ; 0xf14f $B13F 4A                       ;
lda      $05                           ; 0xf150 $B140 A5 05                    ;
bcs      LB146                         ; 0xf152 $B142 B0 02                    ;
lda      $06                           ; 0xf154 $B144 A5 06                    ;
LB146                                                                          ;
and      $0526,x                       ; 0xf156 $B146 3D 26 05                 ;
sta      $0526,x                       ; 0xf159 $B149 9D 26 05                 ;
jsr      LB335                         ; 0xf15c $B14C 20 35 B3                 ;
bcc      LB10E                         ; 0xf15f $B14F 90 BD                    ;
;End PPU Macro                                                                 ;
bank3_End_PPU_Macro                                                            ;
lda      #$FF                          ; 0xf161 $B151 A9 FF                    ; A = FF
sta      L0363,y                       ; 0xf163 $B153 99 63 03                 ;
sty      $0362                         ; 0xf166 $B156 8C 62 03                 ;; PPU Macro Offset
lda      #$01                          ; 0xf169 $B159 A9 01                    ; A = 01
sta      $0725                         ; 0xf16b $B15B 8D 25 07                 ;; PPU Macro Selector	
rts                                    ; 0xf16e $B15E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB15F                                                                          ;
lda      $01                           ; 0xf16f $B15F A5 01                    ;
clc                                    ; 0xf171 $B161 18                       ;
adc      #$78                          ; 0xf172 $B162 69 78                    ; Dialog Box Offset
php                                    ; 0xf174 $B164 08                       ;
lsr                                    ; 0xf175 $B165 4A                       ;
lsr                                    ; 0xf176 $B166 4A                       ;
lsr                                    ; 0xf177 $B167 4A                       ;
lsr                                    ; 0xf178 $B168 4A                       ;
lsr                                    ; 0xf179 $B169 4A                       ;
sta      $03                           ; 0xf17a $B16A 85 03                    ;
plp                                    ; 0xf17c $B16C 28                       ;
lda      L0000                         ; 0xf17d $B16D A5 00                    ;
adc      #$00                          ; 0xf17f $B16F 69 00                    ;
and      #$01                          ; 0xf181 $B171 29 01                    ; keep bits .... ...x
asl                                    ; 0xf183 $B173 0A                       ;
asl                                    ; 0xf184 $B174 0A                       ;
adc      #$23                          ; 0xf185 $B175 69 23                    ;
sta      L0363,y                       ; 0xf187 $B177 99 63 03                 ;
lda      $0525                         ; 0xf18a $B17A AD 25 05                 ; Routine Delay
clc                                    ; 0xf18d $B17D 18                       ;
adc      #$01                          ; 0xf18e $B17E 69 01                    ;
sta      L0002                         ; 0xf190 $B180 85 02                    ;
rts                                    ; 0xf192 $B182 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Routines_decrease_the_line_count_when_erasing_the_box__R3         ;
dec      $0525                         ; 0xf193 $B183 CE 25 05                 ; Routine Delay
bpl      bank3_Redraw_over_Dialog_Box_row; 0xf196 $B186 10 03                  ;
jmp      bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2; 0xf198 $B188 4C 07 B1;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Redraw_over_Dialog_Box_row                                               ;
lda      $072C                         ; 0xf19b $B18B AD 2C 07                 ; Scrolling Offset Low Byte
clc                                    ; 0xf19e $B18E 18                       ;
adc      #$78                          ; 0xf19f $B18F 69 78                    ; Dialog Box Offset
tax                                    ; 0xf1a1 $B191 AA                       ;
lda      $072A                         ; 0xf1a2 $B192 AD 2A 07                 ; Scrolling Offset High Byte
adc      #$00                          ; 0xf1a5 $B195 69 00                    ;
jsr      bank3_Set_RAM_address_according_to_screen_number; 0xf1a7 $B197 20 E5 B3; Set 0E-0F according to screen number
txa                                    ; 0xf1aa $B19A 8A                       ;
lsr                                    ; 0xf1ab $B19B 4A                       ;
lsr                                    ; 0xf1ac $B19C 4A                       ;
lsr                                    ; 0xf1ad $B19D 4A                       ;
lsr                                    ; 0xf1ae $B19E 4A                       ;
tay                                    ; 0xf1af $B19F A8                       ;
lda      $0525                         ; 0xf1b0 $B1A0 AD 25 05                 ; Routine Delay
asl                                    ; 0xf1b3 $B1A3 0A                       ;
asl                                    ; 0xf1b4 $B1A4 0A                       ;
asl                                    ; 0xf1b5 $B1A5 0A                       ;
asl                                    ; 0xf1b6 $B1A6 0A                       ;
adc      #$10                          ; 0xf1b7 $B1A7 69 10                    ;
jsr      LB32A                         ; 0xf1b9 $B1A9 20 2A B3                 ; Advance 0E-0F pointer with the value of A
ldx      #$00                          ; 0xf1bc $B1AC A2 00                    ; X = 00
LB1AE                                                                          ;
lda      (L000E),y                     ; 0xf1be $B1AE B1 0E                    ;
sta      $055A,x                       ; 0xf1c0 $B1B0 9D 5A 05                 ;
iny                                    ; 0xf1c3 $B1B3 C8                       ;
tya                                    ; 0xf1c4 $B1B4 98                       ;
and      #$0F                          ; 0xf1c5 $B1B5 29 0F                    ; keep bits .... xxxx
bne      LB1C4                         ; 0xf1c7 $B1B7 D0 0B                    ;
;If Dialog Box overlaps on screen boundaries                                   ;
;Add D0 to 0E-0F and subtract 10 from Y                                        ;
lda      #$D0                          ; 0xf1c9 $B1B9 A9 D0                    ; A = D0 (add D0 to 0E-0F if across screens)
clc                                    ; 0xf1cb $B1BB 18                       ;
jsr      LB32A                         ; 0xf1cc $B1BC 20 2A B3                 ; Advance 0E-0F pointer with the value of A
tya                                    ; 0xf1cf $B1BF 98                       ;
sec                                    ; 0xf1d0 $B1C0 38                       ;
sbc      #$10                          ; 0xf1d1 $B1C1 E9 10                    ;
tay                                    ; 0xf1d3 $B1C3 A8                       ;
LB1C4                                                                          ;
inx                                    ; 0xf1d4 $B1C4 E8                       ;
cpx      #$07                          ; 0xf1d5 $B1C5 E0 07                    ; number of TSAs to draw per row
bcc      LB1AE                         ; 0xf1d7 $B1C7 90 E5                    ;
lda      #$00                          ; 0xf1d9 $B1C9 A9 00                    ; A = 00
sta      L0000                         ; 0xf1db $B1CB 85 00                    ;
sta      $01                           ; 0xf1dd $B1CD 85 01                    ;
LB1CF                                                                          ;
ldx      L0000                         ; 0xf1df $B1CF A6 00                    ;
lda      $055A,x                       ; 0xf1e1 $B1D1 BD 5A 05                 ;
and      #$C0                          ; 0xf1e4 $B1D4 29 C0                    ; keep bits xx.. ....
asl                                    ; 0xf1e6 $B1D6 0A                       ;
rol                                    ; 0xf1e7 $B1D7 2A                       ;
rol                                    ; 0xf1e8 $B1D8 2A                       ;
asl                                    ; 0xf1e9 $B1D9 0A                       ;
tay                                    ; 0xf1ea $B1DA A8                       ;
jsr      bank7_Set_0E_0F_pointer_according_to_Object_Group; 0xf1eb $B1DB 20 E4 DF; Set 0E-0F pointer according to Object Group
;Store the 4 Tile Codes according to TSA codes in 53E,X and 54C,X              ;
lda      $055A,x                       ; 0xf1ee $B1DE BD 5A 05                 ;
asl                                    ; 0xf1f1 $B1E1 0A                       ;
asl                                    ; 0xf1f2 $B1E2 0A                       ;
tay                                    ; 0xf1f3 $B1E3 A8                       ;
ldx      $01                           ; 0xf1f4 $B1E4 A6 01                    ;
jsr      LC258                         ; 0xf1f6 $B1E6 20 58 C2                 ;
iny                                    ; 0xf1f9 $B1E9 C8                       ;
jsr      LC258                         ; 0xf1fa $B1EA 20 58 C2                 ;
stx      $01                           ; 0xf1fd $B1ED 86 01                    ;
inc      L0000                         ; 0xf1ff $B1EF E6 00                    ;
cpx      #$0E                          ; 0xf201 $B1F1 E0 0E                    ; row width (in 8x8 tiles)
bcc      LB1CF                         ; 0xf203 $B1F3 90 DA                    ;
jsr      bank3_draw_tiles_for_2_rows   ; 0xf205 $B1F5 20 F2 B2                 ;
LB1F8                                                                          ;
jsr      LB15F                         ; 0xf208 $B1F8 20 5F B1                 ;
lsr                                    ; 0xf20b $B1FB 4A                       ;
clc                                    ; 0xf20c $B1FC 18                       ;
adc      #$01                          ; 0xf20d $B1FD 69 01                    ;
asl                                    ; 0xf20f $B1FF 0A                       ;
asl                                    ; 0xf210 $B200 0A                       ;
asl                                    ; 0xf211 $B201 0A                       ;
adc      #$C0                          ; 0xf212 $B202 69 C0                    ;
jsr      LB304                         ; 0xf214 $B204 20 04 B3                 ;
jsr      bank3_check_if_Scrolling_Offset__bits_4_to_7__is_even; 0xf217 $B207 20 17 B3; redundant routine call ?
lda      #$F0                          ; 0xf21a $B20A A9 F0                    ; A = F0
sta      $06                           ; 0xf21c $B20C 85 06                    ;
lda      $072C                         ; 0xf21e $B20E AD 2C 07                 ;; Scrolling Offset Low Byte
clc                                    ; 0xf221 $B211 18                       ;
adc      #$78                          ; 0xf222 $B212 69 78                    ; Dialog Box Offset
and      #$F0                          ; 0xf224 $B214 29 F0                    ; keep bits xxxx ....
sta      $07                           ; 0xf226 $B216 85 07                    ;
and      #$E0                          ; 0xf228 $B218 29 E0                    ; keep bits xxx. ....
cmp      $07                           ; 0xf22a $B21A C5 07                    ;
beq      LB226                         ; 0xf22c $B21C F0 08                    ;
lda      $04                           ; 0xf22e $B21E A5 04                    ;
bne      LB230                         ; 0xf230 $B220 D0 0E                    ;
lda      #$F3                          ; 0xf232 $B222 A9 F3                    ; A = F3
bne      LB22E                         ; 0xf234 $B224 D0 08                    ;
LB226                                                                          ;
lda      $04                           ; 0xf236 $B226 A5 04                    ;
cmp      #$03                          ; 0xf238 $B228 C9 03                    ;
bne      LB230                         ; 0xf23a $B22A D0 04                    ;
lda      #$FC                          ; 0xf23c $B22C A9 FC                    ; A = FC
LB22E                                                                          ;
sta      $06                           ; 0xf23e $B22E 85 06                    ;
LB230                                                                          ;
cpx      #$04                          ; 0xf240 $B230 E0 04                    ;
bcc      LB23B                         ; 0xf242 $B232 90 07                    ;
lda      L0002                         ; 0xf244 $B234 A5 02                    ;
lsr                                    ; 0xf246 $B236 4A                       ;
lda      $06                           ; 0xf247 $B237 A5 06                    ;
bcs      LB23D                         ; 0xf249 $B239 B0 02                    ;
LB23B                                                                          ;
lda      #$FF                          ; 0xf24b $B23B A9 FF                    ; A = FF
LB23D                                                                          ;
and      $0526,x                       ; 0xf24d $B23D 3D 26 05                 ;
jsr      LB335                         ; 0xf250 $B240 20 35 B3                 ;
bcs      LB248                         ; 0xf253 $B243 B0 03                    ;
jmp      LB1F8                         ; 0xf255 $B245 4C F8 B1                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB248                                                                          ;
jmp      bank3_End_PPU_Macro           ; 0xf258 $B248 4C 51 B1                 ; End PPU Macro
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB24B                                                                          ;
ldy      $0362                         ; 0xf25b $B24B AC 62 03                 ; PPU Macro Offset
lda      #$C0                          ; 0xf25e $B24E A9 C0                    ; A = C0
sta      $07                           ; 0xf260 $B250 85 07                    ;
lda      #$02                          ; 0xf262 $B252 A9 02                    ; A = 02 (loop 2 times)
sta      $08                           ; 0xf264 $B254 85 08                    ;
ldx      #$00                          ; 0xf266 $B256 A2 00                    ; X = 00
LB258                                                                          ;
lda      $072C                         ; 0xf268 $B258 AD 2C 07                 ; Scrolling Offset Low Byte
clc                                    ; 0xf26b $B25B 18                       ;
adc      #$78                          ; 0xf26c $B25C 69 78                    ; Dialog Box Offset
and      #$F0                          ; 0xf26e $B25E 29 F0                    ; keep bits xxxx .... (round to next tile)
sta      $01                           ; 0xf270 $B260 85 01                    ;
lda      $072A                         ; 0xf272 $B262 AD 2A 07                 ; Scrolling Offset High Byte
adc      #$00                          ; 0xf275 $B265 69 00                    ;
sta      L0000                         ; 0xf277 $B267 85 00                    ;
lda      $01                           ; 0xf279 $B269 A5 01                    ;
eor      #$FF                          ; 0xf27b $B26B 49 FF                    ; flip all bits
clc                                    ; 0xf27d $B26D 18                       ;
adc      #$01                          ; 0xf27e $B26E 69 01                    ;
lsr                                    ; 0xf280 $B270 4A                       ;
lsr                                    ; 0xf281 $B271 4A                       ;
lsr                                    ; 0xf282 $B272 4A                       ;
lsr                                    ; 0xf283 $B273 4A                       ;
beq      LB27A                         ; 0xf284 $B274 F0 04                    ;
cmp      #$07                          ; 0xf286 $B276 C9 07                    ;
bcc      LB27C                         ; 0xf288 $B278 90 02                    ;
LB27A                                                                          ;
lda      #$07                          ; 0xf28a $B27A A9 07                    ; A = 07
LB27C                                                                          ;
sta      $06                           ; 0xf28c $B27C 85 06                    ;
lda      #$07                          ; 0xf28e $B27E A9 07                    ; A = 07
sta      $03                           ; 0xf290 $B280 85 03                    ;
LB282                                                                          ;
lda      $0525                         ; 0xf292 $B282 AD 25 05                 ; Routine Delay
asl                                    ; 0xf295 $B285 0A                       ;
asl                                    ; 0xf296 $B286 0A                       ;
asl                                    ; 0xf297 $B287 0A                       ;
asl                                    ; 0xf298 $B288 0A                       ;
asl                                    ; 0xf299 $B289 0A                       ;
rol      $04                           ; 0xf29a $B28A 26 04                    ;
asl                                    ; 0xf29c $B28C 0A                       ;
rol      $04                           ; 0xf29d $B28D 26 04                    ;
clc                                    ; 0xf29f $B28F 18                       ;
adc      $07                           ; 0xf2a0 $B290 65 07                    ;
sta      $05                           ; 0xf2a2 $B292 85 05                    ;
lda      $04                           ; 0xf2a4 $B294 A5 04                    ;
adc      #$00                          ; 0xf2a6 $B296 69 00                    ;
and      #$03                          ; 0xf2a8 $B298 29 03                    ; keep bits .... ..xx
sta      $04                           ; 0xf2aa $B29A 85 04                    ;
lda      $01                           ; 0xf2ac $B29C A5 01                    ;
lsr                                    ; 0xf2ae $B29E 4A                       ;
lsr                                    ; 0xf2af $B29F 4A                       ;
lsr                                    ; 0xf2b0 $B2A0 4A                       ;
adc      $05                           ; 0xf2b1 $B2A1 65 05                    ;
sta      $0364,y                       ; 0xf2b3 $B2A3 99 64 03                 ;
lda      L0000                         ; 0xf2b6 $B2A6 A5 00                    ;
and      #$01                          ; 0xf2b8 $B2A8 29 01                    ; keep bits .... ...x
asl                                    ; 0xf2ba $B2AA 0A                       ;
asl                                    ; 0xf2bb $B2AB 0A                       ;
adc      #$20                          ; 0xf2bc $B2AC 69 20                    ;
adc      $04                           ; 0xf2be $B2AE 65 04                    ;
sta      L0363,y                       ; 0xf2c0 $B2B0 99 63 03                 ;
lda      $06                           ; 0xf2c3 $B2B3 A5 06                    ;
asl                                    ; 0xf2c5 $B2B5 0A                       ;
sta      $0365,y                       ; 0xf2c6 $B2B6 99 65 03                 ;
iny                                    ; 0xf2c9 $B2B9 C8                       ;
iny                                    ; 0xf2ca $B2BA C8                       ;
iny                                    ; 0xf2cb $B2BB C8                       ;
LB2BC                                                                          ;
lda      $053E,x                       ; 0xf2cc $B2BC BD 3E 05                 ;; Tiles for Dialog Box Rows
sta      L0363,y                       ; 0xf2cf $B2BF 99 63 03                 ;
inx                                    ; 0xf2d2 $B2C2 E8                       ;
lda      $053E,x                       ; 0xf2d3 $B2C3 BD 3E 05                 ;; Tiles for Dialog Box Rows
sta      $0364,y                       ; 0xf2d6 $B2C6 99 64 03                 ;
inx                                    ; 0xf2d9 $B2C9 E8                       ;
lda      $01                           ; 0xf2da $B2CA A5 01                    ;
clc                                    ; 0xf2dc $B2CC 18                       ;
adc      #$10                          ; 0xf2dd $B2CD 69 10                    ;
sta      $01                           ; 0xf2df $B2CF 85 01                    ;
bcc      LB2D5                         ; 0xf2e1 $B2D1 90 02                    ;
inc      L0000                         ; 0xf2e3 $B2D3 E6 00                    ;
LB2D5                                                                          ;
iny                                    ; 0xf2e5 $B2D5 C8                       ;
iny                                    ; 0xf2e6 $B2D6 C8                       ;
dec      $03                           ; 0xf2e7 $B2D7 C6 03                    ;
beq      LB2E6                         ; 0xf2e9 $B2D9 F0 0B                    ;
dec      $06                           ; 0xf2eb $B2DB C6 06                    ;
bne      LB2BC                         ; 0xf2ed $B2DD D0 DD                    ;
lda      $03                           ; 0xf2ef $B2DF A5 03                    ;
sta      $06                           ; 0xf2f1 $B2E1 85 06                    ;
jmp      LB282                         ; 0xf2f3 $B2E3 4C 82 B2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB2E6                                                                          ;
lda      #$E0                          ; 0xf2f6 $B2E6 A9 E0                    ; A = E0
sta      $07                           ; 0xf2f8 $B2E8 85 07                    ;
dec      $08                           ; 0xf2fa $B2EA C6 08                    ;
beq      LB2F1                         ; 0xf2fc $B2EC F0 03                    ;
jmp      LB258                         ; 0xf2fe $B2EE 4C 58 B2                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB2F1                                                                          ;
rts                                    ; 0xf301 $B2F1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_draw_tiles_for_2_rows                                                    ;
jsr      LB24B                         ; 0xf302 $B2F2 20 4B B2                 ;
lda      $072A                         ; 0xf305 $B2F5 AD 2A 07                 ; Scrolling Offset High Byte
sta      L0000                         ; 0xf308 $B2F8 85 00                    ;
lda      $072C                         ; 0xf30a $B2FA AD 2C 07                 ; Scrolling Offset Low Byte
sta      $01                           ; 0xf30d $B2FD 85 01                    ;
lda      #$00                          ; 0xf30f $B2FF A9 00                    ; A = 00
sta      $04                           ; 0xf311 $B301 85 04                    ;
rts                                    ; 0xf313 $B303 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB304                                                                          ;
adc      $03                           ; 0xf314 $B304 65 03                    ;
sta      $0364,y                       ; 0xf316 $B306 99 64 03                 ;
lda      #$01                          ; 0xf319 $B309 A9 01                    ; A = 01
sta      $0365,y                       ; 0xf31b $B30B 99 65 03                 ;
lda      L0002                         ; 0xf31e $B30E A5 02                    ;
and      #$FE                          ; 0xf320 $B310 29 FE                    ; keep bits xxxx xxx.
asl                                    ; 0xf322 $B312 0A                       ;
adc      $04                           ; 0xf323 $B313 65 04                    ;
tax                                    ; 0xf325 $B315 AA                       ;
rts                                    ; 0xf326 $B316 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_check_if_Scrolling_Offset__bits_4_to_7__is_even                          ;
lda      #$F0                          ; 0xf327 $B317 A9 F0                    ; A = F0
sta      $06                           ; 0xf329 $B319 85 06                    ;
lda      $072C                         ; 0xf32b $B31B AD 2C 07                 ; Scrolling Offset Low Byte
clc                                    ; 0xf32e $B31E 18                       ;
adc      #$78                          ; 0xf32f $B31F 69 78                    ; Dialog Box Offset
and      #$F0                          ; 0xf331 $B321 29 F0                    ; keep bits xxxx ....
sta      $07                           ; 0xf333 $B323 85 07                    ;
and      #$E0                          ; 0xf335 $B325 29 E0                    ; keep bits xxx. ....
cmp      $07                           ; 0xf337 $B327 C5 07                    ;
rts                                    ; 0xf339 $B329 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB32A                                                                          ;
adc      L000E                         ; 0xf33a $B32A 65 0E                    ;
sta      L000E                         ; 0xf33c $B32C 85 0E                    ;
lda      $0F                           ; 0xf33e $B32E A5 0F                    ;
adc      #$00                          ; 0xf340 $B330 69 00                    ;
sta      $0F                           ; 0xf342 $B332 85 0F                    ;
rts                                    ; 0xf344 $B334 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB335                                                                          ;
sta      $0366,y                       ; 0xf345 $B335 99 66 03                 ;
iny                                    ; 0xf348 $B338 C8                       ;
iny                                    ; 0xf349 $B339 C8                       ;
iny                                    ; 0xf34a $B33A C8                       ;
iny                                    ; 0xf34b $B33B C8                       ;
lda      $01                           ; 0xf34c $B33C A5 01                    ;
clc                                    ; 0xf34e $B33E 18                       ;
adc      #$20                          ; 0xf34f $B33F 69 20                    ;
sta      $01                           ; 0xf351 $B341 85 01                    ;
lda      L0000                         ; 0xf353 $B343 A5 00                    ;
adc      #$00                          ; 0xf355 $B345 69 00                    ;
sta      L0000                         ; 0xf357 $B347 85 00                    ;
inc      $04                           ; 0xf359 $B349 E6 04                    ;
lda      $04                           ; 0xf35b $B34B A5 04                    ;
cmp      #$04                          ; 0xf35d $B34D C9 04                    ;
rts                                    ; 0xf35f $B34F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Routines_save_palette_mappings_to_memory__R4                      ;
;Save Palette Mappings to memory, to restore after box is erased               ;
lda      $072C                         ; 0xf360 $B350 AD 2C 07                 ; Scrolling Offset Low Byte
clc                                    ; 0xf363 $B353 18                       ;
adc      #$78                          ; 0xf364 $B354 69 78                    ; Dialog Box Offset
tax                                    ; 0xf366 $B356 AA                       ;
lda      $072A                         ; 0xf367 $B357 AD 2A 07                 ; Scrolling Offset High Byte
adc      #$00                          ; 0xf36a $B35A 69 00                    ;
jsr      bank3_Set_RAM_address_according_to_screen_number; 0xf36c $B35C 20 E5 B3; Set RAM address offset using screen number
txa                                    ; 0xf36f $B35F 8A                       ;
and      #$E0                          ; 0xf370 $B360 29 E0                    ; keep bits xxx. .... (round to nearest 20)
lsr                                    ; 0xf372 $B362 4A                       ;
lsr                                    ; 0xf373 $B363 4A                       ;
lsr                                    ; 0xf374 $B364 4A                       ;
lsr                                    ; 0xf375 $B365 4A                       ;
tay                                    ; 0xf376 $B366 A8                       ;
ldx      #$00                          ; 0xf377 $B367 A2 00                    ; X = 00
lda      #$04                          ; 0xf379 $B369 A9 04                    ; A = 04
sta      L0000                         ; 0xf37b $B36B 85 00                    ;
LB36D                                                                          ;
lda      #$00                          ; 0xf37d $B36D A9 00                    ; A = 00
sta      $01                           ; 0xf37f $B36F 85 01                    ;
LB371                                                                          ;
lda      #$0C                          ; 0xf381 $B371 A9 0C                    ; A = 0C
sta      L0002                         ; 0xf383 $B373 85 02                    ;
LB375                                                                          ;
jsr      LB3B9                         ; 0xf385 $B375 20 B9 B3                 ;
tya                                    ; 0xf388 $B378 98                       ;
clc                                    ; 0xf389 $B379 18                       ;
adc      #$10                          ; 0xf38a $B37A 69 10                    ;
tay                                    ; 0xf38c $B37C A8                       ;
asl                                    ; 0xf38d $B37D 0A                       ;
asl                                    ; 0xf38e $B37E 0A                       ;
asl                                    ; 0xf38f $B37F 0A                       ;
asl                                    ; 0xf390 $B380 0A                       ;
bcs      LB387                         ; 0xf391 $B381 B0 04                    ;
inx                                    ; 0xf393 $B383 E8                       ;
inx                                    ; 0xf394 $B384 E8                       ;
inx                                    ; 0xf395 $B385 E8                       ;
inx                                    ; 0xf396 $B386 E8                       ;
LB387                                                                          ;
dec      L0002                         ; 0xf397 $B387 C6 02                    ;
bne      LB375                         ; 0xf399 $B389 D0 EA                    ;
tya                                    ; 0xf39b $B38B 98                       ;
sec                                    ; 0xf39c $B38C 38                       ;
sbc      #$BF                          ; 0xf39d $B38D E9 BF                    ;
tay                                    ; 0xf39f $B38F A8                       ;
and      #$0F                          ; 0xf3a0 $B390 29 0F                    ; keep bits .... xxxx
bne      LB3A4                         ; 0xf3a2 $B392 D0 10                    ;
lda      L000E                         ; 0xf3a4 $B394 A5 0E                    ;
clc                                    ; 0xf3a6 $B396 18                       ;
adc      #$D0                          ; 0xf3a7 $B397 69 D0                    ;
sta      L000E                         ; 0xf3a9 $B399 85 0E                    ;
bcc      LB39F                         ; 0xf3ab $B39B 90 02                    ;
inc      $0F                           ; 0xf3ad $B39D E6 0F                    ;
LB39F                                                                          ;
tya                                    ; 0xf3af $B39F 98                       ;
sec                                    ; 0xf3b0 $B3A0 38                       ;
sbc      #$10                          ; 0xf3b1 $B3A1 E9 10                    ;
tay                                    ; 0xf3b3 $B3A3 A8                       ;
LB3A4                                                                          ;
txa                                    ; 0xf3b4 $B3A4 8A                       ;
sec                                    ; 0xf3b5 $B3A5 38                       ;
sbc      #$18                          ; 0xf3b6 $B3A6 E9 18                    ;
tax                                    ; 0xf3b8 $B3A8 AA                       ;
lda      $01                           ; 0xf3b9 $B3A9 A5 01                    ;
eor      #$80                          ; 0xf3bb $B3AB 49 80                    ; flip bits x... ....
sta      $01                           ; 0xf3bd $B3AD 85 01                    ;
bne      LB371                         ; 0xf3bf $B3AF D0 C0                    ;
inx                                    ; 0xf3c1 $B3B1 E8                       ;
dec      L0000                         ; 0xf3c2 $B3B2 C6 00                    ;
bne      LB36D                         ; 0xf3c4 $B3B4 D0 B7                    ;
jmp      bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2; 0xf3c6 $B3B6 4C 07 B1;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB3B9                                                                          ;
tya                                    ; 0xf3c9 $B3B9 98                       ;
asl                                    ; 0xf3ca $B3BA 0A                       ;
asl                                    ; 0xf3cb $B3BB 0A                       ;
asl                                    ; 0xf3cc $B3BC 0A                       ;
asl                                    ; 0xf3cd $B3BD 0A                       ;
lda      (L000E),y                     ; 0xf3ce $B3BE B1 0E                    ;
and      #$C0                          ; 0xf3d0 $B3C0 29 C0                    ; keep bits xx.. ....
bcs      LB3D0                         ; 0xf3d2 $B3C2 B0 0C                    ;
asl                                    ; 0xf3d4 $B3C4 0A                       ;
rol                                    ; 0xf3d5 $B3C5 2A                       ;
rol                                    ; 0xf3d6 $B3C6 2A                       ;
bit      $01                           ; 0xf3d7 $B3C7 24 01                    ;
bpl      LB3D9                         ; 0xf3d9 $B3C9 10 0E                    ;
asl                                    ; 0xf3db $B3CB 0A                       ;
asl                                    ; 0xf3dc $B3CC 0A                       ;
jmp      LB3D6                         ; 0xf3dd $B3CD 4C D6 B3                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB3D0                                                                          ;
bit      $01                           ; 0xf3e0 $B3D0 24 01                    ;
bmi      LB3D6                         ; 0xf3e2 $B3D2 30 02                    ;
lsr                                    ; 0xf3e4 $B3D4 4A                       ;
lsr                                    ; 0xf3e5 $B3D5 4A                       ;
LB3D6                                                                          ;
ora      $0526,x                       ; 0xf3e6 $B3D6 1D 26 05                 ;
LB3D9                                                                          ;
sta      $0526,x                       ; 0xf3e9 $B3D9 9D 26 05                 ;
rts                                    ; 0xf3ec $B3DC 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Pointer_table_for_location_of_the_4_screens_in_RAM_                      ;
.word    LD000                         ; 0xf3ed $B3DD 00 D0                    ;
.word    L70A0                         ; 0xf3ef $B3DF A0 70                    ;
.word    L6060                         ; 0xf3f1 $B3E1 60 60                    ;
.word    L6261                         ; 0xf3f3 $B3E3 61 62                    ;
; ---------------------------------------------------------------------------- ;
bank3_Set_RAM_address_according_to_screen_number                               ;
and      #$03                          ; 0xf3f5 $B3E5 29 03                    ; keep bits .... ..xx
tay                                    ; 0xf3f7 $B3E7 A8                       ;
lda      bank3_Pointer_table_for_location_of_the_4_screens_in_RAM_,y; 0xf3f8 $B3E8 B9 DD B3; refer to table at $F3DD
sta      L000E                         ; 0xf3fb $B3EB 85 0E                    ;
lda      bank3_Pointer_table_for_location_of_the_4_screens_in_RAM_+$04,y; 0xf3fd $B3ED B9 E1 B3; refer to table at $F3E1
sta      $0F                           ; 0xf400 $B3F0 85 0F                    ;
rts                                    ; 0xf402 $B3F2 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Pointer_table_for_rows_of_dialog_box                                     ;
.word    bank3_Tables_for_dialog_box_rows_tile_mappings; 0xf403 $B3F3 07 B4    ;
.word    LB415                         ; 0xf405 $B3F5 15 B4                    ;
.word    LB415                         ; 0xf407 $B3F7 15 B4                    ;
.word    LB415                         ; 0xf409 $B3F9 15 B4                    ;
.word    LB415                         ; 0xf40b $B3FB 15 B4                    ;
.word    LB415                         ; 0xf40d $B3FD 15 B4                    ;
.word    LB415                         ; 0xf40f $B3FF 15 B4                    ;
.word    LB415                         ; 0xf411 $B401 15 B4                    ;
.word    LB415                         ; 0xf413 $B403 15 B4                    ;
.word    bank3_Tables_for_dialog_box_rows_tile_mappings; 0xf415 $B405 07 B4    ;
; ---------------------------------------------------------------------------- ;
bank3_Tables_for_dialog_box_rows_tile_mappings                                 ;
.byt    $CA,$CB,$CB,$CB,$CB,$CB,$CB,$CB; 0xf417 $B407 CA CB CB CB CB CB CB CB  ;
.byt    $CB,$CB,$CB,$CB,$CB,$CA        ; 0xf41f $B40F CB CB CB CB CB CA        ;
LB415                                                                          ;
.byt    $CC,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0xf425 $B415 CC F4 F4 F4 F4 F4 F4 F4  ;
.byt    $F4,$F4,$F4,$F4                ; 0xf42d $B41D F4 F4 F4 F4              ;
LB421                                                                          ;
.byt    $F4                            ; 0xf431 $B421 F4                       ;
LB422                                                                          ;
.byt    $CC                            ; 0xf432 $B422 CC                       ;
; ---------------------------------------------------------------------------- ;
bank3_Pointer_table_for_Dialogs_Pointer_Table                                  ;
.word    bank3_Dialogs_Pointer_Table_Towns_in_West_Hyrule; 0xf433 $B423 BE AF  ;
.word    bank3_Dialogs_Pointer_Table_Towns_in_East_Hyrule; 0xf435 $B425 26 B0  ;
; ---------------------------------------------------------------------------- ;
bank3_table12                                                                  ;
.byt    $80,$40,$20,$10                ; 0xf437 $B427 80 40 20 10              ;
bank3_Related_to_Collectable_Objects_conditions                                ;
.byt    $08,$04,$02                    ; 0xf43b $B42B 08 04 02                 ;
LB42E                                                                          ;
.byt    $00,$40,$00,$00,$00,$00,$00,$00; 0xf43e $B42E 00 40 00 00 00 00 00 00  ;
.byt    $01,$00,$01,$00,$00,$00,$00,$00; 0xf446 $B436 01 00 01 00 00 00 00 00  ;
.byt    $00,$00,$00,$40,$00,$20,$08,$00; 0xf44e $B43E 00 00 00 40 00 20 08 00  ;
.byt    $00,$10,$00,$00,$01,$00,$00,$00; 0xf456 $B446 00 10 00 00 01 00 00 00  ;
; ---------------------------------------------------------------------------- ;
bank3_Pointer_table_for_Dialog_Conditions                                      ;
.word    bank3_Dialog_Conditions_Ache_Bit_talker; 0xf45e $B44E B9 B5           ;0	Ache (talker)
.word    bank3_Dialog_Conditions_Ache_Bit_talker; 0xf460 $B450 B9 B5           ;1	Bit (talker)
.word    bank3_Dialog_Conditions_default; 0xf462 $B452 C7 B5                   ;2	Invisible Dialog ("Welcome" sign)
.word    bank3_Dialog_Conditions_Blue_Old_Woman__Immobile___River_Man; 0xf464 $B454 A3 B4;3	Blue Old Woman - Immobile / River Man
.word    bank3_Dialog_Conditions_Blue_Lumberjack__Immobile; 0xf466 $B456 EE B4 ;4	Blue Lumberjack - Immobile
.word    bank3_Dialog_Conditions_Wise_Man; 0xf468 $B458 18 B5                  ;5	Wise Man
.word    bank3_Dialog_Conditions_Immobile; 0xf46a $B45A 4E B5                  ;6	Little Kid - Immobile
.word    bank3_Dialog_Conditions_Immobile; 0xf46c $B45C 4E B5                  ;7	Blue Lady with Bowl - Immobile
.word    bank3_Dialog_Conditions_Immobile; 0xf46e $B45E 4E B5                  ;8	Red Old Woman - Immobile
.word    bank3_Dialog_Conditions_Idle  ; 0xf470 $B460 60 B5                    ;9	Red Lumberjack - Idle
.word    bank3_Dialog_Conditions_Idle  ; 0xf472 $B462 60 B5                    ;A	Blue Lady with Bowl - Idle
.word    bank3_Dialog_Conditions_Idle  ; 0xf474 $B464 60 B5                    ;B	Blue Old Woman - Idle
.word    bank3_Dialog_Conditions_Idle  ; 0xf476 $B466 60 B5                    ;C	Red Lady - Idle
.word    bank3_Dialog_Conditions_HealerLady_MagicLady; 0xf478 $B468 7D B5      ;D	Red Lady - Idle (healing lady)
.word    bank3_Dialog_Conditions_HealerLady_MagicLady; 0xf47a $B46A 7D B5      ;E	Orange Old Woman - Idle (magic woman)
.word    bank3_Dialog_Conditions_default; 0xf47c $B46C C7 B5                   ;F	Blue Lumberjack - Walking (default random Townfolk)
.word    bank3_Dialog_Conditions_default; 0xf47e $B46E C7 B5                   ;10	Red Lady with Bowl - Walking (default random Townfolk)
.word    bank3_Dialog_Conditions_default; 0xf480 $B470 C7 B5                   ;11	Red Old Woman - Walking (default random Townfolk)
.word    bank3_Dialog_Conditions_default; 0xf482 $B472 C7 B5                   ;12	Blue Lady - Walking (default random Townfolk)
.word    bank3_Dialog_Conditions_Walking; 0xf484 $B474 92 B5                   ;13	Blue Lumberjack - Walking
.word    bank3_Dialog_Conditions_Walking; 0xf486 $B476 92 B5                   ;14	Red Young Lad - Walking
.word    bank3_Dialog_Conditions_Walking; 0xf488 $B478 92 B5                   ;15	Red Young Lad - Walking
.word    bank3_Dialog_Conditions_Walking; 0xf48a $B47A 92 B5                   ;16	Blue Lady - Walking
.word    bank3_Dialog_Conditions_Invisible_Dialog_Mirror; 0xf48c $B47C AE B5   ;17	Invisible Dialog (Mirror)
.word    bank3_Dialog_Conditions_default; 0xf48e $B47E C7 B5                   ;18	Invisible Dialog ("Welcome" sign)
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Routines_Set_text_pointer_according_to_Townfolk_type__R5          ;
lda      #$00                          ; 0xf490 $B480 A9 00                    ; A = 00
sta      $05                           ; 0xf492 $B482 85 05                    ;
sta      $048C                         ; 0xf494 $B484 8D 8C 04                 ;
ldx      $048B                         ; 0xf497 $B487 AE 8B 04                 ; Townfolk Slot
lda      $A1,x                         ; 0xf49a $B48A B5 A1                    ; Enemy ID
sec                                    ; 0xf49c $B48C 38                       ;
sbc      #$0A                          ; 0xf49d $B48D E9 0A                    ;
sta      L0000                         ; 0xf49f $B48F 85 00                    ;
asl                                    ; 0xf4a1 $B491 0A                       ;
tay                                    ; 0xf4a2 $B492 A8                       ;
lda      bank3_Pointer_table_for_Dialog_Conditions,y; 0xf4a3 $B493 B9 4E B4    ;
sta      L0002                         ; 0xf4a6 $B496 85 02                    ;
lda      bank3_Pointer_table_for_Dialog_Conditions+$01,y; 0xf4a8 $B498 B9 4F B4;
sta      $03                           ; 0xf4ab $B49B 85 03                    ;
ldy      $056B                         ; 0xf4ad $B49D AC 6B 05                 ;; Town Code	;used by wise man to pick magic to give?
jmp      (L0002)                       ; 0xf4b0 $B4A0 6C 02 00                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Conditions_Blue_Old_Woman__Immobile___River_Man                   ;
cpy      #$02                          ; 0xf4b3 $B4A3 C0 02                    ;
bne      bank3_Knight_Type_A_Downward_Stab__03; 0xf4b5 $B4A5 D0 14             ;
lda      $079A                         ; 0xf4b7 $B4A7 AD 9A 07                 ; Have Note from Bagu? (08 = YES)
and      #$08                          ; 0xf4ba $B4AA 29 08                    ; keep bits .... x...
beq      LB4B8                         ; 0xf4bc $B4AC F0 0A                    ; if Not, goto F4B8
lda      $0796                         ; 0xf4be $B4AE AD 96 07                 ; Down/Up Techs (and others)
ora      #$01                          ; 0xf4c1 $B4B1 09 01                    ; set bits  .... ...x
sta      $0796                         ; 0xf4c3 $B4B3 8D 96 07                 ;; Down/Up Techs (and other things)
inc      $05                           ; 0xf4c6 $B4B6 E6 05                    ;
LB4B8                                                                          ;
jmp      bank3_Dialog_Conditions_default; 0xf4c8 $B4B8 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Knight_Type_A_Downward_Stab__03                                          ;
cpy      #$03                          ; 0xf4cb $B4BB C0 03                    ;
bne      bank3_Knight_Type_B_Up_Stab__03; 0xf4cd $B4BD D0 14                   ;
lda      $0796                         ; 0xf4cf $B4BF AD 96 07                 ; Down/Up Techs
and      #$10                          ; 0xf4d2 $B4C2 29 10                    ; keep bits ...x .... (Downward Stab)
beq      LB4CB                         ; 0xf4d4 $B4C4 F0 05                    ;
inc      $05                           ; 0xf4d6 $B4C6 E6 05                    ;
inc      $048C                         ; 0xf4d8 $B4C8 EE 8C 04                 ;
LB4CB                                                                          ;
lda      $0796                         ; 0xf4db $B4CB AD 96 07                 ; Down/Up Techs
ora      #$10                          ; 0xf4de $B4CE 09 10                    ; set  bits ...x .... (set Down Stab)
jmp      LB4E8                         ; 0xf4e0 $B4D0 4C E8 B4                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Knight_Type_B_Up_Stab__03                                                ;
cpy      #$00                          ; 0xf4e3 $B4D3 C0 00                    ;
beq      LB4EB                         ; 0xf4e5 $B4D5 F0 14                    ;
lda      $0796                         ; 0xf4e7 $B4D7 AD 96 07                 ; Down/Up Techs
and      #$04                          ; 0xf4ea $B4DA 29 04                    ; keep bits .... .x.. (Up Stab)
beq      LB4E3                         ; 0xf4ec $B4DC F0 05                    ;
inc      $05                           ; 0xf4ee $B4DE E6 05                    ;
inc      $048C                         ; 0xf4f0 $B4E0 EE 8C 04                 ;
LB4E3                                                                          ;
lda      $0796                         ; 0xf4f3 $B4E3 AD 96 07                 ; Down/Up Techs
ora      #$04                          ; 0xf4f6 $B4E6 09 04                    ; set  bits .... .x.. (set Up Stab)
LB4E8                                                                          ;
sta      $0796                         ; 0xf4f8 $B4E8 8D 96 07                 ;; Down/Up Techs (and other things)
LB4EB                                                                          ;
jmp      bank3_Dialog_Conditions_default; 0xf4fb $B4EB 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Conditions_Blue_Lumberjack__Immobile                              ;
cpy      #$03                          ; 0xf4fe $B4EE C0 03                    ;
bne      bank3_Error_of_Ruto__04       ; 0xf500 $B4F0 D0 0B                    ;
lda      $0796                         ; 0xf502 $B4F2 AD 96 07                 ; Up/Down Techs (and other things)
ora      #$02                          ; 0xf505 $B4F5 09 02                    ; set bits  .... ..x.
sta      $0796                         ; 0xf507 $B4F7 8D 96 07                 ;; Down/Up Techs (and other things)
jmp      bank3_Dialog_Conditions_default; 0xf50a $B4FA 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Error_of_Ruto__04                                                        ;
cpy      #$01                          ; 0xf50d $B4FD C0 01                    ;
bne      bank3_Unknown_Townfolk__04    ; 0xf50f $B4FF D0 0C                    ;
lda      $0796                         ; 0xf511 $B501 AD 96 07                 ; Up/Down Techs
and      #$02                          ; 0xf514 $B504 29 02                    ; keep bits .... ..x.
beq      LB50A                         ; 0xf516 $B506 F0 02                    ;
LB508                                                                          ;
inc      $05                           ; 0xf518 $B508 E6 05                    ;
LB50A                                                                          ;
jmp      bank3_Dialog_Conditions_default; 0xf51a $B50A 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Unknown_Townfolk__04                                                     ;
cpy      #$00                          ; 0xf51d $B50D C0 00                    ;
beq      LB50A                         ; 0xf51f $B50F F0 F9                    ;
lda      $078A                         ; 0xf521 $B511 AD 8A 07                 ; Have Cross
bne      LB508                         ; 0xf524 $B514 D0 F2                    ;
beq      LB50A                         ; 0xf526 $B516 F0 F2                    ;
bank3_Dialog_Conditions_Wise_Man                                               ;
sty      $01                           ; 0xf528 $B518 84 01                    ;
inc      $01                           ; 0xf52a $B51A E6 01                    ;
lda      $077B,y                       ; 0xf52c $B51C B9 7B 07                 ; Have Magic #Y
beq      LB526                         ; 0xf52f $B51F F0 05                    ;
inc      $048C                         ; 0xf531 $B521 EE 8C 04                 ;
bne      LB52D                         ; 0xf534 $B524 D0 07                    ;
LB526                                                                          ;
lda      $0783                         ; 0xf536 $B526 AD 83 07                 ; Current number of Magic Containers
cmp      $01                           ; 0xf539 $B529 C5 01                    ;
bcc      LB54B                         ; 0xf53b $B52B 90 1E                    ;
LB52D                                                                          ;
inc      $05                           ; 0xf53d $B52D E6 05                    ;
lda      #$01                          ; 0xf53f $B52F A9 01                    ; A = 01
sta      $077B,y                       ; 0xf541 $B531 99 7B 07                 ; Have Magic #Y
sty      $01                           ; 0xf544 $B534 84 01                    ;
ldx      #$07                          ; 0xf546 $B536 A2 07                    ; X = 07
lda      #$00                          ; 0xf548 $B538 A9 00                    ; A = 00
LB53A                                                                          ;
cpx      $01                           ; 0xf54a $B53A E4 01                    ;
beq      LB541                         ; 0xf54c $B53C F0 03                    ;
ora      $077B,x                       ; 0xf54e $B53E 1D 7B 07                 ; Have Magic #X
LB541                                                                          ;
dex                                    ; 0xf551 $B541 CA                       ;
bpl      LB53A                         ; 0xf552 $B542 10 F6                    ;
cmp      #$00                          ; 0xf554 $B544 C9 00                    ;
bne      LB54B                         ; 0xf556 $B546 D0 03                    ;
sty      $0749                         ; 0xf558 $B548 8C 49 07                 ; Current position of the Magic selector
LB54B                                                                          ;
jmp      bank3_Dialog_Conditions_default; 0xf55b $B54B 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Conditions_Immobile                                               ;
lda      L0000                         ; 0xf55e $B54E A5 00                    ;
sec                                    ; 0xf560 $B550 38                       ;
sbc      #$06                          ; 0xf561 $B551 E9 06                    ;
tax                                    ; 0xf563 $B553 AA                       ;
lda      $0797,y                       ; 0xf564 $B554 B9 97 07                 ;
ora      bank3_Related_to_Collectable_Objects_conditions,x; 0xf567 $B557 1D 2B B4;
sta      $0797,y                       ; 0xf56a $B55A 99 97 07                 ;
jmp      bank3_Dialog_Conditions_default; 0xf56d $B55D 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Conditions_Idle                                                   ;
cpy      #$00                          ; 0xf570 $B560 C0 00                    ;
beq      LB579                         ; 0xf572 $B562 F0 15                    ;
sty      $01                           ; 0xf574 $B564 84 01                    ;
lda      L0000                         ; 0xf576 $B566 A5 00                    ;
sec                                    ; 0xf578 $B568 38                       ;
sbc      #$09                          ; 0xf579 $B569 E9 09                    ;
asl                                    ; 0xf57b $B56B 0A                       ;
asl                                    ; 0xf57c $B56C 0A                       ;
asl                                    ; 0xf57d $B56D 0A                       ;
adc      $01                           ; 0xf57e $B56E 65 01                    ;
tax                                    ; 0xf580 $B570 AA                       ;
lda      $0797,y                       ; 0xf581 $B571 B9 97 07                 ;
and      LB42E,x                       ; 0xf584 $B574 3D 2E B4                 ;
beq      bank3_Dialog_Conditions_default; 0xf587 $B577 F0 4E                   ;
LB579                                                                          ;
inc      $05                           ; 0xf589 $B579 E6 05                    ;
bne      LB589                         ; 0xf58b $B57B D0 0C                    ;
bank3_Dialog_Conditions_HealerLady_MagicLady                                   ;
ldx      $074C                         ; 0xf58d $B57D AE 4C 07                 ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cpx      #$02                          ; 0xf590 $B580 E0 02                    ;
beq      LB589                         ; 0xf592 $B582 F0 05                    ;
inc      $05                           ; 0xf594 $B584 E6 05                    ;
jmp      bank3_Dialog_Conditions_default; 0xf596 $B586 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB589                                                                          ;
ldx      $048B                         ; 0xf599 $B589 AE 8B 04                 ; Townfolk Slot
jsr      L9A50                         ; 0xf59c $B58C 20 50 9A                 ;
jmp      bank3_Dialog_Conditions_default; 0xf59f $B58F 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Conditions_Walking                                                ;
lda      L0000                         ; 0xf5a2 $B592 A5 00                    ;
sec                                    ; 0xf5a4 $B594 38                       ;
sbc      #$13                          ; 0xf5a5 $B595 E9 13                    ;
tax                                    ; 0xf5a7 $B597 AA                       ;
lda      $0797,y                       ; 0xf5a8 $B598 B9 97 07                 ;
ora      bank3_table12,x               ; 0xf5ab $B59B 1D 27 B4                 ;
sta      $0797,y                       ; 0xf5ae $B59E 99 97 07                 ;
jmp      bank3_Dialog_Conditions_default; 0xf5b1 $B5A1 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      L0000                         ; 0xf5b4 $B5A4 A5 00                    ;
sec                                    ; 0xf5b6 $B5A6 38                       ;
sbc      #$04                          ; 0xf5b7 $B5A7 E9 04                    ;
sta      L0000                         ; 0xf5b9 $B5A9 85 00                    ;
jmp      bank3_Dialog_Conditions_default; 0xf5bb $B5AB 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Conditions_Invisible_Dialog_Mirror                                ;
lda      $0797,y                       ; 0xf5be $B5AE B9 97 07                 ;
ora      #$01                          ; 0xf5c1 $B5B1 09 01                    ; set  bits .... ...x
sta      $0797,y                       ; 0xf5c3 $B5B3 99 97 07                 ;
jmp      bank3_Dialog_Conditions_default; 0xf5c6 $B5B6 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Conditions_Ache_Bit_talker                                        ;
lda      $05A5,x                       ; 0xf5c9 $B5B9 BD A5 05                 ;;town npc chat counter
cmp      #$04                          ; 0xf5cc $B5BC C9 04                    ;
bcc      bank3_Dialog_Conditions_default; 0xf5ce $B5BE 90 07                   ;
lda      #$04                          ; 0xf5d0 $B5C0 A9 04                    ; A = 04
sta      $05A5,x                       ; 0xf5d2 $B5C2 9D A5 05                 ;;town npc chat counter
inc      $05                           ; 0xf5d5 $B5C5 E6 05                    ;
bank3_Dialog_Conditions_default                                                ;
lda      L0000                         ; 0xf5d7 $B5C7 A5 00                    ;
ldx      $048C                         ; 0xf5d9 $B5C9 AE 8C 04                 ;
beq      LB5D0                         ; 0xf5dc $B5CC F0 02                    ;
lda      #$0F                          ; 0xf5de $B5CE A9 0F                    ; A = 0F
LB5D0                                                                          ;
asl                                    ; 0xf5e0 $B5D0 0A                       ;
asl                                    ; 0xf5e1 $B5D1 0A                       ;
sta      L0000                         ; 0xf5e2 $B5D2 85 00                    ;
lda      $056B                         ; 0xf5e4 $B5D4 AD 6B 05                 ; Town Code
and      #$03                          ; 0xf5e7 $B5D7 29 03                    ; keep bits .... ..xx
clc                                    ; 0xf5e9 $B5D9 18                       ;
adc      L0000                         ; 0xf5ea $B5DA 65 00                    ;
tay                                    ; 0xf5ec $B5DC A8                       ;
lda      bank3_related_to_dialog_indexes1,y; 0xf5ed $B5DD B9 38 A2             ;
ldx      $05                           ; 0xf5f0 $B5E0 A6 05                    ;
beq      LB5E7                         ; 0xf5f2 $B5E2 F0 03                    ;
lda      bank3_related_to_dialog_indexes2,y; 0xf5f4 $B5E4 B9 9C A2             ;
LB5E7                                                                          ;
ldx      $0707                         ; 0xf5f7 $B5E7 AE 07 07                 ; Current World
cpx      #$02                          ; 0xf5fa $B5EA E0 02                    ; 02 = Towns in East Hyrule
bne      bank3_At_this_point_A_is_the_dialog_index; 0xf5fc $B5EC D0 0A         ;
lda      bank3_related_to_dialog_indexes3,y; 0xf5fe $B5EE B9 DC A2             ;
ldx      $05                           ; 0xf601 $B5F1 A6 05                    ;
beq      bank3_At_this_point_A_is_the_dialog_index; 0xf603 $B5F3 F0 03         ;
lda      bank3_related_to_dialog_indexes4,y; 0xf605 $B5F5 B9 40 A3             ;
bank3_At_this_point_A_is_the_dialog_index                                      ;
asl                                    ; 0xf608 $B5F8 0A                       ;
tay                                    ; 0xf609 $B5F9 A8                       ;
lda      $0707                         ; 0xf60a $B5FA AD 07 07                 ; Current World
asl                                    ; 0xf60d $B5FD 0A                       ;
tax                                    ; 0xf60e $B5FE AA                       ;
lda      LB421,x                       ; 0xf60f $B5FF BD 21 B4                 ;
sta      L0000                         ; 0xf612 $B602 85 00                    ;
lda      LB422,x                       ; 0xf614 $B604 BD 22 B4                 ;
sta      $01                           ; 0xf617 $B607 85 01                    ;
lda      (L0000),y                     ; 0xf619 $B609 B1 00                    ;
sta      $0569                         ; 0xf61b $B60B 8D 69 05                 ; Pointer to letter (high)
iny                                    ; 0xf61e $B60E C8                       ;
lda      (L0000),y                     ; 0xf61f $B60F B1 00                    ;
sta      $056A                         ; 0xf621 $B611 8D 6A 05                 ; Pointer to letter (low)
lda      #$2A                          ; 0xf624 $B614 A9 2A                    ; A = 2A (delay before letters start typing)
sta      $0566                         ; 0xf626 $B616 8D 66 05                 ; Delay between letters
lda      #$00                          ; 0xf629 $B619 A9 00                    ; A = 00
sta      $0489                         ; 0xf62b $B61B 8D 89 04                 ; Letter X Position offset
sta      $048A                         ; 0xf62e $B61E 8D 8A 04                 ; Letter Y Position offset
bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2_duplicate      ;
inc      $0524                         ; 0xf631 $B621 EE 24 05                 ; Routine Counter
rts                                    ; 0xf634 $B624 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Table_for_Bit_Masks                                                      ;
;.... ...x                                                                     ;
;.... ..x.                                                                     ;
;.... .x..                                                                     ;
;.... x...                                                                     ;
;...x ....                                                                     ;
;..x. ....                                                                     ;
;.x.. ....                                                                     ;
;x... ....                                                                     ;
.byt    $01,$02,$04,$08,$10,$20,$40,$80; 0xf635 $B625 01 02 04 08 10 20 40 80  ;Table for Bit Masks (8 bytes)
; ---------------------------------------------------------------------------- ;
bank3_code21                                                                   ;
lda      $0796                         ; 0xf63d $B62D AD 96 07                 ; Down/Up Techs
ora      bank3_Table_for_Bit_Masks,y   ; 0xf640 $B630 19 25 B6                 ;
sta      $0796                         ; 0xf643 $B633 8D 96 07                 ;; Down/Up Techs (and other things)
jmp      bank3_Dialog_Conditions_default; 0xf646 $B636 4C C7 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB639                                                                          ;
lda      $056B                         ; 0xf649 $B639 AD 6B 05                 ;; Town Code	;used by wise man to pick magic to give?
cmp      #$03                          ; 0xf64c $B63C C9 03                    ;
bcs      LB64A                         ; 0xf64e $B63E B0 0A                    ;
bcc      LB690                         ; 0xf650 $B640 90 4E                    ;
LB642                                                                          ;
ldy      $056B                         ; 0xf652 $B642 AC 6B 05                 ;; Town Code	;used by wise man to pick magic to give?
lda      $077B,y                       ; 0xf655 $B645 B9 7B 07                 ; Have magic #Y ?
beq      LB690                         ; 0xf658 $B648 F0 46                    ;
LB64A                                                                          ;
lda      $048C                         ; 0xf65a $B64A AD 8C 04                 ;
bne      LB690                         ; 0xf65d $B64D D0 41                    ;
lda      #$04                          ; 0xf65f $B64F A9 04                    ; A = 04
sta      $EC                           ; 0xf661 $B651 85 EC                    ; Sound Effects Type 1
jmp      bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2_duplicate; 0xf663 $B653 4C 21 B6;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_End_of_Line_Routine                                                      ;
ldy      #$0B                          ; 0xf666 $B656 A0 0B                    ; 0B = delay after dialog line with FD
cmp      #$FD                          ; 0xf668 $B658 C9 FD                    ;
beq      LB65E                         ; 0xf66a $B65A F0 02                    ;
ldy      #$2D                          ; 0xf66c $B65C A0 2D                    ; 2D = delay after dialog line with FE
LB65E                                                                          ;
sty      $0566                         ; 0xf66e $B65E 8C 66 05                 ; Delay between letters
lda      #$00                          ; 0xf671 $B661 A9 00                    ; A = 00
sta      $0489                         ; 0xf673 $B663 8D 89 04                 ; New Letter X Position (offset)
lda      $048A                         ; 0xf676 $B666 AD 8A 04                 ; Next Letter Y Position
clc                                    ; 0xf679 $B669 18                       ;
adc      #$40                          ; 0xf67a $B66A 69 40                    ; Go down 2 tiles (0x10 pixels)
sta      $048A                         ; 0xf67c $B66C 8D 8A 04                 ; New Letter Y Position
jmp      LB752                         ; 0xf67f $B66F 4C 52 B7                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB672                                                                          ;
lda      $074C                         ; 0xf682 $B672 AD 4C 07                 ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cmp      #$04                          ; 0xf685 $B675 C9 04                    ;
beq      bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2_duplicate; 0xf687 $B677 F0 A8;
lda      #$C0                          ; 0xf689 $B679 A9 C0                    ; A = C0
sta      $074B                         ; 0xf68b $B67B 8D 4B 07                 ; Spell Flash Counter
lda      #$40                          ; 0xf68e $B67E A9 40                    ; A = 40
sta      $049E                         ; 0xf690 $B680 8D 9E 04                 ;
ldx      $048B                         ; 0xf693 $B683 AE 8B 04                 ; Townfolk Slot
lda      $A1,x                         ; 0xf696 $B686 B5 A1                    ; Enemy Code
cmp      #$0F                          ; 0xf698 $B688 C9 0F                    ;
beq      LB642                         ; 0xf69a $B68A F0 B6                    ;
cmp      #$0D                          ; 0xf69c $B68C C9 0D                    ;
beq      LB639                         ; 0xf69e $B68E F0 A9                    ;
LB690                                                                          ;
lda      #$00                          ; 0xf6a0 $B690 A9 00                    ; A = 00
sta      $074B                         ; 0xf6a2 $B692 8D 4B 07                 ;; Spell Flash Counter (bit 7 set = decor flash)
sta      $049E                         ; 0xf6a5 $B695 8D 9E 04                 ;
inc      $0524                         ; 0xf6a8 $B698 EE 24 05                 ; Routine Counter
jmp      bank3_Dialog_Routines_advance_to_next_routine_in_this_table__R2_duplicate; 0xf6ab $B69B 4C 21 B6;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Delay_counter_between_letters                                            ;
dec      $0566                         ; 0xf6ae $B69E CE 66 05                 ; Delay between letters (town)
rts                                    ; 0xf6b1 $B6A1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB6A2                                                                          ;
lda      #$00                          ; 0xf6b2 $B6A2 A9 00                    ; A = 00
sta      $0766                         ; 0xf6b4 $B6A4 8D 66 07                 ;; Dialog Flag (00-01)	wait for B button press; set when conversation occurs? Might prevent other ppu instruction
ldx      $048B                         ; 0xf6b7 $B6A7 AE 8B 04                 ;; Conversation Pointer; Townfolk Slot				used as X position for monster ID
lda      $A1,x                         ; 0xf6ba $B6AA B5 A1                    ; Enemy Code
cmp      #$0D                          ; 0xf6bc $B6AC C9 0D                    ; Townfolk type 0D prevents dialog cancel
beq      LB6BA                         ; 0xf6be $B6AE F0 0A                    ;
cmp      #$0F                          ; 0xf6c0 $B6B0 C9 0F                    ; Townfolk type 0F prevents dialog cancel
beq      LB6BA                         ; 0xf6c2 $B6B2 F0 06                    ;
lda      $F5                           ; 0xf6c4 $B6B4 A5 F5                    ; controller 1 buttons pressed
and      #$40                          ; 0xf6c6 $B6B6 29 40                    ; keep bits .x.. .... (B button)
bne      LB672                         ; 0xf6c8 $B6B8 D0 B8                    ; if pressed, skip to $F672
LB6BA                                                                          ;
lda      $0566                         ; 0xf6ca $B6BA AD 66 05                 ; Delay between letters
bne      bank3_Delay_counter_between_letters; 0xf6cd $B6BD D0 DF               ;
inc      $0766                         ; 0xf6cf $B6BF EE 66 07                 ;; Dialog Flag (00-01)	wait for B button press; set when conversation occurs? Might prevent other ppu instruction
ldx      #$F4                          ; 0xf6d2 $B6C2 A2 F4                    ; X = F4 (interline character)
lda      $0569                         ; 0xf6d4 $B6C4 AD 69 05                 ; 569,56A = pointer to next letter
sta      L0000                         ; 0xf6d7 $B6C7 85 00                    ;
lda      $056A                         ; 0xf6d9 $B6C9 AD 6A 05                 ;; Pointer to letter 	; Low
sta      $01                           ; 0xf6dc $B6CC 85 01                    ;
ldy      #$00                          ; 0xf6de $B6CE A0 00                    ; Y = 00
lda      (L0000),y                     ; 0xf6e0 $B6D0 B1 00                    ;
cmp      #$FF                          ; 0xf6e2 $B6D2 C9 FF                    ; if End of Message
beq      LB672                         ; 0xf6e4 $B6D4 F0 9C                    ; goto $F672
cmp      #$FD                          ; 0xf6e6 $B6D6 C9 FD                    ;
bcc      bank3_Load_a_letter           ; 0xf6e8 $B6D8 90 03                    ; if not FD or FE, goto $F6DD
jmp      bank3_End_of_Line_Routine     ; 0xf6ea $B6DA 4C 56 B6                 ; else goto $F656
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Load_a_letter                                                            ;
asl                                    ; 0xf6ed $B6DD 0A                       ; if Bit 7 is 0...
bcc      LB6ED                         ; 0xf6ee $B6DE 90 0D                    ; skip to $F6ED
asl                                    ; 0xf6f0 $B6E0 0A                       ; if Bit 6 is 1...
bcs      LB6E7                         ; 0xf6f1 $B6E1 B0 04                    ; skip to $F6E7
ldx      #$33                          ; 0xf6f3 $B6E3 A2 33                    ; X = 33 (33 = empty tile) (bit 7 accent)
bcc      LB6F2                         ; 0xf6f5 $B6E5 90 0B                    ;
LB6E7                                                                          ;
lda      (L0000),y                     ; 0xf6f7 $B6E7 B1 00                    ;
ora      #$C0                          ; 0xf6f9 $B6E9 09 C0                    ; set bits  xx.. ....
bne      LB6F6                         ; 0xf6fb $B6EB D0 09                    ;
LB6ED                                                                          ;
asl                                    ; 0xf6fd $B6ED 0A                       ;
bcc      LB6F2                         ; 0xf6fe $B6EE 90 02                    ;
ldx      #$32                          ; 0xf700 $B6F0 A2 32                    ; X = 32 (32 = dot)
LB6F2                                                                          ;
lda      (L0000),y                     ; 0xf702 $B6F2 B1 00                    ;
and      #$3F                          ; 0xf704 $B6F4 29 3F                    ; keep bits ..xx xxxx
LB6F6                                                                          ;
sta      $0306                         ; 0xf706 $B6F6 8D 06 03                 ;; Letter Written to Screen
lda      $0489                         ; 0xf709 $B6F9 AD 89 04                 ; Letter X Position offset
asl                                    ; 0xf70c $B6FC 0A                       ;
asl                                    ; 0xf70d $B6FD 0A                       ;
asl                                    ; 0xf70e $B6FE 0A                       ;
sta      L0002                         ; 0xf70f $B6FF 85 02                    ;
lda      $072C                         ; 0xf711 $B701 AD 2C 07                 ; Scrolling Offset Low Byte
clc                                    ; 0xf714 $B704 18                       ;
adc      #$88                          ; 0xf715 $B705 69 88                    ; Base X position of text lines
and      #$F0                          ; 0xf717 $B707 29 F0                    ; keep bits xxxx .... (round to align to tile)
php                                    ; 0xf719 $B709 08                       ;
clc                                    ; 0xf71a $B70A 18                       ;
adc      L0002                         ; 0xf71b $B70B 65 02                    ;
sta      L0002                         ; 0xf71d $B70D 85 02                    ;
lda      $072A                         ; 0xf71f $B70F AD 2A 07                 ; Scrolling Offset High Byte
adc      #$00                          ; 0xf722 $B712 69 00                    ;
plp                                    ; 0xf724 $B714 28                       ;
adc      #$00                          ; 0xf725 $B715 69 00                    ;
and      #$01                          ; 0xf727 $B717 29 01                    ; keep bits .... ...x
asl                                    ; 0xf729 $B719 0A                       ;
asl                                    ; 0xf72a $B71A 0A                       ;
adc      #$20                          ; 0xf72b $B71B 69 20                    ;
sta      $03                           ; 0xf72d $B71D 85 03                    ;
lda      L0002                         ; 0xf72f $B71F A5 02                    ;
lsr                                    ; 0xf731 $B721 4A                       ;
lsr                                    ; 0xf732 $B722 4A                       ;
lsr                                    ; 0xf733 $B723 4A                       ;
adc      #$E0                          ; 0xf734 $B724 69 E0                    ;
adc      $048A                         ; 0xf736 $B726 6D 8A 04                 ; Letter Y Position offset
sta      $0303                         ; 0xf739 $B729 8D 03 03                 ;; Letter position when writing to screen
lda       !$03                         ; 0xf73c $B72C AD 03 00                 ;
adc      #$00                          ; 0xf73f $B72F 69 00                    ;
sta      L0302                         ; 0xf741 $B731 8D 02 03                 ;; Used when writing text to screen
lda      #$82                          ; 0xf744 $B734 A9 82                    ; A = 82
sta      $0304                         ; 0xf746 $B736 8D 04 03                 ;; Text memory offset?
stx      $0305                         ; 0xf749 $B739 8E 05 03                 ; tile above current letter
lda      #$FF                          ; 0xf74c $B73C A9 FF                    ; A = FF
sta      $0307                         ; 0xf74e $B73E 8D 07 03                 ;; Text memory offset?
lda      #$05                          ; 0xf751 $B741 A9 05                    ; A = 05
sta      $0301                         ; 0xf753 $B743 8D 01 03                 ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
lda      #$60                          ; 0xf756 $B746 A9 60                    ; 60 = typewriter sound
sta      $EC                           ; 0xf758 $B748 85 EC                    ; Sound Effects Type 1
inc      $0489                         ; 0xf75a $B74A EE 89 04                 ; advance 1 tile to the right
lda      #$05                          ; 0xf75d $B74D A9 05                    ; 05 = delay between letters
sta      $0566                         ; 0xf75f $B74F 8D 66 05                 ; Delay between letters
LB752                                                                          ;
inc      $0569                         ; 0xf762 $B752 EE 69 05                 ; advance 1 byte in dialog data
bne      LB75A                         ; 0xf765 $B755 D0 03                    ; if it wraps to 00...
inc      $056A                         ; 0xf767 $B757 EE 6A 05                 ; add 1 to the high byte of pointer
LB75A                                                                          ;
rts                                    ; 0xf76a $B75A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Routines_life_magic_restore                                       ;
ldx      $048B                         ; 0xf76b $B75B AE 8B 04                 ; Townfolk Slot
lda      $A1,x                         ; 0xf76e $B75E B5 A1                    ; Enemy Code
ldx      #$00                          ; 0xf770 $B760 A2 00                    ; X = 00
cmp      #$0F                          ; 0xf772 $B762 C9 0F                    ;
beq      LB776                         ; 0xf774 $B764 F0 10                    ;
cmp      #$0D                          ; 0xf776 $B766 C9 0D                    ;
beq      LB776                         ; 0xf778 $B768 F0 0C                    ;
cmp      #$18                          ; 0xf77a $B76A C9 18                    ;
bcs      LB76F                         ; 0xf77c $B76C B0 01                    ;
inx                                    ; 0xf77e $B76E E8                       ;
LB76F                                                                          ;
lda      #$FF                          ; 0xf77f $B76F A9 FF                    ; A = FF
sta      $070C,x                       ; 0xf781 $B771 9D 0C 07                 ; Magic/Life to be added to Meter
bne      LB7A2                         ; 0xf784 $B774 D0 2C                    ;
LB776                                                                          ;
lda      $07FC                         ; 0xf786 $B776 AD FC 07                 ;
cmp      #$04                          ; 0xf789 $B779 C9 04                    ;
beq      LB7A5                         ; 0xf78b $B77B F0 28                    ;
lda      #$10                          ; 0xf78d $B77D A9 10                    ; A = 10
sta      $EB                           ; 0xf78f $B77F 85 EB                    ; Music
ldx      $048B                         ; 0xf791 $B781 AE 8B 04                 ;; Conversation Pointer; Townfolk Slot				used as X position for monster ID
lda      $A1,x                         ; 0xf794 $B784 B5 A1                    ; Enemy Code
cmp      #$0F                          ; 0xf796 $B786 C9 0F                    ;
bne      LB7A2                         ; 0xf798 $B788 D0 18                    ;
lda      #$00                          ; 0xf79a $B78A A9 00                    ; A = 00
sta      $0524                         ; 0xf79c $B78C 8D 24 05                 ; Routine Counter
sta      $074C                         ; 0xf79f $B78F 8D 4C 07                 ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
sta      $0525                         ; 0xf7a2 $B792 8D 25 05                 ; Routine Delay
sta      $DE                           ; 0xf7a5 $B795 85 DE                    ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
sta      $048D                         ; 0xf7a7 $B797 8D 8D 04                 ;; Related to Link's flicker after being hit ?
ldy      #$05                          ; 0xf7aa $B79A A0 05                    ; Y = 05
LB79C                                                                          ;
sta      $05C3,y                       ; 0xf7ac $B79C 99 C3 05                 ;
dey                                    ; 0xf7af $B79F 88                       ;
bpl      LB79C                         ; 0xf7b0 $B7A0 10 FA                    ;
LB7A2                                                                          ;
inc      $0524                         ; 0xf7b2 $B7A2 EE 24 05                 ; advance to next routine...
LB7A5                                                                          ;
rts                                    ; 0xf7b5 $B7A5 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_Dialog_Routines_wait_for_B_button                                        ;
lda      $0766                         ; 0xf7b6 $B7A6 AD 66 07                 ;; Dialog Flag (00-01)	wait for B button press; set when conversation occurs? Might prevent other ppu instruction
beq      LB7A2                         ; 0xf7b9 $B7A9 F0 F7                    ;
lda      $F5                           ; 0xf7bb $B7AB A5 F5                    ; Controller 1 buttons pressed
and      #$40                          ; 0xf7bd $B7AD 29 40                    ; keep bits .x.. .... (B button)
bne      LB7A2                         ; 0xf7bf $B7AF D0 F1                    ; if pressed, advance to next routine
rts                                    ; 0xf7c1 $B7B1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB7B2                                                                          ;
ldy      #$05                          ; 0xf7c2 $B7B2 A0 05                    ; Y = 05
lda      #$00                          ; 0xf7c4 $B7B4 A9 00                    ; A = 00
LB7B6                                                                          ;
sta      $05C3,y                       ; 0xf7c6 $B7B6 99 C3 05                 ;
dey                                    ; 0xf7c9 $B7B9 88                       ;
bpl      LB7B6                         ; 0xf7ca $B7BA 10 FA                    ;
sta      $DE                           ; 0xf7cc $B7BC 85 DE                    ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
sta      $048D                         ; 0xf7ce $B7BE 8D 8D 04                 ;; Related to Link's flicker after being hit ?
lda      $056B                         ; 0xf7d1 $B7C1 AD 6B 05                 ; Town Code
cmp      #$02                          ; 0xf7d4 $B7C4 C9 02                    ;
beq      bank3_Townfolk_Transforming_into_Ache; 0xf7d6 $B7C6 F0 04             ;
cmp      #$05                          ; 0xf7d8 $B7C8 C9 05                    ;
bne      LB7F0                         ; 0xf7da $B7CA D0 24                    ;
bank3_Townfolk_Transforming_into_Ache                                          ;
ldx      $048B                         ; 0xf7dc $B7CC AE 8B 04                 ; Townfolk Slot
lda      $A1,x                         ; 0xf7df $B7CF B5 A1                    ; Enemy Code
cmp      #$19                          ; 0xf7e1 $B7D1 C9 19                    ;
bcc      LB7F0                         ; 0xf7e3 $B7D3 90 1B                    ;
cmp      #$1D                          ; 0xf7e5 $B7D5 C9 1D                    ;
bcs      LB7F0                         ; 0xf7e7 $B7D7 B0 17                    ;
;19 to 1C = Generated Townfolk                                                 ;
lda      $051C,x                       ; 0xf7e9 $B7D9 BD 1C 05                 ; Randomizer
cmp      #$67                          ; 0xf7ec $B7DC C9 67                    ; Approx. 26% chance of Townfolk transforming
bcs      LB7F0                         ; 0xf7ee $B7DE B0 10                    ;
lda      #$03                          ; 0xf7f0 $B7E0 A9 03                    ; A = 03 (03 = Code for Ache)
sta      $A1,x                         ; 0xf7f2 $B7E2 95 A1                    ; Enemy Code
sta      $81,x                         ; 0xf7f4 $B7E4 95 81                    ; Current Animation Frame for Enemy
lda      #$80                          ; 0xf7f6 $B7E6 A9 80                    ; A = 80
sta      $AF,x                         ; 0xf7f8 $B7E8 95 AF                    ;; Various enemy state variables
asl                                    ; 0xf7fa $B7EA 0A                       ;
sta      $057E,x                       ; 0xf7fb $B7EB 9D 7E 05                 ; Enemy Y Velocity
sta      $71,x                         ; 0xf7fe $B7EE 95 71                    ; Enemy X Velocity
LB7F0                                                                          ;
lda      #$08                          ; 0xf800 $B7F0 A9 08                    ; A = 08
sta      $EE                           ; 0xf802 $B7F2 85 EE                    ; Sound Effects Type 3
lda      #$00                          ; 0xf804 $B7F4 A9 00                    ; A = 00
sta      $074C                         ; 0xf806 $B7F6 8D 4C 07                 ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
sta      $0525                         ; 0xf809 $B7F9 8D 25 05                 ; Routine Delay
sta      $0524                         ; 0xf80c $B7FC 8D 24 05                 ; Routine Counter
sta      $0567                         ; 0xf80f $B7FF 8D 67 05                 ;; Related to Flute in Overworld		TIMER: can't move on overworld while this occurs
rts                                    ; 0xf812 $B802 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_UNUSED_B803                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf813 $B803 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf81b $B80B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf823 $B813 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf82b $B81B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf833 $B823 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf83b $B82B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf843 $B833 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf84b $B83B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf853 $B843 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf85b $B84B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf863 $B853 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf86b $B85B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf873 $B863 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf87b $B86B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf883 $B873 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf88b $B87B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf893 $B883 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf89b $B88B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8a3 $B893 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8ab $B89B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8b3 $B8A3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8bb $B8AB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8c3 $B8B3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8cb $B8BB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8d3 $B8C3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8db $B8CB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8e3 $B8D3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8eb $B8DB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8f3 $B8E3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf8fb $B8EB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf903 $B8F3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf90b $B8FB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf913 $B903 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf91b $B90B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf923 $B913 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf92b $B91B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf933 $B923 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf93b $B92B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf943 $B933 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf94b $B93B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf953 $B943 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf95b $B94B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf963 $B953 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf96b $B95B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf973 $B963 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf97b $B96B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf983 $B973 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf98b $B97B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf993 $B983 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf99b $B98B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9a3 $B993 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9ab $B99B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9b3 $B9A3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9bb $B9AB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9c3 $B9B3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9cb $B9BB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF    ; 0xf9d3 $B9C3 FF FF FF FF FF FF FF     ;
LB9CA                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9da $B9CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9e2 $B9D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9ea $B9DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9f2 $B9E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xf9fa $B9EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa02 $B9F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa0a $B9FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa12 $BA02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa1a $BA0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa22 $BA12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa2a $BA1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa32 $BA22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa3a $BA2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa42 $BA32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa4a $BA3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa52 $BA42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa5a $BA4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa62 $BA52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa6a $BA5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa72 $BA62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa7a $BA6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa82 $BA72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa8a $BA7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa92 $BA82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfa9a $BA8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfaa2 $BA92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfaaa $BA9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfab2 $BAA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfaba $BAAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfac2 $BAB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfaca $BABA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfad2 $BAC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfada $BACA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfae2 $BAD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfaea $BADA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfaf2 $BAE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfafa $BAEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb02 $BAF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb0a $BAFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb12 $BB02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb1a $BB0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb22 $BB12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb2a $BB1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb32 $BB22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb3a $BB2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb42 $BB32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb4a $BB3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb52 $BB42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb5a $BB4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb62 $BB52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb6a $BB5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb72 $BB62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb7a $BB6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb82 $BB72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb8a $BB7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb92 $BB82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfb9a $BB8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfba2 $BB92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbaa $BB9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbb2 $BBA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbba $BBAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbc2 $BBB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbca $BBBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbd2 $BBC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbda $BBCA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbe2 $BBD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbea $BBDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbf2 $BBE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfbfa $BBEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc02 $BBF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc0a $BBFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc12 $BC02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc1a $BC0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc22 $BC12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc2a $BC1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc32 $BC22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc3a $BC2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc42 $BC32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc4a $BC3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc52 $BC42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc5a $BC4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc62 $BC52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc6a $BC5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc72 $BC62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc7a $BC6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc82 $BC72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc8a $BC7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc92 $BC82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfc9a $BC8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfca2 $BC92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcaa $BC9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcb2 $BCA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcba $BCAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcc2 $BCB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcca $BCBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcd2 $BCC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcda $BCCA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfce2 $BCD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcea $BCDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcf2 $BCE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfcfa $BCEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd02 $BCF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd0a $BCFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd12 $BD02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd1a $BD0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd22 $BD12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd2a $BD1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd32 $BD22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd3a $BD2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd42 $BD32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd4a $BD3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd52 $BD42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd5a $BD4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd62 $BD52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd6a $BD5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd72 $BD62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd7a $BD6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd82 $BD72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd8a $BD7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd92 $BD82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfd9a $BD8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfda2 $BD92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdaa $BD9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdb2 $BDA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdba $BDAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdc2 $BDB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdca $BDBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdd2 $BDC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdda $BDCA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfde2 $BDD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdea $BDDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdf2 $BDE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfdfa $BDEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe02 $BDF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe0a $BDFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe12 $BE02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe1a $BE0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe22 $BE12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe2a $BE1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe32 $BE22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe3a $BE2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe42 $BE32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe4a $BE3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe52 $BE42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe5a $BE4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe62 $BE52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe6a $BE5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe72 $BE62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe7a $BE6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe82 $BE72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe8a $BE7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe92 $BE82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfe9a $BE8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfea2 $BE92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfeaa $BE9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfeb2 $BEA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfeba $BEAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfec2 $BEB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfeca $BEBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfed2 $BEC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfeda $BECA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfee2 $BED2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfeea $BEDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfef2 $BEE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfefa $BEEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff02 $BEF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0xff0a $BEFA FF FF FF FF FF FF        ;
LBF00                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff10 $BF00 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff18 $BF08 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff20 $BF10 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff28 $BF18 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff30 $BF20 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff38 $BF28 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff40 $BF30 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff48 $BF38 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff50 $BF40 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff58 $BF48 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff60 $BF50 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff68 $BF58 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff70 $BF60 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xff78 $BF68 FF FF FF FF FF FF FF FF  ;
; ---------------------------------------------------------------------------- ;
bank3_codeEND                                                                  ;
sei                                    ; 0xff80 $BF70 78                       ;
cld                                    ; 0xff81 $BF71 D8                       ;
ldx      #$00                          ; 0xff82 $BF72 A2 00                    ; X = 00
stx      $2000                         ; 0xff84 $BF74 8E 00 20                 ;
inx                                    ; 0xff87 $BF77 E8                       ;
LBF78                                                                          ;
lda      $2002                         ; 0xff88 $BF78 AD 02 20                 ;
bpl      LBF78                         ; 0xff8b $BF7B 10 FB                    ;
dex                                    ; 0xff8d $BF7D CA                       ;
beq      LBF78                         ; 0xff8e $BF7E F0 F8                    ;
txs                                    ; 0xff90 $BF80 9A                       ;
stx      bank3_Pointer_table_for_Background_Areas_Data; 0xff91 $BF81 8E 00 80  ;
stx      bank3_Area_Data_Towns4        ; 0xff94 $BF84 8E 00 A0                 ;
stx      bank7_PowerON_code            ; 0xff97 $BF87 8E 00 C0                 ;
stx      LE000                         ; 0xff9a $BF8A 8E 00 E0                 ;
lda      #$0F                          ; 0xff9d $BF8D A9 0F                    ; A = 0F
jsr      LBF9D                         ; 0xff9f $BF8F 20 9D BF                 ;
jsr      LBFB1                         ; 0xffa2 $BF92 20 B1 BF                 ;
lda      #$07                          ; 0xffa5 $BF95 A9 07                    ; A = 07
jsr      LBFCC                         ; 0xffa7 $BF97 20 CC BF                 ;
jmp      bank7_PowerON_code            ; 0xffaa $BF9A 4C 00 C0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBF9D                                                                          ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0xffad $BF9D 8D 00 80  ;
lsr                                    ; 0xffb0 $BFA0 4A                       ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0xffb1 $BFA1 8D 00 80  ;
lsr                                    ; 0xffb4 $BFA4 4A                       ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0xffb5 $BFA5 8D 00 80  ;
lsr                                    ; 0xffb8 $BFA8 4A                       ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0xffb9 $BFA9 8D 00 80  ;
lsr                                    ; 0xffbc $BFAC 4A                       ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0xffbd $BFAD 8D 00 80  ;
rts                                    ; 0xffc0 $BFB0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBFB1                                                                          ;
sta      bank3_Area_Data_Towns4        ; 0xffc1 $BFB1 8D 00 A0                 ;
lsr                                    ; 0xffc4 $BFB4 4A                       ;
sta      bank3_Area_Data_Towns4        ; 0xffc5 $BFB5 8D 00 A0                 ;
lsr                                    ; 0xffc8 $BFB8 4A                       ;
sta      bank3_Area_Data_Towns4        ; 0xffc9 $BFB9 8D 00 A0                 ;
lsr                                    ; 0xffcc $BFBC 4A                       ;
sta      bank3_Area_Data_Towns4        ; 0xffcd $BFBD 8D 00 A0                 ;
lsr                                    ; 0xffd0 $BFC0 4A                       ;
sta      bank3_Area_Data_Towns4        ; 0xffd1 $BFC1 8D 00 A0                 ;
rts                                    ; 0xffd4 $BFC4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$00                          ; 0xffd5 $BFC5 A9 00                    ; A = 00
beq      LBFCC                         ; 0xffd7 $BFC7 F0 03                    ;
lda      $0769                         ; 0xffd9 $BFC9 AD 69 07                 ;; Bank to switch to (other than 0 or 7)
LBFCC                                                                          ;
sta      LE000                         ; 0xffdc $BFCC 8D 00 E0                 ;
lsr                                    ; 0xffdf $BFCF 4A                       ;
sta      LE000                         ; 0xffe0 $BFD0 8D 00 E0                 ;
lsr                                    ; 0xffe3 $BFD3 4A                       ;
sta      LE000                         ; 0xffe4 $BFD4 8D 00 E0                 ;
lsr                                    ; 0xffe7 $BFD7 4A                       ;
sta      LE000                         ; 0xffe8 $BFD8 8D 00 E0                 ;
lsr                                    ; 0xffeb $BFDB 4A                       ;
sta      LE000                         ; 0xffec $BFDC 8D 00 E0                 ;
rts                                    ; 0xffef $BFDF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank3_UNUSED_BFE0                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfff0 $BFE0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0xfff8 $BFE8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x10000 $BFF0 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF                        ; 0x10008 $BFF8 FF FF                   ;
bank3_tableEND                                                                 ;
.byt    $7B,$C0,$70,$BF,$F0,$FF        ; 0x1000a $BFFA 7B C0 70 BF F0 FF       ;
; ---------------------------------------------------------------------------- ;
bank7_PowerON_code                                                             ;
lda      #$00                          ; 0x1c010 $C000 A9 00                   ; A = 00
sta      $2001                         ; 0x1c012 $C002 8D 01 20                ;
sta      $2000                         ; 0x1c015 $C005 8D 00 20                ;
lda      #$05                          ; 0x1c018 $C008 A9 05                   ;;A = #$05 0000_0101
jsr      LFFCC                         ; 0x1c01a $C00A 20 CC FF                ; Load Bank 5
jsr      LA6A0                         ; 0x1c01d $C00D 20 A0 A6                ;
LC010                                                                          ;
lda      $0736                         ; 0x1c020 $C010 AD 36 07                ; Game Mode
cmp      #$08                          ; 0x1c023 $C013 C9 08                   ;
beq      LC01B                         ; 0x1c025 $C015 F0 04                   ;
cmp      #$14                          ; 0x1c027 $C017 C9 14                   ;
bne      LC010                         ; 0x1c029 $C019 D0 F5                   ;
LC01B                                                                          ;
lda      $076C                         ; 0x1c02b $C01B AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
cmp      #$01                          ; 0x1c02e $C01E C9 01                   ;
bne      LC010                         ; 0x1c030 $C020 D0 EE                   ;
lda      #$40                          ; 0x1c032 $C022 A9 40                   ;;A = #$40 0100_0000
sta      $0100                         ; 0x1c034 $C024 8D 00 01                ;
jsr      bank7_code13                  ; 0x1c037 $C027 20 CB C4                ;
lda      #$C0                          ; 0x1c03a $C02A A9 C0                   ;;A = #$c0 1100_0000
sta      $0100                         ; 0x1c03c $C02C 8D 00 01                ;
jmp      LC010                         ; 0x1c03f $C02F 4C 10 C0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$06                          ; 0x1c042 $C032 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c044 $C034 20 CC FF                ;
jsr      bank3_Pointer_table_for_Background_Areas_Data; 0x1c047 $C037 20 00 80 ;
jmp      LC388                         ; 0x1c04a $C03A 4C 88 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_PPU_Adresses_according_to_725_as_index                                   ;
.word    L0302                         ; 0x1c04d $C03D 02 03                   ;; Used when writing text to screen
.word    L0363                         ; 0x1c04f $C03F 63 03                   ;
.word    L03A4                         ; 0x1c051 $C041 A4 03                   ;
.word    bank7_Table_for_some_Palettes ; 0x1c053 $C043 BD D0                   ;Some Palettes
.word    L696C                         ; 0x1c055 $C045 6C 69                   ;
.word    L80C9                         ; 0x1c057 $C047 C9 80                   ;Game Over Palettes
.word    LA836                         ; 0x1c059 $C049 36 A8                   ;Some Palettes
.word    bank7_Tables_for_some_PPU_Command_Data; 0x1c05b $C04B D1 D0           ;Some PPU Commands			;status bar text at top of screen ATTACK MAGIC LIFE ETC			;1C05B	is D1D0 ($D0D1)
.word    bank7_Continue_Save_Screen_Tile_Mappings; 0x1c05d $C04D CB FD         ;
.word    bank3_Pointer_table_for_Background_Areas_Data; 0x1c05f $C04F 00 80    ;Game Over PPU Macros
.word    bank7_Table_for_Overworld_Palettes; 0x1c061 $C051 58 C4               ;Overworld Palettes
.word    bank7_PPU_Macros_for_Hidden_Palace; 0x1c063 $C053 6A DF               ;
.word    bank7_table9                  ; 0x1c065 $C055 49 C4                   ;
.word    bank7_table10                 ; 0x1c067 $C057 7C C4                   ;
.word    LC490                         ; 0x1c069 $C059 90 C4                   ;
.word    LDCD3                         ; 0x1c06b $C05B D3 DC                   ;
; ---------------------------------------------------------------------------- ;
bank7_table0                                                                   ;
.byt    $00,$61,$A2                    ; 0x1c06d $C05D 00 61 A2                ;Memory Addresses Offsets (from 301) for PPU Macro Commands ?
; ---------------------------------------------------------------------------- ;
bank7_code1                                                                    ;
pha                                    ; 0x1c070 $C060 48                      ;
txa                                    ; 0x1c071 $C061 8A                      ;
pha                                    ; 0x1c072 $C062 48                      ;
tya                                    ; 0x1c073 $C063 98                      ;
pha                                    ; 0x1c074 $C064 48                      ;
lda      #$06                          ; 0x1c075 $C065 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c077 $C067 20 CC FF                ; Load Bank 6
jsr      L9000                         ; 0x1c07a $C06A 20 00 90                ; Play Sounds
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c07d $C06D 20 C9 FF                ; Load Bank X at 0x8000 (X = $0769)
pla                                    ; 0x1c080 $C070 68                      ;
tay                                    ; 0x1c081 $C071 A8                      ;
pla                                    ; 0x1c082 $C072 68                      ;
tax                                    ; 0x1c083 $C073 AA                      ;
pla                                    ; 0x1c084 $C074 68                      ;
plp                                    ; 0x1c085 $C075 28                      ;
rti                                    ; 0x1c086 $C076 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC077                                                                          ;
plp                                    ; 0x1c087 $C077 28                      ;
jmp      LA610                         ; 0x1c088 $C078 4C 10 A6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_NMI_Entry_Point                                                          ;
php                                    ; 0x1c08b $C07B 08                      ;
bit      $0100                         ; 0x1c08c $C07C 2C 00 01                ;
bpl      bank7_code1                   ; 0x1c08f $C07F 10 DF                   ; Switch to Bank 6, Play Sounds
bvc      LC077                         ; 0x1c091 $C081 50 F4                   ;
plp                                    ; 0x1c093 $C083 28                      ;
pha                                    ; 0x1c094 $C084 48                      ;
lda      $FF                           ; 0x1c095 $C085 A5 FF                   ;; Sprite Bank ?
and      #$7C                          ; 0x1c097 $C087 29 7C                   ; keep bits .xxx xx..
ora      $0747                         ; 0x1c099 $C089 0D 47 07                ;
sta      $FF                           ; 0x1c09c $C08C 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c09e $C08E 8D 00 20                ; PPU Control Register 1
lda      $0727                         ; 0x1c0a1 $C091 AD 27 07                ;
beq      LC096                         ; 0x1c0a4 $C094 F0 00                   ; useless branching
LC096                                                                          ;
ldy      #$00                          ; 0x1c0a6 $C096 A0 00                   ; Y = 00
lda      $FE                           ; 0x1c0a8 $C098 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
and      #$E0                          ; 0x1c0aa $C09A 29 E0                   ; keep bits xxx. ....
ldy      $0726                         ; 0x1c0ac $C09C AC 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
bne      LC0A8                         ; 0x1c0af $C09F D0 07                   ;
lda      $FE                           ; 0x1c0b1 $C0A1 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
ora      #$18                          ; 0x1c0b3 $C0A3 09 18                   ; set bits  ...x x...
ora      $0768                         ; 0x1c0b5 $C0A5 0D 68 07                ;;makes weird ppu effect
LC0A8                                                                          ;
sta      $FE                           ; 0x1c0b8 $C0A8 85 FE                   ;;does interesting effects when changed, perhaps involves palette? 
and      #$E1                          ; 0x1c0ba $C0AA 29 E1                   ; keep bits xxx. ...x
sta      $2001                         ; 0x1c0bc $C0AC 8D 01 20                ; PPU Control Register 2
ldx      $2002                         ; 0x1c0bf $C0AF AE 02 20                ; PPU Status Register
lda      #$00                          ; 0x1c0c2 $C0B2 A9 00                   ; A = 00
sta      $2005                         ; 0x1c0c4 $C0B4 8D 05 20                ; Screen Scroll Offsets
sta      $2005                         ; 0x1c0c7 $C0B7 8D 05 20                ;
sta      $2003                         ; 0x1c0ca $C0BA 8D 03 20                ; Sprite Memory Address
lda      #$02                          ; 0x1c0cd $C0BD A9 02                   ; A = 02
sta      $4014                         ; 0x1c0cf $C0BF 8D 14 40                ; DMA Sprite Memory ($100 * 02)
lda      $07AE                         ; 0x1c0d2 $C0C2 AD AE 07                ;
beq      LC0CA                         ; 0x1c0d5 $C0C5 F0 03                   ;
jsr      bank7_code52                  ; 0x1c0d7 $C0C7 20 82 FD                ; related to palette loading (side view)
LC0CA                                                                          ;
lda      $0725                         ; 0x1c0da $C0CA AD 25 07                ;; PPU Macro Selector	
asl                                    ; 0x1c0dd $C0CD 0A                      ;
tax                                    ; 0x1c0de $C0CE AA                      ;
lda      bank7_PPU_Adresses_according_to_725_as_index,x; 0x1c0df $C0CF BD 3D C0; refer to table at $1C03D
sta      L0000                         ; 0x1c0e2 $C0D2 85 00                   ;
lda      bank7_PPU_Adresses_according_to_725_as_index+$01,x; 0x1c0e4 $C0D4 BD 3E C0; refer to table at $1C03D
sta      $01                           ; 0x1c0e7 $C0D7 85 01                   ;
jsr      LD2EC                         ; 0x1c0e9 $C0D9 20 EC D2                ;
lda      #$3F                          ; 0x1c0ec $C0DC A9 3F                   ; A = 3F
sta      $2006                         ; 0x1c0ee $C0DE 8D 06 20                ; PPU Memory Address
ldy      #$00                          ; 0x1c0f1 $C0E1 A0 00                   ; Y = 00
sty      $2006                         ; 0x1c0f3 $C0E3 8C 06 20                ; PPU Memory Address
sty      $2006                         ; 0x1c0f6 $C0E6 8C 06 20                ; PPU Memory Address
sty      $2006                         ; 0x1c0f9 $C0E9 8C 06 20                ; PPU Memory Address
lda      $0768                         ; 0x1c0fc $C0EC AD 68 07                ;;makes weird ppu effect
bne      LC103                         ; 0x1c0ff $C0EF D0 12                   ;
lda      $FF                           ; 0x1c101 $C0F1 A5 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c103 $C0F3 8D 00 20                ; PPU Control Register 1
ldx      $2002                         ; 0x1c106 $C0F6 AE 02 20                ; PPU Status Register
lda      $FD                           ; 0x1c109 $C0F9 A5 FD                   ;
sta      $2005                         ; 0x1c10b $C0FB 8D 05 20                ; Screen Scroll Offsets
lda      $FC                           ; 0x1c10e $C0FE A5 FC                   ;
sta      $2005                         ; 0x1c110 $C100 8D 05 20                ; Screen Scroll Offsets
LC103                                                                          ;
lda      $FE                           ; 0x1c113 $C103 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
sta      $2001                         ; 0x1c115 $C105 8D 01 20                ; PPU Control Register 2
ldx      $0725                         ; 0x1c118 $C108 AE 25 07                ;; PPU Macro Selector	
beq      LC11C                         ; 0x1c11b $C10B F0 0F                   ;
iny                                    ; 0x1c11d $C10D C8                      ;
cpx      #$01                          ; 0x1c11e $C10E E0 01                   ;
beq      LC119                         ; 0x1c120 $C110 F0 07                   ;
iny                                    ; 0x1c122 $C112 C8                      ;
lda      #$00                          ; 0x1c123 $C113 A9 00                   ; A = 00
cpx      #$02                          ; 0x1c125 $C115 E0 02                   ;
bne      LC12C                         ; 0x1c127 $C117 D0 13                   ;
LC119                                                                          ;
dec      $0725                         ; 0x1c129 $C119 CE 25 07                ;; PPU Macro Selector	
LC11C                                                                          ;
ldx      bank7_table0,y                ; 0x1c12c $C11C BE 5D C0                ;
lda      #$00                          ; 0x1c12f $C11F A9 00                   ; A = 00
sta      $0301,x                       ; 0x1c131 $C121 9D 01 03                ;
lda      #$FF                          ; 0x1c134 $C124 A9 FF                   ; A = FF
sta      L0302,x                       ; 0x1c136 $C126 9D 02 03                ;
lda      $0725                         ; 0x1c139 $C129 AD 25 07                ;; PPU Macro Selector	
LC12C                                                                          ;
sta      $0725                         ; 0x1c13c $C12C 8D 25 07                ;; PPU Macro Selector	
jsr      bank7_related_to_sound        ; 0x1c13f $C12F 20 C1 C1                ; related to sound
lda      $F7                           ; 0x1c142 $C132 A5 F7                   ; Controller 1 Buttons Held
sta      $0744                         ; 0x1c144 $C134 8D 44 07                ;; Controller 1 Input; Controller 1 Buttons Held
jsr      bank7_Controllers_Input       ; 0x1c147 $C137 20 46 D3                ; Controllers Input
lda      $DE                           ; 0x1c14a $C13A A5 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
beq      LC146                         ; 0x1c14c $C13C F0 08                   ;
lda      $0763                         ; 0x1c14e $C13E AD 63 07                ;; Counter for Big Door in Hidden Kasuto
ora      $0764                         ; 0x1c151 $C141 0D 64 07                ;; Counter for Big Door in Hidden Kasuto
bne      LC14E                         ; 0x1c154 $C144 D0 08                   ;
LC146                                                                          ;
lda      $0729                         ; 0x1c156 $C146 AD 29 07                ;
beq      LC14E                         ; 0x1c159 $C149 F0 03                   ;
jsr      bank7_related_to_Pause_Pane_routine; 0x1c15b $C14B 20 CD C1           ; related to Pause Pane routine
LC14E                                                                          ;
lda      $074C                         ; 0x1c15e $C14E AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
beq      LC164                         ; 0x1c161 $C151 F0 11                   ;
cmp      #$02                          ; 0x1c163 $C153 C9 02                   ;
bcc      LC1A8                         ; 0x1c165 $C155 90 51                   ;
lda      $0524                         ; 0x1c167 $C157 AD 24 05                ; Routine Index
cmp      #$03                          ; 0x1c16a $C15A C9 03                   ;
bcc      LC169                         ; 0x1c16c $C15C 90 0B                   ;
cmp      #$07                          ; 0x1c16e $C15E C9 07                   ;
bcs      LC169                         ; 0x1c170 $C160 B0 07                   ;
bcc      LC1A8                         ; 0x1c172 $C162 90 44                   ;
LC164                                                                          ;
lda      $0524                         ; 0x1c174 $C164 AD 24 05                ; Routine Index
bne      LC1A8                         ; 0x1c177 $C167 D0 3F                   ;
LC169                                                                          ;
ldx      #$0C                          ; 0x1c179 $C169 A2 0C                   ; X = 0C
dec      $0500                         ; 0x1c17b $C16B CE 00 05                ;; Timer frequency		;?Invincibility after stun counter (counts down, nonzero = invincible)
bpl      LC177                         ; 0x1c17e $C16E 10 07                   ;
lda      #$14                          ; 0x1c180 $C170 A9 14                   ; A = 14
sta      $0500                         ; 0x1c182 $C172 8D 00 05                ;; Timer frequency		;?Invincibility after stun counter (counts down, nonzero = invincible)
ldx      #$18                          ; 0x1c185 $C175 A2 18                   ; X = 18
LC177                                                                          ;
lda      $0501,x                       ; 0x1c187 $C177 BD 01 05                ;
beq      LC17F                         ; 0x1c18a $C17A F0 03                   ;
dec      $0501,x                       ; 0x1c18c $C17C DE 01 05                ; decrease all 5xx timers (if > 0)
LC17F                                                                          ;
dex                                    ; 0x1c18f $C17F CA                      ;
bpl      LC177                         ; 0x1c190 $C180 10 F5                   ;
inc       !$12                         ; 0x1c192 $C182 EE 12 00                ;
ldx      #$00                          ; 0x1c195 $C185 A2 00                   ; X = 00
ldy      #$09                          ; 0x1c197 $C187 A0 09                   ; Y = 09
lda      $051A                         ; 0x1c199 $C189 AD 1A 05                ;
and      #$02                          ; 0x1c19c $C18C 29 02                   ; keep bits .... ..x.
sta      L0000                         ; 0x1c19e $C18E 85 00                   ;
lda      $051B                         ; 0x1c1a0 $C190 AD 1B 05                ;
and      #$02                          ; 0x1c1a3 $C193 29 02                   ; keep bits .... ..x.
eor      L0000                         ; 0x1c1a5 $C195 45 00                   ;
clc                                    ; 0x1c1a7 $C197 18                      ;
beq      LC19B                         ; 0x1c1a8 $C198 F0 01                   ;
sec                                    ; 0x1c1aa $C19A 38                      ;
LC19B                                                                          ;
ror      $051A,x                       ; 0x1c1ab $C19B 7E 1A 05                ;
inx                                    ; 0x1c1ae $C19E E8                      ;
dey                                    ; 0x1c1af $C19F 88                      ;
bne      LC19B                         ; 0x1c1b0 $C1A0 D0 F9                   ;
jsr      bank7_Remove_All_Sprites_except_Sprite0; 0x1c1b2 $C1A2 20 50 D2       ; Remove All Sprites, except Sprite 0
jsr      LC2CA                         ; 0x1c1b5 $C1A5 20 CA C2                ;
LC1A8                                                                          ;
lda      $2002                         ; 0x1c1b8 $C1A8 AD 02 20                ; PPU Status Register
lda      $FF                           ; 0x1c1bb $C1AB A5 FF                   ;; Sprite Bank ?
ora      #$80                          ; 0x1c1bd $C1AD 09 80                   ; set bits  x... ....
sta      $FF                           ; 0x1c1bf $C1AF 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c1c1 $C1B1 8D 00 20                ; PPU Status Register
pla                                    ; 0x1c1c4 $C1B4 68                      ;
rti                                    ; 0x1c1c5 $C1B5 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_code2                                                                    ;
lda      $07AB                         ; 0x1c1c6 $C1B6 AD AB 07                ;
clc                                    ; 0x1c1c9 $C1B9 18                      ;
adc      #$D8                          ; 0x1c1ca $C1BA 69 D8                   ;
sta      $07AB                         ; 0x1c1cc $C1BC 8D AB 07                ;
bcc      LC1CC                         ; 0x1c1cf $C1BF 90 0B                   ;
bank7_related_to_sound                                                         ;
lda      #$06                          ; 0x1c1d1 $C1C1 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c1d3 $C1C3 20 CC FF                ; bank switch routine
jsr      L9000                         ; 0x1c1d6 $C1C6 20 00 90                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1c1d9 $C1C9 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1CC                                                                          ;
rts                                    ; 0x1c1dc $C1CC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_related_to_Pause_Pane_routine                                            ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c1dd $C1CD 20 C5 FF                ; Load Bank 0
lda      $0736                         ; 0x1c1e0 $C1D0 AD 36 07                ; Game Mode
cmp      #$0B                          ; 0x1c1e3 $C1D3 C9 0B                   ; 0B = sidescroll mode
bne      LC220                         ; 0x1c1e5 $C1D5 D0 49                   ;
jsr      LC1DD                         ; 0x1c1e7 $C1D7 20 DD C1                ;
jmp      bank7_Load_Bank_769_at_0x8000 ; 0x1c1ea $C1DA 4C C9 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1DD                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1c1ed $C1DD 20 30 CF; Region Code * 5 + World Code
cmp      #$01                          ; 0x1c1f0 $C1E0 C9 01                   ;
bne      LC206                         ; 0x1c1f2 $C1E2 D0 22                   ;
lda      $056B                         ; 0x1c1f4 $C1E4 AD 6B 05                ; Town Code
cmp      #$02                          ; 0x1c1f7 $C1E7 C9 02                   ;
bne      LC206                         ; 0x1c1f9 $C1E9 D0 1B                   ;
lda      $0561                         ; 0x1c1fb $C1EB AD 61 05                ; Area Code
cmp      #$06                          ; 0x1c1fe $C1EE C9 06                   ;
bne      LC206                         ; 0x1c200 $C1F0 D0 14                   ;
lda      $3B                           ; 0x1c202 $C1F2 A5 3B                   ; Link's X Position (high byte)
cmp      #$02                          ; 0x1c204 $C1F4 C9 02                   ;
bcc      LC206                         ; 0x1c206 $C1F6 90 0E                   ;
lda      $0796                         ; 0x1c208 $C1F8 AD 96 07                ; Down/Up Techs (and other things)
lsr                                    ; 0x1c20b $C1FB 4A                      ;
bcc      LC206                         ; 0x1c20c $C1FC 90 08                   ;
lda      #$01                          ; 0x1c20e $C1FE A9 01                   ; A = 01
sta      $0524                         ; 0x1c210 $C200 8D 24 05                ; Routine Index
jmp      LA7AB                         ; 0x1c213 $C203 4C AB A7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC206                                                                          ;
lda      $0524                         ; 0x1c216 $C206 AD 24 05                ; Routine Index
beq      LC218                         ; 0x1c219 $C209 F0 0D                   ;
lda      $074C                         ; 0x1c21b $C20B AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cmp      #$02                          ; 0x1c21e $C20E C9 02                   ;
bcs      LC218                         ; 0x1c220 $C210 B0 06                   ;
jsr      bank7_Remove_All_Sprites_except_Sprite0; 0x1c222 $C212 20 50 D2       ; Remove All Sprites, except Sprite 0
jsr      L968D                         ; 0x1c225 $C215 20 8D 96                ;
LC218                                                                          ;
lda      $074C                         ; 0x1c228 $C218 AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
bne      bank7_code3                   ; 0x1c22b $C21B D0 16                   ;
jmp      L9D91                         ; 0x1c22d $C21D 4C 91 9D                ;jump from bank 7 to bank 0 for controller input, but this only occurs for side scroll mode
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC220                                                                          ;
lda      $0524                         ; 0x1c230 $C220 AD 24 05                ; Routine Index
ldy      $0567                         ; 0x1c233 $C223 AC 67 05                ; Related to Flute in Overworld
bne      LC23A                         ; 0x1c236 $C226 D0 12                   ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c238 $C228 20 85 D3;
bank7_pointer_table0                                                           ;
.word    LA256                         ; 0x1c23b $C22B 56 A2                   ;
.word    LA30F                         ; 0x1c23d $C22D 0F A3                   ;
.word    LA19C                         ; 0x1c23f $C22F 9C A1                   ;
.word    LA334                         ; 0x1c241 $C231 34 A3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code3                                                                    ;
cmp      #$02                          ; 0x1c243 $C233 C9 02                   ;
bcs      bank7_pointer_table1+$08      ; 0x1c245 $C235 B0 0E                   ;
jmp      L9D54                         ; 0x1c247 $C237 4C 54 9D                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC23A                                                                          ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c24a $C23A 20 85 D3;
bank7_pointer_table1                                                           ;
.word    LA199                         ; 0x1c24d $C23D 99 A1                   ;
.word    LA315                         ; 0x1c24f $C23F 15 A3                   ;
.word    LA329                         ; 0x1c251 $C241 29 A3                   ;
.word    LA338                         ; 0x1c253 $C243 38 A3                   ;
.word    L05C9                         ; 0x1c255 $C245 C9 05                   ;
.word    LD7B0                         ; 0x1c257 $C247 B0 D7                   ;
; ---------------------------------------------------------------------------- ;
bank7_code4                                                                    ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c259 $C249 20 C9 FF                ; Load Bank $0769
jmp      bank3_code20                  ; 0x1c25c $C24C 4C 82 B0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c25f $C24F 20 C9 FF                ; Load Bank $0769
jsr      LC258                         ; 0x1c262 $C252 20 58 C2                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1c265 $C255 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC258                                                                          ;
lda      (L000E),y                     ; 0x1c268 $C258 B1 0E                   ;
sta      $053E,x                       ; 0x1c26a $C25A 9D 3E 05                ;; Tiles for Dialog Box Rows
iny                                    ; 0x1c26d $C25D C8                      ;
lda      (L000E),y                     ; 0x1c26e $C25E B1 0E                   ;
sta      $054C,x                       ; 0x1c270 $C260 9D 4C 05                ;; Tiles for Dialog Box Rows
inx                                    ; 0x1c273 $C263 E8                      ;
rts                                    ; 0x1c274 $C264 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Pointer_table_for_Item_Presence                                          ;
.word    L0600                         ; 0x1c275 $C265 00 06                   ;West Hyrule
.word    L0660                         ; 0x1c277 $C267 60 06                   ;Towns in West Hyrule
.word    L0660                         ; 0x1c279 $C269 60 06                   ;
.word    L0680                         ; 0x1c27b $C26B 80 06                   ;Palace 1 / Palace 2
.word    L06A0                         ; 0x1c27d $C26D A0 06                   ;Palace 3
.word    L0620                         ; 0x1c27f $C26F 20 06                   ;Death Mountain / Maze Island
.word    L0660                         ; 0x1c281 $C271 60 06                   ;
.word    L0660                         ; 0x1c283 $C273 60 06                   ;
.word    L0680                         ; 0x1c285 $C275 80 06                   ;
.word    L06A0                         ; 0x1c287 $C277 A0 06                   ;Palace 4
.word    L0640                         ; 0x1c289 $C279 40 06                   ;East Hyrule
.word    L0660                         ; 0x1c28b $C27B 60 06                   ;
.word    L0660                         ; 0x1c28d $C27D 60 06                   ;Towns in East Hyrule
.word    L0680                         ; 0x1c28f $C27F 80 06                   ;Palace 5
.word    L06A0                         ; 0x1c291 $C281 A0 06                   ;Palace 6
.word    L06C0                         ; 0x1c293 $C283 C0 06                   ;Palace 7
; ---------------------------------------------------------------------------- ;
bank7_Tables_for_Various_Bitmasks1                                             ;
.byt    $F7,$FB,$FD,$FE                ; 0x1c295 $C285 F7 FB FD FE             ;
LC289                                                                          ;
.byt    $7F,$BF,$DF,$EF                ; 0x1c299 $C289 7F BF DF EF             ;
LC28D                                                                          ;
.byt    $08,$04,$02,$01                ; 0x1c29d $C28D 08 04 02 01             ;
LC291                                                                          ;
.byt    $80,$40,$20,$10                ; 0x1c2a1 $C291 80 40 20 10             ;
; ---------------------------------------------------------------------------- ;
Set_Item_RAM_bit_to_0__Bits_0_3                                                ;
jsr      LC2B3                         ; 0x1c2a5 $C295 20 B3 C2                ;
bcc      Set_Item_RAM_bit_to_0__Bits_4_7; 0x1c2a8 $C298 90 06                  ;
and      bank7_Tables_for_Various_Bitmasks1,x; 0x1c2aa $C29A 3D 85 C2          ;
sta      (L0000),y                     ; 0x1c2ad $C29D 91 00                   ;
rts                                    ; 0x1c2af $C29F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Set_Item_RAM_bit_to_0__Bits_4_7                                                ;
and      LC289,x                       ; 0x1c2b0 $C2A0 3D 89 C2                ;
sta      (L0000),y                     ; 0x1c2b3 $C2A3 91 00                   ;
rts                                    ; 0x1c2b5 $C2A5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2A6                                                                          ;
jsr      LC2B3                         ; 0x1c2b6 $C2A6 20 B3 C2                ;
bcc      LC2AF                         ; 0x1c2b9 $C2A9 90 04                   ;
and      LC28D,x                       ; 0x1c2bb $C2AB 3D 8D C2                ;
rts                                    ; 0x1c2be $C2AE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2AF                                                                          ;
and      LC291,x                       ; 0x1c2bf $C2AF 3D 91 C2                ;
rts                                    ; 0x1c2c2 $C2B2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2B3                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1c2c3 $C2B3 20 30 CF; Region Code * 5 + World Code
asl                                    ; 0x1c2c6 $C2B6 0A                      ;
tay                                    ; 0x1c2c7 $C2B7 A8                      ;
lda      bank7_Pointer_table_for_Item_Presence,y; 0x1c2c8 $C2B8 B9 65 C2       ;
sta      L0000                         ; 0x1c2cb $C2BB 85 00                   ;
lda      bank7_Pointer_table_for_Item_Presence+$01,y; 0x1c2cd $C2BD B9 66 C2   ;
sta      $01                           ; 0x1c2d0 $C2C0 85 01                   ;
lda      $0561                         ; 0x1c2d2 $C2C2 AD 61 05                ; Area Code
lsr                                    ; 0x1c2d5 $C2C5 4A                      ; 4 bits per Area for Items
tay                                    ; 0x1c2d6 $C2C6 A8                      ;
lda      (L0000),y                     ; 0x1c2d7 $C2C7 B1 00                   ;
rts                                    ; 0x1c2d9 $C2C9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2CA                                                                          ;
ldy      #$00                          ; 0x1c2da $C2CA A0 00                   ; Y = 00
sty      $0727                         ; 0x1c2dc $C2CC 8C 27 07                ;
sty      $0729                         ; 0x1c2df $C2CF 8C 29 07                ;
jsr      LD174                         ; 0x1c2e2 $C2D2 20 74 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c2e5 $C2D5 20 85 D3;
bank7_pointer_table2                                                           ;
.word    LC34F                         ; 0x1c2e8 $C2D8 4F C3                   ;
.word    bank7_code5                   ; 0x1c2ea $C2DA E6 C2                   ;
.word    bank7_code6                   ; 0x1c2ec $C2DC 1E C3                   ;
.word    LCB27                         ; 0x1c2ee $C2DE 27 CB                   ;
.word    LC364                         ; 0x1c2f0 $C2E0 64 C3                   ;
.word    LC38D                         ; 0x1c2f2 $C2E2 8D C3                   ;
.word    LC410                         ; 0x1c2f4 $C2E4 10 C4                   ;
; ---------------------------------------------------------------------------- ;
bank7_code5                                                                    ;
jsr      LD168                         ; 0x1c2f6 $C2E6 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c2f9 $C2E9 20 85 D3;
bank7_pointer_table__game_mode                                                 ;
;Probably Bank 0 for addresses in the 8000-BFFF range                          ;
.word    bank7_code18                  ; 0x1c2fc $C2EC 40 CD                   ; 00	Load ROM bank, Overworld data, enemy data, etc.  
.word    bank7_go_outside              ; 0x1c2fe $C2EE B3 CC                   ; 01	Overworld Out of Area ?
.word    L8149                         ; 0x1c300 $C2F0 49 81                   ; 02	Overworld Init
.word    L87F3                         ; 0x1c302 $C2F2 F3 87                   ; 03	Overworld Load Map Tiles
.word    LC72D                         ; 0x1c304 $C2F4 2D C7                   ; 04	Set $0726 to 0 and Increment Game Mode
.word    L8558                         ; 0x1c306 $C2F6 58 85                   ; 05	Overworld Main
.word    bank7_code17                  ; 0x1c308 $C2F8 35 CB                   ; 06	Load Side View Area
.word    bank7_code12                  ; 0x1c30a $C2FA A4 C4                   ; 07	Set Routine Index to 0 and Increment Game Mode
.word    LC6EE                         ; 0x1c30c $C2FC EE C6                   ; 08	RTS
.word    LCF3C                         ; 0x1c30e $C2FE 3C CF                   ; 09	Side View Area Drawing Init
.word    LC62F                         ; 0x1c310 $C300 2F C6                   ; 0A	Switch Graphics Bank, Load Bank 0, Side View Init
.word    bank7_check_if_link_died_0494__linkdeath; 0x1c312 $C302 CC D3         ; 0B	Side View Main
.word    LC68A                         ; 0x1c314 $C304 8A C6                   ; 0C	Fall in Hole Init
.word    LA82A                         ; 0x1c316 $C306 2A A8                   ; 0D	Fall in Hole Tile Setup
.word    bank7_Related_to_Link_falling ; 0x1c318 $C308 EF C6                   ; 0E	Fall in Hole Setup
.word    L8FB7                         ; 0x1c31a $C30A B7 8F                   ; 0F	Fall in Hole Main
.word    bank7_take_side_exit          ; 0x1c31c $C30C 4C CF                   ; 10
.word    bank7_code9                   ; 0x1c31e $C30E 97 C3                   ; 11
.word    LC63E                         ; 0x1c320 $C310 3E C6                   ; 12	Increment Game Mode and execute Game Mode 0C
.word    bank7_take_elevator_exit      ; 0x1c322 $C312 44 C6                   ; 13
.word    LC6EE                         ; 0x1c324 $C314 EE C6                   ; 14	RTS
.word    LC70C                         ; 0x1c326 $C316 0C C7                   ; 15
.word    bank7_take_door_exit          ; 0x1c328 $C318 FC CF                   ; 16	Enter Door in Town
.word    L81B1                         ; 0x1c32a $C31A B1 81                   ; 17	Raft Travel Init
.word    L8207                         ; 0x1c32c $C31C 07 82                   ; 18	Raft Travel
; ---------------------------------------------------------------------------- ;
bank7_code6                                                                    ;
jsr      LD168                         ; 0x1c32e $C31E 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c331 $C321 20 85 D3;
bank7_pointer_table4                                                           ;
.word    LC722                         ; 0x1c334 $C324 22 C7                   ;
.word    LD042                         ; 0x1c336 $C326 42 D0                   ;
.word    flashing_effect__length__when_link_dies; 0x1c338 $C328 1A C7          ;
.word    LC9EE                         ; 0x1c33a $C32A EE C9                   ;
.word    LCA1B                         ; 0x1c33c $C32C 1B CA                   ;
.word    LC722                         ; 0x1c33e $C32E 22 C7                   ;
.word    LD04D                         ; 0x1c340 $C330 4D D0                   ;
.word    LC72D                         ; 0x1c342 $C332 2D C7                   ;
.word    LCF05                         ; 0x1c344 $C334 05 CF                   ; Increment Game Mode by 1
.word    LCA85                         ; 0x1c346 $C336 85 CA                   ;
.word    bank7_code53                  ; 0x1c348 $C338 76 FE                   ;
.word    bank7_code7                   ; 0x1c34a $C33A 3C C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code7                                                                    ;
lda      #$05                          ; 0x1c34c $C33C A9 05                   ; A = 05
jsr      LFFCC                         ; 0x1c34e $C33E 20 CC FF                ;
jsr      bank7_chr_bank_switch__load_A ; 0x1c351 $C341 20 B1 FF                ;
lda      #$80                          ; 0x1c354 $C344 A9 80                   ; A = 80
sta      $0100                         ; 0x1c356 $C346 8D 00 01                ;
lda      #$00                          ; 0x1c359 $C349 A9 00                   ; A = 00
sta      $076C                         ; 0x1c35b $C34B 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x1c35e $C34E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC34F                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c35f $C34F 20 C5 FF                ;
jsr      LD293                         ; 0x1c362 $C352 20 93 D2                ;
jsr      LAA08                         ; 0x1c365 $C355 20 08 AA                ;
bank7_Reset_Number_of_Lives__to_3_                                             ;
lda      #$03                          ; 0x1c368 $C358 A9 03                   ; A = 03
sta      $0700                         ; 0x1c36a $C35A 8D 00 07                ; Current number of lives
inc      $0760                         ; 0x1c36d $C35D EE 60 07                ;
LC360                                                                          ;
inc      $076C                         ; 0x1c370 $C360 EE 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x1c373 $C363 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC364                                                                          ;
jsr      LD168                         ; 0x1c374 $C364 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c377 $C367 20 85 D3;
bank7_pointer_table5                                                           ;
.word    bank7_code8                   ; 0x1c37a $C36A 76 C3                   ;
.word    bank7_code13                  ; 0x1c37c $C36C CB C4                   ;
.word    LCF3C                         ; 0x1c37e $C36E 3C CF                   ;
.word    LC37C                         ; 0x1c380 $C370 7C C3                   ;
.word    LC62F                         ; 0x1c382 $C372 2F C6                   ;
.word    LC382                         ; 0x1c384 $C374 82 C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code8                                                                    ;
jsr      LC388                         ; 0x1c386 $C376 20 88 C3                ;
jmp      L8B50                         ; 0x1c389 $C379 4C 50 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC37C                                                                          ;
jsr      LC388                         ; 0x1c38c $C37C 20 88 C3                ;
jmp      L8B69                         ; 0x1c38f $C37F 4C 69 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC382                                                                          ;
jsr      LC388                         ; 0x1c392 $C382 20 88 C3                ;
jmp      L8BBF                         ; 0x1c395 $C385 4C BF 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC388                                                                          ;
lda      #$05                          ; 0x1c398 $C388 A9 05                   ; A = 05
jmp      LFFCC                         ; 0x1c39a $C38A 4C CC FF                ; Switch to Bank 5
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC38D                                                                          ;
jsr      LD168                         ; 0x1c39d $C38D 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c3a0 $C390 20 85 D3;
bank7_pointer_table6                                                           ;
.word    LCD19                         ; 0x1c3a3 $C393 19 CD                   ;
.word    bank7_code7                   ; 0x1c3a5 $C395 3C C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code9                                                                    ;
jsr      LD15C                         ; 0x1c3a7 $C397 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c3aa $C39A 20 85 D3;
; Pointer table for "Ready..." Screen Routines (4 * 2 = 8 bytes)               ;
; Uses Routine Index $0738                                                     ;
bank7_pointer_table7                                                           ;
.word    bank7_code10                  ; 0x1c3ad $C39D A5 C3                   ;
.word    bank7_Load_Lives_Remaining_Screen; 0x1c3af $C39F B5 C3                ;
.word    LC3E6                         ; 0x1c3b1 $C3A1 E6 C3                   ;
.word    LC3ED                         ; 0x1c3b3 $C3A3 ED C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code10                                                                   ;
lda      #$0C                          ; 0x1c3b5 $C3A5 A9 0C                   ; A = 0C
sta      $0725                         ; 0x1c3b7 $C3A7 8D 25 07                ;; PPU Macro Selector	
lda      #$00                          ; 0x1c3ba $C3AA A9 00                   ; A = 00
sta      $0760                         ; 0x1c3bc $C3AC 8D 60 07                ;
inc      $0726                         ; 0x1c3bf $C3AF EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LC3E2                         ; 0x1c3c2 $C3B2 4C E2 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Load_Lives_Remaining_Screen                                              ;
lda      $076E                         ; 0x1c3c5 $C3B5 AD 6E 07                ; Graphics bank to use
jsr      bank7_chr_bank_switch__load_A ; 0x1c3c8 $C3B8 20 B1 FF                ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1c3cb $C3BB 20 66 D2;
ldy      #$13                          ; 0x1c3ce $C3BE A0 13                   ; Y = 13
LC3C0                                                                          ;
lda      $6958,y                       ; 0x1c3d0 $C3C0 B9 58 69                ;
sta      L0302,y                       ; 0x1c3d3 $C3C3 99 02 03                ;
dey                                    ; 0x1c3d6 $C3C6 88                      ;
bpl      LC3C0                         ; 0x1c3d7 $C3C7 10 F7                   ;
ldy      #$07                          ; 0x1c3d9 $C3C9 A0 07                   ; Y = 07
LC3CB                                                                          ;
lda      $07A1,y                       ; 0x1c3db $C3CB B9 A1 07                ;
sta      $0305,y                       ; 0x1c3de $C3CE 99 05 03                ;
dey                                    ; 0x1c3e1 $C3D1 88                      ;
bpl      LC3CB                         ; 0x1c3e2 $C3D2 10 F7                   ;
lda      $0700                         ; 0x1c3e4 $C3D4 AD 00 07                ; Current number of lives
clc                                    ; 0x1c3e7 $C3D7 18                      ;
adc      #$D0                          ; 0x1c3e8 $C3D8 69 D0                   ;
sta      $0314                         ; 0x1c3ea $C3DA 8D 14 03                ;
lda      #$70                          ; 0x1c3ed $C3DD A9 70                   ; A = 70
sta      $0501                         ; 0x1c3ef $C3DF 8D 01 05                ; delay for screen showing up
LC3E2                                                                          ;
inc      $0738                         ; 0x1c3f2 $C3E2 EE 38 07                ;
rts                                    ; 0x1c3f5 $C3E5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC3E6                                                                          ;
lda      #$00                          ; 0x1c3f6 $C3E6 A9 00                   ; A = 00
sta      $0726                         ; 0x1c3f8 $C3E8 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
beq      LC3E2                         ; 0x1c3fb $C3EB F0 F5                   ;
LC3ED                                                                          ;
lda      $0501                         ; 0x1c3fd $C3ED AD 01 05                ;; Timer
bne      LC3F5                         ; 0x1c400 $C3F0 D0 03                   ;while timer continues, display screen, otherwise increment game mode to resume gameplay
inc      $0736                         ; 0x1c402 $C3F2 EE 36 07                ;; Game Mode ; screen intro type
LC3F5                                                                          ;
lda      #$50                          ; 0x1c405 $C3F5 A9 50                   ; A = 50
sta      $29                           ; 0x1c407 $C3F7 85 29                   ; Link's Y Position (on "Get Ready" screen)
lda      #$78                          ; 0x1c409 $C3F9 A9 78                   ; A = 78
sta      $CC                           ; 0x1c40b $C3FB 85 CC                   ; Link's X Position on Screen
lda      #$03                          ; 0x1c40d $C3FD A9 03                   ; A = 03
sta      $80                           ; 0x1c40f $C3FF 85 80                   ; Current Animation Frame for Link
lsr                                    ; 0x1c411 $C401 4A                      ;
sta      $9F                           ; 0x1c412 $C402 85 9F                   ; Direction arrow pressed (1 = right, 2 = left)
lsr                                    ; 0x1c414 $C404 4A                      ;
sta      $C8                           ; 0x1c415 $C405 85 C8                   ;; go outside: set $c8 to 3
sta      $13                           ; 0x1c417 $C407 85 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      $11                           ; 0x1c419 $C409 85 11                   ;
sta      $90                           ; 0x1c41b $C40B 85 90                   ;
jmp      LEC02                         ; 0x1c41d $C40D 4C 02 EC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC410                                                                          ;
jsr      LD15C                         ; 0x1c420 $C410 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c423 $C413 20 85 D3;
bank7_pointer_table8                                                           ;
.word    bank7_code10                  ; 0x1c426 $C416 A5 C3                   ;
.word    bank7_Load_Lives_Remaining_Screen; 0x1c428 $C418 B5 C3                ;
.word    LC3E6                         ; 0x1c42a $C41A E6 C3                   ;
.word    bank7_code11                  ; 0x1c42c $C41C 1E C4                   ;
; ---------------------------------------------------------------------------- ;
bank7_code11                                                                   ;
lda      $0501                         ; 0x1c42e $C41E AD 01 05                ;; Timer
bne      LC446                         ; 0x1c431 $C421 D0 23                   ;
lda      #$02                          ; 0x1c433 $C423 A9 02                   ; A = 02
ldy      $0707                         ; 0x1c435 $C425 AC 07 07                ; Current World
beq      LC435                         ; 0x1c438 $C428 F0 0B                   ;
cpy      #$03                          ; 0x1c43a $C42A C0 03                   ;
bcs      LC436                         ; 0x1c43c $C42C B0 08                   ;
ldy      $056B                         ; 0x1c43e $C42E AC 6B 05                ;; Town Code	;used by wise man to pick magic to give?
cpy      #$07                          ; 0x1c441 $C431 C0 07                   ;
bne      LC436                         ; 0x1c443 $C433 D0 01                   ;
LC435                                                                          ;
asl                                    ; 0x1c445 $C435 0A                      ;
LC436                                                                          ;
sta      $075F                         ; 0x1c446 $C436 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
lda      #$01                          ; 0x1c449 $C439 A9 01                   ; A = 01
sta      $076C                         ; 0x1c44b $C43B 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
sta      $076D                         ; 0x1c44e $C43E 8D 6D 07                ;
lda      #$07                          ; 0x1c451 $C441 A9 07                   ; A = 07
sta      $0736                         ; 0x1c453 $C443 8D 36 07                ; Game Mode
LC446                                                                          ;
jmp      LC3F5                         ; 0x1c456 $C446 4C F5 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table9                                                                   ;
.byt    $3F,$00,$04,$0F,$30,$12,$16    ; 0x1c459 $C449 3F 00 04 0F 30 12 16    ;PPU Address 3F00, transfer 4 bytes
                                                                               ;
.byt    $3F,$10,$04,$0F,$18,$36,$2A    ; 0x1c460 $C450 3F 10 04 0F 18 36 2A    ;PPU Address 3F10, transfer 4 bytes
                                                                               ;
.byt    $FF                            ; 0x1c467 $C457 FF                      ;
bank7_Table_for_Overworld_Palettes                                             ;
.byt    $3F,$00,$20                    ; 0x1c468 $C458 3F 00 20                ;PPU Address 3F00, transfer 20 bytes
                                                                               ;
.byt    $0F,$30,$29,$19                ; 0x1c46b $C45B 0F 30 29 19             ;Overworld Palette Code 0
                                                                               ;
.byt    $0F,$30,$28,$17                ; 0x1c46f $C45F 0F 30 28 17             ;Overworld Palette Code 1
                                                                               ;
.byt    $0F,$30,$28,$00                ; 0x1c473 $C463 0F 30 28 00             ;Overworld Palette Code 2
                                                                               ;
.byt    $0F,$30,$36,$21                ; 0x1c477 $C467 0F 30 36 21             ;Overworld Palette Code 3
                                                                               ;
.byt    $0F,$18,$36,$2A                ; 0x1c47b $C46B 0F 18 36 2A             ;Overworld Sprites Code 0 (black color of tiles + left border)
                                                                               ;
.byt    $0F,$0F,$0F,$0F                ; 0x1c47f $C46F 0F 0F 0F 0F             ;Overworld Sprites Code 1 (right border of the screen)
                                                                               ;
.byt    $0F,$30,$16,$0F                ; 0x1c483 $C473 0F 30 16 0F             ;Overworld Sprites Code 2 (Demons)
                                                                               ;
.byt    $0F,$16,$27,$30                ; 0x1c487 $C477 0F 16 27 30             ;Overworld Sprites Code 3 (Fairy)                               
                                                                               ;
.byt    $FF                            ; 0x1c48b $C47B FF                      ;
bank7_table10                                                                  ;
.byt    $3F,$00,$10                    ; 0x1c48c $C47C 3F 00 10                ;PPU Address 3F00, transfer 10 bytes	Maybe for Last Boss, Link's Shadow ?
                                                                               ;
.byt    $14,$30,$12,$16,$14,$0F,$0F,$0F; 0x1c48f $C47F 14 30 12 16 14 0F 0F 0F ;
.byt    $14,$0F,$0F,$0F,$14,$0F,$0F,$0F; 0x1c497 $C487 14 0F 0F 0F 14 0F 0F 0F ;
.byt    $FF                            ; 0x1c49f $C48F FF                      ;
LC490                                                                          ;
.byt    $3F,$00,$10,$0F,$30,$12,$16,$0F; 0x1c4a0 $C490 3F 00 10 0F 30 12 16 0F ;
.byt    $07,$27,$37,$0F,$07,$16,$30,$0F; 0x1c4a8 $C498 07 27 37 0F 07 16 30 0F ;
.byt    $3C,$1C,$0C,$FF                ; 0x1c4b0 $C4A0 3C 1C 0C FF             ;
; ---------------------------------------------------------------------------- ;
bank7_code12                                                                   ;
jmp      LC722                         ; 0x1c4b4 $C4A4 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Extra_Background_Layers__Bushes__Grass__etc                              ;
.byt    $40,$83,$84,$4C,$40,$40,$40,$40; 0x1c4b7 $C4A7 40 83 84 4C 40 40 40 40 ;Layer Tile Codes (8 bytes)
LC4AF                                                                          ;
.byt    $00,$90,$A0,$20,$00,$00,$00,$00; 0x1c4bf $C4AF 00 90 A0 20 00 00 00 00 ;Layer Row Heights (8 bytes)
LC4B7                                                                          ;
.byt    $01,$03,$03,$04,$04,$05        ; 0x1c4c7 $C4B7 01 03 03 04 04 05       ;Table related to Bank Switch (6 bytes)
LC4BD                                                                          ;
.byt    $00,$00,$00,$00,$02,$00        ; 0x1c4cd $C4BD 00 00 00 00 02 00       ;Area and Enemy Pointer Offsets (6 bytes)
; ---------------------------------------------------------------------------- ;
bank7_Pointer_table_for_Area_and_Enemy_Pointers                                ;
.word    bank3_Area_Pointers__Towns    ; 0x1c4d3 $C4C3 23 85                   ;West Hyrule - Area Pointers
.word    bank3_Area_Data_Towns4        ; 0x1c4d5 $C4C5 00 A0                   ;Death Mountain - Area Pointers
.word    bank3_Enemy_Pointers__Towns   ; 0x1c4d7 $C4C7 A1 85                   ;West Hyrule - Enemy Pointers
.word    LA07E                         ; 0x1c4d9 $C4C9 7E A0                   ;Death Moutain - Enemy Pointers
; ---------------------------------------------------------------------------- ;
bank7_code13                                                                   ;
lda      #$30                          ; 0x1c4db $C4CB A9 30                   ; A = 30
sta      $2000                         ; 0x1c4dd $C4CD 8D 00 20                ;
lda      #$0E                          ; 0x1c4e0 $C4D0 A9 0E                   ; A = 0E
jsr      bank7_Config_Register         ; 0x1c4e2 $C4D2 20 9D FF                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c4e5 $C4D5 20 C9 FF                ;
lda      $FF                           ; 0x1c4e8 $C4D8 A5 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c4ea $C4DA 8D 00 20                ;
jsr      bank7_Set_Memory_200_4FF_and_00_DF_to_Zero; 0x1c4ed $C4DD 20 9C D2    ; Set Memory 200-4FF and 00-DF to Zero
sta       !$FD                         ; 0x1c4f0 $C4E0 8D FD 00                ;
sta      $0747                         ; 0x1c4f3 $C4E3 8D 47 07                ;
sta      $072A                         ; 0x1c4f6 $C4E6 8D 2A 07                ; Scrolling Offset High Byte
sta      $072B                         ; 0x1c4f9 $C4E9 8D 2B 07                ;
sta      $0732                         ; 0x1c4fc $C4EC 8D 32 07                ;
sta      $0734                         ; 0x1c4ff $C4EF 8D 34 07                ;
sta      $0733                         ; 0x1c502 $C4F2 8D 33 07                ;
sta      $0735                         ; 0x1c505 $C4F5 8D 35 07                ;
sta      $0763                         ; 0x1c508 $C4F8 8D 63 07                ; Counter for Big Door in Hidden Kasuto
sta      $0764                         ; 0x1c50b $C4FB 8D 64 07                ; Counter for Big Door in Hidden Kasuto
;Get Area Data Pointer Address (00-01)                                         ;
;And Enemy Data Pointer Address (02-03)                                        ;
ldy      $0707                         ; 0x1c50e $C4FE AC 07 07                ; Current World
bne      LC50C                         ; 0x1c511 $C501 D0 09                   ;
lda      $0706                         ; 0x1c513 $C503 AD 06 07                ; Current Region
cmp      #$01                          ; 0x1c516 $C506 C9 01                   ;
bne      LC50C                         ; 0x1c518 $C508 D0 02                   ;
ldy      #$04                          ; 0x1c51a $C50A A0 04                   ; Y = 04
LC50C                                                                          ;
lda      LC4BD,y                       ; 0x1c51c $C50C B9 BD C4                ;
tay                                    ; 0x1c51f $C50F A8                      ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers,y; 0x1c520 $C510 B9 C3 C4;
sta      L0000                         ; 0x1c523 $C513 85 00                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01,y; 0x1c525 $C515 B9 C4 C4;
sta      $01                           ; 0x1c528 $C518 85 01                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01+$03,y; 0x1c52a $C51A B9 C7 C4;
sta      L0002                         ; 0x1c52d $C51D 85 02                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01+$03+$01,y; 0x1c52f $C51F B9 C8 C4;
sta      $03                           ; 0x1c532 $C522 85 03                   ;
;Get Area Data Address (D4-D5)                                                 ;
;And Enemy Data Address (D6-D7)                                                ;
lda      $0561                         ; 0x1c534 $C524 AD 61 05                ; Area Code
asl                                    ; 0x1c537 $C527 0A                      ;
tay                                    ; 0x1c538 $C528 A8                      ;
lda      (L0000),y                     ; 0x1c539 $C529 B1 00                   ;
sta      $D4                           ; 0x1c53b $C52B 85 D4                   ;
lda      (L0002),y                     ; 0x1c53d $C52D B1 02                   ;
sta      $D6                           ; 0x1c53f $C52F 85 D6                   ;
iny                                    ; 0x1c541 $C531 C8                      ;
lda      (L0000),y                     ; 0x1c542 $C532 B1 00                   ;
sta      $D5                           ; 0x1c544 $C534 85 D5                   ;
lda      (L0002),y                     ; 0x1c546 $C536 B1 02                   ;
sta      $D7                           ; 0x1c548 $C538 85 D7                   ;
lda      $075A                         ; 0x1c54a $C53A AD 5A 07                ;
pha                                    ; 0x1c54d $C53D 48                      ;
cmp      #$02                          ; 0x1c54e $C53E C9 02                   ;
bcc      LC551                         ; 0x1c550 $C540 90 0F                   ;
;If $75A >= 2, advance Enemy Data Address to next area		                       ;007
;Probably related to Demon hit on the Overworld                                ;
ldy      #$00                          ; 0x1c552 $C542 A0 00                   ; Y = 00
lda      $D6                           ; 0x1c554 $C544 A5 D6                   ;
clc                                    ; 0x1c556 $C546 18                      ;
adc      ($D6),y                       ; 0x1c557 $C547 71 D6                   ;
sta      $D6                           ; 0x1c559 $C549 85 D6                   ;
lda      $D7                           ; 0x1c55b $C54B A5 D7                   ;
adc      #$00                          ; 0x1c55d $C54D 69 00                   ;
sta      $D7                           ; 0x1c55f $C54F 85 D7                   ;
LC551                                                                          ;
pla                                    ; 0x1c561 $C551 68                      ;
beq      bank7_Initial_Fill_of_Background_Tiles__Side_View; 0x1c562 $C552 F0 14;
;If $75A == 1, do the following...                                             ;
ldy      #$01                          ; 0x1c564 $C554 A0 01                   ; Y = 01
LC556                                                                          ;
tya                                    ; 0x1c566 $C556 98                      ;
ldy      #$00                          ; 0x1c567 $C557 A0 00                   ; Y = 00
cmp      ($D6),y                       ; 0x1c569 $C559 D1 D6                   ;
bcs      bank7_Initial_Fill_of_Background_Tiles__Side_View; 0x1c56b $C55B B0 0B;
tay                                    ; 0x1c56d $C55D A8                      ;
lda      ($D6),y                       ; 0x1c56e $C55E B1 D6                   ;
and      #$7F                          ; 0x1c570 $C560 29 7F                   ; keep bits .xxx xxxx
sta      ($D6),y                       ; 0x1c572 $C562 91 D6                   ;
iny                                    ; 0x1c574 $C564 C8                      ;
iny                                    ; 0x1c575 $C565 C8                      ;
bne      LC556                         ; 0x1c576 $C566 D0 EE                   ;
bank7_Initial_Fill_of_Background_Tiles__Side_View                              ;
;If Ground Type (Header Byte 2 & 0x70) is 0, use Tile Code 42                  ;
;Else use Tile Code 40                                                         ;
ldx      #$40                          ; 0x1c578 $C568 A2 40                   ; X = 40
ldy      #$02                          ; 0x1c57a $C56A A0 02                   ; Y = 02
lda      ($D4),y                       ; 0x1c57c $C56C B1 D4                   ; Area Header Byte 2
and      #$70                          ; 0x1c57e $C56E 29 70                   ; keep bits .xxx ....
bne      LC574                         ; 0x1c580 $C570 D0 02                   ;
ldx      #$42                          ; 0x1c582 $C572 A2 42                   ; X = 42
LC574                                                                          ;
ldy      #$D0                          ; 0x1c584 $C574 A0 D0                   ; Y = D0
sty      L0000                         ; 0x1c586 $C576 84 00                   ;
txa                                    ; 0x1c588 $C578 8A                      ;
LC579                                                                          ;
ldy      L0000                         ; 0x1c589 $C579 A4 00                   ;
sta      $5FFF,y                       ; 0x1c58b $C57B 99 FF 5F                ;
sta      $60CF,y                       ; 0x1c58e $C57E 99 CF 60                ;
sta      $619F,y                       ; 0x1c591 $C581 99 9F 61                ;
sta      $626F,y                       ; 0x1c594 $C584 99 6F 62                ;
dec      L0000                         ; 0x1c597 $C587 C6 00                   ;
bne      LC579                         ; 0x1c599 $C589 D0 EE                   ;
ldy      #$03                          ; 0x1c59b $C58B A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1c59d $C58D B1 D4                   ; Area Header Byte 3; Area Header Byte 3
sta      $07AF                         ; 0x1c59f $C58F 8D AF 07                ;
lda      #$00                          ; 0x1c5a2 $C592 A9 00                   ; A = 00
sta      $072F                         ; 0x1c5a4 $C594 8D 2F 07                ; Area Data Reading Offset
sta      $010A                         ; 0x1c5a7 $C597 8D 0A 01                ;
ldy      #$03                          ; 0x1c5aa $C59A A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1c5ac $C59C B1 D4                   ; Area Header Byte 3; Area Header Byte 3
and      #$07                          ; 0x1c5ae $C59E 29 07                   ; keep bits .... .xxx (BG Map)
beq      LC5C2                         ; 0x1c5b0 $C5A0 F0 20                   ;
;If Background Map Code > 0, get pointer and process Map Data                  ;
asl                                    ; 0x1c5b2 $C5A2 0A                      ;
tax                                    ; 0x1c5b3 $C5A3 AA                      ;
dex                                    ; 0x1c5b4 $C5A4 CA                      ;
dex                                    ; 0x1c5b5 $C5A5 CA                      ;
lda      $D4                           ; 0x1c5b6 $C5A6 A5 D4                   ;
pha                                    ; 0x1c5b8 $C5A8 48                      ;
lda      $D5                           ; 0x1c5b9 $C5A9 A5 D5                   ;
pha                                    ; 0x1c5bb $C5AB 48                      ;
lda      bank3_Pointer_table_for_Background_Areas_Data,x; 0x1c5bc $C5AC BD 00 80; Background Map Data Pointer Byte 1
sta      $D4                           ; 0x1c5bf $C5AF 85 D4                   ;
lda      bank3_Pointer_table_for_Background_Areas_Data+$01,x; 0x1c5c1 $C5B1 BD 01 80; Background Map Data Pointer Byte 1
sta      $D5                           ; 0x1c5c4 $C5B4 85 D5                   ;
jsr      bank7_process_map_data        ; 0x1c5c6 $C5B6 20 55 C7                ; Process Map Data
jsr      LC89D                         ; 0x1c5c9 $C5B9 20 9D C8                ;this jsr function call draws the map data, nop nop nop it out for header-commands-only drawing of the map data
pla                                    ; 0x1c5cc $C5BC 68                      ;
sta      $D5                           ; 0x1c5cd $C5BD 85 D5                   ;
pla                                    ; 0x1c5cf $C5BF 68                      ;
sta      $D4                           ; 0x1c5d0 $C5C0 85 D4                   ;
LC5C2                                                                          ;
jsr      bank7_process_map_data        ; 0x1c5d2 $C5C2 20 55 C7                ; Process Map Data
;Extra Layer                                                                   ;
ldy      #$01                          ; 0x1c5d5 $C5C5 A0 01                   ; Y = 01
lda      ($D4),y                       ; 0x1c5d7 $C5C7 B1 D4                   ; Area Data Byte 1; Area Data Byte 1
and      #$1C                          ; 0x1c5d9 $C5C9 29 1C                   ; keep bits ...x xx.. (Layers bits)
lsr                                    ; 0x1c5db $C5CB 4A                      ;
lsr                                    ; 0x1c5dc $C5CC 4A                      ;
tax                                    ; 0x1c5dd $C5CD AA                      ;
dey                                    ; 0x1c5de $C5CE 88                      ;
sty      $0717                         ; 0x1c5df $C5CF 8C 17 07                ; Screen Number for Objects (0-3)
lda      LC4AF,x                       ; 0x1c5e2 $C5D2 BD AF C4                ;
sta      $010A                         ; 0x1c5e5 $C5D5 8D 0A 01                ;
beq      LC5F9                         ; 0x1c5e8 $C5D8 F0 1F                   ;
LC5DA                                                                          ;
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x1c5ea $C5DA 20 47 C9          ; Set RAM Address for Object (0E-0F)
ldy      $010A                         ; 0x1c5ed $C5DD AC 0A 01                ;
LC5E0                                                                          ;
lda      L0000                         ; 0x1c5f0 $C5E0 A5 00                   ;
lda      bank7_Extra_Background_Layers__Bushes__Grass__etc,x; 0x1c5f2 $C5E2 BD A7 C4;
sta      (L000E),y                     ; 0x1c5f5 $C5E5 91 0E                   ;
lda      L0000                         ; 0x1c5f7 $C5E7 A5 00                   ;
iny                                    ; 0x1c5f9 $C5E9 C8                      ;
tya                                    ; 0x1c5fa $C5EA 98                      ;
and      #$0F                          ; 0x1c5fb $C5EB 29 0F                   ; keep bits .... xxxx
bne      LC5E0                         ; 0x1c5fd $C5ED D0 F1                   ;
inc      $0717                         ; 0x1c5ff $C5EF EE 17 07                ; Screen Number for Objects (0-3)
lda      $0717                         ; 0x1c602 $C5F2 AD 17 07                ;; Screen Number for Objects (0-3)
cmp      #$04                          ; 0x1c605 $C5F5 C9 04                   ;
bne      LC5DA                         ; 0x1c607 $C5F7 D0 E1                   ;
LC5F9                                                                          ;
jsr      LC89D                         ; 0x1c609 $C5F9 20 9D C8                ;
lda      #$03                          ; 0x1c60c $C5FC A9 03                   ; A = 03
sta      $071B                         ; 0x1c60e $C5FE 8D 1B 07                ;
lsr                                    ; 0x1c611 $C601 4A                      ;
sta      $071F                         ; 0x1c612 $C602 8D 1F 07                ;; ???
sta      $0720                         ; 0x1c615 $C605 8D 20 07                ;
lsr                                    ; 0x1c618 $C608 4A                      ;
sta      $071C                         ; 0x1c619 $C609 8D 1C 07                ;
sta      $0721                         ; 0x1c61c $C60C 8D 21 07                ;
sta      $0740                         ; 0x1c61f $C60F 8D 40 07                ;
ldy      $075C                         ; 0x1c622 $C612 AC 5C 07                ; Position code when entering area (0-3)
lda      #$0F                          ; 0x1c625 $C615 A9 0F                   ; A = 0F
sta      $0722                         ; 0x1c627 $C617 8D 22 07                ;
lda      $697B,y                       ; 0x1c62a $C61A B9 7B 69                ;
sta      $0732                         ; 0x1c62d $C61D 8D 32 07                ;
sta      $0733                         ; 0x1c630 $C620 8D 33 07                ;
lda      $6982,y                       ; 0x1c633 $C623 B9 82 69                ;
sta      $0734                         ; 0x1c636 $C626 8D 34 07                ;
sta      $0735                         ; 0x1c639 $C629 8D 35 07                ;
jmp      LC722                         ; 0x1c63c $C62C 4C 22 C7                ;this jump is the last chance to change sidescreen tile data(?), when we jump to $C62C we are done processing map data
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC62F                                                                          ;
lda      $076E                         ; 0x1c63f $C62F AD 6E 07                ; Graphics bank to use
jsr      bank7_chr_bank_switch__load_A ; 0x1c642 $C632 20 B1 FF                ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c645 $C635 20 C5 FF                ;
jmp      L8CE1                         ; 0x1c648 $C638 4C E1 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jmp      bank7_Load_Bank_769_at_0x8000 ; 0x1c64b $C63B 4C C9 FF                ; Load Bank $0769
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC63E                                                                          ;
inc      $0736                         ; 0x1c64e $C63E EE 36 07                ; Game Mode
jmp      LC68A                         ; 0x1c651 $C641 4C 8A C6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_take_elevator_exit                                                       ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c654 $C644 20 C9 FF                ; Load Bank $0769
lda      $0561                         ; 0x1c657 $C647 AD 61 05                ; Area Code
asl                                    ; 0x1c65a $C64A 0A                      ;
asl                                    ; 0x1c65b $C64B 0A                      ;
adc      #$01                          ; 0x1c65c $C64C 69 01                   ;
ldy      $0743                         ; 0x1c65e $C64E AC 43 07                ; Up/Down Buttons Held
cpy      #$08                          ; 0x1c661 $C651 C0 08                   ; Check for Up
bne      LC657                         ; 0x1c663 $C653 D0 02                   ;
adc      #$00                          ; 0x1c665 $C655 69 00                   ;
LC657                                                                          ;
tay                                    ; 0x1c667 $C657 A8                      ;
lda      $6AFC,y                       ; 0x1c668 $C658 B9 FC 6A                ;
lsr                                    ; 0x1c66b $C65B 4A                      ;
lsr                                    ; 0x1c66c $C65C 4A                      ;
sta      $0561                         ; 0x1c66d $C65D 8D 61 05                ; Area Code
lda      $6AFC,y                       ; 0x1c670 $C660 B9 FC 6A                ; Area Room Connectivity
and      #$03                          ; 0x1c673 $C663 29 03                   ; keep bits .... ..xx
sta      $3B                           ; 0x1c675 $C665 85 3B                   ; Link's X Position (high byte)
sta      $072A                         ; 0x1c677 $C667 8D 2A 07                ; Scrolling Offset High Byte
clc                                    ; 0x1c67a $C66A 18                      ;
adc      #$01                          ; 0x1c67b $C66B 69 01                   ;
sta      $0733                         ; 0x1c67d $C66D 8D 33 07                ;
sec                                    ; 0x1c680 $C670 38                      ;
sbc      #$02                          ; 0x1c681 $C671 E9 02                   ;
cmp      #$FF                          ; 0x1c683 $C673 C9 FF                   ;
bne      LC679                         ; 0x1c685 $C675 D0 02                   ;
lda      #$03                          ; 0x1c687 $C677 A9 03                   ; A = 03
LC679                                                                          ;
sta      $0732                         ; 0x1c689 $C679 8D 32 07                ;
LC67C                                                                          ;
ldx      #$04                          ; 0x1c68c $C67C A2 04                   ; X = 04
stx      $075C                         ; 0x1c68e $C67E 8E 5C 07                ; Position code when entering area (0-3)
jsr      LC690                         ; 0x1c691 $C681 20 90 C6                ;
inc      $0705                         ; 0x1c694 $C684 EE 05 07                ;; Related to how Link entered the room (walking, falling, elevator...)
jmp      LC722                         ; 0x1c697 $C687 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC68A                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c69a $C68A 20 C5 FF                ;
jmp      LC67C                         ; 0x1c69d $C68D 4C 7C C6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC690                                                                          ;
lda      $FD                           ; 0x1c6a0 $C690 A5 FD                   ;
and      #$F0                          ; 0x1c6a2 $C692 29 F0                   ; keep bits xxxx ....
sta      $69B3,x                       ; 0x1c6a4 $C694 9D B3 69                ;
lda      $071F                         ; 0x1c6a7 $C697 AD 1F 07                ;; ???
sta      $69BA,x                       ; 0x1c6aa $C69A 9D BA 69                ;This is where healer glitch writes 69C4 at 1, triggering scroll lock 	X=A
lda      $072C                         ; 0x1c6ad $C69D AD 2C 07                ; Scrolling Offset Low Byte
and      #$F0                          ; 0x1c6b0 $C6A0 29 F0                   ; keep bits xxxx ....
sta      $69AC,x                       ; 0x1c6b2 $C6A2 9D AC 69                ;
pha                                    ; 0x1c6b5 $C6A5 48                      ;
sec                                    ; 0x1c6b6 $C6A6 38                      ;
sbc      #$60                          ; 0x1c6b7 $C6A7 E9 60                   ;
php                                    ; 0x1c6b9 $C6A9 08                      ;
ora      #$10                          ; 0x1c6ba $C6AA 09 10                   ; set  bits ...x ....
lsr                                    ; 0x1c6bc $C6AC 4A                      ;
lsr                                    ; 0x1c6bd $C6AD 4A                      ;
lsr                                    ; 0x1c6be $C6AE 4A                      ;
lsr                                    ; 0x1c6bf $C6AF 4A                      ;
sta      $6997,x                       ; 0x1c6c0 $C6B0 9D 97 69                ;
and      #$0E                          ; 0x1c6c3 $C6B3 29 0E                   ; keep bits .... xxx.
sta      $6982,x                       ; 0x1c6c5 $C6B5 9D 82 69                ;
lda      $072A                         ; 0x1c6c8 $C6B8 AD 2A 07                ; Scrolling Offset High Byte
sta      $69A5,x                       ; 0x1c6cb $C6BB 9D A5 69                ;
plp                                    ; 0x1c6ce $C6BE 28                      ;
sbc      #$00                          ; 0x1c6cf $C6BF E9 00                   ;
and      #$03                          ; 0x1c6d1 $C6C1 29 03                   ; keep bits .... ..xx
sta      $6989,x                       ; 0x1c6d3 $C6C3 9D 89 69                ;
sta      $697B,x                       ; 0x1c6d6 $C6C6 9D 7B 69                ;
pla                                    ; 0x1c6d9 $C6C9 68                      ;
clc                                    ; 0x1c6da $C6CA 18                      ;
adc      #$60                          ; 0x1c6db $C6CB 69 60                   ;
php                                    ; 0x1c6dd $C6CD 08                      ;
and      #$E0                          ; 0x1c6de $C6CE 29 E0                   ; keep bits xxx. ....
lsr                                    ; 0x1c6e0 $C6D0 4A                      ;
lsr                                    ; 0x1c6e1 $C6D1 4A                      ;
lsr                                    ; 0x1c6e2 $C6D2 4A                      ;
lsr                                    ; 0x1c6e3 $C6D3 4A                      ;
sta      $699E,x                       ; 0x1c6e4 $C6D4 9D 9E 69                ;
lda      $072A                         ; 0x1c6e7 $C6D7 AD 2A 07                ; Scrolling Offset High Byte
plp                                    ; 0x1c6ea $C6DA 28                      ;
adc      #$01                          ; 0x1c6eb $C6DB 69 01                   ;
and      #$03                          ; 0x1c6ed $C6DD 29 03                   ; keep bits .... ..xx
sta      $6990,x                       ; 0x1c6ef $C6DF 9D 90 69                ;
lda      $3B                           ; 0x1c6f2 $C6E2 A5 3B                   ; Link's X Position (high byte)
sta      $05CC,x                       ; 0x1c6f4 $C6E4 9D CC 05                ;
lda      $4D                           ; 0x1c6f7 $C6E7 A5 4D                   ; Link's X Position (low byte)
and      #$F0                          ; 0x1c6f9 $C6E9 29 F0                   ; keep bits xxxx ....
sta      $05D3,x                       ; 0x1c6fb $C6EB 9D D3 05                ;
LC6EE                                                                          ;
rts                                    ; 0x1c6fe $C6EE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Link_falling                                                  ;
inc      $0704                         ; 0x1c6ff $C6EF EE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
lda      #$01                          ; 0x1c702 $C6F2 A9 01                   ; A = 01
sta      $19                           ; 0x1c704 $C6F4 85 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
lda      #$10                          ; 0x1c706 $C6F6 A9 10                   ; A = 10
sta      $29                           ; 0x1c708 $C6F8 85 29                   ; Link's Y Position
lda      #$02                          ; 0x1c70a $C6FA A9 02                   ; A = 02
ldy      $0707                         ; 0x1c70c $C6FC AC 07 07                ; Current World
bne      LC702                         ; 0x1c70f $C6FF D0 01                   ;
asl                                    ; 0x1c711 $C701 0A                      ;
LC702                                                                          ;
sta      $075F                         ; 0x1c712 $C702 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
lda      #$01                          ; 0x1c715 $C705 A9 01                   ; A = 01 (sound of Link falling)
sta      $EE                           ; 0x1c717 $C707 85 EE                   ; Sound Effects Type 3
jmp      LC72D                         ; 0x1c719 $C709 4C 2D C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC70C                                                                          ;
lda      $071F                         ; 0x1c71c $C70C AD 1F 07                ;; ???
sta      $0720                         ; 0x1c71f $C70F 8D 20 07                ;
lda      #$09                          ; 0x1c722 $C712 A9 09                   ; A = 09
sta      $0736                         ; 0x1c724 $C714 8D 36 07                ; Game Mode
jmp      bank7_code33                  ; 0x1c727 $C717 4C 30 E0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
flashing_effect__length__when_link_dies                                        ;
lda      #$07                          ; 0x1c72a $C71A A9 07                   ; A = 07
sta      $050E                         ; 0x1c72c $C71C 8D 0E 05                ;
jmp      LC72D                         ; 0x1c72f $C71F 4C 2D C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC722                                                                          ;
lda      #$00                          ; 0x1c732 $C722 A9 00                   ; A = 00
sta      $073D                         ; 0x1c734 $C724 8D 3D 07                ; Routine Index
inc      $0726                         ; 0x1c737 $C727 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LCF05                         ; 0x1c73a $C72A 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC72D                                                                          ;
lda      #$00                          ; 0x1c73d $C72D A9 00                   ; A = 00
sta      $0726                         ; 0x1c73f $C72F 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LCF05                         ; 0x1c742 $C732 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_Masks_for_Floor_Ceiling_Tile_Mappings                              ;
.byt    $C1,$83,$C1,$87,$C1,$8F,$C1,$9F; 0x1c745 $C735 C1 83 C1 87 C1 8F C1 9F ;
.byt    $C1,$BF,$C1,$7F,$C3,$FF,$C7,$FF; 0x1c74d $C73D C1 BF C1 7F C3 FF C7 FF ;
.byt    $E0,$03,$F0,$03,$F8,$03,$FC,$03; 0x1c755 $C745 E0 03 F0 03 F8 03 FC 03 ;
.byt    $FE,$83,$FF,$C3,$FF,$E3,$FF,$FF; 0x1c75d $C74D FE 83 FF C3 FF E3 FF FF ;
; ---------------------------------------------------------------------------- ;
bank7_process_map_data                                                         ;
lda      #$00                          ; 0x1c765 $C755 A9 00                   ; A = 00
sta      $010A                         ; 0x1c767 $C757 8D 0A 01                ;
sta      $010B                         ; 0x1c76a $C75A 8D 0B 01                ;
sta      $0717                         ; 0x1c76d $C75D 8D 17 07                ; Screen Number for Objects (0-3)
ldy      #$02                          ; 0x1c770 $C760 A0 02                   ; Y = 02
lda      ($D4),y                       ; 0x1c772 $C762 B1 D4                   ; HEADER byte 2
and      #$0F                          ; 0x1c774 $C764 29 0F                   ; keep bits .... xxxx (Initial CF Code)
sta      $0731                         ; 0x1c776 $C766 8D 31 07                ; Level Object Type and Size
lda      ($D4),y                       ; 0x1c779 $C769 B1 D4                   ; HEADER byte 2
and      #$80                          ; 0x1c77b $C76B 29 80                   ; keep bits x... ....
sta      $0486                         ; 0x1c77d $C76D 8D 86 04                ; Level "No Ceiling" flag
lda      ($D4),y                       ; 0x1c780 $C770 B1 D4                   ; HEADER byte 2
and      #$70                          ; 0x1c782 $C772 29 70                   ; keep bits .xxx ....
lsr                                    ; 0x1c784 $C774 4A                      ;
lsr                                    ; 0x1c785 $C775 4A                      ;
lsr                                    ; 0x1c786 $C776 4A                      ;
lsr                                    ; 0x1c787 $C777 4A                      ;
sta      $010C                         ; 0x1c788 $C778 8D 0C 01                ; Area Ground Type (0-7)
lda      #$04                          ; 0x1c78b $C77B A9 04                   ; A = 04
sta      $072F                         ; 0x1c78d $C77D 8D 2F 07                ; Area Data Reading Offset
jsr      bank7_Set_Addy_for_Area_Layer_Tiles__using_10C; 0x1c790 $C780 20 19 C8; Set Address for Area Layer Tiles (using 10C)
ldy      #$00                          ; 0x1c793 $C783 A0 00                   ; Y = 00
lda      ($D4),y                       ; 0x1c795 $C785 B1 D4                   ; HEADER byte 0 	SIZE
sta      $072E                         ; 0x1c797 $C787 8D 2E 07                ; Area Data Length
LC78A                                                                          ;
ldy      $072F                         ; 0x1c79a $C78A AC 2F 07                ; Area Data Reading Offset
keep_loading_the_map_data                                                      ;
lda      ($D4),y                       ; 0x1c79d $C78D B1 D4                   ;map data first byte/cmd ?
sta      $0730                         ; 0x1c79f $C78F 8D 30 07                ; Position of Object Placement
jsr      LC95C                         ; 0x1c7a2 $C792 20 5C C9                ;
LC795                                                                          ;
lda      $010B                         ; 0x1c7a5 $C795 AD 0B 01                ;
lsr                                    ; 0x1c7a8 $C798 4A                      ;
lsr                                    ; 0x1c7a9 $C799 4A                      ;
lsr                                    ; 0x1c7aa $C79A 4A                      ;
lsr                                    ; 0x1c7ab $C79B 4A                      ;
sta      $0717                         ; 0x1c7ac $C79C 8D 17 07                ; Screen Number for Objects (0-3)
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x1c7af $C79F 20 47 C9          ;
lda      $010A                         ; 0x1c7b2 $C7A2 AD 0A 01                ;
cmp      $010B                         ; 0x1c7b5 $C7A5 CD 0B 01                ;
beq      LC7C6                         ; 0x1c7b8 $C7A8 F0 1C                   ;
bpl      LC7F0                         ; 0x1c7ba $C7AA 10 44                   ;
iny                                    ; 0x1c7bc $C7AC C8                      ;
lda      ($D4),y                       ; 0x1c7bd $C7AD B1 D4                   ;
cmp      #$0F                          ; 0x1c7bf $C7AF C9 0F                   ;
bne      LC7B4                         ; 0x1c7c1 $C7B1 D0 01                   ;
iny                                    ; 0x1c7c3 $C7B3 C8                      ;
LC7B4                                                                          ;
iny                                    ; 0x1c7c4 $C7B4 C8                      ;
cpy      $072E                         ; 0x1c7c5 $C7B5 CC 2E 07                ; Area Data Length
bcc      keep_loading_the_map_data     ; 0x1c7c8 $C7B8 90 D3                   ;
dey                                    ; 0x1c7ca $C7BA 88                      ;
lda      ($D4),y                       ; 0x1c7cb $C7BB B1 D4                   ;
cmp      #$0F                          ; 0x1c7cd $C7BD C9 0F                   ;
bne      LC7C2                         ; 0x1c7cf $C7BF D0 01                   ;
dey                                    ; 0x1c7d1 $C7C1 88                      ;
LC7C2                                                                          ;
dey                                    ; 0x1c7d2 $C7C2 88                      ;
jmp      LC7F0                         ; 0x1c7d3 $C7C3 4C F0 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC7C6                                                                          ;
lda      $0730                         ; 0x1c7d6 $C7C6 AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c7d9 $C7C9 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x1c7db $C7CB C9 D0                   ;
bne      LC7E2                         ; 0x1c7dd $C7CD D0 13                   ;
;Change Default Ceiling/Floor                                                  ;
iny                                    ; 0x1c7df $C7CF C8                      ;
lda      ($D4),y                       ; 0x1c7e0 $C7D0 B1 D4                   ;
pha                                    ; 0x1c7e2 $C7D2 48                      ;
and      #$0F                          ; 0x1c7e3 $C7D3 29 0F                   ; keep bits .... xxxx
sta      $0731                         ; 0x1c7e5 $C7D5 8D 31 07                ; Level Object Type and Size
pla                                    ; 0x1c7e8 $C7D8 68                      ;
and      #$80                          ; 0x1c7e9 $C7D9 29 80                   ; keep bits x... ....
sta      $0486                         ; 0x1c7eb $C7DB 8D 86 04                ; Area "No Ceiling" flag
iny                                    ; 0x1c7ee $C7DE C8                      ;
jmp      LC7F0                         ; 0x1c7ef $C7DF 4C F0 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC7E2                                                                          ;
cpy      $072E                         ; 0x1c7f2 $C7E2 CC 2E 07                ; Area Data Length
bcs      LC7F0                         ; 0x1c7f5 $C7E5 B0 09                   ;
iny                                    ; 0x1c7f7 $C7E7 C8                      ;
lda      ($D4),y                       ; 0x1c7f8 $C7E8 B1 D4                   ;map data second byte/cmd param? 
cmp      #$0F                          ; 0x1c7fa $C7EA C9 0F                   ;
bne      LC7EF                         ; 0x1c7fc $C7EC D0 01                   ;
iny                                    ; 0x1c7fe $C7EE C8                      ;
LC7EF                                                                          ;
iny                                    ; 0x1c7ff $C7EF C8                      ;
LC7F0                                                                          ;
sty      $072F                         ; 0x1c800 $C7F0 8C 2F 07                ; Area Data Reading Offset
lda      $010B                         ; 0x1c803 $C7F3 AD 0B 01                ;
and      #$0F                          ; 0x1c806 $C7F6 29 0F                   ; keep bits .... xxxx
sta      $0A                           ; 0x1c808 $C7F8 85 0A                   ;
jsr      bank7_code14                  ; 0x1c80a $C7FA 20 2B C8                ;
inc      $010B                         ; 0x1c80d $C7FD EE 0B 01                ;
lda      $010B                         ; 0x1c810 $C800 AD 0B 01                ;
cmp      #$40                          ; 0x1c813 $C803 C9 40                   ;
beq      LC818                         ; 0x1c815 $C805 F0 11                   ;
lda      $010A                         ; 0x1c817 $C807 AD 0A 01                ;
cmp      $010B                         ; 0x1c81a $C80A CD 0B 01                ;
bpl      LC812                         ; 0x1c81d $C80D 10 03                   ;
jmp      LC78A                         ; 0x1c81f $C80F 4C 8A C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC812                                                                          ;
ldy      $072F                         ; 0x1c822 $C812 AC 2F 07                ; Area Data Reading Offset
jmp      LC795                         ; 0x1c825 $C815 4C 95 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC818                                                                          ;
rts                                    ; 0x1c828 $C818 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_Addy_for_Area_Layer_Tiles__using_10C                                 ;
lda      $0707                         ; 0x1c829 $C819 AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c82c $C81C 20 85 D3;
bank7_pointer_table9                                                           ;
.word    L81A3                         ; 0x1c82f $C81F A3 81                   ; World 0 - Bank 1 and 2
.word    bank3_Build_a_pointer_with_86_and_a_value_from_C643; 0x1c831 $C821 47 86; World 1 - Bank 3
.word    bank3_Build_a_pointer_with_86_and_a_value_from_C643; 0x1c833 $C823 47 86; World 2 - Bank 3
.word    L8167                         ; 0x1c835 $C825 67 81                   ; World 3 - Bank 4
.word    L8167                         ; 0x1c837 $C827 67 81                   ; World 4 - Bank 4
.word    L817B                         ; 0x1c839 $C829 7B 81                   ; World 5 - Bank 5
; ---------------------------------------------------------------------------- ;
bank7_code14                                                                   ;
;$0A = Memory Offset of the tile to process                                    ;
lda      $0731                         ; 0x1c83b $C82B AD 31 07                ; Level Object Type and Size
asl                                    ; 0x1c83e $C82E 0A                      ;
tay                                    ; 0x1c83f $C82F A8                      ;
ldx      #$05                          ; 0x1c840 $C830 A2 05                   ; X = 05
lda      $0486                         ; 0x1c842 $C832 AD 86 04                ; Area "No Ceiling" flag
beq      LC844                         ; 0x1c845 $C835 F0 0D                   ;
;If No Ceiling flag == 1, start at Row 2                                       ;
lda      $0A                           ; 0x1c847 $C837 A5 0A                   ;
ora      #$20                          ; 0x1c849 $C839 09 20                   ; set  bits ..x. ....
sta      $0A                           ; 0x1c84b $C83B 85 0A                   ;
lda      #$38                          ; 0x1c84d $C83D A9 38                   ; A = 38
ldx      #$03                          ; 0x1c84f $C83F A2 03                   ; X = 03
jmp      LC846                         ; 0x1c851 $C841 4C 46 C8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC844                                                                          ;
lda      #$E0                          ; 0x1c854 $C844 A9 E0                   ; A = E0
LC846                                                                          ;
sta      $010E                         ; 0x1c856 $C846 8D 0E 01                ;
stx      $010F                         ; 0x1c859 $C849 8E 0F 01                ;
LC84C                                                                          ;
sty      $08                           ; 0x1c85c $C84C 84 08                   ;
ldx      $010F                         ; 0x1c85e $C84E AE 0F 01                ;
lda      bank7_table_Masks_for_Floor_Ceiling_Tile_Mappings,y; 0x1c861 $C851 B9 35 C7;
and      $010E                         ; 0x1c864 $C854 2D 0E 01                ;
cpx      #$00                          ; 0x1c867 $C857 E0 00                   ;
beq      LC85F                         ; 0x1c869 $C859 F0 04                   ;
LC85B                                                                          ;
lsr                                    ; 0x1c86b $C85B 4A                      ;
dex                                    ; 0x1c86c $C85C CA                      ;
bne      LC85B                         ; 0x1c86d $C85D D0 FC                   ;
LC85F                                                                          ;
tay                                    ; 0x1c86f $C85F A8                      ;
lda      ($0C),y                       ; 0x1c870 $C860 B1 0C                   ;
sta      $0B                           ; 0x1c872 $C862 85 0B                   ;
ldy      $0A                           ; 0x1c874 $C864 A4 0A                   ;
cmp      #$40                          ; 0x1c876 $C866 C9 40                   ; 40 = Background for All Except Type 0
beq      LC878                         ; 0x1c878 $C868 F0 0E                   ;
cmp      #$42                          ; 0x1c87a $C86A C9 42                   ; 42 = Background for Grotto (Type 0)
bne      LC874                         ; 0x1c87c $C86C D0 06                   ;
lda      (L000E),y                     ; 0x1c87e $C86E B1 0E                   ;
cmp      #$40                          ; 0x1c880 $C870 C9 40                   ;
bne      LC878                         ; 0x1c882 $C872 D0 04                   ;
LC874                                                                          ;
lda      $0B                           ; 0x1c884 $C874 A5 0B                   ;
sta      (L000E),y                     ; 0x1c886 $C876 91 0E                   ;
LC878                                                                          ;
tya                                    ; 0x1c888 $C878 98                      ;
clc                                    ; 0x1c889 $C879 18                      ;
adc      #$10                          ; 0x1c88a $C87A 69 10                   ;
sta      $0A                           ; 0x1c88c $C87C 85 0A                   ;
ldy      $08                           ; 0x1c88e $C87E A4 08                   ;
lsr      $010E                         ; 0x1c890 $C880 4E 0E 01                ;
dec      $010F                         ; 0x1c893 $C883 CE 0F 01                ;
bpl      LC84C                         ; 0x1c896 $C886 10 C4                   ;
ldx      #$05                          ; 0x1c898 $C888 A2 05                   ; X = 05
iny                                    ; 0x1c89a $C88A C8                      ;
tya                                    ; 0x1c89b $C88B 98                      ;
and      #$01                          ; 0x1c89c $C88C 29 01                   ; keep bits .... ...x
bne      LC844                         ; 0x1c89e $C88E D0 B4                   ;
ldy      $0A                           ; 0x1c8a0 $C890 A4 0A                   ;
lda      $010D                         ; 0x1c8a2 $C892 AD 0D 01                ;; Area Bottom Row Tile Code
sta      (L000E),y                     ; 0x1c8a5 $C895 91 0E                   ;
tya                                    ; 0x1c8a7 $C897 98                      ;
and      #$0F                          ; 0x1c8a8 $C898 29 0F                   ; keep bits .... xxxx
sta      $0A                           ; 0x1c8aa $C89A 85 0A                   ;
rts                                    ; 0x1c8ac $C89C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC89D                                                                          ;
lda      #$00                          ; 0x1c8ad $C89D A9 00                   ; A = 00
sta      $0717                         ; 0x1c8af $C89F 8D 17 07                ; Screen Number for Objects (0-3)
sta      $010A                         ; 0x1c8b2 $C8A2 8D 0A 01                ;
sta      $0757                         ; 0x1c8b5 $C8A5 8D 57 07                ; Elevator Generated by Objects Construction
sta      $0758                         ; 0x1c8b8 $C8A8 8D 58 07                ; Locked Door Generated by Objects Construction
tay                                    ; 0x1c8bb $C8AB A8                      ;
lda      ($D4),y                       ; 0x1c8bc $C8AC B1 D4                   ; HEADER byte 0 ; get byte 0 of Area Data
sta      $072E                         ; 0x1c8be $C8AE 8D 2E 07                ; Area Data Length
iny                                    ; 0x1c8c1 $C8B1 C8                      ;
lda      ($D4),y                       ; 0x1c8c2 $C8B2 B1 D4                   ; HEADER byte 1; get byte 1 of Area Data
and      #$60                          ; 0x1c8c4 $C8B4 29 60                   ; keep bits .xx. .... (Area Width)
lsr                                    ; 0x1c8c6 $C8B6 4A                      ;
lsr                                    ; 0x1c8c7 $C8B7 4A                      ;
lsr                                    ; 0x1c8c8 $C8B8 4A                      ;
lsr                                    ; 0x1c8c9 $C8B9 4A                      ;
lsr                                    ; 0x1c8ca $C8BA 4A                      ;
sta      $D1                           ; 0x1c8cb $C8BB 85 D1                   ; Area Width
lda      #$04                          ; 0x1c8cd $C8BD A9 04                   ; A = 04
sta      $072F                         ; 0x1c8cf $C8BF 8D 2F 07                ; Area Data Reading Offset
ldy      $072F                         ; 0x1c8d2 $C8C2 AC 2F 07                ;rts here to only do the header's draw commands(?) <---i dont  think so, check 0x1c5c9 
LC8C5                                                                          ;
lda      ($D4),y                       ; 0x1c8d5 $C8C5 B1 D4                   ; first byte of MAPDATA data
sta      $0730                         ; 0x1c8d7 $C8C7 8D 30 07                ; Position of Object Placement
jsr      bank7_Check_for_Skip_Object__E0_; 0x1c8da $C8CA 20 88 C9              ;
iny                                    ; 0x1c8dd $C8CD C8                      ;
lda      ($D4),y                       ; 0x1c8de $C8CE B1 D4                   ;
sta      $0731                         ; 0x1c8e0 $C8D0 8D 31 07                ; Level Object Type and Size
iny                                    ; 0x1c8e3 $C8D3 C8                      ;
sty      $072F                         ; 0x1c8e4 $C8D4 8C 2F 07                ; Area Data Reading Offset
jsr      LC95F                         ; 0x1c8e7 $C8D7 20 5F C9                ;
lda      $0730                         ; 0x1c8ea $C8DA AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c8ed $C8DD 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x1c8ef $C8DF C9 D0                   ;
bne      LC8E9                         ; 0x1c8f1 $C8E1 D0 06                   ;
cpy      $072E                         ; 0x1c8f3 $C8E3 CC 2E 07                ; Area Data Length
bne      LC8C5                         ; 0x1c8f6 $C8E6 D0 DD                   ;
rts                                    ; 0x1c8f8 $C8E8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8E9                                                                          ;
lda      $0731                         ; 0x1c8f9 $C8E9 AD 31 07                ; Level Object Type and Size
and      #$F0                          ; 0x1c8fc $C8EC 29 F0                   ; keep bits xxxx ....
beq      LC8F6                         ; 0x1c8fe $C8EE F0 06                   ;
jsr      LC912                         ; 0x1c900 $C8F0 20 12 C9                ;
jmp      LC909                         ; 0x1c903 $C8F3 4C 09 C9                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8F6                                                                          ;
lda      $0731                         ; 0x1c906 $C8F6 AD 31 07                ; Level Object Type and Size
cmp      #$0F                          ; 0x1c909 $C8F9 C9 0F                   ; 0F = Collectable Object
bne      LC906                         ; 0x1c90b $C8FB D0 09                   ;
jsr      LC9A5                         ; 0x1c90d $C8FD 20 A5 C9                ;
inc      $072F                         ; 0x1c910 $C900 EE 2F 07                ; Area Data Reading Offset
jmp      LC909                         ; 0x1c913 $C903 4C 09 C9                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC906                                                                          ;
jsr      bank7_Set_Address_for_Small_Object; 0x1c916 $C906 20 27 C9            ; Set Address for Background Object
LC909                                                                          ;
ldy      $072F                         ; 0x1c919 $C909 AC 2F 07                ; Area Data Reading Offset
cpy      $072E                         ; 0x1c91c $C90C CC 2E 07                ; Area Data Length
bne      LC8C5                         ; 0x1c91f $C90F D0 B4                   ;
rts                                    ; 0x1c921 $C911 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC912                                                                          ;
ldx      $0731                         ; 0x1c922 $C912 AE 31 07                ; Level Object Type and Size
lda      $0707                         ; 0x1c925 $C915 AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c928 $C918 20 85 D3; Set Object Construction Address
bank7_Pointer_table_for_Objects_Construction_Address                           ;
.word    bank3_Objects_Construction_Routines_Cross_Hatched_Roof_2_high_X_wide_1x; 0x1c92b $C91B EE 80;Overworld Areas (WH DM EH MI)
.word    bank3_code18                  ; 0x1c92d $C91D 86 9B                   ;Towns in West Hyrule
.word    bank3_code18                  ; 0x1c92f $C91F 86 9B                   ;Towns in East Hyrule
.word    bank3_Objects_Construction_Routines_Cross_Hatched_Roof_2_high_X_wide_1x; 0x1c931 $C921 EE 80;Palaces Type A
.word    bank3_Objects_Construction_Routines_Cross_Hatched_Roof_2_high_X_wide_1x; 0x1c933 $C923 EE 80;Palaces Type B
.word    bank3_Objects_Construction_Routines_Cross_Hatched_Roof_2_high_X_wide_1x; 0x1c935 $C925 EE 80;Great Palace                  
; ---------------------------------------------------------------------------- ;
bank7_Set_Address_for_Small_Object                                             ;
ldx      $0731                         ; 0x1c937 $C927 AE 31 07                ; Level Object Type and Size
lda      $0707                         ; 0x1c93a $C92A AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c93d $C92D 20 85 D3; Set Object Construction Address
bank7_Pointer_table_for_Small_Objects_Construction_Address                     ;
.word    L812F                         ; 0x1c940 $C930 2F 81                   ;Overworld Areas (WH DM EH MI)
.word    bank3_code19                  ; 0x1c942 $C932 CB 9B                   ;Towns in West Hyrule
.word    bank3_code19                  ; 0x1c944 $C934 CB 9B                   ;Towns in East Hyrule
.word    L812F                         ; 0x1c946 $C936 2F 81                   ;Palaces Type A
.word    L812F                         ; 0x1c948 $C938 2F 81                   ;Palaces Type B
.word    L812F                         ; 0x1c94a $C93A 2F 81                   ;Great Palace
bank7_Pointer_table_for_location_of_the_4_screens_in_RAM                       ;
.word    LD000                         ; 0x1c94c $C93C 00 D0                   ;
.word    L70A0                         ; 0x1c94e $C93E A0 70                   ;
.word    L6060                         ; 0x1c950 $C940 60 60                   ;
.word    L6261                         ; 0x1c952 $C942 61 62                   ;
; ---------------------------------------------------------------------------- ;
bank7_Set_RAM_Address_for_Object0E0F                                           ;
ldy      $0730                         ; 0x1c954 $C944 AC 30 07                ; Position of Object Placement
bank7_Set_Ram_Addy_for_Object__0E_0F                                           ;
tya                                    ; 0x1c957 $C947 98                      ;
pha                                    ; 0x1c958 $C948 48                      ;
lda      $0717                         ; 0x1c959 $C949 AD 17 07                ; Screen Number for Objects (0-3)
and      #$03                          ; 0x1c95c $C94C 29 03                   ; keep bits .... ..xx
tay                                    ; 0x1c95e $C94E A8                      ;
lda      bank7_Pointer_table_for_location_of_the_4_screens_in_RAM,y; 0x1c95f $C94F B9 3C C9;
sta      L000E                         ; 0x1c962 $C952 85 0E                   ;
lda      bank7_Pointer_table_for_location_of_the_4_screens_in_RAM+$04,y; 0x1c964 $C954 B9 40 C9;
sta      $0F                           ; 0x1c967 $C957 85 0F                   ;
pla                                    ; 0x1c969 $C959 68                      ;
tay                                    ; 0x1c96a $C95A A8                      ;
rts                                    ; 0x1c96b $C95B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC95C                                                                          ;
jsr      bank7_Check_for_Skip_Object__E0_; 0x1c96c $C95C 20 88 C9              ; Check for Skip Object (E0)
LC95F                                                                          ;
lda      $0730                         ; 0x1c96f $C95F AD 30 07                ; Position of Object Placement
and      #$0F                          ; 0x1c972 $C962 29 0F                   ; keep bits .... xxxx
clc                                    ; 0x1c974 $C964 18                      ;
adc      $010A                         ; 0x1c975 $C965 6D 0A 01                ;
sta      $010A                         ; 0x1c978 $C968 8D 0A 01                ;
and      #$0F                          ; 0x1c97b $C96B 29 0F                   ; keep bits .... xxxx
pha                                    ; 0x1c97d $C96D 48                      ;
lda      $0730                         ; 0x1c97e $C96E AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c981 $C971 29 F0                   ; keep bits xxxx ....
sta      $0730                         ; 0x1c983 $C973 8D 30 07                ;; Position of Object Placement
pla                                    ; 0x1c986 $C976 68                      ;
ora      $0730                         ; 0x1c987 $C977 0D 30 07                ; Position of Object Placement
sta      $0730                         ; 0x1c98a $C97A 8D 30 07                ;; Position of Object Placement
lda      $010A                         ; 0x1c98d $C97D AD 0A 01                ;
lsr                                    ; 0x1c990 $C980 4A                      ;
lsr                                    ; 0x1c991 $C981 4A                      ;
lsr                                    ; 0x1c992 $C982 4A                      ;
lsr                                    ; 0x1c993 $C983 4A                      ;
sta      $0717                         ; 0x1c994 $C984 8D 17 07                ; Screen Number for Objects (0-3)
rts                                    ; 0x1c997 $C987 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Check_for_Skip_Object__E0_                                               ;
lda      $0730                         ; 0x1c998 $C988 AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c99b $C98B 29 F0                   ; keep bits xxxx ....
cmp      #$E0                          ; 0x1c99d $C98D C9 E0                   ;
bne      LC9A4                         ; 0x1c99f $C98F D0 13                   ;
lda      $0730                         ; 0x1c9a1 $C991 AD 30 07                ; Position of Object Placement
and      #$03                          ; 0x1c9a4 $C994 29 03                   ; keep bits .... ..xx
asl                                    ; 0x1c9a6 $C996 0A                      ;
asl                                    ; 0x1c9a7 $C997 0A                      ;
asl                                    ; 0x1c9a8 $C998 0A                      ;
asl                                    ; 0x1c9a9 $C999 0A                      ;
sta      $010A                         ; 0x1c9aa $C99A 8D 0A 01                ;
iny                                    ; 0x1c9ad $C99D C8                      ;
iny                                    ; 0x1c9ae $C99E C8                      ;
lda      ($D4),y                       ; 0x1c9af $C99F B1 D4                   ;
sta      $0730                         ; 0x1c9b1 $C9A1 8D 30 07                ; Position of Object Placement
LC9A4                                                                          ;
rts                                    ; 0x1c9b4 $C9A4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC9A5                                                                          ;
ldx      #$05                          ; 0x1c9b5 $C9A5 A2 05                   ; X = 05
LC9A7                                                                          ;
lda      $B6,x                         ; 0x1c9b7 $C9A7 B5 B6                   ; Generated Enemy Slot
beq      LC9AF                         ; 0x1c9b9 $C9A9 F0 04                   ;
dex                                    ; 0x1c9bb $C9AB CA                      ;
bpl      LC9A7                         ; 0x1c9bc $C9AC 10 F9                   ;
inx                                    ; 0x1c9be $C9AE E8                      ;
LC9AF                                                                          ;
stx      $10                           ; 0x1c9bf $C9AF 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $0717                         ; 0x1c9c1 $C9B1 AD 17 07                ; Screen Number for Objects (0-3)
sta      $3C,x                         ; 0x1c9c4 $C9B4 95 3C                   ; Enemy X position (high byte)
tax                                    ; 0x1c9c6 $C9B6 AA                      ;
jsr      LC2A6                         ; 0x1c9c7 $C9B7 20 A6 C2                ;
ldx      $10                           ; 0x1c9ca $C9BA A6 10                   ;; used as monster x register ;draw boss hp bar
cmp      #$00                          ; 0x1c9cc $C9BC C9 00                   ;
beq      LC9E9                         ; 0x1c9ce $C9BE F0 29                   ;
ror      $BC,x                         ; 0x1c9d0 $C9C0 76 BC                   ;; Generated Enemy Y Position ?
lda      $0730                         ; 0x1c9d2 $C9C2 AD 30 07                ; Position of Object Placement
pha                                    ; 0x1c9d5 $C9C5 48                      ;
asl                                    ; 0x1c9d6 $C9C6 0A                      ;
asl                                    ; 0x1c9d7 $C9C7 0A                      ;
asl                                    ; 0x1c9d8 $C9C8 0A                      ;
asl                                    ; 0x1c9d9 $C9C9 0A                      ;
clc                                    ; 0x1c9da $C9CA 18                      ;
adc      #$03                          ; 0x1c9db $C9CB 69 03                   ;
sta      $4E,x                         ; 0x1c9dd $C9CD 95 4E                   ; Enemy X position (low byte)
pla                                    ; 0x1c9df $C9CF 68                      ;
and      #$F0                          ; 0x1c9e0 $C9D0 29 F0                   ; keep bits xxxx ....
clc                                    ; 0x1c9e2 $C9D2 18                      ;
adc      #$20                          ; 0x1c9e3 $C9D3 69 20                   ;
sta      $2A,x                         ; 0x1c9e5 $C9D5 95 2A                   ; Enemy Y Position
lda      #$01                          ; 0x1c9e7 $C9D7 A9 01                   ; A = 01
sta      $1A,x                         ; 0x1c9e9 $C9D9 95 1A                   ;
sta      $B6,x                         ; 0x1c9eb $C9DB 95 B6                   ; Generated Enemy Slot
sta      $A1,x                         ; 0x1c9ed $C9DD 95 A1                   ; Enemy Code
sta      $057E,x                       ; 0x1c9ef $C9DF 9D 7E 05                ; Enemy Y Velocity
ldy      $072F                         ; 0x1c9f2 $C9E2 AC 2F 07                ; Area Data Reading Offset
lda      ($D4),y                       ; 0x1c9f5 $C9E5 B1 D4                   ;
sta      $AF,x                         ; 0x1c9f7 $C9E7 95 AF                   ; Item Code
LC9E9                                                                          ;
rts                                    ; 0x1c9f9 $C9E9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table11                                                                  ;
.byt    $12,$16,$2A,$16                ; 0x1c9fa $C9EA 12 16 2A 16             ;
LC9EE                                                                          ;
.byt    $20,$C5,$FF                    ; 0x1c9fe $C9EE 20 C5 FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code15                                                                   ;
lda      #$0A                          ; 0x1ca01 $C9F1 A9 0A                   ; A = 0A
sta      $80                           ; 0x1ca03 $C9F3 85 80                   ; Current Animation Frame for Link (OW and SS)
jsr      bank7_Links_Display_Routine   ; 0x1ca05 $C9F5 20 F0 EB                ;
lda      $12                           ; 0x1ca08 $C9F8 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x1ca0a $C9FA 29 03                   ; keep bits .... ..xx
tax                                    ; 0x1ca0c $C9FC AA                      ;
lda      bank7_table11,x               ; 0x1ca0d $C9FD BD EA C9                ;
sta      $696F                         ; 0x1ca10 $CA00 8D 6F 69                ;
lda      $050E                         ; 0x1ca13 $CA03 AD 0E 05                ;
bne      LCA15                         ; 0x1ca16 $CA06 D0 0D                   ;
lda      #$0F                          ; 0x1ca18 $CA08 A9 0F                   ; A = 0F
sta      $696F                         ; 0x1ca1a $CA0A 8D 6F 69                ;
lda      #$10                          ; 0x1ca1d $CA0D A9 10                   ; A = 10
jsr      bank7_chr_bank_switch__load_A ; 0x1ca1f $CA0F 20 B1 FF                ;
inc      $0736                         ; 0x1ca22 $CA12 EE 36 07                ; Game Mode
LCA15                                                                          ;
lda      #$04                          ; 0x1ca25 $CA15 A9 04                   ; A = 04
LCA17                                                                          ;
sta      $0725                         ; 0x1ca27 $CA17 8D 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1ca2a $CA1A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA1B                                                                          ;
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1ca2b $CA1B 20 82 D3;
bank7_pointer_table11                                                          ;
.word    L8140                         ; 0x1ca2e $CA1E 40 81                   ;
.word    bank7_code16                  ; 0x1ca30 $CA20 24 CA                   ;
.word    LCA72                         ; 0x1ca32 $CA22 72 CA                   ;
; ---------------------------------------------------------------------------- ;
bank7_code16                                                                   ;
ldx      #$01                          ; 0x1ca34 $CA24 A2 01                   ; X = 01
LCA26                                                                          ;
jsr      LCB18_fill_hp_or_mp_to_full__provide_x_register__maybe; 0x1ca36 $CA26 20 18 CB;
dex                                    ; 0x1ca39 $CA29 CA                      ;
bpl      LCA26                         ; 0x1ca3a $CA2A 10 FA                   ;
lda      #$00                          ; 0x1ca3c $CA2C A9 00                   ; A = 00
sta      $074C                         ; 0x1ca3e $CA2E 8D 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
sta      $0524                         ; 0x1ca41 $CA31 8D 24 05                ; Routine Index
sta      $0525                         ; 0x1ca44 $CA34 8D 25 05                ; Routine Delay
sta      $DE                           ; 0x1ca47 $CA37 85 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
sta      $048D                         ; 0x1ca49 $CA39 8D 8D 04                ; Related to Link's flicker after being hit ?
ldy      #$05                          ; 0x1ca4c $CA3C A0 05                   ; Y = 05
LCA3E                                                                          ;
sta      $05C3,y                       ; 0x1ca4e $CA3E 99 C3 05                ;
dey                                    ; 0x1ca51 $CA41 88                      ;
bpl      LCA3E                         ; 0x1ca52 $CA42 10 FA                   ;
dec      $0700                         ; 0x1ca54 $CA44 CE 00 07                ; Current number of lives
bne      LCA6C                         ; 0x1ca57 $CA47 D0 23                   ;
;Game Over                                                                     ;
lda      #$02                          ; 0x1ca59 $CA49 A9 02                   ; A = 02
sta      $E9                           ; 0x1ca5b $CA4B 85 E9                   ;
lda      #$F0                          ; 0x1ca5d $CA4D A9 F0                   ; A = F0 (delay to show Ganon's Return)
sta      $0501                         ; 0x1ca5f $CA4F 8D 01 05                ;; Timer
inc      $0726                         ; 0x1ca62 $CA52 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
inc      $073D                         ; 0x1ca65 $CA55 EE 3D 07                ;; Routine Index
lda      #$09                          ; 0x1ca68 $CA58 A9 09                   ; A = 09
jsr      LCA17                         ; 0x1ca6a $CA5A 20 17 CA                ;
lda      #$00                          ; 0x1ca6d $CA5D A9 00                   ; A = 00
sta      $0775                         ; 0x1ca6f $CA5F 8D 75 07                ; Current Experience (high byte)
sta      $0776                         ; 0x1ca72 $CA62 8D 76 07                ; Current Experience (low byte)
sta      $0756                         ; 0x1ca75 $CA65 8D 56 07                ; Experience to be added (low byte)
sta      $0755                         ; 0x1ca78 $CA68 8D 55 07                ; Experience to be added (high byte)
rts                                    ; 0x1ca7b $CA6B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA6C                                                                          ;
lda      #$06                          ; 0x1ca7c $CA6C A9 06                   ; A = 06
sta      $076C                         ; 0x1ca7e $CA6E 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
LCA71                                                                          ;
rts                                    ; 0x1ca81 $CA71 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA72                                                                          ;
lda      #$00                          ; 0x1ca82 $CA72 A9 00                   ; A = 00
sta      $0726                         ; 0x1ca84 $CA74 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
lda      $F7                           ; 0x1ca87 $CA77 A5 F7                   ; Controller 1 Buttons Held
and      #$10                          ; 0x1ca89 $CA79 29 10                   ; keep bits ...x .... (Start button)
bne      LCA82                         ; 0x1ca8b $CA7B D0 05                   ;
lda      $0501                         ; 0x1ca8d $CA7D AD 01 05                ;; Timer
bne      LCA71                         ; 0x1ca90 $CA80 D0 EF                   ;
LCA82                                                                          ;
jmp      LCF05                         ; 0x1ca92 $CA82 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA85                                                                          ;
lda      $F7                           ; 0x1ca95 $CA85 A5 F7                   ; Controller 1 Buttons Held
and      #$30                          ; 0x1ca97 $CA87 29 30                   ; keep bits ..xx .... (Start/Select buttons)
asl                                    ; 0x1ca99 $CA89 0A                      ;
asl                                    ; 0x1ca9a $CA8A 0A                      ;
sta      L0000                         ; 0x1ca9b $CA8B 85 00                   ;
lda      $0744                         ; 0x1ca9d $CA8D AD 44 07                ; Controller 1 Buttons Held
and      #$30                          ; 0x1caa0 $CA90 29 30                   ; keep bits ..xx ....
asl                                    ; 0x1caa2 $CA92 0A                      ;
asl                                    ; 0x1caa3 $CA93 0A                      ;
cmp      L0000                         ; 0x1caa4 $CA94 C5 00                   ;
beq      LCAF6                         ; 0x1caa6 $CA96 F0 5E                   ;
bit      L0000                         ; 0x1caa8 $CA98 24 00                   ;
bvc      LCAF7_gameoverscreen_select_button_pressed; 0x1caaa $CA9A 50 5B       ;
lda      $079F                         ; 0x1caac $CA9C AD 9F 07                ; Number of Continues used
cmp      #$FF                          ; 0x1caaf $CA9F C9 FF                   ;
beq      LCAA6                         ; 0x1cab1 $CAA1 F0 03                   ;
inc      $079F                         ; 0x1cab3 $CAA3 EE 9F 07                ; Number of Continues + 1
;Reset Memory Ranges                                                           ;
LCAA6                                                                          ;
ldx      #$0F                          ; 0x1cab6 $CAA6 A2 0F                   ; X = 0F
lda      #$00                          ; 0x1cab8 $CAA8 A9 00                   ; A = 00
LCAAA                                                                          ;
sta      $E0,x                         ; 0x1caba $CAAA 95 E0                   ;
dex                                    ; 0x1cabc $CAAC CA                      ;
bpl      LCAAA                         ; 0x1cabd $CAAD 10 FB                   ;
ldy      #$C0                          ; 0x1cabf $CAAF A0 C0                   ; Y = C0
LCAB1                                                                          ;
sta      $0700,y                       ; 0x1cac1 $CAB1 99 00 07                ;
iny                                    ; 0x1cac4 $CAB4 C8                      ;
bne      LCAB1                         ; 0x1cac5 $CAB5 D0 FA                   ;
lda      $0488                         ; 0x1cac7 $CAB7 AD 88 04                ;
beq      LCAC4                         ; 0x1caca $CABA F0 08                   ;
lda      #$40                          ; 0x1cacc $CABC A9 40                   ; A = 40
sta      $07B0                         ; 0x1cace $CABE 8D B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
jmp      LCF05                         ; 0x1cad1 $CAC1 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCAC4                                                                          ;
sta      $0775                         ; 0x1cad4 $CAC4 8D 75 07                ; Current Experience (high byte)
sta      $0776                         ; 0x1cad7 $CAC7 8D 76 07                ; Current Experience (low byte)
sta      $0756                         ; 0x1cada $CACA 8D 56 07                ; Experience to be added (low byte)
sta      $0755                         ; 0x1cadd $CACD 8D 55 07                ; Experience to be added (high byte)
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1cae0 $CAD0 20 30 CF; Region Code * 5 + World Code
cmp      #$0F                          ; 0x1cae3 $CAD3 C9 0F                   ; Check if in Great Palace
beq      bank7_restore_in_grand_palace_restore_restart_in_gp; 0x1cae5 $CAD5 F0 07;
lda      #$00                          ; 0x1cae7 $CAD7 A9 00                   ; A = 00
ldy      #$01                          ; 0x1cae9 $CAD9 A0 01                   ; Y = 01
jmp      LCAF0                         ; 0x1caeb $CADB 4C F0 CA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_restore_in_grand_palace_restore_restart_in_gp                            ;
jsr      bank7_Reset_Number_of_Lives__to_3_; 0x1caee $CADE 20 58 C3            ; Reset Number of Lives (to 3)
lda      #$00                          ; 0x1caf1 $CAE1 A9 00                   ; A = 00
sta      $0561                         ; 0x1caf3 $CAE3 8D 61 05                ; Area Code
sta      $0701                         ; 0x1caf6 $CAE6 8D 01 07                ; Facing direction when entering area
sta      $075C                         ; 0x1caf9 $CAE9 8D 5C 07                ; Position code when entering area (0-3)
lda      #$01                          ; 0x1cafc $CAEC A9 01                   ; A = 01 (if 0, restart in North Castle)
ldy      #$02                          ; 0x1cafe $CAEE A0 02                   ; Y = 02
LCAF0                                                                          ;
sta      $076C                         ; 0x1cb00 $CAF0 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
sty      $075F                         ; 0x1cb03 $CAF3 8C 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCAF6                                                                          ;
rts                                    ; 0x1cb06 $CAF6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCAF7_gameoverscreen_select_button_pressed                                     ;
bpl      LCAF6                         ; 0x1cb07 $CAF7 10 FD                   ;
lda      #$10                          ; 0x1cb09 $CAF9 A9 10                   ; A = 10
sta      $EF                           ; 0x1cb0b $CAFB 85 EF                   ; Sound Effects Type 4
ldy      #$06                          ; 0x1cb0d $CAFD A0 06                   ; Y = 06
LCAFF                                                                          ;
lda      $6974,y                       ; 0x1cb0f $CAFF B9 74 69                ;
sta      L0302,y                       ; 0x1cb12 $CB02 99 02 03                ;
dey                                    ; 0x1cb15 $CB05 88                      ;
bpl      LCAFF                         ; 0x1cb16 $CB06 10 F7                   ;
lda      $0488                         ; 0x1cb18 $CB08 AD 88 04                ;
eor      #$01                          ; 0x1cb1b $CB0B 49 01                   ; flip bits .... ...x
sta      $0488                         ; 0x1cb1d $CB0D 8D 88 04                ;
asl                                    ; 0x1cb20 $CB10 0A                      ;
tay                                    ; 0x1cb21 $CB11 A8                      ;
lda      #$FA                          ; 0x1cb22 $CB12 A9 FA                   ; A = FA
sta      $0305,y                       ; 0x1cb24 $CB14 99 05 03                ;
rts                                    ; 0x1cb27 $CB17 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB18_fill_hp_or_mp_to_full__provide_x_register__maybe                         ;
;Magic Containers to Magic Units in Meter                                      ;
;Heart Containers to Life Units in Meter                                       ;
;                                                                              ;
;X = 0 -> Magic                                                                ;
;X = 1 -> Life                                                                 ;
;                                                                              ;
;Units Left = Number of Containers * 20 - 1                                    ;
lda      $0783,x                       ; 0x1cb28 $CB18 BD 83 07                ; Current number of Magic/Heart Containers
asl                                    ; 0x1cb2b $CB1B 0A                      ;
asl                                    ; 0x1cb2c $CB1C 0A                      ;
asl                                    ; 0x1cb2d $CB1D 0A                      ;
asl                                    ; 0x1cb2e $CB1E 0A                      ;
asl                                    ; 0x1cb2f $CB1F 0A                      ;
sec                                    ; 0x1cb30 $CB20 38                      ;
sbc      #$01                          ; 0x1cb31 $CB21 E9 01                   ;
sta      $0773,x                       ; 0x1cb33 $CB23 9D 73 07                ; Current Magic/Life left in meter
rts                                    ; 0x1cb36 $CB26 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB27                                                                          ;
lda      #$0E                          ; 0x1cb37 $CB27 A9 0E                   ; A = 0E
sta      $076E                         ; 0x1cb39 $CB29 8D 6E 07                ; Graphics bank to use
jsr      LC388                         ; 0x1cb3c $CB2C 20 88 C3                ;
jmp      LC360                         ; 0x1cb3f $CB2F 4C 60 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Height_of_frontier_between_North_and_South                               ;
;3C	Region 0	West Hyrule                                                       ;
;4B	Region 1	Death Mountain, Maze Island                                       ;
;4C	Region 2	East Hyrule                                                       ;
.byt    $3C,$4B,$4C                    ; 0x1cb42 $CB32 3C 4B 4C                ;
; ---------------------------------------------------------------------------- ;
bank7_code17                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cb45 $CB35 20 C9 FF                ; Load Bank in $0769
ldy      $0748                         ; 0x1cb48 $CB38 AC 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
cpy      #$FF                          ; 0x1cb4b $CB3B C0 FF                   ;
bne      LCB42                         ; 0x1cb4d $CB3D D0 03                   ;
jmp      bank7_Determine_the_Random_Battle_according_to_Links_position_in_OW; 0x1cb4f $CB3F 4C 0F CC;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB42                                                                          ;
lda      $0706                         ; 0x1cb52 $CB42 AD 06 07                ; Current Region
bne      LCB4B                         ; 0x1cb55 $CB45 D0 04                   ;
cpy      #$00                          ; 0x1cb57 $CB47 C0 00                   ;
beq      LCB59                         ; 0x1cb59 $CB49 F0 0E                   ;
;On exit, appear at the location of area index minus this value (0-3)          ;
LCB4B                                                                          ;
lda      $07AC                         ; 0x1cb5b $CB4B AD AC 07                ;
ora      $07AA                         ; 0x1cb5e $CB4E 0D AA 07                ;
ora      $07AD                         ; 0x1cb61 $CB51 0D AD 07                ;; * related to Raft Animation *
bne      LCB59                         ; 0x1cb64 $CB54 D0 03                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cb66 $CB56 20 3D D0   ; Mute Music
LCB59                                                                          ;
lda      $6A3F,y                       ; 0x1cb69 $CB59 B9 3F 6A                ; Area Byte 1 (X Position)
and      #$C0                          ; 0x1cb6c $CB5C 29 C0                   ; keep bits xx.. ....
asl                                    ; 0x1cb6e $CB5E 0A                      ;
rol                                    ; 0x1cb6f $CB5F 2A                      ;
rol                                    ; 0x1cb70 $CB60 2A                      ;
sta      L0000                         ; 0x1cb71 $CB61 85 00                   ;
tya                                    ; 0x1cb73 $CB63 98                      ;
sec                                    ; 0x1cb74 $CB64 38                      ;
sbc      L0000                         ; 0x1cb75 $CB65 E5 00                   ;
sta      $0748                         ; 0x1cb77 $CB67 8D 48 07                ; Overworld Area out of Side View
lda      $6A00,y                       ; 0x1cb7a $CB6A B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1cb7d $CB6D 0A                      ;
bcc      LCBB8                         ; 0x1cb7e $CB6E 90 48                   ;
lda      #$00                          ; 0x1cb80 $CB70 A9 00                   ; A = 00
sta      $07DB                         ; 0x1cb82 $CB72 8D DB 07                ;; Something for Palaces ?
jsr      bank7_Get_Area_Code__Enter_Code_and_Direction; 0x1cb85 $CB75 20 97 CC ; Get Area Code, Enter Code and Direction
lda      $0748                         ; 0x1cb88 $CB78 AD 48 07                ; Overworld Area out of Side View
sec                                    ; 0x1cb8b $CB7B 38                      ;
sbc      #$2C                          ; 0x1cb8c $CB7C E9 2C                   ;
lsr                                    ; 0x1cb8e $CB7E 4A                      ;
sta      $056B                         ; 0x1cb8f $CB7F 8D 6B 05                ; Town Code
;$056B = ($0748 - #$2C) / 2 (no remainder)                                     ;
lda      $0748                         ; 0x1cb92 $CB82 AD 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
sec                                    ; 0x1cb95 $CB85 38                      ;
sbc      #$34                          ; 0x1cb96 $CB86 E9 34                   ;
sta      $056C                         ; 0x1cb98 $CB88 8D 6C 05                ; Palace Code
;$056C = $0748 - #$34                                                          ;
lda      $0706                         ; 0x1cb9b $CB8B AD 06 07                ; Current Region
sta      $070A                         ; 0x1cb9e $CB8E 8D 0A 07                ;; Previous Region ?
lda      $6ABD,y                       ; 0x1cba1 $CB91 B9 BD 6A                ; Area Byte 3 (World Number)
pha                                    ; 0x1cba4 $CB94 48                      ;
and      #$03                          ; 0x1cba5 $CB95 29 03                   ; keep bits .... ..xx
sta      $0706                         ; 0x1cba7 $CB97 8D 06 07                ; Current Region
beq      LCBA5                         ; 0x1cbaa $CB9A F0 09                   ;
;If Region != 0, Town Code + 4                                                 ;
lda      $056B                         ; 0x1cbac $CB9C AD 6B 05                ; Town Code
clc                                    ; 0x1cbaf $CB9F 18                      ;
adc      #$04                          ; 0x1cbb0 $CBA0 69 04                   ;
sta      $056B                         ; 0x1cbb2 $CBA2 8D 6B 05                ;; Town Code	;used by wise man to pick magic to give?
LCBA5                                                                          ;
pla                                    ; 0x1cbb5 $CBA5 68                      ;
lsr                                    ; 0x1cbb6 $CBA6 4A                      ;
lsr                                    ; 0x1cbb7 $CBA7 4A                      ;
and      #$07                          ; 0x1cbb8 $CBA8 29 07                   ; keep bits .... .xxx
sta      $0707                         ; 0x1cbba $CBAA 8D 07 07                ; Current World
bne      LCBB2                         ; 0x1cbbd $CBAD D0 03                   ;
inc      $0709                         ; 0x1cbbf $CBAF EE 09 07                ;; used for going outside??
LCBB2                                                                          ;
lda      #$00                          ; 0x1cbc2 $CBB2 A9 00                   ; A = 00
sta      $0736                         ; 0x1cbc4 $CBB4 8D 36 07                ; Game Mode
rts                                    ; 0x1cbc7 $CBB7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBB8                                                                          ;
lda      $0706                         ; 0x1cbc8 $CBB8 AD 06 07                ; Current Region
ora      $0707                         ; 0x1cbcb $CBBB 0D 07 07                ; Current World
ora      $0748                         ; 0x1cbce $CBBE 0D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
beq      LCBCD                         ; 0x1cbd1 $CBC1 F0 0A                   ;
lda      $07AC                         ; 0x1cbd3 $CBC3 AD AC 07                ;
bne      LCBCD                         ; 0x1cbd6 $CBC6 D0 05                   ;
lda      #$04                          ; 0x1cbd8 $CBC8 A9 04                   ; A = 04
sta      $075F                         ; 0x1cbda $CBCA 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCBCD                                                                          ;
jsr      bank7_Get_Area_Code__Enter_Code_and_Direction; 0x1cbdd $CBCD 20 97 CC ;
;Related to the side Link enters from in a pass-through area                   ;
lda      $6ABD,y                       ; 0x1cbe0 $CBD0 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$60                          ; 0x1cbe3 $CBD3 29 60                   ; keep bits .xx. ....
beq      LCBF2                         ; 0x1cbe5 $CBD5 F0 1B                   ;
and      #$20                          ; 0x1cbe7 $CBD7 29 20                   ; keep bits ..x. ....
bne      LCBF8                         ; 0x1cbe9 $CBD9 D0 1D                   ;
lda      $0562                         ; 0x1cbeb $CBDB AD 62 05                ; Link's facing direction in OW
cmp      #$04                          ; 0x1cbee $CBDE C9 04                   ; check if Link is facing left or right
bcc      LCBE4                         ; 0x1cbf0 $CBE0 90 02                   ;
lsr                                    ; 0x1cbf2 $CBE2 4A                      ;
lsr                                    ; 0x1cbf3 $CBE3 4A                      ;
LCBE4                                                                          ;
and      #$01                          ; 0x1cbf4 $CBE4 29 01                   ; keep bits .... ...x
eor      #$01                          ; 0x1cbf6 $CBE6 49 01                   ; flip bits .... ...x
sta      $0701                         ; 0x1cbf8 $CBE8 8D 01 07                ; Facing direction when entering area
beq      LCBEF                         ; 0x1cbfb $CBEB F0 02                   ;
lda      #$03                          ; 0x1cbfd $CBED A9 03                   ; A = 03
LCBEF                                                                          ;
sta      $075C                         ; 0x1cbff $CBEF 8D 5C 07                ; Position code when entering area (0-3)
LCBF2                                                                          ;
inc      $0736                         ; 0x1cc02 $CBF2 EE 36 07                ; Game Mode
jmp      LCC40                         ; 0x1cc05 $CBF5 4C 40 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBF8                                                                          ;
lda      #$01                          ; 0x1cc08 $CBF8 A9 01                   ; A = 01
sta      $0701                         ; 0x1cc0a $CBFA 8D 01 07                ; Facing direction when entering area
lda      $075F                         ; 0x1cc0d $CBFD AD 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
cmp      #$01                          ; 0x1cc10 $CC00 C9 01                   ;
bne      LCBF2                         ; 0x1cc12 $CC02 D0 EE                   ;
sta      $075C                         ; 0x1cc14 $CC04 8D 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
jsr      LCC50                         ; 0x1cc17 $CC07 20 50 CC                ;
lda      #$11                          ; 0x1cc1a $CC0A A9 11                   ; A = 11
jmp      LCC85                         ; 0x1cc1c $CC0C 4C 85 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Determine_the_Random_Battle_according_to_Links_position_in_OW            ;
ldy      $0706                         ; 0x1cc1f $CC0F AC 06 07                ; Current Region
lda      $73                           ; 0x1cc22 $CC12 A5 73                   ; Y Position on OW (square unit)
cmp      bank7_Height_of_frontier_between_North_and_South,y; 0x1cc24 $CC14 D9 32 CB; Height of frontier between North and South
lda      #$00                          ; 0x1cc27 $CC17 A9 00                   ; A = 00
rol                                    ; 0x1cc29 $CC19 2A                      ;
sta      L0000                         ; 0x1cc2a $CC1A 85 00                   ;
lda      $0563                         ; 0x1cc2c $CC1C AD 63 05                ; Type of terrain Link is facing in OW
sec                                    ; 0x1cc2f $CC1F 38                      ;
sbc      #$04                          ; 0x1cc30 $CC20 E9 04                   ;
asl                                    ; 0x1cc32 $CC22 0A                      ;
adc      L0000                         ; 0x1cc33 $CC23 65 00                   ;
tay                                    ; 0x1cc35 $CC25 A8                      ;
lda      L8409,y                       ; 0x1cc36 $CC26 B9 09 84                ;
ldy      #$3E                          ; 0x1cc39 $CC29 A0 3E                   ; Y = 3E
sta      $6A7E,y                       ; 0x1cc3b $CC2B 99 7E 6A                ; Area Byte 2 (Map Number)
lda      $73                           ; 0x1cc3e $CC2E A5 73                   ;; Overworld Y; Y Position on OW (square unit)
sta      $6A00,y                       ; 0x1cc40 $CC30 99 00 6A                ; Area Byte 0 (Y Position)
lda      $74                           ; 0x1cc43 $CC33 A5 74                   ;; Overworld X; X Position on OW (square unit)
sta      $6A3F,y                       ; 0x1cc45 $CC35 99 3F 6A                ; Area Byte 1 (X Position)
jsr      LCB59                         ; 0x1cc48 $CC38 20 59 CB                ;
lda      #$00                          ; 0x1cc4b $CC3B A9 00                   ; A = 00
sta      $075F                         ; 0x1cc4d $CC3D 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCC40                                                                          ;
lda      $6ABD,y                       ; 0x1cc50 $CC40 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$20                          ; 0x1cc53 $CC43 29 20                   ; keep bits ..x. .... (enter from right)
bne      LCC89                         ; 0x1cc55 $CC45 D0 42                   ;
lda      $075C                         ; 0x1cc57 $CC47 AD 5C 07                ; Position code when entering area
beq      LCC89                         ; 0x1cc5a $CC4A F0 3D                   ;
cmp      #$03                          ; 0x1cc5c $CC4C C9 03                   ;
beq      LCC89                         ; 0x1cc5e $CC4E F0 39                   ;
LCC50                                                                          ;
and      #$01                          ; 0x1cc60 $CC50 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1cc62 $CC52 8D 01 07                ; Facing direction when entering area
lda      #$70                          ; 0x1cc65 $CC55 A9 70                   ; A = 70
sta      $4D                           ; 0x1cc67 $CC57 85 4D                   ; Link's X Position (low byte)
ldx      #$0B                          ; 0x1cc69 $CC59 A2 0B                   ; X = 0B
stx      $0734                         ; 0x1cc6b $CC5B 8E 34 07                ;
ldx      #$06                          ; 0x1cc6e $CC5E A2 06                   ; X = 06
stx      $0735                         ; 0x1cc70 $CC60 8E 35 07                ;
ldx      #$00                          ; 0x1cc73 $CC63 A2 00                   ; X = 00
stx      $FD                           ; 0x1cc75 $CC65 86 FD                   ;
stx      $072C                         ; 0x1cc77 $CC67 8E 2C 07                ; Scrolling Offset Low Byte
ldx      $075C                         ; 0x1cc7a $CC6A AE 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
stx      $3B                           ; 0x1cc7d $CC6D 86 3B                   ; Link's X Position (high byte)
stx      $072A                         ; 0x1cc7f $CC6F 8E 2A 07                ; Scrolling Offset High Byte
dex                                    ; 0x1cc82 $CC72 CA                      ;
stx      $0732                         ; 0x1cc83 $CC73 8E 32 07                ;
inx                                    ; 0x1cc86 $CC76 E8                      ;
inx                                    ; 0x1cc87 $CC77 E8                      ;
stx      $0733                         ; 0x1cc88 $CC78 8E 33 07                ;
lda      $6ABD,y                       ; 0x1cc8b $CC7B B9 BD 6A                ; Area Byte 3 (World Number)
asl                                    ; 0x1cc8e $CC7E 0A                      ;
lda      #$12                          ; 0x1cc8f $CC7F A9 12                   ; A = 12
bcc      LCC85                         ; 0x1cc91 $CC81 90 02                   ;
lda      #$0C                          ; 0x1cc93 $CC83 A9 0C                   ; A = 0C
LCC85                                                                          ;
sta      $0736                         ; 0x1cc95 $CC85 8D 36 07                ; Game Mode
LCC88                                                                          ;
rts                                    ; 0x1cc98 $CC88 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC89                                                                          ;
lda      $6ABD,y                       ; 0x1cc99 $CC89 B9 BD 6A                ; Area Byte 3 (World Number)
asl                                    ; 0x1cc9c $CC8C 0A                      ;
bcc      LCC88                         ; 0x1cc9d $CC8D 90 F9                   ;
lda      #$01                          ; 0x1cc9f $CC8F A9 01                   ; A = 01
sta      $075C                         ; 0x1cca1 $CC91 8D 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
jmp      LCC50                         ; 0x1cca4 $CC94 4C 50 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Get_Area_Code__Enter_Code_and_Direction                                  ;
lda      $6A7E,y                       ; 0x1cca7 $CC97 B9 7E 6A                ; Area Byte 2 (Map Number)
pha                                    ; 0x1ccaa $CC9A 48                      ;
and      #$3F                          ; 0x1ccab $CC9B 29 3F                   ; keep bits ..xx xxxx
sta      $0561                         ; 0x1ccad $CC9D 8D 61 05                ; Area Code
pla                                    ; 0x1ccb0 $CCA0 68                      ;
asl                                    ; 0x1ccb1 $CCA1 0A                      ;
rol                                    ; 0x1ccb2 $CCA2 2A                      ;
rol                                    ; 0x1ccb3 $CCA3 2A                      ;
and      #$03                          ; 0x1ccb4 $CCA4 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1ccb6 $CCA6 8D 5C 07                ; Position code when entering area
and      #$01                          ; 0x1ccb9 $CCA9 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1ccbb $CCAB 8D 01 07                ; Facing direction when entering area
rts                                    ; 0x1ccbe $CCAE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCAF                                                                          ;
lda      #$66                          ; 0x1ccbf $CCAF A9 66                   ; A = 66
bne      LCCCC                         ; 0x1ccc1 $CCB1 D0 19                   ;
bank7_go_outside                                                               ;
lda      #$00                          ; 0x1ccc3 $CCB3 A9 00                   ; A = 00
sta      $0709                         ; 0x1ccc5 $CCB5 8D 09 07                ;; used for going outside??
sta      $075B                         ; 0x1ccc8 $CCB8 8D 5B 07                ;
ldy      $0748                         ; 0x1cccb $CCBB AC 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
lda      $6A00,y                       ; 0x1ccce $CCBE B9 00 6A                ; Area Byte 0 (Y Position)
bne      LCCCC                         ; 0x1ccd1 $CCC1 D0 09                   ;
lda      #$3D                          ; 0x1ccd3 $CCC3 A9 3D                   ; A = 3D
cmp      $6A3F,y                       ; 0x1ccd5 $CCC5 D9 3F 6A                ; Area Byte 1 (X Position)
bne      LCCAF                         ; 0x1ccd8 $CCC8 D0 E5                   ;
lda      #$51                          ; 0x1ccda $CCCA A9 51                   ; A = 51
LCCCC                                                                          ;
and      #$7F                          ; 0x1ccdc $CCCC 29 7F                   ; keep bits .xxx xxxx
sta      $73                           ; 0x1ccde $CCCE 85 73                   ; Y Position on OW (square unit)
lda      $6A3F,y                       ; 0x1cce0 $CCD0 B9 3F 6A                ; Area Byte 1 (X Position)
and      #$3F                          ; 0x1cce3 $CCD3 29 3F                   ; keep bits ..xx xxxx
sta      $74                           ; 0x1cce5 $CCD5 85 74                   ; X Position on OW (square unit)
lda      $6ABD,y                       ; 0x1cce7 $CCD7 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$40                          ; 0x1ccea $CCDA 29 40                   ; keep bits .x.. .... (unknown bit)
beq      LCCF9                         ; 0x1ccec $CCDC F0 1B                   ;
ldx      $0562                         ; 0x1ccee $CCDE AE 62 05                ; Link's facing direction in OW
cpx      #$04                          ; 0x1ccf1 $CCE1 E0 04                   ; check if Link is facing down
bcs      LCCFF                         ; 0x1ccf3 $CCE3 B0 1A                   ;
inc      $74                           ; 0x1ccf5 $CCE5 E6 74                   ; X Position on OW (square unit)
ldx      $5F                           ; 0x1ccf7 $CCE7 A6 5F                   ;; Link's facing direction
lda      $6A00,y                       ; 0x1ccf9 $CCE9 B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1ccfc $CCEC 0A                      ; check for "External" bit
bcc      LCCF2                         ; 0x1ccfd $CCED 90 03                   ;
ldx      $0562                         ; 0x1ccff $CCEF AE 62 05                ; Link's facing direction in OW
LCCF2                                                                          ;
dex                                    ; 0x1cd02 $CCF2 CA                      ;
beq      LCCF9                         ; 0x1cd03 $CCF3 F0 04                   ;
dec      $74                           ; 0x1cd05 $CCF5 C6 74                   ; X Position on OW (square unit)
dec      $74                           ; 0x1cd07 $CCF7 C6 74                   ;; Overworld X; X Position on OW (square unit)
LCCF9                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1cd09 $CCF9 20 C5 FF                ; Load Bank 0
jmp      LCF05                         ; 0x1cd0c $CCFC 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCFF                                                                          ;
inc      $73                           ; 0x1cd0f $CCFF E6 73                   ; Y Position on OW (square unit)
ldx      $5F                           ; 0x1cd11 $CD01 A6 5F                   ;; Link's facing direction
lda      $6A00,y                       ; 0x1cd13 $CD03 B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1cd16 $CD06 0A                      ; check for "External" bit
bcc      LCD0F                         ; 0x1cd17 $CD07 90 06                   ;
lda      $0562                         ; 0x1cd19 $CD09 AD 62 05                ; Link's facing direction in OW
lsr                                    ; 0x1cd1c $CD0C 4A                      ;
lsr                                    ; 0x1cd1d $CD0D 4A                      ;
tax                                    ; 0x1cd1e $CD0E AA                      ;
LCD0F                                                                          ;
dex                                    ; 0x1cd1f $CD0F CA                      ;
beq      LCCF9                         ; 0x1cd20 $CD10 F0 E7                   ;
dec      $73                           ; 0x1cd22 $CD12 C6 73                   ; Y Position on OW (square unit)
dec      $73                           ; 0x1cd24 $CD14 C6 73                   ;; Overworld Y; Y Position on OW (square unit)
jmp      LCCF9                         ; 0x1cd26 $CD16 4C F9 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD19                                                                          ;
jsr      LD15C                         ; 0x1cd29 $CD19 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1cd2c $CD1C 20 85 D3;
bank7_pointer_table12                                                          ;
.word    LCF21_SaveGameWhenChooseSAVEwhenDead__maybe; 0x1cd2f $CD1F 21 CF      ;
.word    LCF05                         ; 0x1cd31 $CD21 05 CF                   ;
bank7_Pointer_table_for_Key_Areas_Data                                         ;
.word    bank3_Tables_for_Level_Layers_Data; 0x1cd33 $CD23 1F 86               ;West Hyrule - Key Areas (Y Pos, X Pos, Map, World)
.word    LA0FC                         ; 0x1cd35 $CD25 FC A0                   ;Death Mountain - Key Areas (Y Pos, X Pos, Map, World)
; ---------------------------------------------------------------------------- ;
bank7_Region_Overworld_Map_Pointer_Offset_Selector                             ;
.byt    $00,$02,$00                    ; 0x1cd37 $CD27 00 02 00                ;Region Overworld Map Pointer Offset Selector (3 bytes) for $706?
bank7_Graphics_Bank_for_Palaces_Palace_1                                       ;
;Index = Region (706) * 4 + Palace Code (56C)                                  ;
.byt    $04                            ; 0x1cd3a $CD2A 04                      ;04	Palace 1
bank7_Graphics_Bank_for_Palaces_Palace_2                                       ;
.byt    $05                            ; 0x1cd3b $CD2B 05                      ;05	Palace 2
bank7_Graphics_Bank_for_Palaces_Palace_3                                       ;
.byt    $09                            ; 0x1cd3c $CD2C 09                      ;09	Palace 3
bank7_Graphics_Bank_for_Palaces_Hypothetical_Palace_in_Region_0                ;
.byt    $09                            ; 0x1cd3d $CD2D 09                      ;09	Hypothetical Palace in Region 0
bank7_Graphics_Bank_for_Palaces_Palace_4                                       ;
.byt    $0A                            ; 0x1cd3e $CD2E 0A                      ;0A	Palace 4
bank7_Graphics_Bank_for_Palaces_Hypothetical_Palace_in_Region_1                ;
.byt    $0A                            ; 0x1cd3f $CD2F 0A                      ;0A	Hypothetical Palace in Region 1
                                                                               ;
.byt    $0A                            ; 0x1cd40 $CD30 0A                      ;0A	Hypothetical Palace in Region 1
                                                                               ;
.byt    $0A                            ; 0x1cd41 $CD31 0A                      ;0A	Hypothetical Palace in Region 1
bank7_Graphics_Bank_for_Palaces_Palace_5                                       ;
.byt    $0B                            ; 0x1cd42 $CD32 0B                      ;0B	Palace 5
bank7_Graphics_Bank_for_Palaces_Palace_6                                       ;
.byt    $0C                            ; 0x1cd43 $CD33 0C                      ;0C	Palace 6
bank7_Graphics_Bank_for_Palaces_Palace_7                                       ;
.byt    $06                            ; 0x1cd44 $CD34 06                      ;06	Palace 7                       
bank7_Table_for_Palace_Entrance_Palettes_Offset                                ;
;Index = Region (706) * 4 + Palace Code (56C)                                  ;
.byt    $00,$10,$20,$20,$30,$30,$30,$30; 0x1cd45 $CD35 00 10 20 20 30 30 30 30 ;
.byt    $40,$50,$60                    ; 0x1cd4d $CD3D 40 50 60                ;
; ---------------------------------------------------------------------------- ;
bank7_code18                                                                   ;
ldy      $0707                         ; 0x1cd50 $CD40 AC 07 07                ; Current World;cd40 ;Normalized world number into Y
lda      LC4B7,y                       ; 0x1cd53 $CD43 B9 B7 C4                ;cd43 ;Load bank number from table 
cmp      #$01                          ; 0x1cd56 $CD46 C9 01                   ;cd46 ;Bank 1 represents overworlds
bne      LCD59                         ; 0x1cd58 $CD48 D0 0F                   ;cd48 ;if not overworld, then done
; Determine if we really want bank 1 or 2                                      ;
ldy      $0706                         ; 0x1cd5a $CD4A AC 06 07                ; Current Region;cd4a ;Get the overworld index
beq      LCD59                         ; 0x1cd5d $CD4D F0 0A                   ;cd4d ;If index==0 then WestHy (bank1).  done.
dey                                    ; 0x1cd5f $CD4F 88                      ;cd4f ;Decrement index
bne      LCD57                         ; 0x1cd60 $CD50 D0 05                   ;cd50 ;If index!=0 then EastHy (bank2).
ldy      $070A                         ; 0x1cd62 $CD52 AC 0A 07                ;cd52 ;index was 1, so its either DM or MZ.
; Use the previous overworld ($070a) to                                        ;
; determin if bank 1 or bank 2.                                                ;
beq      LCD59                         ; 0x1cd65 $CD55 F0 02                   ;cd55 ;If Y==0, then bank 1.
LCD57                                                                          ;
lda      #$02                          ; 0x1cd67 $CD57 A9 02                   ; A = 02;cd57 ;Load bank 2
LCD59                                                                          ;
sta      $0769                         ; 0x1cd69 $CD59 8D 69 07                ; Bank to switch to;cd59 ;Store desired bank number                 
jsr      LFFCC                         ; 0x1cd6c $CD5C 20 CC FF                ; Bank Switch
lda      $0769                         ; 0x1cd6f $CD5F AD 69 07                ; Bank to switch to
ldy      $0707                         ; 0x1cd72 $CD62 AC 07 07                ; Current World
cpy      #$03                          ; 0x1cd75 $CD65 C0 03                   ;
bcc      LCD78                         ; 0x1cd77 $CD67 90 0F                   ;
lda      $0706                         ; 0x1cd79 $CD69 AD 06 07                ; Current Region
asl                                    ; 0x1cd7c $CD6C 0A                      ;
asl                                    ; 0x1cd7d $CD6D 0A                      ;
adc      $056C                         ; 0x1cd7e $CD6E 6D 6C 05                ; Palace Code
tay                                    ; 0x1cd81 $CD71 A8                      ;
lda      bank7_Graphics_Bank_for_Palaces_Palace_1,y; 0x1cd82 $CD72 B9 2A CD    ;
sta      $070B                         ; 0x1cd85 $CD75 8D 0B 07                ;Graphics Bank for Palaces
LCD78                                                                          ;
asl                                    ; 0x1cd88 $CD78 0A                      ;
sta      $076E                         ; 0x1cd89 $CD79 8D 6E 07                ; Graphics bank to use
ldy      $0707                         ; 0x1cd8c $CD7C AC 07 07                ; Current World
bne      LCD8A                         ; 0x1cd8f $CD7F D0 09                   ;
lda      $0706                         ; 0x1cd91 $CD81 AD 06 07                ; Current Region
cmp      #$01                          ; 0x1cd94 $CD84 C9 01                   ;
bne      LCD8A                         ; 0x1cd96 $CD86 D0 02                   ;
ldy      #$04                          ; 0x1cd98 $CD88 A0 04                   ; Y = 04
LCD8A                                                                          ;
lda      LC4BD,y                       ; 0x1cd9a $CD8A B9 BD C4                ;
tay                                    ; 0x1cd9d $CD8D A8                      ;
lda      bank7_Pointer_table_for_Key_Areas_Data,y; 0x1cd9e $CD8E B9 23 CD      ; Pointer to Area Pointers (low byte)
sta      L0000                         ; 0x1cda1 $CD91 85 00                   ;
lda      bank7_Pointer_table_for_Key_Areas_Data+$01,y; 0x1cda3 $CD93 B9 24 CD  ; Pointer to Area Pointers (high byte)
sta      $01                           ; 0x1cda6 $CD96 85 01                   ;
ldy      #$00                          ; 0x1cda8 $CD98 A0 00                   ; Y = 00
LOOP_load_enemy_data_to_ram7000_7CFF                                           ;
lda      bank3_Enemy_Data_Towns_,y     ; 0x1cdaa $CD9A B9 A0 88                ; Enemy Data Table
sta      L7000,y                       ; 0x1cdad $CD9D 99 00 70                ; load into 7000-70FF
iny                                    ; 0x1cdb0 $CDA0 C8                      ;
bne      LOOP_load_enemy_data_to_ram7000_7CFF; 0x1cdb1 $CDA1 D0 F7             ;
LCDA3                                                                          ;
lda      L89A0,y                       ; 0x1cdb3 $CDA3 B9 A0 89                ; Enemy Data Table
sta      $7100,y                       ; 0x1cdb6 $CDA6 99 00 71                ; load into 7100-71FF
iny                                    ; 0x1cdb9 $CDA9 C8                      ;
bne      LCDA3                         ; 0x1cdba $CDAA D0 F7                   ;
LCDAC                                                                          ;
lda      L8AA0,y                       ; 0x1cdbc $CDAC B9 A0 8A                ; Enemy Data Table
sta      $7200,y                       ; 0x1cdbf $CDAF 99 00 72                ; load into 7200-72FF
iny                                    ; 0x1cdc2 $CDB2 C8                      ;
bne      LCDAC                         ; 0x1cdc3 $CDB3 D0 F7                   ;
LCDB5                                                                          ;
lda      L8BA0,y                       ; 0x1cdc5 $CDB5 B9 A0 8B                ; Enemy Data Table
sta      $7300,y                       ; 0x1cdc8 $CDB8 99 00 73                ; load into 7300-73FF
iny                                    ; 0x1cdcb $CDBB C8                      ;
bne      LCDB5                         ; 0x1cdcc $CDBC D0 F7                   ;
ldx      $0706                         ; 0x1cdce $CDBE AE 06 07                ; Current Region
lda      bank7_Region_Overworld_Map_Pointer_Offset_Selector,x; 0x1cdd1 $CDC1 BD 27 CD;
tax                                    ; 0x1cdd4 $CDC4 AA                      ;
lda      bank3_unused_table,x          ; 0x1cdd5 $CDC5 BD 08 85                ; Overworld Map Data Pointer Low Byte
sta      L0002                         ; 0x1cdd8 $CDC8 85 02                   ;
lda      L8509,x                       ; 0x1cdda $CDCA BD 09 85                ; Overworld Map Data Pointer High Byte
sta      $03                           ; 0x1cddd $CDCD 85 03                   ;
LCDCF                                                                          ;
lda      (L0002),y                     ; 0x1cddf $CDCF B1 02                   ; Overworld Data
sta      $7C00,y                       ; 0x1cde1 $CDD1 99 00 7C                ; load into 7C00-7CFF
iny                                    ; 0x1cde4 $CDD4 C8                      ;
bne      LCDCF                         ; 0x1cde5 $CDD5 D0 F8                   ;
inc      $03                           ; 0x1cde7 $CDD7 E6 03                   ;
LCDD9                                                                          ;
lda      (L0002),y                     ; 0x1cde9 $CDD9 B1 02                   ; Overworld Data
sta      $7D00,y                       ; 0x1cdeb $CDDB 99 00 7D                ; load into 7D00-7DFF
iny                                    ; 0x1cdee $CDDE C8                      ;
bne      LCDD9                         ; 0x1cdef $CDDF D0 F8                   ;
inc      $03                           ; 0x1cdf1 $CDE1 E6 03                   ;
LCDE3                                                                          ;
lda      (L0002),y                     ; 0x1cdf3 $CDE3 B1 02                   ; Overworld Data
sta      $7E00,y                       ; 0x1cdf5 $CDE5 99 00 7E                ; load into 7E00-7EFF
iny                                    ; 0x1cdf8 $CDE8 C8                      ;
bne      LCDE3                         ; 0x1cdf9 $CDE9 D0 F8                   ;
inc      $03                           ; 0x1cdfb $CDEB E6 03                   ;
LCDED                                                                          ;
lda      (L0002),y                     ; 0x1cdfd $CDED B1 02                   ; Overworld Data
sta      $7F00,y                       ; 0x1cdff $CDEF 99 00 7F                ; load into 7F00-7FFF
iny                                    ; 0x1ce02 $CDF2 C8                      ;
bpl      LCDED                         ; 0x1ce03 $CDF3 10 F8                   ;
ldy      #$00                          ; 0x1ce05 $CDF5 A0 00                   ; Y = 00
LCDF7                                                                          ;
lda      (L0000),y                     ; 0x1ce07 $CDF7 B1 00                   ; Area Data
sta      $6A00,y                       ; 0x1ce09 $CDF9 99 00 6A                ; load into 6A00-6AFF
iny                                    ; 0x1ce0c $CDFC C8                      ;
bne      LCDF7                         ; 0x1ce0d $CDFD D0 F8                   ;
inc      $01                           ; 0x1ce0f $CDFF E6 01                   ;
LCE01                                                                          ;
lda      (L0000),y                     ; 0x1ce11 $CE01 B1 00                   ; Area Data
sta      $6B00,y                       ; 0x1ce13 $CE03 99 00 6B                ; load into 6B00-6BFF
iny                                    ; 0x1ce16 $CE06 C8                      ;
bne      LCE01                         ; 0x1ce17 $CE07 D0 F8                   ;
inc      $01                           ; 0x1ce19 $CE09 E6 01                   ;
LCE0B                                                                          ;
lda      (L0000),y                     ; 0x1ce1b $CE0B B1 00                   ; Area Data
sta      $6C00,y                       ; 0x1ce1d $CE0D 99 00 6C                ; load into 6C00-6CF5
iny                                    ; 0x1ce20 $CE10 C8                      ;
cpy      #$58                          ; 0x1ce21 $CE11 C0 58                   ;
bne      LCE0B                         ; 0x1ce23 $CE13 D0 F6                   ;
;Load All Palettes for Palaces into 7919-79F8 (E0 bytes)                       ;
ldy      #$00                          ; 0x1ce25 $CE15 A0 00                   ; Y = 00
LCE17                                                                          ;
lda      bank3_Palettes_for_Towns,y    ; 0x1ce27 $CE17 B9 0E 80                ; Palettes Table
sta      $7919,y                       ; 0x1ce2a $CE1A 99 19 79                ;
iny                                    ; 0x1ce2d $CE1D C8                      ;
cpy      #$E0                          ; 0x1ce2e $CE1E C0 E0                   ;
bcc      LCE17                         ; 0x1ce30 $CE20 90 F5                   ;
lda      $0707                         ; 0x1ce32 $CE22 AD 07 07                ; Current World
cmp      #$03                          ; 0x1ce35 $CE25 C9 03                   ;
bcc      bank7_Transfer_2A1_bytes_from_9400_or_A900_if_World_4_to_6D00; 0x1ce37 $CE27 90 4E;
lda      $0706                         ; 0x1ce39 $CE29 AD 06 07                ; Current Region
asl                                    ; 0x1ce3c $CE2C 0A                      ;
asl                                    ; 0x1ce3d $CE2D 0A                      ;
adc      $056C                         ; 0x1ce3e $CE2E 6D 6C 05                ; Palace Code
tay                                    ; 0x1ce41 $CE31 A8                      ;
lda      bank7_Table_for_Palace_Entrance_Palettes_Offset,y; 0x1ce42 $CE32 B9 35 CD;
tay                                    ; 0x1ce45 $CE35 A8                      ;
cmp      #$60                          ; 0x1ce46 $CE36 C9 60                   ; 60 is index A, Great Palace (R2 P2)
beq      LCE63                         ; 0x1ce48 $CE38 F0 29                   ;
pha                                    ; 0x1ce4a $CE3A 48                      ;
pha                                    ; 0x1ce4b $CE3B 48                      ;
ldx      #$00                          ; 0x1ce4c $CE3C A2 00                   ; X = 00
bank7_Load_Palace_Entrance_Palettes_into_7919_7928_10_bytes                    ;
lda      L8470,y                       ; 0x1ce4e $CE3E B9 70 84                ;
sta      $7919,x                       ; 0x1ce51 $CE41 9D 19 79                ;
iny                                    ; 0x1ce54 $CE44 C8                      ;
inx                                    ; 0x1ce55 $CE45 E8                      ;
cpx      #$10                          ; 0x1ce56 $CE46 E0 10                   ;
bcc      bank7_Load_Palace_Entrance_Palettes_into_7919_7928_10_bytes; 0x1ce58 $CE48 90 F4;
pla                                    ; 0x1ce5a $CE4A 68                      ;
tay                                    ; 0x1ce5b $CE4B A8                      ;
bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998                    ;
lda      LBF00,y                       ; 0x1ce5c $CE4C B9 00 BF                ;
sta      $7919,x                       ; 0x1ce5f $CE4F 9D 19 79                ;
iny                                    ; 0x1ce62 $CE52 C8                      ;
inx                                    ; 0x1ce63 $CE53 E8                      ;
tya                                    ; 0x1ce64 $CE54 98                      ;
and      #$0F                          ; 0x1ce65 $CE55 29 0F                   ; keep bits .... xxxx
bne      bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998; 0x1ce67 $CE57 D0 F3;
tya                                    ; 0x1ce69 $CE59 98                      ;
sec                                    ; 0x1ce6a $CE5A 38                      ;
sbc      #$10                          ; 0x1ce6b $CE5B E9 10                   ;
tay                                    ; 0x1ce6d $CE5D A8                      ;
cpx      #$80                          ; 0x1ce6e $CE5E E0 80                   ;
bcc      bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998; 0x1ce70 $CE60 90 EA;
pla                                    ; 0x1ce72 $CE62 68                      ;
LCE63                                                                          ;
lsr                                    ; 0x1ce73 $CE63 4A                      ;
lsr                                    ; 0x1ce74 $CE64 4A                      ;
tay                                    ; 0x1ce75 $CE65 A8                      ;
ldx      #$00                          ; 0x1ce76 $CE66 A2 00                   ; X = 00
LCE68                                                                          ;
lda      L84D8,y                       ; 0x1ce78 $CE68 B9 D8 84                ;
sta      $79C5,x                       ; 0x1ce7b $CE6B 9D C5 79                ;
sta      $79D5,x                       ; 0x1ce7e $CE6E 9D D5 79                ;
iny                                    ; 0x1ce81 $CE71 C8                      ;
inx                                    ; 0x1ce82 $CE72 E8                      ;
cpx      #$04                          ; 0x1ce83 $CE73 E0 04                   ;
bcc      LCE68                         ; 0x1ce85 $CE75 90 F1                   ;
bank7_Transfer_2A1_bytes_from_9400_or_A900_if_World_4_to_6D00                  ;
lda      #$00                          ; 0x1ce87 $CE77 A9 00                   ; A = 00
sta      L0000                         ; 0x1ce89 $CE79 85 00                   ;
lda      #$94                          ; 0x1ce8b $CE7B A9 94                   ; A = 94
sta      $01                           ; 0x1ce8d $CE7D 85 01                   ;
lda      $0707                         ; 0x1ce8f $CE7F AD 07 07                ; Current World
cmp      #$04                          ; 0x1ce92 $CE82 C9 04                   ; World 4 = Palaces Type B
bne      LCE8E                         ; 0x1ce94 $CE84 D0 08                   ;
lda      #$00                          ; 0x1ce96 $CE86 A9 00                   ; A = 00
sta      L0000                         ; 0x1ce98 $CE88 85 00                   ;
lda      #$A9                          ; 0x1ce9a $CE8A A9 A9                   ; A = A9
sta      $01                           ; 0x1ce9c $CE8C 85 01                   ;
LCE8E                                                                          ;
lda      #$00                          ; 0x1ce9e $CE8E A9 00                   ; A = 00
sta      L0002                         ; 0x1cea0 $CE90 85 02                   ;
lda      #$6D                          ; 0x1cea2 $CE92 A9 6D                   ; A = 6D
sta      $03                           ; 0x1cea4 $CE94 85 03                   ;
lda      #$A1                          ; 0x1cea6 $CE96 A9 A1                   ; A = A1
sta      $04                           ; 0x1cea8 $CE98 85 04                   ;
lda      #$02                          ; 0x1ceaa $CE9A A9 02                   ; A = 02
sta      $05                           ; 0x1ceac $CE9C 85 05                   ;
ldy      #$00                          ; 0x1ceae $CE9E A0 00                   ; A = 00
LCEA0                                                                          ;
lda      (L0000),y                     ; 0x1ceb0 $CEA0 B1 00                   ;
sta      (L0002),y                     ; 0x1ceb2 $CEA2 91 02                   ;
lda      L0000                         ; 0x1ceb4 $CEA4 A5 00                   ;
clc                                    ; 0x1ceb6 $CEA6 18                      ;
adc      #$01                          ; 0x1ceb7 $CEA7 69 01                   ;
sta      L0000                         ; 0x1ceb9 $CEA9 85 00                   ;
lda      $01                           ; 0x1cebb $CEAB A5 01                   ;
adc      #$00                          ; 0x1cebd $CEAD 69 00                   ;
sta      $01                           ; 0x1cebf $CEAF 85 01                   ;
lda      L0002                         ; 0x1cec1 $CEB1 A5 02                   ;
clc                                    ; 0x1cec3 $CEB3 18                      ;
adc      #$01                          ; 0x1cec4 $CEB4 69 01                   ;
sta      L0002                         ; 0x1cec6 $CEB6 85 02                   ;
lda      $03                           ; 0x1cec8 $CEB8 A5 03                   ;
adc      #$00                          ; 0x1ceca $CEBA 69 00                   ;
sta      $03                           ; 0x1cecc $CEBC 85 03                   ;
lda      $04                           ; 0x1cece $CEBE A5 04                   ;
sec                                    ; 0x1ced0 $CEC0 38                      ;
sbc      #$01                          ; 0x1ced1 $CEC1 E9 01                   ;
sta      $04                           ; 0x1ced3 $CEC3 85 04                   ;
lda      $05                           ; 0x1ced5 $CEC5 A5 05                   ;
sbc      #$00                          ; 0x1ced7 $CEC7 E9 00                   ;
sta      $05                           ; 0x1ced9 $CEC9 85 05                   ;
ora      $04                           ; 0x1cedb $CECB 05 04                   ;
bne      LCEA0                         ; 0x1cedd $CECD D0 D1                   ;
ldy      $0707                         ; 0x1cedf $CECF AC 07 07                ; Current World
dey                                    ; 0x1cee2 $CED2 88                      ;
cpy      #$02                          ; 0x1cee3 $CED3 C0 02                   ;
bcs      LCEF6                         ; 0x1cee5 $CED5 B0 1F                   ;
ldy      $056B                         ; 0x1cee7 $CED7 AC 6B 05                ; Town Code
dey                                    ; 0x1ceea $CEDA 88                      ;
cpy      #$06                          ; 0x1ceeb $CEDB C0 06                   ;
bcs      LCEF6                         ; 0x1ceed $CEDD B0 17                   ;
;If Town Code is < 6                                                           ;
;Transfer 14 bytes from a table to 6DE2                                        ;
;Related to Enemy Velocities                                                   ;
tya                                    ; 0x1ceef $CEDF 98                      ;
asl                                    ; 0x1cef0 $CEE0 0A                      ;
tay                                    ; 0x1cef1 $CEE1 A8                      ;
lda      bank3_Townfolks_Tile_Mappings_unknown0,y; 0x1cef2 $CEE2 B9 24 96      ;
sta      L0000                         ; 0x1cef5 $CEE5 85 00                   ;
lda      L9625,y                       ; 0x1cef7 $CEE7 B9 25 96                ;
sta      $01                           ; 0x1cefa $CEEA 85 01                   ;
ldy      #$13                          ; 0x1cefc $CEEC A0 13                   ; Y = 13
LCEEE                                                                          ;
lda      (L0000),y                     ; 0x1cefe $CEEE B1 00                   ;
sta      $6DE2,y                       ; 0x1cf00 $CEF0 99 E2 6D                ;
dey                                    ; 0x1cf03 $CEF3 88                      ;
bpl      LCEEE                         ; 0x1cf04 $CEF4 10 F8                   ;
LCEF6                                                                          ;
ldy      $0707                         ; 0x1cf06 $CEF6 AC 07 07                ; Current World
bne      LCF09                         ; 0x1cf09 $CEF9 D0 0E                   ;
lda      $0709                         ; 0x1cf0b $CEFB AD 09 07                ;; used for going outside??
bne      LCF05                         ; 0x1cf0e $CEFE D0 05                   ;
lda      #$06                          ; 0x1cf10 $CF00 A9 06                   ; A = 06
jmp      LCF0B                         ; 0x1cf12 $CF02 4C 0B CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF05                                                                          ;
inc      $0736                         ; 0x1cf15 $CF05 EE 36 07                ; Game Mode
rts                                    ; 0x1cf18 $CF08 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF09                                                                          ;
lda      #$07                          ; 0x1cf19 $CF09 A9 07                   ; A = 07
LCF0B                                                                          ;
sta      $0736                         ; 0x1cf1b $CF0B 8D 36 07                ; Game Mode
lda      #$01                          ; 0x1cf1e $CF0E A9 01                   ; A = 01
cpy      #$02                          ; 0x1cf20 $CF10 C0 02                   ;
bne      LCF1D                         ; 0x1cf22 $CF12 D0 09                   ;
ldy      $056B                         ; 0x1cf24 $CF14 AC 6B 05                ; Town Code
cpy      #$07                          ; 0x1cf27 $CF17 C0 07                   ;
bne      LCF1D                         ; 0x1cf29 $CF19 D0 02                   ;
lda      #$08                          ; 0x1cf2b $CF1B A9 08                   ; A = 08
LCF1D                                                                          ;
sta      $075F                         ; 0x1cf2d $CF1D 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
rts                                    ; 0x1cf30 $CF20 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF21_SaveGameWhenChooseSAVEwhenDead__maybe                                    ;
lda      #$05                          ; 0x1cf31 $CF21 A9 05                   ; A = 05
jsr      LFFCC                         ; 0x1cf33 $CF23 20 CC FF                ;
jsr      LB9CA                         ; 0x1cf36 $CF26 20 CA B9                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf39 $CF29 20 C9 FF                ; Load Bank $0769
inc      $0738                         ; 0x1cf3c $CF2C EE 38 07                ;
rts                                    ; 0x1cf3f $CF2F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW                                 ;
;Region Code * 5 + World Code                                                  ;
lda      $0706                         ; 0x1cf40 $CF30 AD 06 07                ; Current Region
asl                                    ; 0x1cf43 $CF33 0A                      ;
asl                                    ; 0x1cf44 $CF34 0A                      ;
adc      $0706                         ; 0x1cf45 $CF35 6D 06 07                ;; overworld index (0=west hyrule, 1=death mtn/maze island, 2=east hyrule)
adc      $0707                         ; 0x1cf48 $CF38 6D 07 07                ; Current World
rts                                    ; 0x1cf4b $CF3B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF3C                                                                          ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf4c $CF3C 20 C9 FF                ; Load Bank $0769
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1cf4f $CF3F 20 82 D3;
bank7_pointer_table13                                                          ;
.word    LD25E                         ; 0x1cf52 $CF42 5E D2                   ;
.word    LD269                         ; 0x1cf54 $CF44 69 D2                   ;
.word    bank7_Set_PPU_Macro_for_Palettes; 0x1cf56 $CF46 5B D0                 ;
.word    bank7_code19                  ; 0x1cf58 $CF48 FC D0                   ;
.word    LD120                         ; 0x1cf5a $CF4A 20 D1                   ;
; ---------------------------------------------------------------------------- ;
bank7_take_side_exit                                                           ;
jsr      bank7_Remove_All_Sprites      ; 0x1cf5c $CF4C 20 4C D2                ; Remove All Sprites
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf5f $CF4F 20 C9 FF                ; Load Bank $0769
lda      $0561                         ; 0x1cf62 $CF52 AD 61 05                ; Area Code
ldy      $0707                         ; 0x1cf65 $CF55 AC 07 07                ; Current World
bne      LCF60                         ; 0x1cf68 $CF58 D0 06                   ;
cmp      #$1D                          ; 0x1cf6a $CF5A C9 1D                   ;
bcc      LCF60                         ; 0x1cf6c $CF5C 90 02                   ;
lda      #$00                          ; 0x1cf6e $CF5E A9 00                   ; A = 00
LCF60                                                                          ;
asl                                    ; 0x1cf70 $CF60 0A                      ;
asl                                    ; 0x1cf71 $CF61 0A                      ;
adc      $3B                           ; 0x1cf72 $CF62 65 3B                   ; Link's X Position (high byte)
tay                                    ; 0x1cf74 $CF64 A8                      ;
lda      $6AFC,y                       ; 0x1cf75 $CF65 B9 FC 6A                ; Connectivity Data Table
pha                                    ; 0x1cf78 $CF68 48                      ;
and      #$FC                          ; 0x1cf79 $CF69 29 FC                   ; keep bits xxxx xx..
cmp      #$FC                          ; 0x1cf7b $CF6B C9 FC                   ;
bne      LCFB2                         ; 0x1cf7d $CF6D D0 43                   ;
pla                                    ; 0x1cf7f $CF6F 68                      ;
and      #$03                          ; 0x1cf80 $CF70 29 03                   ; keep bits .... ..xx
clc                                    ; 0x1cf82 $CF72 18                      ;
adc      $0748                         ; 0x1cf83 $CF73 6D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
sta      $0748                         ; 0x1cf86 $CF76 8D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
ldy      #$00                          ; 0x1cf89 $CF79 A0 00                   ; Y = 00
sty      $07FF                         ; 0x1cf8b $CF7B 8C FF 07                ;
sty      $05E9                         ; 0x1cf8e $CF7E 8C E9 05                ; Sound Played Out of Area
ldy      #$90                          ; 0x1cf91 $CF81 A0 90                   ; Y = 90
sty      $4000                         ; 0x1cf93 $CF83 8C 00 40                ;
lda      #$01                          ; 0x1cf96 $CF86 A9 01                   ; A = 01
ldy      $0707                         ; 0x1cf98 $CF88 AC 07 07                ; Current World
beq      LCF9D                         ; 0x1cf9b $CF8B F0 10                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cf9d $CF8D 20 3D D0   ; Mute Music
ldy      #$00                          ; 0x1cfa0 $CF90 A0 00                   ; Y = 00
sty      $0707                         ; 0x1cfa2 $CF92 8C 07 07                ; Current World
inc      $0709                         ; 0x1cfa5 $CF95 EE 09 07                ;; used for going outside??
lda      #$00                          ; 0x1cfa8 $CF98 A9 00                   ; A = 00
LCF9A                                                                          ;
jmp      LCFF8                         ; 0x1cfaa $CF9A 4C F8 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF9D                                                                          ;
ldy      #$04                          ; 0x1cfad $CF9D A0 04                   ; Y = 04
sty      $05E9                         ; 0x1cfaf $CF9F 8C E9 05                ; Sound Played Out of Area
ldy      $0706                         ; 0x1cfb2 $CFA2 AC 06 07                ; Current Region
bne      LCF9A                         ; 0x1cfb5 $CFA5 D0 F3                   ;
ldy      $0561                         ; 0x1cfb7 $CFA7 AC 61 05                ; Area Code
bne      LCF9A                         ; 0x1cfba $CFAA D0 EE                   ;
sty      $05E9                         ; 0x1cfbc $CFAC 8C E9 05                ; Sound Played Out of Area
jmp      LCFF8                         ; 0x1cfbf $CFAF 4C F8 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCFB2                                                                          ;
lsr                                    ; 0x1cfc2 $CFB2 4A                      ;
lsr                                    ; 0x1cfc3 $CFB3 4A                      ;
sta      $0561                         ; 0x1cfc4 $CFB4 8D 61 05                ; Area Code
pla                                    ; 0x1cfc7 $CFB7 68                      ;
ldx      $0704                         ; 0x1cfc8 $CFB8 AE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
bne      LCFC2                         ; 0x1cfcb $CFBB D0 05                   ;
and      #$03                          ; 0x1cfcd $CFBD 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1cfcf $CFBF 8D 5C 07                ; Position code when entering area (0-3)
LCFC2                                                                          ;
and      #$01                          ; 0x1cfd2 $CFC2 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1cfd4 $CFC4 8D 01 07                ; Facing direction when entering area
lda      $0561                         ; 0x1cfd7 $CFC7 AD 61 05                ; Area Code
cmp      #$24                          ; 0x1cfda $CFCA C9 24                   ;
bcs      LCFEC                         ; 0x1cfdc $CFCC B0 1E                   ;
lda      $075B                         ; 0x1cfde $CFCE AD 5B 07                ;
beq      LCFEC                         ; 0x1cfe1 $CFD1 F0 19                   ;
clc                                    ; 0x1cfe3 $CFD3 18                      ;
adc      #$04                          ; 0x1cfe4 $CFD4 69 04                   ;
sta      $075C                         ; 0x1cfe6 $CFD6 8D 5C 07                ; Position code when entering area (0-3)
dec      $075B                         ; 0x1cfe9 $CFD9 CE 5B 07                ;
bne      LCFEC                         ; 0x1cfec $CFDC D0 0E                   ;
lda      $056B                         ; 0x1cfee $CFDE AD 6B 05                ; Town Code
cmp      #$07                          ; 0x1cff1 $CFE1 C9 07                   ;
beq      LCFEC                         ; 0x1cff3 $CFE3 F0 07                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cff5 $CFE5 20 3D D0   ; Mute music when loading between areas
lda      #$02                          ; 0x1cff8 $CFE8 A9 02                   ; A = 02
bne      LCFF3                         ; 0x1cffa $CFEA D0 07                   ;
LCFEC                                                                          ;
ldx      $0704                         ; 0x1cffc $CFEC AE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
bne      LCFF6                         ; 0x1cfff $CFEF D0 05                   ;
lda      #$00                          ; 0x1d001 $CFF1 A9 00                   ; A = 00
LCFF3                                                                          ;
sta      $075F                         ; 0x1d003 $CFF3 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCFF6                                                                          ;
lda      #$07                          ; 0x1d006 $CFF6 A9 07                   ; A = 07
LCFF8                                                                          ;
sta      $0736                         ; 0x1d008 $CFF8 8D 36 07                ;; Game Mode ; screen intro type
rts                                    ; 0x1d00b $CFFB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_take_door_exit                                                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d00c $CFFC 20 C9 FF                ; Load Bank in $0769
LD000     = * + $0001                                                          ;
lda      $0561                         ; 0x1d00f $CFFF AD 61 05                ; Area Code
asl                                    ; 0x1d012 $D002 0A                      ;
asl                                    ; 0x1d013 $D003 0A                      ;
adc      $3B                           ; 0x1d014 $D004 65 3B                   ; Link's X Position (high byte)
tay                                    ; 0x1d016 $D006 A8                      ;
lda      bank3_Door_Destinations_in_Towns,y; 0x1d017 $D007 B9 17 88            ;
and      #$FC                          ; 0x1d01a $D00A 29 FC                   ; keep bits xxxx xx..
lsr                                    ; 0x1d01c $D00C 4A                      ;
lsr                                    ; 0x1d01d $D00D 4A                      ;
sta      $0561                         ; 0x1d01e $D00E 8D 61 05                ; Area Code
lda      bank3_Door_Destinations_in_Towns,y; 0x1d021 $D011 B9 17 88            ;
and      #$03                          ; 0x1d024 $D014 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1d026 $D016 8D 5C 07                ; Position code when entering area (0-3)
and      #$01                          ; 0x1d029 $D019 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1d02b $D01B 8D 01 07                ; Facing direction when entering area
lda      $075B                         ; 0x1d02e $D01E AD 5B 07                ;
clc                                    ; 0x1d031 $D021 18                      ;
adc      #$04                          ; 0x1d032 $D022 69 04                   ;
tax                                    ; 0x1d034 $D024 AA                      ;
jsr      LC690                         ; 0x1d035 $D025 20 90 C6                ;
jsr      LCFEC                         ; 0x1d038 $D028 20 EC CF                ;
ldx      $075B                         ; 0x1d03b $D02B AE 5B 07                ;
dex                                    ; 0x1d03e $D02E CA                      ;
bne      LD041                         ; 0x1d03f $D02F D0 10                   ;
lda      $056B                         ; 0x1d041 $D031 AD 6B 05                ;; Town Code	;used by wise man to pick magic to give?
cmp      #$07                          ; 0x1d044 $D034 C9 07                   ;
beq      LD041                         ; 0x1d046 $D036 F0 09                   ;
lda      #$08                          ; 0x1d048 $D038 A9 08                   ; A = 08		;indoor music
sta      $075F                         ; 0x1d04a $D03A 8D 5F 07                ;sets $eb later
bank7_Mute_music_when_loading_between_areas                                    ;
lda      #$80                          ; 0x1d04d $D03D A9 80                   ; A = 80 (80 = no music)
sta      $EB                           ; 0x1d04f $D03F 85 EB                   ; Music Channel
LD041                                                                          ;
rts                                    ; 0x1d051 $D041 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD042                                                                          ;
lda      #$02                          ; 0x1d052 $D042 A9 02                   ; A = 02
jsr      bank7_chr_bank_switch__load_A ; 0x1d054 $D044 20 B1 FF                ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1d057 $D047 20 66 D2;
jmp      LCF05                         ; 0x1d05a $D04A 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD04D                                                                          ;
lda      #$06                          ; 0x1d05d $D04D A9 06                   ; A = 06
jsr      bank7_chr_bank_switch__load_A ; 0x1d05f $D04F 20 B1 FF                ;
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1d062 $D052 20 82 D3;
bank7_pointer_table14                                                          ;
.word    bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1d065 $D055 66 D2 ;
.word    LD0B8                         ; 0x1d067 $D057 B8 D0                   ;
.word    LD150                         ; 0x1d069 $D059 50 D1                   ;
; ---------------------------------------------------------------------------- ;
bank7_Set_PPU_Macro_for_Palettes                                               ;
ldy      #$03                          ; 0x1d06b $D05B A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1d06d $D05D B1 D4                   ; Area Header Byte 3; Area Header Byte 3
lsr                                    ; 0x1d06f $D05F 4A                      ;
lsr                                    ; 0x1d070 $D060 4A                      ;
and      #$30                          ; 0x1d071 $D061 29 30                   ; keep bits ..xx ....
sta      L0000                         ; 0x1d073 $D063 85 00                   ;
lda      ($D4),y                       ; 0x1d075 $D065 B1 D4                   ; Area Header Byte 3
asl                                    ; 0x1d077 $D067 0A                      ;
and      #$70                          ; 0x1d078 $D068 29 70                   ; keep bits .xxx ....
cmp      #$10                          ; 0x1d07a $D06A C9 10                   ;
bne      LD07D                         ; 0x1d07c $D06C D0 0F                   ;
ldx      $0707                         ; 0x1d07e $D06E AE 07 07                ; Current World
bne      LD07D                         ; 0x1d081 $D071 D0 0A                   ;
ldx      $0785                         ; 0x1d083 $D073 AE 85 07                ; Have Candle
bne      LD07D                         ; 0x1d086 $D076 D0 05                   ;
lda      #$40                          ; 0x1d088 $D078 A9 40                   ; A = 40
sta      L0000                         ; 0x1d08a $D07A 85 00                   ;
asl                                    ; 0x1d08c $D07C 0A                      ;
LD07D                                                                          ;
tax                                    ; 0x1d08d $D07D AA                      ;
ldy      #$00                          ; 0x1d08e $D07E A0 00                   ; Y = 00
lda      #$3F                          ; 0x1d090 $D080 A9 3F                   ; A = 3F
sta      L0302                         ; 0x1d092 $D082 8D 02 03                ;; Used when writing text to screen
sty      $0303                         ; 0x1d095 $D085 8C 03 03                ;; Letter position when writing to screen
LD088                                                                          ;
lda      $7919,x                       ; 0x1d098 $D088 BD 19 79                ;
sta      $0305,y                       ; 0x1d09b $D08B 99 05 03                ;
inx                                    ; 0x1d09e $D08E E8                      ;
iny                                    ; 0x1d09f $D08F C8                      ;
cpy      #$10                          ; 0x1d0a0 $D090 C0 10                   ;
bcc      LD088                         ; 0x1d0a2 $D092 90 F4                   ;
ldx      L0000                         ; 0x1d0a4 $D094 A6 00                   ;
LD096                                                                          ;
lda      $79A9,x                       ; 0x1d0a6 $D096 BD A9 79                ;
cmp      #$FF                          ; 0x1d0a9 $D099 C9 FF                   ;
bne      LD0A3                         ; 0x1d0ab $D09B D0 06                   ;
lda      $0305                         ; 0x1d0ad $D09D AD 05 03                ;; Empty Row Space Character
sta      $0751                         ; 0x1d0b0 $D0A0 8D 51 07                ;
LD0A3                                                                          ;
sta      $0305,y                       ; 0x1d0b3 $D0A3 99 05 03                ;
inx                                    ; 0x1d0b6 $D0A6 E8                      ;
iny                                    ; 0x1d0b7 $D0A7 C8                      ;
cpy      #$20                          ; 0x1d0b8 $D0A8 C0 20                   ;
bcc      LD096                         ; 0x1d0ba $D0AA 90 EA                   ;
sty      $0304                         ; 0x1d0bc $D0AC 8C 04 03                ;; Text memory offset?
lda      #$FF                          ; 0x1d0bf $D0AF A9 FF                   ; A = FF
sta      $0305,y                       ; 0x1d0c1 $D0B1 99 05 03                ;
inc      $073D                         ; 0x1d0c4 $D0B4 EE 3D 07                ; Routine Index
rts                                    ; 0x1d0c7 $D0B7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD0B8                                                                          ;
lda      #$03                          ; 0x1d0c8 $D0B8 A9 03                   ; A = 03
jmp      LD11A                         ; 0x1d0ca $D0BA 4C 1A D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_some_Palettes                                                  ;
.byt    $3F,$00,$10,$0F,$30,$12,$16,$0F; 0x1d0cd $D0BD 3F 00 10 0F 30 12 16 0F ;
.byt    $30,$30,$30,$0F,$30,$30,$30,$0F; 0x1d0d5 $D0C5 30 30 30 0F 30 30 30 0F ;
.byt    $26,$0F,$0F,$FF                ; 0x1d0dd $D0CD 26 0F 0F FF             ;
bank7_Tables_for_some_PPU_Command_Data                                         ;
.byt    $20,$44,$06                    ; 0x1d0e1 $D0D1 20 44 06                ;
                                                                               ;
.byt    $E6,$DA,$E0,$E2,$DC,$F6        ; 0x1d0e4 $D0D4 E6 DA E0 E2 DC F6       ;MAGIC-
                                                                               ;
.byt    $20,$4D,$05                    ; 0x1d0ea $D0DA 20 4D 05                ;
                                                                               ;
.byt    $E5,$E2,$DF,$DE,$F6            ; 0x1d0ed $D0DD E5 E2 DF DE F6          ;LIFE-
                                                                               ;
.byt    $20,$5A,$04                    ; 0x1d0f2 $D0E2 20 5A 04                ;
                                                                               ;
.byt    $E7,$DE,$F1,$ED                ; 0x1d0f5 $D0E5 E7 DE F1 ED             ;NEXT
                                                                               ;
.byt    $20,$61,$01                    ; 0x1d0f9 $D0E9 20 61 01                ;
                                                                               ;
.byt    $C9                            ; 0x1d0fc $D0EC C9                      ;
                                                                               ;
.byt    $20,$6D,$01                    ; 0x1d0fd $D0ED 20 6D 01                ;
                                                                               ;
.byt    $F7,$20,$7A,$05,$CE            ; 0x1d100 $D0F0 F7 20 7A 05 CE          ;
                                                                               ;
.byt    $D0,$D0,$D0,$D0                ; 0x1d105 $D0F5 D0 D0 D0 D0             ;
bank7_table12                                                                  ;
.byt    $4C,$02,$03                    ; 0x1d109 $D0F9 4C 02 03                ;
; ---------------------------------------------------------------------------- ;
bank7_code19                                                                   ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d10c $D0FC 20 C5 FF                ; Load Bank 0
lda      #$80                          ; 0x1d10f $D0FF A9 80                   ; A = 80
sta      $074F                         ; 0x1d111 $D101 8D 4F 07                ;; Related to Pause Pane
sta      $0750                         ; 0x1d114 $D104 8D 50 07                ;
ldy      $0301                         ; 0x1d117 $D107 AC 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      bank3_code13                  ; 0x1d11a $D10A 20 A8 96                ;
lda      #$40                          ; 0x1d11d $D10D A9 40                   ; A = 40
sta      $074F                         ; 0x1d11f $D10F 8D 4F 07                ;; Related to Pause Pane
ldy      $0301                         ; 0x1d122 $D112 AC 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      bank3_code13                  ; 0x1d125 $D115 20 A8 96                ;
lda      #$07                          ; 0x1d128 $D118 A9 07                   ; A = 07
LD11A                                                                          ;
inc      $073D                         ; 0x1d12a $D11A EE 3D 07                ;; Routine Index
jmp      LD158                         ; 0x1d12d $D11D 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD120                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d130 $D120 20 C5 FF                ; Load Bank 0
jsr      L9A04                         ; 0x1d133 $D123 20 04 9A                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d136 $D126 20 C9 FF                ; Load Bank $0769
bank7_function_find_a_free_enemy_slot__maybe                                   ;
ldx      #$05                          ; 0x1d139 $D129 A2 05                   ; X = 05
LD12B                                                                          ;
stx      $10                           ; 0x1d13b $D12B 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $B6,x                         ; 0x1d13d $D12D B5 B6                   ; Generated Enemy Slot
bne      LD135                         ; 0x1d13f $D12F D0 04                   ;
tax                                    ; 0x1d141 $D131 AA                      ;
jsr      LD625                         ; 0x1d142 $D132 20 25 D6                ;
LD135                                                                          ;
dex                                    ; 0x1d145 $D135 CA                      ;
bpl      LD12B                         ; 0x1d146 $D136 10 F3                   ;
lda      $0740                         ; 0x1d148 $D138 AD 40 07                ;
beq      LD143                         ; 0x1d14b $D13B F0 06                   ;
cmp      #$05                          ; 0x1d14d $D13D C9 05                   ;
beq      LD14B                         ; 0x1d14f $D13F F0 0A                   ;
bne      LD120                         ; 0x1d151 $D141 D0 DD                   ;
LD143                                                                          ;
dec      $0722                         ; 0x1d153 $D143 CE 22 07                ;
bpl      LD14B                         ; 0x1d156 $D146 10 03                   ;
inc      $0736                         ; 0x1d158 $D148 EE 36 07                ; Game Mode
LD14B                                                                          ;
lda      #$02                          ; 0x1d15b $D14B A9 02                   ; A = 02
jmp      LD158                         ; 0x1d15d $D14D 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD150                                                                          ;
inc      $0736                         ; 0x1d160 $D150 EE 36 07                ; Game Mode
lda      #$08                          ; 0x1d163 $D153 A9 08                   ; A = 08
jmp      LD158                         ; 0x1d165 $D155 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD158                                                                          ;
sta      $0725                         ; 0x1d168 $D158 8D 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1d16b $D15B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD15C                                                                          ;
lda      $0738                         ; 0x1d16c $D15C AD 38 07                ;
cmp      $0739                         ; 0x1d16f $D15F CD 39 07                ;
sta      $0739                         ; 0x1d172 $D162 8D 39 07                ;
bne      LD195                         ; 0x1d175 $D165 D0 2E                   ;
rts                                    ; 0x1d177 $D167 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD168                                                                          ;
lda      $0736                         ; 0x1d178 $D168 AD 36 07                ; Game Mode
cmp      $0737                         ; 0x1d17b $D16B CD 37 07                ;
sta      $0737                         ; 0x1d17e $D16E 8D 37 07                ;
bne      LD18D                         ; 0x1d181 $D171 D0 1A                   ;
rts                                    ; 0x1d183 $D173 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD174                                                                          ;
lda      $076C                         ; 0x1d184 $D174 AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
cmp      $076D                         ; 0x1d187 $D177 CD 6D 07                ;
sta      $076D                         ; 0x1d18a $D17A 8D 6D 07                ;
beq      LD19A                         ; 0x1d18d $D17D F0 1B                   ;
jsr      bank7_Remove_All_Sprites      ; 0x1d18f $D17F 20 4C D2                ;
lda      $076C                         ; 0x1d192 $D182 AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
ldy      #$00                          ; 0x1d195 $D185 A0 00                   ; Y = 00
sty      $073C                         ; 0x1d197 $D187 8C 3C 07                ;
sty      $0736                         ; 0x1d19a $D18A 8C 36 07                ; Game Mode
LD18D                                                                          ;
ldy      #$00                          ; 0x1d19d $D18D A0 00                   ; Y = 00
sty      $073B                         ; 0x1d19f $D18F 8C 3B 07                ;
sty      $0738                         ; 0x1d1a2 $D192 8C 38 07                ;
LD195                                                                          ;
ldy      #$00                          ; 0x1d1a5 $D195 A0 00                   ; Y = 00
sty      $073D                         ; 0x1d1a7 $D197 8C 3D 07                ; Routine Index
LD19A                                                                          ;
rts                                    ; 0x1d1aa $D19A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_applyGravityMotion                                                       ;
ldy      #$00                          ; 0x1d1ab $D19B A0 00                   ; Y = 00
lda      $057D,x                       ; 0x1d1ad $D19D BD 7D 05                ; Link/Enemy Y Velocity
bpl      LD1A3                         ; 0x1d1b0 $D1A0 10 01                   ;
dey                                    ; 0x1d1b2 $D1A2 88                      ;
LD1A3                                                                          ;
sty      $07                           ; 0x1d1b3 $D1A3 84 07                   ;
clc                                    ; 0x1d1b5 $D1A5 18                      ;
adc      $29,x                         ; 0x1d1b6 $D1A6 75 29                   ;;y_pos (Link's y position in sideview)
sta      $29,x                         ; 0x1d1b8 $D1A8 95 29                   ; Link/Enemy Y position
lda      $19,x                         ; 0x1d1ba $D1AA B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      $07                           ; 0x1d1bc $D1AC 65 07                   ;
sta      $19,x                         ; 0x1d1be $D1AE 95 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
lda      $03E6,x                       ; 0x1d1c0 $D1B0 BD E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
clc                                    ; 0x1d1c3 $D1B3 18                      ;
adc      L0000                         ; 0x1d1c4 $D1B4 65 00                   ;
sta      $03E6,x                       ; 0x1d1c6 $D1B6 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
lda      $057D,x                       ; 0x1d1c9 $D1B9 BD 7D 05                ;;vspeed (Link's vertical velocity, negative is up.)
adc      #$00                          ; 0x1d1cc $D1BC 69 00                   ;
sta      $057D,x                       ; 0x1d1ce $D1BE 9D 7D 05                ; Link/Enemy Y Velocity				triggered when jumping
cmp      L0002                         ; 0x1d1d1 $D1C1 C5 02                   ;
bne      LD1CD                         ; 0x1d1d3 $D1C3 D0 08                   ;
sta      $057D,x                       ; 0x1d1d5 $D1C5 9D 7D 05                ;;vspeed (Link's vertical velocity, negative is up.)
lda      #$00                          ; 0x1d1d8 $D1C8 A9 00                   ; A = 00
sta      $03E6,x                       ; 0x1d1da $D1CA 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
LD1CD                                                                          ;
rts                                    ; 0x1d1dd $D1CD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_XY_Movements_Routine                                                     ;
lda      $70,x                         ; 0x1d1de $D1CE B5 70                   ;;hspeed (Link's horizontal velocity)
asl                                    ; 0x1d1e0 $D1D0 0A                      ;
asl                                    ; 0x1d1e1 $D1D1 0A                      ;
asl                                    ; 0x1d1e2 $D1D2 0A                      ;
asl                                    ; 0x1d1e3 $D1D3 0A                      ;
sta      $01                           ; 0x1d1e4 $D1D4 85 01                   ;
lda      $70,x                         ; 0x1d1e6 $D1D6 B5 70                   ;;hspeed (Link's horizontal velocity)
lsr                                    ; 0x1d1e8 $D1D8 4A                      ;
lsr                                    ; 0x1d1e9 $D1D9 4A                      ;
lsr                                    ; 0x1d1ea $D1DA 4A                      ;
lsr                                    ; 0x1d1eb $D1DB 4A                      ;
cmp      #$08                          ; 0x1d1ec $D1DC C9 08                   ;
bcc      LD1E2                         ; 0x1d1ee $D1DE 90 02                   ;
ora      #$F0                          ; 0x1d1f0 $D1E0 09 F0                   ; set bits  xxxx ....
LD1E2                                                                          ;
sta      L0000                         ; 0x1d1f2 $D1E2 85 00                   ;
ldy      #$00                          ; 0x1d1f4 $D1E4 A0 00                   ; Y = 00
cmp      #$00                          ; 0x1d1f6 $D1E6 C9 00                   ;
bpl      LD1EB                         ; 0x1d1f8 $D1E8 10 01                   ;
dey                                    ; 0x1d1fa $D1EA 88                      ;
LD1EB                                                                          ;
sty      L0002                         ; 0x1d1fb $D1EB 84 02                   ;
lda      $03D6,x                       ; 0x1d1fd $D1ED BD D6 03                ;
clc                                    ; 0x1d200 $D1F0 18                      ;
adc      $01                           ; 0x1d201 $D1F1 65 01                   ;
sta      $03D6,x                       ; 0x1d203 $D1F3 9D D6 03                ;
lda      #$00                          ; 0x1d206 $D1F6 A9 00                   ; A = 00
rol                                    ; 0x1d208 $D1F8 2A                      ;
pha                                    ; 0x1d209 $D1F9 48                      ;
ror                                    ; 0x1d20a $D1FA 6A                      ;
lda      $4D,x                         ; 0x1d20b $D1FB B5 4D                   ; Link/Enemy X Position (low byte)
adc      L0000                         ; 0x1d20d $D1FD 65 00                   ;
sta      $4D,x                         ; 0x1d20f $D1FF 95 4D                   ;
lda      $3B,x                         ; 0x1d211 $D201 B5 3B                   ; Link/Enemy X position (high byte)
adc      L0002                         ; 0x1d213 $D203 65 02                   ;
sta      $3B,x                         ; 0x1d215 $D205 95 3B                   ;
jmp      LD247                         ; 0x1d217 $D207 4C 47 D2                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD20A                                                                          ;
lda      $057D,x                       ; 0x1d21a $D20A BD 7D 05                ; Link/Enemy Y Velocity
asl                                    ; 0x1d21d $D20D 0A                      ;
asl                                    ; 0x1d21e $D20E 0A                      ;
asl                                    ; 0x1d21f $D20F 0A                      ;
asl                                    ; 0x1d220 $D210 0A                      ;
sta      $01                           ; 0x1d221 $D211 85 01                   ;
lda      $057D,x                       ; 0x1d223 $D213 BD 7D 05                ; Link/Enemy Y Velocity
lsr                                    ; 0x1d226 $D216 4A                      ;
lsr                                    ; 0x1d227 $D217 4A                      ;
lsr                                    ; 0x1d228 $D218 4A                      ;
lsr                                    ; 0x1d229 $D219 4A                      ;
cmp      #$08                          ; 0x1d22a $D21A C9 08                   ;
bcc      LD220                         ; 0x1d22c $D21C 90 02                   ;
ora      #$F0                          ; 0x1d22e $D21E 09 F0                   ; set bits  xxxx ....
LD220                                                                          ;
sta      L0000                         ; 0x1d230 $D220 85 00                   ;
ldy      #$00                          ; 0x1d232 $D222 A0 00                   ; Y = 00
cmp      #$00                          ; 0x1d234 $D224 C9 00                   ;
bpl      LD229                         ; 0x1d236 $D226 10 01                   ;
dey                                    ; 0x1d238 $D228 88                      ;
LD229                                                                          ;
sty      L0002                         ; 0x1d239 $D229 84 02                   ;
lda      $03E6,x                       ; 0x1d23b $D22B BD E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
clc                                    ; 0x1d23e $D22E 18                      ;
adc      $01                           ; 0x1d23f $D22F 65 01                   ;
sta      $03E6,x                       ; 0x1d241 $D231 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
lda      #$00                          ; 0x1d244 $D234 A9 00                   ; A = 00
rol                                    ; 0x1d246 $D236 2A                      ;
pha                                    ; 0x1d247 $D237 48                      ;
ror                                    ; 0x1d248 $D238 6A                      ;
lda       !$29,x                       ; 0x1d249 $D239 BD 29 00                ; Link/Enemy Y position
adc      L0000                         ; 0x1d24c $D23C 65 00                   ;
sta       !$29,x                       ; 0x1d24e $D23E 9D 29 00                ; Link/Enemy Y position
lda      $19,x                         ; 0x1d251 $D241 B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      L0002                         ; 0x1d253 $D243 65 02                   ;
sta      $19,x                         ; 0x1d255 $D245 95 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
LD247                                                                          ;
pla                                    ; 0x1d257 $D247 68                      ;
clc                                    ; 0x1d258 $D248 18                      ;
adc      L0000                         ; 0x1d259 $D249 65 00                   ;
rts                                    ; 0x1d25b $D24B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Remove_All_Sprites                                                       ;
ldy      #$00                          ; 0x1d25c $D24C A0 00                   ; Y = 00
beq      LD252                         ; 0x1d25e $D24E F0 02                   ;
bank7_Remove_All_Sprites_except_Sprite0                                        ;
ldy      #$04                          ; 0x1d260 $D250 A0 04                   ; Y = 04
LD252                                                                          ;
lda      #$F8                          ; 0x1d262 $D252 A9 F8                   ; A = F8
LD254                                                                          ;
sta      $0200,y                       ; 0x1d264 $D254 99 00 02                ;
iny                                    ; 0x1d267 $D257 C8                      ;
iny                                    ; 0x1d268 $D258 C8                      ;
iny                                    ; 0x1d269 $D259 C8                      ;
iny                                    ; 0x1d26a $D25A C8                      ;
bne      LD254                         ; 0x1d26b $D25B D0 F7                   ;
rts                                    ; 0x1d26d $D25D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD25E                                                                          ;
jsr      LD27D                         ; 0x1d26e $D25E 20 7D D2                ;
bank7_Erase_Name_Table_1                                                       ;
lda      #$24                          ; 0x1d271 $D261 A9 24                   ; A = 24
bank7_Erase_Name_Table_0                                                       ;
jmp      bank7_Fill_Screen_with_Tile_Code_F4_space__Starting_at_PPU_Address_A_mulipliedby_100; 0x1d273 $D263 4C BE D2; Fill Screen with Tile Code F4
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0                               ;
jsr      bank7_Erase_Name_Table_1      ; 0x1d276 $D266 20 61 D2                ; Erase Name Table 1
LD269                                                                          ;
lda      #$20                          ; 0x1d279 $D269 A9 20                   ; A = 20
jsr      bank7_Erase_Name_Table_0      ; 0x1d27b $D26B 20 63 D2                ; Erase Name Table 0
lda      #$00                          ; 0x1d27e $D26E A9 00                   ; A = 00
sta      $FC                           ; 0x1d280 $D270 85 FC                   ;
sta      $FD                           ; 0x1d282 $D272 85 FD                   ;
sta      $0746                         ; 0x1d284 $D274 8D 46 07                ;
sta      $2005                         ; 0x1d287 $D277 8D 05 20                ; Screen Scroll Register (V)
sta      $2005                         ; 0x1d28a $D27A 8D 05 20                ; Screen Scroll Register (H)
LD27D                                                                          ;
inc      $073D                         ; 0x1d28d $D27D EE 3D 07                ; Routine Index
rts                                    ; 0x1d290 $D280 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Reset_Memory_Ranges                                                      ;
ldx      #$00                          ; 0x1d291 $D281 A2 00                   ; X = 00
txa                                    ; 0x1d293 $D283 8A                      ;
LD284                                                                          ;
sta      $0700,x                       ; 0x1d294 $D284 9D 00 07                ;
dex                                    ; 0x1d297 $D287 CA                      ;
bne      LD284                         ; 0x1d298 $D288 D0 FA                   ;
ldx      #$00                          ; 0x1d29a $D28A A2 00                   ; X = 00
txa                                    ; 0x1d29c $D28C 8A                      ;
LD28D                                                                          ;
sta      L0600,x                       ; 0x1d29d $D28D 9D 00 06                ;
dex                                    ; 0x1d2a0 $D290 CA                      ;
bne      LD28D                         ; 0x1d2a1 $D291 D0 FA                   ;
LD293                                                                          ;
ldx      #$00                          ; 0x1d2a3 $D293 A2 00                   ; X = 00
txa                                    ; 0x1d2a5 $D295 8A                      ;
LD296                                                                          ;
sta      $0500,x                       ; 0x1d2a6 $D296 9D 00 05                ;
dex                                    ; 0x1d2a9 $D299 CA                      ;
bne      LD296                         ; 0x1d2aa $D29A D0 FA                   ;
bank7_Set_Memory_200_4FF_and_00_DF_to_Zero                                     ;
ldx      #$00                          ; 0x1d2ac $D29C A2 00                   ; X = 00
txa                                    ; 0x1d2ae $D29E 8A                      ;
LD29F                                                                          ;
sta      $0400,x                       ; 0x1d2af $D29F 9D 00 04                ;;sword_slash_frame (animation frame)
dex                                    ; 0x1d2b2 $D2A2 CA                      ;
bne      LD29F                         ; 0x1d2b3 $D2A3 D0 FA                   ;
ldx      #$00                          ; 0x1d2b5 $D2A5 A2 00                   ; X = 00
txa                                    ; 0x1d2b7 $D2A7 8A                      ;
LD2A8                                                                          ;
sta      $0300,x                       ; 0x1d2b8 $D2A8 9D 00 03                ;
dex                                    ; 0x1d2bb $D2AB CA                      ;
bne      LD2A8                         ; 0x1d2bc $D2AC D0 FA                   ;
ldx      #$DF                          ; 0x1d2be $D2AE A2 DF                   ; X = DF
LD2B0                                                                          ;
sta      L0000,x                       ; 0x1d2c0 $D2B0 95 00                   ;
dex                                    ; 0x1d2c2 $D2B2 CA                      ;
cpx      #$FF                          ; 0x1d2c3 $D2B3 E0 FF                   ;
bne      LD2B0                         ; 0x1d2c5 $D2B5 D0 F9                   ;
stx      L0302                         ; 0x1d2c7 $D2B7 8E 02 03                ;; Used when writing text to screen
stx      L0363                         ; 0x1d2ca $D2BA 8E 63 03                ;
rts                                    ; 0x1d2cd $D2BD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Fill_Screen_with_Tile_Code_F4_space__Starting_at_PPU_Address_A_mulipliedby_100 ;
ldy      $2002                         ; 0x1d2ce $D2BE AC 02 20                ;
ldy      #$30                          ; 0x1d2d1 $D2C1 A0 30                   ; Y = 30
sty      $2000                         ; 0x1d2d3 $D2C3 8C 00 20                ;
ldy      #$00                          ; 0x1d2d6 $D2C6 A0 00                   ; Y = 00
sta      $2006                         ; 0x1d2d8 $D2C8 8D 06 20                ;
sty      $2006                         ; 0x1d2db $D2CB 8C 06 20                ;
ldx      #$03                          ; 0x1d2de $D2CE A2 03                   ; X = 03
lda      #$F4                          ; 0x1d2e0 $D2D0 A9 F4                   ; A = F4
LD2D2                                                                          ;
sta      $2007                         ; 0x1d2e2 $D2D2 8D 07 20                ;
iny                                    ; 0x1d2e5 $D2D5 C8                      ;
bne      LD2D2                         ; 0x1d2e6 $D2D6 D0 FA                   ;
dex                                    ; 0x1d2e8 $D2D8 CA                      ;
bne      LD2D2                         ; 0x1d2e9 $D2D9 D0 F7                   ;
LD2DB                                                                          ;
sta      $2007                         ; 0x1d2eb $D2DB 8D 07 20                ;
iny                                    ; 0x1d2ee $D2DE C8                      ;
cpy      #$C0                          ; 0x1d2ef $D2DF C0 C0                   ;
bne      LD2DB                         ; 0x1d2f1 $D2E1 D0 F8                   ;
lda      #$00                          ; 0x1d2f3 $D2E3 A9 00                   ; A = 00
LD2E5                                                                          ;
sta      $2007                         ; 0x1d2f5 $D2E5 8D 07 20                ;
iny                                    ; 0x1d2f8 $D2E8 C8                      ;
bne      LD2E5                         ; 0x1d2f9 $D2E9 D0 FA                   ;
LD2EB                                                                          ;
rts                                    ; 0x1d2fb $D2EB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD2EC                                                                          ;
ldy      #$00                          ; 0x1d2fc $D2EC A0 00                   ; Y = 00			;07:D2EC
lda      (L0000),y                     ; 0x1d2fe $D2EE B1 00                   ;
cmp      #$FF                          ; 0x1d300 $D2F0 C9 FF                   ;
beq      LD2EB                         ; 0x1d302 $D2F2 F0 F7                   ;RTS is here
cmp      #$4C                          ; 0x1d304 $D2F4 C9 4C                   ;
bne      LD307                         ; 0x1d306 $D2F6 D0 0F                   ;
iny                                    ; 0x1d308 $D2F8 C8                      ;
lda      (L0000),y                     ; 0x1d309 $D2F9 B1 00                   ;
tax                                    ; 0x1d30b $D2FB AA                      ;
iny                                    ; 0x1d30c $D2FC C8                      ;
lda      (L0000),y                     ; 0x1d30d $D2FD B1 00                   ;
sta      $01                           ; 0x1d30f $D2FF 85 01                   ;
stx      L0000                         ; 0x1d311 $D301 86 00                   ;
ldy      #$00                          ; 0x1d313 $D303 A0 00                   ; Y = 00
lda      (L0000),y                     ; 0x1d315 $D305 B1 00                   ;
LD307                                                                          ;
ldx      $2002                         ; 0x1d317 $D307 AE 02 20                ; PPU Status Register
sta      $2006                         ; 0x1d31a $D30A 8D 06 20                ; PPU Memory Address
iny                                    ; 0x1d31d $D30D C8                      ;
lda      (L0000),y                     ; 0x1d31e $D30E B1 00                   ;
sta      $2006                         ; 0x1d320 $D310 8D 06 20                ; PPU Memory Address
iny                                    ; 0x1d323 $D313 C8                      ;
lda      (L0000),y                     ; 0x1d324 $D314 B1 00                   ;
asl                                    ; 0x1d326 $D316 0A                      ;
pha                                    ; 0x1d327 $D317 48                      ;
lda      $FF                           ; 0x1d328 $D318 A5 FF                   ;; Sprite Bank ?
ora      #$04                          ; 0x1d32a $D31A 09 04                   ; set bits  .... .x..
bcs      LD320                         ; 0x1d32c $D31C B0 02                   ;
and      #$FB                          ; 0x1d32e $D31E 29 FB                   ; keep bits xxxx x.xx
LD320                                                                          ;
sta      $2000                         ; 0x1d330 $D320 8D 00 20                ;
LD323                                                                          ;
pla                                    ; 0x1d333 $D323 68                      ;
asl                                    ; 0x1d334 $D324 0A                      ;
bcc      LD32A                         ; 0x1d335 $D325 90 03                   ;
ora      #$02                          ; 0x1d337 $D327 09 02                   ; set bits  .... ..x.
iny                                    ; 0x1d339 $D329 C8                      ;
LD32A                                                                          ;
lsr                                    ; 0x1d33a $D32A 4A                      ;
lsr                                    ; 0x1d33b $D32B 4A                      ;
tax                                    ; 0x1d33c $D32C AA                      ;
LD32D                                                                          ;
bcs      LD330                         ; 0x1d33d $D32D B0 01                   ;
iny                                    ; 0x1d33f $D32F C8                      ;
LD330                                                                          ;
lda      (L0000),y                     ; 0x1d340 $D330 B1 00                   ;top status bar text "MAGIC" gets read here
sta      $2007                         ; 0x1d342 $D332 8D 07 20                ;
dex                                    ; 0x1d345 $D335 CA                      ;
bne      LD32D                         ; 0x1d346 $D336 D0 F5                   ;
iny                                    ; 0x1d348 $D338 C8                      ;
tya                                    ; 0x1d349 $D339 98                      ;
clc                                    ; 0x1d34a $D33A 18                      ;
adc      L0000                         ; 0x1d34b $D33B 65 00                   ;
sta      L0000                         ; 0x1d34d $D33D 85 00                   ;
bcc      LD2EC                         ; 0x1d34f $D33F 90 AB                   ;
inc      $01                           ; 0x1d351 $D341 E6 01                   ;
jmp      LD2EC                         ; 0x1d353 $D343 4C EC D2                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Controllers_Input                                                        ;
jsr      bank7_Controllers_Input_Capture; 0x1d356 $D346 20 67 D3               ;
lda      $F5                           ; 0x1d359 $D349 A5 F5                   ; Controller 1 buttons pressed
sta      L0000                         ; 0x1d35b $D34B 85 00                   ;
jsr      bank7_Controllers_Input_Capture; 0x1d35d $D34D 20 67 D3               ;
lda      $F5                           ; 0x1d360 $D350 A5 F5                   ; Controller 1 buttons pressed
cmp      L0000                         ; 0x1d362 $D352 C5 00                   ;
bne      bank7_Controllers_Input       ; 0x1d364 $D354 D0 F0                   ;
ldx      #$01                          ; 0x1d366 $D356 A2 01                   ; X = 01
LD358                                                                          ;
lda      $F5,x                         ; 0x1d368 $D358 B5 F5                   ;
tay                                    ; 0x1d36a $D35A A8                      ;
eor      $F7,x                         ; 0x1d36b $D35B 55 F7                   ;
and      $F5,x                         ; 0x1d36d $D35D 35 F5                   ;
sta      $F5,x                         ; 0x1d36f $D35F 95 F5                   ;
sty      $F7,x                         ; 0x1d371 $D361 94 F7                   ;
dex                                    ; 0x1d373 $D363 CA                      ;
bpl      LD358                         ; 0x1d374 $D364 10 F2                   ;
rts                                    ; 0x1d376 $D366 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Controllers_Input_Capture                                                ;
ldx      #$01                          ; 0x1d377 $D367 A2 01                   ;;X = #$01 0000_0001
stx      $4016                         ; 0x1d379 $D369 8E 16 40                ; controllers strobe (01)
dex                                    ; 0x1d37c $D36C CA                      ;
stx      $4016                         ; 0x1d37d $D36D 8E 16 40                ; controllers strobe (00)
ldx      #$08                          ; 0x1d380 $D370 A2 08                   ;;X = #$08 0000_1000
LD372                                                                          ;
lda      $4016                         ; 0x1d382 $D372 AD 16 40                ;
lsr                                    ; 0x1d385 $D375 4A                      ;
rol      $F5                           ; 0x1d386 $D376 26 F5                   ;; Controller 1 Buttons Pressed
lda      $4017                         ; 0x1d388 $D378 AD 17 40                ;
lsr                                    ; 0x1d38b $D37B 4A                      ;
rol      $F6                           ; 0x1d38c $D37C 26 F6                   ;; Controller 2 Buttons Pressed
dex                                    ; 0x1d38e $D37E CA                      ;
bne      LD372                         ; 0x1d38f $D37F D0 F1                   ;
rts                                    ; 0x1d391 $D381 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382 ;
lda      $073D                         ; 0x1d392 $D382 AD 3D 07                ;; Routine Index
bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP                  ;
asl                                    ; 0x1d395 $D385 0A                      ;multiply by 2 because table entry is 2 bytes per entry
tay                                    ; 0x1d396 $D386 A8                      ;transfer A to Y
pla                                    ; 0x1d397 $D387 68                      ;pull the address which we would normally RTS to 
sta      $0C                           ; 0x1d398 $D388 85 0C                   ;store for indirect read later
pla                                    ; 0x1d39a $D38A 68                      ;pull the address which we would normally RTS to 
sta      $0D                           ; 0x1d39b $D38B 85 0D                   ;store for indirect read later
iny                                    ; 0x1d39d $D38D C8                      ;increment Y because jsr makes the RTS point 1 behind?
lda      ($0C),y                       ; 0x1d39e $D38E B1 0C                   ;load address to jmp to (from the table following the JSR's RTS point)
sta      L000E                         ; 0x1d3a0 $D390 85 0E                   ;store for indirect jmp later
iny                                    ; 0x1d3a2 $D392 C8                      ;increment Y
lda      ($0C),y                       ; 0x1d3a3 $D393 B1 0C                   ;load address to jmp to
sta      $0F                           ; 0x1d3a5 $D395 85 0F                   ;store for indirect jmp later
jmp      (L000E)                       ; 0x1d3a7 $D397 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_D39A                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3aa $D39A FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3b2 $D3A2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3ba $D3AA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3c2 $D3B2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3ca $D3BA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3d2 $D3C2 FF FF FF FF FF FF FF FF ;
bank7_table13                                                                  ;
.byt    $80,$40                        ; 0x1d3da $D3CA 80 40                   ;
; ---------------------------------------------------------------------------- ;
bank7_check_if_link_died_0494__linkdeath                                       ;
lda      $0494                         ; 0x1d3dc $D3CC AD 94 04                ;; INC $0494 TO KILL LINK
beq      LD3E9                         ; 0x1d3df $D3CF F0 18                   ;
;occurs shortly after INC $0012		?		only in sidescroll with menu closed?       ;
;possibly only when you are allowed control                                    ;
ldx      $050C                         ; 0x1d3e1 $D3D1 AE 0C 05                ; Timer for Link being in injured state
bne      LD3E9                         ; 0x1d3e4 $D3D4 D0 13                   ;
stx      $0494                         ; 0x1d3e6 $D3D6 8E 94 04                ;; INC $0494 TO KILL LINK
inx                                    ; 0x1d3e9 $D3D9 E8                      ;
stx      $EC                           ; 0x1d3ea $D3DA 86 EC                   ; Sound Effects Type 1
lda      #$02                          ; 0x1d3ec $D3DC A9 02                   ; A = 02
sta      $076C                         ; 0x1d3ee $D3DE 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
lda      #$00                          ; 0x1d3f1 $D3E1 A9 00                   ; A = 00
sta      $2001                         ; 0x1d3f3 $D3E3 8D 01 20                ;
jmp      LE18A                         ; 0x1d3f6 $D3E6 4C 8A E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD3E9                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d3f9 $D3E9 20 C5 FF                ; Load Bank 0
jsr      L8DC3                         ; 0x1d3fc $D3EC 20 C3 8D                ; Spell Casting Routine
lda      $12                           ; 0x1d3ff $D3EF A5 12                   ;; Frame Counter (ascending)
and      #$01                          ; 0x1d401 $D3F1 29 01                   ; keep bits .... ...x				
tax                                    ; 0x1d403 $D3F3 AA                      ;
lda      $070C,x                       ; 0x1d404 $D3F4 BD 0C 07                ; Magic/Life to be added to Magic Meter
beq      LD433                         ; 0x1d407 $D3F7 F0 3A                   ;
dec      $070C,x                       ; 0x1d409 $D3F9 DE 0C 07                ; Magic/Life to be added to Magic Meter
lda      $0783,x                       ; 0x1d40c $D3FC BD 83 07                ; Current number of Magic/Life Containers
asl                                    ; 0x1d40f $D3FF 0A                      ;
asl                                    ; 0x1d410 $D400 0A                      ;
asl                                    ; 0x1d411 $D401 0A                      ;
asl                                    ; 0x1d412 $D402 0A                      ;
asl                                    ; 0x1d413 $D403 0A                      ;
sec                                    ; 0x1d414 $D404 38                      ;
sbc      #$01                          ; 0x1d415 $D405 E9 01                   ;
sta      L0000                         ; 0x1d417 $D407 85 00                   ;
lda      $0773,x                       ; 0x1d419 $D409 BD 73 07                ; Current Magic/Life left in meter
clc                                    ; 0x1d41c $D40C 18                      ;
adc      #$02                          ; 0x1d41d $D40D 69 02                   ;
bcs      LD415                         ; 0x1d41f $D40F B0 04                   ;
cmp      L0000                         ; 0x1d421 $D411 C5 00                   ;
bcc      LD41C                         ; 0x1d423 $D413 90 07                   ;
LD415                                                                          ;
lda      #$00                          ; 0x1d425 $D415 A9 00                   ; A = 00
sta      $070C,x                       ; 0x1d427 $D417 9D 0C 07                ; Magic/Life to be added to Magic Meter
lda      L0000                         ; 0x1d42a $D41A A5 00                   ;
LD41C                                                                          ;
sta      $0773,x                       ; 0x1d42c $D41C 9D 73 07                ; Current Magic/Life left in meter
lda      $074F                         ; 0x1d42f $D41F AD 4F 07                ;; Related to Pause Pane
ora      bank7_table13,x               ; 0x1d432 $D422 1D CA D3                ;
sta      $074F                         ; 0x1d435 $D425 8D 4F 07                ;; Related to Pause Pane
lda      $07FB                         ; 0x1d438 $D428 AD FB 07                ;
cmp      #$10                          ; 0x1d43b $D42B C9 10                   ;
beq      LD433                         ; 0x1d43d $D42D F0 04                   ;
lda      #$10                          ; 0x1d43f $D42F A9 10                   ; A = 10 (sound for meters/experience up/down)
sta      $EF                           ; 0x1d441 $D431 85 EF                   ; Sound Effects Type 4
LD433                                                                          ;
lda      $0756                         ; 0x1d443 $D433 AD 56 07                ; Experience to be added (low byte)
ora      $0755                         ; 0x1d446 $D436 0D 55 07                ; Experience to be added (high byte)
beq      LD477                         ; 0x1d449 $D439 F0 3C                   ; check if Exp. to be added is 0
ldy      #$0A                          ; 0x1d44b $D43B A0 0A                   ; Y = 0A
lda      $0756                         ; 0x1d44d $D43D AD 56 07                ; Experience to be added (low byte)
ldx      $0755                         ; 0x1d450 $D440 AE 55 07                ; Experience to be added (high byte)
bne      LD44B                         ; 0x1d453 $D443 D0 06                   ;
cmp      #$0A                          ; 0x1d455 $D445 C9 0A                   ;
bcs      LD44B                         ; 0x1d457 $D447 B0 02                   ;
ldy      #$01                          ; 0x1d459 $D449 A0 01                   ; Y = 01
LD44B                                                                          ;
sty      L0000                         ; 0x1d45b $D44B 84 00                   ;
sec                                    ; 0x1d45d $D44D 38                      ;
sbc      L0000                         ; 0x1d45e $D44E E5 00                   ;
sta      $0756                         ; 0x1d460 $D450 8D 56 07                ; Experience to be added (low byte)
bcs      LD458                         ; 0x1d463 $D453 B0 03                   ;
dec      $0755                         ; 0x1d465 $D455 CE 55 07                ; Experience to be added (high byte)
LD458                                                                          ;
lda      $0776                         ; 0x1d468 $D458 AD 76 07                ; Current Experience (low byte)
clc                                    ; 0x1d46b $D45B 18                      ;
adc      L0000                         ; 0x1d46c $D45C 65 00                   ;
sta      $0776                         ; 0x1d46e $D45E 8D 76 07                ; Current Experience (low byte)
lda      $0775                         ; 0x1d471 $D461 AD 75 07                ; Current Experience (high byte)
adc      #$00                          ; 0x1d474 $D464 69 00                   ;
sta      $0775                         ; 0x1d476 $D466 8D 75 07                ; Current Experience (high byte)
lda      $07FB                         ; 0x1d479 $D469 AD FB 07                ;
cmp      #$10                          ; 0x1d47c $D46C C9 10                   ;
beq      LD474                         ; 0x1d47e $D46E F0 04                   ;
lda      #$10                          ; 0x1d480 $D470 A9 10                   ; A = 10 (sound for meters/experience up/down)
sta      $EF                           ; 0x1d482 $D472 85 EF                   ; Sound Effects Type 4
LD474                                                                          ;
jmp      LD4A3                         ; 0x1d484 $D474 4C A3 D4                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD477                                                                          ;
lda      $05E8                         ; 0x1d487 $D477 AD E8 05                ;
beq      LD4AB                         ; 0x1d48a $D47A F0 2F                   ;
dec      $05E8                         ; 0x1d48c $D47C CE E8 05                ;
lda      $0776                         ; 0x1d48f $D47F AD 76 07                ; Current Experience (low byte)
ora      $0775                         ; 0x1d492 $D482 0D 75 07                ; Current Experience (high byte)
beq      LD4AB                         ; 0x1d495 $D485 F0 24                   ;
lda      $0776                         ; 0x1d497 $D487 AD 76 07                ; Current Experience (low byte)
sec                                    ; 0x1d49a $D48A 38                      ;
sbc      #$01                          ; 0x1d49b $D48B E9 01                   ;
sta      $0776                         ; 0x1d49d $D48D 8D 76 07                ; Current Experience (low byte)
lda      $0775                         ; 0x1d4a0 $D490 AD 75 07                ; Current Experience (high byte)
sbc      #$00                          ; 0x1d4a3 $D493 E9 00                   ;
sta      $0775                         ; 0x1d4a5 $D495 8D 75 07                ; Current Experience (high byte)
lda      $07FB                         ; 0x1d4a8 $D498 AD FB 07                ;
cmp      #$10                          ; 0x1d4ab $D49B C9 10                   ;
beq      LD4A3                         ; 0x1d4ad $D49D F0 04                   ;
lda      #$10                          ; 0x1d4af $D49F A9 10                   ; A = 10
sta      $EF                           ; 0x1d4b1 $D4A1 85 EF                   ; Sound Effects Type 4
LD4A3                                                                          ;
lda      $074F                         ; 0x1d4b3 $D4A3 AD 4F 07                ;; Related to Pause Pane
ora      #$40                          ; 0x1d4b6 $D4A6 09 40                   ; set bits .x.. ....
sta      $074F                         ; 0x1d4b8 $D4A8 8D 4F 07                ;; Related to Pause Pane
LD4AB                                                                          ;
lda      $074C                         ; 0x1d4bb $D4AB AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cmp      #$02                          ; 0x1d4be $D4AE C9 02                   ;
bcs      LD4CE                         ; 0x1d4c0 $D4B0 B0 1C                   ;
LD4B2                                                                          ;
bit      $2002                         ; 0x1d4c2 $D4B2 2C 02 20                ;
bvc      LD4B2                         ; 0x1d4c5 $D4B5 50 FB                   ;
lda      $FF                           ; 0x1d4c7 $D4B7 A5 FF                   ;; Sprite Bank ?
ora      $0746                         ; 0x1d4c9 $D4B9 0D 46 07                ;
sta      $FF                           ; 0x1d4cc $D4BC 85 FF                   ;; Sprite Bank ?
ldx      $FD                           ; 0x1d4ce $D4BE A6 FD                   ;
ldy      #$10                          ; 0x1d4d0 $D4C0 A0 10                   ; Y = 10
LD4C2                                                                          ;
dey                                    ; 0x1d4d2 $D4C2 88                      ;
bne      LD4C2                         ; 0x1d4d3 $D4C3 D0 FD                   ;
sta      $2000                         ; 0x1d4d5 $D4C5 8D 00 20                ;
stx      $2005                         ; 0x1d4d8 $D4C8 8E 05 20                ;
sty      $2005                         ; 0x1d4db $D4CB 8C 05 20                ;
LD4CE                                                                          ;
jsr      L968D                         ; 0x1d4de $D4CE 20 8D 96                ; Hub Update Routine
lda      $0565                         ; 0x1d4e1 $D4D1 AD 65 05                ;; Hit Points - Display
cmp      #$20                          ; 0x1d4e4 $D4D4 C9 20                   ;
bcs      LD4F3                         ; 0x1d4e6 $D4D6 B0 1B                   ;
lda      $07FB                         ; 0x1d4e8 $D4D8 AD FB 07                ;
cmp      #$10                          ; 0x1d4eb $D4DB C9 10                   ;
bcs      LD4F3                         ; 0x1d4ed $D4DD B0 14                   ;
lda      $07FC                         ; 0x1d4ef $D4DF AD FC 07                ;
cmp      #$40                          ; 0x1d4f2 $D4E2 C9 40                   ;
beq      LD4F3                         ; 0x1d4f4 $D4E4 F0 0D                   ;
lda      $07FE                         ; 0x1d4f6 $D4E6 AD FE 07                ;
cmp      #$02                          ; 0x1d4f9 $D4E9 C9 02                   ;
beq      LD4F3                         ; 0x1d4fb $D4EB F0 06                   ;
lda      $EF                           ; 0x1d4fd $D4ED A5 EF                   ; Sound Effects Type 4
ora      #$40                          ; 0x1d4ff $D4EF 09 40                   ; set bits .x.. ....
sta      $EF                           ; 0x1d501 $D4F1 85 EF                   ; sound for Low Health Beeping
LD4F3                                                                          ;
jsr      L903A                         ; 0x1d503 $D4F3 20 3A 90                ;
lda      #$00                          ; 0x1d506 $D4F6 A9 00                   ; A = 00
sta      $0754                         ; 0x1d508 $D4F8 8D 54 07                ;;in_elevator (boolean)
sta      $05E7                         ; 0x1d50b $D4FB 8D E7 05                ;
jsr      L9925                         ; 0x1d50e $D4FE 20 25 99                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d511 $D501 20 C9 FF                ; Load Bank $0769
jsr      bank7_code21                  ; 0x1d514 $D504 20 A7 D5                ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d517 $D507 20 C5 FF                ; Load Bank 0
jsr      L80E5                         ; 0x1d51a $D50A 20 E5 80                ; North Castle Chandeliers
jsr      L9847                         ; 0x1d51d $D50D 20 47 98                ;
jsr      LA6D2                         ; 0x1d520 $D510 20 D2 A6                ;
lda      $0497                         ; 0x1d523 $D513 AD 97 04                ;;crouch_timer (timer for Link crouching after landing); Timer for Link crouching after landing
beq      LD51F                         ; 0x1d526 $D516 F0 07                   ;
dec      $0497                         ; 0x1d528 $D518 CE 97 04                ;;crouch_timer (timer for Link crouching after landing); Timer for Link crouching after landing
lda      #$06                          ; 0x1d52b $D51B A9 06                   ; A = 06
sta      $80                           ; 0x1d52d $D51D 85 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
LD51F                                                                          ;
lda      $0518                         ; 0x1d52f $D51F AD 18 05                ;; Invulnerable Timeout (01-02 - Blinking, 03+ - Not Blinking); Timer for Link being immune from attacks
beq      LD52D                         ; 0x1d532 $D522 F0 09                   ;
cmp      #$03                          ; 0x1d534 $D524 C9 03                   ;
bcs      LD52D                         ; 0x1d536 $D526 B0 05                   ;
lda      $12                           ; 0x1d538 $D528 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1d53a $D52A 4A                      ;
bcs      LD538                         ; 0x1d53b $D52B B0 0B                   ;
LD52D                                                                          ;
jsr      bank7_Links_Display_Routine   ; 0x1d53d $D52D 20 F0 EB                ;
lda      $0503                         ; 0x1d540 $D530 AD 03 05                ;; Timer for moving left or right (when entering area)
bne      LD538                         ; 0x1d543 $D533 D0 03                   ;
jsr      bank7_related_to_breakable_block; 0x1d545 $D535 20 DD E1              ;related to breakable block
LD538                                                                          ;
lda      $0736                         ; 0x1d548 $D538 AD 36 07                ; Game Mode
cmp      #$0B                          ; 0x1d54b $D53B C9 0B                   ;
bne      LD545                         ; 0x1d54d $D53D D0 06                   ;
inc      $0727                         ; 0x1d54f $D53F EE 27 07                ;
inc      $0729                         ; 0x1d552 $D542 EE 29 07                ;
LD545                                                                          ;
jmp      L99E6                         ; 0x1d555 $D545 4C E6 99                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Flying_Blade_Disappearing__maybe                                         ;
ldy      $97,x                         ; 0x1d558 $D548 B4 97                   ;
lda      $CA                           ; 0x1d55a $D54A A5 CA                   ;
and      #$08                          ; 0x1d55c $D54C 29 08                   ; keep bits .... x...
bne      LD55A                         ; 0x1d55e $D54E D0 0A                   ;
lda      $30,x                         ; 0x1d560 $D550 B5 30                   ; Projectile Y Position
sta      $0200,y                       ; 0x1d562 $D552 99 00 02                ;
lda      $CE                           ; 0x1d565 $D555 A5 CE                   ;
sta      $0203,y                       ; 0x1d567 $D557 99 03 02                ;
LD55A                                                                          ;
inc      $87,x                         ; 0x1d56a $D55A F6 87                   ; Projectile Type
lda      $87,x                         ; 0x1d56c $D55C B5 87                   ;; Projectile Type
and      #$08                          ; 0x1d56e $D55E 29 08                   ; keep bits .... x...
lsr                                    ; 0x1d570 $D560 4A                      ;
lsr                                    ; 0x1d571 $D561 4A                      ;
adc      #$78                          ; 0x1d572 $D562 69 78                   ; 78 = Tile Mapping offset
sta      $0201,y                       ; 0x1d574 $D564 99 01 02                ;
lda      #$01                          ; 0x1d577 $D567 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1d579 $D569 99 02 02                ;
LD56C                                                                          ;
rts                                    ; 0x1d57c $D56C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD56D                                                                          ;
txa                                    ; 0x1d57d $D56D 8A                      ;
clc                                    ; 0x1d57e $D56E 18                      ;
adc      #$07                          ; 0x1d57f $D56F 69 07                   ;
tax                                    ; 0x1d581 $D571 AA                      ;
ldy      #$02                          ; 0x1d582 $D572 A0 02                   ; Y = 02
jsr      bank7_code51                  ; 0x1d584 $D574 20 7D F2                ;
ldx      $10                           ; 0x1d587 $D577 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $87,x                         ; 0x1d589 $D579 B5 87                   ; Projectile Type
beq      LD56C                         ; 0x1d58b $D57B F0 EF                   ;
bmi      bank7_Flying_Blade_Disappearing__maybe; 0x1d58d $D57D 30 C9           ;
sec                                    ; 0x1d58f $D57F 38                      ;
sbc      #$01                          ; 0x1d590 $D580 E9 01                   ;
asl                                    ; 0x1d592 $D582 0A                      ;
tay                                    ; 0x1d593 $D583 A8                      ;
lda      $6D00,y                       ; 0x1d594 $D584 B9 00 6D                ;
sta      L000E                         ; 0x1d597 $D587 85 0E                   ;
lda      $6D01,y                       ; 0x1d599 $D589 B9 01 6D                ;
bank7_table14 = * + $0002                                                      ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d59c $D58C 4C D6 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD58F                                                                          ;
.byt    $50,$68,$80,$98,$B0,$C8,$50,$68; 0x1d59f $D58F 50 68 80 98 B0 C8 50 68 ;
.byt    $80,$98,$B0,$C8                ; 0x1d5a7 $D597 80 98 B0 C8             ;
LD59B                                                                          ;
.byt    $20,$28,$30,$E0,$E8,$F0,$20,$28; 0x1d5ab $D59B 20 28 30 E0 E8 F0 20 28 ;
.byt    $30,$E0,$E8,$F0                ; 0x1d5b3 $D5A3 30 E0 E8 F0             ;
; ---------------------------------------------------------------------------- ;
bank7_code21                                                                   ;
lda      $B5                           ; 0x1d5b7 $D5A7 A5 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
beq      LD5D9                         ; 0x1d5b9 $D5A9 F0 2E                   ;
inc      $0485                         ; 0x1d5bb $D5AB EE 85 04                ;
ldx      #$05                          ; 0x1d5be $D5AE A2 05                   ; X = 05
LD5B0                                                                          ;
stx      $10                           ; 0x1d5c0 $D5B0 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $0485                         ; 0x1d5c2 $D5B2 AD 85 04                ;
cmp      #$06                          ; 0x1d5c5 $D5B5 C9 06                   ;
bcc      LD5BE                         ; 0x1d5c7 $D5B7 90 05                   ;
lda      #$00                          ; 0x1d5c9 $D5B9 A9 00                   ; A = 00
sta      $0485                         ; 0x1d5cb $D5BB 8D 85 04                ;
LD5BE                                                                          ;
clc                                    ; 0x1d5ce $D5BE 18                      ;
adc      $10                           ; 0x1d5cf $D5BF 65 10                   ;; used as monster x register ;draw boss hp bar
tay                                    ; 0x1d5d1 $D5C1 A8                      ;
lda      LD58F,y                       ; 0x1d5d2 $D5C2 B9 8F D5                ;
sta      $91,x                         ; 0x1d5d5 $D5C5 95 91                   ;
lda      LD59B,y                       ; 0x1d5d7 $D5C7 B9 9B D5                ;
sta      $97,x                         ; 0x1d5da $D5CA 95 97                   ;
jsr      LD5DA                         ; 0x1d5dc $D5CC 20 DA D5                ;
ldx      $10                           ; 0x1d5df $D5CF A6 10                   ;; used as monster x register ;draw boss hp bar
jsr      LD56D                         ; 0x1d5e1 $D5D1 20 6D D5                ;
ldx      $10                           ; 0x1d5e4 $D5D4 A6 10                   ;; used as monster x register ;draw boss hp bar
dex                                    ; 0x1d5e6 $D5D6 CA                      ;
bpl      LD5B0                         ; 0x1d5e7 $D5D7 10 D7                   ;
LD5D9                                                                          ;
rts                                    ; 0x1d5e9 $D5D9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD5DA                                                                          ;
ldy      #$01                          ; 0x1d5ea $D5DA A0 01                   ; Y = 01
inx                                    ; 0x1d5ec $D5DC E8                      ;
jsr      bank7_code51                  ; 0x1d5ed $D5DD 20 7D F2                ;
ldx      $10                           ; 0x1d5f0 $D5E0 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $B6,x                         ; 0x1d5f2 $D5E2 B5 B6                   ; Generated Enemy Slot
asl                                    ; 0x1d5f4 $D5E4 0A                      ;
tay                                    ; 0x1d5f5 $D5E5 A8                      ;
lda      bank7_pointer_table15,y       ; 0x1d5f6 $D5E6 B9 F1 D5                ;
sta      L000E                         ; 0x1d5f9 $D5E9 85 0E                   ;
lda      bank7_pointer_table15+$01,y   ; 0x1d5fb $D5EB B9 F2 D5                ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d5fe $D5EE 4C D6 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_pointer_table15                                                          ;
.word    bank7_code22                  ; 0x1d601 $D5F1 03 D6                   ;
.word    bank7_enemy_every_frame_routine; 0x1d603 $D5F3 CA D6                  ;
.word    LDCAE                         ; 0x1d605 $D5F5 AE DC                   ;
.word    bank7_code30                  ; 0x1d607 $D5F7 6C DD                   ;
; ---------------------------------------------------------------------------- ;
bank7_table15                                                                  ;
.byt    $08,$F8                        ; 0x1d609 $D5F9 08 F8                   ;
LD5FB                                                                          ;
.byt    $30,$50,$60,$70,$80,$90,$A0,$B0; 0x1d60b $D5FB 30 50 60 70 80 90 A0 B0 ;
; ---------------------------------------------------------------------------- ;
bank7_code22                                                                   ;
lda      $0759                         ; 0x1d613 $D603 AD 59 07                ;; if not 0, cause fairy spawn at next encounter (??)
bne      LD624                         ; 0x1d616 $D606 D0 1C                   ;
lda      $071F                         ; 0x1d618 $D608 AD 1F 07                ;; ???
lsr                                    ; 0x1d61b $D60B 4A                      ;
eor      #$01                          ; 0x1d61c $D60C 49 01                   ; flip bits .... ...x
tax                                    ; 0x1d61e $D60E AA                      ;
lda      $0732                         ; 0x1d61f $D60F AD 32 07                ;
cmp      $0733                         ; 0x1d622 $D612 CD 33 07                ;
bcc      LD625                         ; 0x1d625 $D615 90 0E                   ;
cmp      #$02                          ; 0x1d627 $D617 C9 02                   ;
beq      LD620                         ; 0x1d629 $D619 F0 05                   ;
cpx      #$01                          ; 0x1d62b $D61B E0 01                   ;
beq      LD625                         ; 0x1d62d $D61D F0 06                   ;
rts                                    ; 0x1d62f $D61F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD620                                                                          ;
cpx      #$00                          ; 0x1d630 $D620 E0 00                   ;
beq      LD625                         ; 0x1d632 $D622 F0 01                   ;
LD624                                                                          ;
rts                                    ; 0x1d634 $D624 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD625                                                                          ;
lda      $0732,x                       ; 0x1d635 $D625 BD 32 07                ;
sta      L0000                         ; 0x1d638 $D628 85 00                   ;
lda      $0734,x                       ; 0x1d63a $D62A BD 34 07                ;
sta      $01                           ; 0x1d63d $D62D 85 01                   ;
ldx      $10                           ; 0x1d63f $D62F A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      #$01                          ; 0x1d641 $D631 A0 01                   ; Y = 01
LD633                                                                          ;
tya                                    ; 0x1d643 $D633 98                      ;
ldy      #$00                          ; 0x1d644 $D634 A0 00                   ; Y = 00
cmp      ($D6),y                       ; 0x1d646 $D636 D1 D6                   ;
bcs      LD624                         ; 0x1d648 $D638 B0 EA                   ;
tay                                    ; 0x1d64a $D63A A8                      ;
iny                                    ; 0x1d64b $D63B C8                      ;
lda      ($D6),y                       ; 0x1d64c $D63C B1 D6                   ;
asl                                    ; 0x1d64e $D63E 0A                      ;
rol                                    ; 0x1d64f $D63F 2A                      ;
rol                                    ; 0x1d650 $D640 2A                      ;
and      #$03                          ; 0x1d651 $D641 29 03                   ; keep bits .... ..xx
cmp      L0000                         ; 0x1d653 $D643 C5 00                   ;
beq      LD64B                         ; 0x1d655 $D645 F0 04                   ;
LD647                                                                          ;
iny                                    ; 0x1d657 $D647 C8                      ;
jmp      LD633                         ; 0x1d658 $D648 4C 33 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD64B                                                                          ;
dey                                    ; 0x1d65b $D64B 88                      ;
lda      ($D6),y                       ; 0x1d65c $D64C B1 D6                   ;
and      #$0F                          ; 0x1d65e $D64E 29 0F                   ; keep bits .... xxxx
cmp      $01                           ; 0x1d660 $D650 C5 01                   ;
beq      LD658                         ; 0x1d662 $D652 F0 04                   ;DECIDE IF SPAWN MONSTER FROM MAP DATA
;---- spawn monster ?                                                          ;
;                                                                              ;
;Related to Enemy Generation ?		2 bytes: 	[0-2:Y index for table to get Y position]	[bits0-5:monID];
;                                                                              ; JSR $D685: 		07:D685:B1 D6     LDA ($D6),Y @ $700D = #$1D
;                                                                              ;set D6 to point to 2 bytes of monster data
iny                                    ; 0x1d664 $D654 C8                      ;
jmp      LD647                         ; 0x1d665 $D655 4C 47 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD658                                                                          ;
lda      ($D6),y                       ; 0x1d668 $D658 B1 D6                   ;
asl                                    ; 0x1d66a $D65A 0A                      ;
bcs      LD6C0                         ; 0x1d66b $D65B B0 63                   ;
inc      $B6,x                         ; 0x1d66d $D65D F6 B6                   ; Generated Enemy Slot
pha                                    ; 0x1d66f $D65F 48                      ;
sec                                    ; 0x1d670 $D660 38                      ;
ror                                    ; 0x1d671 $D661 6A                      ;
sta      ($D6),y                       ; 0x1d672 $D662 91 D6                   ;
sty      L0002                         ; 0x1d674 $D664 84 02                   ;
pla                                    ; 0x1d676 $D666 68                      ;
lsr                                    ; 0x1d677 $D667 4A                      ;
lsr                                    ; 0x1d678 $D668 4A                      ;
lsr                                    ; 0x1d679 $D669 4A                      ;
lsr                                    ; 0x1d67a $D66A 4A                      ;
lsr                                    ; 0x1d67b $D66B 4A                      ;
and      #$07                          ; 0x1d67c $D66C 29 07                   ; keep bits .... .xxx
tay                                    ; 0x1d67e $D66E A8                      ;
lda      LD5FB,y                       ; 0x1d67f $D66F B9 FB D5                ;
sta      $2A,x                         ; 0x1d682 $D672 95 2A                   ; Enemy Y Position
ldy      L0002                         ; 0x1d684 $D674 A4 02                   ;
sty      $BC,x                         ; 0x1d686 $D676 94 BC                   ;; Generated Enemy Y Position ?
lda      L0000                         ; 0x1d688 $D678 A5 00                   ;
sta      $3C,x                         ; 0x1d68a $D67A 95 3C                   ; Enemy X Position (high byte)
lda      $01                           ; 0x1d68c $D67C A5 01                   ;
asl                                    ; 0x1d68e $D67E 0A                      ;
asl                                    ; 0x1d68f $D67F 0A                      ;
asl                                    ; 0x1d690 $D680 0A                      ;
asl                                    ; 0x1d691 $D681 0A                      ;
sta      $4E,x                         ; 0x1d692 $D682 95 4E                   ; Enemy X Position (low byte)
iny                                    ; 0x1d694 $D684 C8                      ;
lda      ($D6),y                       ; 0x1d695 $D685 B1 D6                   ;??got called when existing for awhile as a bot <-bug?
and      #$3F                          ; 0x1d697 $D687 29 3F                   ; keep bits ..xx xxxx
sta      $A1,x                         ; 0x1d699 $D689 95 A1                   ; Enemy Code
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d69b $D68B 20 91 DC; Determine Enemy Facing Direction
lda      bank7_table15,y               ; 0x1d69e $D68E B9 F9 D5                ; 08 or F8
sta      $71,x                         ; 0x1d6a1 $D691 95 71                   ; Enemy X Velocity
lda      #$01                          ; 0x1d6a3 $D693 A9 01                   ; A = 01
sta      $1A,x                         ; 0x1d6a5 $D695 95 1A                   ;
lsr                                    ; 0x1d6a7 $D697 4A                      ;
sta      $040E,x                       ; 0x1d6a8 $D698 9D 0E 04                ; Enemy Hit State (0 = not in Hit State)
sta      $AF,x                         ; 0x1d6ab $D69B 95 AF                   ; Various enemy state variables
sta      $81,x                         ; 0x1d6ad $D69D 95 81                   ; Current Animation Frame for Enemy
sta      $043E,x                       ; 0x1d6af $D69F 9D 3E 04                ;
sta      $057E,x                       ; 0x1d6b2 $D6A2 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
sta      $0444,x                       ; 0x1d6b5 $D6A5 9D 44 04                ; Enemy Vulnerability
sta      $04A0,x                       ; 0x1d6b8 $D6A8 9D A0 04                ;
ldy      $A1,x                         ; 0x1d6bb $D6AB B4 A1                   ; Enemy Code
lda      $6D21,y                       ; 0x1d6bd $D6AD B9 21 6D                ;
sta      $C2,x                         ; 0x1d6c0 $D6B0 95 C2                   ; Enemy Current HP
tya                                    ; 0x1d6c2 $D6B2 98                      ;
asl                                    ; 0x1d6c3 $D6B3 0A                      ;
tay                                    ; 0x1d6c4 $D6B4 A8                      ;
lda      $6D45,y                       ; 0x1d6c5 $D6B5 B9 45 6D                ;
sta      L000E                         ; 0x1d6c8 $D6B8 85 0E                   ;
lda      $6D46,y                       ; 0x1d6ca $D6BA B9 46 6D                ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d6cd $D6BD 4C D6 D6                ;<----- JUMPS TO $(E)
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD6C0                                                                          ;
rts                                    ; 0x1d6d0 $D6C0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Link_Collision_Detection                                                 ;
lda      $A8,x                         ; 0x1d6d1 $D6C1 B5 A8                   ; Enemy State ?
and      #$10                          ; 0x1d6d3 $D6C3 29 10                   ; keep bits ...x .... (bit for enemy frozen ?)
beq      LD6C0                         ; 0x1d6d5 $D6C5 F0 F9                   ;
jmp      bank7_Link_Hit_Routine        ; 0x1d6d7 $D6C7 4C EF E2                ; Link Hit Routine
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_enemy_every_frame_routine                                                ;
lda      $A1,x                         ; 0x1d6da $D6CA B5 A1                   ; Enemy Code
asl                                    ; 0x1d6dc $D6CC 0A                      ;
tay                                    ; 0x1d6dd $D6CD A8                      ;
lda      $6D8D,y                       ; 0x1d6de $D6CE B9 8D 6D                ;
sta      L000E                         ; 0x1d6e1 $D6D1 85 0E                   ;
lda      $6D8E,y                       ; 0x1d6e3 $D6D3 B9 8E 6D                ;
bank7_JUMPS_TO___E_                                                            ;
sta      $0F                           ; 0x1d6e6 $D6D6 85 0F                   ;
jmp      (L000E)                       ; 0x1d6e8 $D6D8 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Deeler                                                         ;
.byt    $20,$F0                        ; 0x1d6eb $D6DB 20 F0                   ;20 = Speed when descending	;F0 = Speed when ascending
LD6DD                                                                          ;
.byt    $08,$F8                        ; 0x1d6ed $D6DD 08 F8                   ;08 = Speed going right	;F8 = Speed going left
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Deeler                                                   ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d6ef $D6DF 20 02 DA                ; Enemy Stops when Hit
jsr      bank7_Link_Collision_Detection; 0x1d6f2 $D6E2 20 C1 D6                ; Link Collision Detection
lda      $AF,x                         ; 0x1d6f5 $D6E5 B5 AF                   ;; Various enemy state variables
bpl      LD6EC                         ; 0x1d6f7 $D6E7 10 03                   ;
jmp      LD750                         ; 0x1d6f9 $D6E9 4C 50 D7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD6EC                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d6fc $D6EC 20 91 DC; Determine Enemy Facing Direction
lda      $AF,x                         ; 0x1d6ff $D6EF B5 AF                   ;; Various enemy state variables
bne      LD711                         ; 0x1d701 $D6F1 D0 1E                   ;
lda      $0F                           ; 0x1d703 $D6F3 A5 0F                   ;
adc      #$40                          ; 0x1d705 $D6F5 69 40                   ;
cmp      #$80                          ; 0x1d707 $D6F7 C9 80                   ;
bcc      bank7_Deeler_Red_Blue         ; 0x1d709 $D6F9 90 0B                   ;
LD6FB                                                                          ;
lda      LD6DD,y                       ; 0x1d70b $D6FB B9 DD D6                ;
sta      $71,x                         ; 0x1d70e $D6FE 95 71                   ; Enemy X Velocity
jsr      bank7_Simple_Horizontal_Movement; 0x1d710 $D700 20 B8 DE              ; Simple Horizontal Movement
jmp      LD74D                         ; 0x1d713 $D703 4C 4D D7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Deeler_Red_Blue                                                          ;
lda      $051B,x                       ; 0x1d716 $D706 BD 1B 05                ; Randomizer
and      #$1F                          ; 0x1d719 $D709 29 1F                   ; keep bits ...x xxxx
ora      $C9                           ; 0x1d71b $D70B 05 C9                   ;
bne      LD6FB                         ; 0x1d71d $D70D D0 EC                   ;
LD70F                                                                          ;
inc      $AF,x                         ; 0x1d71f $D70F F6 AF                   ;; Various enemy state variables
LD711                                                                          ;
lda      $AF,x                         ; 0x1d721 $D711 B5 AF                   ;; Various enemy state variables
lsr                                    ; 0x1d723 $D713 4A                      ;
tay                                    ; 0x1d724 $D714 A8                      ;
lda      $2A,x                         ; 0x1d725 $D715 B5 2A                   ; Enemy Y Position
cmp      $05DC,y                       ; 0x1d727 $D717 D9 DC 05                ; Go down that many pixels
bne      LD728                         ; 0x1d72a $D71A D0 0C                   ;
lda      $AF,x                         ; 0x1d72c $D71C B5 AF                   ;; Various enemy state variables
cmp      #$02                          ; 0x1d72e $D71E C9 02                   ;
bne      LD70F                         ; 0x1d730 $D720 D0 ED                   ;
lda      #$00                          ; 0x1d732 $D722 A9 00                   ; A = 00
sta      $AF,x                         ; 0x1d734 $D724 95 AF                   ;; Various enemy state variables
beq      LD74D                         ; 0x1d736 $D726 F0 25                   ;
LD728                                                                          ;
lda      $A1,x                         ; 0x1d738 $D728 B5 A1                   ; Enemy Code
cmp      #$0E                          ; 0x1d73a $D72A C9 0E                   ; 0E = Blue Deeler
bne      LD744                         ; 0x1d73c $D72C D0 16                   ;
lda      $2A,x                         ; 0x1d73e $D72E B5 2A                   ; Enemy Y Position
cmp      #$8E                          ; 0x1d740 $D730 C9 8E                   ; minimum height after first fall
bcc      LD744                         ; 0x1d742 $D732 90 10                   ;
ror      $AF,x                         ; 0x1d744 $D734 76 AF                   ;; Various enemy state variables
lda      #$00                          ; 0x1d746 $D736 A9 00                   ; A = 00
sta      $71,x                         ; 0x1d748 $D738 95 71                   ; Enemy X Velocity
lda      #$20                          ; 0x1d74a $D73A A9 20                   ; A = 20
sta      $057E,x                       ; 0x1d74c $D73C 9D 7E 05                ; Enemy Y Velocity
sta      $0504,x                       ; 0x1d74f $D73F 9D 04 05                ; Timer for Enemy
bne      LD773                         ; 0x1d752 $D742 D0 2F                   ;
LD744                                                                          ;
lda      bank7_Table_for_Deeler,y      ; 0x1d754 $D744 B9 DB D6                ;
sta      $057E,x                       ; 0x1d757 $D747 9D 7E 05                ; Enemy Y Velocity
jsr      bank7_Simple_Vertical_Movement; 0x1d75a $D74A 20 C8 DE                ; Simple Vertical Movement
LD74D                                                                          ;
jmp      LDE40                         ; 0x1d75d $D74D 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD750                                                                          ;
lda      $0504,x                       ; 0x1d760 $D750 BD 04 05                ; Timer for Enemy
bne      LD773                         ; 0x1d763 $D753 D0 1E                   ;
lda      $051B,x                       ; 0x1d765 $D755 BD 1B 05                ; Randomizer
and      #$3F                          ; 0x1d768 $D758 29 3F                   ; keep bits ..xx xxxx
ora      #$40                          ; 0x1d76a $D75A 09 40                   ; set  bits .x.. ....
sta      $0504,x                       ; 0x1d76c $D75C 9D 04 05                ; random 40-7F (delay before next jump)
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d76f $D75F 20 91 DC; Determine Enemy Facing Direction
lda      LD6DD,y                       ; 0x1d772 $D762 B9 DD D6                ;
asl                                    ; 0x1d775 $D765 0A                      ;
asl                                    ; 0x1d776 $D766 0A                      ;
sta      $71,x                         ; 0x1d777 $D767 95 71                   ; Enemy X Velocity
lda      $051B,x                       ; 0x1d779 $D769 BD 1B 05                ; Randomizer
and      #$07                          ; 0x1d77c $D76C 29 07                   ; keep bits .... .xxx
ora      #$E8                          ; 0x1d77e $D76E 09 E8                   ; set  bits xxx. x...
sta      $057E,x                       ; 0x1d780 $D770 9D 7E 05                ; Enemy Y Velocity (random E8-EF) (-18 -11)
LD773                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d783 $D773 20 B8 DE              ; Simple Horizontal Movement
jsr      bank7_Simple_Vertical_Movement; 0x1d786 $D776 20 C8 DE                ; Simple Vertical Movement
inc      $057E,x                       ; 0x1d789 $D779 FE 7E 05                ; Enemy Y Velocity
jsr      LDE3D                         ; 0x1d78c $D77C 20 3D DE                ;
lda      $A8,x                         ; 0x1d78f $D77F B5 A8                   ; Enemy State ?
and      #$04                          ; 0x1d791 $D781 29 04                   ; keep bits .... .x..
beq      LD78A                         ; 0x1d793 $D783 F0 05                   ;
jsr      bank7_Floor_Y_Position        ; 0x1d795 $D785 20 C1 DA                ; Floor Enemy Y Position
sta      $71,x                         ; 0x1d798 $D788 95 71                   ; Enemy X Velocity
LD78A                                                                          ;
rts                                    ; 0x1d79a $D78A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bago_Bago                                                      ;
.byt    $10,$F0                        ; 0x1d79b $D78B 10 F0                   ;10 = Initial X Position, facing right	;F0 = Initial X Position, facing left
LD78D                                                                          ;
.byt    $20,$E0                        ; 0x1d79d $D78D 20 E0                   ;20 = X Velocity while in mid-air, facing right	;E0 = X Velocity while in mid-air, facing left
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bago_Bago_Generator                                      ;
lda      $12                           ; 0x1d79f $D78F A5 12                   ;; Frame Counter (ascending)
and      #$7F                          ; 0x1d7a1 $D791 29 7F                   ; keep bits .xxx xxxx
bne      LD79E                         ; 0x1d7a3 $D793 D0 09                   ; delay before next Bago Bago is spawned
ldx      #$05                          ; 0x1d7a5 $D795 A2 05                   ; X = 05
LD797                                                                          ;
lda      $B6,x                         ; 0x1d7a7 $D797 B5 B6                   ;; Generated Enemy Slot
beq      LD7A1                         ; 0x1d7a9 $D799 F0 06                   ;
dex                                    ; 0x1d7ab $D79B CA                      ;
bpl      LD797                         ; 0x1d7ac $D79C 10 F9                   ;
LD79E                                                                          ;
ldx      $10                           ; 0x1d7ae $D79E A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1d7b0 $D7A0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7A1                                                                          ;
lda      #$01                          ; 0x1d7b1 $D7A1 A9 01                   ; A = 01
sta      $B6,x                         ; 0x1d7b3 $D7A3 95 B6                   ;; Generated Enemy Slot
lda      #$10                          ; 0x1d7b5 $D7A5 A9 10                   ; A = 10
sta      $A1,x                         ; 0x1d7b7 $D7A7 95 A1                   ; Enemy Code (10 = Bago Bago)
lda      $051B,x                       ; 0x1d7b9 $D7A9 BD 1B 05                ; Randomizer
and      #$01                          ; 0x1d7bc $D7AC 29 01                   ; keep bits .... ...x
tay                                    ; 0x1d7be $D7AE A8                      ;
LD7B0     = * + $0001                                                          ;
lda      $072C                         ; 0x1d7bf $D7AF AD 2C 07                ; Scrolling Offset Low Byte
adc      bank7_Table_for_Bago_Bago,y   ; 0x1d7c2 $D7B2 79 8B D7                ;
sta      $4E,x                         ; 0x1d7c5 $D7B5 95 4E                   ; Enemy X position (low byte)
lda      $072A                         ; 0x1d7c7 $D7B7 AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1d7ca $D7BA 69 00                   ;
sta      $3C,x                         ; 0x1d7cc $D7BC 95 3C                   ; Enemy X position (high byte)
lda      LD78D,y                       ; 0x1d7ce $D7BE B9 8D D7                ;
sta      $71,x                         ; 0x1d7d1 $D7C1 95 71                   ; X Velocity for Enemy
lda      #$D0                          ; 0x1d7d3 $D7C3 A9 D0                   ; A = D0
sta      $2A,x                         ; 0x1d7d5 $D7C5 95 2A                   ; Initial Y position for Bago Bago
sta      $BC,x                         ; 0x1d7d7 $D7C7 95 BC                   ;; Generated Enemy Y Position ?
lda      #$C0                          ; 0x1d7d9 $D7C9 A9 C0                   ; A = C0
sta      $057E,x                       ; 0x1d7db $D7CB 9D 7E 05                ; Initial Y Velocity for Bago Bago
lda      #$03                          ; 0x1d7de $D7CE A9 03                   ; A = 03
sta      $C2,x                         ; 0x1d7e0 $D7D0 95 C2                   ; Enemy HP
lsr                                    ; 0x1d7e2 $D7D2 4A                      ;
sta      $1A,x                         ; 0x1d7e3 $D7D3 95 1A                   ;
lsr                                    ; 0x1d7e5 $D7D5 4A                      ;
sta      $040E,x                       ; 0x1d7e6 $D7D6 9D 0E 04                ; Enemy Hit State
iny                                    ; 0x1d7e9 $D7D9 C8                      ;
sty      $60,x                         ; 0x1d7ea $D7DA 94 60                   ;; Enemy facing direction
ldx      $10                           ; 0x1d7ec $D7DC A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1d7ee $D7DE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bago_Bago_X_Velocity_on_ground                                 ;
.byt    $10,$F0                        ; 0x1d7ef $D7DF 10 F0                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bago_Bago0                                               ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d7f1 $D7E1 20 02 DA                ; Enemy Stops when Hit
lda      $C9                           ; 0x1d7f4 $D7E4 A5 C9                   ;
and      #$0C                          ; 0x1d7f6 $D7E6 29 0C                   ; keep bits .... xx..
cmp      #$0C                          ; 0x1d7f8 $D7E8 C9 0C                   ;
bne      LD7F1                         ; 0x1d7fa $D7EA D0 05                   ;
lda      #$00                          ; 0x1d7fc $D7EC A9 00                   ; A = 00
sta      $B6,x                         ; 0x1d7fe $D7EE 95 B6                   ;; Generated Enemy Slot
rts                                    ; 0x1d800 $D7F0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7F1                                                                          ;
jsr      bank7_Link_Collision_Detection; 0x1d801 $D7F1 20 C1 D6                ; Link Collision Detection
lda      $AF,x                         ; 0x1d804 $D7F4 B5 AF                   ;; Various enemy state variables
bne      bank7_Bago_Bago_and_Octorok   ; 0x1d806 $D7F6 D0 40                   ;
lda      $A8,x                         ; 0x1d808 $D7F8 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d80a $D7FA 29 04                   ;;Keep Bits:0000_0100
beq      LD812                         ; 0x1d80c $D7FC F0 14                   ;
lda      $057E,x                       ; 0x1d80e $D7FE BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
bmi      LD812                         ; 0x1d811 $D801 30 0F                   ;
inc      $AF,x                         ; 0x1d813 $D803 F6 AF                   ;; Various enemy state variables
jsr      bank7_Floor_Y_Position        ; 0x1d815 $D805 20 C1 DA                ; Floor Enemy Y Position
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d818 $D808 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_Bago_Bago_X_Velocity_on_ground,y; 0x1d81b $D80B B9 DF D7;
sta      $71,x                         ; 0x1d81e $D80E 95 71                   ;; Enemy X Velocity
bne      bank7_Bago_Bago_and_Octorok   ; 0x1d820 $D810 D0 26                   ;
LD812                                                                          ;
inc      $057E,x                       ; 0x1d822 $D812 FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jsr      bank7_Simple_Vertical_Movement; 0x1d825 $D815 20 C8 DE                ; Simple Vertical Movement
LD818                                                                          ;
lda      $0504,x                       ; 0x1d828 $D818 BD 04 05                ;; Timer for Enemy
bne      LD832                         ; 0x1d82b $D81B D0 15                   ;
lda      $2A,x                         ; 0x1d82d $D81D B5 2A                   ; Enemy Y position
sbc      $29                           ; 0x1d82f $D81F E5 29                   ; Link's Y position
cmp      #$11                          ; 0x1d831 $D821 C9 11                   ;
bcs      LD832                         ; 0x1d833 $D823 B0 0D                   ;
lda      #$70                          ; 0x1d835 $D825 A9 70                   ; A = 70
sta      $0504,x                       ; 0x1d837 $D827 9D 04 05                ; Minimum delay between rocks
lda      $051B,x                       ; 0x1d83a $D82A BD 1B 05                ; Randomizer
bmi      LD832                         ; 0x1d83d $D82D 30 03                   ; 50% chance of shooting rock at right Y pos
jsr      bank7_shoot_rock              ; 0x1d83f $D82F 20 6C D8                ; Shoot Rock
LD832                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d842 $D832 20 B8 DE              ;
jmp      LDE3D                         ; 0x1d845 $D835 4C 3D DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Bago_Bago_and_Octorok                                                    ;
lda      $A8,x                         ; 0x1d848 $D838 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d84a $D83A 29 04                   ; keep bits .... .x..
bne      LD840                         ; 0x1d84c $D83C D0 02                   ;
sta      $AF,x                         ; 0x1d84e $D83E 95 AF                   ;; Various enemy state variables
LD840                                                                          ;
bpl      LD818                         ; 0x1d850 $D840 10 D6                   ;
bank7_Enemy_Routines1_Bago_Bago1                                               ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d852 $D842 20 02 DA                ; Enemy Stops when Hit
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d855 $D845 20 91 DC; Determine Enemy Facing Direction
LD848                                                                          ;
inc      $AF,x                         ; 0x1d858 $D848 F6 AF                   ;; Various enemy state variables
lda      $AF,x                         ; 0x1d85a $D84A B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1d85c $D84C 29 7F                   ; keep bits .xxx xxxx
bne      LD855                         ; 0x1d85e $D84E D0 05                   ; delay before next jump (Octorok)
lda      #$E0                          ; 0x1d860 $D850 A9 E0                   ; A = E0
sta      $057E,x                       ; 0x1d862 $D852 9D 7E 05                ; Y Velocity for Octorok jump
LD855                                                                          ;
jsr      bank7_Gravity                 ; 0x1d865 $D855 20 BE DE                ; Gravity
jsr      LDE3D                         ; 0x1d868 $D858 20 3D DE                ; Display
jsr      bank7_Link_Collision_Detection; 0x1d86b $D85B 20 C1 D6                ; Link Collision Detection
lda      $A8,x                         ; 0x1d86e $D85E B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d870 $D860 29 04                   ; keep bits .... .x..
beq      LD867                         ; 0x1d872 $D862 F0 03                   ;
jmp      bank7_Floor_Y_Position        ; 0x1d874 $D864 4C C1 DA                ; Floor Enemy Y Position
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD867                                                                          ;
lda      $057E,x                       ; 0x1d877 $D867 BD 7E 05                ; Enemy Y Velocity
bne      LD885                         ; 0x1d87a $D86A D0 19                   ;
bank7_shoot_rock                                                               ;
lda      $60,x                         ; 0x1d87c $D86C B5 60                   ;; Enemy facing direction
pha                                    ; 0x1d87e $D86E 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d87f $D86F 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1d882 $D872 68                      ;
sta      $60,x                         ; 0x1d883 $D873 95 60                   ;; Enemy facing direction
iny                                    ; 0x1d885 $D875 C8                      ;
tya                                    ; 0x1d886 $D876 98                      ;
cmp      $60,x                         ; 0x1d887 $D877 D5 60                   ;; Enemy facing direction
bne      LD885                         ; 0x1d889 $D879 D0 0A                   ;
jsr      bank7_Spawn_New_Projectile    ; 0x1d88b $D87B 20 CE DB                ; Spawn New Projectile
bcs      LD885                         ; 0x1d88e $D87E B0 05                   ;
lda      #$03                          ; 0x1d890 $D880 A9 03                   ; A = 03
sta      $87,y                         ; 0x1d892 $D882 99 87 00                ; generate projectile type 3 (Octorok rock)
LD885                                                                          ;
rts                                    ; 0x1d895 $D885 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Octorok_X_Velocity                                             ;
.byt    $08,$F8                        ; 0x1d896 $D886 08 F8                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Octorok                                                  ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d898 $D888 20 02 DA                ; Enemy Stops when Hit
jsr      LD848                         ; 0x1d89b $D88B 20 48 D8                ;
lda      $A8,x                         ; 0x1d89e $D88E B5 A8                   ;; Enemy State
and      #$03                          ; 0x1d8a0 $D890 29 03                   ; keep bits .... ..xx
beq      LD897                         ; 0x1d8a2 $D892 F0 03                   ;
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0x1d8a4 $D894 20 EB E8; Wall Hit Collision Test
LD897                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d8a7 $D897 20 B8 DE              ; Simple Horizontal Movement
lda      $AF,x                         ; 0x1d8aa $D89A B5 AF                   ;; Various enemy state variables
asl                                    ; 0x1d8ac $D89C 0A                      ;
cmp      #$80                          ; 0x1d8ad $D89D C9 80                   ;
bne      LD8A9                         ; 0x1d8af $D89F D0 08                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d8b1 $D8A1 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_Octorok_X_Velocity,y; 0x1d8b4 $D8A4 B9 86 D8          ;
sta      $71,x                         ; 0x1d8b7 $D8A7 95 71                   ; Enemy X Velocity
LD8A9                                                                          ;
lda      $0504,x                       ; 0x1d8b9 $D8A9 BD 04 05                ;; Timer for Enemy
bne      LD8BE                         ; 0x1d8bc $D8AC D0 10                   ;
lda      $051B,x                       ; 0x1d8be $D8AE BD 1B 05                ; Randomizer
and      #$7F                          ; 0x1d8c1 $D8B1 29 7F                   ; keep bits .xxx xxxx
ora      #$80                          ; 0x1d8c3 $D8B3 09 80                   ; set  bits x... ....
sta      $0504,x                       ; 0x1d8c5 $D8B5 9D 04 05                ; random 80-FF (delay before shooting rock)
lda      $A8,x                         ; 0x1d8c8 $D8B8 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d8ca $D8BA 29 04                   ; keep bits .... .x..
bne      bank7_shoot_rock              ; 0x1d8cc $D8BC D0 AE                   ;
LD8BE                                                                          ;
rts                                    ; 0x1d8ce $D8BE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Elevator_Y_Velocity                                            ;
.byt    $00,$18,$E8                    ; 0x1d8cf $D8BF 00 18 E8                ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Elevator                                                 ;
lda      $A8,x                         ; 0x1d8d2 $D8C2 B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d8d4 $D8C4 29 10                   ; keep bits ...x ....
beq      LD91B                         ; 0x1d8d6 $D8C6 F0 53                   ;
sta      $0754                         ; 0x1d8d8 $D8C8 8D 54 07                ;;in_elevator (boolean)
lda      #$00                          ; 0x1d8db $D8CB A9 00                   ; A = 00
sta      $0479                         ; 0x1d8dd $D8CD 8D 79 04                ; Link is in mid-air ?
sta      $057D                         ; 0x1d8e0 $D8D0 8D 7D 05                ;;vspeed (Link's vertical velocity, negative is up.); Link's Y Velocity; Player Y Delta; Link's Y Velocity
lda      $0743                         ; 0x1d8e3 $D8D3 AD 43 07                ; Up/Down Buttons Held
lsr                                    ; 0x1d8e6 $D8D6 4A                      ;
lsr                                    ; 0x1d8e7 $D8D7 4A                      ;
tay                                    ; 0x1d8e8 $D8D8 A8                      ;
lda      bank7_Table_for_Elevator_Y_Velocity,y; 0x1d8e9 $D8D9 B9 BF D8         ;
sta      $057E,x                       ; 0x1d8ec $D8DC 9D 7E 05                ; Enemy Y Velocity
lda      $0743                         ; 0x1d8ef $D8DF AD 43 07                ;; Controller 1 Input; Up/Down Buttons Held		;elevator was moving up or down: 8=up, 4=down
beq      LD8F4                         ; 0x1d8f2 $D8E2 F0 10                   ;
lda      $A7                           ; 0x1d8f4 $D8E4 A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$0C                          ; 0x1d8f6 $D8E6 29 0C                   ; keep bits .... xx..
eor      $0743                         ; 0x1d8f8 $D8E8 4D 43 07                ; Up/Down Buttons Held
beq      LD8FB                         ; 0x1d8fb $D8EB F0 0E                   ;
lda      #$20                          ; 0x1d8fd $D8ED A9 20                   ; A = 20
sta      $EF                           ; 0x1d8ff $D8EF 85 EF                   ; Sound Effects Type 4
jsr      bank7_Simple_Vertical_Movement; 0x1d901 $D8F1 20 C8 DE                ;
LD8F4                                                                          ;
lda      $2A,x                         ; 0x1d904 $D8F4 B5 2A                   ; Enemy Y position
clc                                    ; 0x1d906 $D8F6 18                      ;
adc      #$08                          ; 0x1d907 $D8F7 69 08                   ;
sta      $29                           ; 0x1d909 $D8F9 85 29                   ; Link's Y position
LD8FB                                                                          ;
lda      $2A,x                         ; 0x1d90b $D8FB B5 2A                   ; Enemy Y position
cmp      #$D8                          ; 0x1d90d $D8FD C9 D8                   ;
;BCS when going down to new floor below while on elevator                      ;
bcc      LD91B                         ; 0x1d90f $D8FF 90 1A                   ;
lda      #$70                          ; 0x1d911 $D901 A9 70                   ; A = 70
sta      $4D                           ; 0x1d913 $D903 85 4D                   ; Link's X position (low byte)
lda      #$06                          ; 0x1d915 $D905 A9 06                   ; A = 06
sta      $0735                         ; 0x1d917 $D907 8D 35 07                ;
lda      #$0B                          ; 0x1d91a $D90A A9 0B                   ; A = 0B
sta      $0734                         ; 0x1d91c $D90C 8D 34 07                ;
lda      #$00                          ; 0x1d91f $D90F A9 00                   ; A = 00
sta      $FD                           ; 0x1d921 $D911 85 FD                   ;
sta      $072C                         ; 0x1d923 $D913 8D 2C 07                ; Scrolling Offset Low Byte
lda      #$13                          ; 0x1d926 $D916 A9 13                   ; A = 13
jmp      LE187                         ; 0x1d928 $D918 4C 87 E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD91B                                                                          ;
jmp      LDE40                         ; 0x1d92b $D91B 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Fairy                                                    ;
lda      $C9                           ; 0x1d92e $D91E A5 C9                   ;
and      #$08                          ; 0x1d930 $D920 29 08                   ; keep bits .... x...
bne      LD931                         ; 0x1d932 $D922 D0 0D                   ;
lda      $81,x                         ; 0x1d934 $D924 B5 81                   ;; Current Animation Frame for Enemys
ora      $07FE                         ; 0x1d936 $D926 0D FE 07                ;
bne      LD931                         ; 0x1d939 $D929 D0 06                   ;
lda      #$C0                          ; 0x1d93b $D92B A9 C0                   ; A = C0
sta      $EC                           ; 0x1d93d $D92D 85 EC                   ; Sound Effects Type 1
inc      $81,x                         ; 0x1d93f $D92F F6 81                   ;; Current Animation Frame for Enemys
LD931                                                                          ;
jsr      LDE40                         ; 0x1d941 $D931 20 40 DE                ;
ldy      $AF,x                         ; 0x1d944 $D934 B4 AF                   ;; Various enemy state variables
bne      LD947                         ; 0x1d946 $D936 D0 0F                   ;
lda      $A8,x                         ; 0x1d948 $D938 B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d94a $D93A 29 10                   ; keep bits ...x ....
beq      LD946                         ; 0x1d94c $D93C F0 08                   ;
inc      $AF,x                         ; 0x1d94e $D93E F6 AF                   ;; Various enemy state variables
inc      $DE                           ; 0x1d950 $D940 E6 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
dey                                    ; 0x1d952 $D942 88                      ;
sty      $070D                         ; 0x1d953 $D943 8C 0D 07                ; Life to be added to Life Meter
LD946                                                                          ;
rts                                    ; 0x1d956 $D946 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD947                                                                          ;
lda      $074B                         ; 0x1d957 $D947 AD 4B 07                ; Spell Flash Counter
ora      #$10                          ; 0x1d95a $D94A 09 10                   ; set bits ...x ....
sta      $074B                         ; 0x1d95c $D94C 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      $070D                         ; 0x1d95f $D94F AD 0D 07                ; Life to be added to Life Meter
bne      LD946                         ; 0x1d962 $D952 D0 F2                   ;
sta      $DE                           ; 0x1d964 $D954 85 DE                   ; Spell Spell modifier
jmp      bank7_remove_enemy_or_item    ; 0x1d966 $D956 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Red_Jar                                                  ;
jsr      LDE3D                         ; 0x1d969 $D959 20 3D DE                ; Display
lda      $A8,x                         ; 0x1d96c $D95C B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d96e $D95E 29 04                   ; keep bits .... .x..
beq      LD98B                         ; 0x1d970 $D960 F0 29                   ;
lda      $2A,x                         ; 0x1d972 $D962 B5 2A                   ; Enemy Y position
and      #$F0                          ; 0x1d974 $D964 29 F0                   ; keep bits xxxx ....
sta      $2A,x                         ; 0x1d976 $D966 95 2A                   ;; Enemy Y Position
lda      $AF,x                         ; 0x1d978 $D968 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1d97a $D96A 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1d97c $D96C A8                      ;
lda      #$FF                          ; 0x1d97d $D96D A9 FF                   ; A = FF
cpy      #$0A                          ; 0x1d97f $D96F C0 0A                   ;
bcc      LD977                         ; 0x1d981 $D971 90 04                   ;
cpy      #$0E                          ; 0x1d983 $D973 C0 0E                   ;
bcc      LD988                         ; 0x1d985 $D975 90 11                   ;
LD977                                                                          ;
ldy      $057E,x                       ; 0x1d987 $D977 BC 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
cpy      #$0E                          ; 0x1d98a $D97A C0 0E                   ;
bcc      LD988                         ; 0x1d98c $D97C 90 0A                   ;
dec      $2A,x                         ; 0x1d98e $D97E D6 2A                   ;; Enemy Y Position
lda      #$F7                          ; 0x1d990 $D980 A9 F7                   ; A = F7
cpy      #$30                          ; 0x1d992 $D982 C0 30                   ;
bcc      LD988                         ; 0x1d994 $D984 90 02                   ;
lda      #$F0                          ; 0x1d996 $D986 A9 F0                   ; A = F0
LD988                                                                          ;
sta      $057E,x                       ; 0x1d998 $D988 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
LD98B                                                                          ;
inc      $057E,x                       ; 0x1d99b $D98B FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jmp      bank7_Simple_Vertical_Movement; 0x1d99e $D98E 4C C8 DE                ; Simple Vertical Movement
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Locked_Door                                              ;
jsr      LDE40                         ; 0x1d9a1 $D991 20 40 DE                ;
ldy      $AF,x                         ; 0x1d9a4 $D994 B4 AF                   ;; Various enemy state variables
beq      bank7_link_door_collision_maybe; 0x1d9a6 $D996 F0 22                  ;
inc      $AF,x                         ; 0x1d9a8 $D998 F6 AF                   ;; Various enemy state variables
cpy      #$11                          ; 0x1d9aa $D99A C0 11                   ;
bne      LD9FD                         ; 0x1d9ac $D99C D0 5F                   ;
lda      #$F0                          ; 0x1d9ae $D99E A9 F0                   ; A = F0
sta      $87                           ; 0x1d9b0 $D9A0 85 87                   ; Projectile Type
lda      $4E,x                         ; 0x1d9b2 $D9A2 B5 4E                   ; Enemy X position (low byte)
sta      $54                           ; 0x1d9b4 $D9A4 85 54                   ; Projectile X Position (low byte)
lda      $3C,x                         ; 0x1d9b6 $D9A6 B5 3C                   ; Enemy X position (high byte)
sta      $42                           ; 0x1d9b8 $D9A8 85 42                   ; Projectile X Position (high byte)
lda      #$AC                          ; 0x1d9ba $D9AA A9 AC                   ; A = AC
sta      $30                           ; 0x1d9bc $D9AC 85 30                   ; Projectile Y Position
lda      #$01                          ; 0x1d9be $D9AE A9 01                   ; A = 01
sta      $20                           ; 0x1d9c0 $D9B0 85 20                   ; Enemy Condition
sta      $EF                           ; 0x1d9c2 $D9B2 85 EF                   ; Sound Effects Type 4
lsr                                    ; 0x1d9c4 $D9B4 4A                      ;
sta      $DE                           ; 0x1d9c5 $D9B5 85 DE                   ; Spell Spell modifier
jmp      bank7_remove_enemy_or_item    ; 0x1d9c7 $D9B7 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_link_door_collision_maybe                                                ;
lda      $A8,x                         ; 0x1d9ca $D9BA B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d9cc $D9BC 29 10                   ; keep bits ...x ....
sta      $05E7                         ; 0x1d9ce $D9BE 8D E7 05                ;
beq      LD9FD                         ; 0x1d9d1 $D9C1 F0 3A                   ;
lda      $13                           ; 0x1d9d3 $D9C3 A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      LD9D0                         ; 0x1d9d5 $D9C5 D0 09                   ;
lda      #$00                          ; 0x1d9d7 $D9C7 A9 00                   ; A = 00
sta      $05                           ; 0x1d9d9 $D9C9 85 05                   ;
sta      $0B                           ; 0x1d9db $D9CB 85 0B                   ;
jsr      bank7_code37                  ; 0x1d9dd $D9CD 20 71 E3                ;
LD9D0                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d9e0 $D9D0 20 91 DC; Determine Enemy Facing Direction
iny                                    ; 0x1d9e3 $D9D3 C8                      ;
tya                                    ; 0x1d9e4 $D9D4 98                      ;
eor      #$03                          ; 0x1d9e5 $D9D5 49 03                   ; flip bits .... ..xx
sta      $05E7                         ; 0x1d9e7 $D9D7 8D E7 05                ;
lda      $078C                         ; 0x1d9ea $D9DA AD 8C 07                ; Have Magic Key
bne      LD9E7                         ; 0x1d9ed $D9DD D0 08                   ;
lda      $0793                         ; 0x1d9ef $D9DF AD 93 07                ; Current number of keys
beq      LD9FD                         ; 0x1d9f2 $D9E2 F0 19                   ;
dec      $0793                         ; 0x1d9f4 $D9E4 CE 93 07                ;; Keys (00-09); Current number of Keys
LD9E7                                                                          ;
lda      $3C,x                         ; 0x1d9f7 $D9E7 B5 3C                   ;; Enemy X Position (high byte)
tax                                    ; 0x1d9f9 $D9E9 AA                      ;
jsr      Set_Item_RAM_bit_to_0__Bits_0_3; 0x1d9fa $D9EA 20 95 C2               ;
ldx      $10                           ; 0x1d9fd $D9ED A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$80                          ; 0x1d9ff $D9EF A9 80                   ; A = 80
sta      $EC                           ; 0x1da01 $D9F1 85 EC                   ; Sound Effects Type 1
sta      $DE                           ; 0x1da03 $D9F3 85 DE                   ; Spell Spell modifier
asl                                    ; 0x1da05 $D9F5 0A                      ; A >> 0
sta      $70                           ; 0x1da06 $D9F6 85 70                   ; Link's X Velocity
sta      $057D                         ; 0x1da08 $D9F8 8D 7D 05                ; Link's Y Velocity
inc      $AF,x                         ; 0x1da0b $D9FB F6 AF                   ;; Various enemy state variables
LD9FD                                                                          ;
rts                                    ; 0x1da0d $D9FD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bot                                                            ;
.byt    $10,$F0                        ; 0x1da0e $D9FE 10 F0                   ;10 = X velocity while jumping, facing right	;F0 = X velocity while jumping, facing left
LDA00                                                                          ;
.byt    $C0,$40                        ; 0x1da10 $DA00 C0 40                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Stops_when_Hit                                                     ;
lda      $040E,x                       ; 0x1da12 $DA02 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LD9FD                         ; 0x1da15 $DA05 F0 F6                   ; if 0, return...
pla                                    ; 0x1da17 $DA07 68                      ;
pla                                    ; 0x1da18 $DA08 68                      ;
jmp      LDE40                         ; 0x1da19 $DA09 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bot                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da1c $DA0C 20 02 DA                ; Enemy Stops when Hit
lda      $A8,x                         ; 0x1da1f $DA0F B5 A8                   ; Enemy state ?
and      #$04                          ; 0x1da21 $DA11 29 04                   ;;Keep Bits:0000_0100
beq      LDA28                         ; 0x1da23 $DA13 F0 13                   ;
lda      $051B,x                       ; 0x1da25 $DA15 BD 1B 05                ; Randomizer
asl                                    ; 0x1da28 $DA18 0A                      ; 1 : 128
bne      LDA28                         ; 0x1da29 $DA19 D0 0D                   ;
lda      #$E5                          ; 0x1da2b $DA1B A9 E5                   ; Bot's initial Y velocity when jumping
sta      $057E,x                       ; 0x1da2d $DA1D 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1da30 $DA20 20 91 DC; Determine Enemy Facing Direction; Determine Enemy Facing Direction
lda      bank7_Table_for_Bot,y         ; 0x1da33 $DA23 B9 FE D9                ; refer to table at $1D9FE
sta      $71,x                         ; 0x1da36 $DA26 95 71                   ;; Enemy X Velocity
LDA28                                                                          ;
jmp      bank7_Enemy_Routines1_Myu     ; 0x1da38 $DA28 4C 47 DA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bit                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da3b $DA2B 20 02 DA                ; Enemy Stops when Hit
txa                                    ; 0x1da3e $DA2E 8A                      ;
asl                                    ; 0x1da3f $DA2F 0A                      ;
asl                                    ; 0x1da40 $DA30 0A                      ;
asl                                    ; 0x1da41 $DA31 0A                      ;
asl                                    ; 0x1da42 $DA32 0A                      ;
asl                                    ; 0x1da43 $DA33 0A                      ;
ora      $12                           ; 0x1da44 $DA34 05 12                   ;; Frame Counter (ascending)
cmp      #$C0                          ; 0x1da46 $DA36 C9 C0                   ; affects Bit's movement (slow vs fast)
bcc      bank7_Enemy_Routines1_Myu     ; 0x1da48 $DA38 90 0D                   ;
lda      #$40                          ; 0x1da4a $DA3A A9 40                   ; Bit/Bot fast movement, facing right
sta      $05DA                         ; 0x1da4c $DA3C 8D DA 05                ;
lda      #$C0                          ; 0x1da4f $DA3F A9 C0                   ; Bit/Bot fast movement, facing left
sta      $05DB                         ; 0x1da51 $DA41 8D DB 05                ;
jmp      LDA54                         ; 0x1da54 $DA44 4C 54 DA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Myu                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da57 $DA47 20 02 DA                ; Enemy Stops when Hit
lda      #$20                          ; 0x1da5a $DA4A A9 20                   ; Bit/Bot slow movement, facing right
sta      $05DA                         ; 0x1da5c $DA4C 8D DA 05                ;
lda      #$E0                          ; 0x1da5f $DA4F A9 E0                   ; Bit/Bot slow movement, facing left
sta      $05DB                         ; 0x1da61 $DA51 8D DB 05                ;
LDA54                                                                          ;
jsr      bank7_Gravity                 ; 0x1da64 $DA54 20 BE DE                ; Gravity
jsr      LDE3D                         ; 0x1da67 $DA57 20 3D DE                ; Display
jsr      bank7_Link_Collision_Detection; 0x1da6a $DA5A 20 C1 D6                ; Link Collision Detection
lda      $2A,x                         ; 0x1da6d $DA5D B5 2A                   ; Enemy Y Position
cmp      #$60                          ; 0x1da6f $DA5F C9 60                   ;
bcc      LDA69                         ; 0x1da71 $DA61 90 06                   ;
lda      $A8,x                         ; 0x1da73 $DA63 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1da75 $DA65 29 04                   ; keep bits .... .x..
bne      LDA72                         ; 0x1da77 $DA67 D0 09                   ;
LDA69                                                                          ;
lda      $A8,x                         ; 0x1da79 $DA69 B5 A8                   ;; Enemy State
and      #$03                          ; 0x1da7b $DA6B 29 03                   ; keep bits .... ..xx
bne      LDAC0                         ; 0x1da7d $DA6D D0 51                   ;
jmp      bank7_Simple_Horizontal_Movement; 0x1da7f $DA6F 4C B8 DE              ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDA72                                                                          ;
jsr      bank7_Floor_Y_Position        ; 0x1da82 $DA72 20 C1 DA                ; Floor Enemy Y Position
lda      $AF,x                         ; 0x1da85 $DA75 B5 AF                   ;; Various enemy state variables
beq      LDA7D                         ; 0x1da87 $DA77 F0 04                   ;
sta      $81,x                         ; 0x1da89 $DA79 95 81                   ;; Current Animation Frame for Enemys
bne      LDAA4                         ; 0x1da8b $DA7B D0 27                   ;
LDA7D                                                                          ;
lda      $0444,x                       ; 0x1da8d $DA7D BD 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
pha                                    ; 0x1da90 $DA80 48                      ;
and      #$0C                          ; 0x1da91 $DA81 29 0C                   ; keep bits ... xx..
sta      $81,x                         ; 0x1da93 $DA83 95 81                   ;; Current Animation Frame for Enemys
inc      $0444,x                       ; 0x1da95 $DA85 FE 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
pla                                    ; 0x1da98 $DA88 68                      ;
and      #$0F                          ; 0x1da99 $DA89 29 0F                   ; keep bits .... xxxx
cmp      #$0F                          ; 0x1da9b $DA8B C9 0F                   ; delay for pause between slides
beq      LDA93                         ; 0x1da9d $DA8D F0 04                   ; (affects Myu also)
cmp      #$03                          ; 0x1da9f $DA8F C9 03                   ;
bne      LDAA4                         ; 0x1daa1 $DA91 D0 11                   ;
LDA93                                                                          ;
ldy      $0401,x                       ; 0x1daa3 $DA93 BC 01 04                ;
lda      $05DA,y                       ; 0x1daa6 $DA96 B9 DA 05                ;
sta      $71,x                         ; 0x1daa9 $DA99 95 71                   ;; Enemy X Velocity
lda      $A8,x                         ; 0x1daab $DA9B B5 A8                   ;; Enemy State
and      #$03                          ; 0x1daad $DA9D 29 03                   ; keep bits .... ..xx
bne      LDAA4                         ; 0x1daaf $DA9F D0 03                   ;
jsr      bank7_Simple_Horizontal_Movement; 0x1dab1 $DAA1 20 B8 DE              ; Simple Horizontal Movement
LDAA4                                                                          ;
lda      $0504,x                       ; 0x1dab4 $DAA4 BD 04 05                ;; Timer for Enemy
bne      LDAC0                         ; 0x1dab7 $DAA7 D0 17                   ;
lda      $AF,x                         ; 0x1dab9 $DAA9 B5 AF                   ;; Various enemy state variables
eor      #$01                          ; 0x1dabb $DAAB 49 01                   ; flip bits .... ...x
sta      $AF,x                         ; 0x1dabd $DAAD 95 AF                   ;; Various enemy state variables
tay                                    ; 0x1dabf $DAAF A8                      ;
lda      $051B,x                       ; 0x1dac0 $DAB0 BD 1B 05                ; Randomizer
and      #$3F                          ; 0x1dac3 $DAB3 29 3F                   ; keep bits ..xx xxxx
ora      LDA00,y                       ; 0x1dac5 $DAB5 19 00 DA                ; refer to table at $1D9FE (offset +2)
sta      $0504,x                       ; 0x1dac8 $DAB8 9D 04 05                ;; Timer for Enemy
and      #$01                          ; 0x1dacb $DABB 29 01                   ; keep bits .... ...x
sta      $0401,x                       ; 0x1dacd $DABD 9D 01 04                ;
LDAC0                                                                          ;
rts                                    ; 0x1dad0 $DAC0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Floor_Y_Position                                                         ;
;Floor Enemy Y Position to multiple of 0x10                                    ;
lda      $2A,x                         ; 0x1dad1 $DAC1 B5 2A                   ; Enemy Y Position
and      #$F0                          ; 0x1dad3 $DAC3 29 F0                   ; keep bits xxxx ....
sta      $2A,x                         ; 0x1dad5 $DAC5 95 2A                   ;; Enemy Y Position
;Set Enemy Y Velocity to 0                                                     ;
lda      #$00                          ; 0x1dad7 $DAC7 A9 00                   ; A = 00
sta      $057E,x                       ; 0x1dad9 $DAC9 9D 7E 05                ; Enemy Y Velocity
rts                                    ; 0x1dadc $DACC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_for_Moa                                                            ;
.byt    $08,$F8                        ; 0x1dadd $DACD 08 F8                   ;08 = Moa's Y velocity when going down	;F8 = Moa's Y velocity when going up
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Moa                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1dadf $DACF 20 02 DA                ; Enemy Stops when Hit
jsr      LDE54                         ; 0x1dae2 $DAD2 20 54 DE                ;
lda      $0706                         ; 0x1dae5 $DAD5 AD 06 07                ; Current Region
cmp      #$02                          ; 0x1dae8 $DAD8 C9 02                   ; check if Region is 02 (East Hyrule)
bne      LDAE1                         ; 0x1daea $DADA D0 05                   ;
lda      $078A                         ; 0x1daec $DADC AD 8A 07                ; Have Cross ?
beq      LDAE4                         ; 0x1daef $DADF F0 03                   ; if NOT, skip display routine
LDAE1                                                                          ;
jsr      bank7_Display                 ; 0x1daf1 $DAE1 20 11 EF                ; Display
LDAE4                                                                          ;
jsr      bank7_Link_Collision_Detection; 0x1daf4 $DAE4 20 C1 D6                ; Link Collision Detection
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1daf7 $DAE7 20 91 DC; Determine Enemy Facing Direction
lda      $71,x                         ; 0x1dafa $DAEA B5 71                   ; Enemy X Velocity
pha                                    ; 0x1dafc $DAEC 48                      ;
adc      $70                           ; 0x1dafd $DAED 65 70                   ; Link's X Velocity
adc      bank7_table_for_Moa,y         ; 0x1daff $DAEF 79 CD DA                ;
sta      $71,x                         ; 0x1db02 $DAF2 95 71                   ;; Enemy X Velocity
jsr      bank7_Simple_Horizontal_Movement; 0x1db04 $DAF4 20 B8 DE              ; Simple Horizontal Movement
pla                                    ; 0x1db07 $DAF7 68                      ;
sta      $71,x                         ; 0x1db08 $DAF8 95 71                   ;; Enemy X Velocity
ldy      #$02                          ; 0x1db0a $DAFA A0 02                   ; Y = 02
asl                                    ; 0x1db0c $DAFC 0A                      ;
bcs      LDB00                         ; 0x1db0d $DAFD B0 01                   ;
dey                                    ; 0x1db0f $DAFF 88                      ;
LDB00                                                                          ;
sty      $60,x                         ; 0x1db10 $DB00 94 60                   ;; Enemy facing direction
lda      $AF,x                         ; 0x1db12 $DB02 B5 AF                   ;; Various enemy state variables
bne      LDB2D                         ; 0x1db14 $DB04 D0 27                   ;
lda      $0504,x                       ; 0x1db16 $DB06 BD 04 05                ;; Timer for Enemy
bne      LDB2C                         ; 0x1db19 $DB09 D0 21                   ;
inc      $AF,x                         ; 0x1db1b $DB0B F6 AF                   ;; Various enemy state variables
lda      $051B,x                       ; 0x1db1d $DB0D BD 1B 05                ; Randomizer
and      #$01                          ; 0x1db20 $DB10 29 01                   ; keep bits .... ...x
tay                                    ; 0x1db22 $DB12 A8                      ;
lda      $2A,x                         ; 0x1db23 $DB13 B5 2A                   ; Enemy Y Position
cmp      #$40                          ; 0x1db25 $DB15 C9 40                   ;
bcs      LDB1B                         ; 0x1db27 $DB17 B0 02                   ;
ldy      #$00                          ; 0x1db29 $DB19 A0 00                   ; Y = 00 (Moa going down)
LDB1B                                                                          ;
cmp      #$C0                          ; 0x1db2b $DB1B C9 C0                   ;
bcc      LDB21                         ; 0x1db2d $DB1D 90 02                   ;
ldy      #$01                          ; 0x1db2f $DB1F A0 01                   ; Y = 01 (Moa going up)
LDB21                                                                          ;
lda      bank7_table_for_Moa,y         ; 0x1db31 $DB21 B9 CD DA                ;
sta      $057E,x                       ; 0x1db34 $DB24 9D 7E 05                ; Enemy Y Velocity
lda      $60,x                         ; 0x1db37 $DB27 B5 60                   ; Enemy facing direction
sta      $0401,x                       ; 0x1db39 $DB29 9D 01 04                ;
LDB2C                                                                          ;
rts                                    ; 0x1db3c $DB2C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDB2D                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x1db3d $DB2D 20 C8 DE                ; Simple Vertical Movement
ldy      $0401,x                       ; 0x1db40 $DB30 BC 01 04                ;
dey                                    ; 0x1db43 $DB33 88                      ;
beq      bank7_Related_to_Moa          ; 0x1db44 $DB34 F0 09                   ;
inc      $71,x                         ; 0x1db46 $DB36 F6 71                   ; * double the increase for more speed *
lda      $71,x                         ; 0x1db48 $DB38 B5 71                   ; Enemy X Velocity
cmp      #$20                          ; 0x1db4a $DB3A C9 20                   ; velocity for changing X direction (right)
beq      LDB47                         ; 0x1db4c $DB3C F0 09                   ;
rts                                    ; 0x1db4e $DB3E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Moa                                                           ;
dec      $71,x                         ; 0x1db4f $DB3F D6 71                   ; * double the decrease for more speed *
lda      $71,x                         ; 0x1db51 $DB41 B5 71                   ; Enemy X Velocity
cmp      #$E0                          ; 0x1db53 $DB43 C9 E0                   ; velocity for changing X direction (left)
bne      LDB4E                         ; 0x1db55 $DB45 D0 07                   ;
LDB47                                                                          ;
dec      $AF,x                         ; 0x1db57 $DB47 D6 AF                   ;; Various enemy state variables
lda      #$20                          ; 0x1db59 $DB49 A9 20                   ; A = 20
sta      $0504,x                       ; 0x1db5b $DB4B 9D 04 05                ;; Timer for Enemy
LDB4E                                                                          ;
rts                                    ; 0x1db5e $DB4E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Ache_Acheman_and_many_others                                   ;
;38 C8 = good speed for challenge                                              ;
;                                                                              ;
;F8 = X Velocity, flying left                                                  ;
;08 = X Velocity, flying right                                                 ;
;20 = X Velocity of Flame, facing right                                        ;
;E0 = X Velocity of Flame, facing left                                         ;
.byt    $F8                            ; 0x1db5f $DB4F F8                      ;
LDB50                                                                          ;
.byt    $08,$20,$E0                    ; 0x1db60 $DB50 08 20 E0                ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Ache_and_Acheman                                         ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1db63 $DB53 20 02 DA                ; Enemy Stops when Hit
lda      $A1,x                         ; 0x1db66 $DB56 B5 A1                   ; Enemy Code
cmp      #$0A                          ; 0x1db68 $DB58 C9 0A                   ; 0A = Acheman
bne      bank7_Ache                    ; 0x1db6a $DB5A D0 1D                   ;
lda      $AF,x                         ; 0x1db6c $DB5C B5 AF                   ;; Various enemy state variables
beq      bank7_Ache                    ; 0x1db6e $DB5E F0 19                   ;
dec      $AF,x                         ; 0x1db70 $DB60 D6 AF                   ;; Various enemy state variables
cmp      #$18                          ; 0x1db72 $DB62 C9 18                   ; delay before flying back
bne      bank7_Go_on___                ; 0x1db74 $DB64 D0 0D                   ;
bank7_Spawn_Flame                                                              ;
jsr      bank7_Spawn_New_Projectile    ; 0x1db76 $DB66 20 CE DB                ; Spawn New Projectile
bcs      bank7_Go_on___                ; 0x1db79 $DB69 B0 08                   ; Carry Set = max number of projectiles reached
lda      $30,y                         ; 0x1db7b $DB6B B9 30 00                ; Projectile Y Position
adc      #$02                          ; 0x1db7e $DB6E 69 02                   ; 02 = relative Y position of Flame
sta      $30,y                         ; 0x1db80 $DB70 99 30 00                ; ** can be randomized! 02 or 12 **
bank7_Go_on___                                                                 ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1db83 $DB73 20 91 DC; Determine Enemy Facing Direction
jmp      LDBC8                         ; 0x1db86 $DB76 4C C8 DB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Ache                                                                     ;
lda      $81,x                         ; 0x1db89 $DB79 B5 81                   ;; Current Animation Frame for Enemys
bne      LDBA8                         ; 0x1db8b $DB7B D0 2B                   ;
ldy      $3C,x                         ; 0x1db8d $DB7D B4 3C                   ;; Enemy X Position (high byte)
dey                                    ; 0x1db8f $DB7F 88                      ;
cpy      #$02                          ; 0x1db90 $DB80 C0 02                   ;
bcc      bank7_Ache_Acheman1           ; 0x1db92 $DB82 90 07                   ;
tya                                    ; 0x1db94 $DB84 98                      ;
and      #$01                          ; 0x1db95 $DB85 29 01                   ; keep bits .... ...x
tay                                    ; 0x1db97 $DB87 A8                      ;
jmp      LDB9C                         ; 0x1db98 $DB88 4C 9C DB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Ache_Acheman1                                                            ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1db9b $DB8B 20 91 DC; Determine Enemy Facing Direction
lda      $0F                           ; 0x1db9e $DB8E A5 0F                   ;
adc      #$20                          ; 0x1dba0 $DB90 69 20                   ; 30 and 60 work, reaction distance increased
cmp      #$40                          ; 0x1dba2 $DB92 C9 40                   ; 40 and 80 work, too
bcs      LDBC8                         ; 0x1dba4 $DB94 B0 32                   ;
lda      $051B,x                       ; 0x1dba6 $DB96 BD 1B 05                ; Randomizer
and      #$01                          ; 0x1dba9 $DB99 29 01                   ; keep bits .... ...x
tay                                    ; 0x1dbab $DB9B A8                      ; fly down direction (random 0-1)
LDB9C                                                                          ;
lda      bank7_Table_for_Ache_Acheman_and_many_others,y; 0x1dbac $DB9C B9 4F DB;
sta      $71,x                         ; 0x1dbaf $DB9F 95 71                   ; Enemy X Velocity
inc      $81,x                         ; 0x1dbb1 $DBA1 F6 81                   ; Current Animation Frame for Enemy
lda      #$40                          ; 0x1dbb3 $DBA3 A9 40                   ; A = 40; A = 5C
sta      $057E,x                       ; 0x1dbb5 $DBA5 9D 7E 05                ; initial Y velocity for Ache/Acheman
LDBA8                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1dbb8 $DBA8 20 B8 DE              ; Simple Horizontal Movement
dec      $057E,x                       ; 0x1dbbb $DBAB DE 7E 05                ; Enemy Y Velocity
bne      LDBB4                         ; 0x1dbbe $DBAE D0 04                   ;
lda      #$30                          ; 0x1dbc0 $DBB0 A9 30                   ; A = 30
sta      $AF,x                         ; 0x1dbc2 $DBB2 95 AF                   ; delay for Acheman in dragon form
LDBB4                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x1dbc4 $DBB4 20 C8 DE                ; Simple Vertical Movement
lda      $2A,x                         ; 0x1dbc7 $DBB7 B5 2A                   ; Enemy Y Position
cmp      #$30                          ; 0x1dbc9 $DBB9 C9 30                   ;
bcs      LDBC8                         ; 0x1dbcb $DBBB B0 0B                   ;
lda      #$30                          ; 0x1dbcd $DBBD A9 30                   ; A = 30
sta      $2A,x                         ; 0x1dbcf $DBBF 95 2A                   ; Enemy Y Position
lda      #$00                          ; 0x1dbd1 $DBC1 A9 00                   ; A = 00
sta      $057E,x                       ; 0x1dbd3 $DBC3 9D 7E 05                ; Enemy Y Velocity
sta      $81,x                         ; 0x1dbd6 $DBC6 95 81                   ; Current Animation Frame for Enemy
LDBC8                                                                          ;
jsr      LDE40                         ; 0x1dbd8 $DBC8 20 40 DE                ;
jmp      bank7_Link_Collision_Detection; 0x1dbdb $DBCB 4C C1 D6                ; Link Collision Detection
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Spawn_New_Projectile                                                     ;
ldy      #$05                          ; 0x1dbde $DBCE A0 05                   ; Y = 05
jsr      LDBFD                         ; 0x1dbe0 $DBD0 20 FD DB                ;
bcs      LDBF8                         ; 0x1dbe3 $DBD3 B0 23                   ; Carry Set = No Projectile Slot Available
lda      #$04                          ; 0x1dbe5 $DBD5 A9 04                   ; A = 04
sta      $87,y                         ; 0x1dbe7 $DBD7 99 87 00                ; Projectile Type (04 = Flame)
lda      $4E,x                         ; 0x1dbea $DBDA B5 4E                   ; Enemy X position (low byte)
sta      $54,y                         ; 0x1dbec $DBDC 99 54 00                ; Projectile X Position (low byte)
lda      $3C,x                         ; 0x1dbef $DBDF B5 3C                   ; Enemy X position (high byte)
sta      $42,y                         ; 0x1dbf1 $DBE1 99 42 00                ; Projectile X Position (high byte)
lda      $2A,x                         ; 0x1dbf4 $DBE4 B5 2A                   ; Enemy Y Position
sta      $30,y                         ; 0x1dbf6 $DBE6 99 30 00                ; Projectile Y Position
lda      $60,x                         ; 0x1dbf9 $DBE9 B5 60                   ; Enemy facing direction
sta      $66,y                         ; 0x1dbfb $DBEB 99 66 00                ; Projectile facing direction
tax                                    ; 0x1dbfe $DBEE AA                      ;
lda      LDB50,x                       ; 0x1dbff $DBEF BD 50 DB                ;
sta      $77,y                         ; 0x1dc02 $DBF2 99 77 00                ; Projectile X Velocity
ldx      $10                           ; 0x1dc05 $DBF5 A6 10                   ;; used as monster x register ;draw boss hp bar
clc                                    ; 0x1dc07 $DBF7 18                      ;
LDBF8                                                                          ;
rts                                    ; 0x1dc08 $DBF8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Generated_Rock_X_Velocity                                      ;
.byt    $10,$F0                        ; 0x1dc09 $DBF9 10 F0                   ;
; ---------------------------------------------------------------------------- ;
bank7_spawn_new_bubble_or_rock                                                 ;
ldy      #$03                          ; 0x1dc0b $DBFB A0 03                   ; Y = 03
LDBFD                                                                          ;
lda      $87,y                         ; 0x1dc0d $DBFD B9 87 00                ; Projectile Type
beq      bank7_Related_to_Desert_Rocks__Raising_Bubbles__projectiles__etc; 0x1dc10 $DC00 F0 05;
dey                                    ; 0x1dc12 $DC02 88                      ;
bpl      LDBFD                         ; 0x1dc13 $DC03 10 F8                   ;
sec                                    ; 0x1dc15 $DC05 38                      ;
rts                                    ; 0x1dc16 $DC06 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Desert_Rocks__Raising_Bubbles__projectiles__etc               ;
lda      #$01                          ; 0x1dc17 $DC07 A9 01                   ; A = 01
sta      $20,y                         ; 0x1dc19 $DC09 99 20 00                ;
sta      $66,y                         ; 0x1dc1c $DC0C 99 66 00                ;
lsr                                    ; 0x1dc1f $DC0F 4A                      ; A >> 00
sta      $0584,y                       ; 0x1dc20 $DC10 99 84 05                ;
clc                                    ; 0x1dc23 $DC13 18                      ;
rts                                    ; 0x1dc24 $DC14 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Raising_Bubbles                                          ;
inc      $AF,x                         ; 0x1dc25 $DC15 F6 AF                   ;; Various enemy state variables
lda      $AF,x                         ; 0x1dc27 $DC17 B5 AF                   ;; Various enemy state variables
and      #$1F                          ; 0x1dc29 $DC19 29 1F                   ; 1F = delay before next bubble appears
bne      LDC44                         ; 0x1dc2b $DC1B D0 27                   ;
jsr      bank7_spawn_new_bubble_or_rock; 0x1dc2d $DC1D 20 FB DB                ; spawn new bubble
bcs      LDC44                         ; 0x1dc30 $DC20 B0 22                   ; Carry Set = max number of bubbles reached
lda      #$02                          ; 0x1dc32 $DC22 A9 02                   ; 02 = bubble
sta      $87,y                         ; 0x1dc34 $DC24 99 87 00                ; projectile type
lda      $072C                         ; 0x1dc37 $DC27 AD 2C 07                ; Scrolling Offset Low Byte
adc      $051B,x                       ; 0x1dc3a $DC2A 7D 1B 05                ; Randomizer
and      #$F0                          ; 0x1dc3d $DC2D 29 F0                   ; keep bits xxxx ....
sta      $54,y                         ; 0x1dc3f $DC2F 99 54 00                ;
lda      $072A                         ; 0x1dc42 $DC32 AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1dc45 $DC35 69 00                   ;
sta      $42,y                         ; 0x1dc47 $DC37 99 42 00                ;
lda      #$E0                          ; 0x1dc4a $DC3A A9 E0                   ; A = E0
sta      $30,y                         ; 0x1dc4c $DC3C 99 30 00                ; Initial Y position
lda      #$E4                          ; 0x1dc4f $DC3F A9 E4                   ; A = E4
sta      $0584,y                       ; 0x1dc51 $DC41 99 84 05                ; Initial Y velocity
LDC44                                                                          ;
rts                                    ; 0x1dc54 $DC44 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Rocks_possible_X_Positions_                                    ;
.byt    $0C,$F4                        ; 0x1dc55 $DC45 0C F4                   ;
bank7_Table_for_Rocks_possible_Y_Positions_                                    ;
.byt    $03,$13,$F3,$E3,$D3,$C3,$03,$13; 0x1dc57 $DC47 03 13 F3 E3 D3 C3 03 13 ;
; ---------------------------------------------------------------------------- ;
bank7_Desert_Rocks_initialization_routine                                      ;
lda      $12                           ; 0x1dc5f $DC4F A5 12                   ;; Frame Counter (ascending)
and      #$1F                          ; 0x1dc61 $DC51 29 1F                   ; 1F = delay before next rock appears
bne      LDC90                         ; 0x1dc63 $DC53 D0 3B                   ;
jsr      bank7_spawn_new_bubble_or_rock; 0x1dc65 $DC55 20 FB DB                ; spawn new rock
bcs      LDC90                         ; 0x1dc68 $DC58 B0 36                   ;
lda      $051B,x                       ; 0x1dc6a $DC5A BD 1B 05                ; Randomizer
and      #$07                          ; 0x1dc6d $DC5D 29 07                   ; keep bits .... .xxx
tax                                    ; 0x1dc6f $DC5F AA                      ;
lda      $29                           ; 0x1dc70 $DC60 A5 29                   ; Link's Y Position
adc      bank7_Table_for_Rocks_possible_Y_Positions_,x; 0x1dc72 $DC62 7D 47 DC ;
sta      $30,y                         ; 0x1dc75 $DC65 99 30 00                ;
txa                                    ; 0x1dc78 $DC68 8A                      ;
and      #$01                          ; 0x1dc79 $DC69 29 01                   ; keep bits .... ...x
sta      $044C,y                       ; 0x1dc7b $DC6B 99 4C 04                ;
tax                                    ; 0x1dc7e $DC6E AA                      ;
lda      $072C                         ; 0x1dc7f $DC6F AD 2C 07                ;; Scrolling Offset Low Byte
adc      bank7_Table_for_Rocks_possible_X_Positions_,x; 0x1dc82 $DC72 7D 45 DC ;
sta      $54,y                         ; 0x1dc85 $DC75 99 54 00                ; Rock's X Position (low byte)
lda      $072A                         ; 0x1dc88 $DC78 AD 2A 07                ;;link Pagepos SideScroll		; Scrolling Offset High Byte
adc      #$00                          ; 0x1dc8b $DC7B 69 00                   ;
sta      $42,y                         ; 0x1dc8d $DC7D 99 42 00                ; Rock's X Position (high byte)
lda      bank7_Table_for_Generated_Rock_X_Velocity,x; 0x1dc90 $DC80 BD F9 DB   ;
sta      $77,y                         ; 0x1dc93 $DC83 99 77 00                ; Rock's X Velocity
inx                                    ; 0x1dc96 $DC86 E8                      ;
stx      $66,y                         ; 0x1dc97 $DC87 96 66                   ;
ldx      $10                           ; 0x1dc99 $DC89 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$01                          ; 0x1dc9b $DC8B A9 01                   ; A = 01
sta      $87,y                         ; 0x1dc9d $DC8D 99 87 00                ;
LDC90                                                                          ;
rts                                    ; 0x1dca0 $DC90 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Determine_Enemy_Facing_Direction_relative_to_Link                        ;
ldy      #$01                          ; 0x1dca1 $DC91 A0 01                   ; Y = 01
lda      $4D                           ; 0x1dca3 $DC93 A5 4D                   ; Link's Current X position (low byte)
adc      #$08                          ; 0x1dca5 $DC95 69 08                   ;
pha                                    ; 0x1dca7 $DC97 48                      ;
lda      $3B                           ; 0x1dca8 $DC98 A5 3B                   ; Link's Current X position (high byte)
adc      #$00                          ; 0x1dcaa $DC9A 69 00                   ;
sta      L000E                         ; 0x1dcac $DC9C 85 0E                   ;
pla                                    ; 0x1dcae $DC9E 68                      ;
sbc      $4E,x                         ; 0x1dcaf $DC9F F5 4E                   ; Enemy X position (low byte)
sta      $0F                           ; 0x1dcb1 $DCA1 85 0F                   ;
lda      L000E                         ; 0x1dcb3 $DCA3 A5 0E                   ;
sbc      $3C,x                         ; 0x1dcb5 $DCA5 F5 3C                   ; Enemy X position (high byte)
bpl      LDCAA                         ; 0x1dcb7 $DCA7 10 01                   ;
iny                                    ; 0x1dcb9 $DCA9 C8                      ;
LDCAA                                                                          ;
sty      $60,x                         ; 0x1dcba $DCAA 94 60                   ;facing dir
dey                                    ; 0x1dcbc $DCAC 88                      ;
rts                                    ; 0x1dcbd $DCAD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCAE                                                                          ;
lda      $0504,x                       ; 0x1dcbe $DCAE BD 04 05                ;; Timer for Enemy
bne      LDCC2                         ; 0x1dcc1 $DCB1 D0 0F                   ;
lda      #$20                          ; 0x1dcc3 $DCB3 A9 20                   ; A = 20
ldy      $0414,x                       ; 0x1dcc5 $DCB5 BC 14 04                ;
bpl      LDCBC                         ; 0x1dcc8 $DCB8 10 02                   ;
lda      #$00                          ; 0x1dcca $DCBA A9 00                   ; A = 00
LDCBC                                                                          ;
sta      $0504,x                       ; 0x1dccc $DCBC 9D 04 05                ;; Timer for Enemy
inc      $B6,x                         ; 0x1dccf $DCBF F6 B6                   ; Generated Enemy Slot
rts                                    ; 0x1dcd1 $DCC1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCC2                                                                          ;
ldy      $A1,x                         ; 0x1dcd2 $DCC2 B4 A1                   ; Enemy Code
lda      $6E1D,y                       ; 0x1dcd4 $DCC4 B9 1D 6E                ;
ldy      $0504,x                       ; 0x1dcd7 $DCC7 BC 04 05                ;; Timer for Enemy
cmp      #$FF                          ; 0x1dcda $DCCA C9 FF                   ;
beq      bank7_code29                  ; 0x1dcdc $DCCC F0 0D                   ;
jmp      LEEB2                         ; 0x1dcde $DCCE 4C B2 EE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table17                                                                  ;
.byt    $08,$F8                        ; 0x1dce1 $DCD1 08 F8                   ;
LDCD3                                                                          ;
.byt    $3F,$18,$04,$0F,$0F,$0F,$0F,$FF; 0x1dce3 $DCD3 3F 18 04 0F 0F 0F 0F FF ;
; ---------------------------------------------------------------------------- ;
bank7_code29                                                                   ;
cpy      #$68                          ; 0x1dceb $DCDB C0 68                   ;
bne      LDCED                         ; 0x1dced $DCDD D0 0E                   ;
lda      #$E8                          ; 0x1dcef $DCDF A9 E8                   ; A = E8
sta      $074B                         ; 0x1dcf1 $DCE1 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      #$0F                          ; 0x1dcf4 $DCE4 A9 0F                   ; A = 0F
sta      $0725                         ; 0x1dcf6 $DCE6 8D 25 07                ;; PPU Macro Selector	
lda      #$80                          ; 0x1dcf9 $DCE9 A9 80                   ; A = 80
sta      $EC                           ; 0x1dcfb $DCEB 85 EC                   ; Sound Effects Type 1
LDCED                                                                          ;
bcc      LDCF5                         ; 0x1dcfd $DCED 90 06                   ;
jsr      bank7_Display                 ; 0x1dcff $DCEF 20 11 EF                ;
jmp      LDD27                         ; 0x1dd02 $DCF2 4C 27 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCF5                                                                          ;
lda      $29                           ; 0x1dd05 $DCF5 A5 29                   ; Link's Y Position
sta      $2A                           ; 0x1dd07 $DCF7 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1dd09 $DCF9 20 91 DC; Determine Enemy Facing Direction
lda      $CC                           ; 0x1dd0c $DCFC A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
adc      bank7_table17,y               ; 0x1dd0e $DCFE 79 D1 DC                ;
sta      $CD                           ; 0x1dd11 $DD01 85 CD                   ;
lda      $80                           ; 0x1dd13 $DD03 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
sta      $81                           ; 0x1dd15 $DD05 85 81                   ;
lda      $9F                           ; 0x1dd17 $DD07 A5 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
sta      $A0                           ; 0x1dd19 $DD09 85 A0                   ;
lda      #$50                          ; 0x1dd1b $DD0B A9 50                   ; A = 50
sta      $91                           ; 0x1dd1d $DD0D 85 91                   ;
lda      #$00                          ; 0x1dd1f $DD0F A9 00                   ; A = 00
sta      $C9                           ; 0x1dd21 $DD11 85 C9                   ;
ldx      #$01                          ; 0x1dd23 $DD13 A2 01                   ; X = 01
stx      $11                           ; 0x1dd25 $DD15 86 11                   ;
inx                                    ; 0x1dd27 $DD17 E8                      ;
stx      $0753                         ; 0x1dd28 $DD18 8E 53 07                ;
jsr      LEC02                         ; 0x1dd2b $DD1B 20 02 EC                ;
ldx      $10                           ; 0x1dd2e $DD1E A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $4E,x                         ; 0x1dd30 $DD20 B5 4E                   ; Enemy X position (low byte)
sbc      $072C                         ; 0x1dd32 $DD22 ED 2C 07                ; Scrolling Offset Low Byte
sta      $CD                           ; 0x1dd35 $DD25 85 CD                   ;
LDD27                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1dd37 $DD27 20 30 CF; Region Code * 5 + World Code
cmp      #$0F                          ; 0x1dd3a $DD2A C9 0F                   ;
bne      LDD31                         ; 0x1dd3c $DD2C D0 03                   ;
jmp      L9764                         ; 0x1dd3e $DD2E 4C 64 97                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDD31                                                                          ;
jmp      L9A46                         ; 0x1dd41 $DD31 4C 46 9A                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDD34                                                                          ;
ldy      $A1,x                         ; 0x1dd44 $DD34 B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1dd46 $DD36 B9 41 6E                ;
and      #$40                          ; 0x1dd49 $DD39 29 40                   ; keep bits .x.. .... (Regenerate bit)
beq      bank7_remove_enemy_or_item    ; 0x1dd4b $DD3B F0 0A                   ;
LDD3D                                                                          ;
ldy      $BC,x                         ; 0x1dd4d $DD3D B4 BC                   ;; Generated Enemy Y Position ?
bmi      bank7_remove_enemy_or_item    ; 0x1dd4f $DD3F 30 06                   ;
lda      ($D6),y                       ; 0x1dd51 $DD41 B1 D6                   ;
and      #$7F                          ; 0x1dd53 $DD43 29 7F                   ; keep bits .xxx xxxx
sta      ($D6),y                       ; 0x1dd55 $DD45 91 D6                   ;
bank7_remove_enemy_or_item                                                     ;
lda      #$00                          ; 0x1dd57 $DD47 A9 00                   ; A = 00
sta      $B6,x                         ; 0x1dd59 $DD49 95 B6                   ; Generated Enemy Slot
rts                                    ; 0x1dd5b $DD4B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Enemy_Score_Tile_Mapping_Codes                                 ;
;F5 = Nothing                                                                  ;
;A0 = 10                                                                       ;
;A2 = 5                                                                        ;
;A4 = 2                                                                        ;
;A6 = 7                                                                        ;
;60 = 3                                                                        ;
;6C = 15                                                                       ;
;9C = 0                                                                        ;
;9E = 00                                                                       ;
.byt    $F5,$F5,$F5,$F5,$F5,$A4,$60,$A2; 0x1dd5c $DD4C F5 F5 F5 F5 F5 A4 60 A2 ;
.byt    $A6,$A0,$6C,$A4,$60,$A2,$A6,$A0; 0x1dd64 $DD54 A6 A0 6C A4 60 A2 A6 A0 ;
LDD5C                                                                          ;
.byt    $F5,$A4,$60,$A2,$A0,$9C,$9C,$9C; 0x1dd6c $DD5C F5 A4 60 A2 A0 9C 9C 9C ;
.byt    $9C,$9C,$9C,$9E,$9E,$9E,$9E,$9E; 0x1dd74 $DD64 9C 9C 9C 9E 9E 9E 9E 9E ;
; ---------------------------------------------------------------------------- ;
bank7_code30                                                                   ;
lda      $0504,x                       ; 0x1dd7c $DD6C BD 04 05                ;; Timer for Enemy
beq      bank7_monster_death_give_exp  ; 0x1dd7f $DD6F F0 7B                   ;
ldy      $91,x                         ; 0x1dd81 $DD71 B4 91                   ;
lda      $0414,x                       ; 0x1dd83 $DD73 BD 14 04                ;
and      #$0F                          ; 0x1dd86 $DD76 29 0F                   ; keep bits .... xxxx
tax                                    ; 0x1dd88 $DD78 AA                      ;
lda      bank7_Table_for_Enemy_Score_Tile_Mapping_Codes,x; 0x1dd89 $DD79 BD 4C DD;
sta      $0201,y                       ; 0x1dd8c $DD7C 99 01 02                ;
lda      LDD5C,x                       ; 0x1dd8f $DD7F BD 5C DD                ;
ldx      $10                           ; 0x1dd92 $DD82 A6 10                   ;; used as monster x register ;draw boss hp bar
sta      $0205,y                       ; 0x1dd94 $DD84 99 05 02                ;
lda      #$01                          ; 0x1dd97 $DD87 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1dd99 $DD89 99 02 02                ;
sta      $0206,y                       ; 0x1dd9c $DD8C 99 06 02                ;
lda      $12                           ; 0x1dd9f $DD8F A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1dda1 $DD91 4A                      ;
bcc      LDD96                         ; 0x1dda2 $DD92 90 02                   ;
dec      $2A,x                         ; 0x1dda4 $DD94 D6 2A                   ; Enemy Y Position
LDD96                                                                          ;
lda      $2A,x                         ; 0x1dda6 $DD96 B5 2A                   ; Enemy Y Position
sta      $0200,y                       ; 0x1dda8 $DD98 99 00 02                ;
sta      $0204,y                       ; 0x1ddab $DD9B 99 04 02                ;
lda      $CD                           ; 0x1ddae $DD9E A5 CD                   ;
sta      $0203,y                       ; 0x1ddb0 $DDA0 99 03 02                ;
clc                                    ; 0x1ddb3 $DDA3 18                      ;
adc      #$08                          ; 0x1ddb4 $DDA4 69 08                   ;
sta      $0207,y                       ; 0x1ddb6 $DDA6 99 07 02                ;
lda      $C9                           ; 0x1ddb9 $DDA9 A5 C9                   ;
pha                                    ; 0x1ddbb $DDAB 48                      ;
and      #$08                          ; 0x1ddbc $DDAC 29 08                   ; keep bits .... x...
beq      LDDB5                         ; 0x1ddbe $DDAE F0 05                   ;
lda      #$F8                          ; 0x1ddc0 $DDB0 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1ddc2 $DDB2 99 00 02                ;
LDDB5                                                                          ;
pla                                    ; 0x1ddc5 $DDB5 68                      ;
and      #$04                          ; 0x1ddc6 $DDB6 29 04                   ; keep bits .... .x..
beq      LDDBF                         ; 0x1ddc8 $DDB8 F0 05                   ;
lda      #$F8                          ; 0x1ddca $DDBA A9 F8                   ; A = F8
sta      $0204,y                       ; 0x1ddcc $DDBC 99 04 02                ;
LDDBF                                                                          ;
rts                                    ; 0x1ddcf $DDBF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Experience_Table_Low_Byte                                                ;
.byt    $00,$02,$03,$05,$0A,$14,$1E,$32; 0x1ddd0 $DDC0 00 02 03 05 0A 14 1E 32 ;
.byt    $46,$64,$96,$C8,$2D,$F4,$BC,$E8; 0x1ddd8 $DDC8 46 64 96 C8 2D F4 BC E8 ;
bank7_Japanese_version_score_table                                             ;
.byt    $00,$01,$02,$05,$0A,$14,$32,$64; 0x1dde0 $DDD0 00 01 02 05 0A 14 32 64 ;
.byt    $C8,$F4,$E8,$D0                ; 0x1dde8 $DDD8 C8 F4 E8 D0             ;
bank7_Experience_Table_High_Byte                                               ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x1ddec $DDDC 00 00 00 00 00 00 00 00 ;
.byt    $00,$00,$00,$00,$01,$01,$02,$03; 0x1ddf4 $DDE4 00 00 00 00 01 01 02 03 ;
; ---------------------------------------------------------------------------- ;
bank7_monster_death_give_exp                                                   ;
lda      $0414,x                       ; 0x1ddfc $DDEC BD 14 04                ;
bmi      LDE20                         ; 0x1ddff $DDEF 30 2F                   ;
tay                                    ; 0x1de01 $DDF1 A8                      ;
lda      bank7_Experience_Table_Low_Byte,y; 0x1de02 $DDF2 B9 C0 DD             ;
clc                                    ; 0x1de05 $DDF5 18                      ;
adc      $0756                         ; 0x1de06 $DDF6 6D 56 07                ;; Experience to be added (low byte)
sta      $0756                         ; 0x1de09 $DDF9 8D 56 07                ; Experience to be added (low byte)
lda      bank7_Experience_Table_High_Byte,y; 0x1de0c $DDFC B9 DC DD            ;
adc      $0755                         ; 0x1de0f $DDFF 6D 55 07                ;; Experience to be added (high byte)
sta      $0755                         ; 0x1de12 $DE02 8D 55 07                ; Experience to be added (high byte)
ldy      $A1,x                         ; 0x1de15 $DE05 B4 A1                   ; Enemy Code
lda      $6E1D,y                       ; 0x1de17 $DE07 B9 1D 6E                ;
cmp      #$FF                          ; 0x1de1a $DE0A C9 FF                   ;
bne      LDE1D                         ; 0x1de1c $DE0C D0 0F                   ;
;boss (now dead) turns into a key ?                                            ;
lda      #$80                          ; 0x1de1e $DE0E A9 80                   ; A = 80
sta      $4E,x                         ; 0x1de20 $DE10 95 4E                   ; Enemy X position (low byte)
lsr                                    ; 0x1de22 $DE12 4A                      ;
sta      $2A,x                         ; 0x1de23 $DE13 95 2A                   ; Enemy Y Position
jsr      LDE20                         ; 0x1de25 $DE15 20 20 DE                ;
lda      #$08                          ; 0x1de28 $DE18 A9 08                   ; A = 08					;key ID
sta      $AF,x                         ; 0x1de2a $DE1A 95 AF                   ; Various enemy state variables			;store as item ID
rts                                    ; 0x1de2c $DE1C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE1D                                                                          ;
jmp      LDD34                         ; 0x1de2d $DE1D 4C 34 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE20                                                                          ;
jsr      LDD34                         ; 0x1de30 $DE20 20 34 DD                ;
lda      #$02                          ; 0x1de33 $DE23 A9 02                   ; sound of dropped item
sta      $EF                           ; 0x1de35 $DE25 85 EF                   ;; Sound Effects Type 4; Sound Effects Type 4
lda      $048E,x                       ; 0x1de37 $DE27 BD 8E 04                ; (set to any item ID, anything can be dropped)
sta      $AF,x                         ; 0x1de3a $DE2A 95 AF                   ;; Various enemy state variables
lda      #$FF                          ; 0x1de3c $DE2C A9 FF                   ; A = FF
sta      $BC,x                         ; 0x1de3e $DE2E 95 BC                   ;; Generated Enemy Y Position ?
lda      #$01                          ; 0x1de40 $DE30 A9 01                   ; Code for Red Jar (maybe Blue too)
sta      $B6,x                         ; 0x1de42 $DE32 95 B6                   ;; Generated Enemy Slot
sta      $A1,x                         ; 0x1de44 $DE34 95 A1                   ; Takes the defeated enemy's slot
lsr                                    ; 0x1de46 $DE36 4A                      ;
sta      $057E,x                       ; 0x1de47 $DE37 9D 7E 05                ; Enemy Y Velocity
sta      $C2,x                         ; 0x1de4a $DE3A 95 C2                   ; Enemy Current HP
rts                                    ; 0x1de4c $DE3C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE3D                                                                          ;
jsr      LEA32                         ; 0x1de4d $DE3D 20 32 EA                ;
LDE40                                                                          ;
ldy      #$01                          ; 0x1de50 $DE40 A0 01                   ; Y = 01
inx                                    ; 0x1de52 $DE42 E8                      ;
jsr      bank7_code51                  ; 0x1de53 $DE43 20 7D F2                ;
ldx      $10                           ; 0x1de56 $DE46 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $1A,x                         ; 0x1de58 $DE48 B5 1A                   ;
cmp      #$02                          ; 0x1de5a $DE4A C9 02                   ;
bcc      LDE51                         ; 0x1de5c $DE4C 90 03                   ;
jmp      LDD3D                         ; 0x1de5e $DE4E 4C 3D DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE51                                                                          ;
jsr      bank7_Display                 ; 0x1de61 $DE51 20 11 EF                ; Display
LDE54                                                                          ;
lda      $C9                           ; 0x1de64 $DE54 A5 C9                   ;
and      #$FC                          ; 0x1de66 $DE56 29 FC                   ; keep bits xxxx xx..
beq      LDE63                         ; 0x1de68 $DE58 F0 09                   ;
lda      $A8,x                         ; 0x1de6a $DE5A B5 A8                   ; Enemy State
and      #$0F                          ; 0x1de6c $DE5C 29 0F                   ; keep bits .... xxxx
sta      $A8,x                         ; 0x1de6e $DE5E 95 A8                   ; Enemy State
jmp      LDE6C                         ; 0x1de70 $DE60 4C 6C DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE63                                                                          ;
jsr      LE48B                         ; 0x1de73 $DE63 20 8B E4                ;
jsr      bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least; 0x1de76 $DE66 20 77 E6; Sword Hit Detection
jmp      LE4D9                         ; 0x1de79 $DE69 4C D9 E4                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE6C                                                                          ;
lda      $A1,x                         ; 0x1de7c $DE6C B5 A1                   ; Enemy Code
cmp      #$13                          ; 0x1de7e $DE6E C9 13                   ; 13 = Elevator
beq      LDEB7                         ; 0x1de80 $DE70 F0 45                   ;
cmp      #$03                          ; 0x1de82 $DE72 C9 03                   ; 03 = Myu
bcc      LDEB7                         ; 0x1de84 $DE74 90 41                   ;
ldy      #$01                          ; 0x1de86 $DE76 A0 01                   ; Y = 01
sty      $0F                           ; 0x1de88 $DE78 84 0F                   ;
lda      $072C                         ; 0x1de8a $DE7A AD 2C 07                ; Scrolling Offset Low Byte
sec                                    ; 0x1de8d $DE7D 38                      ;
sbc      #$60                          ; 0x1de8e $DE7E E9 60                   ;
sta      $01                           ; 0x1de90 $DE80 85 01                   ;
lda      $072A                         ; 0x1de92 $DE82 AD 2A 07                ; Scrolling Offset High Byte
sbc      $0F                           ; 0x1de95 $DE85 E5 0F                   ;
sta      L0000                         ; 0x1de97 $DE87 85 00                   ;
inc      L0000                         ; 0x1de99 $DE89 E6 00                   ;
lda      $072D                         ; 0x1de9b $DE8B AD 2D 07                ;
clc                                    ; 0x1de9e $DE8E 18                      ;
adc      #$60                          ; 0x1de9f $DE8F 69 60                   ;
sta      $03                           ; 0x1dea1 $DE91 85 03                   ;
lda      $072B                         ; 0x1dea3 $DE93 AD 2B 07                ;
adc      $0F                           ; 0x1dea6 $DE96 65 0F                   ;
sta      L0002                         ; 0x1dea8 $DE98 85 02                   ;
inc      L0002                         ; 0x1deaa $DE9A E6 02                   ;
lda      $4E,x                         ; 0x1deac $DE9C B5 4E                   ; Enemy X position (low byte)
cmp      $01                           ; 0x1deae $DE9E C5 01                   ;
ldy      $3C,x                         ; 0x1deb0 $DEA0 B4 3C                   ; Enemy X position (high byte)
iny                                    ; 0x1deb2 $DEA2 C8                      ;
tya                                    ; 0x1deb3 $DEA3 98                      ;
sbc      L0000                         ; 0x1deb4 $DEA4 E5 00                   ;
bmi      LDEB4                         ; 0x1deb6 $DEA6 30 0C                   ;
lda      $4E,x                         ; 0x1deb8 $DEA8 B5 4E                   ; Enemy X position (low byte)
cmp      $03                           ; 0x1deba $DEAA C5 03                   ;
ldy      $3C,x                         ; 0x1debc $DEAC B4 3C                   ; Enemy X position (high byte)
iny                                    ; 0x1debe $DEAE C8                      ;
tya                                    ; 0x1debf $DEAF 98                      ;
sbc      L0002                         ; 0x1dec0 $DEB0 E5 02                   ;
bmi      LDEB7                         ; 0x1dec2 $DEB2 30 03                   ;
LDEB4                                                                          ;
jsr      LDD3D                         ; 0x1dec4 $DEB4 20 3D DD                ;
LDEB7                                                                          ;
rts                                    ; 0x1dec7 $DEB7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Simple_Horizontal_Movement                                               ;
inx                                    ; 0x1dec8 $DEB8 E8                      ;
jsr      bank7_XY_Movements_Routine    ; 0x1dec9 $DEB9 20 CE D1                ;
dex                                    ; 0x1decc $DEBC CA                      ;
rts                                    ; 0x1decd $DEBD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Gravity                                                                  ;
jsr      bank7_Simple_Vertical_Movement; 0x1dece $DEBE 20 C8 DE                ; Simple Vertical Movement
inc      $057E,x                       ; 0x1ded1 $DEC1 FE 7E 05                ; Enemy Y Velocity
inc      $057E,x                       ; 0x1ded4 $DEC4 FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
rts                                    ; 0x1ded7 $DEC7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Simple_Vertical_Movement                                                 ;
inx                                    ; 0x1ded8 $DEC8 E8                      ;
jsr      LD20A                         ; 0x1ded9 $DEC9 20 0A D2                ;
dex                                    ; 0x1dedc $DECC CA                      ;
rts                                    ; 0x1dedd $DECD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
inx                                    ; 0x1dede $DECE E8                      ;
jsr      bank7_applyGravityMotion      ; 0x1dedf $DECF 20 9B D1                ;
dex                                    ; 0x1dee2 $DED2 CA                      ;
rts                                    ; 0x1dee3 $DED3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
txa                                    ; 0x1dee4 $DED4 8A                      ;
clc                                    ; 0x1dee5 $DED5 18                      ;
adc      #$07                          ; 0x1dee6 $DED6 69 07                   ;
tax                                    ; 0x1dee8 $DED8 AA                      ;
jsr      bank7_XY_Movements_Routine    ; 0x1dee9 $DED9 20 CE D1                ;
jsr      LD20A                         ; 0x1deec $DEDC 20 0A D2                ;
ldy      #$02                          ; 0x1deef $DEDF A0 02                   ; Y = 02
jsr      bank7_code51                  ; 0x1def1 $DEE1 20 7D F2                ;
ldx      $10                           ; 0x1def4 $DEE4 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1def6 $DEE6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_tile_and_move_right_1_column                                         ;
sta      (L000E),y                     ; 0x1def7 $DEE7 91 0E                   ;
iny                                    ; 0x1def9 $DEE9 C8                      ;
tya                                    ; 0x1defa $DEEA 98                      ;
and      #$0F                          ; 0x1defb $DEEB 29 0F                   ; keep bits .... xxxx
bne      LDF00                         ; 0x1defd $DEED D0 11                   ;
lda      L000E                         ; 0x1deff $DEEF A5 0E                   ;
clc                                    ; 0x1df01 $DEF1 18                      ;
adc      #$D0                          ; 0x1df02 $DEF2 69 D0                   ;
sta      L000E                         ; 0x1df04 $DEF4 85 0E                   ;
bcc      LDEFA                         ; 0x1df06 $DEF6 90 02                   ;
inc      $0F                           ; 0x1df08 $DEF8 E6 0F                   ;
LDEFA                                                                          ;
lda      $0730                         ; 0x1df0a $DEFA AD 30 07                ;; Position of Object Placement
and      #$F0                          ; 0x1df0d $DEFD 29 F0                   ; keep bits xxxx ....
tay                                    ; 0x1df0f $DEFF A8                      ;
LDF00                                                                          ;
rts                                    ; 0x1df10 $DF00 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $75                           ; 0x1df11 $DF01 A5 75                   ; X position in OW
jsr      LDF3F                         ; 0x1df13 $DF03 20 3F DF                ;
sta      L0000                         ; 0x1df16 $DF06 85 00                   ;
tya                                    ; 0x1df18 $DF08 98                      ;
asl                                    ; 0x1df19 $DF09 0A                      ;
asl                                    ; 0x1df1a $DF0A 0A                      ;
asl                                    ; 0x1df1b $DF0B 0A                      ;
asl                                    ; 0x1df1c $DF0C 0A                      ;
ora      L0000                         ; 0x1df1d $DF0D 05 00                   ;
sta      $0A                           ; 0x1df1f $DF0F 85 0A                   ;
sta      $77                           ; 0x1df21 $DF11 85 77                   ;;projectile speed	77,78,79,7A,7B,7C	77,Y
lda      #$08                          ; 0x1df23 $DF13 A9 08                   ; A = 08
sta      L0000                         ; 0x1df25 $DF15 85 00                   ;
asl                                    ; 0x1df27 $DF17 0A                      ;
sta      $7D                           ; 0x1df28 $DF18 85 7D                   ;;number of pixels to move? automove? on overworld, only partially, causes bug
lda      $0A                           ; 0x1df2a $DF1A A5 0A                   ;
asl                                    ; 0x1df2c $DF1C 0A                      ;
asl                                    ; 0x1df2d $DF1D 0A                      ;
asl                                    ; 0x1df2e $DF1E 0A                      ;
asl                                    ; 0x1df2f $DF1F 0A                      ;
asl                                    ; 0x1df30 $DF20 0A                      ;
rol      L0000                         ; 0x1df31 $DF21 26 00                   ;
asl                                    ; 0x1df33 $DF23 0A                      ;
rol      L0000                         ; 0x1df34 $DF24 26 00                   ;
sta      $01                           ; 0x1df36 $DF26 85 01                   ;
lda      $76                           ; 0x1df38 $DF28 A5 76                   ; X position on map (Link)
and      #$0F                          ; 0x1df3a $DF2A 29 0F                   ; keep bits .... xxxx
asl                                    ; 0x1df3c $DF2C 0A                      ;
adc      $01                           ; 0x1df3d $DF2D 65 01                   ;
sta      $7A                           ; 0x1df3f $DF2F 85 7A                   ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
lda      $0A                           ; 0x1df41 $DF31 A5 0A                   ;
and      #$10                          ; 0x1df43 $DF33 29 10                   ; keep bits ...x ....
lsr                                    ; 0x1df45 $DF35 4A                      ;
ora      L0000                         ; 0x1df46 $DF36 05 00                   ;
sta      $79                           ; 0x1df48 $DF38 85 79                   ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
lda      #$00                          ; 0x1df4a $DF3A A9 00                   ; A = 00
sta      $7E                           ; 0x1df4c $DF3C 85 7E                   ;
rts                                    ; 0x1df4e $DF3E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDF3F                                                                          ;
ldy      #$FF                          ; 0x1df4f $DF3F A0 FF                   ; Y = FF
LDF41                                                                          ;
iny                                    ; 0x1df51 $DF41 C8                      ;
sec                                    ; 0x1df52 $DF42 38                      ;
sbc      #$0F                          ; 0x1df53 $DF43 E9 0F                   ;
bcs      LDF41                         ; 0x1df55 $DF45 B0 FA                   ;
adc      #$0F                          ; 0x1df57 $DF47 69 0F                   ;
rts                                    ; 0x1df59 $DF49 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_tile_and_go_down_1_row_in_2x2_tiles_units                            ;
sta      (L000E),y                     ; 0x1df5a $DF4A 91 0E                   ;
LDF4C                                                                          ;
lda      $0730                         ; 0x1df5c $DF4C AD 30 07                ; Position of Object Placement
clc                                    ; 0x1df5f $DF4F 18                      ;
adc      #$10                          ; 0x1df60 $DF50 69 10                   ; Go down 1 row
sta      $0730                         ; 0x1df62 $DF52 8D 30 07                ;; Position of Object Placement
rts                                    ; 0x1df65 $DF55 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDF56                                                                          ;
sta      (L000E),y                     ; 0x1df66 $DF56 91 0E                   ;
LDF58                                                                          ;
tya                                    ; 0x1df68 $DF58 98                      ;
clc                                    ; 0x1df69 $DF59 18                      ;
adc      #$10                          ; 0x1df6a $DF5A 69 10                   ;
tay                                    ; 0x1df6c $DF5C A8                      ;
rts                                    ; 0x1df6d $DF5D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_OW_tiles_that_transform_into_another_type                      ;
;0E -> 04	Rock   -> Desert                                                     ;
;0F -> 04	Spider -> Desert                                                     ;
;04 -> 02	Desert -> Palace                                                     ;
;06 -> 00	Forest -> Town                                                       ;
.byt    $0E,$0F,$04,$06                ; 0x1df6e $DF5E 0E 0F 04 06             ;
bank7_Transform_into_this                                                      ;
.byt    $04,$04,$02,$00                ; 0x1df72 $DF62 04 04 02 00             ;
bank7_table19                                                                  ;
.byt    $35,$31                        ; 0x1df76 $DF66 35 31                   ;
LDF68                                                                          ;
.byt    $E6,$D1                        ; 0x1df78 $DF68 E6 D1                   ;
bank7_PPU_Macros_for_Hidden_Palace                                             ;
.byt    $23,$1A,$02,$60,$62,$23,$3A,$02; 0x1df7a $DF6A 23 1A 02 60 62 23 3A 02 ;
.byt    $61,$63,$23,$F6,$01,$FB,$FF    ; 0x1df82 $DF72 61 63 23 F6 01 FB FF    ;
; ---------------------------------------------------------------------------- ;
bank7_forest_chop_with_hammer                                                  ;
jsr      L83CF                         ; 0x1df89 $DF79 20 CF 83                ;
LDF7C                                                                          ;
lda      (L000E),y                     ; 0x1df8c $DF7C B1 0E                   ;
cmp      bank7_Table_for_OW_tiles_that_transform_into_another_type,x; 0x1df8e $DF7E DD 5E DF;
beq      bank7_Related_to_Hidden_Town_revealed; 0x1df91 $DF81 F0 08            ;
dex                                    ; 0x1df93 $DF83 CA                      ;
bpl      LDF7C                         ; 0x1df94 $DF84 10 F6                   ;
inx                                    ; 0x1df96 $DF86 E8                      ;
stx      $0725                         ; 0x1df97 $DF87 8E 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1df9a $DF8A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Hidden_Town_revealed                                          ;
txa                                    ; 0x1df9b $DF8B 8A                      ;
beq      LDFBD                         ; 0x1df9c $DF8C F0 2F                   ;
lda      $0706                         ; 0x1df9e $DF8E AD 06 07                ; Current Region
cmp      #$02                          ; 0x1dfa1 $DF91 C9 02                   ; Region 02 = East Hyrule
bne      LDFD1                         ; 0x1dfa3 $DF93 D0 3C                   ; if NOT 02, return
cpx      #$03                          ; 0x1dfa5 $DF95 E0 03                   ;
bne      LDFB9                         ; 0x1dfa7 $DF97 D0 20                   ;
lda      $04                           ; 0x1dfa9 $DF99 A5 04                   ; Y Units Offset in Overworld
cmp      #$33                          ; 0x1dfab $DF9B C9 33                   ; Y Coordinate of Hidden Kasuto ???
bne      LDFD1                         ; 0x1dfad $DF9D D0 32                   ;
lda      L0000                         ; 0x1dfaf $DF9F A5 00                   ;
cmp      #$3E                          ; 0x1dfb1 $DFA1 C9 3E                   ; X Coordinate of Hidden Kasuto ???
bne      LDFD1                         ; 0x1dfb3 $DFA3 D0 2C                   ;
lda      #$5C                          ; 0x1dfb5 $DFA5 A9 5C                   ; A = 5C
sta      $0305                         ; 0x1dfb7 $DFA7 8D 05 03                ;; Empty Row Space Character
lda      #$5D                          ; 0x1dfba $DFAA A9 5D                   ; A = 5D
sta      $0306                         ; 0x1dfbc $DFAC 8D 06 03                ;; Letter Written to Screen
lda      #$5E                          ; 0x1dfbf $DFAF A9 5E                   ; A = 5E
sta      $030A                         ; 0x1dfc1 $DFB1 8D 0A 03                ;
lda      #$5F                          ; 0x1dfc4 $DFB4 A9 5F                   ; A = 5F
sta      $030B                         ; 0x1dfc6 $DFB6 8D 0B 03                ;
LDFB9                                                                          ;
lda      #$10                          ; 0x1dfc9 $DFB9 A9 10                   ; A = 10
sta      $EB                           ; 0x1dfcb $DFBB 85 EB                   ; EB = Music
LDFBD                                                                          ;
lda      bank7_Transform_into_this,x   ; 0x1dfcd $DFBD BD 62 DF                ;
sta      (L000E),y                     ; 0x1dfd0 $DFC0 91 0E                   ;
cpx      #$02                          ; 0x1dfd2 $DFC2 E0 02                   ;
bcc      LDFD1                         ; 0x1dfd4 $DFC4 90 0B                   ;
dex                                    ; 0x1dfd6 $DFC6 CA                      ;
dex                                    ; 0x1dfd7 $DFC7 CA                      ;
ldy      bank7_table19,x               ; 0x1dfd8 $DFC8 BC 66 DF                ;
lda      LDF68,x                       ; 0x1dfdb $DFCB BD 68 DF                ;
sta      $6A00,y                       ; 0x1dfde $DFCE 99 00 6A                ;
LDFD1                                                                          ;
rts                                    ; 0x1dfe1 $DFD1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfe2 $DFD2 20 C9 FF                ; Load Bank $0769
jsr      bank7_forest_chop_with_hammer ; 0x1dfe5 $DFD5 20 79 DF                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1dfe8 $DFD8 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfeb $DFDB 20 C9 FF                ; Load Bank $0769
jsr      bank7_Set_0E_0F_pointer_according_to_Object_Group; 0x1dfee $DFDE 20 E4 DF;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1dff1 $DFE1 4C C5 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_0E_0F_pointer_according_to_Object_Group                              ;
;Y is the index, already multiplied by 2                                       ;
lda      bank3_Pointer_table_for_Objects_Tile_Mappings,y; 0x1dff4 $DFE4 B9 00 85;
sta      L000E                         ; 0x1dff7 $DFE7 85 0E                   ;
lda      bank3_Pointer_table_for_Objects_Tile_Mappings+$01,y; 0x1dff9 $DFE9 B9 01 85;
sta      $0F                           ; 0x1dffc $DFEC 85 0F                   ;
rts                                    ; 0x1dffe $DFEE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Overworld_Boundaries__Mountain_or_Water_Bank_1                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfff $DFEF 20 C9 FF                ; Load Bank $0769
jsr      L83CF                         ; 0x1e002 $DFF2 20 CF 83                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e005 $DFF5 4C C5 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Check_for_Hidden_Palace_spot_Bank_1                                      ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e008 $DFF8 20 C9 FF                ; Load Bank $0769
jsr      L8368                         ; 0x1e00b $DFFB 20 68 83                ;
LE000     = * + $0002                                                          ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e00e $DFFE 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e011 $E001 20 C9 FF                ; Load Bank $0769
lda      (L000E),y                     ; 0x1e014 $E004 B1 0E                   ;
and      #$0F                          ; 0x1e016 $E006 29 0F                   ; keep bits .... xxxx
sta      L0002                         ; 0x1e018 $E008 85 02                   ;
lda      (L000E),y                     ; 0x1e01a $E00A B1 0E                   ;
lsr                                    ; 0x1e01c $E00C 4A                      ;
lsr                                    ; 0x1e01d $E00D 4A                      ;
lsr                                    ; 0x1e01e $E00E 4A                      ;
lsr                                    ; 0x1e01f $E00F 4A                      ;
sec                                    ; 0x1e020 $E010 38                      ;
adc      $03                           ; 0x1e021 $E011 65 03                   ;
sta      $03                           ; 0x1e023 $E013 85 03                   ;
pha                                    ; 0x1e025 $E015 48                      ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1e026 $E016 20 C5 FF                ; Load Bank 0
pla                                    ; 0x1e029 $E019 68                      ;
rts                                    ; 0x1e02a $E01A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Turn_Palaces_into_Stone_Bank_1                                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e02b $E01B 20 C9 FF                ; Load Bank $0769
jsr      L879B                         ; 0x1e02e $E01E 20 9B 87                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e031 $E021 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e034 $E024 20 C9 FF                ; Load Bank $0769
jsr      L83A1                         ; 0x1e037 $E027 20 A1 83                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e03a $E02A 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table20                                                                  ;
.byt    $FF,$FF,$FF                    ; 0x1e03d $E02D FF FF FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code33                                                                   ;
lda      #$AF                          ; 0x1e040 $E030 A9 AF                   ; A = AF
bank7_Links_initial_Y_Position_when_entering_an_area__ground_center_or_side    ;
sta      $29                           ; 0x1e042 $E032 85 29                   ; Link's Y position
ldy      #$00                          ; 0x1e044 $E034 A0 00                   ; Y = 00
ldx      #$00                          ; 0x1e046 $E036 A2 00                   ; X = 00
jsr      bank7_code51                  ; 0x1e048 $E038 20 7D F2                ;
jsr      bank7_code34                  ; 0x1e04b $E03B 20 70 E0                ;
lda      $A7                           ; 0x1e04e $E03E A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
beq      LE04B                         ; 0x1e050 $E040 F0 09                   ;
lda      $29                           ; 0x1e052 $E042 A5 29                   ; Link's Y Position
sec                                    ; 0x1e054 $E044 38                      ;
sbc      #$10                          ; 0x1e055 $E045 E9 10                   ;
cmp      #$10                          ; 0x1e057 $E047 C9 10                   ;
bcs      bank7_Links_initial_Y_Position_when_entering_an_area__ground_center_or_side; 0x1e059 $E049 B0 E7;
LE04B                                                                          ;
inc      $29                           ; 0x1e05b $E04B E6 29                   ; Link's Y position
rts                                    ; 0x1e05d $E04D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table21                                                                  ;
.byt    $01,$02,$01,$02,$04,$04,$08,$08; 0x1e05e $E04E 01 02 01 02 04 04 08 08 ;
.byt    $01,$02,$01,$02,$04,$04,$08,$08; 0x1e066 $E056 01 02 01 02 04 04 08 08 ;
.byt    $01,$02,$01,$02,$04,$08,$01,$02; 0x1e06e $E05E 01 02 01 02 04 08 01 02 ;
.byt    $01,$02,$04,$08,$01,$02,$01,$02; 0x1e076 $E066 01 02 04 08 01 02 01 02 ;
.byt    $04,$08                        ; 0x1e07e $E06E 04 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_code34                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e080 $E070 20 C9 FF                ;
jsr      bank7_Related_to_Link_falling_in_Lava_Water; 0x1e083 $E073 20 79 E0   ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e086 $E076 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Link_falling_in_Lava_Water                                    ;
ldx      #$00                          ; 0x1e089 $E079 A2 00                   ; X = 00
stx      $A7                           ; 0x1e08b $E07B 86 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$07                          ; 0x1e08d $E07D A9 07                   ; A = 07
clc                                    ; 0x1e08f $E07F 18                      ;
adc      $13                           ; 0x1e090 $E080 65 13                   ; Fairy state (0 = Not in Fairy state)
tay                                    ; 0x1e092 $E082 A8                      ;
jsr      LE1B8                         ; 0x1e093 $E083 20 B8 E1                ;
lda      $03                           ; 0x1e096 $E086 A5 03                   ;
sta      $0D                           ; 0x1e098 $E088 85 0D                   ;
lda      #$05                          ; 0x1e09a $E08A A9 05                   ; A = 05
clc                                    ; 0x1e09c $E08C 18                      ;
adc      $13                           ; 0x1e09d $E08D 65 13                   ; Fairy state (0 = Not in Fairy state)
tay                                    ; 0x1e09f $E08F A8                      ;
jsr      LE1B8                         ; 0x1e0a0 $E090 20 B8 E1                ;
ldy      #$1D                          ; 0x1e0a3 $E093 A0 1D                   ; Y = 1D
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e0a5 $E095 20 E8 EA;
lda      #$00                          ; 0x1e0a8 $E098 A9 00                   ; A = 00
sta      $0752                         ; 0x1e0aa $E09A 8D 52 07                ;
lda      $03                           ; 0x1e0ad $E09D A5 03                   ;tile index stepped on?
cmp      L8520                         ; 0x1e0af $E09F CD 20 85                ;
bne      LE0B0                         ; 0x1e0b2 $E0A2 D0 0C                   ;
bank7_Link_touched_Lava_Water                                                  ;
lda      #$01                          ; 0x1e0b4 $E0A4 A9 01                   ; A = 01
sta      $E9                           ; 0x1e0b6 $E0A6 85 E9                   ;
lda      #$10                          ; 0x1e0b8 $E0A8 A9 10                   ; A = 10
sta      $050C                         ; 0x1e0ba $E0AA 8D 0C 05                ; Timer for Link being in injured state
inc      $B5                           ; 0x1e0bd $E0AD E6 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
rts                                    ; 0x1e0bf $E0AF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0B0                                                                          ;
cmp      L8521                         ; 0x1e0c0 $E0B0 CD 21 85                ;
beq      LE0BA                         ; 0x1e0c3 $E0B3 F0 05                   ;
cmp      L8522                         ; 0x1e0c5 $E0B5 CD 22 85                ;
bne      LE0C5                         ; 0x1e0c8 $E0B8 D0 0B                   ;
;at this point:                                                                ;
;$2 is the offset for below foot(10*Y position), add to $E or $F               ;
;$3 is tile below links foot                                                   ;
;$E, $F are the vertical line which contains the tiles link is at              ;
LE0BA                                                                          ;
ldy      $29                           ; 0x1e0ca $E0BA A4 29                   ; Link's Y Position
cpy      #$A5                          ; 0x1e0cc $E0BC C0 A5                   ;
bcc      LE0C5                         ; 0x1e0ce $E0BE 90 05                   ;
ldy      #$20                          ; 0x1e0d0 $E0C0 A0 20                   ; Y = 20
sty      $0752                         ; 0x1e0d2 $E0C2 8C 52 07                ;
LE0C5                                                                          ;
cmp      L851F                         ; 0x1e0d5 $E0C5 CD 1F 85                ;breakable step on break-able step-on
beq      LE0FC                         ; 0x1e0d8 $E0C8 F0 32                   ;
cmp      bank3_table3                  ; 0x1e0da $E0CA CD 1A 85                ;
beq      LE0E6                         ; 0x1e0dd $E0CD F0 17                   ;
cmp      L851C                         ; 0x1e0df $E0CF CD 1C 85                ;
beq      LE0E6                         ; 0x1e0e2 $E0D2 F0 12                   ;
cmp      L851B                         ; 0x1e0e4 $E0D4 CD 1B 85                ;
beq      LE0E6                         ; 0x1e0e7 $E0D7 F0 0D                   ;
bank7_table22                                                                  ;
.byt    $CD,$1D,$85,$D0                ; 0x1e0e9 $E0D9 CD 1D 85 D0             ;
; ---------------------------------------------------------------------------- ;
bank7_code35                                                                   ;
.byt    $1B                            ; 0x1e0ed $E0DD 1B                      ;
lda      $17                           ; 0x1e0ee $E0DE A5 17                   ;; Link's Shield Position; Link's Shield Position (0 = Link ducked)
bne      LE0F9                         ; 0x1e0f0 $E0E0 D0 17                   ;
inc      $070E                         ; 0x1e0f2 $E0E2 EE 0E 07                ;;setting to 1 will make link sink (duck into the chimney)
LE0E5                                                                          ;
rts                                    ; 0x1e0f5 $E0E5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0E6                                                                          ;
lda      $F7                           ; 0x1e0f6 $E0E6 A5 F7                   ;; Controller 1 Buttons Held
and      #$08                          ; 0x1e0f8 $E0E8 29 08                   ;;Keep Bits:0000_1000
beq      LE0F9                         ; 0x1e0fa $E0EA F0 0D                   ;
lda      $0479                         ; 0x1e0fc $E0EC AD 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
bne      LE0E5                         ; 0x1e0ff $E0EF D0 F4                   ;
inc      $075B                         ; 0x1e101 $E0F1 EE 5B 07                ;
lda      #$16                          ; 0x1e104 $E0F4 A9 16                   ;;A = #$16 0001_0110
jmp      LE187                         ; 0x1e106 $E0F6 4C 87 E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0F9                                                                          ;
jmp      LE12B                         ; 0x1e109 $E0F9 4C 2B E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0FC                                                                          ;
lda      #$8F                          ; 0x1e10c $E0FC A9 8F                   ;;A = #$8f 1000_1111
ldy      L0002                         ; 0x1e10e $E0FE A4 02                   ;
sta      (L000E),y                     ; 0x1e110 $E100 91 0E                   ;
jsr      bank7_find_next_free_41A_X_or_something_and_write_to___associated; 0x1e112 $E102 20 92 E2;
lda      #$81                          ; 0x1e115 $E105 A9 81                   ;;A = #$81 1000_0001
sta      $041A,x                       ; 0x1e117 $E107 9D 1A 04                ;;break block by stab/stepon: ?exists/in-use
lda      #$02                          ; 0x1e11a $E10A A9 02                   ;;A = #$02 0000_0010
sta      $ED                           ; 0x1e11c $E10C 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
lda      $29                           ; 0x1e11e $E10E A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
clc                                    ; 0x1e120 $E110 18                      ;
adc      #$20                          ; 0x1e121 $E111 69 20                   ;
and      #$F0                          ; 0x1e123 $E113 29 F0                   ;;Keep Bits:1111_0000
sta      $0429,x                       ; 0x1e125 $E115 9D 29 04                ;;break block by stab/stepon: y
lda      $4D                           ; 0x1e128 $E118 A5 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
clc                                    ; 0x1e12a $E11A 18                      ;
adc      #$0F                          ; 0x1e12b $E11B 69 0F                   ;
and      #$F0                          ; 0x1e12d $E11D 29 F0                   ;;Keep Bits:1111_0000
sta      $0424,x                       ; 0x1e12f $E11F 9D 24 04                ;;break block by stab/stepon: X
lda      $3B                           ; 0x1e132 $E122 A5 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
adc      #$00                          ; 0x1e134 $E124 69 00                   ;
sta      $041F,x                       ; 0x1e136 $E126 9D 1F 04                ;;break block by stab/stepon: map page
ldx      #$00                          ; 0x1e139 $E129 A2 00                   ;;X = #$00 0000_0000
LE12B                                                                          ;
lda      $5F                           ; 0x1e13b $E12B A5 5F                   ;; Link's facing direction
lsr                                    ; 0x1e13d $E12D 4A                      ;
clc                                    ; 0x1e13e $E12E 18                      ;
adc      $13                           ; 0x1e13f $E12F 65 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      L0000                         ; 0x1e141 $E131 85 00                   ;
pha                                    ; 0x1e143 $E133 48                      ;
lda      #$00                          ; 0x1e144 $E134 A9 00                   ;;A = #$00 0000_0000
sta      $01                           ; 0x1e146 $E136 85 01                   ;
jsr      LE1BE                         ; 0x1e148 $E138 20 BE E1                ;
pla                                    ; 0x1e14b $E13B 68                      ;
clc                                    ; 0x1e14c $E13C 18                      ;
adc      #$02                          ; 0x1e14d $E13D 69 02                   ;
adc      $13                           ; 0x1e14f $E13F 65 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      L0000                         ; 0x1e151 $E141 85 00                   ;
lda      #$00                          ; 0x1e153 $E143 A9 00                   ;;A = #$00 0000_0000
sta      $01                           ; 0x1e155 $E145 85 01                   ;
jsr      LE1BE                         ; 0x1e157 $E147 20 BE E1                ;
lda      $B5                           ; 0x1e15a $E14A A5 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
cmp      #$01                          ; 0x1e15c $E14C C9 01                   ;
bne      LE19D                         ; 0x1e15e $E14E D0 4D                   ;
lda      $0503                         ; 0x1e160 $E150 AD 03 05                ;; Timer for moving left or right (when entering area)
bne      LE19E                         ; 0x1e163 $E153 D0 49                   ;
lda      $C8                           ; 0x1e165 $E155 A5 C8                   ;; go outside: set $c8 to 3
ldy      $0728                         ; 0x1e167 $E157 AC 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
beq      LE16F                         ; 0x1e16a $E15A F0 13                   ;
and      #$09                          ; 0x1e16c $E15C 29 09                   ;;Keep Bits:0000_1001
beq      LE16E                         ; 0x1e16e $E15E F0 0E                   ;
lsr                                    ; 0x1e170 $E160 4A                      ;
lsr                                    ; 0x1e171 $E161 4A                      ;
lsr                                    ; 0x1e172 $E162 4A                      ;
tay                                    ; 0x1e173 $E163 A8                      ;
iny                                    ; 0x1e174 $E164 C8                      ;
cpy      $5F                           ; 0x1e175 $E165 C4 5F                   ;; Link's facing direction
bne      LE16E                         ; 0x1e177 $E167 D0 05                   ;
tya                                    ; 0x1e179 $E169 98                      ;
ora      $A7                           ; 0x1e17a $E16A 05 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
sta      $A7                           ; 0x1e17c $E16C 85 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
LE16E                                                                          ;
rts                                    ; 0x1e17e $E16E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE16F                                                                          ;
and      #$06                          ; 0x1e17f $E16F 29 06                   ;;Keep Bits:0000_0110
beq      LE19E                         ; 0x1e181 $E171 F0 2B                   ;
and      #$04                          ; 0x1e183 $E173 29 04                   ;;Keep Bits:0000_0100
beq      LE179                         ; 0x1e185 $E175 F0 02                   ;
inc      $3B                           ; 0x1e187 $E177 E6 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
LE179                                                                          ;
lda      #$00                          ; 0x1e189 $E179 A9 00                   ;;A = #$00 0000_0000
sta      $13                           ; 0x1e18b $E17B 85 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      $0759                         ; 0x1e18d $E17D 8D 59 07                ;; if not 0, cause fairy spawn at next encounter (??)
sta      $075A                         ; 0x1e190 $E180 8D 5A 07                ;
sta      $70                           ; 0x1e193 $E183 85 70                   ;;hspeed (Link's horizontal velocity); Link's X Velocity	; Player X Delta (E8-00, 00-18)
lda      #$10                          ; 0x1e195 $E185 A9 10                   ;;A = #$10 0001_0000
LE187                                                                          ;
sta      $0736                         ; 0x1e197 $E187 8D 36 07                ;; Game Mode ; screen intro type
LE18A                                                                          ;
inc      $0726                         ; 0x1e19a $E18A EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
ldx      #$05                          ; 0x1e19d $E18D A2 05                   ; X = 05
bank7_KillAllMonsters                                                          ;
lda      $B6,x                         ; 0x1e19f $E18F B5 B6                   ;does monster exist?
beq      LE198                         ; 0x1e1a1 $E191 F0 05                   ;if no, skip past 
jsr      LDD3D                         ; 0x1e1a3 $E193 20 3D DD                ;do something  and  kill monster (set B6,x=0)
inc      $B6,x                         ; 0x1e1a6 $E196 F6 B6                   ;
LE198                                                                          ;
dex                                    ; 0x1e1a8 $E198 CA                      ;decrement x
bpl      bank7_KillAllMonsters         ; 0x1e1a9 $E199 10 F4                   ;if x > 0
ldx      $10                           ; 0x1e1ab $E19B A6 10                   ;last current monster x register?
LE19D                                                                          ;
rts                                    ; 0x1e1ad $E19D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE19E                                                                          ;
lda      $13                           ; 0x1e1ae $E19E A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
beq      LE1A8                         ; 0x1e1b0 $E1A0 F0 06                   ;
lda      $29                           ; 0x1e1b2 $E1A2 A5 29                   ; Link's Y Position
cmp      #$E4                          ; 0x1e1b4 $E1A4 C9 E4                   ;
bcs      LE1AE                         ; 0x1e1b6 $E1A6 B0 06                   ;
LE1A8                                                                          ;
lda      $19                           ; 0x1e1b8 $E1A8 A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$02                          ; 0x1e1ba $E1AA C9 02                   ;
bcc      LE19D                         ; 0x1e1bc $E1AC 90 EF                   ;
LE1AE                                                                          ;
lda      #$00                          ; 0x1e1be $E1AE A9 00                   ; A = 00
sta      $13                           ; 0x1e1c0 $E1B0 85 13                   ;fall down hole ?
inc      $0736                         ; 0x1e1c2 $E1B2 EE 36 07                ; Game Mode
jmp      LE18A                         ; 0x1e1c5 $E1B5 4C 8A E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE1B8                                                                          ;
sty      L0000                         ; 0x1e1c8 $E1B8 84 00                   ;
lda      #$01                          ; 0x1e1ca $E1BA A9 01                   ; A = 01
sta      $01                           ; 0x1e1cc $E1BC 85 01                   ;
LE1BE                                                                          ;
ldy      L0000                         ; 0x1e1ce $E1BE A4 00                   ;
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e1d0 $E1C0 20 E8 EA;
jsr      bank3_code7                   ; 0x1e1d3 $E1C3 20 0C 85                ; Check for False Wall	while step on?
bcc      LE1D2                         ; 0x1e1d6 $E1C6 90 0A                   ;007 CHANGE THIS AND CAN EXIST IN TILES, COLLIDE WITH SKY?
ldy      L0000                         ; 0x1e1d8 $E1C8 A4 00                   ;
lda      $A7,x                         ; 0x1e1da $E1CA B5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
ora      bank7_table21,y               ; 0x1e1dc $E1CC 19 4E E0                ;
sta      $A7,x                         ; 0x1e1df $E1CF 95 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
rts                                    ; 0x1e1e1 $E1D1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE1D2                                                                          ;
dec      L0000                         ; 0x1e1e2 $E1D2 C6 00                   ;
dec      $01                           ; 0x1e1e4 $E1D4 C6 01                   ;
bpl      LE1BE                         ; 0x1e1e6 $E1D6 10 E6                   ;
rts                                    ; 0x1e1e8 $E1D8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Links_velocities_when_breaking_blocks_or_hitting_walls        ;
.byt    $0C                            ; 0x1e1e9 $E1D9 0C                      ;24 DC 0C F4	Values multiplied by 3
.byt    $F4                            ; 0x1e1ea $E1DA F4                      ;
LE1DB                                                                          ;
.byt    $04                            ; 0x1e1eb $E1DB 04                      ;
.byt    $FC                            ; 0x1e1ec $E1DC FC                      ;
bank7_related_to_breakable_block                                               ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e1ed $E1DD 20 C9 FF                ; Load Bank $0769
jsr      bank7_Related_to_Breakable_Blocks; 0x1e1f0 $E1E0 20 E6 E1             ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e1f3 $E1E3 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Breakable_Blocks                                              ;
lda      $0480                         ; 0x1e1f6 $E1E6 AD 80 04                ;
cmp      #$F8                          ; 0x1e1f9 $E1E9 C9 F8                   ;
bcs      LE234                         ; 0x1e1fb $E1EB B0 47                   ;
ldy      $80                           ; 0x1e1fd $E1ED A4 80                   ; Current Animation Frame for Link
cpy      #$08                          ; 0x1e1ff $E1EF C0 08                   ; 08 = Up Stab
beq      LE1F7                         ; 0x1e201 $E1F1 F0 04                   ;
cpy      #$09                          ; 0x1e203 $E1F3 C0 09                   ; 09 = Down Stab
beq      LE1F7                         ; 0x1e205 $E1F5 F0 00                   ;
LE1F7                                                                          ;
clc                                    ; 0x1e207 $E1F7 18                      ;
adc      #$03                          ; 0x1e208 $E1F8 69 03                   ;
sta      $39                           ; 0x1e20a $E1FA 85 39                   ;
lda      $047E                         ; 0x1e20c $E1FC AD 7E 04                ;
cpy      #$08                          ; 0x1e20f $E1FF C0 08                   ;
bne      LE214                         ; 0x1e211 $E201 D0 11                   ;
dec      $39                           ; 0x1e213 $E203 C6 39                   ;
dec      $39                           ; 0x1e215 $E205 C6 39                   ;
dec      $39                           ; 0x1e217 $E207 C6 39                   ;
lda      $CC                           ; 0x1e219 $E209 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e21b $E20B 18                      ;
adc      #$0A                          ; 0x1e21c $E20C 69 0A                   ;
ldy      $5F                           ; 0x1e21e $E20E A4 5F                   ; Link's facing direction
dey                                    ; 0x1e220 $E210 88                      ;
adc      LE1DB,y                       ; 0x1e221 $E211 79 DB E1                ;
LE214                                                                          ;
clc                                    ; 0x1e224 $E214 18                      ;
adc      #$04                          ; 0x1e225 $E215 69 04                   ;
adc      $072C                         ; 0x1e227 $E217 6D 2C 07                ; Scrolling Offset Low Byte
sta      $5D                           ; 0x1e22a $E21A 85 5D                   ;
lda      $072A                         ; 0x1e22c $E21C AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1e22f $E21F 69 00                   ;
sta      $4B                           ; 0x1e231 $E221 85 4B                   ;
ldx      #$10                          ; 0x1e233 $E223 A2 10                   ; X = 10
ldy      #$1C                          ; 0x1e235 $E225 A0 1C                   ; Y = 1C
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e237 $E227 20 E8 EA;sets $e $f $2 and $3	, with Y as offset: based on location of link, below his foot	;60D3	Y=B0	54B0
cmp      L851E                         ; 0x1e23a $E22A CD 1E 85                ; check for Breakable Block Tile Code
beq      LE235                         ; 0x1e23d $E22D F0 06                   ;
jsr      bank3_code7                   ; 0x1e23f $E22F 20 0C 85                ; Check for False Wall
bcs      LE26A                         ; 0x1e242 $E232 B0 36                   ;
LE234                                                                          ;
rts                                    ; 0x1e244 $E234 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE235                                                                          ;
lda      $0786                         ; 0x1e245 $E235 AD 86 07                ; Have Glove
beq      LE26A                         ; 0x1e248 $E238 F0 30                   ;
bank7_stab_brick_at_0E_with_A_and_does_draw                                    ;
lda      #$42                          ; 0x1e24a $E23A A9 42                   ; A = 42						;FUNCTION: stab brick at E with A and does draw
ldy      L0002                         ; 0x1e24c $E23C A4 02                   ;
sta      (L000E),y                     ; 0x1e24e $E23E 91 0E                   ;store to side screen tile  in ram			;FUNCTION: stab brick at E with A
jsr      bank7_find_next_free_41A_X_or_something_and_write_to___associated; 0x1e250 $E240 20 92 E2;
lda      #$01                          ; 0x1e253 $E243 A9 01                   ; A = 01
sta      $041A,x                       ; 0x1e255 $E245 9D 1A 04                ;;break block by stab/stepon: ?exists/in-use
lda      #$04                          ; 0x1e258 $E248 A9 04                   ; A = 04 (04 = Sound of Block Breaking)
sta      $ED                           ; 0x1e25a $E24A 85 ED                   ; Sound Effects Type 2
lda      $39                           ; 0x1e25c $E24C A5 39                   ;
and      #$F0                          ; 0x1e25e $E24E 29 F0                   ; keep bits xxxx ....
sta      $0429,x                       ; 0x1e260 $E250 9D 29 04                ;;break block by stab/stepon: y
lda      $5D                           ; 0x1e263 $E253 A5 5D                   ;
and      #$F0                          ; 0x1e265 $E255 29 F0                   ; keep bits xxxx ....
sta      $0424,x                       ; 0x1e267 $E257 9D 24 04                ;;break block by stab/stepon: X
lda      $4B                           ; 0x1e26a $E25A A5 4B                   ;
sta      $041F,x                       ; 0x1e26c $E25C 9D 1F 04                ;;break block by stab/stepon: map page
lda      $80                           ; 0x1e26f $E25F A5 80                   ; Current Animation Frame for Link
sec                                    ; 0x1e271 $E261 38                      ;
sbc      #$08                          ; 0x1e272 $E262 E9 08                   ;
cmp      #$02                          ; 0x1e274 $E264 C9 02                   ;
bcc      LE28C                         ; 0x1e276 $E266 90 24                   ;
bcs      LE277                         ; 0x1e278 $E268 B0 0D                   ;
LE26A                                                                          ;
lda      $80                           ; 0x1e27a $E26A A5 80                   ; Current Animation Frame for Link
sec                                    ; 0x1e27c $E26C 38                      ;
sbc      #$08                          ; 0x1e27d $E26D E9 08                   ;
cmp      #$02                          ; 0x1e27f $E26F C9 02                   ;
bcc      LE28B                         ; 0x1e281 $E271 90 18                   ;
lda      #$02                          ; 0x1e283 $E273 A9 02                   ; A = 02 (sound of wall hit by sword)
sta      $EC                           ; 0x1e285 $E275 85 EC                   ; Sound Effects Type 1
LE277                                                                          ;
lda      #$18                          ; 0x1e287 $E277 A9 18                   ; A = 18
sta      $0502                         ; 0x1e289 $E279 8D 02 05                ;; Timer
ldy      #$00                          ; 0x1e28c $E27C A0 00                   ; Y = 00
lda      $047E                         ; 0x1e28e $E27E AD 7E 04                ;
cmp      $CC                           ; 0x1e291 $E281 C5 CC                   ; Link's X Position on Screen
bcc      LE286                         ; 0x1e293 $E283 90 01                   ;
iny                                    ; 0x1e295 $E285 C8                      ;
LE286                                                                          ;
lda      bank7_Related_to_Links_velocities_when_breaking_blocks_or_hitting_walls,y; 0x1e296 $E286 B9 D9 E1;
sta      $70                           ; 0x1e299 $E289 85 70                   ; Link's X Velocity
LE28B                                                                          ;
rts                                    ; 0x1e29b $E28B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE28C                                                                          ;
lda      #$00                          ; 0x1e29c $E28C A9 00                   ; A = 00
sta      $057D                         ; 0x1e29e $E28E 8D 7D 05                ; Link's Y Velocity
rts                                    ; 0x1e2a1 $E291 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_find_next_free_41A_X_or_something_and_write_to___associated              ;
ldx      #$04                          ; 0x1e2a2 $E292 A2 04                   ; X = 04
LE294                                                                          ;
lda      $041A,x                       ; 0x1e2a4 $E294 BD 1A 04                ;;break block by stab/stepon: ?exists/in-use
beq      LE29E                         ; 0x1e2a7 $E297 F0 05                   ;
dex                                    ; 0x1e2a9 $E299 CA                      ;
bpl      LE294                         ; 0x1e2aa $E29A 10 F8                   ;
ldx      #$00                          ; 0x1e2ac $E29C A2 00                   ; X = 00
LE29E                                                                          ;
ldy      L0002                         ; 0x1e2ae $E29E A4 02                   ;
tya                                    ; 0x1e2b0 $E2A0 98                      ;
sta      $042E,x                       ; 0x1e2b1 $E2A1 9D 2E 04                ;
lda      L000E                         ; 0x1e2b4 $E2A4 A5 0E                   ;
sta      $0433,x                       ; 0x1e2b6 $E2A6 9D 33 04                ;;break block by stab/stepon: ?addy (low)
lda      $0F                           ; 0x1e2b9 $E2A9 A5 0F                   ;
sta      $0438,x                       ; 0x1e2bb $E2AB 9D 38 04                ;;break block by stab/stepon: ?addy (high)
LE2AE                                                                          ;
rts                                    ; 0x1e2be $E2AE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Enemy_Damage                                                   ;
.byt    $10,$0C,$0C,$0C,$08,$04,$04,$04; 0x1e2bf $E2AF 10 0C 0C 0C 08 04 04 04 ;Damage Code 0
.byt    $20,$1C,$14,$10,$0C,$0C,$08,$08; 0x1e2c7 $E2B7 20 1C 14 10 0C 0C 08 08 ;Damage Code 1
.byt    $30,$28,$24,$20,$18,$14,$10,$0C; 0x1e2cf $E2BF 30 28 24 20 18 14 10 0C ;Damage Code 2
.byt    $60,$48,$38,$30,$28,$20,$1C,$18; 0x1e2d7 $E2C7 60 48 38 30 28 20 1C 18 ;Damage Code 3
.byt    $90,$78,$60,$48,$38,$30,$28,$20; 0x1e2df $E2CF 90 78 60 48 38 30 28 20 ;Damage Code 4
.byt    $E0,$A0,$80,$70,$60,$50,$40,$30; 0x1e2e7 $E2D7 E0 A0 80 70 60 50 40 30 ;Damage Code 5
.byt    $E0,$C0,$A0,$90,$80,$70,$60,$50; 0x1e2ef $E2DF E0 C0 A0 90 80 70 60 50 ;Damage Code 6
                                                                               ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1e2f7 $E2E7 FF FF FF FF FF FF FF FF ;Damage Code 7
; ---------------------------------------------------------------------------- ;
bank7_Link_Hit_Routine                                                         ;
ldy      $A1,x                         ; 0x1e2ff $E2EF B4 A1                   ; Enemy Code
lda      $0518                         ; 0x1e301 $E2F1 AD 18 05                ; Timer for Link immunity (0 = vulnerable)
bne      LE308                         ; 0x1e304 $E2F4 D0 12                   ; if Link Invulnerable, skip to $1E308
lda      $6DD5,y                       ; 0x1e306 $E2F6 B9 D5 6D                ; load Enemy Bits; load Enemy Bits (from RAM)
and      #$10                          ; 0x1e309 $E2F9 29 10                   ; keep bits ...x .... (Steal Points bit); keep bits .... xxxx (Experience bits)
beq      LE305                         ; 0x1e30b $E2FB F0 08                   ; if 0, skip to $1E305
lda      #$0A                          ; 0x1e30d $E2FD A9 0A                   ; A = 0A (lose 10 exp. when hit)
cpy      #$06                          ; 0x1e30f $E2FF C0 06                   ; if Enemy Code NOT 6 (Moa); restore Y to its original value
bne      LE305                         ; 0x1e311 $E301 D0 02                   ; skip
lda      #$14                          ; 0x1e313 $E303 A9 14                   ; else A = 14 (lose 20 exp. when hit)
LE305                                                                          ;
sta      $05E8                         ; 0x1e315 $E305 8D E8 05                ; amount of exp. to lose
LE308                                                                          ;
lda      $6DF9,y                       ; 0x1e318 $E308 B9 F9 6D                ; Enemy Vulnerability/Damage Code
and      #$0F                          ; 0x1e31b $E30B 29 0F                   ; keep bits .... xxxx
LE30D                                                                          ;
sta      $0C                           ; 0x1e31d $E30D 85 0C                   ;
lda      $0518                         ; 0x1e31f $E30F AD 18 05                ; Timer for Link being immune from attacks
bne      LE368                         ; 0x1e322 $E312 D0 54                   ; if Invulnerable (Not 0), skip to $1E368
lda      #$01                          ; 0x1e324 $E314 A9 01                   ; A = 01					;link hurt sound
sta      $E9                           ; 0x1e326 $E316 85 E9                   ;
sta      L0000                         ; 0x1e328 $E318 85 00                   ;
jsr      bank7_Set_Links_Recoil        ; 0x1e32a $E31A 20 99 E3                ; set Link's recoil
lda      $0C                           ; 0x1e32d $E31D A5 0C                   ; Code for amount of Life to lose (0-7)
asl                                    ; 0x1e32f $E31F 0A                      ;
asl                                    ; 0x1e330 $E320 0A                      ;
asl                                    ; 0x1e331 $E321 0A                      ;
adc      $0779                         ; 0x1e332 $E322 6D 79 07                ; Add Life Power (1-8)
tay                                    ; 0x1e335 $E325 A8                      ;
lda      LE2AE,y                       ; 0x1e336 $E326 B9 AE E2                ; refer to table at 1E2AF (Enemy Damage)
ldy      $070F                         ; 0x1e339 $E329 AC 0F 07                ; Color of Link after Shield Spell
beq      LE32F                         ; 0x1e33c $E32C F0 01                   ;
lsr                                    ; 0x1e33e $E32E 4A                      ; Divide by 2 (if Shield is cast)
LE32F                                                                          ;
sta      $0C                           ; 0x1e33f $E32F 85 0C                   ;
lda      $0774                         ; 0x1e341 $E331 AD 74 07                ; Current Life left in meter
sec                                    ; 0x1e344 $E334 38                      ;
sbc      $0C                           ; 0x1e345 $E335 E5 0C                   ;
sta      $0774                         ; 0x1e347 $E337 8D 74 07                ;; Hit Points; Current Life left in meter
lda      $074F                         ; 0x1e34a $E33A AD 4F 07                ;; Related to Pause Pane
ora      #$40                          ; 0x1e34d $E33D 09 40                   ; set bits  .x.. ....
sta      $074F                         ; 0x1e34f $E33F 8D 4F 07                ;; Related to Pause Pane
bcs      LE34C                         ; 0x1e352 $E342 B0 08                   ;
lda      #$00                          ; 0x1e354 $E344 A9 00                   ; A = 00
sta      $0774                         ; 0x1e356 $E346 8D 74 07                ; Current Life left in meter
inc      $0494                         ; 0x1e359 $E349 EE 94 04                ;kill link
LE34C                                                                          ;
lda      #$20                          ; 0x1e35c $E34C A9 20                   ; A = 20
sta      $050C                         ; 0x1e35e $E34E 8D 0C 05                ; Timer for Link being in injured state
lda      #$04                          ; 0x1e361 $E351 A9 04                   ; A = 04
sta      $0518                         ; 0x1e363 $E353 8D 18 05                ; Timer for Link being immune (0 = vulnerable)
lda      #$00                          ; 0x1e366 $E356 A9 00                   ; A = 00
sta      $0400                         ; 0x1e368 $E358 8D 00 04                ; Sword slash frame code
lda      $A7                           ; 0x1e36b $E35B A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$FB                          ; 0x1e36d $E35D 29 FB                   ; keep bits xxxx x.xx
sta      $A7                           ; 0x1e36f $E35F 85 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$FE                          ; 0x1e371 $E361 A9 FE                   ; A = FE
sta      $057D                         ; 0x1e373 $E363 8D 7D 05                ; Link's Y Velocity when hit
sec                                    ; 0x1e376 $E366 38                      ;
rts                                    ; 0x1e377 $E367 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE368                                                                          ;
clc                                    ; 0x1e378 $E368 18                      ;
LE369                                                                          ;
rts                                    ; 0x1e379 $E369 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_various_recoil_variables                                       ;
;0C = recoil when hit by Flying Blade - Facing left                            ;
;F4 = recoil when hit by Flying Blade - Facing right                           ;
;0C =                                                                          ;
;04 = recoil when Link is hit on shield, when Link hits - Facing left          ;
;FC = recoil when Link is hit on shield, when Link hits - Facing right         ;
;                                                                              ;
;Doesn't apply to all enemies                                                  ;
;Mostly ground enemies with weapons, but also Moa                              ;
;                                                                              ;
;0D = X Velocity when Link is hit - Facing left                                ;
;F3 = X Velocity when Link is hit - Facing right                               ;
;                                                                              ;
;This applies to being hit by the enemy itself, but not its weapon             ;
.byt    $0C,$F4                        ; 0x1e37a $E36A 0C F4                   ;
LE36C                                                                          ;
.byt    $0C,$04,$FC,$0D,$F3            ; 0x1e37c $E36C 0C 04 FC 0D F3          ;
; ---------------------------------------------------------------------------- ;
bank7_code37                                                                   ;
lda      #$00                          ; 0x1e381 $E371 A9 00                   ; A = 00
sta      L0000                         ; 0x1e383 $E373 85 00                   ;
lda      $0B                           ; 0x1e385 $E375 A5 0B                   ;
bne      LE381                         ; 0x1e387 $E377 D0 08                   ;
lda      #$18                          ; 0x1e389 $E379 A9 18                   ; A = 18
sta      $0502                         ; 0x1e38b $E37B 8D 02 05                ;; Timer
jsr      bank7_Set_Links_Recoil        ; 0x1e38e $E37E 20 99 E3                ;
LE381                                                                          ;
lda      $60,x                         ; 0x1e391 $E381 B5 60                   ;; Enemy facing direction
pha                                    ; 0x1e393 $E383 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e394 $E384 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1e397 $E387 68                      ;
sta      $60,x                         ; 0x1e398 $E388 95 60                   ;; Enemy facing direction
iny                                    ; 0x1e39a $E38A C8                      ;
iny                                    ; 0x1e39b $E38B C8                      ;
LE38C                                                                          ;
lda      LE369,y                       ; 0x1e39c $E38C B9 69 E3                ;
ldy      $040E,x                       ; 0x1e39f $E38F BC 0E 04                ; Enemy Hit State (0 = not in Hit State)
beq      LE395                         ; 0x1e3a2 $E392 F0 01                   ;
asl                                    ; 0x1e3a4 $E394 0A                      ;
LE395                                                                          ;
sta      $043E,x                       ; 0x1e3a5 $E395 9D 3E 04                ;
rts                                    ; 0x1e3a8 $E398 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_Links_Recoil                                                         ;
lda      $A7                           ; 0x1e3a9 $E399 A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$03                          ; 0x1e3ab $E39B 29 03                   ; keep bits .... ..xx
sta      $0D                           ; 0x1e3ad $E39D 85 0D                   ;
lda      $60,x                         ; 0x1e3af $E39F B5 60                   ; Enemy facing direction
pha                                    ; 0x1e3b1 $E3A1 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e3b2 $E3A2 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1e3b5 $E3A5 68                      ;
sta      $60,x                         ; 0x1e3b6 $E3A6 95 60                   ; Enemy facing direction
iny                                    ; 0x1e3b8 $E3A8 C8                      ;
cpy      $0D                           ; 0x1e3b9 $E3A9 C4 0D                   ;
beq      LE3B8                         ; 0x1e3bb $E3AB F0 0B                   ;
lda      L0000                         ; 0x1e3bd $E3AD A5 00                   ;
beq      LE3B3                         ; 0x1e3bf $E3AF F0 02                   ;
LE3B1                                                                          ;
iny                                    ; 0x1e3c1 $E3B1 C8                      ;
iny                                    ; 0x1e3c2 $E3B2 C8                      ;
LE3B3                                                                          ;
lda      LE36C,y                       ; 0x1e3c3 $E3B3 B9 6C E3                ;
sta      $70                           ; 0x1e3c6 $E3B6 85 70                   ; Link's X Velocity
LE3B8                                                                          ;
rts                                    ; 0x1e3c8 $E3B8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $12                           ; 0x1e3c9 $E3B9 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1e3cb $E3BB 4A                      ;
txa                                    ; 0x1e3cc $E3BC 8A                      ;
and      #$01                          ; 0x1e3cd $E3BD 29 01                   ; keep bits .... ...x
bne      LE3C7                         ; 0x1e3cf $E3BF D0 06                   ;
php                                    ; 0x1e3d1 $E3C1 08                      ;
pla                                    ; 0x1e3d2 $E3C2 68                      ;
eor      #$01                          ; 0x1e3d3 $E3C3 49 01                   ; flip bits .... ...x
pha                                    ; 0x1e3d5 $E3C5 48                      ;
plp                                    ; 0x1e3d6 $E3C6 28                      ;
LE3C7                                                                          ;
bcs      LE3B8                         ; 0x1e3d7 $E3C7 B0 EF                   ;
jsr      LE469                         ; 0x1e3d9 $E3C9 20 69 E4                ;
ldy      $87,x                         ; 0x1e3dc $E3CC B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e3de $E3CE B9 17 6D                ;
and      #$C0                          ; 0x1e3e1 $E3D1 29 C0                   ; keep bits xx.. ....
cmp      #$80                          ; 0x1e3e3 $E3D3 C9 80                   ;
bne      LE3DD                         ; 0x1e3e5 $E3D5 D0 06                   ;
ldy      $0710                         ; 0x1e3e7 $E3D7 AC 10 07                ; Reflect Spell effect (01 = activated)
beq      LE442                         ; 0x1e3ea $E3DA F0 66                   ;
asl                                    ; 0x1e3ec $E3DC 0A                      ;
LE3DD                                                                          ;
sta      $D9                           ; 0x1e3ed $E3DD 85 D9                   ;; Thunder Spell modifier ?
ldy      #$02                          ; 0x1e3ef $E3DF A0 02                   ; Y = 02
lda      $77,x                         ; 0x1e3f1 $E3E1 B5 77                   ; Projectile X Velocity
beq      LE3ED                         ; 0x1e3f3 $E3E3 F0 08                   ;
bmi      LE3E8                         ; 0x1e3f5 $E3E5 30 01                   ;
dey                                    ; 0x1e3f7 $E3E7 88                      ;
LE3E8                                                                          ;
tya                                    ; 0x1e3f8 $E3E8 98                      ;
cmp      $66,x                         ; 0x1e3f9 $E3E9 D5 66                   ; Projectile facing direction
bne      LE441                         ; 0x1e3fb $E3EB D0 54                   ;
LE3ED                                                                          ;
lda      $13                           ; 0x1e3fd $E3ED A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      LE442                         ; 0x1e3ff $E3EF D0 51                   ;
jsr      bank7_code45                  ; 0x1e401 $E3F1 20 D8 E9                ;
jsr      bank7_idem__maybe             ; 0x1e404 $E3F4 20 F9 E9                ;
bcc      LE442                         ; 0x1e407 $E3F7 90 49                   ;
lda      $D9                           ; 0x1e409 $E3F9 A5 D9                   ;; Thunder Spell modifier ?
beq      LE413                         ; 0x1e40b $E3FB F0 16                   ;
cmp      #$40                          ; 0x1e40d $E3FD C9 40                   ;
beq      bank7_code38                  ; 0x1e40f $E3FF F0 30                   ;
lda      $0710                         ; 0x1e411 $E401 AD 10 07                ; Reflect Spell effect (01 = activated)
beq      LE413                         ; 0x1e414 $E404 F0 0D                   ;
lda      #$00                          ; 0x1e416 $E406 A9 00                   ; A = 00
sta      $044C,x                       ; 0x1e418 $E408 9D 4C 04                ;
jsr      bank7_code38                  ; 0x1e41b $E40B 20 31 E4                ;
asl      $77,x                         ; 0x1e41e $E40E 16 77                   ; Projectile X Velocity
asl      $77,x                         ; 0x1e420 $E410 16 77                   ; Projectile X Velocity
rts                                    ; 0x1e422 $E412 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE413                                                                          ;
ldy      $87,x                         ; 0x1e423 $E413 B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e425 $E415 B9 17 6D                ;
ldy      #$10                          ; 0x1e428 $E418 A0 10                   ; Y = 10 (sound for absorbed projectile)
and      #$10                          ; 0x1e42a $E41A 29 10                   ; keep bits ...x ....
beq      LE424                         ; 0x1e42c $E41C F0 06                   ;
lda      #$02                          ; 0x1e42e $E41E A9 02                   ; A = 02
sta      $EC                           ; 0x1e430 $E420 85 EC                   ; Sound Effects Type 1
ldy      #$00                          ; 0x1e432 $E422 A0 00                   ; Y = 00
LE424                                                                          ;
sty      $EE                           ; 0x1e434 $E424 84 EE                   ; Sound Effects Type 3
dec      $30,x                         ; 0x1e436 $E426 D6 30                   ;; Projectile Y Position
dec      $30,x                         ; 0x1e438 $E428 D6 30                   ;; Projectile Y Position
lda      #$F2                          ; 0x1e43a $E42A A9 F2                   ; A = F2
sta      $87,x                         ; 0x1e43c $E42C 95 87                   ;; Projectile Type
LE42E                                                                          ;
rts                                    ; 0x1e43e $E42E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table23                                                                  ;
.byt    $F8,$08                        ; 0x1e43f $E42F F8 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_code38                                                                   ;
lda      #$10                          ; 0x1e441 $E431 A9 10                   ; A = 10
sta      $EE                           ; 0x1e443 $E433 85 EE                   ; Sound Effects Type 3
ldy      $66,x                         ; 0x1e445 $E435 B4 66                   ; Projectile facing direction
lda      LE42E,y                       ; 0x1e447 $E437 B9 2E E4                ;
sta      $77,x                         ; 0x1e44a $E43A 95 77                   ; Projectile X Velocity
lda      #$F8                          ; 0x1e44c $E43C A9 F8                   ; A = F8 (Y Velocity after shield hit)
sta      $0584,x                       ; 0x1e44e $E43E 9D 84 05                ; Projectile Y Velocity
LE441                                                                          ;
rts                                    ; 0x1e451 $E441 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE442                                                                          ;
jsr      bank7_code43                  ; 0x1e452 $E442 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e455 $E445 20 F9 E9                ;
bcc      LE441                         ; 0x1e458 $E448 90 F7                   ;
ldy      $87,x                         ; 0x1e45a $E44A B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e45c $E44C B9 17 6D                ;
and      #$20                          ; 0x1e45f $E44F 29 20                   ; keep bits ..x. ....
bne      LE457                         ; 0x1e461 $E451 D0 04                   ;
lda      #$00                          ; 0x1e463 $E453 A9 00                   ; A = 00
sta      $87,x                         ; 0x1e465 $E455 95 87                   ;; Projectile Type
LE457                                                                          ;
lda      $0518                         ; 0x1e467 $E457 AD 18 05                ;; Invulnerable Timeout (01-02 - Blinking, 03+ - Not Blinking); Timer for Link being immune from attacks
bne      LE441                         ; 0x1e46a $E45A D0 E5                   ;
lda      $6D17,y                       ; 0x1e46c $E45C B9 17 6D                ;
and      #$07                          ; 0x1e46f $E45F 29 07                   ; keep bits .... .xxx
jsr      LE30D                         ; 0x1e471 $E461 20 0D E3                ;
ldy      $66,x                         ; 0x1e474 $E464 B4 66                   ;; Projectile facing direction
jmp      LE3B1                         ; 0x1e476 $E466 4C B1 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE469                                                                          ;
ldy      $87,x                         ; 0x1e479 $E469 B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e47b $E46B B9 17 6D                ;
ldy      #$03                          ; 0x1e47e $E46E A0 03                   ; Y = 03
and      #$08                          ; 0x1e480 $E470 29 08                   ; keep bits .... x...
beq      LE476                         ; 0x1e482 $E472 F0 02                   ;
ldy      #$0A                          ; 0x1e484 $E474 A0 0A                   ; Y = 0A
LE476                                                                          ;
sty      $06                           ; 0x1e486 $E476 84 06                   ;
lda      $30,x                         ; 0x1e488 $E478 B5 30                   ;; Projectile Y Position
clc                                    ; 0x1e48a $E47A 18                      ;
adc      #$07                          ; 0x1e48b $E47B 69 07                   ;
sta      $05                           ; 0x1e48d $E47D 85 05                   ;
lda      #$02                          ; 0x1e48f $E47F A9 02                   ; A = 02
sta      $07                           ; 0x1e491 $E481 85 07                   ;
lda      $CE                           ; 0x1e493 $E483 A5 CE                   ;
clc                                    ; 0x1e495 $E485 18                      ;
adc      #$03                          ; 0x1e496 $E486 69 03                   ;
sta      $04                           ; 0x1e498 $E488 85 04                   ;
rts                                    ; 0x1e49a $E48A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE48B                                                                          ;
lda      $B6,x                         ; 0x1e49b $E48B B5 B6                   ; Generated Enemy Slot
cmp      #$01                          ; 0x1e49d $E48D C9 01                   ;
bne      LE4BB                         ; 0x1e49f $E48F D0 2A                   ;
lda      $040E,x                       ; 0x1e4a1 $E491 BD 0E 04                ; Enemy Hit State (0 = not in Hit State)
bne      LE4BB                         ; 0x1e4a4 $E494 D0 25                   ;
ldy      #$01                          ; 0x1e4a6 $E496 A0 01                   ; Y = 01
LE498                                                                          ;
sty      $11                           ; 0x1e4a8 $E498 84 11                   ;
lda      $8D,y                         ; 0x1e4aa $E49A B9 8D 00                ; Flying Blade/Flame slot
beq      LE4B8                         ; 0x1e4ad $E49D F0 19                   ;
bmi      LE4B8                         ; 0x1e4af $E49F 30 17                   ;
jsr      LE4BC                         ; 0x1e4b1 $E4A1 20 BC E4                ;
lda      #$01                          ; 0x1e4b4 $E4A4 A9 01                   ; A = 01
sta      $0B                           ; 0x1e4b6 $E4A6 85 0B                   ;
jsr      LE694                         ; 0x1e4b8 $E4A8 20 94 E6                ;
ldy      $11                           ; 0x1e4bb $E4AB A4 11                   ;
bcc      LE4B8                         ; 0x1e4bd $E4AD 90 09                   ;
lda      $6D,y                         ; 0x1e4bf $E4AF B9 6D 00                ;
tay                                    ; 0x1e4c2 $E4B2 A8                      ;
jmp      LE38C                         ; 0x1e4c3 $E4B3 4C 8C E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ldy      $11                           ; 0x1e4c6 $E4B6 A4 11                   ;
LE4B8                                                                          ;
dey                                    ; 0x1e4c8 $E4B8 88                      ;
bpl      LE498                         ; 0x1e4c9 $E4B9 10 DD                   ;
LE4BB                                                                          ;
rts                                    ; 0x1e4cb $E4BB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE4BC                                                                          ;
lda      $5A,y                         ; 0x1e4cc $E4BC B9 5A 00                ; Flying Blade/Flame X Position (low byte)
sec                                    ; 0x1e4cf $E4BF 38                      ;
sbc      $072C                         ; 0x1e4d0 $E4C0 ED 2C 07                ; Scrolling Offset Low Byte
clc                                    ; 0x1e4d3 $E4C3 18                      ;
adc      #$02                          ; 0x1e4d4 $E4C4 69 02                   ;
sta      L0000                         ; 0x1e4d6 $E4C6 85 00                   ;
lda      #$04                          ; 0x1e4d8 $E4C8 A9 04                   ; A = 04
sta      L0002                         ; 0x1e4da $E4CA 85 02                   ;
lda      $36,y                         ; 0x1e4dc $E4CC B9 36 00                ; Flying Blade/Flame Y Position
clc                                    ; 0x1e4df $E4CF 18                      ;
adc      #$04                          ; 0x1e4e0 $E4D0 69 04                   ;
sta      $01                           ; 0x1e4e2 $E4D2 85 01                   ;
lda      #$06                          ; 0x1e4e4 $E4D4 A9 06                   ; A = 06
sta      $03                           ; 0x1e4e6 $E4D6 85 03                   ;
rts                                    ; 0x1e4e8 $E4D8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE4D9                                                                          ;
lda      $A1,x                         ; 0x1e4e9 $E4D9 B5 A1                   ; Enemy Code
cmp      #$13                          ; 0x1e4eb $E4DB C9 13                   ; 13 = Elevator
beq      LE4F7                         ; 0x1e4ed $E4DD F0 18                   ;
ldy      $0707                         ; 0x1e4ef $E4DF AC 07 07                ; Current World
dey                                    ; 0x1e4f2 $E4E2 88                      ;
cpy      #$02                          ; 0x1e4f3 $E4E3 C0 02                   ;
bcc      LE4F7                         ; 0x1e4f5 $E4E5 90 10                   ;
lda      $12                           ; 0x1e4f7 $E4E7 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1e4f9 $E4E9 4A                      ;
txa                                    ; 0x1e4fa $E4EA 8A                      ;
and      #$01                          ; 0x1e4fb $E4EB 29 01                   ; keep bits .... ...x
bne      LE4F5                         ; 0x1e4fd $E4ED D0 06                   ;
php                                    ; 0x1e4ff $E4EF 08                      ;
pla                                    ; 0x1e500 $E4F0 68                      ;
eor      #$01                          ; 0x1e501 $E4F1 49 01                   ; flip bits .... ...x
pha                                    ; 0x1e503 $E4F3 48                      ;
plp                                    ; 0x1e504 $E4F4 28                      ;
LE4F5                                                                          ;
bcs      LE54F                         ; 0x1e505 $E4F5 B0 58                   ;
LE4F7                                                                          ;
lda      $B6,x                         ; 0x1e507 $E4F7 B5 B6                   ; Generated Enemy Slot
cmp      #$01                          ; 0x1e509 $E4F9 C9 01                   ;
bne      LE54F                         ; 0x1e50b $E4FB D0 52                   ;
lda      $040E,x                       ; 0x1e50d $E4FD BD 0E 04                ; Enemy Hit State (0 = not in Hit State)
bne      LE54F                         ; 0x1e510 $E500 D0 4D                   ;
lda      $C8                           ; 0x1e512 $E502 A5 C8                   ;; go outside: set $c8 to 3
and      #$06                          ; 0x1e514 $E504 29 06                   ; keep bits .... .xx.
asl                                    ; 0x1e516 $E506 0A                      ;
ora      $C9                           ; 0x1e517 $E507 05 C9                   ;
and      #$FC                          ; 0x1e519 $E509 29 FC                   ; keep bits xxxx xx..
bne      LE54F                         ; 0x1e51b $E50B D0 42                   ;
jsr      LE942                         ; 0x1e51d $E50D 20 42 E9                ;
jsr      bank7_code43                  ; 0x1e520 $E510 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e523 $E513 20 F9 E9                ;
bcc      LE54F                         ; 0x1e526 $E516 90 37                   ;
lda      $A8,x                         ; 0x1e528 $E518 B5 A8                   ; Enemy State ?
ora      #$10                          ; 0x1e52a $E51A 09 10                   ; set  bits ...x ....
sta      $A8,x                         ; 0x1e52c $E51C 95 A8                   ;; Enemy State
lda      $A1,x                         ; 0x1e52e $E51E B5 A1                   ; Enemy Code
cmp      #$01                          ; 0x1e530 $E520 C9 01                   ; 01 = Red Jar
bne      LE555                         ; 0x1e532 $E522 D0 31                   ;
lda      $AF,x                         ; 0x1e534 $E524 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e536 $E526 29 7F                   ; keep bits .xxx xxxx
cmp      #$08                          ; 0x1e538 $E528 C9 08                   ;
bcc      LE538                         ; 0x1e53a $E52A 90 0C                   ;
cmp      #$0E                          ; 0x1e53c $E52C C9 0E                   ;
bcc      LE555                         ; 0x1e53e $E52E 90 25                   ;
cmp      #$10                          ; 0x1e540 $E530 C9 10                   ;
beq      LE555                         ; 0x1e542 $E532 F0 21                   ;
cmp      #$11                          ; 0x1e544 $E534 C9 11                   ;
beq      LE555                         ; 0x1e546 $E536 F0 1D                   ;
LE538                                                                          ;
jsr      bank7_get_item                ; 0x1e548 $E538 20 71 E7                ;
lda      #$70                          ; 0x1e54b $E53B A9 70                   ; A = 70
sta      $049C                         ; 0x1e54d $E53D 8D 9C 04                ;;hold item above head: timer
lda      #$00                          ; 0x1e550 $E540 A9 00                   ; A = 00
sta      $057D                         ; 0x1e552 $E542 8D 7D 05                ; Link's Y Velocity
sta      $70                           ; 0x1e555 $E545 85 70                   ; Link's X Velocity
lda      $AF,x                         ; 0x1e557 $E547 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e559 $E549 29 7F                   ; keep bits .xxx xxxx
sta      $049D                         ; 0x1e55b $E54B 8D 9D 04                ; Related to Palace Item
rts                                    ; 0x1e55e $E54E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE54F                                                                          ;
lda      $A8,x                         ; 0x1e55f $E54F B5 A8                   ; Enemy State ?
and      #$EF                          ; 0x1e561 $E551 29 EF                   ; keep bits xxx. xxxx
sta      $A8,x                         ; 0x1e563 $E553 95 A8                   ;; Enemy State
LE555                                                                          ;
rts                                    ; 0x1e565 $E555 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_X_Velocity_when_Link_is_hit_                                   ;
.byt    $18,$E8                        ; 0x1e566 $E556 18 E8                   ;
; ---------------------------------------------------------------------------- ;
bank7_code39                                                                   ;
lda      $0710                         ; 0x1e568 $E558 AD 10 07                ; Reflect Spell effect
bne      LE563                         ; 0x1e56b $E55B D0 06                   ;
lda      $A1,x                         ; 0x1e56d $E55D B5 A1                   ; Enemy Code
cmp      #$17                          ; 0x1e56f $E55F C9 17                   ; 17 = Orange Daira
bcs      LE579                         ; 0x1e571 $E561 B0 16                   ;
LE563                                                                          ;
jsr      bank7_check_if_shield_protects_from_sword_hit; 0x1e573 $E563 20 F3 E5 ; check if shield protects from sword hit
jsr      bank7_code45                  ; 0x1e576 $E566 20 D8 E9                ; idem ?
jsr      bank7_idem__maybe             ; 0x1e579 $E569 20 F9 E9                ; idem ?
bcc      LE579                         ; 0x1e57c $E56C 90 0B                   ; if Carry set, shield protects
lda      #$02                          ; 0x1e57e $E56E A9 02                   ; A = 02 (sound of enemy sword hit shield)
sta      $EC                           ; 0x1e580 $E570 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$00                          ; 0x1e582 $E572 A9 00                   ; A = 00
sta      $0B                           ; 0x1e584 $E574 85 0B                   ;
jmp      bank7_code37                  ; 0x1e586 $E576 4C 71 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE579                                                                          ;
jsr      bank7_check_if_shield_protects_from_sword_hit; 0x1e589 $E579 20 F3 E5 ;
jsr      bank7_code43                  ; 0x1e58c $E57C 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e58f $E57F 20 F9 E9                ;
bcc      LE5F2                         ; 0x1e592 $E582 90 6E                   ; if Carry set, Link is hit (sword or spike)
jsr      bank7_Link_Hit_Routine        ; 0x1e594 $E584 20 EF E2                ; Link Hit Routine
bcc      LE59B                         ; 0x1e597 $E587 90 12                   ;
lda      $0444,x                       ; 0x1e599 $E589 BD 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
cmp      #$02                          ; 0x1e59c $E58C C9 02                   ;
bcc      LE59B                         ; 0x1e59e $E58E 90 0B                   ;
asl      $057D                         ; 0x1e5a0 $E590 0E 7D 05                ; Link's Y Velocity * 2 (hit by strong boss)
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e5a3 $E593 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_X_Velocity_when_Link_is_hit_,y; 0x1e5a6 $E596 B9 56 E5;
sta      $70                           ; 0x1e5a9 $E599 85 70                   ; Link's X Velocity
LE59B                                                                          ;
rts                                    ; 0x1e5ab $E59B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Ironknuckle_Shield_protection                                 ;
.byt    $12,$00,$05,$10,$05,$02,$02    ; 0x1e5ac $E59C 12 00 05 10 05 02 02    ;
LE5A3                                                                          ;
.byt    $08,$0D,$20,$10,$20,$0D,$10    ; 0x1e5b3 $E5A3 08 0D 20 10 20 0D 10    ;
LE5AA                                                                          ;
.byt    $00,$00,$00,$FC,$00,$FF,$02    ; 0x1e5ba $E5AA 00 00 00 FC 00 FF 02    ;
LE5B1                                                                          ;
.byt    $02,$02,$10,$18,$0F,$12        ; 0x1e5c1 $E5B1 02 02 10 18 0F 12       ;
LE5B7                                                                          ;
.byt    $14,$F0,$00                    ; 0x1e5c7 $E5B7 14 F0 00                ;
; ---------------------------------------------------------------------------- ;
bank7_code40                                                                   ;
lda      $2A,x                         ; 0x1e5ca $E5BA B5 2A                   ; Enemy Y Position
ldy      $0444,x                       ; 0x1e5cc $E5BC BC 44 04                ; Enemy Vulnerability
clc                                    ; 0x1e5cf $E5BF 18                      ;
adc      bank7_Related_to_Ironknuckle_Shield_protection,y; 0x1e5d0 $E5C0 79 9C E5;
sta      $05                           ; 0x1e5d3 $E5C3 85 05                   ;
lda      LE5A3,y                       ; 0x1e5d5 $E5C5 B9 A3 E5                ;
sta      $07                           ; 0x1e5d8 $E5C8 85 07                   ;
lda      $CD                           ; 0x1e5da $E5CA A5 CD                   ;
adc      LE5AA,y                       ; 0x1e5dc $E5CC 79 AA E5                ;
sta      $04                           ; 0x1e5df $E5CF 85 04                   ;
lda      LE5B1,y                       ; 0x1e5e1 $E5D1 B9 B1 E5                ;
sta      $06                           ; 0x1e5e4 $E5D4 85 06                   ;
cpy      #$02                          ; 0x1e5e6 $E5D6 C0 02                   ;
bcs      LE5E5                         ; 0x1e5e8 $E5D8 B0 0B                   ;
lda      $60,x                         ; 0x1e5ea $E5DA B5 60                   ;; Enemy facing direction
lsr                                    ; 0x1e5ec $E5DC 4A                      ;
bcc      LE5E5                         ; 0x1e5ed $E5DD 90 06                   ;
lda      $04                           ; 0x1e5ef $E5DF A5 04                   ;
adc      #$0D                          ; 0x1e5f1 $E5E1 69 0D                   ;
sta      $04                           ; 0x1e5f3 $E5E3 85 04                   ;
LE5E5                                                                          ;
cpy      #$04                          ; 0x1e5f5 $E5E5 C0 04                   ;
bne      LE5F2                         ; 0x1e5f7 $E5E7 D0 09                   ;
ldy      $60,x                         ; 0x1e5f9 $E5E9 B4 60                   ;; Enemy facing direction
lda      $04                           ; 0x1e5fb $E5EB A5 04                   ;
adc      LE5B7,y                       ; 0x1e5fd $E5ED 79 B7 E5                ;
sta      $04                           ; 0x1e600 $E5F0 85 04                   ;
LE5F2                                                                          ;
rts                                    ; 0x1e602 $E5F2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_check_if_shield_protects_from_sword_hit                                  ;
ldy      $91,x                         ; 0x1e603 $E5F3 B4 91                   ;
lda      $0210,y                       ; 0x1e605 $E5F5 B9 10 02                ;
clc                                    ; 0x1e608 $E5F8 18                      ;
adc      #$09                          ; 0x1e609 $E5F9 69 09                   ;
sta      $05                           ; 0x1e60b $E5FB 85 05                   ;
lda      #$01                          ; 0x1e60d $E5FD A9 01                   ; A = 01
sta      $07                           ; 0x1e60f $E5FF 85 07                   ;
lda      $0213,y                       ; 0x1e611 $E601 B9 13 02                ;
sta      $04                           ; 0x1e614 $E604 85 04                   ;
lda      #$0E                          ; 0x1e616 $E606 A9 0E                   ; A = 0E
sta      $06                           ; 0x1e618 $E608 85 06                   ;
lda      $04                           ; 0x1e61a $E60A A5 04                   ;
adc      $06                           ; 0x1e61c $E60C 65 06                   ;
bcc      LE616                         ; 0x1e61e $E60E 90 06                   ;
lda      $04                           ; 0x1e620 $E610 A5 04                   ;
eor      #$FF                          ; 0x1e622 $E612 49 FF                   ; flip all bits
sta      $06                           ; 0x1e624 $E614 85 06                   ;
LE616                                                                          ;
rts                                    ; 0x1e626 $E616 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $C8                           ; 0x1e627 $E617 A5 C8                   ;; go outside: set $c8 to 3
asl                                    ; 0x1e629 $E619 0A                      ;
and      #$0C                          ; 0x1e62a $E61A 29 0C                   ; keep bits .... xx..
ora      $C9                           ; 0x1e62c $E61C 05 C9                   ;
and      #$FC                          ; 0x1e62e $E61E 29 FC                   ; keep bits xxxx xx..
bne      LE616                         ; 0x1e630 $E620 D0 F4                   ;
lda      $2A,x                         ; 0x1e632 $E622 B5 2A                   ; Enemy Y Position
adc      #$10                          ; 0x1e634 $E624 69 10                   ;
cmp      #$30                          ; 0x1e636 $E626 C9 30                   ;
bcc      LE616                         ; 0x1e638 $E628 90 EC                   ;
jsr      bank7_code40                  ; 0x1e63a $E62A 20 BA E5                ;
ldy      #$01                          ; 0x1e63d $E62D A0 01                   ; Y = 01
LE62F                                                                          ;
sty      $11                           ; 0x1e63f $E62F 84 11                   ;
lda      $8D,y                         ; 0x1e641 $E631 B9 8D 00                ; Flying Blade/Flame slot
beq      LE649                         ; 0x1e644 $E634 F0 13                   ;
bmi      LE649                         ; 0x1e646 $E636 30 11                   ;
jsr      LE4BC                         ; 0x1e648 $E638 20 BC E4                ;
jsr      bank7_idem__maybe             ; 0x1e64b $E63B 20 F9 E9                ;
ldy      $11                           ; 0x1e64e $E63E A4 11                   ;
bcc      LE649                         ; 0x1e650 $E640 90 07                   ;
lda      #$02                          ; 0x1e652 $E642 A9 02                   ; 02 = sound of enemy sword hit shield
sta      $EC                           ; 0x1e654 $E644 85 EC                   ;      or Flying Blade/Flame hit shield
jsr      LE6E8                         ; 0x1e656 $E646 20 E8 E6                ;
LE649                                                                          ;
dey                                    ; 0x1e659 $E649 88                      ;
bpl      LE62F                         ; 0x1e65a $E64A 10 E3                   ;
jsr      bank7_code44                  ; 0x1e65c $E64C 20 A2 E9                ;
jsr      bank7_idem__maybe             ; 0x1e65f $E64F 20 F9 E9                ;
bcc      LE616                         ; 0x1e662 $E652 90 C2                   ;
LE654                                                                          ;
lda      #$02                          ; 0x1e664 $E654 A9 02                   ; 02 = sound of enemy sword hit shield
sta      $EC                           ; 0x1e666 $E656 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$00                          ; 0x1e668 $E658 A9 00                   ; A = 00
sta      $0B                           ; 0x1e66a $E65A 85 0B                   ;
pla                                    ; 0x1e66c $E65C 68                      ;
pla                                    ; 0x1e66d $E65D 68                      ;
lda      $80                           ; 0x1e66e $E65E A5 80                   ; Current Animation Frame for Link
cmp      #$09                          ; 0x1e670 $E660 C9 09                   ; 09 = Down Stab
bne      LE66A                         ; 0x1e672 $E662 D0 06                   ;
lda      #$FE                          ; 0x1e674 $E664 A9 FE                   ; A = FE
sta      $057D                         ; 0x1e676 $E666 8D 7D 05                ; Y Velocity after downstabing an armored enemy
rts                                    ; 0x1e679 $E669 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE66A                                                                          ;
LE66C     = * + $0002                                                          ;
jmp      bank7_code37                  ; 0x1e67a $E66A 4C 71 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Attack_Power_for_8_Levels                                                ;
.byt    $02,$03,$04,$06,$09,$0C,$12,$18; 0x1e67d $E66D 02 03 04 06 09 0C 12 18 ;Attack Power for 8 Levels (8 bytes)
.byt    $32                            ; 0x1e685 $E675 32                      ;Attack Power for Thunder spell
                                                                               ;
.byt    $E0                            ; 0x1e686 $E676 E0                      ;???
; ---------------------------------------------------------------------------- ;
bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least                  ;
lda      $0480                         ; 0x1e687 $E677 AD 80 04                ;
cmp      #$F8                          ; 0x1e68a $E67A C9 F8                   ;
beq      LE6A6                         ; 0x1e68c $E67C F0 28                   ;
ldy      $A1,x                         ; 0x1e68e $E67E B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1e690 $E680 B9 41 6E                ; Enemy Data Table in RAM (5541)
and      #$10                          ; 0x1e693 $E683 29 10                   ; keep bits ...x ....
bne      LE6A6                         ; 0x1e695 $E685 D0 1F                   ;
lda      $B6,x                         ; 0x1e697 $E687 B5 B6                   ;; Generated Enemy Slot
cmp      #$01                          ; 0x1e699 $E689 C9 01                   ;
bne      LE6A6                         ; 0x1e69b $E68B D0 19                   ;
jsr      bank7_code44                  ; 0x1e69d $E68D 20 A2 E9                ;
lda      #$00                          ; 0x1e6a0 $E690 A9 00                   ; A = 00
sta      $0B                           ; 0x1e6a2 $E692 85 0B                   ;
LE694                                                                          ;
ldy      $A1,x                         ; 0x1e6a4 $E694 B4 A1                   ; Enemy Code
cpy      #$13                          ; 0x1e6a6 $E696 C0 13                   ; 13 = Elevator
beq      LE6AC                         ; 0x1e6a8 $E698 F0 12                   ;
cpy      #$02                          ; 0x1e6aa $E69A C0 02                   ; 02 = Locked Door
beq      LE6AC                         ; 0x1e6ac $E69C F0 0E                   ;
jsr      LE942                         ; 0x1e6ae $E69E 20 42 E9                ;
LE6A1                                                                          ;
jsr      bank7_idem__maybe             ; 0x1e6b1 $E6A1 20 F9 E9                ;
bcs      LE6AE                         ; 0x1e6b4 $E6A4 B0 08                   ;
LE6A6                                                                          ;
lda      $A8,x                         ; 0x1e6b6 $E6A6 B5 A8                   ;; Enemy State
and      #$DF                          ; 0x1e6b8 $E6A8 29 DF                   ; keep bits xx.x xxxx
sta      $A8,x                         ; 0x1e6ba $E6AA 95 A8                   ;; Enemy State
LE6AC                                                                          ;
clc                                    ; 0x1e6bc $E6AC 18                      ; Carry = 0 means sword hits nothing
LE6AD                                                                          ;
rts                                    ; 0x1e6bd $E6AD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6AE                                                                          ;
ldy      $A1,x                         ; 0x1e6be $E6AE B4 A1                   ; Enemy Code
lda      $0B                           ; 0x1e6c0 $E6B0 A5 0B                   ;
bne      LE6BE                         ; 0x1e6c2 $E6B2 D0 0A                   ;
lda      $6DD5,y                       ; 0x1e6c4 $E6B4 B9 D5 6D                ; Enemy Attributes Table (palette, exp., etc)
and      #$20                          ; 0x1e6c7 $E6B7 29 20                   ; keep bits ..x. ....
beq      LE6BE                         ; 0x1e6c9 $E6B9 F0 03                   ; Bit 5 = 1 means no damage from sword (fire)
jmp      LE654                         ; 0x1e6cb $E6BB 4C 54 E6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6BE                                                                          ;
lda      $0B                           ; 0x1e6ce $E6BE A5 0B                   ;
bne      LE6CB                         ; 0x1e6d0 $E6C0 D0 09                   ;
cpy      #$01                          ; 0x1e6d2 $E6C2 C0 01                   ;
bne      LE6CB                         ; 0x1e6d4 $E6C4 D0 05                   ;
lda      $040E,x                       ; 0x1e6d6 $E6C6 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
bne      LE6AC                         ; 0x1e6d9 $E6C9 D0 E1                   ;
LE6CB                                                                          ;
lda      $0B                           ; 0x1e6db $E6CB A5 0B                   ;
beq      LE6F3                         ; 0x1e6dd $E6CD F0 24                   ;
lda      $6DD5,y                       ; 0x1e6df $E6CF B9 D5 6D                ; Enemy Attributes Table (palette, exp., etc)
and      #$20                          ; 0x1e6e2 $E6D2 29 20                   ; keep bits ..x. ....
beq      LE6DD                         ; 0x1e6e4 $E6D4 F0 07                   ;
ldy      $11                           ; 0x1e6e6 $E6D6 A4 11                   ;
lda      $05CA,y                       ; 0x1e6e8 $E6D8 B9 CA 05                ;
bne      LE6E6                         ; 0x1e6eb $E6DB D0 09                   ;
LE6DD                                                                          ;
ldy      $A1,x                         ; 0x1e6ed $E6DD B4 A1                   ; Enemy Code
lda      $6DF9,y                       ; 0x1e6ef $E6DF B9 F9 6D                ; Another Enemy Attributes Table
and      #$20                          ; 0x1e6f2 $E6E2 29 20                   ; keep bits ..x. ....
beq      LE6F3                         ; 0x1e6f4 $E6E4 F0 0D                   ;
LE6E6                                                                          ;
ldy      $11                           ; 0x1e6f6 $E6E6 A4 11                   ;
LE6E8                                                                          ;
lda      #$00                          ; 0x1e6f8 $E6E8 A9 00                   ; A = 00
sta      $7D,y                         ; 0x1e6fa $E6EA 99 7D 00                ;
lda      #$F2                          ; 0x1e6fd $E6ED A9 F2                   ; A = F2
sta      $8D,y                         ; 0x1e6ff $E6EF 99 8D 00                ;
rts                                    ; 0x1e702 $E6F2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6F3                                                                          ;
lda      $80                           ; 0x1e703 $E6F3 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$08                          ; 0x1e705 $E6F5 C9 08                   ; 08 = Up Stab
bne      LE708                         ; 0x1e707 $E6F7 D0 0F                   ;
lda      $0B                           ; 0x1e709 $E6F9 A5 0B                   ;
bne      LE708                         ; 0x1e70b $E6FB D0 0B                   ;
lda      $29                           ; 0x1e70d $E6FD A5 29                   ; Link Y Position
cmp      $2A,x                         ; 0x1e70f $E6FF D5 2A                   ; Enemy Y Position
bcc      LE6A6                         ; 0x1e711 $E701 90 A3                   ;
lda      #$00                          ; 0x1e713 $E703 A9 00                   ; A = 00
sta      $057D                         ; 0x1e715 $E705 8D 7D 05                ; $057D = Link Jumping State ?
LE708                                                                          ;
lda      $A8,x                         ; 0x1e718 $E708 B5 A8                   ;; Enemy State
and      #$20                          ; 0x1e71a $E70A 29 20                   ; keep bits ..x. ....
bne      LE6AD                         ; 0x1e71c $E70C D0 9F                   ;
lda      $A8,x                         ; 0x1e71e $E70E B5 A8                   ;; Enemy State
ora      #$20                          ; 0x1e720 $E710 09 20                   ; set  bits ..x. ....
sta      $A8,x                         ; 0x1e722 $E712 95 A8                   ;; Enemy State
lda      $80                           ; 0x1e724 $E714 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$09                          ; 0x1e726 $E716 C9 09                   ; 09 = Down Stab
bne      LE723                         ; 0x1e728 $E718 D0 09                   ;
lda      $0B                           ; 0x1e72a $E71A A5 0B                   ;
bne      LE723                         ; 0x1e72c $E71C D0 05                   ;
lda      #$FE                          ; 0x1e72e $E71E A9 FE                   ; A = FE
sta      $057D                         ; 0x1e730 $E720 8D 7D 05                ; Link's Y Velocity
LE723                                                                          ;
ldy      $0777                         ; 0x1e733 $E723 AC 77 07                ; Attack Power
lda      #$30                          ; 0x1e736 $E726 A9 30                   ; A = 30
sta      $040E,x                       ; 0x1e738 $E728 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
lda      #$10                          ; 0x1e73b $E72B A9 10                   ; A = 10
sta      $ED                           ; 0x1e73d $E72D 85 ED                   ; Sound Effects Type 2
lda      $C2,x                         ; 0x1e73f $E72F B5 C2                   ; Enemy HP
sec                                    ; 0x1e741 $E731 38                      ;
sbc      LE66C,y                       ; 0x1e742 $E732 F9 6C E6                ; refer to table at $1E66C (+1)
sta      $C2,x                         ; 0x1e745 $E735 95 C2                   ;; Enemy Current HP
beq      LE74C                         ; 0x1e747 $E737 F0 13                   ; if (HP == 0)
bcc      LE74C                         ; 0x1e749 $E739 90 11                   ; or (HP is Negative) goto $1E74C (enemy dead)
lda      $A1,x                         ; 0x1e74b $E73B B5 A1                   ; Enemy Code
cmp      #$01                          ; 0x1e74d $E73D C9 01                   ; 01 = Red Jar
beq      LE755                         ; 0x1e74f $E73F F0 14                   ;
lda      $80                           ; 0x1e751 $E741 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$09                          ; 0x1e753 $E743 C9 09                   ;
beq      LE74A                         ; 0x1e755 $E745 F0 03                   ;
jsr      bank7_code37                  ; 0x1e757 $E747 20 71 E3                ;
LE74A                                                                          ;
sec                                    ; 0x1e75a $E74A 38                      ;
rts                                    ; 0x1e75b $E74B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE74C                                                                          ;
ldy      $A1,x                         ; 0x1e75c $E74C B4 A1                   ; Enemy Code
cpy      #$01                          ; 0x1e75e $E74E C0 01                   ; 01 = Red Jar
beq      LE755                         ; 0x1e760 $E750 F0 03                   ;
jmp      bank7_monster_death           ; 0x1e762 $E752 4C 80 E8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE755                                                                          ;
;item gets stabbed ?                                                           ;
lda      $AF,x                         ; 0x1e765 $E755 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e767 $E757 29 7F                   ; keep bits .xxx xxxx
cmp      #$08                          ; 0x1e769 $E759 C9 08                   ;
bcc      LE769                         ; 0x1e76b $E75B 90 0C                   ;
cmp      #$0E                          ; 0x1e76d $E75D C9 0E                   ;
bcc      bank7_get_item                ; 0x1e76f $E75F 90 10                   ;
cmp      #$10                          ; 0x1e771 $E761 C9 10                   ;
beq      bank7_get_item                ; 0x1e773 $E763 F0 0C                   ;
cmp      #$11                          ; 0x1e775 $E765 C9 11                   ;
beq      bank7_get_item                ; 0x1e777 $E767 F0 08                   ;
LE769                                                                          ;
lda      #$00                          ; 0x1e779 $E769 A9 00                   ; A = 00
sta      $040E,x                       ; 0x1e77b $E76B 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
sta      $ED                           ; 0x1e77e $E76E 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
rts                                    ; 0x1e780 $E770 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_get_item                                                                 ;
lda      $AF,x                         ; 0x1e781 $E771 B5 AF                   ;; Various enemy state variables
bmi      LE77D                         ; 0x1e783 $E773 30 08                   ;
lda      $3C,x                         ; 0x1e785 $E775 B5 3C                   ; Enemy X position (high byte)
tax                                    ; 0x1e787 $E777 AA                      ;
jsr      Set_Item_RAM_bit_to_0__Bits_0_3; 0x1e788 $E778 20 95 C2               ; set Item as taken in RAM
ldx      $10                           ; 0x1e78b $E77B A6 10                   ;; used as monster x register ;draw boss hp bar
LE77D                                                                          ;
lda      $AF,x                         ; 0x1e78d $E77D B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e78f $E77F 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1e791 $E781 A8                      ;
cpy      #$08                          ; 0x1e792 $E782 C0 08                   ;
bcs      LE79A                         ; 0x1e794 $E784 B0 14                   ; check if Item Code > 8
lda      #$A0                          ; 0x1e796 $E786 A9 A0                   ; A = A0
sta      $074B                         ; 0x1e798 $E788 8D 4B 07                ; Spell Flash Counter (bit 7 set = decor flash)
lda      #$10                          ; 0x1e79b $E78B A9 10                   ; A = 10
sta      $EB                           ; 0x1e79d $E78D 85 EB                   ; Music
lda      $0785,y                       ; 0x1e79f $E78F B9 85 07                ; Have Item Y
ora      #$01                          ; 0x1e7a2 $E792 09 01                   ; set  bits .... ...x
sta      $0785,y                       ; 0x1e7a4 $E794 99 85 07                ;
LE797                                                                          ;
jmp      bank7_remove_enemy_or_item    ; 0x1e7a7 $E797 4C 47 DD                ; Remove Enemy/Item
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE79A                                                                          ;
lda      #$08                          ; 0x1e7aa $E79A A9 08                   ; A = 08
sta      $EF                           ; 0x1e7ac $E79C 85 EF                   ; Sound Effects Type 4
cpy      #$08                          ; 0x1e7ae $E79E C0 08                   ;
bne      LE7BB                         ; 0x1e7b0 $E7A0 D0 19                   ;
lda      $0728                         ; 0x1e7b2 $E7A2 AD 28 07                ; Related to boss key state
beq      LE7B5                         ; 0x1e7b5 $E7A5 F0 0E                   ;
lda      #$00                          ; 0x1e7b7 $E7A7 A9 00                   ; A = 00
sta      $0728                         ; 0x1e7b9 $E7A9 8D 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
lda      $07FB                         ; 0x1e7bc $E7AC AD FB 07                ;
bne      LE7B5                         ; 0x1e7bf $E7AF D0 04                   ;
;                                                                              ;Restart Music after taking a key that falls after beating a boss
lda      #$02                          ; 0x1e7c1 $E7B1 A9 02                   ; A = 02 (04 = quiet version of Palace theme)
sta      $EB                           ; 0x1e7c3 $E7B3 85 EB                   ; Music
LE7B5                                                                          ;
inc      $0793                         ; 0x1e7c5 $E7B5 EE 93 07                ; Number of Keys
jmp      LE797                         ; 0x1e7c8 $E7B8 4C 97 E7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE7BB                                                                          ;
cpy      #$0E                          ; 0x1e7cb $E7BB C0 0E                   ;
bcc      bank7_code42                  ; 0x1e7cd $E7BD 90 35                   ;
cpy      #$10                          ; 0x1e7cf $E7BF C0 10                   ;
bcs      LE80C                         ; 0x1e7d1 $E7C1 B0 49                   ;
;Item is Magic (0E) or Heart (0F) Container                                    ;
lda      #$10                          ; 0x1e7d3 $E7C3 A9 10                   ; A = 10
sta      $EB                           ; 0x1e7d5 $E7C5 85 EB                   ; Music
lda      #$00                          ; 0x1e7d7 $E7C7 A9 00                   ; A = 00
sta      $EF                           ; 0x1e7d9 $E7C9 85 EF                   ; Sound Effects Type 4
tya                                    ; 0x1e7db $E7CB 98                      ;
tax                                    ; 0x1e7dc $E7CC AA                      ;
inc      $0775,x                       ; 0x1e7dd $E7CD FE 75 07                ; 0E = Magic Containers, 0F = Heart Containers
cpx      #$0E                          ; 0x1e7e0 $E7D0 E0 0E                   ;
bne      LE7E3                         ; 0x1e7e2 $E7D2 D0 0F                   ;
ldy      $0775,x                       ; 0x1e7e4 $E7D4 BC 75 07                ;
cpy      #$07                          ; 0x1e7e7 $E7D7 C0 07                   ; check if Link has 7 Magic Containers
bcc      LE7E3                         ; 0x1e7e9 $E7D9 90 08                   ;
lda      $079D                         ; 0x1e7eb $E7DB AD 9D 07                ;; Have 7 Magic Containers (08)
ora      #$08                          ; 0x1e7ee $E7DE 09 08                   ; set  bits .... x...
sta      $079D                         ; 0x1e7f0 $E7E0 8D 9D 07                ; set bit for 7 Magic Containers (08) (Kasuto)
LE7E3                                                                          ;
tya                                    ; 0x1e7f3 $E7E3 98                      ;
asl                                    ; 0x1e7f4 $E7E4 0A                      ;
asl                                    ; 0x1e7f5 $E7E5 0A                      ;
LE7E6                                                                          ;
asl                                    ; 0x1e7f6 $E7E6 0A                      ;
asl                                    ; 0x1e7f7 $E7E7 0A                      ;
sta      $06FE,x                       ; 0x1e7f8 $E7E8 9D FE 06                ; Magic/Life to be added to Magic/Life Meter
ldx      $10                           ; 0x1e7fb $E7EB A6 10                   ;; used as monster x register ;draw boss hp bar
jmp      bank7_remove_enemy_or_item    ; 0x1e7fd $E7ED 4C 47 DD                ; Remove Enemy/Item
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table24                                                                  ;
.byt    $07,$09,$0B,$0D                ; 0x1e800 $E7F0 07 09 0B 0D             ;
; ---------------------------------------------------------------------------- ;
bank7_code42                                                                   ;
jsr      bank7_monster_death           ; 0x1e804 $E7F4 20 80 E8                ;
lda      $AF,x                         ; 0x1e807 $E7F7 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e809 $E7F9 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1e80b $E7FB A8                      ;
lda      LE7E6,y                       ; 0x1e80c $E7FC B9 E6 E7                ;
sta      $0414,x                       ; 0x1e80f $E7FF 9D 14 04                ;
lda      #$08                          ; 0x1e812 $E802 A9 08                   ; A = 08
sta      $EF                           ; 0x1e814 $E804 85 EF                   ; Sound Effects Type 4
lda      #$00                          ; 0x1e816 $E806 A9 00                   ; A = 00
sta      $0504,x                       ; 0x1e818 $E808 9D 04 05                ;; Timer for Enemy
rts                                    ; 0x1e81b $E80B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE80C                                                                          ;
lda      #$10                          ; 0x1e81c $E80C A9 10                   ; A = 10
sta      $EB                           ; 0x1e81e $E80E 85 EB                   ; Music
lda      #$00                          ; 0x1e820 $E810 A9 00                   ; A = 00
sta      $EF                           ; 0x1e822 $E812 85 EF                   ; Sound Effects Type 4
cpy      #$12                          ; 0x1e824 $E814 C0 12                   ; 12 = Doll
bne      LE81D                         ; 0x1e826 $E816 D0 05                   ;
inc      $0700                         ; 0x1e828 $E818 EE 00 07                ; Number of Lives
bne      LE86D                         ; 0x1e82b $E81B D0 50                   ;
LE81D                                                                          ;
cpy      #$13                          ; 0x1e82d $E81D C0 13                   ; 13 = Kidnapped Child
bne      LE82B                         ; 0x1e82f $E81F D0 0A                   ;
lda      $079C                         ; 0x1e831 $E821 AD 9C 07                ;; Have collected Lost Child (20)
ora      #$20                          ; 0x1e834 $E824 09 20                   ; set  bits ..x. ....
sta      $079C                         ; 0x1e836 $E826 8D 9C 07                ;; Have collected Lost Child (20)
bne      LE86D                         ; 0x1e839 $E829 D0 42                   ;
LE82B                                                                          ;
cpy      #$14                          ; 0x1e83b $E82B C0 14                   ; 14 = Trophy
bne      LE839                         ; 0x1e83d $E82D D0 0A                   ;
lda      $0798                         ; 0x1e83f $E82F AD 98 07                ;; Trophy In Inventory (10 - Yes); Have collected Trophy (10)
ora      #$10                          ; 0x1e842 $E832 09 10                   ; set  bits ...x ....
sta      $0798                         ; 0x1e844 $E834 8D 98 07                ;; Trophy In Inventory (10 - Yes); Have collected Trophy (10)
bne      LE86D                         ; 0x1e847 $E837 D0 34                   ;
LE839                                                                          ;
cpy      #$15                          ; 0x1e849 $E839 C0 15                   ; 15 = Medicine
bne      LE847                         ; 0x1e84b $E83B D0 0A                   ;
lda      $079A                         ; 0x1e84d $E83D AD 9A 07                ;; Have collected note from Bagu (08) Medicine (40)
ora      #$40                          ; 0x1e850 $E840 09 40                   ; set bits  .x.. ....
sta      $079A                         ; 0x1e852 $E842 8D 9A 07                ;; Have collected note from Bagu (08) Medicine (40)
bne      LE86D                         ; 0x1e855 $E845 D0 26                   ;
LE847                                                                          ;
lda      #$08                          ; 0x1e857 $E847 A9 08                   ; A = 08
sta      $EF                           ; 0x1e859 $E849 85 EF                   ; Sound Effects Type 4
lda      #$00                          ; 0x1e85b $E84B A9 00                   ; A = 00
sta      $EB                           ; 0x1e85d $E84D 85 EB                   ; Music
lda      #$10                          ; 0x1e85f $E84F A9 10                   ; A = 10
sta      $05E2                         ; 0x1e861 $E851 8D E2 05                ; Amount of Magic to restore for Blue Jar
lda      $0783                         ; 0x1e864 $E854 AD 83 07                ; Number of Magic Containers
asl                                    ; 0x1e867 $E857 0A                      ;
asl                                    ; 0x1e868 $E858 0A                      ;
asl                                    ; 0x1e869 $E859 0A                      ;
asl                                    ; 0x1e86a $E85A 0A                      ;
sta      $05E3                         ; 0x1e86b $E85B 8D E3 05                ; Amount of Magic to restore for Red Jar
tya                                    ; 0x1e86e $E85E 98                      ;
sec                                    ; 0x1e86f $E85F 38                      ;
sbc      #$10                          ; 0x1e870 $E860 E9 10                   ;
tay                                    ; 0x1e872 $E862 A8                      ;
lda      $070C                         ; 0x1e873 $E863 AD 0C 07                ;add 5E2 to 70C for blue jar=magic	;add 5E3 to 70D for red jar=hp
clc                                    ; 0x1e876 $E866 18                      ;
adc      $05E2,y                       ; 0x1e877 $E867 79 E2 05                ;
sta      $070C                         ; 0x1e87a $E86A 8D 0C 07                ;add to link MP
LE86D                                                                          ;
jmp      bank7_remove_enemy_or_item    ; 0x1e87d $E86D 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Probability_for_Item_given_by_killed_enemy                     ;
.byt    $90,$90,$8A,$90,$90,$90,$90,$90; 0x1e880 $E870 90 90 8A 90 90 90 90 90 ;Weak Enemy
.byt    $91,$8C,$91,$8C,$8C,$91,$8C,$91; 0x1e888 $E878 91 8C 91 8C 8C 91 8C 91 ;Strong Enemy
; ---------------------------------------------------------------------------- ;
bank7_monster_death                                                            ;
ldy      $A1,x                         ; 0x1e890 $E880 B4 A1                   ; Enemy Code
lda      $6DD5,y                       ; 0x1e892 $E882 B9 D5 6D                ; Enemy Properties (Palette, Exp. Code, etc.)
and      #$0F                          ; 0x1e895 $E885 29 0F                   ; keep bits .... xxxx
sta      $0414,x                       ; 0x1e897 $E887 9D 14 04                ;
lda      $6DF9,y                       ; 0x1e89a $E88A B9 F9 6D                ; Enemy Vulnerability/Damage Code
and      #$C0                          ; 0x1e89d $E88D 29 C0                   ; keep bits xx.. ....
beq      LE8BF                         ; 0x1e89f $E88F F0 2E                   ; if enemy never give special items, skip
bank7_Drop_Item                                                                ;
lsr                                    ; 0x1e8a1 $E891 4A                      ;
lsr                                    ; 0x1e8a2 $E892 4A                      ;
lsr                                    ; 0x1e8a3 $E893 4A                      ;
lsr                                    ; 0x1e8a4 $E894 4A                      ;
lsr                                    ; 0x1e8a5 $E895 4A                      ;
lsr                                    ; 0x1e8a6 $E896 4A                      ;
tax                                    ; 0x1e8a7 $E897 AA                      ;
tay                                    ; 0x1e8a8 $E898 A8                      ;
inc      $05DE,x                       ; 0x1e8a9 $E899 FE DE 05                ; Current number of enemies killed for item
lda      $05DE,x                       ; 0x1e8ac $E89C BD DE 05                ;; Current number of enemies killed for magic/bag
cmp      #$06                          ; 0x1e8af $E89F C9 06                   ; Number of enemies to kill for item
bne      LE8BF                         ; 0x1e8b1 $E8A1 D0 1C                   ;
lda      #$00                          ; 0x1e8b3 $E8A3 A9 00                   ; A = 00
sta      $05DE,x                       ; 0x1e8b5 $E8A5 9D DE 05                ; Reset item counter
ldx      $10                           ; 0x1e8b8 $E8A8 A6 10                   ;; used as monster x register ;draw boss hp bar
ror      $0414,x                       ; 0x1e8ba $E8AA 7E 14 04                ;
lda      $051B,x                       ; 0x1e8bd $E8AD BD 1B 05                ; Randomizer
and      #$07                          ; 0x1e8c0 $E8B0 29 07                   ; keep bits .... .xxx
cpy      #$02                          ; 0x1e8c2 $E8B2 C0 02                   ; 02 = Strong Enemy (200P and Red Jar)
bne      LE8B8                         ; 0x1e8c4 $E8B4 D0 02                   ;
adc      #$07                          ; 0x1e8c6 $E8B6 69 07                   ; the Carry is set, so it's 8
LE8B8                                                                          ;
tay                                    ; 0x1e8c8 $E8B8 A8                      ;
lda      bank7_Table_for_Probability_for_Item_given_by_killed_enemy,y; 0x1e8c9 $E8B9 B9 70 E8;
sta      $048E,x                       ; 0x1e8cc $E8BC 9D 8E 04                ;; Dropped Item Code
LE8BF                                                                          ;
ldx      $10                           ; 0x1e8cf $E8BF A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$25                          ; 0x1e8d1 $E8C1 A9 25                   ; A = 25 (timer for kill animation)
sta      $0504,x                       ; 0x1e8d3 $E8C3 9D 04 05                ;; Timer for Enemy
lda      #$00                          ; 0x1e8d6 $E8C6 A9 00                   ; A = 00
sta      $043E,x                       ; 0x1e8d8 $E8C8 9D 3E 04                ;
lda      #$02                          ; 0x1e8db $E8CB A9 02                   ; A = 02
sta      $B6,x                         ; 0x1e8dd $E8CD 95 B6                   ; Generated Enemy Slot
lda      #$04                          ; 0x1e8df $E8CF A9 04                   ; A = 04
sta      $EF                           ; 0x1e8e1 $E8D1 85 EF                   ; Sound Effects Type 4
sec                                    ; 0x1e8e3 $E8D3 38                      ;
rts                                    ; 0x1e8e4 $E8D4 60                      ;try jmping at this point and check monster id then drop custom item	(Y=monID	X=monX register	)
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $2A,x                         ; 0x1e8e5 $E8D5 B5 2A                   ; Enemy Y Position
sta      $05                           ; 0x1e8e7 $E8D7 85 05                   ;
lda      #$08                          ; 0x1e8e9 $E8D9 A9 08                   ; A = 08
sta      $07                           ; 0x1e8eb $E8DB 85 07                   ;
lda      $CD                           ; 0x1e8ed $E8DD A5 CD                   ;
sta      $04                           ; 0x1e8ef $E8DF 85 04                   ;
lda      #$08                          ; 0x1e8f1 $E8E1 A9 08                   ; A = 08
sta      $06                           ; 0x1e8f3 $E8E3 85 06                   ;
jsr      bank7_code44                  ; 0x1e8f5 $E8E5 20 A2 E9                ;
jmp      LE6A1                         ; 0x1e8f8 $E8E8 4C A1 E6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Change_Enemy_Facing_Direction_and_X_Velocity                             ;
lda      $60,x                         ; 0x1e8fb $E8EB B5 60                   ; Enemy Facing Direction
eor      #$03                          ; 0x1e8fd $E8ED 49 03                   ; flip bits .... ..xx
sta      $60,x                         ; 0x1e8ff $E8EF 95 60                   ;; Enemy facing direction
lda      $71,x                         ; 0x1e901 $E8F1 B5 71                   ; Enemy X Velocity
eor      #$FF                          ; 0x1e903 $E8F3 49 FF                   ; flip all bits
tay                                    ; 0x1e905 $E8F5 A8                      ;
iny                                    ; 0x1e906 $E8F6 C8                      ;
sty      $71,x                         ; 0x1e907 $E8F7 94 71                   ;; Enemy X Velocity
rts                                    ; 0x1e909 $E8F9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN0                                                                 ;
.byt    $02,$0C,$03,$17,$02,$0C,$03,$0A; 0x1e90a $E8FA 02 0C 03 17 02 0C 03 0A ;
.byt    $04,$08,$0B,$03,$00,$18,$22,$08; 0x1e912 $E902 04 08 0B 03 00 18 22 08 ;
.byt    $FE,$0C,$00,$30,$00,$08,$00,$08; 0x1e91a $E90A FE 0C 00 30 00 08 00 08 ;
.byt    $03,$02,$03,$70,$00,$08,$F6,$20; 0x1e922 $E912 03 02 03 70 00 08 F6 20 ;
.byt    $0E,$04,$00,$10,$FC,$18,$10,$10; 0x1e92a $E91A 0E 04 00 10 FC 18 10 10 ;
.byt    $00,$10,$00,$18,$08,$10,$00,$30; 0x1e932 $E922 00 10 00 18 08 10 00 30 ;
.byt    $F4,$28,$00,$20,$00,$60,$00,$80; 0x1e93a $E92A F4 28 00 20 00 60 00 80 ;
.byt    $0E,$04,$10,$0E,$01,$06,$08,$03; 0x1e942 $E932 0E 04 10 0E 01 06 08 03 ;
.byt    $00,$20,$08,$18,$04,$10,$18,$18; 0x1e94a $E93A 00 20 08 18 04 10 18 18 ;
LE942                                                                          ;
.byt    $B4,$A1,$B9,$1D,$6E,$0A,$0A,$A8; 0x1e952 $E942 B4 A1 B9 1D 6E 0A 0A A8 ;
.byt    $A5,$CD,$18,$79,$FA,$E8,$85,$04; 0x1e95a $E94A A5 CD 18 79 FA E8 85 04 ;
.byt    $B9,$FB,$E8,$85,$06,$B5,$2A,$18; 0x1e962 $E952 B9 FB E8 85 06 B5 2A 18 ;
.byt    $79,$FC,$E8,$85,$05,$B9,$FD,$E8; 0x1e96a $E95A 79 FC E8 85 05 B9 FD E8 ;
.byt    $85,$07,$A5,$04,$65,$06,$90,$06; 0x1e972 $E962 85 07 A5 04 65 06 90 06 ;
.byt    $A5,$04,$49,$FF,$85,$06,$60    ; 0x1e97a $E96A A5 04 49 FF 85 06 60    ;
LE971                                                                          ;
.byt    $04,$00                        ; 0x1e981 $E971 04 00                   ;
LE973                                                                          ;
.byt    $19,$1D                        ; 0x1e983 $E973 19 1D                   ;
; ---------------------------------------------------------------------------- ;
bank7_code43                                                                   ;
lda      $CC                           ; 0x1e985 $E975 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e987 $E977 18                      ;
adc      #$09                          ; 0x1e988 $E978 69 09                   ;
sta      L0000                         ; 0x1e98a $E97A 85 00                   ;
lda      #$0D                          ; 0x1e98c $E97C A9 0D                   ; A = 0D
sta      L0002                         ; 0x1e98e $E97E 85 02                   ;
ldy      $17                           ; 0x1e990 $E980 A4 17                   ; Link's Shield Position
lda      $29                           ; 0x1e992 $E982 A5 29                   ; Link's Y Position
clc                                    ; 0x1e994 $E984 18                      ;
adc      LE971,y                       ; 0x1e995 $E985 79 71 E9                ; refer to table at $1E971
sta      $01                           ; 0x1e998 $E988 85 01                   ;
lda      LE973,y                       ; 0x1e99a $E98A B9 73 E9                ; refer to table at $1E973
sta      $03                           ; 0x1e99d $E98D 85 03                   ;
lda      L0000                         ; 0x1e99f $E98F A5 00                   ;
adc      L0002                         ; 0x1e9a1 $E991 65 02                   ;
bcc      LE99B                         ; 0x1e9a3 $E993 90 06                   ;
lda      L0000                         ; 0x1e9a5 $E995 A5 00                   ;
eor      #$FF                          ; 0x1e9a7 $E997 49 FF                   ; flip all bits
sta      L0002                         ; 0x1e9a9 $E999 85 02                   ;
LE99B                                                                          ;
rts                                    ; 0x1e9ab $E99B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table26                                                                  ;
.byt    $F8,$02                        ; 0x1e9ac $E99C F8 02                   ;
LE99E                                                                          ;
.byt    $07,$00                        ; 0x1e9ae $E99E 07 00                   ;
LE9A0                                                                          ;
.byt    $03,$03                        ; 0x1e9b0 $E9A0 03 03                   ;
; ---------------------------------------------------------------------------- ;
bank7_code44                                                                   ;
ldy      #$00                          ; 0x1e9b2 $E9A2 A0 00                   ; Y = 00
lda      $047E                         ; 0x1e9b4 $E9A4 AD 7E 04                ;
pha                                    ; 0x1e9b7 $E9A7 48                      ;
cmp      $CC                           ; 0x1e9b8 $E9A8 C5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
bcs      LE9AD                         ; 0x1e9ba $E9AA B0 01                   ;
iny                                    ; 0x1e9bc $E9AC C8                      ;
LE9AD                                                                          ;
pla                                    ; 0x1e9bd $E9AD 68                      ;
clc                                    ; 0x1e9be $E9AE 18                      ;
adc      bank7_table26,y               ; 0x1e9bf $E9AF 79 9C E9                ;
sta      L0000                         ; 0x1e9c2 $E9B2 85 00                   ;
lda      #$0E                          ; 0x1e9c4 $E9B4 A9 0E                   ; A = 0E
sta      L0002                         ; 0x1e9c6 $E9B6 85 02                   ;
ldy      #$00                          ; 0x1e9c8 $E9B8 A0 00                   ; Y = 00
lda      $80                           ; 0x1e9ca $E9BA A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$08                          ; 0x1e9cc $E9BC C9 08                   ;
beq      LE9C4                         ; 0x1e9ce $E9BE F0 04                   ;
cmp      #$09                          ; 0x1e9d0 $E9C0 C9 09                   ;
bne      LE9C5                         ; 0x1e9d2 $E9C2 D0 01                   ;
LE9C4                                                                          ;
iny                                    ; 0x1e9d4 $E9C4 C8                      ;
LE9C5                                                                          ;
lda      $0480                         ; 0x1e9d5 $E9C5 AD 80 04                ;
clc                                    ; 0x1e9d8 $E9C8 18                      ;
adc      LE99E,y                       ; 0x1e9d9 $E9C9 79 9E E9                ;
sta      $01                           ; 0x1e9dc $E9CC 85 01                   ;
lda      LE9A0,y                       ; 0x1e9de $E9CE B9 A0 E9                ;
sta      $03                           ; 0x1e9e1 $E9D1 85 03                   ;
rts                                    ; 0x1e9e3 $E9D3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table27                                                                  ;
.byt    $0E,$FF                        ; 0x1e9e4 $E9D4 0E FF                   ;
LE9D6                                                                          ;
.byt    $11,$02                        ; 0x1e9e6 $E9D6 11 02                   ;
; ---------------------------------------------------------------------------- ;
bank7_code45                                                                   ;
ldy      $9F                           ; 0x1e9e8 $E9D8 A4 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
dey                                    ; 0x1e9ea $E9DA 88                      ;
lda      $CC                           ; 0x1e9eb $E9DB A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e9ed $E9DD 18                      ;
adc      #$08                          ; 0x1e9ee $E9DE 69 08                   ;
clc                                    ; 0x1e9f0 $E9E0 18                      ;
adc      bank7_table27,y               ; 0x1e9f1 $E9E1 79 D4 E9                ; refer to table at $1E9D4
sta      L0000                         ; 0x1e9f4 $E9E4 85 00                   ;
lda      #$05                          ; 0x1e9f6 $E9E6 A9 05                   ; A = 05
sta      L0002                         ; 0x1e9f8 $E9E8 85 02                   ;
ldy      $17                           ; 0x1e9fa $E9EA A4 17                   ; Link's Shield Position
lda      $29                           ; 0x1e9fc $E9EC A5 29                   ; Link's Y Position
clc                                    ; 0x1e9fe $E9EE 18                      ;
adc      LE9D6,y                       ; 0x1e9ff $E9EF 79 D6 E9                ; refer to table at $1E9D6
sta      $01                           ; 0x1ea02 $E9F2 85 01                   ;
lda      #$0C                          ; 0x1ea04 $E9F4 A9 0C                   ; A = 0C
sta      $03                           ; 0x1ea06 $E9F6 85 03                   ;
rts                                    ; 0x1ea08 $E9F8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_idem__maybe                                                              ;
ldx      #$01                          ; 0x1ea09 $E9F9 A2 01                   ; X = 01
LE9FB                                                                          ;
lda      $04,x                         ; 0x1ea0b $E9FB B5 04                   ;
sec                                    ; 0x1ea0d $E9FD 38                      ;
sbc      L0000,x                       ; 0x1ea0e $E9FE F5 00                   ;
clc                                    ; 0x1ea10 $EA00 18                      ;
adc      $06,x                         ; 0x1ea11 $EA01 75 06                   ;
sta      $0F                           ; 0x1ea13 $EA03 85 0F                   ;
lda      L0002,x                       ; 0x1ea15 $EA05 B5 02                   ;
clc                                    ; 0x1ea17 $EA07 18                      ;
adc      $06,x                         ; 0x1ea18 $EA08 75 06                   ;
cmp      $0F                           ; 0x1ea1a $EA0A C5 0F                   ;
bcc      LEA11                         ; 0x1ea1c $EA0C 90 03                   ;
dex                                    ; 0x1ea1e $EA0E CA                      ;
bpl      LE9FB                         ; 0x1ea1f $EA0F 10 EA                   ;
LEA11                                                                          ;
ldx      $10                           ; 0x1ea21 $EA11 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1ea23 $EA13 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ldy      #$1E                          ; 0x1ea24 $EA14 A0 1E                   ; Y = 1E
bne      LEA1E                         ; 0x1ea26 $EA16 D0 06                   ;
ldy      #$1E                          ; 0x1ea28 $EA18 A0 1E                   ; Y = 1E
bne      LEA24                         ; 0x1ea2a $EA1A D0 08                   ;
ldy      #$1F                          ; 0x1ea2c $EA1C A0 1F                   ; Y = 1F
LEA1E                                                                          ;
lda      $30,x                         ; 0x1ea2e $EA1E B5 30                   ; Projectile Y Position
cmp      #$90                          ; 0x1ea30 $EA20 C9 90                   ;
bcc      LEA31                         ; 0x1ea32 $EA22 90 0D                   ;
LEA24                                                                          ;
txa                                    ; 0x1ea34 $EA24 8A                      ;
clc                                    ; 0x1ea35 $EA25 18                      ;
adc      #$07                          ; 0x1ea36 $EA26 69 07                   ;
tax                                    ; 0x1ea38 $EA28 AA                      ;
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1ea39 $EA29 20 E8 EA;
jsr      bank3_code7                   ; 0x1ea3c $EA2C 20 0C 85                ;
ldx      $10                           ; 0x1ea3f $EA2F A6 10                   ;; used as monster x register ;draw boss hp bar
LEA31                                                                          ;
rts                                    ; 0x1ea41 $EA31 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LEA32                                                                          ;
ldy      $A1,x                         ; 0x1ea42 $EA32 B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1ea44 $EA34 B9 41 6E                ;
and      #$0F                          ; 0x1ea47 $EA37 29 0F                   ; keep bits .... xxxx
sta      $09                           ; 0x1ea49 $EA39 85 09                   ;
inx                                    ; 0x1ea4b $EA3B E8                      ;
lda      $A7,x                         ; 0x1ea4c $EA3C B5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$F0                          ; 0x1ea4e $EA3E 29 F0                   ; keep bits xxxx ....
sta      $A7,x                         ; 0x1ea50 $EA40 95 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$15                          ; 0x1ea52 $EA42 A9 15                   ; A = 15
clc                                    ; 0x1ea54 $EA44 18                      ;
adc      $09                           ; 0x1ea55 $EA45 65 09                   ;
sta      L0000                         ; 0x1ea57 $EA47 85 00                   ;
lda      #$00                          ; 0x1ea59 $EA49 A9 00                   ; A = 00
sta      $01                           ; 0x1ea5b $EA4B 85 01                   ;
jsr      LE1BE                         ; 0x1ea5d $EA4D 20 BE E1                ;
lda      #$14                          ; 0x1ea60 $EA50 A9 14                   ; A = 14
clc                                    ; 0x1ea62 $EA52 18                      ;
adc      $09                           ; 0x1ea63 $EA53 65 09                   ;
sta      L0000                         ; 0x1ea65 $EA55 85 00                   ;
lda      #$00                          ; 0x1ea67 $EA57 A9 00                   ; A = 00
sta      $01                           ; 0x1ea69 $EA59 85 01                   ;
jsr      LE1BE                         ; 0x1ea6b $EA5B 20 BE E1                ;
lda      L0002                         ; 0x1ea6e $EA5E A5 02                   ;
sec                                    ; 0x1ea70 $EA60 38                      ;
sbc      #$10                          ; 0x1ea71 $EA61 E9 10                   ;
sta      $044B                         ; 0x1ea73 $EA63 8D 4B 04                ;
lda      L000E                         ; 0x1ea76 $EA66 A5 0E                   ;
sta      $DA                           ; 0x1ea78 $EA68 85 DA                   ;
lda      $0F                           ; 0x1ea7a $EA6A A5 0F                   ;
sta      $DB                           ; 0x1ea7c $EA6C 85 DB                   ;
lda      #$01                          ; 0x1ea7e $EA6E A9 01                   ; A = 01
ldy      $70,x                         ; 0x1ea80 $EA70 B4 70                   ;;hspeed (Link's horizontal velocity)
bmi      LEA75                         ; 0x1ea82 $EA72 30 01                   ;
lsr                                    ; 0x1ea84 $EA74 4A                      ;
LEA75                                                                          ;
clc                                    ; 0x1ea85 $EA75 18                      ;
adc      #$10                          ; 0x1ea86 $EA76 69 10                   ;
clc                                    ; 0x1ea88 $EA78 18                      ;
adc      $09                           ; 0x1ea89 $EA79 65 09                   ;
sta      L0000                         ; 0x1ea8b $EA7B 85 00                   ;
pha                                    ; 0x1ea8d $EA7D 48                      ;
lda      #$00                          ; 0x1ea8e $EA7E A9 00                   ; A = 00
sta      $01                           ; 0x1ea90 $EA80 85 01                   ;
jsr      LE1BE                         ; 0x1ea92 $EA82 20 BE E1                ;
pla                                    ; 0x1ea95 $EA85 68                      ;
clc                                    ; 0x1ea96 $EA86 18                      ;
adc      #$02                          ; 0x1ea97 $EA87 69 02                   ;
sta      L0000                         ; 0x1ea99 $EA89 85 00                   ;
lda      #$00                          ; 0x1ea9b $EA8B A9 00                   ; A = 00
sta      $01                           ; 0x1ea9d $EA8D 85 01                   ;
jsr      LE1BE                         ; 0x1ea9f $EA8F 20 BE E1                ;
dex                                    ; 0x1eaa2 $EA92 CA                      ;
lda      L000E                         ; 0x1eaa3 $EA93 A5 0E                   ;
sta      $DC                           ; 0x1eaa5 $EA95 85 DC                   ;
lda      $0F                           ; 0x1eaa7 $EA97 A5 0F                   ;
sta      $DD                           ; 0x1eaa9 $EA99 85 DD                   ;
lda      $03                           ; 0x1eaab $EA9B A5 03                   ;
sta      $D9                           ; 0x1eaad $EA9D 85 D9                   ;; Thunder Spell modifier ?
rts                                    ; 0x1eaaf $EA9F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table28                                                                  ;
.byt    $17,$09,$17,$09,$14,$0C,$14,$0C; 0x1eab0 $EAA0 17 09 17 09 14 0C 14 0C ;
.byt    $15,$0B,$15,$0B,$12,$0E,$12,$0E; 0x1eab8 $EAA8 15 0B 15 0B 12 0E 12 0E ;
.byt    $0E,$02,$0E,$02,$08,$08,$0E,$02; 0x1eac0 $EAB0 0E 02 0E 02 08 08 0E 02 ;
.byt    $0E,$02,$08,$08,$00,$0F,$04,$04; 0x1eac8 $EAB8 0E 02 08 08 00 0F 04 04 ;
LEAC0                                                                          ;
.byt    $E6,$E6,$FA,$FA,$00,$00,$E0,$E0; 0x1ead0 $EAC0 E6 E6 FA FA 00 00 E0 E0 ;
.byt    $EC,$EC,$F0,$F0,$FA,$FA,$E8,$E8; 0x1ead8 $EAC8 EC EC F0 F0 FA FA E8 E8 ;
.byt    $E7,$E7,$F8,$F8,$00,$EA,$E5,$E5; 0x1eae0 $EAD0 E7 E7 F8 F8 00 EA E5 E5 ;
.byt    $EB,$EB,$F0,$E1,$E0,$00,$F0,$E8; 0x1eae8 $EAD8 EB EB F0 E1 E0 00 F0 E8 ;
bank7_Tables_for_generating_pointers_in_the_6000_7FFF_range                    ;
.byt    $00,$D0,$A0,$70                ; 0x1eaf0 $EAE0 00 D0 A0 70             ;6000	60D0	61A0	6270
LEAE4                                                                          ;
.byt    $60,$60,$61,$62                ; 0x1eaf4 $EAE4 60 60 61 62             ;
; ---------------------------------------------------------------------------- ;
bank7_Generic_Collision_Test_with_Level_Objects                                ;
;bank7_Generic_Collision_Test_with_Level_Objects                               ;
;sets $e $f $2 and $3	, with Y as offset: based on location of link, below his foot	;60D3	Y=B0	54B0
;----                                                                          ;
;Collision Test with Level Objects                                             ;
;Determine Collision Tile Code                                                 ;
;                                                                              ;
;$0C = Link/Enemy Y Position Offset Index ?                                    ;
;                                                                              ;
;Output                                                                        ;
;                                                                              ;
;$03 = Row Number for Tile Code                                                ;
;$02 = Column Number for Tile Code                                             ;
;$02-$03 = Address of Tile Code in the 6000-633F range                         ;
sty      $0C                           ; 0x1eaf8 $EAE8 84 0C                   ;
lda      $4D,x                         ; 0x1eafa $EAEA B5 4D                   ; Link/Enemy X position (low byte)
clc                                    ; 0x1eafc $EAEC 18                      ;
adc      bank7_table28,y               ; 0x1eafd $EAED 79 A0 EA                ;
sta      L000E                         ; 0x1eb00 $EAF0 85 0E                   ;
lda      $3B,x                         ; 0x1eb02 $EAF2 B5 3B                   ; Link/Enemy X position (high byte)
adc      #$00                          ; 0x1eb04 $EAF4 69 00                   ;
cmp      #$04                          ; 0x1eb06 $EAF6 C9 04                   ;
bcs      LEB1D                         ; 0x1eb08 $EAF8 B0 23                   ;
tay                                    ; 0x1eb0a $EAFA A8                      ;
lda      L000E                         ; 0x1eb0b $EAFB A5 0E                   ;
lsr                                    ; 0x1eb0d $EAFD 4A                      ;
lsr                                    ; 0x1eb0e $EAFE 4A                      ;
lsr                                    ; 0x1eb0f $EAFF 4A                      ;
lsr                                    ; 0x1eb10 $EB00 4A                      ;
clc                                    ; 0x1eb11 $EB01 18                      ;
adc      bank7_Tables_for_generating_pointers_in_the_6000_7FFF_range,y; 0x1eb12 $EB02 79 E0 EA;
sta      L000E                         ; 0x1eb15 $EB05 85 0E                   ;
lda      LEAE4,y                       ; 0x1eb17 $EB07 B9 E4 EA                ;
sta      $0F                           ; 0x1eb1a $EB0A 85 0F                   ;
ldy      $0C                           ; 0x1eb1c $EB0C A4 0C                   ;
lda      $29,x                         ; 0x1eb1e $EB0E B5 29                   ; Link/Enemy Y Position
clc                                    ; 0x1eb20 $EB10 18                      ;
adc      LEAC0,y                       ; 0x1eb21 $EB11 79 C0 EA                ;
and      #$F0                          ; 0x1eb24 $EB14 29 F0                   ; keep bits xxxx ....
sta      L0002                         ; 0x1eb26 $EB16 85 02                   ;
tay                                    ; 0x1eb28 $EB18 A8                      ;
cpy      #$D0                          ; 0x1eb29 $EB19 C0 D0                   ;
bcc      Label_EB20                    ; 0x1eb2b $EB1B 90 03                   ;
LEB1D                                                                          ;
lda      #$40                          ; 0x1eb2d $EB1D A9 40                   ; A = 40
Label_EB20 = * + $0001                                                         ;
; read from side scroll tile data ? 6000 to 63FF                               ;
; $EB20:B1 0E    LDA ($0E),Y 	@ $6151 = #$40                                   ;
bit      $0EB1                         ; 0x1eb2f $EB1F 2C B1 0E                ;
sta      $03                           ; 0x1eb32 $EB22 85 03                   ;
rts                                    ; 0x1eb34 $EB24 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN1                                                                 ;
.byt    $F5                            ; 0x1eb35 $EB25 F5                      ;Tile Mapping for Slashing Sword ?
LEB26                                                                          ;
.byt    $00                            ; 0x1eb36 $EB26 00                      ;
LEB27                                                                          ;
.byt    $02,$F5,$04,$06,$F5,$08,$0A,$F5; 0x1eb37 $EB27 02 F5 04 06 F5 08 0A F5 ;
.byt    $0C,$0E,$F5,$00,$02,$F5,$10,$12; 0x1eb3f $EB2F 0C 0E F5 00 02 F5 10 12 ;
.byt    $F5,$46,$48,$F5,$4A,$4C,$F5,$00; 0x1eb47 $EB37 F5 46 48 F5 4A 4C F5 00 ;
.byt    $02,$F5,$26,$06,$28,$2A,$30,$2C; 0x1eb4f $EB3F 02 F5 26 06 28 2A 30 2C ;
.byt    $2E,$F5,$34,$36,$38,$F5,$3A,$3C; 0x1eb57 $EB47 2E F5 34 36 38 F5 3A 3C ;
.byt    $F5,$46,$48,$4E,$50,$52,$56,$58; 0x1eb5f $EB4F F5 46 48 4E 50 52 56 58 ;
.byt    $F5,$5A,$5C,$5E,$F5,$1C,$1E,$F5; 0x1eb67 $EB57 F5 5A 5C 5E F5 1C 1E F5 ;
.byt    $20,$22,$F5,$08,$0A,$F5,$0C,$24; 0x1eb6f $EB5F 20 22 F5 08 0A F5 0C 24 ;
.byt    $28,$2A,$2C,$F5,$2E,$60,$34,$36; 0x1eb77 $EB67 28 2A 2C F5 2E 60 34 36 ;
.byt    $38,$F5,$3A,$62,$F5,$14,$16,$F5; 0x1eb7f $EB6F 38 F5 3A 62 F5 14 16 F5 ;
.byt    $18,$1A,$F5,$3E,$40,$F5,$42,$44; 0x1eb87 $EB77 18 1A F5 3E 40 F5 42 44 ;
.byt    $F5,$01,$01,$F5,$03,$03,$F5,$71; 0x1eb8f $EB7F F5 01 01 F5 03 03 F5 71 ;
.byt    $73,$F5,$75,$77,$F5,$21,$23,$F5; 0x1eb97 $EB87 73 F5 75 77 F5 21 23 F5 ;
.byt    $25,$27,$F5,$81,$83,$F5,$AD,$AF; 0x1eb9f $EB8F 25 27 F5 81 83 F5 AD AF ;
LEB97                                                                          ;
.byt    $00,$06,$0C,$18,$1E,$24,$12,$30; 0x1eba7 $EB97 00 06 0C 18 1E 24 12 30 ;
.byt    $36,$54,$4E,$5A,$60,$66,$6C,$10; 0x1ebaf $EB9F 36 54 4E 5A 60 66 6C 10 ;
.byt    $0C,$00,$04,$04                ; 0x1ebb7 $EBA7 0C 00 04 04             ;
LEBAB                                                                          ;
.byt    $00,$14                        ; 0x1ebbb $EBAB 00 14                   ;
LEBAD                                                                          ;
.byt    $EC,$0C,$08                    ; 0x1ebbd $EBAD EC 0C 08                ;
bank7_Table_for_Fairy_floating_movement                                        ;
.byt    $01,$02,$03,$04,$03,$02,$01,$00; 0x1ebc0 $EBB0 01 02 03 04 03 02 01 00 ;
; ---------------------------------------------------------------------------- ;
bank7_code47                                                                   ;
lda      $C8                           ; 0x1ebc8 $EBB8 A5 C8                   ;; go outside: set $c8 to 3
and      #$06                          ; 0x1ebca $EBBA 29 06                   ; keep bits .... .xx.
bne      LEBEF                         ; 0x1ebcc $EBBC D0 31                   ; if not Swamp, skip
lda      $12                           ; 0x1ebce $EBBE A5 12                   ;; Frame Counter (ascending)
and      #$38                          ; 0x1ebd0 $EBC0 29 38                   ; keep bits ..xx x...
lsr                                    ; 0x1ebd2 $EBC2 4A                      ;
lsr                                    ; 0x1ebd3 $EBC3 4A                      ;
lsr                                    ; 0x1ebd4 $EBC4 4A                      ;
tay                                    ; 0x1ebd5 $EBC5 A8                      ;
lda      $29                           ; 0x1ebd6 $EBC6 A5 29                   ; Link's Y position
adc      #$08                          ; 0x1ebd8 $EBC8 69 08                   ;
adc      bank7_Table_for_Fairy_floating_movement,y; 0x1ebda $EBCA 79 B0 EB     ;
sta      $0208                         ; 0x1ebdd $EBCD 8D 08 02                ;
lda      $CC                           ; 0x1ebe0 $EBD0 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
adc      #$0C                          ; 0x1ebe2 $EBD2 69 0C                   ;
sta      $020B                         ; 0x1ebe4 $EBD4 8D 0B 02                ;
lda      $12                           ; 0x1ebe7 $EBD7 A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1ebe9 $EBD9 29 04                   ; keep bits .... .x..
lsr                                    ; 0x1ebeb $EBDB 4A                      ;
adc      #$68                          ; 0x1ebec $EBDC 69 68                   ;
sta      $0209                         ; 0x1ebee $EBDE 8D 09 02                ;
ldy      #$01                          ; 0x1ebf1 $EBE1 A0 01                   ; Y = 01
lda      $050C                         ; 0x1ebf3 $EBE3 AD 0C 05                ; Timer for Link being in injured state
beq      LEBEC                         ; 0x1ebf6 $EBE6 F0 04                   ;
lsr                                    ; 0x1ebf8 $EBE8 4A                      ;
and      #$03                          ; 0x1ebf9 $EBE9 29 03                   ; keep bits .... ..xx
tay                                    ; 0x1ebfb $EBEB A8                      ;
LEBEC                                                                          ;
sty      $020A                         ; 0x1ebfc $EBEC 8C 0A 02                ;
LEBEF                                                                          ;
rts                                    ; 0x1ebff $EBEF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Links_Display_Routine                                                    ;
lda      $048D                         ; 0x1ec00 $EBF0 AD 8D 04                ; related to Link's flicker after being hit ?
bne      LEBEF                         ; 0x1ec03 $EBF3 D0 FA                   ;
ldx      #$00                          ; 0x1ec05 $EBF5 A2 00                   ; X = 00
stx      $11                           ; 0x1ec07 $EBF7 86 11                   ;
lda      #$08                          ; 0x1ec09 $EBF9 A9 08                   ; A = 08
sta      $90                           ; 0x1ec0b $EBFB 85 90                   ;
ldy      #$00                          ; 0x1ec0d $EBFD A0 00                   ; Y = 00
jsr      bank7_code51                  ; 0x1ec0f $EBFF 20 7D F2                ;
LEC02                                                                          ;
ldx      $11                           ; 0x1ec12 $EC02 A6 11                   ;
lda      $29,x                         ; 0x1ec14 $EC04 B5 29                   ; Link's Y Position ( ,X ?)
cpx      #$00                          ; 0x1ec16 $EC06 E0 00                   ;
bne      LEC17                         ; 0x1ec18 $EC08 D0 0D                   ;
ldy      $0479                         ; 0x1ec1a $EC0A AC 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
beq      LEC17                         ; 0x1ec1d $EC0D F0 08                   ;
ldy      $80,x                         ; 0x1ec1f $EC0F B4 80                   ; Link's Animation Frame
cpy      #$06                          ; 0x1ec21 $EC11 C0 06                   ; 06 = Ducked
bne      LEC17                         ; 0x1ec23 $EC13 D0 02                   ;
sbc      #$04                          ; 0x1ec25 $EC15 E9 04                   ;
LEC17                                                                          ;
sta      L0000                         ; 0x1ec27 $EC17 85 00                   ;
lda      #$F8                          ; 0x1ec29 $EC19 A9 F8                   ; A = F8
sta      $0480,x                       ; 0x1ec2b $EC1B 9D 80 04                ;
lda      $13                           ; 0x1ec2e $EC1E A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      bank7_code47                  ; 0x1ec30 $EC20 D0 96                   ;
lda      $0752                         ; 0x1ec32 $EC22 AD 52 07                ;
beq      LEC40                         ; 0x1ec35 $EC25 F0 19                   ;
lda      $29                           ; 0x1ec37 $EC27 A5 29                   ; Link's Y Position
bpl      LEC40                         ; 0x1ec39 $EC29 10 15                   ;
lda      $70                           ; 0x1ec3b $EC2B A5 70                   ; Link's Walking Velocity
beq      LEC40                         ; 0x1ec3d $EC2D F0 11                   ;
lda      $12                           ; 0x1ec3f $EC2F A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1ec41 $EC31 4A                      ;
lsr                                    ; 0x1ec42 $EC32 4A                      ;
lsr                                    ; 0x1ec43 $EC33 4A                      ;
lsr                                    ; 0x1ec44 $EC34 4A                      ;
and      #$07                          ; 0x1ec45 $EC35 29 07                   ; keep bits .... .xxx
tay                                    ; 0x1ec47 $EC37 A8                      ;
lda      L0000                         ; 0x1ec48 $EC38 A5 00                   ;
sec                                    ; 0x1ec4a $EC3A 38                      ;
sbc      bank7_Table_for_Fairy_floating_movement,y; 0x1ec4b $EC3B F9 B0 EB     ;
sta      L0000                         ; 0x1ec4e $EC3E 85 00                   ;
LEC40                                                                          ;
ldy      $90,x                         ; 0x1ec50 $EC40 B4 90                   ;
lda      $80,x                         ; 0x1ec52 $EC42 B5 80                   ; Link's Animation Frame
tax                                    ; 0x1ec54 $EC44 AA                      ;
lda      LEB97,x                       ; 0x1ec55 $EC45 BD 97 EB                ;
tax                                    ; 0x1ec58 $EC48 AA                      ;
lda      $C8                           ; 0x1ec59 $EC49 A5 C8                   ;; go outside: set $c8 to 3
and      #$C0                          ; 0x1ec5b $EC4B 29 C0                   ; keep bits xx.. ....
bne      LEC62                         ; 0x1ec5d $EC4D D0 13                   ;
lda      $0752                         ; 0x1ec5f $EC4F AD 52 07                ;
pha                                    ; 0x1ec62 $EC52 48                      ;
lda      $070E                         ; 0x1ec63 $EC53 AD 0E 07                ;;setting to 1 will make link sink (duck into the chimney)
bne      LEC5B                         ; 0x1ec66 $EC56 D0 03                   ;
sta      $0752                         ; 0x1ec68 $EC58 8D 52 07                ;
LEC5B                                                                          ;
jsr      bank7_Sword_Slash_Display_maybe; 0x1ec6b $EC5B 20 7A ED               ;
pla                                    ; 0x1ec6e $EC5E 68                      ;
sta      $0752                         ; 0x1ec6f $EC5F 8D 52 07                ;
LEC62                                                                          ;
lda      $C8                           ; 0x1ec72 $EC62 A5 C8                   ;; go outside: set $c8 to 3
and      #$30                          ; 0x1ec74 $EC64 29 30                   ; keep bits ..xx ....
bne      LEC6B                         ; 0x1ec76 $EC66 D0 03                   ;
jsr      bank7_Sword_Slash_Display_maybe; 0x1ec78 $EC68 20 7A ED               ;
LEC6B                                                                          ;
ldy      #$14                          ; 0x1ec7b $EC6B A0 14                   ; Y = 14
LEC6D                                                                          ;
lda      $0209,y                       ; 0x1ec7d $EC6D B9 09 02                ;
cmp      #$F5                          ; 0x1ec80 $EC70 C9 F5                   ;
bne      LEC79                         ; 0x1ec82 $EC72 D0 05                   ;
lda      #$F8                          ; 0x1ec84 $EC74 A9 F8                   ; A = F8
sta      $0208,y                       ; 0x1ec86 $EC76 99 08 02                ;
LEC79                                                                          ;
dey                                    ; 0x1ec89 $EC79 88                      ;
dey                                    ; 0x1ec8a $EC7A 88                      ;
dey                                    ; 0x1ec8b $EC7B 88                      ;
dey                                    ; 0x1ec8c $EC7C 88                      ;
bpl      LEC6D                         ; 0x1ec8d $EC7D 10 EE                   ;
ldx      $11                           ; 0x1ec8f $EC7F A6 11                   ;
ldy      $90,x                         ; 0x1ec91 $EC81 B4 90                   ;
lda      $0203,y                       ; 0x1ec93 $EC83 B9 03 02                ;
sta      $15,x                         ; 0x1ec96 $EC86 95 15                   ;
lda      $80,x                         ; 0x1ec98 $EC88 B5 80                   ; Link's Animation Frame
cmp      #$0B                          ; 0x1ec9a $EC8A C9 0B                   ;
bne      LEC96                         ; 0x1ec9c $EC8C D0 08                   ;
lda      #$40                          ; 0x1ec9e $EC8E A9 40                   ;;A = #$40 0100_0000
sta      $020A,y                       ; 0x1eca0 $EC90 99 0A 02                ;
sta      $0216,y                       ; 0x1eca3 $EC93 99 16 02                ;
LEC96                                                                          ;
pha                                    ; 0x1eca6 $EC96 48                      ;
lda      $9F,x                         ; 0x1eca7 $EC97 B5 9F                   ;
tax                                    ; 0x1eca9 $EC99 AA                      ;
dex                                    ; 0x1ecaa $EC9A CA                      ;
pla                                    ; 0x1ecab $EC9B 68                      ;
cmp      #$05                          ; 0x1ecac $EC9C C9 05                   ; 05 = Sword Strike
bne      bank7_Strike_Ducked           ; 0x1ecae $EC9E D0 30                   ;
lda      #$32                          ; 0x1ecb0 $ECA0 A9 32                   ; A = 32 (tile for sword slash)
sta      $0219,y                       ; 0x1ecb2 $ECA2 99 19 02                ;
ldx      $11                           ; 0x1ecb5 $ECA5 A6 11                   ;
lda      $29,x                         ; 0x1ecb7 $ECA7 B5 29                   ; Link's Y Position ( ,X ?)
sta      $0218,y                       ; 0x1ecb9 $ECA9 99 18 02                ;
LECAC                                                                          ;
lda      $CC,x                         ; 0x1ecbc $ECAC B5 CC                   ;
pha                                    ; 0x1ecbe $ECAE 48                      ;
lda      $9F,x                         ; 0x1ecbf $ECAF B5 9F                   ;
tax                                    ; 0x1ecc1 $ECB1 AA                      ;
pla                                    ; 0x1ecc2 $ECB2 68                      ;
clc                                    ; 0x1ecc3 $ECB3 18                      ;
adc      #$0C                          ; 0x1ecc4 $ECB4 69 0C                   ;
clc                                    ; 0x1ecc6 $ECB6 18                      ;
adc      LEBAB,x                       ; 0x1ecc7 $ECB7 7D AB EB                ;
sta      $021B,y                       ; 0x1ecca $ECBA 99 1B 02                ;
php                                    ; 0x1eccd $ECBD 08                      ;
dex                                    ; 0x1ecce $ECBE CA                      ;
beq      LECC5                         ; 0x1eccf $ECBF F0 04                   ;
pla                                    ; 0x1ecd1 $ECC1 68                      ;
eor      #$01                          ; 0x1ecd2 $ECC2 49 01                   ; flip bits .... ...x
pha                                    ; 0x1ecd4 $ECC4 48                      ;
LECC5                                                                          ;
plp                                    ; 0x1ecd5 $ECC5 28                      ;
bcc      LECCD                         ; 0x1ecd6 $ECC6 90 05                   ;
lda      #$F8                          ; 0x1ecd8 $ECC8 A9 F8                   ; A = F8
sta      $0218,y                       ; 0x1ecda $ECCA 99 18 02                ;
LECCD                                                                          ;
jmp      LED67                         ; 0x1ecdd $ECCD 4C 67 ED                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Strike_Ducked                                                            ;
cmp      #$07                          ; 0x1ece0 $ECD0 C9 07                   ;
bne      bank7_Up_Stab                 ; 0x1ece2 $ECD2 D0 12                   ;
lda      #$54                          ; 0x1ece4 $ECD4 A9 54                   ; A = 54
sta      $0219,y                       ; 0x1ece6 $ECD6 99 19 02                ;
ldx      $11                           ; 0x1ece9 $ECD9 A6 11                   ;
lda      $29,x                         ; 0x1eceb $ECDB B5 29                   ;;y_pos (Link's y position in sideview)
clc                                    ; 0x1eced $ECDD 18                      ;
adc      #$10                          ; 0x1ecee $ECDE 69 10                   ;
sta      $0218,y                       ; 0x1ecf0 $ECE0 99 18 02                ;
jmp      LECAC                         ; 0x1ecf3 $ECE3 4C AC EC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Up_Stab                                                                  ;
cmp      #$08                          ; 0x1ecf6 $ECE6 C9 08                   ;
bne      LED02                         ; 0x1ecf8 $ECE8 D0 18                   ;
LECEA                                                                          ;
ldx      $11                           ; 0x1ecfa $ECEA A6 11                   ;
lda      $15,x                         ; 0x1ecfc $ECEC B5 15                   ;
ldy      $9F,x                         ; 0x1ecfe $ECEE B4 9F                   ;
clc                                    ; 0x1ed00 $ECF0 18                      ;
adc      LEBAD,y                       ; 0x1ed01 $ECF1 79 AD EB                ;
sta      $047E,x                       ; 0x1ed04 $ECF4 9D 7E 04                ;
ldy      $90,x                         ; 0x1ed07 $ECF7 B4 90                   ;
lda      $29,x                         ; 0x1ed09 $ECF9 B5 29                   ;;y_pos (Link's y position in sideview)
sec                                    ; 0x1ed0b $ECFB 38                      ;
sbc      #$04                          ; 0x1ed0c $ECFC E9 04                   ;
sta      $0480,x                       ; 0x1ed0e $ECFE 9D 80 04                ;
rts                                    ; 0x1ed11 $ED01 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LED02                                                                          ;
ldx      $11                           ; 0x1ed12 $ED02 A6 11                   ;
lda      $80,x                         ; 0x1ed14 $ED04 B5 80                   ;
cmp      #$09                          ; 0x1ed16 $ED06 C9 09                   ; 09 = Downstab
bne      LED1B                         ; 0x1ed18 $ED08 D0 11                   ;
jsr      LECEA                         ; 0x1ed1a $ED0A 20 EA EC                ;
clc                                    ; 0x1ed1d $ED0D 18                      ;
adc      #$25                          ; 0x1ed1e $ED0E 69 25                   ;
sta      $0480,x                       ; 0x1ed20 $ED10 9D 80 04                ;
lda      $CC,x                         ; 0x1ed23 $ED13 B5 CC                   ;
clc                                    ; 0x1ed25 $ED15 18                      ;
adc      #$10                          ; 0x1ed26 $ED16 69 10                   ;
sta      $047E,x                       ; 0x1ed28 $ED18 9D 7E 04                ;
LED1B                                                                          ;
lda      $80                           ; 0x1ed2b $ED1B A5 80                   ; Link's Animation Frame
cmp      #$0C                          ; 0x1ed2d $ED1D C9 0C                   ; 0C = Item in hand
bcc      LED66                         ; 0x1ed2f $ED1F 90 45                   ;
lda      $049D                         ; 0x1ed31 $ED21 AD 9D 04                ;;hold item above head: item id	; Related to Palace Item
asl                                    ; 0x1ed34 $ED24 0A                      ;
tay                                    ; 0x1ed35 $ED25 A8                      ;
lda      LEE7F,y                       ; 0x1ed36 $ED26 B9 7F EE                ; Tile Mapping for Item Y
sta      $0221                         ; 0x1ed39 $ED29 8D 21 02                ;
lda      LEE80,y                       ; 0x1ed3c $ED2C B9 80 EE                ;
sta      $0225                         ; 0x1ed3f $ED2F 8D 25 02                ;
lda      $29                           ; 0x1ed42 $ED32 A5 29                   ; Link's Y Position
sec                                    ; 0x1ed44 $ED34 38                      ;
sbc      #$10                          ; 0x1ed45 $ED35 E9 10                   ;
sta      $0220                         ; 0x1ed47 $ED37 8D 20 02                ;
sta      $0224                         ; 0x1ed4a $ED3A 8D 24 02                ;
lda      $CC                           ; 0x1ed4d $ED3D A5 CC                   ; Link's X Position on Screen
clc                                    ; 0x1ed4f $ED3F 18                      ;
adc      #$08                          ; 0x1ed50 $ED40 69 08                   ;
sta      $0223                         ; 0x1ed52 $ED42 8D 23 02                ;
adc      #$08                          ; 0x1ed55 $ED45 69 08                   ;
sta      $0227                         ; 0x1ed57 $ED47 8D 27 02                ;
lda      #$01                          ; 0x1ed5a $ED4A A9 01                   ; A = 01
sta      $0222                         ; 0x1ed5c $ED4C 8D 22 02                ;
lda      #$41                          ; 0x1ed5f $ED4F A9 41                   ; A = 41
sta      $0226                         ; 0x1ed61 $ED51 8D 26 02                ;
ldy      $049D                         ; 0x1ed64 $ED54 AC 9D 04                ;;hold item above head: item id	; Related to Palace Item
cpy      #$10                          ; 0x1ed67 $ED57 C0 10                   ;
bcc      LED66                         ; 0x1ed69 $ED59 90 0B                   ;
lda      LF0FC,y                       ; 0x1ed6b $ED5B B9 FC F0                ;
sta      $0222                         ; 0x1ed6e $ED5E 8D 22 02                ;
ora      #$40                          ; 0x1ed71 $ED61 09 40                   ; set bits  .x.. ....
sta      $0226                         ; 0x1ed73 $ED63 8D 26 02                ;
LED66                                                                          ;
rts                                    ; 0x1ed76 $ED66 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LED67                                                                          ;
ldx      $11                           ; 0x1ed77 $ED67 A6 11                   ;
lda      $0218,y                       ; 0x1ed79 $ED69 B9 18 02                ;
sta      $0480,x                       ; 0x1ed7c $ED6C 9D 80 04                ;
lda      $021B,y                       ; 0x1ed7f $ED6F B9 1B 02                ;
sta      $047E,x                       ; 0x1ed82 $ED72 9D 7E 04                ;
LED77     = * + $0002                                                          ;
jmp      LED02                         ; 0x1ed85 $ED75 4C 02 ED                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table29                                                                  ;
.byt    $F8,$08                        ; 0x1ed88 $ED78 F8 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_Sword_Slash_Display_maybe                                                ;
sty      $08                           ; 0x1ed8a $ED7A 84 08                   ;
stx      $09                           ; 0x1ed8c $ED7C 86 09                   ;
lda      bank7_UNKNOWN1,x              ; 0x1ed8e $ED7E BD 25 EB                ;
sta      $0201,y                       ; 0x1ed91 $ED81 99 01 02                ;
lda      LEB26,x                       ; 0x1ed94 $ED84 BD 26 EB                ;
sta      $0205,y                       ; 0x1ed97 $ED87 99 05 02                ;
lda      LEB27,x                       ; 0x1ed9a $ED8A BD 27 EB                ;
sta      $0209,y                       ; 0x1ed9d $ED8D 99 09 02                ;
lda      #$00                          ; 0x1eda0 $ED90 A9 00                   ; A = 00
sta      $01                           ; 0x1eda2 $ED92 85 01                   ;
ldx      $11                           ; 0x1eda4 $ED94 A6 11                   ;
lda      $C8,x                         ; 0x1eda6 $ED96 B5 C8                   ;
sta      $0B                           ; 0x1eda8 $ED98 85 0B                   ;
lda      $CC,x                         ; 0x1edaa $ED9A B5 CC                   ;
pha                                    ; 0x1edac $ED9C 48                      ;
lda      $9F,x                         ; 0x1edad $ED9D B5 9F                   ;
ldy      $80,x                         ; 0x1edaf $ED9F B4 80                   ;
tax                                    ; 0x1edb1 $EDA1 AA                      ;
pla                                    ; 0x1edb2 $EDA2 68                      ;
cpy      #$04                          ; 0x1edb3 $EDA3 C0 04                   ;
bne      LEDC1                         ; 0x1edb5 $EDA5 D0 1A                   ;
clc                                    ; 0x1edb7 $EDA7 18                      ;
adc      LED77,x                       ; 0x1edb8 $EDA8 7D 77 ED                ;
pha                                    ; 0x1edbb $EDAB 48                      ;
stx      $D9                           ; 0x1edbc $EDAC 86 D9                   ;; Thunder Spell modifier ?
ldx      #$00                          ; 0x1edbe $EDAE A2 00                   ; X = 00
ldy      #$00                          ; 0x1edc0 $EDB0 A0 00                   ; Y = 00
jsr      LF2D3                         ; 0x1edc2 $EDB2 20 D3 F2                ;
lsr                                    ; 0x1edc5 $EDB5 4A                      ;
lsr                                    ; 0x1edc6 $EDB6 4A                      ;
lsr                                    ; 0x1edc7 $EDB7 4A                      ;
dec      $D9                           ; 0x1edc8 $EDB8 C6 D9                   ;; Thunder Spell modifier ?
bne      LEDBE                         ; 0x1edca $EDBA D0 02                   ;
lsr                                    ; 0x1edcc $EDBC 4A                      ;
lsr                                    ; 0x1edcd $EDBD 4A                      ;
LEDBE                                                                          ;
sta      $0B                           ; 0x1edce $EDBE 85 0B                   ;
pla                                    ; 0x1edd0 $EDC0 68                      ;
LEDC1                                                                          ;
sta      L0002                         ; 0x1edd1 $EDC1 85 02                   ;
ldx      $11                           ; 0x1edd3 $EDC3 A6 11                   ;
lda      $9F,x                         ; 0x1edd5 $EDC5 B5 9F                   ;
ldx      $09                           ; 0x1edd7 $EDC7 A6 09                   ;
ldy      $08                           ; 0x1edd9 $EDC9 A4 08                   ;
lsr                                    ; 0x1eddb $EDCB 4A                      ;
bne      LEDE7                         ; 0x1eddc $EDCC D0 19                   ;
asl      $0B                           ; 0x1edde $EDCE 06 0B                   ;
lda      bank7_UNKNOWN1,x              ; 0x1ede0 $EDD0 BD 25 EB                ;
sta      $0209,y                       ; 0x1ede3 $EDD3 99 09 02                ;
lda      LEB27,x                       ; 0x1ede6 $EDD6 BD 27 EB                ;
sta      $0201,y                       ; 0x1ede9 $EDD9 99 01 02                ;
lda      L0002                         ; 0x1edec $EDDC A5 02                   ;
clc                                    ; 0x1edee $EDDE 18                      ;
adc      #$08                          ; 0x1edef $EDDF 69 08                   ;
sta      L0002                         ; 0x1edf1 $EDE1 85 02                   ;
lda      #$40                          ; 0x1edf3 $EDE3 A9 40                   ; A = 40
sta      $01                           ; 0x1edf5 $EDE5 85 01                   ;
LEDE7                                                                          ;
ldx      $11                           ; 0x1edf7 $EDE7 A6 11                   ;
lda      $050C,x                       ; 0x1edf9 $EDE9 BD 0C 05                ;
beq      LEDF1                         ; 0x1edfc $EDEC F0 03                   ;
lsr                                    ; 0x1edfe $EDEE 4A                      ;
and      #$03                          ; 0x1edff $EDEF 29 03                   ; keep bits .... ..xx
LEDF1                                                                          ;
ora      $01                           ; 0x1ee01 $EDF1 05 01                   ;
ora      $0752,x                       ; 0x1ee03 $EDF3 1D 52 07                ;
ldx      $B5                           ; 0x1ee06 $EDF6 A6 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
dex                                    ; 0x1ee08 $EDF8 CA                      ;
beq      LEDFD                         ; 0x1ee09 $EDF9 F0 02                   ;
ora      #$20                          ; 0x1ee0b $EDFB 09 20                   ; set bits  ..x. ....
LEDFD                                                                          ;
sta      $0202,y                       ; 0x1ee0d $EDFD 99 02 02                ;
sta      $0206,y                       ; 0x1ee10 $EE00 99 06 02                ;
sta      $020A,y                       ; 0x1ee13 $EE03 99 0A 02                ;
sta      $020E,y                       ; 0x1ee16 $EE06 99 0E 02                ;
lda      L0000                         ; 0x1ee19 $EE09 A5 00                   ;
sta      $0200,y                       ; 0x1ee1b $EE0B 99 00 02                ;
sta      $0204,y                       ; 0x1ee1e $EE0E 99 04 02                ;
sta      $0208,y                       ; 0x1ee21 $EE11 99 08 02                ;
clc                                    ; 0x1ee24 $EE14 18                      ;
adc      #$10                          ; 0x1ee25 $EE15 69 10                   ;
sta      L0000                         ; 0x1ee27 $EE17 85 00                   ;
lda      #$08                          ; 0x1ee29 $EE19 A9 08                   ; A = 08
sta      $0A                           ; 0x1ee2b $EE1B 85 0A                   ;
ldx      #$03                          ; 0x1ee2d $EE1D A2 03                   ; X = 03
LEE1F                                                                          ;
lda      $0A                           ; 0x1ee2f $EE1F A5 0A                   ;
and      $0B                           ; 0x1ee31 $EE21 25 0B                   ;
beq      LEE2A                         ; 0x1ee33 $EE23 F0 05                   ;
lda      #$F8                          ; 0x1ee35 $EE25 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1ee37 $EE27 99 00 02                ;
LEE2A                                                                          ;
iny                                    ; 0x1ee3a $EE2A C8                      ;
iny                                    ; 0x1ee3b $EE2B C8                      ;
iny                                    ; 0x1ee3c $EE2C C8                      ;
iny                                    ; 0x1ee3d $EE2D C8                      ;
lsr      $0A                           ; 0x1ee3e $EE2E 46 0A                   ;
dex                                    ; 0x1ee40 $EE30 CA                      ;
bne      LEE1F                         ; 0x1ee41 $EE31 D0 EC                   ;
ldy      $08                           ; 0x1ee43 $EE33 A4 08                   ;
ldx      $09                           ; 0x1ee45 $EE35 A6 09                   ;
lda      L0002                         ; 0x1ee47 $EE37 A5 02                   ;
sta      $0203,y                       ; 0x1ee49 $EE39 99 03 02                ;
clc                                    ; 0x1ee4c $EE3C 18                      ;
adc      #$08                          ; 0x1ee4d $EE3D 69 08                   ;
sta      $0207,y                       ; 0x1ee4f $EE3F 99 07 02                ;
clc                                    ; 0x1ee52 $EE42 18                      ;
adc      #$08                          ; 0x1ee53 $EE43 69 08                   ;
sta      $020B,y                       ; 0x1ee55 $EE45 99 0B 02                ;
inx                                    ; 0x1ee58 $EE48 E8                      ;
inx                                    ; 0x1ee59 $EE49 E8                      ;
inx                                    ; 0x1ee5a $EE4A E8                      ;
tya                                    ; 0x1ee5b $EE4B 98                      ;
clc                                    ; 0x1ee5c $EE4C 18                      ;
adc      #$0C                          ; 0x1ee5d $EE4D 69 0C                   ;
tay                                    ; 0x1ee5f $EE4F A8                      ;
rts                                    ; 0x1ee60 $EE50 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_item_sprites_map_to_graphic_image                                  ;
;this means: tile code of the item                                             ;
;the item has a tile code (a number) associated which is used to index in the graphics table (or something);
.byt    $86                            ; 0x1ee61 $EE51 86                      ;
LEE52                                                                          ;
.byt    $86,$88,$88,$DC,$DE,$AC,$AC,$E4; 0x1ee62 $EE52 86 88 88 DC DE AC AC E4 ;
.byt    $E6,$E8,$EA,$C0,$C2,$C0,$C4,$BA; 0x1ee6a $EE5A E6 E8 EA C0 C2 C0 C4 BA ;
.byt    $BC,$C6,$C8,$CA,$CC,$50,$50,$4E; 0x1ee72 $EE62 BC C6 C8 CA CC 50 50 4E ;
.byt    $4E,$7C,$7E,$80,$82,$B6,$B8,$BB; 0x1ee7a $EE6A 4E 7C 7E 80 82 B6 B8 BB ;
.byt    $BD,$BF,$C1,$C3,$C3,$B2,$B2,$B4; 0x1ee82 $EE72 BD BF C1 C3 C3 B2 B2 B4 ;
.byt    $B4,$24,$24,$B0,$B0            ; 0x1ee8a $EE7A B4 24 24 B0 B0          ;
LEE7F                                                                          ;
.byt    $8C                            ; 0x1ee8f $EE7F 8C                      ;
; Tile Mappings for Items (2E bytes)                                           ;
;                                                                              ;
; 8C F5	Candle                                                                 ;
; 8E F5	Glove                                                                  ;
; 90 F5	Raft                                                                   ;
; 92 F5	Boot                                                                   ;
; 94 F5	Flute                                                                  ;
; 96 F5	Cross                                                                  ;
; 98 F5	Hammer                                                                 ;
; 9A F5	Magic Key                                                              ;
; 66 F5	Key                                                                    ;
; 00 F5	Invalid Index                                                          ;
; 72 F5	Experience Bag - 50 pts                                                ;
; 72 F5	Experience Bag - 100 pts                                               ;
; 72 F5	Experience Bag - 200 pts                                               ;
; 72 F5	Experience Bag - 500 pts                                               ;
; 83 83	Magic Container                                                        ;
; 81 81	Heart Container                                                        ;
; 8A F5	Blue Jar                                                               ;
; 8A F5	Red Jar                                                                ;
; A8 F5	Link Doll                                                              ;
; 31 31	Medicine                                                               ;
; 2F 2F	Trophy                                                                 ;
; 31 31	Kidnapped Child                                                        ;
; 67 67	Invalid Index ?                                                        ;
LEE80                                                                          ;
.byt    $F5,$8E,$F5,$90,$F5,$92,$F5,$94; 0x1ee90 $EE80 F5 8E F5 90 F5 92 F5 94 ;
.byt    $F5,$96,$F5,$98,$F5,$9A,$F5,$66; 0x1ee98 $EE88 F5 96 F5 98 F5 9A F5 66 ;
.byt    $F5,$00,$F5,$72,$F5,$72,$F5,$72; 0x1eea0 $EE90 F5 00 F5 72 F5 72 F5 72 ;
.byt    $F5,$72,$F5,$83,$83,$81,$81,$8A; 0x1eea8 $EE98 F5 72 F5 83 83 81 81 8A ;
.byt    $F5,$8A,$F5,$A8,$F5,$31,$31,$2F; 0x1eeb0 $EEA0 F5 8A F5 A8 F5 31 31 2F ;
.byt    $2F,$31,$31,$67,$67,$00,$02,$02; 0x1eeb8 $EEA8 2F 31 31 67 67 00 02 02 ;
.byt    $00,$00                        ; 0x1eec0 $EEB0 00 00                   ;
LEEB2                                                                          ;
.byt    $C0,$18,$90,$11,$98,$9D,$0E,$04; 0x1eec2 $EEB2 C0 18 90 11 98 9D 0E 04 ;
.byt    $B5,$91,$48,$69,$0F,$95,$91,$20; 0x1eeca $EEBA B5 91 48 69 0F 95 91 20 ;
.byt    $11,$EF,$68,$95,$91,$A9,$00,$9D; 0x1eed2 $EEC2 11 EF 68 95 91 A9 00 9D ;
.byt    $0E,$04,$B4,$A1,$B9,$1D,$6E,$48; 0x1eeda $EECA 0E 04 B4 A1 B9 1D 6E 48 ;
.byt    $B5,$2A,$85,$00,$A5,$CD,$85,$01; 0x1eee2 $EED2 B5 2A 85 00 A5 CD 85 01 ;
.byt    $A9,$02,$85,$02,$A5,$12,$0A,$0A; 0x1eeea $EEDA A9 02 85 02 A5 12 0A 0A ;
.byt    $0A,$0A,$0A,$29,$80,$09,$01,$85; 0x1eef2 $EEE2 0A 0A 0A 29 80 09 01 85 ;
.byt    $03,$B4,$91,$BD,$04,$05,$4A,$4A; 0x1eefa $EEEA 03 B4 91 BD 04 05 4A 4A ;
.byt    $4A,$AA,$BD,$AD,$EE,$AA,$20,$16; 0x1ef02 $EEF2 4A AA BD AD EE AA 20 16 ;
.byt    $F2,$20,$08,$EF,$68,$10,$05,$CA; 0x1ef0a $EEFA F2 20 08 EF 68 10 05 CA ;
.byt    $CA                            ; 0x1ef12 $EF02 CA                      ;
; ---------------------------------------------------------------------------- ;
bank7_code49                                                                   ;
jsr      LF216                         ; 0x1ef13 $EF03 20 16 F2                ;
ldx      $10                           ; 0x1ef16 $EF06 A6 10                   ;; used as monster x register ;draw boss hp bar
LEF08                                                                          ;
lda      $01FE,y                       ; 0x1ef18 $EF08 B9 FE 01                ;
ora      #$40                          ; 0x1ef1b $EF0B 09 40                   ; set bits .x.. ....
sta      $01FE,y                       ; 0x1ef1d $EF0D 99 FE 01                ;
rts                                    ; 0x1ef20 $EF10 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Display                                                                  ;
lda      $040E,x                       ; 0x1ef21 $EF11 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LEF19                         ; 0x1ef24 $EF14 F0 03                   ;
dec      $040E,x                       ; 0x1ef26 $EF16 DE 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
LEF19                                                                          ;
lda      $2A,x                         ; 0x1ef29 $EF19 B5 2A                   ; Enemy Y Position
sta      L0000                         ; 0x1ef2b $EF1B 85 00                   ;
lda      $CD                           ; 0x1ef2d $EF1D A5 CD                   ;
sta      $01                           ; 0x1ef2f $EF1F 85 01                   ;
lda      $60,x                         ; 0x1ef31 $EF21 B5 60                   ;; Enemy facing direction
sta      L0002                         ; 0x1ef33 $EF23 85 02                   ;
lda      #$00                          ; 0x1ef35 $EF25 A9 00                   ; A = 00
sta      $03                           ; 0x1ef37 $EF27 85 03                   ;
lda      $A1,x                         ; 0x1ef39 $EF29 B5 A1                   ; Enemy Code
tay                                    ; 0x1ef3b $EF2B A8                      ;
lda      $6DD5,y                       ; 0x1ef3c $EF2C B9 D5 6D                ;
asl                                    ; 0x1ef3f $EF2F 0A                      ;
rol      $03                           ; 0x1ef40 $EF30 26 03                   ;
asl                                    ; 0x1ef42 $EF32 0A                      ;
rol      $03                           ; 0x1ef43 $EF33 26 03                   ;
tya                                    ; 0x1ef45 $EF35 98                      ;
asl                                    ; 0x1ef46 $EF36 0A                      ;
tay                                    ; 0x1ef47 $EF37 A8                      ;
lda      $6E65,y                       ; 0x1ef48 $EF38 B9 65 6E                ;
sta      L000E                         ; 0x1ef4b $EF3B 85 0E                   ;
lda      $6E66,y                       ; 0x1ef4d $EF3D B9 66 6E                ;
sta      $0F                           ; 0x1ef50 $EF40 85 0F                   ;
ldy      $91,x                         ; 0x1ef52 $EF42 B4 91                   ;
jmp      (L000E)                       ; 0x1ef54 $EF44 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Elevator                                                 ;
ldx      #$06                          ; 0x1ef57 $EF47 A2 06                   ; X = 06
jsr      LF216                         ; 0x1ef59 $EF49 20 16 F2                ;
dex                                    ; 0x1ef5c $EF4C CA                      ;
dex                                    ; 0x1ef5d $EF4D CA                      ;
iny                                    ; 0x1ef5e $EF4E C8                      ;
iny                                    ; 0x1ef5f $EF4F C8                      ;
iny                                    ; 0x1ef60 $EF50 C8                      ;
iny                                    ; 0x1ef61 $EF51 C8                      ;
lda      L0000                         ; 0x1ef62 $EF52 A5 00                   ;
clc                                    ; 0x1ef64 $EF54 18                      ;
adc      #$18                          ; 0x1ef65 $EF55 69 18                   ;
sta      L0000                         ; 0x1ef67 $EF57 85 00                   ;
jsr      LF216                         ; 0x1ef69 $EF59 20 16 F2                ;
lda      L0000                         ; 0x1ef6c $EF5C A5 00                   ;
sec                                    ; 0x1ef6e $EF5E 38                      ;
sbc      #$10                          ; 0x1ef6f $EF5F E9 10                   ;
sta      $0200,y                       ; 0x1ef71 $EF61 99 00 02                ;
sec                                    ; 0x1ef74 $EF64 38                      ;
sbc      #$28                          ; 0x1ef75 $EF65 E9 28                   ;
sta      $01F4,y                       ; 0x1ef77 $EF67 99 F4 01                ;
lda      $01                           ; 0x1ef7a $EF6A A5 01                   ;
clc                                    ; 0x1ef7c $EF6C 18                      ;
adc      #$10                          ; 0x1ef7d $EF6D 69 10                   ;
sta      $01F7,y                       ; 0x1ef7f $EF6F 99 F7 01                ;
sta      $0203,y                       ; 0x1ef82 $EF72 99 03 02                ;
ldx      #$AC                          ; 0x1ef85 $EF75 A2 AC                   ; X = AC
lda      $C9                           ; 0x1ef87 $EF77 A5 C9                   ;
and      #$02                          ; 0x1ef89 $EF79 29 02                   ; keep bits .... ..x.
beq      LEF7F                         ; 0x1ef8b $EF7B F0 02                   ;
ldx      #$F5                          ; 0x1ef8d $EF7D A2 F5                   ; X = F5
LEF7F                                                                          ;
txa                                    ; 0x1ef8f $EF7F 8A                      ;
sta      $01F5,y                       ; 0x1ef90 $EF80 99 F5 01                ;
sta      $0201,y                       ; 0x1ef93 $EF83 99 01 02                ;
lda      #$01                          ; 0x1ef96 $EF86 A9 01                   ; A = 01
sta      $01F6,y                       ; 0x1ef98 $EF88 99 F6 01                ;
sta      $0202,y                       ; 0x1ef9b $EF8B 99 02 02                ;
ldx      $10                           ; 0x1ef9e $EF8E A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1efa0 $EF90 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Bot_and_Bit                                              ;
lda      #$02                          ; 0x1efa1 $EF91 A9 02                   ; A = 02
sta      L0002                         ; 0x1efa3 $EF93 85 02                   ;
lda      $81,x                         ; 0x1efa5 $EF95 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$26                          ; 0x1efa7 $EF97 A2 26                   ; X = 26
cmp      #$00                          ; 0x1efa9 $EF99 C9 00                   ;
beq      LEF9F                         ; 0x1efab $EF9B F0 02                   ;
inx                                    ; 0x1efad $EF9D E8                      ;
inx                                    ; 0x1efae $EF9E E8                      ;
LEF9F                                                                          ;
jsr      LF216                         ; 0x1efaf $EF9F 20 16 F2                ;
tya                                    ; 0x1efb2 $EFA2 98                      ;
tax                                    ; 0x1efb3 $EFA3 AA                      ;
ldy      $10                           ; 0x1efb4 $EFA4 A4 10                   ;; used as monster x register ;draw boss hp bar
lda      $AF,y                         ; 0x1efb6 $EFA6 B9 AF 00                ;
beq      LEFB7                         ; 0x1efb9 $EFA9 F0 0C                   ;
lda      $12                           ; 0x1efbb $EFAB A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1efbd $EFAD 29 04                   ; keep bits .... .x..
bne      LEFB7                         ; 0x1efbf $EFAF D0 06                   ;
inc      $01FB,x                       ; 0x1efc1 $EFB1 FE FB 01                ;
dec      $01FF,x                       ; 0x1efc4 $EFB4 DE FF 01                ;
LEFB7                                                                          ;
lda      $01FA,x                       ; 0x1efc7 $EFB7 BD FA 01                ;
ora      #$40                          ; 0x1efca $EFBA 09 40                   ; set  bits .x.. ....
sta      $01FE,x                       ; 0x1efcc $EFBC 9D FE 01                ;
ldx      $10                           ; 0x1efcf $EFBF A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1efd1 $EFC1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Myu                                                      ;
lda      #$02                          ; 0x1efd2 $EFC2 A9 02                   ; A = 02
sta      L0002                         ; 0x1efd4 $EFC4 85 02                   ;
lda      $81,x                         ; 0x1efd6 $EFC6 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$2A                          ; 0x1efd8 $EFC8 A2 2A                   ; A = 2A
asl                                    ; 0x1efda $EFCA 0A                      ;
beq      LEFCF                         ; 0x1efdb $EFCB F0 02                   ;
inx                                    ; 0x1efdd $EFCD E8                      ;
inx                                    ; 0x1efde $EFCE E8                      ;
LEFCF                                                                          ;
jmp      bank7_code49                  ; 0x1efdf $EFCF 4C 03 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_unknown                                                  ;
lda      #$02                          ; 0x1efe2 $EFD2 A9 02                   ; A = 02
sta      L0002                         ; 0x1efe4 $EFD4 85 02                   ;
lda      $AF,x                         ; 0x1efe6 $EFD6 B5 AF                   ;; Various enemy state variables
ldx      #$20                          ; 0x1efe8 $EFD8 A2 20                   ; X = 20
cmp      #$00                          ; 0x1efea $EFDA C9 00                   ;
beq      LEFE6                         ; 0x1efec $EFDC F0 08                   ;
ldx      #$22                          ; 0x1efee $EFDE A2 22                   ; X = 22
cmp      #$08                          ; 0x1eff0 $EFE0 C9 08                   ;
bcc      LEFE6                         ; 0x1eff2 $EFE2 90 02                   ;
ldx      #$24                          ; 0x1eff4 $EFE4 A2 24                   ; X = 24
LEFE6                                                                          ;
jmp      LF0C6                         ; 0x1eff6 $EFE6 4C C6 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LEFE9                                                                          ;
.byt    $03                            ; 0x1eff9 $EFE9 03                      ;
.byt    $03                            ; 0x1effa $EFEA 03                      ;
.byt    $02                            ; 0x1effb $EFEB 02                      ;
.byt    $02                            ; 0x1effc $EFEC 02                      ;
ora      ($01,x)                       ; 0x1effd $EFED 01 01                   ;
brk                                    ; 0x1efff $EFEF 00                      ;
brk                                    ; 0x1f000 $EFF0 00                      ;
brk                                    ; 0x1f001 $EFF1 00                      ;
bank7_Enemy_Routines2_Moa                                                      ;
lda      #$01                          ; 0x1f002 $EFF2 A9 01                   ; A = 01
sta      L0002                         ; 0x1f004 $EFF4 85 02                   ;
lda      $71,x                         ; 0x1f006 $EFF6 B5 71                   ;; Enemy X Velocity
bpl      LEFFC                         ; 0x1f008 $EFF8 10 02                   ;
inc      L0002                         ; 0x1f00a $EFFA E6 02                   ;
LEFFC                                                                          ;
ldx      #$1E                          ; 0x1f00c $EFFC A2 1E                   ; X = 1E
lda      $12                           ; 0x1f00e $EFFE A5 12                   ;; Frame Counter (ascending)
and      #$10                          ; 0x1f010 $F000 29 10                   ; keep bits ...x ....
bne      LF00A                         ; 0x1f012 $F002 D0 06                   ;
lda      $03                           ; 0x1f014 $F004 A5 03                   ;
ora      #$80                          ; 0x1f016 $F006 09 80                   ; set  bits x... ....
sta      $03                           ; 0x1f018 $F008 85 03                   ;
LF00A                                                                          ;
jsr      LF216                         ; 0x1f01a $F00A 20 16 F2                ;
ldx      $10                           ; 0x1f01d $F00D A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      $91,x                         ; 0x1f01f $F00F B4 91                   ;
lda      $71,x                         ; 0x1f021 $F011 B5 71                   ;; Enemy X Velocity
bpl      LF017                         ; 0x1f023 $F013 10 02                   ;
eor      #$FF                          ; 0x1f025 $F015 49 FF                   ;;Flip Bits:1111_1111
LF017                                                                          ;
lsr                                    ; 0x1f027 $F017 4A                      ;
lsr                                    ; 0x1f028 $F018 4A                      ;
tax                                    ; 0x1f029 $F019 AA                      ;
lda      $0207,y                       ; 0x1f02a $F01A B9 07 02                ;
sec                                    ; 0x1f02d $F01D 38                      ;
sbc      LEFE9,x                       ; 0x1f02e $F01E FD E9 EF                ;
sta      $0207,y                       ; 0x1f031 $F021 99 07 02                ;
ldx      $10                           ; 0x1f034 $F024 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f036 $F026 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Deeler                                                   ;
lda      $03                           ; 0x1f037 $F027 A5 03                   ;
ldy      $AF,x                         ; 0x1f039 $F029 B4 AF                   ;; Various enemy state variables
bne      LF02F                         ; 0x1f03b $F02B D0 02                   ;
ora      #$80                          ; 0x1f03d $F02D 09 80                   ; set  bits x... .... (vertical flip bit)
LF02F                                                                          ;
cpy      #$00                          ; 0x1f03f $F02F C0 00                   ;
bpl      LF037                         ; 0x1f041 $F031 10 04                   ;
inc      L0000                         ; 0x1f043 $F033 E6 00                   ;
inc      L0000                         ; 0x1f045 $F035 E6 00                   ;
LF037                                                                          ;
sta      $03                           ; 0x1f047 $F037 85 03                   ;
ldy      $91,x                         ; 0x1f049 $F039 B4 91                   ;
lda      $12                           ; 0x1f04b $F03B A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1f04d $F03D 4A                      ;
lsr                                    ; 0x1f04e $F03E 4A                      ;
lsr                                    ; 0x1f04f $F03F 4A                      ;
and      #$01                          ; 0x1f050 $F040 29 01                   ; keep bits .... ...x
tax                                    ; 0x1f052 $F042 AA                      ;
inx                                    ; 0x1f053 $F043 E8                      ;
stx      L0002                         ; 0x1f054 $F044 86 02                   ;
ldx      #$10                          ; 0x1f056 $F046 A2 10                   ; X = 10
jsr      LF0C6                         ; 0x1f058 $F048 20 C6 F0                ;
lda      $C9                           ; 0x1f05b $F04B A5 C9                   ;
and      #$0C                          ; 0x1f05d $F04D 29 0C                   ; keep bits .... xx..
bne      LF0A7                         ; 0x1f05f $F04F D0 56                   ;
lda      $AF,x                         ; 0x1f061 $F051 B5 AF                   ;; Various enemy state variables
bmi      LF0A7                         ; 0x1f063 $F053 30 52                   ;
ldy      $91,x                         ; 0x1f065 $F055 B4 91                   ;
lda      $2A,x                         ; 0x1f067 $F057 B5 2A                   ; Enemy Y position
sec                                    ; 0x1f069 $F059 38                      ;
sbc      $05DD                         ; 0x1f06a $F05A ED DD 05                ;
beq      LF0A7                         ; 0x1f06d $F05D F0 48                   ;
ldy      #$FF                          ; 0x1f06f $F05F A0 FF                   ; Y = FF
LF061                                                                          ;
iny                                    ; 0x1f071 $F061 C8                      ;
sec                                    ; 0x1f072 $F062 38                      ;
sbc      #$03                          ; 0x1f073 $F063 E9 03                   ;
bpl      LF061                         ; 0x1f075 $F065 10 FA                   ;
sty      L0000                         ; 0x1f077 $F067 84 00                   ;
ldy      $91,x                         ; 0x1f079 $F069 B4 91                   ;
lda      $12                           ; 0x1f07b $F06B A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1f07d $F06D 4A                      ;
lda      L0000                         ; 0x1f07e $F06E A5 00                   ;
bcc      LF074                         ; 0x1f080 $F070 90 02                   ;
lda      #$00                          ; 0x1f082 $F072 A9 00                   ; A = 00
LF074                                                                          ;
lsr                                    ; 0x1f084 $F074 4A                      ;
clc                                    ; 0x1f085 $F075 18                      ;
adc      $05DD                         ; 0x1f086 $F076 6D DD 05                ;
sta      $0208,y                       ; 0x1f089 $F079 99 08 02                ;
adc      L0000                         ; 0x1f08c $F07C 65 00                   ;
sta      $020C,y                       ; 0x1f08e $F07E 99 0C 02                ;
adc      L0000                         ; 0x1f091 $F081 65 00                   ;
sta      $0210,y                       ; 0x1f093 $F083 99 10 02                ;
lda      $CD                           ; 0x1f096 $F086 A5 CD                   ;
sta      $020B,y                       ; 0x1f098 $F088 99 0B 02                ;
sta      $020F,y                       ; 0x1f09b $F08B 99 0F 02                ;
sta      $0213,y                       ; 0x1f09e $F08E 99 13 02                ;
lda      #$01                          ; 0x1f0a1 $F091 A9 01                   ; A = 01
sta      $020A,y                       ; 0x1f0a3 $F093 99 0A 02                ;
sta      $020E,y                       ; 0x1f0a6 $F096 99 0E 02                ;
sta      $0212,y                       ; 0x1f0a9 $F099 99 12 02                ;
lda      #$BE                          ; 0x1f0ac $F09C A9 BE                   ; A = BE
sta      $0209,y                       ; 0x1f0ae $F09E 99 09 02                ;
sta      $020D,y                       ; 0x1f0b1 $F0A1 99 0D 02                ;
sta      $0211,y                       ; 0x1f0b4 $F0A4 99 11 02                ;
LF0A7                                                                          ;
rts                                    ; 0x1f0b7 $F0A7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Octorok                                                  ;
lda      L0000                         ; 0x1f0b8 $F0A8 A5 00                   ;
cmp      #$B5                          ; 0x1f0ba $F0AA C9 B5                   ;
bcc      LF0B5                         ; 0x1f0bc $F0AC 90 07                   ;
lda      $03                           ; 0x1f0be $F0AE A5 03                   ;
ora      $0753                         ; 0x1f0c0 $F0B0 0D 53 07                ;
sta      $03                           ; 0x1f0c3 $F0B3 85 03                   ;
LF0B5                                                                          ;
lda      #$12                          ; 0x1f0c5 $F0B5 A9 12                   ; A = 12
bne      LF0BB                         ; 0x1f0c7 $F0B7 D0 02                   ;
bank7_Enemy_Routines2_BagoBago                                                 ;
lda      #$0C                          ; 0x1f0c9 $F0B9 A9 0C                   ; A = 0C
LF0BB                                                                          ;
sta      $05                           ; 0x1f0cb $F0BB 85 05                   ;
lda      $12                           ; 0x1f0cd $F0BD A5 12                   ; Permanent Frame Counter
and      #$08                          ; 0x1f0cf $F0BF 29 08                   ; keep bits .... x...
lsr                                    ; 0x1f0d1 $F0C1 4A                      ;
lsr                                    ; 0x1f0d2 $F0C2 4A                      ;
adc      $05                           ; 0x1f0d3 $F0C3 65 05                   ;
tax                                    ; 0x1f0d5 $F0C5 AA                      ;
LF0C6                                                                          ;
jsr      LF216                         ; 0x1f0d6 $F0C6 20 16 F2                ;
ldx      $10                           ; 0x1f0d9 $F0C9 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f0db $F0CB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
sta      $05                           ; 0x1f0dc $F0CC 85 05                   ;
lda      $12                           ; 0x1f0de $F0CE A5 12                   ; Permanent Frame Counter
and      #$08                          ; 0x1f0e0 $F0D0 29 08                   ; keep bits .... x...
lsr                                    ; 0x1f0e2 $F0D2 4A                      ;
lsr                                    ; 0x1f0e3 $F0D3 4A                      ;
adc      $05                           ; 0x1f0e4 $F0D4 65 05                   ;
tax                                    ; 0x1f0e6 $F0D6 AA                      ;
LF0D7                                                                          ;
jsr      LF1F4                         ; 0x1f0e7 $F0D7 20 F4 F1                ;
ldx      $10                           ; 0x1f0ea $F0DA A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f0ec $F0DC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Fairy                                                    ;
lda      $C9                           ; 0x1f0ed $F0DD A5 C9                   ;
and      #$08                          ; 0x1f0ef $F0DF 29 08                   ; keep bits .... x...
bne      LF10B                         ; 0x1f0f1 $F0E1 D0 28                   ;
lda      $12                           ; 0x1f0f3 $F0E3 A5 12                   ;; Frame Counter (ascending)
and      #$38                          ; 0x1f0f5 $F0E5 29 38                   ; keep bits ..xx x...
lsr                                    ; 0x1f0f7 $F0E7 4A                      ;
lsr                                    ; 0x1f0f8 $F0E8 4A                      ;
lsr                                    ; 0x1f0f9 $F0E9 4A                      ;
tax                                    ; 0x1f0fa $F0EA AA                      ;
lda      L0000                         ; 0x1f0fb $F0EB A5 00                   ;
adc      #$08                          ; 0x1f0fd $F0ED 69 08                   ;
adc      bank7_Table_for_Fairy_floating_movement,x; 0x1f0ff $F0EF 7D B0 EB     ;
sta      $0200,y                       ; 0x1f102 $F0F2 99 00 02                ;
ldx      $10                           ; 0x1f105 $F0F5 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $01                           ; 0x1f107 $F0F7 A5 01                   ;
sta      $0203,y                       ; 0x1f109 $F0F9 99 03 02                ;
LF0FC                                                                          ;
lda      #$01                          ; 0x1f10c $F0FC A9 01                   ; A = 01
sta      $0202,y                       ; 0x1f10e $F0FE 99 02 02                ;
lda      $12                           ; 0x1f111 $F101 A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1f113 $F103 29 04                   ; keep bits .... .x..
lsr                                    ; 0x1f115 $F105 4A                      ;
adc      #$68                          ; 0x1f116 $F106 69 68                   ;
sta      $0201,y                       ; 0x1f118 $F108 99 01 02                ;
LF10B                                                                          ;
rts                                    ; 0x1f11b $F10B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table31                                                                  ;
.byt    $03,$02,$00,$01,$01,$01        ; 0x1f11c $F10C 03 02 00 01 01 01       ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_RedJar                                                   ;
lda      #$02                          ; 0x1f122 $F112 A9 02                   ; A = 02
sta      L0002                         ; 0x1f124 $F114 85 02                   ;
lda      $AF,x                         ; 0x1f126 $F116 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1f128 $F118 29 7F                   ; keep bits .xxx xxxx
tax                                    ; 0x1f12a $F11A AA                      ;
pha                                    ; 0x1f12b $F11B 48                      ;
cpx      #$10                          ; 0x1f12c $F11C E0 10                   ;
bcc      LF125                         ; 0x1f12e $F11E 90 05                   ;
lda      LF0FC,x                       ; 0x1f130 $F120 BD FC F0                ;
sta      $03                           ; 0x1f133 $F123 85 03                   ;
LF125                                                                          ;
pla                                    ; 0x1f135 $F125 68                      ;
asl                                    ; 0x1f136 $F126 0A                      ;
adc      #$2E                          ; 0x1f137 $F127 69 2E                   ;
tax                                    ; 0x1f139 $F129 AA                      ;
jsr      LF0C6                         ; 0x1f13a $F12A 20 C6 F0                ;
lda      $01FD,y                       ; 0x1f13d $F12D B9 FD 01                ;
cmp      #$F5                          ; 0x1f140 $F130 C9 F5                   ;
bne      LF137                         ; 0x1f142 $F132 D0 03                   ;
sta      $01FC,y                       ; 0x1f144 $F134 99 FC 01                ;
LF137                                                                          ;
jmp      LEF08                         ; 0x1f147 $F137 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_LockedDoor                                               ;
lda      $C9                           ; 0x1f14a $F13A A5 C9                   ;
and      #$08                          ; 0x1f14c $F13C 29 08                   ; keep bits .... x...
bne      LF17D                         ; 0x1f14e $F13E D0 3D                   ;
dec      L0000                         ; 0x1f150 $F140 C6 00                   ;
lda      L0000                         ; 0x1f152 $F142 A5 00                   ;
clc                                    ; 0x1f154 $F144 18                      ;
adc      #$10                          ; 0x1f155 $F145 69 10                   ;
sta      $0200,y                       ; 0x1f157 $F147 99 00 02                ;
adc      #$10                          ; 0x1f15a $F14A 69 10                   ;
sec                                    ; 0x1f15c $F14C 38                      ;
sbc      $AF,x                         ; 0x1f15d $F14D F5 AF                   ;; Various enemy state variables
sta      $0204,y                       ; 0x1f15f $F14F 99 04 02                ;
lda      L0000                         ; 0x1f162 $F152 A5 00                   ;
clc                                    ; 0x1f164 $F154 18                      ;
adc      $AF,x                         ; 0x1f165 $F155 75 AF                   ;; Various enemy state variables
sta      $0208,y                       ; 0x1f167 $F157 99 08 02                ;
lda      $01                           ; 0x1f16a $F15A A5 01                   ;
sta      $0203,y                       ; 0x1f16c $F15C 99 03 02                ;
sta      $0207,y                       ; 0x1f16f $F15F 99 07 02                ;
sta      $020B,y                       ; 0x1f172 $F162 99 0B 02                ;
lda      #$76                          ; 0x1f175 $F165 A9 76                   ; A = 76
sta      $0201,y                       ; 0x1f177 $F167 99 01 02                ;
lda      #$74                          ; 0x1f17a $F16A A9 74                   ; A = 74
sta      $0205,y                       ; 0x1f17c $F16C 99 05 02                ;
sta      $0209,y                       ; 0x1f17f $F16F 99 09 02                ;
lda      #$01                          ; 0x1f182 $F172 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1f184 $F174 99 02 02                ;
sta      $0206,y                       ; 0x1f187 $F177 99 06 02                ;
sta      $020A,y                       ; 0x1f18a $F17A 99 0A 02                ;
LF17D                                                                          ;
rts                                    ; 0x1f18d $F17D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Ache_and_Acheman                                         ;
lda      $A1,x                         ; 0x1f18e $F17E B5 A1                   ; Enemy Code
cmp      #$0A                          ; 0x1f190 $F180 C9 0A                   ; check if Acheman
bne      LF188                         ; 0x1f192 $F182 D0 04                   ;
lda      $AF,x                         ; 0x1f194 $F184 B5 AF                   ;; Various enemy state variables
bne      LF1AD                         ; 0x1f196 $F186 D0 25                   ;
LF188                                                                          ;
lda      $03                           ; 0x1f198 $F188 A5 03                   ;
ora      #$80                          ; 0x1f19a $F18A 09 80                   ; set  bits x... ....
sta      $03                           ; 0x1f19c $F18C 85 03                   ;
lda      #$02                          ; 0x1f19e $F18E A9 02                   ; A = 02
sta      L0002                         ; 0x1f1a0 $F190 85 02                   ;
lda      $81,x                         ; 0x1f1a2 $F192 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$16                          ; 0x1f1a4 $F194 A2 16                   ; X = 16
asl                                    ; 0x1f1a6 $F196 0A                      ;
beq      LF1A7                         ; 0x1f1a7 $F197 F0 0E                   ;
lda      $03                           ; 0x1f1a9 $F199 A5 03                   ;
and      #$0F                          ; 0x1f1ab $F19B 29 0F                   ; keep bits .... xxxx
sta      $03                           ; 0x1f1ad $F19D 85 03                   ;
lda      #$16                          ; 0x1f1af $F19F A9 16                   ; A = 16
jsr      LF0BB                         ; 0x1f1b1 $F1A1 20 BB F0                ;
jmp      LEF08                         ; 0x1f1b4 $F1A4 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1A7                                                                          ;
jsr      LF0C6                         ; 0x1f1b7 $F1A7 20 C6 F0                ;
jmp      LEF08                         ; 0x1f1ba $F1AA 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1AD                                                                          ;
ldx      #$1A                          ; 0x1f1bd $F1AD A2 1A                   ;;X = #$1a 0001_1010
jsr      LF216                         ; 0x1f1bf $F1AF 20 16 F2                ;
jmp      LF0C6                         ; 0x1f1c2 $F1B2 4C C6 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1B5                                                                          ;
ora      $03                           ; 0x1f1c5 $F1B5 05 03                   ;
sty      $09                           ; 0x1f1c7 $F1B7 84 09                   ;
stx      $08                           ; 0x1f1c9 $F1B9 86 08                   ;
ldx      $10                           ; 0x1f1cb $F1BB A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      $040E,x                       ; 0x1f1cd $F1BD BC 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LF1CC                         ; 0x1f1d0 $F1C0 F0 0A                   ;
and      #$FC                          ; 0x1f1d2 $F1C2 29 FC                   ; keep bits xxxx xx..
sta      $04                           ; 0x1f1d4 $F1C4 85 04                   ;
tya                                    ; 0x1f1d6 $F1C6 98                      ;
lsr                                    ; 0x1f1d7 $F1C7 4A                      ;
and      #$03                          ; 0x1f1d8 $F1C8 29 03                   ; keep bits .... ..xx
ora      $04                           ; 0x1f1da $F1CA 05 04                   ;
LF1CC                                                                          ;
ldy      $09                           ; 0x1f1dc $F1CC A4 09                   ;
sta      $0202,y                       ; 0x1f1de $F1CE 99 02 02                ;
sta      $0206,y                       ; 0x1f1e1 $F1D1 99 06 02                ;
ldx      $08                           ; 0x1f1e4 $F1D4 A6 08                   ;
rts                                    ; 0x1f1e6 $F1D6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1D7                                                                          ;
lda      #$08                          ; 0x1f1e7 $F1D7 A9 08                   ; A = 08
sta      $0A                           ; 0x1f1e9 $F1D9 85 0A                   ;
LF1DB                                                                          ;
lda      $0A                           ; 0x1f1eb $F1DB A5 0A                   ;
and      $C9                           ; 0x1f1ed $F1DD 25 C9                   ;
beq      LF1E6                         ; 0x1f1ef $F1DF F0 05                   ;
lda      #$F8                          ; 0x1f1f1 $F1E1 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1f1f3 $F1E3 99 00 02                ;
LF1E6                                                                          ;
iny                                    ; 0x1f1f6 $F1E6 C8                      ;
iny                                    ; 0x1f1f7 $F1E7 C8                      ;
iny                                    ; 0x1f1f8 $F1E8 C8                      ;
iny                                    ; 0x1f1f9 $F1E9 C8                      ;
lsr      $0A                           ; 0x1f1fa $F1EA 46 0A                   ;
dex                                    ; 0x1f1fc $F1EC CA                      ;
bne      LF1DB                         ; 0x1f1fd $F1ED D0 EC                   ;
ldx      $08                           ; 0x1f1ff $F1EF A6 08                   ;
ldy      $09                           ; 0x1f201 $F1F1 A4 09                   ;
rts                                    ; 0x1f203 $F1F3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1F4                                                                          ;
lda      L0002                         ; 0x1f204 $F1F4 A5 02                   ;
lsr                                    ; 0x1f206 $F1F6 4A                      ;
lda      $6ED4,x                       ; 0x1f207 $F1F7 BD D4 6E                ;
bcc      LF209                         ; 0x1f20a $F1FA 90 0D                   ;
sta      $0205,y                       ; 0x1f20c $F1FC 99 05 02                ;
lda      $6ED5,x                       ; 0x1f20f $F1FF BD D5 6E                ;
sta      $0201,y                       ; 0x1f212 $F202 99 01 02                ;
lda      #$40                          ; 0x1f215 $F205 A9 40                   ; A = 40
bne      LF214                         ; 0x1f217 $F207 D0 0B                   ;
LF209                                                                          ;
sta      $0201,y                       ; 0x1f219 $F209 99 01 02                ;
lda      $6ED5,x                       ; 0x1f21c $F20C BD D5 6E                ;
sta      $0205,y                       ; 0x1f21f $F20F 99 05 02                ;
lda      #$00                          ; 0x1f222 $F212 A9 00                   ; A = 00
LF214                                                                          ;
bpl      LF236                         ; 0x1f224 $F214 10 20                   ;
LF216                                                                          ;
lda      L0002                         ; 0x1f226 $F216 A5 02                   ;
lsr                                    ; 0x1f228 $F218 4A                      ;
lda      bank7_table_item_sprites_map_to_graphic_image,x; 0x1f229 $F219 BD 51 EE;
bcc      LF22B                         ; 0x1f22c $F21C 90 0D                   ;
sta      $0205,y                       ; 0x1f22e $F21E 99 05 02                ;
lda      LEE52,x                       ; 0x1f231 $F221 BD 52 EE                ;
sta      $0201,y                       ; 0x1f234 $F224 99 01 02                ;
lda      #$40                          ; 0x1f237 $F227 A9 40                   ; A = 40
bne      LF236                         ; 0x1f239 $F229 D0 0B                   ;
LF22B                                                                          ;
sta      $0201,y                       ; 0x1f23b $F22B 99 01 02                ;
lda      LEE52,x                       ; 0x1f23e $F22E BD 52 EE                ;
sta      $0205,y                       ; 0x1f241 $F231 99 05 02                ;
lda      #$00                          ; 0x1f244 $F234 A9 00                   ; A = 00
LF236                                                                          ;
pha                                    ; 0x1f246 $F236 48                      ;
lda      #$01                          ; 0x1f247 $F237 A9 01                   ; A = 01
sta      $0F                           ; 0x1f249 $F239 85 0F                   ;
pla                                    ; 0x1f24b $F23B 68                      ;
jsr      LF1B5                         ; 0x1f24c $F23C 20 B5 F1                ;
lda      $C9                           ; 0x1f24f $F23F A5 C9                   ;
and      #$F0                          ; 0x1f251 $F241 29 F0                   ; keep bits xxxx ....
bne      LF25D                         ; 0x1f253 $F243 D0 18                   ;
lda      L0000                         ; 0x1f255 $F245 A5 00                   ;
sta      $0200,y                       ; 0x1f257 $F247 99 00 02                ;
sta      $0204,y                       ; 0x1f25a $F24A 99 04 02                ;
ldx      #$02                          ; 0x1f25d $F24D A2 02                   ; X = 02
jsr      LF1D7                         ; 0x1f25f $F24F 20 D7 F1                ;
lda      $01                           ; 0x1f262 $F252 A5 01                   ;
sta      $0203,y                       ; 0x1f264 $F254 99 03 02                ;
clc                                    ; 0x1f267 $F257 18                      ;
adc      #$08                          ; 0x1f268 $F258 69 08                   ;
sta      $0207,y                       ; 0x1f26a $F25A 99 07 02                ;
LF25D                                                                          ;
lda      L0000                         ; 0x1f26d $F25D A5 00                   ;
clc                                    ; 0x1f26f $F25F 18                      ;
adc      #$10                          ; 0x1f270 $F260 69 10                   ;
sta      L0000                         ; 0x1f272 $F262 85 00                   ;
tya                                    ; 0x1f274 $F264 98                      ;
clc                                    ; 0x1f275 $F265 18                      ;
adc      #$08                          ; 0x1f276 $F266 69 08                   ;
tay                                    ; 0x1f278 $F268 A8                      ;
inx                                    ; 0x1f279 $F269 E8                      ;
inx                                    ; 0x1f27a $F26A E8                      ;
rts                                    ; 0x1f27b $F26B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Tables_for_Various_Bitmasks2                                             ;
.byt    $80,$40,$20,$10                ; 0x1f27c $F26C 80 40 20 10             ;
LF270                                                                          ;
.byt    $08,$04,$02,$01                ; 0x1f280 $F270 08 04 02 01             ;
LF274                                                                          ;
.byt    $00,$08,$10,$18,$20,$28,$30,$38; 0x1f284 $F274 00 08 10 18 20 28 30 38 ;
.byt    $40                            ; 0x1f28c $F27C 40                      ;
; ---------------------------------------------------------------------------- ;
bank7_code51                                                                   ;
sty      L0000                         ; 0x1f28d $F27D 84 00                   ;
lda      #$00                          ; 0x1f28f $F27F A9 00                   ; A = 00
sta      $C8,y                         ; 0x1f291 $F281 99 C8 00                ;
ldy      #$03                          ; 0x1f294 $F284 A0 03                   ; Y = 03
LF286                                                                          ;
lda      $4D,x                         ; 0x1f296 $F286 B5 4D                   ; Link's Current X position (low byte)
clc                                    ; 0x1f298 $F288 18                      ;
adc      LF274,y                       ; 0x1f299 $F289 79 74 F2                ;
sta      L000E                         ; 0x1f29c $F28C 85 0E                   ;
lda      $3B,x                         ; 0x1f29e $F28E B5 3B                   ; Link's Current X position (high byte)
adc      #$00                          ; 0x1f2a0 $F290 69 00                   ;
sta      $0F                           ; 0x1f2a2 $F292 85 0F                   ;
lda      L000E                         ; 0x1f2a4 $F294 A5 0E                   ;
cmp      $072C                         ; 0x1f2a6 $F296 CD 2C 07                ; Scrolling Offset Low Byte
lda      $0F                           ; 0x1f2a9 $F299 A5 0F                   ;
sbc      $072A                         ; 0x1f2ab $F29B ED 2A 07                ; Scrolling Offset High Byte
beq      LF2AF                         ; 0x1f2ae $F29E F0 0F                   ;
sty      $01                           ; 0x1f2b0 $F2A0 84 01                   ;
lda      LF270,y                       ; 0x1f2b2 $F2A2 B9 70 F2                ;
ldy      L0000                         ; 0x1f2b5 $F2A5 A4 00                   ;
ora      $C8,y                         ; 0x1f2b7 $F2A7 19 C8 00                ;
sta      $C8,y                         ; 0x1f2ba $F2AA 99 C8 00                ;
ldy      $01                           ; 0x1f2bd $F2AD A4 01                   ;
LF2AF                                                                          ;
dey                                    ; 0x1f2bf $F2AF 88                      ;
bpl      LF286                         ; 0x1f2c0 $F2B0 10 D4                   ;
ldy      L0000                         ; 0x1f2c2 $F2B2 A4 00                   ;
lda      $29,x                         ; 0x1f2c4 $F2B4 B5 29                   ; Link's Y Position
clc                                    ; 0x1f2c6 $F2B6 18                      ;
adc      #$10                          ; 0x1f2c7 $F2B7 69 10                   ;
lda      $19,x                         ; 0x1f2c9 $F2B9 B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      #$00                          ; 0x1f2cb $F2BB 69 00                   ;
cmp      #$01                          ; 0x1f2cd $F2BD C9 01                   ;
beq      LF2C9                         ; 0x1f2cf $F2BF F0 08                   ;
lda      #$F0                          ; 0x1f2d1 $F2C1 A9 F0                   ; A = F0
ora      $C8,y                         ; 0x1f2d3 $F2C3 19 C8 00                ;
sta      $C8,y                         ; 0x1f2d6 $F2C6 99 C8 00                ;
LF2C9                                                                          ;
lda      $4D,x                         ; 0x1f2d9 $F2C9 B5 4D                   ; Link's X Position (low byte)
sec                                    ; 0x1f2db $F2CB 38                      ;
sbc      $072C                         ; 0x1f2dc $F2CC ED 2C 07                ; Scrolling Offset Low Byte
sta      $CC,y                         ; 0x1f2df $F2CF 99 CC 00                ;
rts                                    ; 0x1f2e2 $F2D2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF2D3                                                                          ;
lda      #$00                          ; 0x1f2e3 $F2D3 A9 00                   ; A = 00
sta      L0002                         ; 0x1f2e5 $F2D5 85 02                   ;
ldy      #$07                          ; 0x1f2e7 $F2D7 A0 07                   ; Y = 07
LF2D9                                                                          ;
lda      $4D,x                         ; 0x1f2e9 $F2D9 B5 4D                   ; Link's X Position (low byte)
clc                                    ; 0x1f2eb $F2DB 18                      ;
adc      LF274,y                       ; 0x1f2ec $F2DC 79 74 F2                ;
sta      L000E                         ; 0x1f2ef $F2DF 85 0E                   ;
lda      $3B,x                         ; 0x1f2f1 $F2E1 B5 3B                   ; Link's X position (high byte)
adc      #$00                          ; 0x1f2f3 $F2E3 69 00                   ;
sta      $0F                           ; 0x1f2f5 $F2E5 85 0F                   ;
lda      L000E                         ; 0x1f2f7 $F2E7 A5 0E                   ;
cmp      $072C                         ; 0x1f2f9 $F2E9 CD 2C 07                ; Scrolling Offset Low Byte
lda      $0F                           ; 0x1f2fc $F2EC A5 0F                   ;
sbc      $072A                         ; 0x1f2fe $F2EE ED 2A 07                ; Scrolling Offset High Byte
beq      LF2FA                         ; 0x1f301 $F2F1 F0 07                   ;
lda      L0002                         ; 0x1f303 $F2F3 A5 02                   ;
ora      bank7_Tables_for_Various_Bitmasks2,y; 0x1f305 $F2F5 19 6C F2          ;
sta      L0002                         ; 0x1f308 $F2F8 85 02                   ;
LF2FA                                                                          ;
dey                                    ; 0x1f30a $F2FA 88                      ;
bpl      LF2D9                         ; 0x1f30b $F2FB 10 DC                   ;
lda      L0002                         ; 0x1f30d $F2FD A5 02                   ;
rts                                    ; 0x1f30f $F2FF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN2                                                                 ;
.byt    $55,$AB,$D5,$AA,$5A,$4B,$95,$4A; 0x1f310 $F300 55 AB D5 AA 5A 4B 95 4A ;
.byt    $55,$A9,$54,$D5,$D6,$AA,$A4,$35; 0x1f318 $F308 55 A9 54 D5 D6 AA A4 35 ;
.byt    $4B,$89,$52,$55,$D9,$5B,$5F,$57; 0x1f320 $F310 4B 89 52 55 D9 5B 5F 57 ;
.byt    $75,$2A,$49,$42,$92,$22,$4D,$D5; 0x1f328 $F318 75 2A 49 42 92 22 4D D5 ;
.byt    $76,$DB,$D7,$2A,$A5,$24,$92,$28; 0x1f330 $F320 76 DB D7 2A A5 24 92 28 ;
.byt    $52,$A9,$7F,$DF,$DB,$6D,$4F,$89; 0x1f338 $F328 52 A9 7F DF DB 6D 4F 89 ;
.byt    $20,$24,$82,$88,$D2,$7B,$77,$AD; 0x1f340 $F330 20 24 82 88 D2 7B 77 AD ;
.byt    $AA,$54,$8A,$41,$48,$FF,$7F,$57; 0x1f348 $F338 AA 54 8A 41 48 FF 7F 57 ;
.byt    $7B,$5F,$12,$02,$92,$22,$02,$6A; 0x1f350 $F340 7B 5F 12 02 92 22 02 6A ;
.byt    $7B,$57,$AA,$6A,$A5,$48,$10,$FF; 0x1f358 $F348 7B 57 AA 6A A5 48 10 FF ;
.byt    $FF,$77,$73,$7F,$45,$20,$40,$89; 0x1f360 $F350 FF 77 73 7F 45 20 40 89 ;
.byt    $08,$2A,$B5,$53,$95,$AA,$AA,$24; 0x1f368 $F358 08 2A B5 53 95 AA AA 24 ;
.byt    $6A,$FF,$FF,$BF,$D6,$57,$82,$00; 0x1f370 $F360 6A FF FF BF D6 57 82 00 ;
.byt    $28,$49,$88,$A8,$D6,$AC,$A4,$D2; 0x1f378 $F368 28 49 88 A8 D6 AC A4 D2 ;
.byt    $8C,$DA,$FF,$FF,$BF,$D6,$B5,$08; 0x1f380 $F370 8C DA FF FF BF D6 B5 08 ;
.byt    $08,$20,$29,$82,$90,$D6,$56,$25; 0x1f388 $F378 08 20 29 82 90 D6 56 25 ;
.byt    $A9,$A6,$DD,$FF,$FF,$AF,$DA,$35; 0x1f390 $F380 A9 A6 DD FF FF AF DA 35 ;
.byt    $22,$80,$A0,$A2,$80,$A0,$5A,$A7; 0x1f398 $F388 22 80 A0 A2 80 A0 5A A7 ;
.byt    $94,$4A,$5B,$FD,$FF,$FF,$CD,$7A; 0x1f3a0 $F390 94 4A 5B FD FF FF CD 7A ;
.byt    $8B,$02,$01,$8A,$04,$22,$88,$76; 0x1f3a8 $F398 8B 02 01 8A 04 22 88 76 ;
.byt    $55,$52,$4A,$DB,$FF,$FF,$D7,$76; 0x1f3b0 $F3A0 55 52 4A DB FF FF D7 76 ;
.byt    $3F,$2A,$20,$48,$49,$20,$08,$75; 0x1f3b8 $F3A8 3F 2A 20 48 49 20 08 75 ;
.byt    $97,$8A,$AC,$56,$FA,$CA,$8A,$A8; 0x1f3c0 $F3B0 97 8A AC 56 FA CA 8A A8 ;
.byt    $A5,$4A,$01,$02,$95,$22,$08,$A0; 0x1f3c8 $F3B8 A5 4A 01 02 95 22 08 A0 ;
.byt    $4A,$52,$55,$B5,$55,$33,$95,$4A; 0x1f3d0 $F3C0 4A 52 55 B5 55 33 95 4A ;
.byt    $55,$AB,$55,$A9,$2A,$55,$55,$DD; 0x1f3d8 $F3C8 55 AB 55 A9 2A 55 55 DD ;
.byt    $37,$2A,$09,$4A,$AB,$6D,$57,$4A; 0x1f3e0 $F3D0 37 2A 09 4A AB 6D 57 4A ;
.byt    $29,$AA,$B5,$D5,$9A,$4A,$A5,$54; 0x1f3e8 $F3D8 29 AA B5 D5 9A 4A A5 54 ;
.byt    $AB,$5A,$A5,$52,$55,$AA,$FD,$17; 0x1f3f0 $F3E0 AB 5A A5 52 55 AA FD 17 ;
.byt    $A5,$00,$69,$6B,$7B,$93,$A2,$92; 0x1f3f8 $F3E8 A5 00 69 6B 7B 93 A2 92 ;
.byt    $74,$5B,$6D,$8D,$A2,$92,$5A,$5B; 0x1f400 $F3F0 74 5B 6D 8D A2 92 5A 5B ;
.byt    $AA,$2A,$4A,$DD,$FF,$98,$04,$20; 0x1f408 $F3F8 AA 2A 4A DD FF 98 04 20 ;
.byt    $B7,$76,$AF,$48,$89,$64,$77,$75; 0x1f410 $F400 B7 76 AF 48 89 64 77 75 ;
.byt    $AD,$88,$94,$B2,$B6,$4A,$8B,$A2; 0x1f418 $F408 AD 88 94 B2 B6 4A 8B A2 ;
.byt    $FF,$8F,$29,$00,$74,$CB,$FF,$08; 0x1f420 $F410 FF 8F 29 00 74 CB FF 08 ;
.byt    $2A,$22,$FD,$AD,$5D,$09,$64,$49; 0x1f428 $F418 2A 22 FD AD 5D 09 64 49 ;
.byt    $DD,$2A,$25,$EA,$FF,$D3,$08,$00; 0x1f430 $F420 DD 2A 25 EA FF D3 08 00 ;
.byt    $7E,$F6,$3D,$02,$25,$52,$FF,$D3; 0x1f438 $F428 7E F6 3D 02 25 52 FF D3 ;
.byt    $2D,$00,$35,$5A,$9F,$88,$D6,$FF; 0x1f440 $F430 2D 00 35 5A 9F 88 D6 FF ;
.byt    $B3,$00,$80,$7D,$FE,$0F,$80,$0A; 0x1f448 $F438 B3 00 80 7D FE 0F 80 0A ;
.byt    $ED,$DF,$BA,$02,$90,$A6,$ED,$0A; 0x1f450 $F440 ED DF BA 02 90 A6 ED 0A ;
.byt    $F2,$FF,$D3,$20,$00,$FD,$FC,$2F; 0x1f458 $F448 F2 FF D3 20 00 FD FC 2F ;
.byt    $00,$0C,$DE,$7F,$D3,$02,$C0,$9A; 0x1f460 $F450 00 0C DE 7F D3 02 C0 9A ;
.byt    $BE,$08,$FD,$BF,$0E,$01,$F0,$4F; 0x1f468 $F458 BE 08 FD BF 0E 01 F0 4F ;
.byt    $FF,$02,$40,$D2,$FF,$1D,$0D,$00; 0x1f470 $F460 FF 02 40 D2 FF 1D 0D 00 ;
.byt    $EE,$D1,$23,$F8,$FF,$1C,$08,$E0; 0x1f478 $F468 EE D1 23 F8 FF 1C 08 E0 ;
.byt    $3F,$FF,$03,$00,$C3,$FF,$37,$20; 0x1f480 $F470 3F FF 03 00 C3 FF 37 20 ;
.byt    $00,$FD,$C3,$42,$FF,$3F,$03,$00; 0x1f488 $F478 00 FD C3 42 FF 3F 03 00 ;
.byt    $FC,$DF,$F3,$00,$C0,$F5,$FF,$09; 0x1f490 $F480 FC DF F3 00 C0 F5 FF 09 ;
.byt    $00,$E0,$7F,$20,$F4,$FF,$37,$00; 0x1f498 $F488 00 E0 7F 20 F4 FF 37 00 ;
.byt    $C0,$FF,$3F,$03,$00,$D7,$FF,$13; 0x1f4a0 $F490 C0 FF 3F 03 00 D7 FF 13 ;
.byt    $00,$50,$7F,$03,$F8,$FF,$3B,$00; 0x1f4a8 $F498 00 50 7F 03 F8 FF 3B 00 ;
.byt    $C0,$FF,$3F,$01,$C0,$E7,$FF,$03; 0x1f4b0 $F4A0 C0 FF 3F 01 C0 E7 FF 03 ;
.byt    $00,$B0,$BF,$00,$FD,$FF,$0E,$00; 0x1f4b8 $F4A8 00 B0 BF 00 FD FF 0E 00 ;
.byt    $F8,$FF,$8B,$00,$F0,$F7,$3F,$00; 0x1f4c0 $F4B0 F8 FF 8B 00 F0 F7 3F 00 ;
.byt    $00,$F7,$07,$E0,$FF,$F3,$00,$C0; 0x1f4c8 $F4B8 00 F7 07 E0 FF F3 00 C0 ;
.byt    $FF,$3F,$08,$C0,$EF,$FF,$02,$00; 0x1f4d0 $F4C0 FF 3F 08 C0 EF FF 02 00 ;
.byt    $F0,$3F,$00,$FF,$CF,$03,$80,$FF; 0x1f4d8 $F4C8 F0 3F 00 FF CF 03 80 FF ;
.byt    $F7,$00,$00,$FF,$FF,$03,$00,$D0; 0x1f4e0 $F4D0 F7 00 00 FF FF 03 00 D0 ;
.byt    $BF,$00,$FF,$3F,$0F,$00,$FD,$EF; 0x1f4e8 $F4D8 BF 00 FF 3F 0F 00 FD EF ;
.byt    $03,$00,$FC,$FD,$0F,$00,$C0,$FF; 0x1f4f0 $F4E0 03 00 FC FD 0F 00 C0 FF ;
.byt    $00,$FC,$3F,$0F,$00,$FE,$DF,$03; 0x1f4f8 $F4E8 00 FC 3F 0F 00 FE DF 03 ;
.byt    $00,$FC,$FF,$0F,$00,$40,$FF,$02; 0x1f500 $F4F0 00 FC FF 0F 00 40 FF 02 ;
.byt    $FC,$3F,$0F,$00,$FC,$FF,$03,$00; 0x1f508 $F4F8 FC 3F 0F 00 FC FF 03 00 ;
.byt    $FC,$FF,$0F,$00,$40,$FF,$01,$FC; 0x1f510 $F500 FC FF 0F 00 40 FF 01 FC ;
.byt    $3F,$0F,$00,$FC,$FF,$03,$00,$FC; 0x1f518 $F508 3F 0F 00 FC FF 03 00 FC ;
.byt    $FF,$2F,$00,$00,$FF,$03,$F8,$BF; 0x1f520 $F510 FF 2F 00 00 FF 03 F8 BF ;
.byt    $2E,$00,$FC,$DF,$0F,$00,$F0,$F7; 0x1f528 $F518 2E 00 FC DF 0F 00 F0 F7 ;
.byt    $3F,$00,$00,$FF,$03,$F0,$FF,$BC; 0x1f530 $F520 3F 00 00 FF 03 F0 FF BC ;
.byt    $00,$F0,$FF,$3E,$00,$C0,$DF,$FF; 0x1f538 $F528 00 F0 FF 3E 00 C0 DF FF ;
.byt    $00,$00,$FC,$3F,$00,$FF,$CF,$03; 0x1f540 $F530 00 00 FC 3F 00 FF CF 03 ;
.byt    $00,$FF,$FF,$02,$00,$7E,$FF,$07; 0x1f548 $F538 00 FF FF 02 00 7E FF 07 ;
.byt    $00,$C0,$FF,$02,$F0,$FF,$BB,$00; 0x1f550 $F540 00 C0 FF 02 F0 FF BB 00 ;
.byt    $C0,$FF,$3F,$00,$80,$FF,$FF,$00; 0x1f558 $F548 C0 FF 3F 00 80 FF FF 00 ;
.byt    $00,$FD,$0F,$08,$C1,$FF,$BF,$00; 0x1f560 $F550 00 FD 0F 08 C1 FF BF 00 ;
.byt    $C0,$FF,$3F,$00,$C0,$FF,$5F,$00; 0x1f568 $F558 C0 FF 3F 00 C0 FF 5F 00 ;
.byt    $D0,$DD,$9D,$08,$A2,$FF,$FF,$00; 0x1f570 $F560 D0 DD 9D 08 A2 FF FF 00 ;
.byt    $00,$FC,$FF,$08,$00,$FF,$77,$09; 0x1f578 $F568 00 FC FF 08 00 FF 77 09 ;
.byt    $A0,$D6,$B7,$89,$A4,$62,$FF,$3F; 0x1f580 $F570 A0 D6 B7 89 A4 62 FF 3F ;
.byt    $00,$A0,$FD,$55,$0A,$62,$DD,$55; 0x1f588 $F578 00 A0 FD 55 0A 62 DD 55 ;
.byt    $75,$FF,$07,$00,$C0,$FF,$0F,$40; 0x1f590 $F580 75 FF 07 00 C0 FF 0F 40 ;
.byt    $D0,$FF,$0F,$02,$E8,$DF,$A8,$20; 0x1f598 $F588 D0 FF 0F 02 E8 DF A8 20 ;
.byt    $C8,$FF,$FF,$04,$00,$FC,$FF,$03; 0x1f5a0 $F590 C8 FF FF 04 00 FC FF 03 ;
.byt    $00,$FC,$FF,$0F,$00,$D0,$FF,$03; 0x1f5a8 $F598 00 FC FF 0F 00 D0 FF 03 ;
.byt    $00,$D0,$FF,$FF,$00,$00,$FF,$FF; 0x1f5b0 $F5A0 00 D0 FF FF 00 00 FF FF ;
.byt    $00,$00,$FF,$FF,$03,$00,$FC,$BF; 0x1f5b8 $F5A8 00 00 FF FF 03 00 FC BF ;
.byt    $00,$F0,$FF,$3F,$00,$C0,$FF,$BF; 0x1f5c0 $F5B0 00 F0 FF 3F 00 C0 FF BF ;
.byt    $00,$00,$FD,$FF,$00,$00,$F0,$0F; 0x1f5c8 $F5B8 00 00 FD FF 00 00 F0 0F ;
.byt    $FC,$FF,$3C,$00,$F0,$FF,$3F,$00; 0x1f5d0 $F5C0 FC FF 3C 00 F0 FF 3F 00 ;
.byt    $F0,$FF,$3F,$00,$00,$C0,$F2,$FF; 0x1f5d8 $F5C8 F0 FF 3F 00 00 C0 F2 FF ;
.byt    $DF,$00,$00,$FF,$FF,$00,$00,$FF; 0x1f5e0 $F5D0 DF 00 00 FF FF 00 00 FF ;
.byt    $FF,$01,$00,$00,$FC,$FF,$FF,$00; 0x1f5e8 $F5D8 FF 01 00 00 FC FF FF 00 ;
.byt    $C0,$FF,$7F,$00,$80,$FF,$FF,$00; 0x1f5f0 $F5E0 C0 FF 7F 00 80 FF FF 00 ;
.byt    $00,$00,$FF,$FF,$0F,$30,$FC,$FF; 0x1f5f8 $F5E8 00 00 FF FF 0F 30 FC FF ;
.byt    $0F,$00,$F0,$FF,$0F,$00,$00,$F0; 0x1f600 $F5F0 0F 00 F0 FF 0F 00 00 F0 ;
.byt    $FF,$3F,$F0,$C3,$FF,$3F,$F0,$80; 0x1f608 $F5F8 FF 3F F0 C3 FF 3F F0 80 ;
.byt    $FF,$0F,$00,$00,$F0,$FF,$0F,$F0; 0x1f610 $F600 FF 0F 00 00 F0 FF 0F F0 ;
.byt    $C3,$FF,$2F,$FC,$03,$FC,$03,$F0; 0x1f618 $F608 C3 FF 2F FC 03 FC 03 F0 ;
.byt    $0F,$FC,$FF,$00,$FF,$C0,$FF,$00; 0x1f620 $F610 0F FC FF 00 FF C0 FF 00 ;
.byt    $3F,$00,$2C,$00,$FF,$C0,$FF,$0F; 0x1f628 $F618 3F 00 2C 00 FF C0 FF 0F ;
.byt    $FC,$03,$FC,$2F,$00,$00,$F0,$03; 0x1f630 $F620 FC 03 FC 2F 00 00 F0 03 ;
.byt    $FC,$C0,$FF,$2F,$FC,$00,$F0,$3F; 0x1f638 $F628 FC C0 FF 2F FC 00 F0 3F ;
.byt    $00,$00,$C0,$0B,$3C,$FC,$FF,$0F; 0x1f640 $F630 00 00 C0 0B 3C FC FF 0F ;
.byt    $3F,$00,$FC,$0F,$00,$00,$FE,$03; 0x1f648 $F638 3F 00 FC 0F 00 00 FE 03 ;
.byt    $0F,$FF,$FF,$03,$3F,$70,$FF,$0F; 0x1f650 $F640 0F FF FF 03 3F 70 FF 0F ;
.byt    $00,$00,$F8,$C0,$0F,$FF,$FF,$C3; 0x1f658 $F648 00 00 F8 C0 0F FF FF C3 ;
.byt    $0F,$10,$FF,$03,$00,$00,$FF,$C0; 0x1f660 $F650 0F 10 FF 03 00 00 FF C0 ;
.byt    $C3,$FF,$FF,$C2,$0F,$C0,$FF,$03; 0x1f668 $F658 C3 FF FF C2 0F C0 FF 03 ;
.byt    $00,$00,$3F,$C0,$C3,$FF,$FF,$C0; 0x1f670 $F660 00 00 3F C0 C3 FF FF C0 ;
.byt    $03,$CC,$FF,$03,$00,$00,$BF,$C0; 0x1f678 $F668 03 CC FF 03 00 00 BF C0 ;
.byt    $C3,$FF,$FF,$C3,$03,$CC,$FF,$03; 0x1f680 $F670 C3 FF FF C3 03 CC FF 03 ;
.byt    $00,$00,$FD,$00,$03,$FF,$FF,$07; 0x1f688 $F678 00 00 FD 00 03 FF FF 07 ;
.byt    $0F,$F0,$FF,$0F,$00,$00,$FC,$03; 0x1f690 $F680 0F F0 FF 0F 00 00 FC 03 ;
.byt    $00,$FC,$FF,$3F,$3C,$C0,$FF,$3F; 0x1f698 $F688 00 FC FF 3F 3C C0 FF 3F ;
.byt    $00,$00,$F0,$2F,$00,$00,$FF,$FF; 0x1f6a0 $F690 00 00 F0 2F 00 00 FF FF ;
.byt    $0F,$3F,$F0,$FF,$0F,$00,$00,$FE; 0x1f6a8 $F698 0F 3F F0 FF 0F 00 00 FE ;
.byt    $0F,$00,$00,$FF,$FF,$0F,$00,$F0; 0x1f6b0 $F6A0 0F 00 00 FF FF 0F 00 F0 ;
.byt    $FF,$2F,$00,$00,$FF,$0F,$00,$00; 0x1f6b8 $F6A8 FF 2F 00 00 FF 0F 00 00 ;
.byt    $FE,$FF,$FF,$03,$00,$FF,$0F,$00; 0x1f6c0 $F6B0 FE FF FF 03 00 FF 0F 00 ;
.byt    $00,$FD,$FF,$03,$40,$B6,$FF,$F7; 0x1f6c8 $F6B8 00 FD FF 03 40 B6 FF F7 ;
.byt    $FF,$47,$09,$00,$01,$F0,$2D,$94; 0x1f6d0 $F6C0 FF 47 09 00 01 F0 2D 94 ;
.byt    $22,$77,$6B,$57,$A0,$FD,$DB,$FF; 0x1f6d8 $F6C8 22 77 6B 57 A0 FD DB FF ;
.byt    $21,$29,$CA,$26,$80,$02,$ED,$A9; 0x1f6e0 $F6D0 21 29 CA 26 80 02 ED A9 ;
.byt    $56,$52,$B7,$DA,$2A,$D6,$AD,$FD; 0x1f6e8 $F6D8 56 52 B7 DA 2A D6 AD FD ;
.byt    $09,$D9,$52,$B7,$08,$88,$A9,$4A; 0x1f6f0 $F6E0 09 D9 52 B7 08 88 A9 4A ;
.byt    $73,$29,$AA,$B6,$55,$A9,$AA,$55; 0x1f6f8 $F6E8 73 29 AA B6 55 A9 AA 55 ;
.byt    $5B,$CB,$54,$6D,$55,$AD,$4A,$35; 0x1f700 $F6F0 5B CB 54 6D 55 AD 4A 35 ;
.byt    $55,$93,$2A,$55,$55,$95,$4A,$55; 0x1f708 $F6F8 55 93 2A 55 55 95 4A 55 ;
.byt    $36,$89,$52,$D5,$AD,$8A,$4A,$D5; 0x1f710 $F700 36 89 52 D5 AD 8A 4A D5 ;
.byt    $75,$95,$48,$5A,$5B,$55,$4A,$55; 0x1f718 $F708 75 95 48 5A 5B 55 4A 55 ;
.byt    $6A,$F7,$1F,$00,$88,$FD,$3F,$24; 0x1f720 $F710 6A F7 1F 00 88 FD 3F 24 ;
.byt    $80,$F7,$AF,$09,$82,$FD,$AD,$88; 0x1f728 $F718 80 F7 AF 09 82 FD AD 88 ;
.byt    $50,$AB,$5A,$23,$FB,$FF,$00,$00; 0x1f730 $F720 50 AB 5A 23 FB FF 00 00 ;
.byt    $FC,$FF,$14,$00,$FC,$3F,$8F,$00; 0x1f738 $F728 FC FF 14 00 FC 3F 8F 00 ;
.byt    $FD,$CA,$2A,$80,$2D,$D9,$FF,$BF; 0x1f740 $F730 FD CA 2A 80 2D D9 FF BF ;
.byt    $00,$00,$FC,$FF,$0A,$00,$FC,$FF; 0x1f748 $F738 00 00 FC FF 0A 00 FC FF ;
.byt    $03,$40,$BD,$3E,$0A,$40,$D1,$FF; 0x1f750 $F740 03 40 BD 3E 0A 40 D1 FF ;
.byt    $FF,$00,$00,$FC,$FF,$0F,$00,$F8; 0x1f758 $F748 FF 00 00 FC FF 0F 00 F8 ;
.byt    $FF,$07,$00,$3D,$BD,$02,$80,$F6; 0x1f760 $F750 FF 07 00 3D BD 02 80 F6 ;
.byt    $FF,$5F,$00,$C0,$FF,$7F,$00,$00; 0x1f768 $F758 FF 5F 00 C0 FF 7F 00 00 ;
.byt    $FF,$FF,$03,$00,$F8,$9F,$00,$F0; 0x1f770 $F760 FF FF 03 00 F8 9F 00 F0 ;
.byt    $FF,$FF,$00,$00,$FF,$FF,$00,$00; 0x1f778 $F768 FF FF 00 00 FF FF 00 00 ;
.byt    $FF,$FF,$03,$00,$E0,$3F,$00,$FE; 0x1f780 $F770 FF FF 03 00 E0 3F 00 FE ;
.byt    $FF,$1D,$00,$F0,$FF,$0F,$00,$F0; 0x1f788 $F778 FF 1D 00 F0 FF 0F 00 F0 ;
.byt    $FF,$3F,$00,$00,$FC,$0F,$C0,$FF; 0x1f790 $F780 FF 3F 00 00 FC 0F C0 FF ;
.byt    $7F,$03,$00,$FD,$FF,$00,$00,$FE; 0x1f798 $F788 7F 03 00 FD FF 00 00 FE ;
.byt    $FF,$0F,$00,$80,$FF,$00,$F8,$FF; 0x1f7a0 $F790 FF 0F 00 80 FF 00 F8 FF ;
.byt    $3F,$00,$C0,$FF,$3F,$00,$C0,$FF; 0x1f7a8 $F798 3F 00 C0 FF 3F 00 C0 FF ;
.byt    $FF,$00,$00,$F0,$3F,$00,$FD,$FF; 0x1f7b0 $F7A0 FF 00 00 F0 3F 00 FD FF ;
.byt    $0F,$00,$F8,$FF,$03,$00,$F8,$FF; 0x1f7b8 $F7A8 0F 00 F8 FF 03 00 F8 FF ;
.byt    $3F,$00,$00,$FC,$07,$C0,$FF,$FF; 0x1f7c0 $F7B0 3F 00 00 FC 07 C0 FF FF ;
.byt    $03,$00,$FC,$FF,$01,$00,$FC,$FF; 0x1f7c8 $F7B8 03 00 FC FF 01 00 FC FF ;
.byt    $0F,$00,$C0,$FF,$02,$80,$FF,$FF; 0x1f7d0 $F7C0 0F 00 C0 FF 02 80 FF FF ;
.byt    $03,$00,$FE,$FF,$02,$00,$FC,$FF; 0x1f7d8 $F7C8 03 00 FE FF 02 00 FC FF ;
.byt    $0F,$00,$C0,$FF,$21,$00,$FC,$FF; 0x1f7e0 $F7D0 0F 00 C0 FF 21 00 FC FF ;
.byt    $2F,$00,$F0,$FF,$0F,$00,$F0,$FF; 0x1f7e8 $F7D8 2F 00 F0 FF 0F 00 F0 FF ;
.byt    $3F,$00,$80,$FF,$0F,$00,$60,$FF; 0x1f7f0 $F7E0 3F 00 80 FF 0F 00 60 FF ;
.byt    $FF,$00,$00,$FE,$FF,$03,$00,$FC; 0x1f7f8 $F7E8 FF 00 00 FE FF 03 00 FC ;
.byt    $FF,$07,$00,$FE,$DD,$22,$40,$AD; 0x1f800 $F7F0 FF 07 00 FE DD 22 40 AD ;
.byt    $FD,$FF,$0B,$00,$D8,$DD,$22,$24; 0x1f808 $F7F8 FD FF 0B 00 D8 DD 22 24 ;
.byt    $D5,$6D,$55,$4A,$55,$6B,$A5,$B2; 0x1f810 $F800 D5 6D 55 4A 55 6B A5 B2 ;
.byt    $54,$D5,$B5,$6C,$AB,$A9,$24,$55; 0x1f818 $F808 54 D5 B5 6C AB A9 24 55 ;
.byt    $95,$54,$4B,$AD,$4A,$55,$55,$AB; 0x1f820 $F810 95 54 4B AD 4A 55 55 AB ;
.byt    $56,$A9,$B2,$6A,$AD,$4A,$AD,$AA; 0x1f828 $F818 56 A9 B2 6A AD 4A AD AA ;
.byt    $56,$49,$A9,$6A,$2B,$4A,$55,$B5; 0x1f830 $F820 56 49 A9 6A 2B 4A 55 B5 ;
.byt    $A6,$A5,$52,$75,$AD,$4A,$CA,$5A; 0x1f838 $F828 A6 A5 52 75 AD 4A CA 5A ;
.byt    $AB,$2A,$69,$55,$B5,$2A,$A9,$AA; 0x1f840 $F830 AB 2A 69 55 B5 2A A9 AA ;
.byt    $56,$55,$2A,$55,$AD,$55,$A5,$AA; 0x1f848 $F838 56 55 2A 55 AD 55 A5 AA ;
.byt    $59,$95,$65,$95,$A9,$9A,$AA,$AA; 0x1f850 $F840 59 95 65 95 A9 9A AA AA ;
.byt    $AA,$69,$AA,$A6,$AA,$6A,$D5,$2D; 0x1f858 $F848 AA 69 AA A6 AA 6A D5 2D ;
.byt    $89,$52,$55,$B7,$2A,$A9,$94,$75; 0x1f860 $F850 89 52 55 B7 2A A9 94 75 ;
.byt    $6D,$A5,$48,$6A,$AD,$55,$A5,$54; 0x1f868 $F858 6D A5 48 6A AD 55 A5 54 ;
.byt    $A5,$DA,$FD,$17,$00,$88,$FE,$BF; 0x1f870 $F860 A5 DA FD 17 00 88 FE BF ;
.byt    $50,$20,$F0,$7F,$AB,$09,$82,$F5; 0x1f878 $F868 50 20 F0 7F AB 09 82 F5 ;
.byt    $B7,$8A,$40,$D5,$AA,$56,$49,$FB; 0x1f880 $F870 B7 8A 40 D5 AA 56 49 FB ;
.byt    $FF,$02,$00,$E0,$FF,$0F,$0B,$00; 0x1f888 $F878 FF 02 00 E0 FF 0F 0B 00 ;
.byt    $F7,$5F,$2F,$02,$D8,$2F,$B5,$0A; 0x1f890 $F880 F7 5F 2F 02 D8 2F B5 0A ;
.byt    $60,$4B,$DA,$FF,$FF,$00,$00,$D0; 0x1f898 $F888 60 4B DA FF FF 00 00 D0 ;
.byt    $FF,$AF,$02,$00,$FD,$FF,$07,$00; 0x1f8a0 $F890 FF AF 02 00 FD FF 07 00 ;
.byt    $D6,$E7,$95,$00,$52,$E1,$FF,$FF; 0x1f8a8 $F898 D6 E7 95 00 52 E1 FF FF ;
.byt    $03,$00,$C0,$FF,$FF,$01,$00,$FC; 0x1f8b0 $F8A0 03 00 C0 FF FF 01 00 FC ;
.byt    $FF,$0F,$00,$F0,$E3,$AB,$00,$A0; 0x1f8b8 $F8A8 FF 0F 00 F0 E3 AB 00 A0 ;
.byt    $F6,$FF,$3F,$01,$00,$FC,$FF,$3F; 0x1f8c0 $F8B0 F6 FF 3F 01 00 FC FF 3F ;
.byt    $00,$00,$FF,$FF,$07,$00,$A0,$7F; 0x1f8c8 $F8B8 00 00 FF FF 07 00 A0 7F ;
.byt    $07,$00,$FC,$FF,$FF,$00,$00,$FC; 0x1f8d0 $F8C0 07 00 FC FF FF 00 00 FC ;
.byt    $FF,$0F,$00,$C0,$FF,$FF,$03,$00; 0x1f8d8 $F8C8 FF 0F 00 C0 FF FF 03 00 ;
.byt    $00,$FF,$07,$C0,$FF,$FF,$0E,$00; 0x1f8e0 $F8D0 00 FF 07 C0 FF FF 0E 00 ;
.byt    $C0,$FF,$FF,$00,$00,$FC,$FF,$3F; 0x1f8e8 $F8D8 C0 FF FF 00 00 FC FF 3F ;
.byt    $00,$00,$F8,$3F,$00,$FC,$FF,$F7; 0x1f8f0 $F8E0 00 00 F8 3F 00 FC FF F7 ;
.byt    $00,$00,$FF,$FF,$03,$00,$E0,$FF; 0x1f8f8 $F8E8 00 00 FF FF 03 00 E0 FF ;
.byt    $FF,$02,$00,$C0,$FF,$02,$C0,$FF; 0x1f900 $F8F0 FF 02 00 C0 FF 02 C0 FF ;
.byt    $FF,$03,$00,$F0,$FF,$3F,$00,$00; 0x1f908 $F8F8 FF 03 00 F0 FF 3F 00 00 ;
.byt    $FF,$FF,$0F,$00,$00,$FD,$0F,$00; 0x1f910 $F900 FF FF 0F 00 00 FD 0F 00 ;
.byt    $FF,$FF,$3D,$00,$C0,$FF,$FF,$00; 0x1f918 $F908 FF FF 3D 00 C0 FF FF 00 ;
.byt    $00,$FC,$FF,$3F,$00,$00,$F0,$BF; 0x1f920 $F910 00 FC FF 3F 00 00 F0 BF ;
.byt    $00,$F0,$FF,$FF,$01,$00,$F8,$FF; 0x1f928 $F918 00 F0 FF FF 01 00 F8 FF ;
.byt    $0F,$00,$C0,$FF,$FF,$07,$00,$00; 0x1f930 $F920 0F 00 C0 FF FF 07 00 00 ;
.byt    $FF,$07,$02,$F0,$FF,$FF,$00,$00; 0x1f938 $F928 FF 07 02 F0 FF FF 00 00 ;
.byt    $FF,$FF,$03,$00,$E0,$FF,$FF,$03; 0x1f940 $F930 FF FF 03 00 E0 FF FF 03 ;
.byt    $00,$C0,$FF,$83,$00,$E0,$FF,$FF; 0x1f948 $F938 00 C0 FF 83 00 E0 FF FF ;
.byt    $03,$00,$F0,$FF,$3F,$00,$00,$FF; 0x1f950 $F940 03 00 F0 FF 3F 00 00 FF ;
.byt    $FF,$2F,$00,$80,$FF,$8F,$00,$00; 0x1f958 $F948 FF 2F 00 80 FF 8F 00 00 ;
.byt    $F7,$FF,$3F,$00,$00,$FE,$FF,$0B; 0x1f960 $F950 F7 FF 3F 00 00 FE FF 0B ;
.byt    $00,$E0,$FF,$FF,$00,$00,$7F,$77; 0x1f968 $F958 00 E0 FF FF 00 00 7F 77 ;
.byt    $0B,$40,$55,$DB,$FF,$BF,$02,$00; 0x1f970 $F960 0B 40 55 DB FF BF 02 00 ;
.byt    $74,$77,$8D,$82,$52,$6D,$5B,$95; 0x1f978 $F968 74 77 8D 82 52 6D 5B 95 ;
.byt    $52,$55,$AD,$55,$2A,$53,$55,$6D; 0x1f980 $F970 52 55 AD 55 2A 53 55 6D ;
.byt    $2D,$6D,$AB,$A9,$A2,$A8,$55,$4A; 0x1f988 $F978 2D 6D AB A9 A2 A8 55 4A ;
.byt    $55,$55,$D5,$52,$55,$55,$AD,$6A; 0x1f990 $F980 55 55 D5 52 55 55 AD 6A ;
.byt    $96,$2A,$AB,$56,$AB,$4A,$B5,$AA; 0x1f998 $F988 96 2A AB 56 AB 4A B5 AA ;
.byt    $56,$25,$95,$AA,$D6,$8A,$52,$55; 0x1f9a0 $F990 56 25 95 AA D6 8A 52 55 ;
.byt    $B5,$A6,$AA,$8A,$6A,$5B,$AB,$A2; 0x1f9a8 $F998 B5 A6 AA 8A 6A 5B AB A2 ;
.byt    $D2,$5A,$AD,$2A,$A5,$66,$55,$AB; 0x1f9b0 $F9A0 D2 5A AD 2A A5 66 55 AB ;
.byt    $52,$AA,$AA,$56,$55,$A9,$54,$B5; 0x1f9b8 $F9A8 52 AA AA 56 55 A9 54 B5 ;
.byt    $5A,$55,$A9,$B4,$6A,$55,$65,$AA; 0x1f9c0 $F9B0 5A 55 A9 B4 6A 55 65 AA ;
.byt    $55,$55,$55,$55,$AA,$56,$55,$55; 0x1f9c8 $F9B8 55 55 55 55 AA 56 55 55 ;
.byt    $D7,$56,$A5,$48,$6A,$AD,$55,$55; 0x1f9d0 $F9C0 D7 56 A5 48 6A AD 55 55 ;
.byt    $4A,$55,$A5,$DA,$FF,$95,$80,$80; 0x1f9d8 $F9C8 4A 55 A5 DA FF 95 80 80 ;
.byt    $E8,$FF,$2D,$92,$20,$F0,$FD,$AD; 0x1f9e0 $F9D0 E8 FF 2D 92 20 F0 FD AD ;
.byt    $16,$22,$68,$F7,$AD,$8A,$08,$55; 0x1f9e8 $F9D8 16 22 68 F7 AD 8A 08 55 ;
.byt    $AB,$6A,$55,$D2,$FE,$FF,$00,$00; 0x1f9f0 $F9E0 AB 6A 55 D2 FE FF 00 00 ;
.byt    $40,$FF,$FF,$70,$80,$80,$FF,$37; 0x1f9f8 $F9E8 40 FF FF 70 80 80 FF 37 ;
.byt    $BD,$08,$C0,$FD,$4A,$AD,$02,$62; 0x1fa00 $F9F0 BD 08 C0 FD 4A AD 02 62 ;
.byt    $4B,$A9,$FF,$FF,$2F,$00,$00,$F0; 0x1fa08 $F9F8 4B A9 FF FF 2F 00 00 F0 ;
.byt    $FF,$2F,$0A,$00,$F0,$FF,$DF,$01; 0x1fa10 $FA00 FF 2F 0A 00 F0 FF DF 01 ;
.byt    $00,$DB,$A7,$37,$0A,$A0,$34,$F4; 0x1fa18 $FA08 00 DB A7 37 0A A0 34 F4 ;
.byt    $FF,$FF,$03,$00,$00,$FE,$FF,$3F; 0x1fa20 $FA10 FF FF 03 00 00 FE FF 3F ;
.byt    $00,$00,$FC,$FF,$3F,$00,$40,$5F; 0x1fa28 $FA18 00 00 FC FF 3F 00 40 5F ;
.byt    $F9,$2A,$00,$A1,$DA,$FF,$FF,$12; 0x1fa30 $FA20 F9 2A 00 A1 DA FF FF 12 ;
.byt    $00,$00,$FF,$FF,$3F,$00,$00,$FC; 0x1fa38 $FA28 00 00 FF FF 3F 00 00 FC ;
.byt    $FF,$7F,$02,$00,$A8,$FD,$1D,$00; 0x1fa40 $FA30 FF 7F 02 00 A8 FD 1D 00 ;
.byt    $D0,$FF,$FF,$3F,$00,$00,$FC,$FF; 0x1fa48 $FA38 D0 FF FF 3F 00 00 FC FF ;
.byt    $3F,$00,$00,$F8,$FF,$FF,$01,$00; 0x1fa50 $FA40 3F 00 00 F8 FF FF 01 00 ;
.byt    $00,$FD,$3F,$20,$F0,$FF,$FF,$2C; 0x1fa58 $FA48 00 FD 3F 20 F0 FF FF 2C ;
.byt    $00,$00,$FF,$FF,$0F,$00,$00,$FD; 0x1fa60 $FA50 00 00 FF FF 0F 00 00 FD ;
.byt    $FF,$DF,$00,$00,$40,$FF,$1D,$00; 0x1fa68 $FA58 FF DF 00 00 40 FF 1D 00 ;
.byt    $FD,$FF,$3F,$03,$00,$E0,$FF,$FF; 0x1fa70 $FA60 FD FF 3F 03 00 E0 FF FF ;
.byt    $03,$00,$C0,$FF,$FF,$3B,$00,$00; 0x1fa78 $FA68 03 00 C0 FF FF 3B 00 00 ;
.byt    $C0,$FF,$0B,$00,$FF,$FF,$CF,$02; 0x1fa80 $FA70 C0 FF 0B 00 FF FF CF 02 ;
.byt    $00,$F0,$FF,$FF,$00,$00,$E0,$FF; 0x1fa88 $FA78 00 F0 FF FF 00 00 E0 FF ;
.byt    $FF,$2F,$00,$00,$E0,$FF,$02,$40; 0x1fa90 $FA80 FF 2F 00 00 E0 FF 02 40 ;
.byt    $FF,$FF,$F3,$00,$00,$FC,$FF,$3F; 0x1fa98 $FA88 FF FF F3 00 00 FC FF 3F ;
.byt    $00,$00,$F4,$FF,$FF,$03,$00,$00; 0x1faa0 $FA90 00 00 F4 FF FF 03 00 00 ;
.byt    $F6,$BF,$00,$D0,$FF,$FF,$37,$00; 0x1faa8 $FA98 F6 BF 00 D0 FF FF 37 00 ;
.byt    $00,$FC,$FF,$1F,$00,$00,$FC,$FF; 0x1fab0 $FAA0 00 FC FF 1F 00 00 FC FF ;
.byt    $FF,$03,$00                    ; 0x1fab8 $FAA8 FF 03 00                ;
bank7_UNKNOWN3                                                                 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fabb $FAAB 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fac3 $FAB3 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1facb $FABB DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fad3 $FAC3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fadb $FACB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fae3 $FAD3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1faeb $FADB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1faf3 $FAE3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fafb $FAEB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fb03 $FAF3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fb0b $FAFB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fb13 $FB03 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fb1b $FB0B FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fb23 $FB13 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fb2b $FB1B FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fb33 $FB23 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fb3b $FB2B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fb43 $FB33 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fb4b $FB3B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fb53 $FB43 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fb5b $FB4B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fb63 $FB53 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fb6b $FB5B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fb73 $FB63 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fb7b $FB6B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fb83 $FB73 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fb8b $FB7B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fb93 $FB83 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fb9b $FB8B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fba3 $FB93 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fbab $FB9B 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fbb3 $FBA3 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1fbbb $FBAB DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fbc3 $FBB3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fbcb $FBBB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fbd3 $FBC3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1fbdb $FBCB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1fbe3 $FBD3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fbeb $FBDB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fbf3 $FBE3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fbfb $FBEB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fc03 $FBF3 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fc0b $FBFB FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fc13 $FC03 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fc1b $FC0B FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fc23 $FC13 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fc2b $FC1B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fc33 $FC23 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fc3b $FC2B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fc43 $FC33 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fc4b $FC3B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fc53 $FC43 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fc5b $FC4B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fc63 $FC53 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fc6b $FC5B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fc73 $FC63 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fc7b $FC6B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fc83 $FC73 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fc8b $FC7B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fc93 $FC83 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fc9b $FC8B 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fca3 $FC93 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1fcab $FC9B DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fcb3 $FCA3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fcbb $FCAB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fcc3 $FCB3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1fccb $FCBB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1fcd3 $FCC3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fcdb $FCCB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fce3 $FCD3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fceb $FCDB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fcf3 $FCE3 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fcfb $FCEB FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fd03 $FCF3 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fd0b $FCFB FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fd13 $FD03 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fd1b $FD0B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fd23 $FD13 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fd2b $FD1B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fd33 $FD23 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fd3b $FD2B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fd43 $FD33 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fd4b $FD3B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fd53 $FD43 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fd5b $FD4B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fd63 $FD53 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fd6b $FD5B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fd73 $FD63 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fd7b $FD6B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fd83 $FD73 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40            ; 0x1fd8b $FD7B 00 FD 3F 00 40          ;
LFD80                                                                          ;
.byt    $03,$01                        ; 0x1fd90 $FD80 03 01                   ;
; ---------------------------------------------------------------------------- ;
bank7_code52                                                                   ;
lda      $0720                         ; 0x1fd92 $FD82 AD 20 07                ;
lsr                                    ; 0x1fd95 $FD85 4A                      ;
tax                                    ; 0x1fd96 $FD86 AA                      ;
lda      $071E                         ; 0x1fd97 $FD87 AD 1E 07                ;
and      #$1F                          ; 0x1fd9a $FD8A 29 1F                   ; keep bits ...x xxxx
sec                                    ; 0x1fd9c $FD8C 38                      ;
sbc      LFD80,x                       ; 0x1fd9d $FD8D FD 80 FD                ;
lsr                                    ; 0x1fda0 $FD90 4A                      ;
lsr                                    ; 0x1fda1 $FD91 4A                      ;
clc                                    ; 0x1fda2 $FD92 18                      ;
adc      #$C0                          ; 0x1fda3 $FD93 69 C0                   ;
sta      $01                           ; 0x1fda5 $FD95 85 01                   ;
lda      $071D                         ; 0x1fda7 $FD97 AD 1D 07                ;
ora      #$03                          ; 0x1fdaa $FD9A 09 03                   ; set bits  .... ..xx
sta      L0000                         ; 0x1fdac $FD9C 85 00                   ;
ldx      #$00                          ; 0x1fdae $FD9E A2 00                   ; X = 00
stx      $07AE                         ; 0x1fdb0 $FDA0 8E AE 07                ;
LFDA3                                                                          ;
lda      $2002                         ; 0x1fdb3 $FDA3 AD 02 20                ;
lda      L0000                         ; 0x1fdb6 $FDA6 A5 00                   ;
sta      $2006                         ; 0x1fdb8 $FDA8 8D 06 20                ;
lda      $01                           ; 0x1fdbb $FDAB A5 01                   ;
clc                                    ; 0x1fdbd $FDAD 18                      ;
adc      #$08                          ; 0x1fdbe $FDAE 69 08                   ;
sta      $2006                         ; 0x1fdc0 $FDB0 8D 06 20                ;
sta      $01                           ; 0x1fdc3 $FDB3 85 01                   ;
lda      $0471,x                       ; 0x1fdc5 $FDB5 BD 71 04                ;
sta      $2007                         ; 0x1fdc8 $FDB8 8D 07 20                ;
lda      #$00                          ; 0x1fdcb $FDBB A9 00                   ; A = 00
sta      $0471,x                       ; 0x1fdcd $FDBD 9D 71 04                ;
inx                                    ; 0x1fdd0 $FDC0 E8                      ;
cpx      #$07                          ; 0x1fdd1 $FDC1 E0 07                   ;
bcc      LFDA3                         ; 0x1fdd3 $FDC3 90 DE                   ;
lda      #$FF                          ; 0x1fdd5 $FDC5 A9 FF                   ; A = FF
sty      $03A3                         ; 0x1fdd7 $FDC7 8C A3 03                ;
rts                                    ; 0x1fdda $FDCA 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Continue_Save_Screen_Tile_Mappings                                       ;
.byt    $23,$D8,$7F,$FF                ; 0x1fddb $FDCB 23 D8 7F FF             ;
                                                                               ;
.byt    $23,$F7,$01,$FF                ; 0x1fddf $FDCF 23 F7 01 FF             ;
                                                                               ;
.byt    $20,$CA,$0A,$FA,$F4,$DC,$E8,$E7; 0x1fde3 $FDD3 20 CA 0A FA F4 DC E8 E7 ;CONTINUE (FA = Magic Bag Tile)
.byt    $ED,$E2,$E7,$EE,$DE            ; 0x1fdeb $FDDB ED E2 E7 EE DE          ;
                                                                               ;
.byt    $21,$0C,$04,$EC,$DA,$EF,$DE    ; 0x1fdf0 $FDE0 21 0C 04 EC DA EF DE    ;SAVE
                                                                               ;
.byt    $21,$83,$5A,$CB                ; 0x1fdf7 $FDE7 21 83 5A CB             ;
                                                                               ;
.byt    $23,$03,$5A,$CB                ; 0x1fdfb $FDEB 23 03 5A CB             ;
                                                                               ;
.byt    $21,$A3,$CB,$CC                ; 0x1fdff $FDEF 21 A3 CB CC             ;
                                                                               ;
.byt    $21,$BC,$CB,$CC                ; 0x1fe03 $FDF3 21 BC CB CC             ;
                                                                               ;
.byt    $21,$83,$01,$CA                ; 0x1fe07 $FDF7 21 83 01 CA             ;
                                                                               ;
.byt    $21,$9C,$01,$CA                ; 0x1fe0b $FDFB 21 9C 01 CA             ;
                                                                               ;
.byt    $23,$03,$01,$CA                ; 0x1fe0f $FDFF 23 03 01 CA             ;
                                                                               ;
.byt    $23,$1C,$01,$CA                ; 0x1fe13 $FE03 23 1C 01 CA             ;
                                                                               ;
.byt    $21,$CC,$07,$DC,$DA,$EE,$ED,$E2; 0x1fe17 $FE07 21 CC 07 DC DA EE ED E2 ;CAUTION
.byt    $E8,$E7                        ; 0x1fe1f $FE0F E8 E7                   ;
                                                                               ;
.byt    $22,$05,$16,$ED,$E8,$F4,$DA,$EF; 0x1fe21 $FE11 22 05 16 ED E8 F4 DA EF ;
.byt    $E8,$E2,$DD,$F4,$DD,$DA,$E6,$DA; 0x1fe29 $FE19 E8 E2 DD F4 DD DA E6 DA ;
.byt    $E0,$E2,$E7,$E0,$F4,$E0,$DA,$E6; 0x1fe31 $FE21 E0 E2 E7 E0 F4 E0 DA E6 ;
.byt    $DE                            ; 0x1fe39 $FE29 DE                      ;
                                                                               ;
.byt    $22,$45,$16,$E2,$E7,$DF,$E8,$F4; 0x1fe3a $FE2A 22 45 16 E2 E7 DF E8 F4 ;
.byt    $F4,$EC,$DA,$EF,$DE,$DD,$9C,$F4; 0x1fe42 $FE32 F4 EC DA EF DE DD 9C F4 ;
.byt    $F4,$E1,$E8,$E5,$DD,$F4,$F4,$E2; 0x1fe4a $FE3A F4 E1 E8 E5 DD F4 F4 E2 ;
.byt    $E7                            ; 0x1fe52 $FE42 E7                      ;
                                                                               ;
.byt    $22,$85,$16,$EB,$DE,$EC,$DE,$ED; 0x1fe53 $FE43 22 85 16 EB DE EC DE ED ;
.byt    $F4,$F4,$DB,$EE,$ED,$ED,$E8,$E7; 0x1fe5b $FE4B F4 F4 DB EE ED ED E8 E7 ;
.byt    $F4,$F4,$DA,$EC,$F4,$F4,$F2,$E8; 0x1fe63 $FE53 F4 F4 DA EC F4 F4 F2 E8 ;
.byt    $EE                            ; 0x1fe6b $FE5B EE                      ;
                                                                               ;
.byt    $22,$C5,$16,$ED,$EE,$EB,$E7,$F4; 0x1fe6c $FE5C 22 C5 16 ED EE EB E7 F4 ;
.byt    $E9,$E8,$F0,$DE,$EB,$F4,$E8,$DF; 0x1fe74 $FE64 E9 E8 F0 DE EB F4 E8 DF ;
.byt    $DF,$CF,$F4,$F4,$F4,$F4,$F4,$F4; 0x1fe7c $FE6C DF CF F4 F4 F4 F4 F4 F4 ;
.byt    $F4                            ; 0x1fe84 $FE74 F4                      ;
                                                                               ;
.byt    $FF                            ; 0x1fe85 $FE75 FF                      ;End Byte
; ---------------------------------------------------------------------------- ;
bank7_code53                                                                   ;
jsr      LD15C                         ; 0x1fe86 $FE76 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1fe89 $FE79 20 85 D3;
bank7_pointer_table                                                            ;
.word    bank7_code54__Flash_Text_QUIT_Red_and_White; 0x1fe8c $FE7C 87 FE      ;
.word    LCF21_SaveGameWhenChooseSAVEwhenDead__maybe; 0x1fe8e $FE7E 21 CF      ;
.word    LCF05                         ; 0x1fe90 $FE80 05 CF                   ;
.word    LD323                         ; 0x1fe92 $FE82 23 D3                   ;
; ---------------------------------------------------------------------------- ;
bank7_table32                                                                  ;
.byt    $01,$00,$FF                    ; 0x1fe94 $FE84 01 00 FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code54__Flash_Text_QUIT_Red_and_White                                    ;
lda      $07B0                         ; 0x1fe97 $FE87 AD B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
beq      LFEA6                         ; 0x1fe9a $FE8A F0 1A                   ;
dec      $07B0                         ; 0x1fe9c $FE8C CE B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
pha                                    ; 0x1fe9f $FE8F 48                      ;
ldx      #$04                          ; 0x1fea0 $FE90 A2 04                   ; X = 04
LFE92                                                                          ;
lda      bank7_pointer_table+$06,x     ; 0x1fea2 $FE92 BD 82 FE                ;
sta      L0302,x                       ; 0x1fea5 $FE95 9D 02 03                ;
dex                                    ; 0x1fea8 $FE98 CA                      ;
bpl      LFE92                         ; 0x1fea9 $FE99 10 F7                   ;
pla                                    ; 0x1feab $FE9B 68                      ;
and      #$04                          ; 0x1feac $FE9C 29 04                   ; keep bits .... .x..
beq      LFEA5                         ; 0x1feae $FE9E F0 05                   ;
lda      #$FF                          ; 0x1feb0 $FEA0 A9 FF                   ; A = FF
sta      $0305                         ; 0x1feb2 $FEA2 8D 05 03                ;; Empty Row Space Character
LFEA5                                                                          ;
rts                                    ; 0x1feb5 $FEA5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFEA6                                                                          ;
inc      $0738                         ; 0x1feb6 $FEA6 EE 38 07                ;
rts                                    ; 0x1feb9 $FEA9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_FEAA                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1feba $FEAA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1fec2 $FEB2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1feca $FEBA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1fed2 $FEC2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0x1feda $FECA FF FF FF FF FF FF       ;
; ---------------------------------------------------------------------------- ;
bank7_code55                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1fee0 $FED0 20 C9 FF                ; Load Bank $0769
LFED3                                                                          ;
stx      $01                           ; 0x1fee3 $FED3 86 01                   ;
lda      $0464,x                       ; 0x1fee5 $FED5 BD 64 04                ;
and      #$C0                          ; 0x1fee8 $FED8 29 C0                   ; keep bits xx.. ....
sta      $03                           ; 0x1feea $FEDA 85 03                   ;
asl                                    ; 0x1feec $FEDC 0A                      ;
rol                                    ; 0x1feed $FEDD 2A                      ;
rol                                    ; 0x1feee $FEDE 2A                      ;
asl                                    ; 0x1feef $FEDF 0A                      ;
tay                                    ; 0x1fef0 $FEE0 A8                      ;
lda      bank3_Pointer_table_for_Objects_Tile_Mappings,y; 0x1fef1 $FEE1 B9 00 85;
sta      L000E                         ; 0x1fef4 $FEE4 85 0E                   ;
lda      bank3_Pointer_table_for_Objects_Tile_Mappings+$01,y; 0x1fef6 $FEE6 B9 01 85;
sta      $0F                           ; 0x1fef9 $FEE9 85 0F                   ;
lda      $0464,x                       ; 0x1fefb $FEEB BD 64 04                ;
and      #$3F                          ; 0x1fefe $FEEE 29 3F                   ; keep bits ..xx xxxx
asl                                    ; 0x1ff00 $FEF0 0A                      ;
asl                                    ; 0x1ff01 $FEF1 0A                      ;
sta      L0002                         ; 0x1ff02 $FEF2 85 02                   ;
lda      $0740                         ; 0x1ff04 $FEF4 AD 40 07                ;
and      #$01                          ; 0x1ff07 $FEF7 29 01                   ; keep bits .... ...x
eor      #$01                          ; 0x1ff09 $FEF9 49 01                   ; flip bits .... ...x
asl                                    ; 0x1ff0b $FEFB 0A                      ;
adc      L0002                         ; 0x1ff0c $FEFC 65 02                   ;
tay                                    ; 0x1ff0e $FEFE A8                      ;
ldx      L0000                         ; 0x1ff0f $FEFF A6 00                   ;
lda      (L000E),y                     ; 0x1ff11 $FF01 B1 0E                   ;
sta      $03A7,x                       ; 0x1ff13 $FF03 9D A7 03                ;
iny                                    ; 0x1ff16 $FF06 C8                      ;
lda      (L000E),y                     ; 0x1ff17 $FF07 B1 0E                   ;
sta      $03A8,x                       ; 0x1ff19 $FF09 9D A8 03                ;
ldy      $04                           ; 0x1ff1c $FF0C A4 04                   ;
lda      $05                           ; 0x1ff1e $FF0E A5 05                   ;
bne      LFF20                         ; 0x1ff20 $FF10 D0 0E                   ;
lda      $01                           ; 0x1ff22 $FF12 A5 01                   ;
lsr                                    ; 0x1ff24 $FF14 4A                      ;
bcs      LFF30                         ; 0x1ff25 $FF15 B0 19                   ;
rol      $03                           ; 0x1ff27 $FF17 26 03                   ;
rol      $03                           ; 0x1ff29 $FF19 26 03                   ;
rol      $03                           ; 0x1ff2b $FF1B 26 03                   ;
jmp      LFF36                         ; 0x1ff2d $FF1D 4C 36 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFF20                                                                          ;
lda      $01                           ; 0x1ff30 $FF20 A5 01                   ;
lsr                                    ; 0x1ff32 $FF22 4A                      ;
bcs      LFF34                         ; 0x1ff33 $FF23 B0 0F                   ;
lsr      $03                           ; 0x1ff35 $FF25 46 03                   ;
lsr      $03                           ; 0x1ff37 $FF27 46 03                   ;
lsr      $03                           ; 0x1ff39 $FF29 46 03                   ;
lsr      $03                           ; 0x1ff3b $FF2B 46 03                   ;
jmp      LFF36                         ; 0x1ff3d $FF2D 4C 36 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFF30                                                                          ;
lsr      $03                           ; 0x1ff40 $FF30 46 03                   ;
lsr      $03                           ; 0x1ff42 $FF32 46 03                   ;
LFF34                                                                          ;
inc      $04                           ; 0x1ff44 $FF34 E6 04                   ;
LFF36                                                                          ;
lda      $0471,y                       ; 0x1ff46 $FF36 B9 71 04                ;
ora      $03                           ; 0x1ff49 $FF39 05 03                   ;
sta      $0471,y                       ; 0x1ff4b $FF3B 99 71 04                ;
inc      L0000                         ; 0x1ff4e $FF3E E6 00                   ;
inc      L0000                         ; 0x1ff50 $FF40 E6 00                   ;
ldx      $01                           ; 0x1ff52 $FF42 A6 01                   ;
inx                                    ; 0x1ff54 $FF44 E8                      ;
cpx      #$0D                          ; 0x1ff55 $FF45 E0 0D                   ;
bcc      LFED3                         ; 0x1ff57 $FF47 90 8A                   ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1ff59 $FF49 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_FF4C                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff5c $FF4C FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff64 $FF54 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff6c $FF5C FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff74 $FF64 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF                ; 0x1ff7c $FF6C FF FF FF FF             ;
; ---------------------------------------------------------------------------- ;
bank7_reset                                                                    ;
sei                                    ; 0x1ff80 $FF70 78                      ;
cld                                    ; 0x1ff81 $FF71 D8                      ;
ldx      #$00                          ; 0x1ff82 $FF72 A2 00                   ; X = 00
stx      $2000                         ; 0x1ff84 $FF74 8E 00 20                ;
inx                                    ; 0x1ff87 $FF77 E8                      ;
LFF78                                                                          ;
lda      $2002                         ; 0x1ff88 $FF78 AD 02 20                ;
bpl      LFF78                         ; 0x1ff8b $FF7B 10 FB                   ;
dex                                    ; 0x1ff8d $FF7D CA                      ;
beq      LFF78                         ; 0x1ff8e $FF7E F0 F8                   ;
txs                                    ; 0x1ff90 $FF80 9A                      ;
stx      bank3_Pointer_table_for_Background_Areas_Data; 0x1ff91 $FF81 8E 00 80 ;
stx      bank3_Area_Data_Towns4        ; 0x1ff94 $FF84 8E 00 A0                ;
stx      bank7_PowerON_code            ; 0x1ff97 $FF87 8E 00 C0                ;
stx      LE000                         ; 0x1ff9a $FF8A 8E 00 E0                ;
lda      #$0F                          ; 0x1ff9d $FF8D A9 0F                   ; A = 0F
jsr      bank7_Config_Register         ; 0x1ff9f $FF8F 20 9D FF                ;
jsr      bank7_chr_bank_switch__load_A ; 0x1ffa2 $FF92 20 B1 FF                ;
lda      #$07                          ; 0x1ffa5 $FF95 A9 07                   ; A = 07
jsr      LFFCC                         ; 0x1ffa7 $FF97 20 CC FF                ;
jmp      bank7_PowerON_code            ; 0x1ffaa $FF9A 4C 00 C0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Config_Register                                                          ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0x1ffad $FF9D 8D 00 80 ;
lsr                                    ; 0x1ffb0 $FFA0 4A                      ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0x1ffb1 $FFA1 8D 00 80 ;
lsr                                    ; 0x1ffb4 $FFA4 4A                      ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0x1ffb5 $FFA5 8D 00 80 ;
lsr                                    ; 0x1ffb8 $FFA8 4A                      ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0x1ffb9 $FFA9 8D 00 80 ;
lsr                                    ; 0x1ffbc $FFAC 4A                      ;
sta      bank3_Pointer_table_for_Background_Areas_Data; 0x1ffbd $FFAD 8D 00 80 ;
rts                                    ; 0x1ffc0 $FFB0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_chr_bank_switch__load_A                                                  ;
sta      bank3_Area_Data_Towns4        ; 0x1ffc1 $FFB1 8D 00 A0                ;
lsr                                    ; 0x1ffc4 $FFB4 4A                      ;
sta      bank3_Area_Data_Towns4        ; 0x1ffc5 $FFB5 8D 00 A0                ;
lsr                                    ; 0x1ffc8 $FFB8 4A                      ;
sta      bank3_Area_Data_Towns4        ; 0x1ffc9 $FFB9 8D 00 A0                ;
lsr                                    ; 0x1ffcc $FFBC 4A                      ;
sta      bank3_Area_Data_Towns4        ; 0x1ffcd $FFBD 8D 00 A0                ;
lsr                                    ; 0x1ffd0 $FFC0 4A                      ;
sta      bank3_Area_Data_Towns4        ; 0x1ffd1 $FFC1 8D 00 A0                ;
rts                                    ; 0x1ffd4 $FFC4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Load_Bank_0_at_0x8000                                                    ;
lda      #$00                          ; 0x1ffd5 $FFC5 A9 00                   ; A = 00
beq      LFFCC                         ; 0x1ffd7 $FFC7 F0 03                   ;
bank7_Load_Bank_769_at_0x8000                                                  ;
lda      $0769                         ; 0x1ffd9 $FFC9 AD 69 07                ;; Bank to switch to (other than 0 or 7)
LFFCC                                                                          ;
sta      LE000                         ; 0x1ffdc $FFCC 8D 00 E0                ;
lsr                                    ; 0x1ffdf $FFCF 4A                      ;
sta      LE000                         ; 0x1ffe0 $FFD0 8D 00 E0                ;
lsr                                    ; 0x1ffe3 $FFD3 4A                      ;
sta      LE000                         ; 0x1ffe4 $FFD4 8D 00 E0                ;
lsr                                    ; 0x1ffe7 $FFD7 4A                      ;
sta      LE000                         ; 0x1ffe8 $FFD8 8D 00 E0                ;
lsr                                    ; 0x1ffeb $FFDB 4A                      ;
sta      LE000                         ; 0x1ffec $FFDC 8D 00 E0                ;
rts                                    ; 0x1ffef $FFDF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table33                                                                  ;
.byt    $4C,$45,$47,$45,$4E,$44,$20,$4F; 0x1fff0 $FFE0 4C 45 47 45 4E 44 20 4F ;
.byt    $46,$20,$5A,$45,$4C,$44,$41,$32; 0x1fff8 $FFE8 46 20 5A 45 4C 44 41 32 ;
.byt    $98,$F2,$DD,$DB,$33,$04,$01,$0F; 0x20000 $FFF0 98 F2 DD DB 33 04 01 0F ;
.byt    $01,$00,$7B,$C0,$70,$FF,$F0,$FF; 0x20008 $FFF8 01 00 7B C0 70 FF F0 FF ;
                                                                               ;
                                                                               ;
