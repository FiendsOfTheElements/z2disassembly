; DISASSEMBLY ORIGINALLY WROTE BY TRAX (99.9% of his work)
 * = $8000                                                                      ;
; da65 V2.18 
; Created     2021-04-12 11 24 19                                              ;
; Input file  bank1_and_7.nes                                                  ;
; Page        1                                                                ;
                                                                               ;
                                                                               ;
;.setcpu  "6502"                                                               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L0000     = $0000                                                              ;
L000E     = $000E                                                              ;
L0302     = $0302                                                              ;
L0363     = $0363                                                              ;
L03A4     = $03A4                                                              ;
L05C9     = $05C9                                                              ;
L0600     = $0600                                                              ;
L0620     = $0620                                                              ;
L0640     = $0640                                                              ;
L0660     = $0660                                                              ;
L0680     = $0680                                                              ;
L06A0     = $06A0                                                              ;
L06C0     = $06C0                                                              ;
L6060     = $6060                                                              ;
L6261     = $6261                                                              ;
L696C     = $696C                                                              ;
L7000     = $7000                                                              ;
L7002     = $7002                                                              ;
L7006     = $7006                                                              ;
L7012     = $7012                                                              ;
L701E     = $701E                                                              ;
L7026     = $7026                                                              ;
L7034     = $7034                                                              ;
L703E     = $703E                                                              ;
L7048     = $7048                                                              ;
L7050     = $7050                                                              ;
L7068     = $7068                                                              ;
L706C     = $706C                                                              ;
L7072     = $7072                                                              ;
L7080     = $7080                                                              ;
L7088     = $7088                                                              ;
L7090     = $7090                                                              ;
L7096     = $7096                                                              ;
L70A0     = $70A0                                                              ;
L70A2     = $70A2                                                              ;
L70B6     = $70B6                                                              ;
L70CC     = $70CC                                                              ;
L70E0     = $70E0                                                              ;
L70F8     = $70F8                                                              ;
L7108     = $7108                                                              ;
L7126     = $7126                                                              ;
L7140     = $7140                                                              ;
L7158     = $7158                                                              ;
L7168     = $7168                                                              ;
L7176     = $7176                                                              ;
L717C     = $717C                                                              ;
L7188     = $7188                                                              ;
L7194     = $7194                                                              ;
L71AC     = $71AC                                                              ;
L71B3     = $71B3                                                              ;
L71C0     = $71C0                                                              ;
L71CF     = $71CF                                                              ;
L71D5     = $71D5                                                              ;
L71D8     = $71D8                                                              ;
L71DA     = $71DA                                                              ;
L71EB     = $71EB                                                              ;
L71FA     = $71FA                                                              ;
L7218     = $7218                                                              ;
L7223     = $7223                                                              ;
L7228     = $7228                                                              ;
L7237     = $7237                                                              ;
L7244     = $7244                                                              ;
L724D     = $724D                                                              ;
L7256     = $7256                                                              ;
L725B     = $725B                                                              ;
L7268     = $7268                                                              ;
L7273     = $7273                                                              ;
L7280     = $7280                                                              ;
L728D     = $728D                                                              ;
L729C     = $729C                                                              ;
L72AB     = $72AB                                                              ;
L72BA     = $72BA                                                              ;
L72C5     = $72C5                                                              ;
L72CA     = $72CA                                                              ;
L72D9     = $72D9                                                              ;
L72E2     = $72E2                                                              ;
L72E5     = $72E5                                                              ;
L72EE     = $72EE                                                              ;
L72F9     = $72F9                                                              ;
L7311     = $7311                                                              ;
L731C     = $731C                                                              ;
L7325     = $7325                                                              ;
L732A     = $732A                                                              ;
L7335     = $7335                                                              ;
L7342     = $7342                                                              ;
L734B     = $734B                                                              ;
L734E     = $734E                                                              ;
L7366     = $7366                                                              ;
L737E     = $737E                                                              ;
L7C18     = $7C18                                                              ;
L7D76     = $7D76                                                              ;
L7DA6     = $7DA6                                                              ;
L7EEA     = $7EEA                                                              ;
; ---------------------------------------------------------------------------- ;
bank1_Pointer_table_for_Background_Areas_Data                                  ;
.word    bank1_Background_Areas_Data   ; 0x4010 $8000 3C 8C                    ;
.word    L8C54                         ; 0x4012 $8002 54 8C                    ;
.word    L8C68                         ; 0x4014 $8004 68 8C                    ;
.word    L8C7C                         ; 0x4016 $8006 7C 8C                    ;
.word    L8C96                         ; 0x4018 $8008 96 8C                    ;
.word    L8CA8                         ; 0x401a $800A A8 8C                    ;
.word    L0000                         ; 0x401c $800C 00 00                    ;
; ---------------------------------------------------------------------------- ;
bank1_Palettes_for_West_Hyrule                                                 ;
;The first byte of 0x10 sets the background color                              ;
;FF = black                                                                    ;
.byt    $0F,$30,$12,$16,$0F,$36,$16,$07; 0x401e $800E 0F 30 12 16 0F 36 16 07  ;North Castle		1
.byt    $0F,$00,$10,$30,$0F,$23,$03,$0F; 0x4026 $8016 0F 00 10 30 0F 23 03 0F  ;
.byt    $0F,$30,$12,$16,$0F,$37,$27,$06; 0x402e $801E 0F 30 12 16 0F 37 27 06  ;Grotto			2
.byt    $0F,$27,$16,$0F,$0F,$30,$10,$00; 0x4036 $8026 0F 27 16 0F 0F 30 10 00  ;
.byt    $22,$30,$12,$16,$22,$29,$17,$09; 0x403e $802E 22 30 12 16 22 29 17 09  ;Desert			3
.byt    $22,$30,$36,$27,$22,$30,$10,$00; 0x4046 $8036 22 30 36 27 22 30 10 00  ;
.byt    $21,$30,$12,$16,$21,$30,$00,$0F; 0x404e $803E 21 30 12 16 21 30 00 0F  ;Grass			4
.byt    $21,$29,$19,$09,$21,$30,$10,$00; 0x4056 $8046 21 29 19 09 21 30 10 00  ;
.byt    $0F,$30,$12,$16,$0F,$17,$07,$08; 0x405e $804E 0F 30 12 16 0F 17 07 08  ;Forest			5
.byt    $0F,$29,$19,$09,$0F,$30,$10,$00; 0x4066 $8056 0F 29 19 09 0F 30 10 00  ;
.byt    $21,$30,$12,$16,$21,$37,$18,$0F; 0x406e $805E 21 30 12 16 21 37 18 0F  ;Swamp			6
.byt    $21,$29,$1C,$0C,$21,$30,$10,$00; 0x4076 $8066 21 29 1C 0C 21 30 10 00  ;
.byt    $03,$30,$12,$16,$03,$19,$09,$0F; 0x407e $806E 03 30 12 16 03 19 09 0F  ;Graveyard		7
.byt    $03,$27,$16,$0F,$03,$30,$00,$0F; 0x4086 $8076 03 27 16 0F 03 30 00 0F  ;
bank1_Palettes_for_West_Hyrule_Bridge                                          ;
.byt    $21,$30,$12,$16,$21,$37,$18,$0F; 0x408e $807E 21 30 12 16 21 37 18 0F  ;Bridge			8
.byt    $21,$30,$11,$01,$21,$30,$10,$00; 0x4096 $8086 21 30 11 01 21 30 10 00  ;
.byt    $0F,$30,$12,$16,$0F,$12,$01,$0F; 0x409e $808E 0F 30 12 16 0F 12 01 0F  ;Grotto without Candle	9
.byt    $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F; 0x40a6 $8096 0F 0F 0F 0F 0F 0F 0F 0F  ;
bank1_Palettes_for_Sprites_in_Grass__Desert__Swamp__Graveyard__Lava            ;
.byt    $FF,$18,$36,$2A                ; 0x40ae $809E FF 18 36 2A              ;
bank1_Palettes_for_Sprites_in_Grass__Desert__Swamp__Graveyard__Lava_Orange_Enemies ;
.byt    $FF,$16,$27,$30                ; 0x40b2 $80A2 FF 16 27 30              ;
bank1_Palettes_for_Sprites_in_Grass__Desert__Swamp__Graveyard__Lava_Red_Enemies ;
.byt    $FF,$0F,$16,$30                ; 0x40b6 $80A6 FF 0F 16 30              ;
bank1_Palettes_for_Sprites_in_Grass__Desert__Swamp__Graveyard__Lava_Blue_Enemies ;
.byt    $FF,$0F,$2C,$30                ; 0x40ba $80AA FF 0F 2C 30              ;
bank1_Palettes_for_Sprites_in_Forest__Palette_for_Link                         ;
.byt    $FF,$18,$36,$2A                ; 0x40be $80AE FF 18 36 2A              ;
bank1_Palettes_for_Sprites_in_Forest__Palette_for_Orange_Enemies               ;
.byt    $FF,$16,$27,$30                ; 0x40c2 $80B2 FF 16 27 30              ;
bank1_Palettes_for_Sprites_in_Forest__Palette_for_Red_Enemies                  ;
.byt    $FF,$07,$16,$30                ; 0x40c6 $80B6 FF 07 16 30              ;
bank1_Palettes_for_Sprites_in_Forest__Palette_for_Blue_Enemies                 ;
.byt    $FF,$0C,$2C,$30                ; 0x40ca $80BA FF 0C 2C 30              ;
bank1_unknown_palettes_maybe0                                                  ;
.byt    $FF,$18,$36,$2A                ; 0x40ce $80BE FF 18 36 2A              ;
bank1_unknown_palettes_maybe1                                                  ;
.byt    $FF,$16,$27,$30                ; 0x40d2 $80C2 FF 16 27 30              ;
bank1_unknown_palettes_maybe2                                                  ;
.byt    $FF,$0F,$1C                    ; 0x40d6 $80C6 FF 0F 1C                 ;
L80C9                                                                          ;
.byt    $2C                            ; 0x40d9 $80C9 2C                       ;
bank1_unknown_palettes_maybe3                                                  ;
.byt    $FF,$0F,$15,$25                ; 0x40da $80CA FF 0F 15 25              ;
bank1_unknown_palettes_maybe4                                                  ;
.byt    $FF,$18,$36,$2A                ; 0x40de $80CE FF 18 36 2A              ;
bank1_unknown_palettes_maybe5                                                  ;
.byt    $FF,$16,$27,$30                ; 0x40e2 $80D2 FF 16 27 30              ;
bank1_unknown_palettes_maybe6                                                  ;
.byt    $FF,$0F,$2A,$30                ; 0x40e6 $80D6 FF 0F 2A 30              ;
bank1_unknown_palettes_maybe7                                                  ;
.byt    $FF,$0F,$16,$26                ; 0x40ea $80DA FF 0F 16 26              ;
bank1_Grotto_without_Candle__Sprites_and_Background0                           ;
.byt    $FF,$01,$21,$11                ; 0x40ee $80DE FF 01 21 11              ;
bank1_Grotto_without_Candle__Sprites_and_Background1                           ;
.byt    $FF,$16,$27                    ; 0x40f2 $80E2 FF 16 27                 ;
L80E5                                                                          ;
.byt    $30                            ; 0x40f5 $80E5 30                       ;
bank1_Grotto_without_Candle__Sprites_and_Background2                           ;
.byt    $FF,$0F,$0F,$0F                ; 0x40f6 $80E6 FF 0F 0F 0F              ;
bank1_Grotto_without_Candle__Sprites_and_Background3                           ;
.byt    $FF,$0F,$0F,$0F                ; 0x40fa $80EA FF 0F 0F 0F              ;
; ---------------------------------------------------------------------------- ;
bank1_code0                                                                    ;
txa                                    ; 0x40fe $80EE 8A                       ;
lsr                                    ; 0x40ff $80EF 4A                       ;
lsr                                    ; 0x4100 $80F0 4A                       ;
lsr                                    ; 0x4101 $80F1 4A                       ;
lsr                                    ; 0x4102 $80F2 4A                       ;
tax                                    ; 0x4103 $80F3 AA                       ;
dex                                    ; 0x4104 $80F4 CA                       ;
lda      $0730                         ; 0x4105 $80F5 AD 30 07                 ; Position of Object Placement
and      #$F0                          ; 0x4108 $80F8 29 F0                    ; keep bits xxxx ....
cmp      #$F0                          ; 0x410a $80FA C9 F0                    ;
bne      L8103                         ; 0x410c $80FC D0 05                    ;
txa                                    ; 0x410e $80FE 8A                       ;
clc                                    ; 0x410f $80FF 18                       ;
adc      #$0F                          ; 0x4110 $8100 69 0F                    ;
tax                                    ; 0x4112 $8102 AA                       ;
L8103                                                                          ;
txa                                    ; 0x4113 $8103 8A                       ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x4114 $8104 20 85 D3;
bank1_Pointer_table_for_Objects_Construction                                   ;
.word    L0000                         ; 0x4117 $8107 00 00                    ;Invalid object (would be Palissade Pass in Bank 2)
.word    bank1_Objects_Construction_Object_2high_Xwide; 0x4119 $8109 F3 81     ;Object 2 high, X wide
.word    bank1_Objects_Construction_Object_2high_Xwide; 0x411b $810B F3 81     ;Object 2 high, X wide
.word    bank1_Objects_Construction_Object_2high_Xwide; 0x411d $810D F3 81     ;Object 2 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x411f $810F 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x4121 $8111 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x4123 $8113 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x4125 $8115 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x4127 $8117 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x4129 $8119 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x412b $811B 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_1high_Xwide; 0x412d $811D 01 82     ;Object 1 high, X wide
.word    bank1_Objects_Construction_Object_Xhigh_1wide_SingleTileType; 0x412f $811F 17 82;Object X high, 1 wide, single tile type
.word    bank1_Objects_Construction_Object_Xhigh_1wide; 0x4131 $8121 1D 82     ;Object X high, 1 wide
.word    bank1_Objects_Construction_Object_Xhigh_1wide; 0x4133 $8123 1D 82     ;Object X high, 1 wide	(Fx)
bank1_Special_Objects__Y_Position_F                                            ;
.word    bank1_Objects_Construction_Object_Xhigh_1wide; 0x4135 $8125 1D 82     ;Object X high, 1 wide	(1x)
.word    bank1_Objects_Construction_Object_LavaPit; 0x4137 $8127 8A 82         ;Lava Pit		(2x)
.word    bank1_Objects_Construction_Object_Cactus; 0x4139 $8129 65 82          ;Cactus			(3x)
.word    bank1_Objects_Construction_Object_Cactus_with_Stem; 0x413b $812B D5 82;Cactus with Stem	(4x)
.word    bank1_Objects_Construction_Object_Elevator; 0x413d $812D BA 82        ;Elevator		(5x)
; ---------------------------------------------------------------------------- ;
bank1_code1                                                                    ;
txa                                    ; 0x413f $812F 8A                       ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x4140 $8130 20 85 D3; Set Object Construction Address (below)
bank1_Pointer_table_for_Small_Objects_Construction_0x                          ;
.word    bank1_Small_Objects_Construction_Gravestone; 0x4143 $8133 F9 82       ;Gravestone
.word    bank1_Small_Objects_Construction_Cross; 0x4145 $8135 EE 82            ;Cross
.word    bank1_Small_Objects_Construction_SlantedCross; 0x4147 $8137 F2 82     ;Slanted Cross
.word    bank1_Small_Objects_Construction_TreeStump; 0x4149 $8139 C8 82        ;Tree Stump
.word    bank1_Small_Objects_Construction_Dolmen; 0x414b $813B 13 83           ;Dolmen
.word    bank1_Small_Objects_Construction_LockedDoor_Ypos8; 0x414d $813D C1 82 ;Locked Door (Y Position set to 8)
L8140     = * + $0001                                                          ;
.word    bank1_Small_Objects_Construction_Zelda; 0x414f $813F 40 83            ;Zelda
.word    bank1_Small_Objects_Construction_Zelda; 0x4151 $8141 40 83            ;Zelda
.word    bank1_Small_Objects_Construction_PitExtendingToGround; 0x4153 $8143 31 83;Pit Extending to Ground
.word    bank1_Small_Objects_Construction_LongCloud; 0x4155 $8145 52 83        ;Long Cloud
.word    bank1_Small_Objects_Construction_Short_Cloud; 0x4157 $8147 58 83      ;Short Cloud
L8149                                                                          ;
.word    bank1_Small_Objects_Construction_Short_Cloud; 0x4159 $8149 58 83      ;Short Cloud
.word    bank1_Small_Objects_Construction_Short_Cloud; 0x415b $814B 58 83      ;Short Cloud
.word    bank1_Small_Objects_Construction_Short_Cloud; 0x415d $814D 58 83      ;Short Cloud
.word    bank1_Small_Objects_Construction_Short_Cloud; 0x415f $814F 58 83      ;Short Cloud
.word    bank1_Small_Objects_Construction_Short_Cloud; 0x4161 $8151 58 83      ;Short Cloud
; ---------------------------------------------------------------------------- ;
bank1_Tables_for_Level_Layers_Data                                             ;
.byt    $42,$42,$54,$52,$42,$42,$55,$53; 0x4163 $8153 42 42 54 52 42 42 55 53  ;
.byt    $53,$40,$40,$8D,$90,$40,$40,$8D; 0x416b $815B 53 40 40 8D 90 40 40 8D  ;
.byt    $8C,$90,$40,$40                ; 0x4173 $8163 8C 90 40 40              ;
L8167                                                                          ;
.byt    $40,$80,$40,$40,$40,$89,$89,$40; 0x4177 $8167 40 80 40 40 40 89 89 40  ;
.byt    $40,$40,$87,$40,$40,$40,$91,$91; 0x417f $816F 40 40 87 40 40 40 91 91  ;
.byt    $40,$40,$40,$8A                ; 0x4187 $8177 40 40 40 8A              ;
L817B                                                                          ;
.byt    $40,$40,$40,$8F,$8F,$51,$51,$54; 0x418b $817B 40 40 40 8F 8F 51 51 54  ;
.byt    $52,$51,$51,$55,$53,$53,$40,$40; 0x4193 $8183 52 51 51 55 53 53 40 40  ;
.byt    $40,$C9,$40,$40,$8B,$8B,$C9,$40; 0x419b $818B 40 C9 40 40 8B 8B C9 40  ;
.byt    $40,$54,$52,$40,$40,$55,$53,$53; 0x41a3 $8193 40 54 52 40 40 55 53 53  ;
bank1_Table_for_Level_Layers_Data_pointers                                     ;
.byt    $53,$5C,$65,$6E,$77,$80,$89,$92; 0x41ab $819B 53 5C 65 6E 77 80 89 92  ;Pointer created from 81 ($81AC) and a value from this table
; ---------------------------------------------------------------------------- ;
Build_Pointer_for_Layer_Tiles_Bank_1_and_2                                     ;
;bank1_Build_A_Pointer_With_81                                                 ;
;Build a pointer with 81 and a value from $819B, 10C as the index              ;
;Store the last value (index 8) into 10D                                       ;
ldx      $010C                         ; 0x41b3 $81A3 AE 0C 01                 ;; Area Palette Group (Type of Area)	; Area Ground Type (0-7)
lda      bank1_Table_for_Level_Layers_Data_pointers,x; 0x41b6 $81A6 BD 9B 81   ;
sta      $0C                           ; 0x41b9 $81A9 85 0C                    ;
lda      #$81                          ; 0x41bb $81AB A9 81                    ; A = 81
sta      $0D                           ; 0x41bd $81AD 85 0D                    ;
ldy      #$08                          ; 0x41bf $81AF A0 08                    ; Y = 08
L81B1                                                                          ;
lda      ($0C),y                       ; 0x41c1 $81B1 B1 0C                    ;
sta      $010D                         ; 0x41c3 $81B3 8D 0D 01                 ;; Area Bottom Row Tile Code
rts                                    ; 0x41c6 $81B6 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Tile_Codes_for_Objects_Set0_BackgroundSky                                ;
;xx.. ....	Table selector, from pointer table at $4500                         ;
;..xx xxxx	Tile Code                                                           ;
.byt    $40                            ; 0x41c7 $81B7 40                       ;
L81B8                                                                          ;
.byt    $40                            ; 0x41c8 $81B8 40                       ;
bank1_Tile_Codes_for_Objects_Set0_ForestLeaves_2high                           ;
.byt    $8C,$8D,$8C,$8D                ; 0x41c9 $81B9 8C 8D 8C 8D              ;
bank1_Tile_Codes_for_Objects_Set0_Curtains_2high                               ;
.byt    $C0,$C1                        ; 0x41cd $81BD C0 C1                    ;
bank1_Tile_Codes_for_Objects_Set0_ForestLeaves_1high                           ;
.byt    $8D,$8E                        ; 0x41cf $81BF 8D 8E                    ;
bank1_Tile_Codes_for_Objects_Set0_BreakableBlocks_1high                        ;
.byt    $61,$61                        ; 0x41d1 $81C1 61 61                    ;
bank1_Tile_Codes_for_Objects_Set0_HorizontalPit_1high                          ;
.byt    $40,$40                        ; 0x41d3 $81C3 40 40                    ;
bank1_Tile_Codes_for_Objects_Set0_SingleWeed_1high                             ;
.byt    $81,$81                        ; 0x41d5 $81C5 81 81                    ;
bank1_Tile_Codes_for_Objects_Set0_DoubleWeed_1high                             ;
.byt    $82,$82                        ; 0x41d7 $81C7 82 82                    ;
bank1_Tile_Codes_for_Objects_Set0_NorthCastleCarpet_1high                      ;
.byt    $50,$50                        ; 0x41d9 $81C9 50 50                    ;
bank1_Tile_Codes_for_Objects_Set0_NorthCastleBricks_1high                      ;
.byt    $8B,$8B                        ; 0x41db $81CB 8B 8B                    ;
bank1_Tile_Codes_for_Objects_Set0_VolcanoBackground_1wide                      ;
.byt    $51,$51                        ; 0x41dd $81CD 51 51                    ;
bank1_Tile_Codes_for_Objects_Set0_BreakableBlocks_1wide                        ;
.byt    $61,$61                        ; 0x41df $81CF 61 61                    ;
bank1_Tile_Codes_for_Objects_Set0_TreeTrunk_1wide                              ;
.byt    $4C,$4B                        ; 0x41e1 $81D1 4C 4B                    ;
bank1_Tile_Codes_for_Objects_Set0_Column_1wide                                 ;
.byt    $86,$85                        ; 0x41e3 $81D3 86 85                    ;
bank1_Tile_Codes_for_Objects_Set1_BackgroundSky                                ;
.byt    $40                            ; 0x41e5 $81D5 40                       ;
L81D6                                                                          ;
.byt    $40                            ; 0x41e6 $81D6 40                       ;
bank1_Tile_Codes_for_Objects_Set1_WideRockFloor_2high                          ;
.byt    $52,$53                        ; 0x41e7 $81D7 52 53                    ;
bank1_Tile_Codes_for_Objects_Set1_WideRockCeiling_2high                        ;
.byt    $53,$55                        ; 0x41e9 $81D9 53 55                    ;
bank1_Tile_Codes_for_Objects_Set1_Bridge_2high                                 ;
.byt    $4D,$5D                        ; 0x41eb $81DB 4D 5D                    ;
bank1_Tile_Codes_for_Objects_Set1_RockPlatform_1high                           ;
.byt    $54,$54                        ; 0x41ed $81DD 54 54                    ;
bank1_Tile_Codes_for_Objects_Set1_BreakableBlocks_1high                        ;
.byt    $61,$61                        ; 0x41ef $81DF 61 61                    ;
bank1_Tile_Codes_for_Objects_Set1_BreakingBridge_1high                         ;
.byt    $60,$60                        ; 0x41f1 $81E1 60 60                    ;
bank1_Tile_Codes_for_Objects_Set1_SingleWeed_1high                             ;
.byt    $81,$81                        ; 0x41f3 $81E3 81 81                    ;
bank1_Tile_Codes_for_Objects_Set1_DoubleWeed_1high                             ;
.byt    $82,$82                        ; 0x41f5 $81E5 82 82                    ;
bank1_Tile_Codes_for_Objects_Set1_HorizontalPit_1high                          ;
.byt    $40,$40                        ; 0x41f7 $81E7 40 40                    ;
bank1_Tile_Codes_for_Objects_Set1_NorthCastleBricks_1high                      ;
.byt    $8B,$8B                        ; 0x41f9 $81E9 8B 8B                    ;
bank1_Tile_Codes_for_Objects_Set1_VolcanoBackground_1high                      ;
.byt    $51,$51                        ; 0x41fb $81EB 51 51                    ;
bank1_Tile_Codes_for_Objects_Set1_BreakableBlocks_1wide                        ;
.byt    $61,$61                        ; 0x41fd $81ED 61 61                    ;
bank1_Tile_Codes_for_Objects_Set1_RockFloor_1wide                              ;
.byt    $52,$53                        ; 0x41ff $81EF 52 53                    ;
bank1_Tile_Codes_for_Objects_Set1_VerticalDolmen_1wide                         ;
.byt    $59,$5A                        ; 0x4201 $81F1 59 5A                    ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_2high_Xwide                                  ;
jsr      bank1_Objects_Construction_Object_1high_Xwide; 0x4203 $81F3 20 01 82  ; Object 1 high, X wide
lda      L0000                         ; 0x4206 $81F6 A5 00                    ;
sta      $0112                         ; 0x4208 $81F8 8D 12 01                 ;; Tile Code 0 for Object
jsr      LDF4C                         ; 0x420b $81FB 20 4C DF                 ; Go down 1 row
jmp      L8204                         ; 0x420e $81FE 4C 04 82                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_1high_Xwide                                  ;
jsr      L8247                         ; 0x4211 $8201 20 47 82                 ; Get Tile Codes for Object ($112 and $00)
L8204                                                                          ;
lda      $0731                         ; 0x4214 $8204 AD 31 07                 ; Level Object Type and Size
L8207                                                                          ;
and      #$0F                          ; 0x4217 $8207 29 0F                    ; keep bits .... xxxx
tax                                    ; 0x4219 $8209 AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x421a $820A 20 44 C9           ; Set RAM Address for Object (0E-0F)
L820D                                                                          ;
lda      $0112                         ; 0x421d $820D AD 12 01                 ;; Tile Code 0 for Object
jsr      bank7_Set_tile_and_move_right_1_column; 0x4220 $8210 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0x4223 $8213 CA                       ;
bpl      L820D                         ; 0x4224 $8214 10 F7                    ;
rts                                    ; 0x4226 $8216 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_Xhigh_1wide_SingleTileType                   ;
jsr      L8247                         ; 0x4227 $8217 20 47 82                 ; Get Tile Codes for Object ($112 and $00)
jmp      L8234                         ; 0x422a $821A 4C 34 82                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_Xhigh_1wide                                  ;
jsr      L8247                         ; 0x422d $821D 20 47 82                 ; Get Tile Codes for Object ($112 and $00)
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x4230 $8220 20 44 C9           ; Set RAM Address for Object (0E-0F)
lda      $0112                         ; 0x4233 $8223 AD 12 01                 ;; Tile Code 0 for Object
jsr      LDF56                         ; 0x4236 $8226 20 56 DF                 ; Set tile and go down 1 row
sta      $0730                         ; 0x4239 $8229 8D 30 07                 ; Position of Object Placement
dec      $0731                         ; 0x423c $822C CE 31 07                 ; Level Object Type and Size
lda      L0000                         ; 0x423f $822F A5 00                    ;
sta      $0112                         ; 0x4241 $8231 8D 12 01                 ;; Tile Code 0 for Object
L8234                                                                          ;
lda      $0731                         ; 0x4244 $8234 AD 31 07                 ; Level Object Type and Size
and      #$0F                          ; 0x4247 $8237 29 0F                    ; keep bits .... xxxx
tax                                    ; 0x4249 $8239 AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x424a $823A 20 44 C9           ; Set RAM Address for Object (0E-0F)
L823D                                                                          ;
lda      $0112                         ; 0x424d $823D AD 12 01                 ;
jsr      LDF56                         ; 0x4250 $8240 20 56 DF                 ; Set tile and go down 1 row
dex                                    ; 0x4253 $8243 CA                       ;
bpl      L823D                         ; 0x4254 $8244 10 F7                    ; Loop
rts                                    ; 0x4256 $8246 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8247                                                                          ;
txa                                    ; 0x4257 $8247 8A                       ;
asl                                    ; 0x4258 $8248 0A                       ;
tax                                    ; 0x4259 $8249 AA                       ;
ldy      #$01                          ; 0x425a $824A A0 01                    ; Y = 01
lda      ($D4),y                       ; 0x425c $824C B1 D4                    ;
asl                                    ; 0x425e $824E 0A                       ;
lda      bank1_Tile_Codes_for_Objects_Set1_BackgroundSky,x; 0x425f $824F BD D5 81; Tile Codes for Objects - Set 1
bcs      L8257                         ; 0x4262 $8252 B0 03                    ;
lda      bank1_Tile_Codes_for_Objects_Set0_BackgroundSky,x; 0x4264 $8254 BD B7 81; Tile Codes for Objects - Set 0
L8257                                                                          ;
sta      $0112                         ; 0x4267 $8257 8D 12 01                 ;; Tile Code 0 for Object
lda      L81D6,x                       ; 0x426a $825A BD D6 81                 ;
bcs      L8262                         ; 0x426d $825D B0 03                    ;
lda      L81B8,x                       ; 0x426f $825F BD B8 81                 ;
L8262                                                                          ;
sta      L0000                         ; 0x4272 $8262 85 00                    ;
rts                                    ; 0x4274 $8264 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_Cactus                                       ;
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x4275 $8265 20 47 C9           ;
lda      $0730                         ; 0x4278 $8268 AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0x427b $826B 29 0F                    ; keep bits .... xxxx
ora      #$90                          ; 0x427d $826D 09 90                    ; set bits  x..x .... (Y position of cactus)
sta      $0730                         ; 0x427f $826F 8D 30 07                 ; Position of Object Placement
tay                                    ; 0x4282 $8272 A8                       ;
lda      $0731                         ; 0x4283 $8273 AD 31 07                 ;; Level Object Type and Size
and      #$0F                          ; 0x4286 $8276 29 0F                    ; keep bits .... xxxx
tax                                    ; 0x4288 $8278 AA                       ;
L8279                                                                          ;
lda      #$47                          ; 0x4289 $8279 A9 47                    ; A = 47 (Cactus Base Tile Code)
sta      (L000E),y                     ; 0x428b $827B 91 0E                    ;
tya                                    ; 0x428d $827D 98                       ;
sec                                    ; 0x428e $827E 38                       ;
sbc      #$10                          ; 0x428f $827F E9 10                    ; Go up 1 row
tay                                    ; 0x4291 $8281 A8                       ;
dex                                    ; 0x4292 $8282 CA                       ;
bne      L8279                         ; 0x4293 $8283 D0 F4                    ; loop to $4279
lda      #$46                          ; 0x4295 $8285 A9 46                    ; A = 46 (Cactus Top Tile Code)
sta      (L000E),y                     ; 0x4297 $8287 91 0E                    ;
rts                                    ; 0x4299 $8289 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_LavaPit                                      ;
lda      $0730                         ; 0x429a $828A AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0x429d $828D 29 0F                    ; keep bits .... xxxx
ora      #$A0                          ; 0x429f $828F 09 A0                    ; set bits  x.x. ....
sta      $0730                         ; 0x42a1 $8291 8D 30 07                 ; Position of Object Placement
lda      #$80                          ; 0x42a4 $8294 A9 80                    ; A = 80 (Lava Surface Tile Code)
sta      $0112                         ; 0x42a6 $8296 8D 12 01                 ;; Tile Code 0 for Object
L8299                                                                          ;
lda      $0731                         ; 0x42a9 $8299 AD 31 07                 ;; Level Object Type and Size
and      #$0F                          ; 0x42ac $829C 29 0F                    ; keep bits .... xxxx
tax                                    ; 0x42ae $829E AA                       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x42af $829F 20 44 C9           ; Set RAM Address for Object (0E-0F)
L82A2                                                                          ;
lda      $0112                         ; 0x42b2 $82A2 AD 12 01                 ;
jsr      bank7_Set_tile_and_move_right_1_column; 0x42b5 $82A5 20 E7 DE         ; Set tile and move right 1 column
dex                                    ; 0x42b8 $82A8 CA                       ;
bpl      L82A2                         ; 0x42b9 $82A9 10 F7                    ; loop to $42A2
lda      #$89                          ; 0x42bb $82AB A9 89                    ; A = 89 (Lava Tile Code)
sta      $0112                         ; 0x42bd $82AD 8D 12 01                 ;; Tile Code 0 for Object
jsr      LDF4C                         ; 0x42c0 $82B0 20 4C DF                 ; Go down 1 row
and      #$F0                          ; 0x42c3 $82B3 29 F0                    ; keep bits xxxx ....
cmp      #$D0                          ; 0x42c5 $82B5 C9 D0                    ;
bcc      L8299                         ; 0x42c7 $82B7 90 E0                    ;
rts                                    ; 0x42c9 $82B9 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_Elevator                                     ;
lda      $010A                         ; 0x42ca $82BA AD 0A 01                 ;
sta      $0757                         ; 0x42cd $82BD 8D 57 07                 ;; Position of Elevator in Map
rts                                    ; 0x42d0 $82C0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_LockedDoor_Ypos8                              ;
lda      $010A                         ; 0x42d1 $82C1 AD 0A 01                 ;
sta      $0758                         ; 0x42d4 $82C4 8D 58 07                 ;; Position of Locked Door in Map
rts                                    ; 0x42d7 $82C7 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_TreeStump                                     ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x42d8 $82C8 20 44 C9           ; Set RAM Address for Object (0E-0F)
lda      #$5B                          ; 0x42db $82CB A9 5B                    ; A = 5B (Tree Stump Top Tile Code)
jsr      LDF56                         ; 0x42dd $82CD 20 56 DF                 ; Set tile and go down 1 row
lda      #$5C                          ; 0x42e0 $82D0 A9 5C                    ; A = 5C (Tree Stump Bottom Tile Code)
sta      (L000E),y                     ; 0x42e2 $82D2 91 0E                    ;
rts                                    ; 0x42e4 $82D4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Objects_Construction_Object_Cactus_with_Stem                             ;
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x42e5 $82D5 20 47 C9           ;
lda      $0730                         ; 0x42e8 $82D8 AD 30 07                 ; Position of Object Placement
and      #$0F                          ; 0x42eb $82DB 29 0F                    ; keep bits .... xxxx
ora      #$90                          ; 0x42ed $82DD 09 90                    ; set  bits x..x .... (default height)
tay                                    ; 0x42ef $82DF A8                       ;
lda      #$49                          ; 0x42f0 $82E0 A9 49                    ; A = 49 (Cactus with Stem Bottom Tile Code)
sta      (L000E),y                     ; 0x42f2 $82E2 91 0E                    ;
tya                                    ; 0x42f4 $82E4 98                       ;
sec                                    ; 0x42f5 $82E5 38                       ;
sbc      #$10                          ; 0x42f6 $82E6 E9 10                    ; Go up 1 row
tay                                    ; 0x42f8 $82E8 A8                       ;
lda      #$48                          ; 0x42f9 $82E9 A9 48                    ; A = 48 (Cactus with Stem Top Tile Code)
sta      (L000E),y                     ; 0x42fb $82EB 91 0E                    ;
rts                                    ; 0x42fd $82ED 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_Cross                                         ;
ldx      #$00                          ; 0x42fe $82EE A2 00                    ; X = 00
beq      L82FB                         ; 0x4300 $82F0 F0 09                    ;
bank1_Small_Objects_Construction_SlantedCross                                  ;
ldx      #$01                          ; 0x4302 $82F2 A2 01                    ; X = 01
bne      L82FB                         ; 0x4304 $82F4 D0 05                    ;
bank1_Table_for_Cross__Slanted_Cross_and_Gravestone                            ;
.byt    $C6,$C7,$C5                    ; 0x4306 $82F6 C6 C7 C5                 ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_Gravestone                                    ;
ldx      #$02                          ; 0x4309 $82F9 A2 02                    ; X = 02
L82FB                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x430b $82FB 20 44 C9           ; Set RAM Address for Object (0E-0F)
lda      bank1_Table_for_Cross__Slanted_Cross_and_Gravestone,x; 0x430e $82FE BD F6 82; refer to table at $42F6
sta      (L000E),y                     ; 0x4311 $8301 91 0E                    ;
L8303                                                                          ;
rts                                    ; 0x4313 $8303 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Dolmen_Tile_Codes                                              ;
.byt    $56,$57,$57,$58,$FF,$59,$40,$40; 0x4314 $8304 56 57 57 58 FF 59 40 40  ;
.byt    $59,$FF,$5A,$40,$40,$5A,$FF    ; 0x431c $830C 59 FF 5A 40 40 5A FF     ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_Dolmen                                        ;
ldx      #$00                          ; 0x4323 $8313 A2 00                    ; X = 00
L8315                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x4325 $8315 20 44 C9           ; Set RAM Address for Object (0E-0F)
L8318                                                                          ;
lda      bank1_Table_for_Dolmen_Tile_Codes,x; 0x4328 $8318 BD 04 83            ; refer to table at $4304
cmp      #$FF                          ; 0x432b $831B C9 FF                    ;
beq      L8326                         ; 0x432d $831D F0 07                    ;
jsr      bank7_Set_tile_and_move_right_1_column; 0x432f $831F 20 E7 DE         ; Set tile and move right 1 column
inx                                    ; 0x4332 $8322 E8                       ;
jmp      L8318                         ; 0x4333 $8323 4C 18 83                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8326                                                                          ;
cpx      #$0E                          ; 0x4336 $8326 E0 0E                    ; bottom limit
beq      L8303                         ; 0x4338 $8328 F0 D9                    ;
jsr      LDF4C                         ; 0x433a $832A 20 4C DF                 ; Go down 1 row
inx                                    ; 0x433d $832D E8                       ;
jmp      L8315                         ; 0x433e $832E 4C 15 83                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_PitExtendingToGround                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x4341 $8331 20 44 C9           ; Set RAM Address for Object (0E-0F)
L8334                                                                          ;
lda      #$40                          ; 0x4344 $8334 A9 40                    ; A = 40 (Empty Tile)
jsr      LDF56                         ; 0x4346 $8336 20 56 DF                 ; Set tile and go down 1 row
and      #$F0                          ; 0x4349 $8339 29 F0                    ; keep bits xxxx ....
cmp      #$D0                          ; 0x434b $833B C9 D0                    ; stop at bottom of screen
bcc      L8334                         ; 0x434d $833D 90 F5                    ;
rts                                    ; 0x434f $833F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_Zelda                                         ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x4350 $8340 20 44 C9           ; Set RAM Address for Object (0E-0F)
ldx      #$01                          ; 0x4353 $8343 A2 01                    ; X = 01
lda      #$4E                          ; 0x4355 $8345 A9 4E                    ; A = 4E (Zelda's Head Tile Code)
bne      L834B                         ; 0x4357 $8347 D0 02                    ;
L8349                                                                          ;
lda      #$4F                          ; 0x4359 $8349 A9 4F                    ; A = 4F (Zelda's Body Tile Code)
L834B                                                                          ;
sta      (L000E),y                     ; 0x435b $834B 91 0E                    ;
iny                                    ; 0x435d $834D C8                       ;
dex                                    ; 0x435e $834E CA                       ;
bpl      L8349                         ; 0x435f $834F 10 F8                    ;
rts                                    ; 0x4361 $8351 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_LongCloud                                     ;
ldx      #$00                          ; 0x4362 $8352 A2 00                    ; X = 00
beq      L835A                         ; 0x4364 $8354 F0 04                    ;
bank1_Table_for_Right_End_of_Clouds_Tile_Codes                                 ;
.byt    $C3,$C4                        ; 0x4366 $8356 C3 C4                    ;
; ---------------------------------------------------------------------------- ;
bank1_Small_Objects_Construction_Short_Cloud                                   ;
ldx      #$01                          ; 0x4368 $8358 A2 01                    ; X = 01
L835A                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x436a $835A 20 44 C9           ; Set RAM Address for Object (0E-0F)
lda      #$C2                          ; 0x436d $835D A9 C2                    ; A = C2 (Cloud Left End Tile Code)
sta      (L000E),y                     ; 0x436f $835F 91 0E                    ;
iny                                    ; 0x4371 $8361 C8                       ;
lda      bank1_Table_for_Right_End_of_Clouds_Tile_Codes,x; 0x4372 $8362 BD 56 83; refer to table at $4356
sta      (L000E),y                     ; 0x4375 $8365 91 0E                    ;
rts                                    ; 0x4377 $8367 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Check_for_Hidden_Palace_spot                                             ;
lda      $0706                         ; 0x4378 $8368 AD 06 07                 ; Current Region
cmp      #$02                          ; 0x437b $836B C9 02                    ; Region 02 = East Hyrule
bne      L838E                         ; 0x437d $836D D0 1F                    ; if NOT 02, return
lda      $73                           ; 0x437f $836F A5 73                    ; Y position on map (square unit)
cmp      #$64                          ; 0x4381 $8371 C9 64                    ; Y position of Hidden Palace call spot
bne      bank1_Check_for_Spider_in_OW  ; 0x4383 $8373 D0 12                    ;
lda      $74                           ; 0x4385 $8375 A5 74                    ; X position on map (square unit)
cmp      #$2D                          ; 0x4387 $8377 C9 2D                    ; X position of Hidden Palace call spot
bne      bank1_Check_for_Spider_in_OW  ; 0x4389 $8379 D0 0C                    ;
lda      #$0B                          ; 0x438b $837B A9 0B                    ; A = 0B
sta      $0725                         ; 0x438d $837D 8D 25 07                 ; PPU Macro Selector
inc      $01                           ; 0x4390 $8380 E6 01                    ; 2 tiles
inc      $01                           ; 0x4392 $8382 E6 01                    ; south...
jmp      bank7_forest_chop_with_hammer ; 0x4394 $8384 4C 79 DF                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Check_for_Spider_in_OW                                                   ;
lda      $0563                         ; 0x4397 $8387 AD 63 05                 ; Type of terrain Link is facing
cmp      #$0F                          ; 0x439a $838A C9 0F                    ; Terrain Type F = Spider
beq      L838F                         ; 0x439c $838C F0 01                    ;
L838E                                                                          ;
rts                                    ; 0x439e $838E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L838F                                                                          ;
jsr      bank1_code6                   ; 0x439f $838F 20 A1 83                 ;
jmp      bank7_forest_chop_with_hammer ; 0x43a2 $8392 4C 79 DF                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_table0                                                                   ;
.byt    $0A,$00,$00,$82,$6C,$6C,$00,$00; 0x43a5 $8395 0A 00 00 82 6C 6C 00 00  ;
.byt    $82,$6C,$6C,$FF                ; 0x43ad $839D 82 6C 6C FF              ;
; ---------------------------------------------------------------------------- ;
bank1_code6                                                                    ;
jsr      LDF01                         ; 0x43b1 $83A1 20 01 DF                 ;
lda      #$00                          ; 0x43b4 $83A4 A9 00                    ; A = 00
sta      $7D                           ; 0x43b6 $83A6 85 7D                    ;;number of pixels to move? automove? on overworld, only partially, causes bug
ldy      #$0B                          ; 0x43b8 $83A8 A0 0B                    ; Y = 0B
L83AA                                                                          ;
lda      bank1_table0,y                ; 0x43ba $83AA B9 95 83                 ; refer to table at $4395
sta      $0301,y                       ; 0x43bd $83AD 99 01 03                 ;
dey                                    ; 0x43c0 $83B0 88                       ;
bpl      L83AA                         ; 0x43c1 $83B1 10 F7                    ;
lda      $79                           ; 0x43c3 $83B3 A5 79                    ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
sta      L0302                         ; 0x43c5 $83B5 8D 02 03                 ;; Used when writing text to screen
sta      $0307                         ; 0x43c8 $83B8 8D 07 03                 ;; Text memory offset?
lda      $7A                           ; 0x43cb $83BB A5 7A                    ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
sta      $0303                         ; 0x43cd $83BD 8D 03 03                 ;; Letter position when writing to screen
clc                                    ; 0x43d0 $83C0 18                       ;
adc      #$01                          ; 0x43d1 $83C1 69 01                    ;
sta      $0308                         ; 0x43d3 $83C3 8D 08 03                 ;
lda      $76                           ; 0x43d6 $83C6 A5 76                    ; X position on map (Link)
sta      L0000                         ; 0x43d8 $83C8 85 00                    ;
lda      $75                           ; 0x43da $83CA A5 75                    ; Y position on map (Link)
sta      $01                           ; 0x43dc $83CC 85 01                    ;
rts                                    ; 0x43de $83CE 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_overworld_limit_check_jmp_from_bank7                                     ;
lda      L0000                         ; 0x43df $83CF A5 00                    ;
cmp      #$40                          ; 0x43e1 $83D1 C9 40                    ; Check if at the extreme right of the map
bcs      bank1_East_Boundary           ; 0x43e3 $83D3 B0 2F                    ; Overworld width here too (east boundary)
lda      $01                           ; 0x43e5 $83D5 A5 01                    ;
sec                                    ; 0x43e7 $83D7 38                       ;
sbc      #$1E                          ; 0x43e8 $83D8 E9 1E                    ; Y Units Offset in Overworld
sta      $04                           ; 0x43ea $83DA 85 04                    ;
cmp      #$4B                          ; 0x43ec $83DC C9 4B                    ; Overworld height (south boundary)
bcs      bank1_East_Boundary           ; 0x43ee $83DE B0 24                    ; (not visually)
jsr      bank1_code8                   ; 0x43f0 $83E0 20 AC 93                 ;
inc      L0000                         ; 0x43f3 $83E3 E6 00                    ;
lda      #$00                          ; 0x43f5 $83E5 A9 00                    ; A = 00
sta      $03                           ; 0x43f7 $83E7 85 03                    ;
ldx      #$03                          ; 0x43f9 $83E9 A2 03                    ; X = 03
L83EB                                                                          ;
lda      (L000E),y                     ; 0x43fb $83EB B1 0E                    ;
and      #$0F                          ; 0x43fd $83ED 29 0F                    ; keep bits .... xxxx
sta      $02                           ; 0x43ff $83EF 85 02                    ;
lda      (L000E),y                     ; 0x4401 $83F1 B1 0E                    ;
lsr                                    ; 0x4403 $83F3 4A                       ;
lsr                                    ; 0x4404 $83F4 4A                       ;
lsr                                    ; 0x4405 $83F5 4A                       ;
lsr                                    ; 0x4406 $83F6 4A                       ;
sec                                    ; 0x4407 $83F7 38                       ;
adc      $03                           ; 0x4408 $83F8 65 03                    ;
sta      $03                           ; 0x440a $83FA 85 03                    ;
cmp      L0000                         ; 0x440c $83FC C5 00                    ;
bcs      L8408                         ; 0x440e $83FE B0 08                    ;
iny                                    ; 0x4410 $8400 C8                       ;
jmp      L83EB                         ; 0x4411 $8401 4C EB 83                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_East_Boundary                                                            ;
lda      #$0C                          ; 0x4414 $8404 A9 0C                    ; A = 0C (Code for 1 Unit of Water)
sta      $02                           ; 0x4416 $8406 85 02                    ;
L8408                                                                          ;
rts                                    ; 0x4418 $8408 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Code_values_for_Random_Battle_Areas_Desert                               ;
;North-West Hyrule / South-West Hyrule                                         ;
;xx.. ....	Enter Code (1 = Middle of Screen 1)                                 ;
;..xx xxxx	Area Code                                                           ;
;                                                                              ;
;04 - Desert                                                                   ;
;05 - Grass                                                                    ;
;06 - Forest                                                                   ;
;07 - Swamp                                                                    ;
;08 - Graveyard                                                                ;
;09 - Road                                                                     ;
;0A - Lava                                                                     ;
;                                                                              ;
;5D 5E -> 1D 1E                                                                ;
;62 63 -> 22 23                                                                ;
;67 68 -> 27 28                                                                ;
;6F 70 -> 2F 30                                                                ;
;74 75 -> 34 35                                                                ;
;79 7A -> 39 3A                                                                ;
;7B 7C -> 3B 3C                                                                ;
.byt    $5D,$5E                        ; 0x4419 $8409 5D 5E                    ;
bank1_Code_values_for_Random_Battle_Areas_Grass                                ;
.byt    $62,$63                        ; 0x441b $840B 62 63                    ;
bank1_Code_values_for_Random_Battle_Areas_Forest                               ;
.byt    $67,$68                        ; 0x441d $840D 67 68                    ;
bank1_Code_values_for_Random_Battle_Areas_Swamp                                ;
.byt    $6F,$70                        ; 0x441f $840F 6F 70                    ;
bank1_Code_values_for_Random_Battle_Areas_Graveyard                            ;
.byt    $74,$75                        ; 0x4421 $8411 74 75                    ;
bank1_Code_values_for_Random_Battle_Areas_Road                                 ;
.byt    $79,$7A                        ; 0x4423 $8413 79 7A                    ;
bank1_Code_values_for_Random_Battle_Areas_Lava                                 ;
.byt    $7B,$7C                        ; 0x4425 $8415 7B 7C                    ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Background                      ;
.byt    $F4,$F4,$F4,$F4                ; 0x4427 $8417 F4 F4 F4 F4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown0                        ;
.byt    $F4,$F4,$F4,$F4                ; 0x442b $841B F4 F4 F4 F4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Background_for_Grotto           ;
.byt    $38,$39,$3A,$3B                ; 0x442f $841F 38 39 3A 3B              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown1                        ;
.byt    $FD,$FD,$FD,$FD                ; 0x4433 $8423 FD FD FD FD              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown2                        ;
.byt    $FF,$FF,$FF,$FF                ; 0x4437 $8427 FF FF FF FF              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown3                        ;
.byt    $53,$53,$54,$54                ; 0x443b $842B 53 53 54 54              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_High_Cactus_Top                 ;
.byt    $3C,$3D,$F4,$F4                ; 0x443f $842F 3C 3D F4 F4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_High_Cactus_Stem                ;
.byt    $3D,$3D,$F4,$F4                ; 0x4443 $8433 3D 3D F4 F4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Small_Cactus_Top                ;
.byt    $3C,$3D,$F4,$3E                ; 0x4447 $8437 3C 3D F4 3E              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Small_Cactus_Stem               ;
.byt    $3D,$3D,$3F,$F4                ; 0x444b $843B 3D 3D 3F F4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown4                        ;
.byt    $6E,$6E,$6F,$6F                ; 0x444f $843F 6E 6E 6F 6F              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Tree_Trunk__Forest_Swamp        ;
.byt    $44,$45,$46,$47                ; 0x4453 $8443 44 45 46 47              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Dead_Tree_Top__Swamp            ;
.byt    $33,$45,$34,$47                ; 0x4457 $8447 33 45 34 47              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Bridge_Ropes                    ;
.byt    $F4,$7C,$F4,$7C                ; 0x445b $844B F4 7C F4 7C              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Zelda_Head                      ;
.byt    $28,$2C,$29,$2C                ; 0x445f $844F 28 2C 29 2C              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Zelda_Body                      ;
.byt    $2A,$2C,$2B,$2C                ; 0x4463 $8453 2A 2C 2B 2C              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Red_Carpet__North_Castle        ;
.byt    $7F,$FE,$7F,$FE                ; 0x4467 $8457 7F FE 7F FE              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Volcano_Background              ;
.byt    $2C,$2D,$2E,$2F                ; 0x446b $845B 2C 2D 2E 2F              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Rock_Floor__Grotto_Desert       ;
.byt    $A1,$9F,$A2,$A0                ; 0x446f $845F A1 9F A2 A0              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Rock_Wall__Grotto_Desert        ;
.byt    $9D,$9E,$9F,$A0                ; 0x4473 $8463 9D 9E 9F A0              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Rock_Platform__Grotto_Desert    ;
.byt    $A1,$A3,$A2,$A4                ; 0x4477 $8467 A1 A3 A2 A4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Rock_Ceiling__Grotto_Desert     ;
.byt    $9D,$A3,$9E,$A4                ; 0x447b $846B 9D A3 9E A4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Horizontal_Dolmen_Left          ;
.byt    $88                            ; 0x447f $846F 88                       ;
L8470                                                                          ;
.byt    $89,$8A,$8B                    ; 0x4480 $8470 89 8A 8B                 ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Horizontal_Dolmen_Middle        ;
.byt    $8A,$8B,$8A,$8B                ; 0x4483 $8473 8A 8B 8A 8B              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Horizontal_Dolmen_Right         ;
.byt    $8A,$8B,$8C,$8D                ; 0x4487 $8477 8A 8B 8C 8D              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Vertical_Dolmen_Top             ;
.byt    $A7,$A8,$A9,$AA                ; 0x448b $847B A7 A8 A9 AA              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Vertical_Dolmen_Body            ;
.byt    $A8,$A8,$AA,$AA                ; 0x448f $847F A8 A8 AA AA              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Tree_Stump_Top                  ;
.byt    $40,$40,$42,$42                ; 0x4493 $8483 40 40 42 42              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Tree_Stump_Base                 ;
.byt    $40,$41,$42,$43                ; 0x4497 $8487 40 41 42 43              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Bridge_Base                     ;
.byt    $7D,$F4,$7D,$F4                ; 0x449b $848B 7D F4 7D F4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown5                        ;
.byt    $87,$F4,$87,$F4                ; 0x449f $848F 87 F4 87 F4              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown6                        ;
.byt    $87,$6D,$87,$6F                ; 0x44a3 $8493 87 6D 87 6F              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Breaking_Bridge                 ;
.byt    $92,$93,$92,$93                ; 0x44a7 $8497 92 93 92 93              ;
bank1_Table_0_1_for_Area_Objects_Tile_Mappings_unknown7                        ;
.byt    $68,$69,$68,$69                ; 0x44ab $849B 68 69 68 69              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Lava_Water_Surface                ;
.byt    $98,$99,$98,$99                ; 0x44af $849F 98 99 98 99              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Weed_Single                       ;
.byt    $4E,$4F,$F4,$F4                ; 0x44b3 $84A3 4E 4F F4 F4              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Weed_Double                       ;
.byt    $4E,$4F,$4E,$4F                ; 0x44b7 $84A7 4E 4F 4E 4F              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Grass_Area_Bushes_row9            ;
.byt    $4C,$4D,$4C,$4D                ; 0x44bb $84AB 4C 4D 4C 4D              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Forest_Area_Bushes_row9           ;
.byt    $78,$79,$78,$79                ; 0x44bf $84AF 78 79 78 79              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Column_Body_North_Castle          ;
.byt    $A5,$A5,$A6,$A6                ; 0x44c3 $84B3 A5 A5 A6 A6              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Column_Top_North_Castle           ;
.byt    $8E,$8F,$90,$91                ; 0x44c7 $84B7 8E 8F 90 91              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Swamp_Surface                     ;
.byt    $98,$99,$98,$99,$98,$99,$98,$99; 0x44cb $84BB 98 99 98 99 98 99 98 99  ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Lava_Water                        ;
.byt    $FE,$FE,$FE,$FE                ; 0x44d3 $84C3 FE FE FE FE              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Desert_Surface                    ;
.byt    $F4,$F4,$F4,$35                ; 0x44d7 $84C7 F4 F4 F4 35              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_White_Bricks_North_Castle         ;
.byt    $9A,$9B,$9A,$9B                ; 0x44db $84CB 9A 9B 9A 9B              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Leaves_of_Trees                   ;
.byt    $50,$51,$52,$53                ; 0x44df $84CF 50 51 52 53              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Hanging_Leaves_of_Trees           ;
.byt    $50,$54,$52,$55                ; 0x44e3 $84D3 50 54 52 55              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_unknown0                          ;
.byt    $7A                            ; 0x44e7 $84D7 7A                       ;
L84D8                                                                          ;
.byt    $7F,$7C,$81                    ; 0x44e8 $84D8 7F 7C 81                 ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Ground_Desert_Grass               ;
.byt    $36,$36,$37,$37                ; 0x44eb $84DB 36 36 37 37              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Ground_Forest                     ;
.byt    $48,$49,$4A,$4B                ; 0x44ef $84DF 48 49 4A 4B              ;
bank1_Table_2_for_Area_Objects_Tile_Mappings_Ground_Swamp                      ;
.byt    $99,$99,$99,$99                ; 0x44f3 $84E3 99 99 99 99              ;
bank1_UNUSED_84E7                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x44f7 $84E7 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x44ff $84EF FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4507 $84F7 FF FF FF FF FF FF FF FF  ;
.byt    $FF                            ; 0x450f $84FF FF                       ;
; ---------------------------------------------------------------------------- ;
bank1_Pointer_table_for_Objects_Tile_Mappings                                  ;
.word    bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Background; 0x4510 $8500 17 84;
.word    bank1_Table_0_1_for_Area_Objects_Tile_Mappings_Background; 0x4512 $8502 17 84;
.word    bank1_Table_2_for_Area_Objects_Tile_Mappings_Lava_Water_Surface; 0x4514 $8504 9F 84;
.word    bank1_Table_3_for_Area_Objects_Tile_Mappings_North_Castle_Curtains_Top; 0x4516 $8506 7D 93;
Pointer_table_for_Overworld_Map_Data                                           ;
.word    bank1_West_Hyrule_Overworld_Map_Data; 0x4518 $8508 5C 90              ;
.word    bank1_Death_Mountain_Overworld_Map_Data; 0x451a $850A 4C A6           ;
; ---------------------------------------------------------------------------- ;
bank1_code7                                                                    ;
pha                                    ; 0x451c $850C 48                       ;
and      #$C0                          ; 0x451d $850D 29 C0                    ; keep bits xx.. ....
clc                                    ; 0x451f $850F 18                       ;
rol                                    ; 0x4520 $8510 2A                       ;
rol                                    ; 0x4521 $8511 2A                       ;
rol                                    ; 0x4522 $8512 2A                       ; A becomes .... ..xx
tay                                    ; 0x4523 $8513 A8                       ;
dey                                    ; 0x4524 $8514 88                       ;
pla                                    ; 0x4525 $8515 68                       ;
cmp      bank1_table2,y                ; 0x4526 $8516 D9 A9 93                 ; refer to table at $53A9
rts                                    ; 0x4529 $8519 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_table1                                                                   ;
.byt    $00                            ; 0x452a $851A 00                       ;
L851B                                                                          ;
.byt    $00                            ; 0x452b $851B 00                       ;
L851C                                                                          ;
.byt    $00,$00                        ; 0x452c $851C 00 00                    ;
L851E                                                                          ;
.byt    $61                            ; 0x452e $851E 61                       ;
L851F                                                                          ;
.byt    $60                            ; 0x452f $851F 60                       ;
L8520                                                                          ;
.byt    $80                            ; 0x4530 $8520 80                       ;
L8521                                                                          ;
.byt    $87                            ; 0x4531 $8521 87                       ;
L8522                                                                          ;
.byt    $91                            ; 0x4532 $8522 91                       ;
; ---------------------------------------------------------------------------- ;
bank1_Area_Pointers_West_Hyrule                                                ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4533 $8523 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Bridge; 0x4535 $8525 99 8D               ;
.word    bank1_Area_Data__West_Hyrule_Bridge; 0x4537 $8527 99 8D               ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4539 $8529 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Bridge; 0x453b $852B 99 8D               ;
.word    bank1_Area_Data__West_Hyrule_Bridge; 0x453d $852D 99 8D               ;
.word    bank1_Area_Data__West_Hyrule_Bubble_Path; 0x453f $852F 28 8F          ;
.word    bank1_Area_Data__West_Hyrule_Common_Grotto; 0x4541 $8531 78 8E        ;
.word    bank1_Area_Data__West_Hyrule_Common_Grotto; 0x4543 $8533 78 8E        ;
.word    bank1_Area_Data__West_Hyrule_Grotto_South_of_Ruto___Part_1_and_2; 0x4545 $8535 A6 8E;
.word    bank1_Area_Data__West_Hyrule_Grotto_South_of_Ruto___Part_1_and_2; 0x4547 $8537 A6 8E;
.word    bank1_Area_Data__West_Hyrule_Grotto_South_of_Ruto___Part_3__with_Aches_and_Acheman_; 0x4549 $8539 9D 8F;
.word    bank1_Area_Data__West_Hyrule_Grotto_before_200_Exp_Bag__with_Megmats_and_Orange_Goriya_; 0x454b $853B EE 8E;
.word    bank1_Area_Data__West_Hyrule_Grotto_with_200_Exp_Bag__dead_end_; 0x454d $853D CA 8F;
.word    bank1_Area_Data__West_Hyrule_Bridge_over_Lava__before_Medicine_; 0x454f $853F D8 8E;
.word    bank1_Area_Data__West_Hyrule_Grotto_with_Medicine__dead_end_; 0x4551 $8541 49 90;
.word    bank1_Area_Data__West_Hyrule_Common_Grotto; 0x4553 $8543 78 8E        ;
.word    bank1_Area_Data__West_Hyrule_Grotto_with_Heart_Container__dead_end_; 0x4555 $8545 DD 8F;
.word    bank1_Area_Data__West_Hyrule_Tunnel_South_of_Kings_Tomb; 0x4557 $8547 6F 8F;
.word    bank1_Area_Data__West_Hyrule_Common_Grotto; 0x4559 $8549 78 8E        ;
.word    bank1_Area_Data__West_Hyrule_Forest_Area_with_no_trees; 0x455b $854B 3F 90;
.word    bank1_Area_Data__West_Hyrule_Forest_with_Tree_Stumps__Lost_Woods; 0x455d $854D 62 8E;
.word    bank1_Area_Data__West_Hyrule_Forest_with_Tree_Stumps__Lost_Woods; 0x455f $854F 62 8E;
.word    bank1_Area_Data__West_Hyrule_Forest_with_Tree_Stumps__Lost_Woods; 0x4561 $8551 62 8E;
.word    bank1_Area_Data__West_Hyrule_Random_Battle_grass_or_lava; 0x4563 $8553 07 8D;
.word    bank1_Area_Data__West_Hyrule_Random_Battle_grass_or_lava; 0x4565 $8555 07 8D;
L8558     = * + $0001                                                          ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4567 $8557 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4569 $8559 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x456b $855B B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Desert__North_West_Hyrule_; 0x456d $855D EB 8C;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Desert__South_West_Hyrule_; 0x456f $855F 7F 87;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4571 $8561 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4573 $8563 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Grotto_with_Trophy_; 0x4575 $8565 D0 8D  ;
.word    bank1_Area_Data__West_Hyrule_Random_Battle_grass_or_lava; 0x4577 $8567 07 8D;
.word    bank1_Area_Data__West_Hyrule_Random_Battle_grass_or_lava; 0x4579 $8569 07 8D;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x457b $856B B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x457d $856D B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Grass_Area_with_Dolmens_and_Heart_Container; 0x457f $856F B5 8D;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Forest__North_West_Hyrule_; 0x4581 $8571 21 8D;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Forest__South_West_Hyrule_; 0x4583 $8573 1D 90;
.word    bank1_Area_Data__West_Hyrule_Forest_Area_with_no_trees; 0x4585 $8575 3F 90;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4587 $8577 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Forest_with_Single_Tree__with_Aches_and_50_Exp_Bag_; 0x4589 $8579 F5 8D;
.word    bank1_Area_Data__West_Hyrule_Forest_with_Tree_Stumps__Lost_Woods; 0x458b $857B 62 8E;
.word    bank1_Area_Data__West_Hyrule_Grotto_with_Magic_Container__South_of_North_Castle_; 0x458d $857D F0 8F;
.word    bank1_Area_Data__West_Hyrule_Forest_with_Single_Tree__with_Megmats_and_100_Exp_Bag_; 0x458f $857F 14 8E;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Swamp__North_West_and_South_West_Hyrule_; 0x4591 $8581 35 8D;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Swamp__North_West_and_South_West_Hyrule_; 0x4593 $8583 35 8D;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4595 $8585 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x4597 $8587 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Area_with_Rocky_Ground_and_Grass__Red_Jar_near_Palace_2_; 0x4599 $8589 33 8E;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Graveyard__North_West_and_South_West_Hyrule_; 0x459b $858B 57 8D;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Graveyard__North_West_and_South_West_Hyrule_; 0x459d $858D 57 8D;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x459f $858F B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x45a1 $8591 B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_Graveyard_Area_near_Kings_Tomb__with_Red_Jar_; 0x45a3 $8593 5C 8F;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Road__North_West_and_South_West_Hyrule_; 0x45a5 $8595 AB 8F;
.word    bank1_Area_Data__West_Hyrule_Random_Battle___Road__North_West_and_South_West_Hyrule_; 0x45a7 $8597 AB 8F;
.word    bank1_Area_Data__West_Hyrule_Random_Battle_grass_or_lava; 0x45a9 $8599 07 8D;
.word    bank1_Area_Data__West_Hyrule_Random_Battle_grass_or_lava; 0x45ab $859B 07 8D;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x45ad $859D B5 8C         ;
.word    bank1_Area_Data__West_Hyrule_North_Castle; 0x45af $859F B5 8C         ;
bank1_Enemy_Pointers__West_Hyrule                                              ;
;\"NME-OFFSET\" in z2pledit                                                    ;
;Base Offset is $88A0                                                          ;
.word    L7000                         ; 0x45b1 $85A1 00 70                    ;; Enemy Data
.word    L706C                         ; 0x45b3 $85A3 6C 70                    ;
.word    L7072                         ; 0x45b5 $85A5 72 70                    ;
.word    L7000                         ; 0x45b7 $85A7 00 70                    ;; Enemy Data
.word    L7080                         ; 0x45b9 $85A9 80 70                    ;
.word    L7088                         ; 0x45bb $85AB 88 70                    ;
.word    L7090                         ; 0x45bd $85AD 90 70                    ;
.word    L7002                         ; 0x45bf $85AF 02 70                    ;
.word    L7002                         ; 0x45c1 $85B1 02 70                    ;
.word    L7006                         ; 0x45c3 $85B3 06 70                    ;
.word    L7012                         ; 0x45c5 $85B5 12 70                    ;
.word    L701E                         ; 0x45c7 $85B7 1E 70                    ;
.word    L7026                         ; 0x45c9 $85B9 26 70                    ;
.word    L7000                         ; 0x45cb $85BB 00 70                    ;; Enemy Data
.word    L7168                         ; 0x45cd $85BD 68 71                    ;
.word    L71AC                         ; 0x45cf $85BF AC 71                    ;
.word    L7034                         ; 0x45d1 $85C1 34 70                    ;
.word    L7000                         ; 0x45d3 $85C3 00 70                    ;; Enemy Data
.word    L703E                         ; 0x45d5 $85C5 3E 70                    ;
.word    L7034                         ; 0x45d7 $85C7 34 70                    ;
.word    L7176                         ; 0x45d9 $85C9 76 71                    ;
.word    L717C                         ; 0x45db $85CB 7C 71                    ;
.word    L7188                         ; 0x45dd $85CD 88 71                    ;
.word    L7194                         ; 0x45df $85CF 94 71                    ;
.word    L7006                         ; 0x45e1 $85D1 06 70                    ;
.word    L7006                         ; 0x45e3 $85D3 06 70                    ;
.word    L7000                         ; 0x45e5 $85D5 00 70                    ;; Enemy Data
.word    L7000                         ; 0x45e7 $85D7 00 70                    ;; Enemy Data
.word    L7000                         ; 0x45e9 $85D9 00 70                    ;; Enemy Data
.word    L70A2                         ; 0x45eb $85DB A2 70                    ;
.word    L70E0                         ; 0x45ed $85DD E0 70                    ;
.word    L70E0                         ; 0x45ef $85DF E0 70                    ;
.word    L70E0                         ; 0x45f1 $85E1 E0 70                    ;
.word    L7050                         ; 0x45f3 $85E3 50 70                    ;
.word    L70B6                         ; 0x45f5 $85E5 B6 70                    ;
.word    L70F8                         ; 0x45f7 $85E7 F8 70                    ;
.word    L70F8                         ; 0x45f9 $85E9 F8 70                    ;
.word    L70F8                         ; 0x45fb $85EB F8 70                    ;
.word    L7068                         ; 0x45fd $85ED 68 70                    ;
.word    L70CC                         ; 0x45ff $85EF CC 70                    ;
.word    L7140                         ; 0x4601 $85F1 40 71                    ;
.word    L7140                         ; 0x4603 $85F3 40 71                    ;
.word    L7140                         ; 0x4605 $85F5 40 71                    ;
.word    L7048                         ; 0x4607 $85F7 48 70                    ;
.word    L7158                         ; 0x4609 $85F9 58 71                    ;
.word    L71B3                         ; 0x460b $85FB B3 71                    ;
.word    L71C0                         ; 0x460d $85FD C0 71                    ;
.word    L7126                         ; 0x460f $85FF 26 71                    ;
.word    L7126                         ; 0x4611 $8601 26 71                    ;
.word    L7126                         ; 0x4613 $8603 26 71                    ;
.word    L7126                         ; 0x4615 $8605 26 71                    ;
.word    L71D5                         ; 0x4617 $8607 D5 71                    ;
.word    L7108                         ; 0x4619 $8609 08 71                    ;
.word    L7108                         ; 0x461b $860B 08 71                    ;
.word    L7108                         ; 0x461d $860D 08 71                    ;
.word    L7108                         ; 0x461f $860F 08 71                    ;
.word    L7096                         ; 0x4621 $8611 96 70                    ;
.word    L71CF                         ; 0x4623 $8613 CF 71                    ;
.word    L71CF                         ; 0x4625 $8615 CF 71                    ;
.word    L7126                         ; 0x4627 $8617 26 71                    ;
.word    L7126                         ; 0x4629 $8619 26 71                    ;
.word    L7126                         ; 0x462b $861B 26 71                    ;
.word    L7126                         ; 0x462d $861D 26 71                    ;
; ---------------------------------------------------------------------------- ;
bank1_West_Hyrule__Key_Areas_Y_Location                                        ;
.byt    $34,$20,$2A,$3C,$56,$40,$4D,$39; 0x462f $861F 34 20 2A 3C 56 40 4D 39  ;
.byt    $47,$5C,$29,$2E,$3A,$3E,$3E,$45; 0x4637 $8627 47 5C 29 2E 3A 3E 3E 45  ;
.byt    $3E,$60,$66,$52,$57,$61,$61,$40; 0x463f $862F 3E 60 66 52 57 61 61 40  ;
.byt    $43,$57,$4C,$4D,$4E,$4D,$44,$00; 0x4647 $8637 43 57 4C 4D 4E 4D 44 00  ;
.byt    $66,$00,$00,$00,$00,$00,$00,$00; 0x464f $863F 66 00 00 00 00 00 00 00  ;
L8647                                                                          ;
.byt    $7F,$CD,$DF,$E0,$D8,$B6,$00,$A4; 0x4657 $8647 7F CD DF E0 D8 B6 00 A4  ;
.byt    $DB,$D9,$CC,$CB,$A0,$C0,$E2,$00; 0x465f $864F DB D9 CC CB A0 C0 E2 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00    ; 0x4667 $8657 00 00 00 00 00 00 00     ;
bank1_West_Hyrule__Key_Areas_X_Location                                        ;
.byt    $17,$1D,$25,$10,$14,$3E,$15,$3D; 0x466e $865E 17 1D 25 10 14 3E 15 3D  ;
.byt    $08,$30,$30,$77,$01,$43,$26,$09; 0x4676 $8666 08 30 30 77 01 43 26 09  ;
.byt    $36,$32,$7B,$10,$1A,$1A,$62,$07; 0x467e $866E 36 32 7B 10 1A 1A 62 07  ;
.byt    $11,$21,$14,$11,$13,$17,$25,$00; 0x4686 $8676 11 21 14 11 13 17 25 00  ;
.byt    $26,$00,$00,$00,$00,$00,$00,$00; 0x468e $867E 26 00 00 00 00 00 00 00  ;
.byt    $00,$3D,$0A,$15,$32,$6E,$00,$42; 0x4696 $8686 00 3D 0A 15 32 6E 00 42  ;
.byt    $08,$48,$15,$7C,$3E,$0B,$39,$00; 0x469e $868E 08 48 15 7C 3E 0B 39 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00    ; 0x46a6 $8696 00 00 00 00 00 00 00     ;
bank1_West_Hyrule__Key_Areas_Map_Number                                        ;
.byt    $80,$E1,$6B,$2D,$6E,$66,$6C,$46; 0x46ad $869D 80 E1 6B 2D 6E 66 6C 46  ;
.byt    $73,$78,$07,$C7,$09,$CB,$0C,$0E; 0x46b5 $86A5 73 78 07 C7 09 CB 0C 0E  ;
.byt    $10,$12,$D3,$01,$02,$04,$C5,$54; 0x46bd $86AD 10 12 D3 01 02 04 C5 54  ;
.byt    $B3,$D4,$55,$56,$57,$57,$F9,$39; 0x46c5 $86B5 B3 D4 55 56 57 57 F9 39  ;
.byt    $B9,$00,$00,$00,$00,$00,$00,$00; 0x46cd $86BD B9 00 00 00 00 00 00 00  ;
.byt    $28,$29,$2A,$2B,$3C,$C2,$00,$C5; 0x46d5 $86C5 28 29 2A 2B 3C C2 00 C5  ;
.byt    $06,$C8,$18,$CB,$00,$0E,$00,$00; 0x46dd $86CD 06 C8 18 CB 00 0E 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00    ; 0x46e5 $86D5 00 00 00 00 00 00 00     ;
bank1_West_Hyrule__Key_Areas_World_Number                                      ;
.byt    $20,$00,$00,$00,$00,$00,$00,$40; 0x46ec $86DC 20 00 00 00 00 00 00 40  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x46f4 $86E4 00 00 00 00 00 00 00 00  ;
.byt    $00,$80,$00,$40,$40,$40,$40,$00; 0x46fc $86EC 00 80 00 40 40 40 40 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x4704 $86F4 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x470c $86FC 00 00 00 00 00 00 00 00  ;
.byt    $00,$02,$01,$01,$04,$04,$04,$04; 0x4714 $8704 00 02 01 01 04 04 04 04  ;
.byt    $04,$04,$04,$04,$0C,$0C,$10,$00; 0x471c $870C 04 04 04 04 0C 0C 10 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00    ; 0x4724 $8714 00 00 00 00 00 00 00     ;
bank1_West_Hyrule__Room_Connectivity_Data                                      ;
.byt    $FC,$FC,$FC,$FC,$FC,$00,$00,$FC; 0x472b $871B FC FC FC FC FC 00 00 FC  ;
.byt    $FC,$00,$00,$FC,$FC,$00,$00,$FC; 0x4733 $8723 FC 00 00 FC FC 00 00 FC  ;
.byt    $FC,$00,$00,$14,$13,$00,$00,$FD; 0x473b $872B FC 00 00 14 13 00 00 FD  ;
.byt    $FC,$00,$00,$FC,$FC,$00,$00,$FD; 0x4743 $8733 FC 00 00 FC FC 00 00 FD  ;
.byt    $00,$00,$00,$00,$FC,$00,$00,$28; 0x474b $873B 00 00 00 00 FC 00 00 28  ;
.byt    $27,$00,$00,$2C,$2B,$00,$00,$FD; 0x4753 $8743 27 00 00 2C 2B 00 00 FD  ;
.byt    $FC,$00,$00,$34,$33,$00,$00,$FD; 0x475b $874B FC 00 00 34 33 00 00 FD  ;
.byt    $FC,$00,$00,$3C,$3B,$00,$00,$FD; 0x4763 $8753 FC 00 00 3C 3B 00 00 FD  ;
.byt    $FC,$00,$00,$44,$43,$00,$00,$FD; 0x476b $875B FC 00 00 44 43 00 00 FD  ;
.byt    $FC,$00,$00,$4C,$4B,$00,$00,$FD; 0x4773 $8763 FC 00 00 4C 4B 00 00 FD  ;
.byt    $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC; 0x477b $876B FC FC FC FC FC FC FC FC  ;
.byt    $FC,$FC,$FC,$FC,$FC,$FC,$FC,$FC; 0x4783 $8773 FC FC FC FC FC FC FC FC  ;
.byt    $FC,$FC,$FC,$FC                ; 0x478b $877B FC FC FC FC              ;
bank1_Area_Data__West_Hyrule_Random_Battle___Desert__South_West_Hyrule_        ;
.byt    $10,$C0,$C3,$11,$D4,$02,$DE,$03; 0x478f $877F 10 C0 C3 11 D4 02 DE 03  ;
.byt    $D4,$04,$D8,$03,$D2,$02,$DC,$03; 0x4797 $8787 D4 04 D8 03 D2 02 DC 03  ;
; ---------------------------------------------------------------------------- ;
bank1_Pointer_table_for_Palaces_offsets_in_Saved_RAM                           ;
.word    L7C18                         ; 0x479f $878F 18 7C                    ;
.word    L7D76                         ; 0x47a1 $8791 76 7D                    ;
.word    L7EEA                         ; 0x47a3 $8793 EA 7E                    ;
.word    L7DA6                         ; 0x47a5 $8795 A6 7D                    ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Palaces_to_test_for_completion                                 ;
;FF = don't test                                                               ;
;00 = check for item at $0785 + offset 00 (Candle, Glove...)                   ;
.byt    $00,$01,$02,$03                ; 0x47a7 $8797 00 01 02 03              ;
; ---------------------------------------------------------------------------- ;
bank1_Transform_completed_palaces_into_stone                                   ;
ldx      #$02                          ; 0x47ab $879B A2 02                    ; X = 02
L879D                                                                          ;
lda      bank1_Table_for_Palaces_to_test_for_completion,x; 0x47ad $879D BD 97 87; refer to table at $4797
cmp      #$FF                          ; 0x47b0 $87A0 C9 FF                    ; if FF, skip
beq      L87C2                         ; 0x47b2 $87A2 F0 1E                    ;
tay                                    ; 0x47b4 $87A4 A8                       ;
lda      $0785,y                       ; 0x47b5 $87A5 B9 85 07                 ; Item Collected?
beq      L87C2                         ; 0x47b8 $87A8 F0 18                    ; if not, skip
lda      $078D,y                       ; 0x47ba $87AA B9 8D 07                 ; Crystal Placed?
beq      L87C2                         ; 0x47bd $87AD F0 13                    ; if not, skip
txa                                    ; 0x47bf $87AF 8A                       ;
asl                                    ; 0x47c0 $87B0 0A                       ;
tay                                    ; 0x47c1 $87B1 A8                       ;
lda      bank1_Pointer_table_for_Palaces_offsets_in_Saved_RAM,y; 0x47c2 $87B2 B9 8F 87; refer to table at $478F
sta      L000E                         ; 0x47c5 $87B5 85 0E                    ; pointer byte 1
lda      bank1_Pointer_table_for_Palaces_offsets_in_Saved_RAM+$01,y; 0x47c7 $87B7 B9 90 87; refer to table at $478F (offset +1)
sta      $0F                           ; 0x47ca $87BA 85 0F                    ; pointer byte 2
ldy      #$00                          ; 0x47cc $87BC A0 00                    ; Y = 00
lda      #$0B                          ; 0x47ce $87BE A9 0B                    ; A = 0B (0B = 1 Unit of Mountain)
sta      (L000E),y                     ; 0x47d0 $87C0 91 0E                    ;
L87C2                                                                          ;
dex                                    ; 0x47d2 $87C2 CA                       ;
bpl      L879D                         ; 0x47d3 $87C3 10 D8                    ; loop to $479D
rts                                    ; 0x47d5 $87C5 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_UNUSED_87C6                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x47d6 $87C6 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x47de $87CE FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x47e6 $87D6 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x47ee $87DE FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x47f6 $87E6 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF            ; 0x47fe $87EE FF FF FF FF FF           ;
L87F3                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4803 $87F3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x480b $87FB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4813 $8803 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x481b $880B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF                ; 0x4823 $8813 FF FF FF FF              ;
L8817                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4827 $8817 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x482f $881F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4837 $8827 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x483f $882F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4847 $8837 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x484f $883F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4857 $8847 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x485f $884F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4867 $8857 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x486f $885F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4877 $8867 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x487f $886F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4887 $8877 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x488f $887F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x4897 $8887 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x489f $888F FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x48a7 $8897 FF FF FF FF FF FF FF FF  ;
.byt    $FF                            ; 0x48af $889F FF                       ;
bank1_Enemy_Data__West_Hyrule_and_Death_Mountain                               ;
.byt    $01,$01,$03,$7A,$5C,$01,$0B,$6F; 0x48b0 $88A0 01 01 03 7A 5C 01 0B 6F  ;
.byt    $11,$72,$51,$75,$51,$7A,$51,$76; 0x48b8 $88A8 11 72 51 75 51 7A 51 76  ;
.byt    $9A,$01,$0B,$79,$1C,$75,$5C,$7F; 0x48c0 $88B0 9A 01 0B 79 1C 75 5C 7F  ;
.byt    $5C,$7B,$9A,$7D,$9C,$01,$07,$09; 0x48c8 $88B8 5C 7B 9A 7D 9C 01 07 09  ;
.byt    $07,$0D,$07,$08,$4A,$01,$0D,$7A; 0x48d0 $88C0 07 0D 07 08 4A 01 0D 7A  ;
.byt    $1F,$70,$5F,$72,$5F,$7A,$59,$7C; 0x48d8 $88C8 1F 70 5F 72 5F 7A 59 7C  ;
.byt    $9F,$70,$DF,$01,$09,$7D,$03,$70; 0x48e0 $88D0 9F 70 DF 01 09 7D 03 70  ;
.byt    $9C,$78,$9B,$7A,$9C,$01,$09,$76; 0x48e8 $88D8 9C 78 9B 7A 9C 01 09 76  ;
.byt    $5C,$7B,$5C,$7F,$5C,$71,$9C,$01; 0x48f0 $88E0 5C 7B 5C 7F 5C 71 9C 01  ;
.byt    $07,$0C,$47,$0E,$47,$02,$87,$01; 0x48f8 $88E8 07 0C 47 0E 47 02 87 01  ;
.byt    $09,$77,$1A,$4D,$51,$62,$91,$02; 0x4900 $88F0 09 77 1A 4D 51 62 91 02  ;
.byt    $C7,$01,$0D,$0F,$1D,$7B,$11,$7E; 0x4908 $88F8 C7 01 0D 0F 1D 7B 11 7E  ;
.byt    $11,$73,$91,$77,$91,$0F,$9D,$01; 0x4910 $8900 11 73 91 77 91 0F 9D 01  ;
.byt    $03,$74,$99,$01,$05,$7F,$0F,$7F; 0x4918 $8908 03 74 99 01 05 7F 0F 7F  ;
.byt    $8F,$01,$0D,$0F,$0B,$5C,$1C,$5E; 0x4920 $8910 8F 01 0D 0F 0B 5C 1C 5E  ;
.byt    $5C,$5D,$9C,$50,$DC,$0F,$CB,$01; 0x4928 $8918 5C 5D 9C 50 DC 0F CB 01  ;
.byt    $07,$20,$55,$24,$96,$36,$9C,$01; 0x4930 $8920 07 20 55 24 96 36 9C 01  ;
.byt    $07,$0F,$0B,$2C,$58,$00,$CB,$01; 0x4938 $8928 07 0F 0B 2C 58 00 CB 01  ;
.byt    $05,$7F,$0B,$7F,$CB,$01,$0B,$7C; 0x4940 $8930 05 7F 0B 7F CB 01 0B 7C  ;
.byt    $04,$7E,$04,$5B,$1B,$70,$C4,$73; 0x4948 $8938 04 7E 04 5B 1B 70 C4 73  ;
.byt    $C4,$01,$05,$7F,$0C,$70,$8C,$0F; 0x4950 $8940 C4 01 05 7F 0C 70 8C 0F  ;
.byt    $0E,$0C,$76,$04,$38,$20,$3C,$60; 0x4958 $8948 0E 0C 76 04 38 20 3C 60  ;
.byt    $36,$A0,$78,$84,$70,$8C,$0B,$7C; 0x4960 $8950 36 A0 78 84 70 8C 0B 7C  ;
.byt    $04,$7E,$05,$71,$84,$74,$85,$79; 0x4968 $8958 04 7E 05 71 84 74 85 79  ;
.byt    $85,$0B,$0F,$21,$72,$05,$70,$45; 0x4970 $8960 85 0B 0F 21 72 05 70 45  ;
.byt    $72,$85,$00,$A1,$0B,$0F,$21,$14; 0x4978 $8968 72 85 00 A1 0B 0F 21 14  ;
.byt    $0D,$13,$4D,$17,$8D,$00,$A1,$09; 0x4980 $8970 0D 13 4D 17 8D 00 A1 09  ;
.byt    $7B,$14,$15,$8D,$76,$94,$1C,$8D; 0x4988 $8978 7B 14 15 8D 76 94 1C 8D  ;
.byt    $0F,$7F,$0C,$3A,$20,$3E,$20,$1A; 0x4990 $8980 0F 7F 0C 3A 20 3E 20 1A  ;
.byt    $60,$31,$A0,$38,$A0,$70,$8C,$09; 0x4998 $8988 60 31 A0 38 A0 70 8C 09  ;
.byt    $67,$1C,$5A,$1B,$56,$9B,$6A,$9C; 0x49a0 $8990 67 1C 5A 1B 56 9B 6A 9C  ;
.byt    $09,$7E,$04,$70,$5F,$7E,$44,$71; 0x49a8 $8998 09 7E 04 70 5F 7E 44 71  ;
L89A0                                                                          ;
.byt    $9F,$07,$76,$1F,$60,$59,$6F,$59; 0x49b0 $89A0 9F 07 76 1F 60 59 6F 59  ;
.byt    $11,$72,$06,$48,$06,$7E,$06,$60; 0x49b8 $89A8 11 72 06 48 06 7E 06 60  ;
.byt    $46,$2D,$46,$6F,$46,$49,$86,$5E; 0x49c0 $89B0 46 2D 46 6F 46 49 86 5E  ;
.byt    $86,$0D,$35,$06,$79,$18,$6D,$06; 0x49c8 $89B8 86 0D 35 06 79 18 6D 06  ;
.byt    $5F,$46,$45,$98,$3A,$86,$0B,$74; 0x49d0 $89C0 5F 46 45 98 3A 86 0B 74  ;
.byt    $12,$77,$11,$7F,$11,$73,$91,$7B; 0x49d8 $89C8 12 77 11 7F 11 73 91 7B  ;
.byt    $91,$0F,$0F,$1D,$78,$11,$71,$51; 0x49e0 $89D0 91 0F 0F 1D 78 11 71 51  ;
.byt    $73,$91,$77,$92,$7D,$91,$00,$9D; 0x49e8 $89D8 73 91 77 92 7D 91 00 9D  ;
.byt    $0B,$77,$15,$1B,$0E,$1D,$4D,$17; 0x49f0 $89E0 0B 77 15 1B 0E 1D 4D 17  ;
.byt    $8E,$79,$95,$0D,$0F,$1D,$75,$16; 0x49f8 $89E8 8E 79 95 0D 0F 1D 75 16  ;
.byt    $17,$0E,$15,$8E,$79,$96,$00,$9D; 0x4a00 $89F0 17 0E 15 8E 79 96 00 9D  ;
.byt    $0F,$7B,$1F,$7E,$1F,$60,$5F,$62; 0x4a08 $89F8 0F 7B 1F 7E 1F 60 5F 62  ;
.byt    $9F,$7F,$9F,$60,$DF,$62,$DF,$01; 0x4a10 $8A00 9F 7F 9F 60 DF 62 DF 01  ;
.byt    $0D,$0F,$0F,$56,$5C,$5E,$5C,$58; 0x4a18 $8A08 0D 0F 0F 56 5C 5E 5C 58  ;
.byt    $9C,$5B,$9C,$00,$CF,$01,$05,$48; 0x4a20 $8A10 9C 5B 9C 00 CF 01 05 48  ;
.byt    $40,$48,$C0,$01,$0B,$79,$1F,$7E; 0x4a28 $8A18 40 48 C0 01 0B 79 1F 7E  ;
.byt    $1F,$7E,$5F,$71,$9F,$78,$9F,$01; 0x4a30 $8A20 1F 7E 5F 71 9F 78 9F 01  ;
.byt    $0B,$79,$1F,$7E,$1F,$70,$5F,$71; 0x4a38 $8A28 0B 79 1F 7E 1F 70 5F 71  ;
.byt    $9F,$78,$9F,$01,$0B,$79,$1F,$7E; 0x4a40 $8A30 9F 78 9F 01 0B 79 1F 7E  ;
.byt    $1F,$7E,$5F,$71,$9F,$78,$9F,$01; 0x4a48 $8A38 1F 7E 5F 71 9F 78 9F 01  ;
.byt    $0B,$79,$1F,$7E,$1F,$70,$5F,$71; 0x4a50 $8A40 0B 79 1F 7E 1F 70 5F 71  ;
.byt    $9F,$78,$9F,$01,$07,$6F,$17,$61; 0x4a58 $8A48 9F 78 9F 01 07 6F 17 61  ;
.byt    $98,$65,$D8,$0D,$56,$5C,$5A,$5C; 0x4a60 $8A50 98 65 D8 0D 56 5C 5A 5C  ;
.byt    $5E,$5C,$6E,$91,$61,$D1,$64,$D1; 0x4a68 $8A58 5E 5C 6E 91 61 D1 64 D1  ;
.byt    $0F,$68,$1F,$6A,$1F,$6E,$1F,$66; 0x4a70 $8A60 0F 68 1F 6A 1F 6E 1F 66  ;
.byt    $9F,$6F,$9F,$63,$DF,$6A,$DF,$05; 0x4a78 $8A68 9F 6F 9F 63 DF 6A DF 05  ;
.byt    $76,$01,$76,$C1,$01,$03,$76,$81; 0x4a80 $8A70 76 01 76 C1 01 03 76 81  ;
.byt    $01,$01,$11,$39,$1F,$3B,$1F,$3D; 0x4a88 $8A78 01 01 11 39 1F 3B 1F 3D  ;
.byt    $1F,$44,$5F,$5C,$5F,$64,$9F,$7C; 0x4a90 $8A80 1F 44 5F 5C 5F 64 9F 7C  ;
.byt    $9F,$7E,$9F,$0F,$6A,$04,$5C,$04; 0x4a98 $8A88 9F 7E 9F 0F 6A 04 5C 04  ;
.byt    $7D,$55,$6F,$44,$76,$95,$6C,$84; 0x4aa0 $8A90 7D 55 6F 44 76 95 6C 84  ;
.byt    $74,$C4,$0F,$6C,$11,$4E,$11,$20; 0x4aa8 $8A98 74 C4 0F 6C 11 4E 11 20  ;
L8AA0                                                                          ;
.byt    $51,$70,$9B,$2F,$91,$41,$D1,$63; 0x4ab0 $8AA0 51 70 9B 2F 91 41 D1 63  ;
.byt    $D1,$0F,$0D,$07,$03,$47,$0A,$4A; 0x4ab8 $8AA8 D1 0F 0D 07 03 47 0A 4A  ;
.byt    $7B,$5C,$01,$C7,$74,$DC,$05,$CA; 0x4ac0 $8AB0 7B 5C 01 C7 74 DC 05 CA  ;
.byt    $0B,$7B,$12,$63,$52,$5B,$52,$43; 0x4ac8 $8AB8 0B 7B 12 63 52 5B 52 43  ;
.byt    $92,$3D,$92,$05,$0F,$0F,$00,$CF; 0x4ad0 $8AC0 92 3D 92 05 0F 0F 00 CF  ;
.byt    $0F,$7A,$5F,$7D,$5F,$7F,$5F,$70; 0x4ad8 $8AC8 0F 7A 5F 7D 5F 7F 5F 70  ;
.byt    $9C,$00,$C7,$03,$C7,$75,$D7,$0D; 0x4ae0 $8AD0 9C 00 C7 03 C7 75 D7 0D  ;
.byt    $60,$51,$63,$51,$66,$51,$69,$91; 0x4ae8 $8AD8 60 51 63 51 66 51 69 91  ;
.byt    $6C,$91,$6F,$91,$09,$2D,$16,$4B; 0x4af0 $8AE0 6C 91 6F 91 09 2D 16 4B  ;
.byt    $52,$56,$92,$3C,$92,$09,$76,$5C; 0x4af8 $8AE8 52 56 92 3C 92 09 76 5C  ;
.byt    $79,$5A,$7C,$5C,$70,$D7,$05,$0F; 0x4b00 $8AF0 79 5A 7C 5C 70 D7 05 0F  ;
.byt    $0F,$00,$CF,$0D,$09,$07,$6B,$04; 0x4b08 $8AF8 0F 00 CF 0D 09 07 6B 04  ;
.byt    $0E,$07,$61,$44,$04,$47,$75,$D7; 0x4b10 $8B00 0E 07 61 44 04 47 75 D7  ;
.byt    $0B,$25,$44,$39,$41,$2D,$44,$71; 0x4b18 $8B08 0B 25 44 39 41 2D 44 71  ;
.byt    $98,$2B,$84,$0D,$60,$51,$63,$51; 0x4b20 $8B10 98 2B 84 0D 60 51 63 51  ;
.byt    $66,$51,$69,$91,$6C,$91,$6F,$91; 0x4b28 $8B18 66 51 69 91 6C 91 6F 91  ;
.byt    $0D,$08,$07,$0E,$07,$5C,$17,$02; 0x4b30 $8B20 0D 08 07 0E 07 5C 17 02  ;
.byt    $47,$06,$87,$7F,$9B,$0F,$3A,$05; 0x4b38 $8B28 47 06 87 7F 9B 0F 3A 05  ;
.byt    $45,$45,$4E,$57,$64,$85,$7E,$85; 0x4b40 $8B30 45 45 4E 57 64 85 7E 85  ;
.byt    $63,$D7,$75,$C5,$0F,$76,$01,$7E; 0x4b48 $8B38 63 D7 75 C5 0F 76 01 7E  ;
.byt    $04,$53,$57,$66,$44,$42,$84,$29; 0x4b50 $8B40 04 53 57 66 44 42 84 29  ;
.byt    $97,$25,$C4,$0F,$7F,$11,$73,$51; 0x4b58 $8B48 97 25 C4 0F 7F 11 73 51  ;
L8B50                                                                          ;
.byt    $75,$51,$79,$81,$7C,$91,$7E,$91; 0x4b60 $8B50 75 51 79 81 7C 91 7E 91  ;
.byt    $71,$D1,$0B,$76,$58,$07,$8A,$79; 0x4b68 $8B58 71 D1 0B 76 58 07 8A 79  ;
.byt    $9C,$7D,$9C,$08,$CA,$05,$76,$57; 0x4b70 $8B60 9C 7D 9C 08 CA 05 76 57  ;
.byt    $7F                            ; 0x4b78 $8B68 7F                       ;
L8B69                                                                          ;
.byt    $98,$0F,$78,$5F,$79,$5F,$7B,$5F; 0x4b79 $8B69 98 0F 78 5F 79 5F 7B 5F  ;
.byt    $73,$97,$7D,$9C,$7F,$9C,$72,$DC; 0x4b81 $8B71 73 97 7D 9C 7F 9C 72 DC  ;
.byt    $09,$6D,$03,$50,$58,$76,$43,$7B; 0x4b89 $8B79 09 6D 03 50 58 76 43 7B  ;
.byt    $D8,$03,$50,$83,$09,$32,$51,$3C; 0x4b91 $8B81 D8 03 50 83 09 32 51 3C  ;
.byt    $51,$47,$91,$2D,$91,$0B,$6E,$14; 0x4b99 $8B89 51 47 91 2D 91 0B 6E 14  ;
.byt    $60,$52,$46,$92,$4E,$92,$21,$D4; 0x4ba1 $8B91 60 52 46 92 4E 92 21 D4  ;
.byt    $09,$57,$58,$40,$94,$3A,$98    ; 0x4ba9 $8B99 09 57 58 40 94 3A 98     ;
L8BA0                                                                          ;
.byt    $24,$D4,$0F,$6E,$14,$51,$54,$58; 0x4bb0 $8BA0 24 D4 0F 6E 14 51 54 58  ;
.byt    $54,$41,$94,$38,$94,$3C,$94,$23; 0x4bb8 $8BA8 54 41 94 38 94 3C 94 23  ;
.byt    $D4,$0B,$6A,$18,$68,$58,$6C,$58; 0x4bc0 $8BB0 D4 0B 6A 18 68 58 6C 58  ;
.byt    $66,$98,$63,$D8,$09,$6A,$14    ; 0x4bc8 $8BB8 66 98 63 D8 09 6A 14     ;
L8BBF                                                                          ;
.byt    $60,$98,$64,$98,$62,$D4,$05,$06; 0x4bcf $8BBF 60 98 64 98 62 D4 05 06  ;
.byt    $57,$01,$D7,$0B,$3A,$04,$68,$58; 0x4bd7 $8BC7 57 01 D7 0B 3A 04 68 58  ;
.byt    $6A,$58,$48,$94,$60,$D4,$0D,$1D; 0x4bdf $8BCF 6A 58 48 94 60 D4 0D 1D  ;
.byt    $11,$2F,$14,$50,$81,$58,$91,$3A; 0x4be7 $8BD7 11 2F 14 50 81 58 91 3A  ;
.byt    $91,$4D,$94,$09,$6A,$18,$64,$98; 0x4bef $8BDF 91 4D 94 09 6A 18 64 98  ;
.byt    $68,$98,$69,$D4,$03,$78,$9B,$0B; 0x4bf7 $8BE7 68 98 69 D4 03 78 9B 0B  ;
.byt    $77,$15,$1B,$0E,$1D,$4D,$17,$8E; 0x4bff $8BEF 77 15 1B 0E 1D 4D 17 8E  ;
.byt    $79,$95,$0D,$0F,$1D,$75,$16,$17; 0x4c07 $8BF7 79 95 0D 0F 1D 75 16 17  ;
.byt    $0E,$15,$8E,$79,$96,$00,$9D,$0F; 0x4c0f $8BFF 0E 15 8E 79 96 00 9D 0F  ;
.byt    $7F,$0C,$3A,$20,$3E,$20,$1A,$60; 0x4c17 $8C07 7F 0C 3A 20 3E 20 1A 60  ;
.byt    $31,$A0,$38,$A0,$70,$8C,$09,$67; 0x4c1f $8C0F 31 A0 38 A0 70 8C 09 67  ;
.byt    $1C,$5A,$1B,$56,$9B,$6A,$9C,$11; 0x4c27 $8C17 1C 5A 1B 56 9B 6A 9C 11  ;
.byt    $72,$06,$48,$06,$7E,$06,$60,$46; 0x4c2f $8C1F 72 06 48 06 7E 06 60 46  ;
.byt    $2D,$46,$6F,$46,$49,$86,$5E,$86; 0x4c37 $8C27 2D 46 6F 46 49 86 5E 86  ;
.byt    $0D,$35,$06,$79,$18,$6D,$06,$5F; 0x4c3f $8C2F 0D 35 06 79 18 6D 06 5F  ;
.byt    $46,$45,$98,$3A,$86            ; 0x4c47 $8C37 46 45 98 3A 86           ;
bank1_Background_Areas_Data                                                    ;
.byt    $18,$60,$90,$00,$14,$09,$32,$0A; 0x4c4c $8C3C 18 60 90 00 14 09 32 0A  ;
.byt    $28,$09,$06,$0A,$48,$09,$18,$09; 0x4c54 $8C44 28 09 06 0A 48 09 18 09  ;
.byt    $32,$0A,$28,$09,$06,$0A,$48,$09; 0x4c5c $8C4C 32 0A 28 09 06 0A 48 09  ;
L8C54                                                                          ;
.byt    $14,$48,$9A,$60,$06,$EA,$04,$EA; 0x4c64 $8C54 14 48 9A 60 06 EA 04 EA  ;
.byt    $02,$EA,$08,$EA,$06,$EA,$0A,$EA; 0x4c6c $8C5C 02 EA 08 EA 06 EA 0A EA  ;
.byt    $04,$EA,$02,$EA                ; 0x4c74 $8C64 04 EA 02 EA              ;
L8C68                                                                          ;
.byt    $14,$48,$9A,$60,$08,$EA,$06,$EA; 0x4c78 $8C68 14 48 9A 60 08 EA 06 EA  ;
.byt    $06,$EA,$02,$EA,$08,$EA,$06,$EA; 0x4c80 $8C70 06 EA 02 EA 08 EA 06 EA  ;
.byt    $0A,$EA,$0A,$EA                ; 0x4c88 $8C78 0A EA 0A EA              ;
L8C7C                                                                          ;
.byt    $1A,$48,$90,$60,$14,$09,$32,$0A; 0x4c8c $8C7C 1A 48 90 60 14 09 32 0A  ;
.byt    $28,$09,$06,$0A,$48,$09,$04,$EA; 0x4c94 $8C84 28 09 06 0A 48 09 04 EA  ;
.byt    $14,$09,$32,$0A,$28,$09,$06,$0A; 0x4c9c $8C8C 14 09 32 0A 28 09 06 0A  ;
.byt    $48,$09                        ; 0x4ca4 $8C94 48 09                    ;
L8C96                                                                          ;
.byt    $12,$E0,$0E,$48,$D8,$09,$E1,$00; 0x4ca6 $8C96 12 E0 0E 48 D8 09 E1 00  ;
.byt    $D8,$0F,$E2,$00,$D8,$09,$E3,$00; 0x4cae $8C9E D8 0F E2 00 D8 09 E3 00  ;
.byt    $D8,$0E                        ; 0x4cb6 $8CA6 D8 0E                    ;
L8CA8                                                                          ;
.byt    $0D,$E0,$0E,$08,$D8,$08,$AE,$0F; 0x4cb8 $8CA8 0D E0 0E 08 D8 08 AE 0F  ;
.byt    $0B,$E3,$00,$D8,$0F            ; 0x4cc0 $8CB0 0B E3 00 D8 0F           ;
bank1_Area_Data__West_Hyrule_North_Castle                                      ;
.byt    $36,$40,$68,$00,$20,$4F,$22,$F8; 0x4cc5 $8CB5 36 40 68 00 20 4F 22 F8  ;
.byt    $23,$F8,$23,$F8,$23,$F8,$23,$F8; 0x4ccd $8CBD 23 F8 23 F8 23 F8 23 F8  ;
.byt    $E1,$00,$20,$4F,$A0,$BF,$21,$F7; 0x4cd5 $8CC5 E1 00 20 4F A0 BF 21 F7  ;
.byt    $91,$BB,$81,$B9,$A0,$A9,$21,$F5; 0x4cdd $8CCD 91 BB 81 B9 A0 A9 21 F5  ;
.byt    $90,$A7,$81,$A5,$72,$06,$24,$F5; 0x4ce5 $8CD5 90 A7 81 A5 72 06 24 F5  ;
.byt    $23,$F7,$22,$4F                ; 0x4ced $8CDD 23 F7 22 4F              ;
L8CE1                                                                          ;
.byt    $21,$F8,$23,$F8,$23,$F8,$23,$F8; 0x4cf1 $8CE1 21 F8 23 F8 23 F8 23 F8  ;
.byt    $23,$F8                        ; 0x4cf9 $8CE9 23 F8                    ;
bank1_Area_Data__West_Hyrule_Random_Battle___Desert__North_West_Hyrule_        ;
.byt    $1C,$C0,$C2,$11,$84,$E1,$81,$E1; 0x4cfb $8CEB 1C C0 C2 11 84 E1 81 E1  ;
.byt    $F5,$41,$F2,$32,$86,$E1,$81,$E1; 0x4d03 $8CF3 F5 41 F2 32 86 E1 81 E1  ;
.byt    $F3,$41,$F8,$32,$F2,$41,$8A,$E1; 0x4d0b $8CFB F3 41 F8 32 F2 41 8A E1  ;
.byt    $81,$E1,$F3,$32                ; 0x4d13 $8D03 81 E1 F3 32              ;
bank1_Area_Data__West_Hyrule_Random_Battle_grass_or_lava                       ;
.byt    $1A,$44,$C2,$19,$82,$80,$82,$91; 0x4d17 $8D07 1A 44 C2 19 82 80 82 91  ;
.byt    $84,$80,$84,$91,$84,$80,$84,$80; 0x4d1f $8D0F 84 80 84 91 84 80 84 80  ;
.byt    $82,$95,$8C,$80,$83,$92,$87,$91; 0x4d27 $8D17 82 95 8C 80 83 92 87 91  ;
.byt    $82,$80                        ; 0x4d2f $8D1F 82 80                    ;
bank1_Area_Data__West_Hyrule_Random_Battle___Forest__North_West_Hyrule_        ;
.byt    $14,$48,$1A,$62,$32,$33,$3C,$35; 0x4d31 $8D21 14 48 1A 62 32 33 3C 35  ;
.byt    $42,$31,$36,$33,$38,$35,$41,$31; 0x4d39 $8D29 42 31 36 33 38 35 41 31  ;
.byt    $36,$31,$38,$33                ; 0x4d41 $8D31 36 31 38 33              ;
bank1_Area_Data__West_Hyrule_Random_Battle___Swamp__North_West_and_South_West_Hyrule_ ;
.byt    $22,$40,$B1,$29,$96,$80,$74,$E2; 0x4d45 $8D35 22 40 B1 29 96 80 74 E2  ;
.byt    $52,$E4,$92,$80,$74,$E2,$94,$80; 0x4d4d $8D3D 52 E4 92 80 74 E2 94 80  ;
.byt    $92,$80,$74,$E2,$54,$E4,$92,$80; 0x4d55 $8D45 92 80 74 E2 54 E4 92 80  ;
.byt    $92,$91,$92,$82,$74,$E2,$72,$E2; 0x4d5d $8D4D 92 91 92 82 74 E2 72 E2  ;
.byt    $92,$91                        ; 0x4d65 $8D55 92 91                    ;
bank1_Area_Data__West_Hyrule_Random_Battle___Graveyard__North_West_and_South_West_Hyrule_ ;
.byt    $42,$70,$F0,$31,$A4,$00,$A2,$00; 0x4d67 $8D57 42 70 F0 31 A4 00 A2 00  ;
.byt    $A2,$01,$A2,$00,$A2,$01,$A1,$01; 0x4d6f $8D5F A2 01 A2 00 A2 01 A1 01  ;
.byt    $D3,$81,$91,$02,$91,$00,$92,$01; 0x4d77 $8D67 D3 81 91 02 91 00 92 01  ;
.byt    $92,$00,$92,$01,$91,$01,$91,$01; 0x4d7f $8D6F 92 00 92 01 91 01 91 01  ;
.byt    $91,$01,$91,$00,$D4,$82,$82,$00; 0x4d87 $8D77 91 01 91 00 D4 82 82 00  ;
.byt    $82,$00,$82,$01,$D2,$81,$91,$02; 0x4d8f $8D7F 82 00 82 01 D2 81 91 02  ;
.byt    $91,$01,$92,$00,$D4,$80,$A2,$00; 0x4d97 $8D87 91 01 92 00 D4 80 A2 00  ;
.byt    $A2,$00,$A2,$02,$A2,$00,$A2,$01; 0x4d9f $8D8F A2 00 A2 02 A2 00 A2 01  ;
.byt    $A1,$01                        ; 0x4da7 $8D97 A1 01                    ;
bank1_Area_Data__West_Hyrule_Bridge                                            ;
.byt    $1C,$E0,$A0,$39,$60,$E6,$61,$E6; 0x4da9 $8D99 1C E0 A0 39 60 E6 61 E6  ;
.byt    $61,$E6,$61,$E6,$71,$4E,$7F,$4E; 0x4db1 $8DA1 61 E6 61 E6 71 4E 7F 4E  ;
.byt    $7F,$4E,$7F,$4A,$6B,$E6,$61,$E6; 0x4db9 $8DA9 7F 4E 7F 4A 6B E6 61 E6  ;
.byt    $61,$E6,$61,$E6                ; 0x4dc1 $8DB1 61 E6 61 E6              ;
bank1_Area_Data__West_Hyrule_Grass_Area_with_Dolmens_and_Heart_Container       ;
.byt    $1B,$E0,$90,$19,$A0,$97,$9C,$F1; 0x4dc5 $8DB5 1B E0 90 19 A0 97 9C F1  ;
.byt    $83,$04,$96,$F1,$83,$04        ; 0x4dcd $8DBD 83 04 96 F1 83 04        ;
L8DC3                                                                          ;
.byt    $84,$04,$A4,$0F,$0F,$92,$F1,$96; 0x4dd3 $8DC3 84 04 A4 0F 0F 92 F1 96  ;
.byt    $F1,$96,$F1,$A6,$9B            ; 0x4ddb $8DCB F1 96 F1 A6 9B           ;
bank1_Area_Data__West_Hyrule_Grotto_with_Trophy_                               ;
.byt    $25,$E0,$0F,$48,$D2,$00,$D2,$02; 0x4de0 $8DD0 25 E0 0F 48 D2 00 D2 02  ;
.byt    $80,$0F,$14,$D2,$00,$DE,$02,$D4; 0x4de8 $8DD8 80 0F 14 D2 00 DE 02 D4  ;
.byt    $04,$D6,$01,$90,$21,$F2,$21,$92; 0x4df0 $8DE0 04 D6 01 90 21 F2 21 92  ;
.byt    $22,$F3,$21,$92,$22,$F3,$21,$D2; 0x4df8 $8DE8 22 F3 21 92 22 F3 21 D2  ;
.byt    $02,$D6,$04,$D4,$06            ; 0x4e00 $8DF0 02 D6 04 D4 06           ;
bank1_Area_Data__West_Hyrule_Forest_with_Single_Tree__with_Aches_and_50_Exp_Bag_ ;
.byt    $1F,$68,$90,$64,$96,$80,$93,$80; 0x4e05 $8DF5 1F 68 90 64 96 80 93 80  ;
.byt    $98,$80,$92,$80,$07,$3D,$12,$39; 0x4e0d $8DFD 98 80 92 80 07 3D 12 39  ;
.byt    $20,$37,$32,$35,$98,$0F,$0A,$96; 0x4e15 $8E05 20 37 32 35 98 0F 0A 96  ;
.byt    $80,$96,$80,$96,$80,$92,$80    ; 0x4e1d $8E0D 80 96 80 96 80 92 80     ;
bank1_Area_Data__West_Hyrule_Forest_with_Single_Tree__with_Megmats_and_100_Exp_Bag_ ;
.byt    $1F,$68,$90,$64,$96,$80,$93,$80; 0x4e24 $8E14 1F 68 90 64 96 80 93 80  ;
.byt    $98,$80,$92,$80,$07,$3D,$12,$39; 0x4e2c $8E1C 98 80 92 80 07 3D 12 39  ;
.byt    $20,$37,$32,$35,$98,$0F,$0B,$96; 0x4e34 $8E24 20 37 32 35 98 0F 0B 96  ;
.byt    $80,$96,$80,$96,$80,$92,$80    ; 0x4e3c $8E2C 80 96 80 96 80 92 80     ;
bank1_Area_Data__West_Hyrule_Area_with_Rocky_Ground_and_Grass__Red_Jar_near_Palace_2_ ;
.byt    $2F,$00,$F1,$29,$94,$80,$96,$80; 0x4e43 $8E33 2F 00 F1 29 94 80 96 80  ;
.byt    $92,$81,$34,$F6,$91,$82,$32,$F6; 0x4e4b $8E3B 92 81 34 F6 91 82 32 F6  ;
.byt    $32,$F6,$91,$0F,$12,$1C,$BD,$21; 0x4e53 $8E43 32 F6 91 0F 12 1C BD 21  ;
.byt    $BB,$31,$F6,$32,$F6,$32,$F6,$32; 0x4e5b $8E4B BB 31 F6 32 F6 32 F6 32  ;
.byt    $F6,$32,$F6,$32,$F6,$24,$B3,$30; 0x4e63 $8E53 F6 32 F6 32 F6 24 B3 30  ;
.byt    $F6,$11,$B3,$31,$F6,$96,$80    ; 0x4e6b $8E5B F6 11 B3 31 F6 96 80     ;
bank1_Area_Data__West_Hyrule_Forest_with_Tree_Stumps__Lost_Woods               ;
.byt    $16,$68,$90,$61,$98,$03,$98,$03; 0x4e72 $8E62 16 68 90 61 98 03 98 03  ;
.byt    $98,$03,$94,$03,$96,$03,$96,$03; 0x4e7a $8E6A 98 03 94 03 96 03 96 03  ;
.byt    $98,$03,$92,$03,$96,$03        ; 0x4e82 $8E72 98 03 92 03 96 03        ;
bank1_Area_Data__West_Hyrule_Common_Grotto                                     ;
.byt    $2E,$E0,$0E,$48,$D2,$0C,$D2,$0A; 0x4e88 $8E78 2E E0 0E 48 D2 0C D2 0A  ;
.byt    $D6,$0C,$D4,$0A,$A2,$23,$D2,$0C; 0x4e90 $8E80 D6 0C D4 0A A2 23 D2 0C  ;
.byt    $D2,$0E,$D4,$0C,$D2,$0A,$D2,$0C; 0x4e98 $8E88 D2 0E D4 0C D2 0A D2 0C  ;
.byt    $D2,$0E,$D4,$0C,$A0,$21,$D2,$0A; 0x4ea0 $8E90 D2 0E D4 0C A0 21 D2 0A  ;
.byt    $D6,$0C,$D4,$0E,$A4,$21,$D4,$0C; 0x4ea8 $8E98 D6 0C D4 0E A4 21 D4 0C  ;
.byt    $D2,$0A,$D4,$0C,$D2,$0E        ; 0x4eb0 $8EA0 D2 0A D4 0C D2 0E        ;
bank1_Area_Data__West_Hyrule_Grotto_South_of_Ruto___Part_1_and_2               ;
.byt    $26,$E0,$0E,$48,$D2,$0A,$D6,$01; 0x4eb6 $8EA6 26 E0 0E 48 D2 0A D6 01  ;
.byt    $00,$3B,$D4,$02,$D4,$01,$D3,$08; 0x4ebe $8EAE 00 3B D4 02 D4 01 D3 08  ;
.byt    $D1,$0A,$D4,$01,$00,$33,$D4,$0A; 0x4ec6 $8EB6 D1 0A D4 01 00 33 D4 0A  ;
.byt    $D4,$0E,$E3,$00,$D8,$0A,$D2,$01; 0x4ece $8EBE D4 0E E3 00 D8 0A D2 01  ;
.byt    $00,$35,$D6,$0A,$D6,$0E        ; 0x4ed6 $8EC6 00 35 D6 0A D6 0E        ;
bank1_UNUSED_MAP_DATA                                                          ;
.byt    $0C,$E0,$0E,$48,$8E,$05,$D4,$09; 0x4edc $8ECC 0C E0 0E 48 8E 05 D4 09  ;
.byt    $E2,$00,$DE,$0E                ; 0x4ee4 $8ED4 E2 00 DE 0E              ;
bank1_Area_Data__West_Hyrule_Bridge_over_Lava__before_Medicine_                ;
.byt    $16,$E0,$03,$48,$E1,$00,$D0,$00; 0x4ee8 $8ED8 16 E0 03 48 E1 00 D0 00  ;
.byt    $80,$4F,$F0,$2F,$E2,$00,$80,$4F; 0x4ef0 $8EE0 80 4F F0 2F E2 00 80 4F  ;
.byt    $F0,$2F,$E3,$00,$D0,$03        ; 0x4ef8 $8EE8 F0 2F E3 00 D0 03        ;
bank1_Area_Data__West_Hyrule_Grotto_before_200_Exp_Bag__with_Megmats_and_Orange_Goriya_ ;
.byt    $1E,$E0,$0E,$48,$D2,$09,$95,$E2; 0x4efe $8EEE 1E E0 0E 48 D2 09 95 E2  ;
.byt    $94,$E2,$94,$E2,$94,$E2,$94,$E2; 0x4f06 $8EF6 94 E2 94 E2 94 E2 94 E2  ;
.byt    $E2,$00,$99,$E2,$94,$E2,$94,$E2; 0x4f0e $8EFE E2 00 99 E2 94 E2 94 E2  ;
.byt    $94,$E2,$94,$E2,$D5,$0E,$1C,$A0; 0x4f16 $8F06 94 E2 94 E2 D5 0E 1C A0  ;
.byt    $06,$48,$00,$37,$D4,$04,$20,$D4; 0x4f1e $8F0E 06 48 00 37 D4 04 20 D4  ;
.byt    $21,$D4,$D1,$02,$20,$D6,$21,$D6; 0x4f26 $8F16 21 D4 D1 02 20 D6 21 D6  ;
.byt    $D1,$08,$76,$53,$D4,$0E,$D4,$80; 0x4f2e $8F1E D1 08 76 53 D4 0E D4 80  ;
.byt    $D4,$0F                        ; 0x4f36 $8F26 D4 0F                    ;
bank1_Area_Data__West_Hyrule_Bubble_Path                                       ;
.byt    $34,$E0,$F6,$39,$D6,$80,$F0,$21; 0x4f38 $8F28 34 E0 F6 39 D6 80 F0 21  ;
.byt    $D2,$85,$D6,$80,$F0,$21,$D2,$86; 0x4f40 $8F30 D2 85 D6 80 F0 21 D2 86  ;
.byt    $D4,$80,$F0,$21,$D2,$86,$D6,$80; 0x4f48 $8F38 D4 80 F0 21 D2 86 D6 80  ;
.byt    $F0,$21,$D2,$85,$D2,$80,$F0,$21; 0x4f50 $8F40 F0 21 D2 85 D2 80 F0 21  ;
.byt    $D2,$85,$D6,$80,$F0,$21,$D2,$84; 0x4f58 $8F48 D2 85 D6 80 F0 21 D2 84  ;
.byt    $D6,$80,$F0,$21,$D2,$85,$D6,$80; 0x4f60 $8F50 D6 80 F0 21 D2 85 D6 80  ;
.byt    $F0,$21,$D2,$86                ; 0x4f68 $8F58 F0 21 D2 86              ;
bank1_Area_Data__West_Hyrule_Graveyard_Area_near_Kings_Tomb__with_Red_Jar_     ;
.byt    $13,$60,$F0,$31,$D8,$81,$DA,$82; 0x4f6c $8F5C 13 60 F0 31 D8 81 DA 82  ;
.byt    $8A,$B7,$74,$00,$84,$0F,$11,$DA; 0x4f74 $8F64 8A B7 74 00 84 0F 11 DA  ;
.byt    $81,$DA,$80                    ; 0x4f7c $8F6C 81 DA 80                 ;
bank1_Area_Data__West_Hyrule_Tunnel_South_of_Kings_Tomb                        ;
.byt    $2E,$E0,$06,$48,$00,$35,$D4,$04; 0x4f7f $8F6F 2E E0 06 48 00 35 D4 04  ;
.byt    $D2,$0A,$90,$E3,$91,$E3,$D1,$0C; 0x4f87 $8F77 D2 0A 90 E3 91 E3 D1 0C  ;
.byt    $D2,$0D,$DC,$80,$D4,$0D,$DA,$00; 0x4f8f $8F7F D2 0D DC 80 D4 0D DA 00  ;
.byt    $D2,$07,$30,$E1,$31,$E1,$31,$E1; 0x4f97 $8F87 D2 07 30 E1 31 E1 31 E1  ;
.byt    $31,$E1,$31,$E1,$31,$E1,$31,$E1; 0x4f9f $8F8F 31 E1 31 E1 31 E1 31 E1  ;
.byt    $31,$E1,$31,$E1,$31,$E1        ; 0x4fa7 $8F97 31 E1 31 E1 31 E1        ;
bank1_Area_Data__West_Hyrule_Grotto_South_of_Ruto___Part_3__with_Aches_and_Acheman_ ;
.byt    $0E,$E0,$00,$48,$DC,$02,$D4,$00; 0x4fad $8F9D 0E E0 00 48 DC 02 D4 00  ;
.byt    $E2,$00,$D7,$02,$D1,$06        ; 0x4fb5 $8FA5 E2 00 D7 02 D1 06        ;
bank1_Area_Data__West_Hyrule_Random_Battle___Road__North_West_and_South_West_Hyrule_ ;
.byt    $1F,$01,$C2,$11,$94,$90,$94,$91; 0x4fbb $8FAB 1F 01 C2 11 94 90 94 91  ;
.byt    $96,$90,$94,$91                ; 0x4fc3 $8FB3 96 90 94 91              ;
L8FB7                                                                          ;
.byt    $94,$92,$94,$90,$98,$92,$94,$90; 0x4fc7 $8FB7 94 92 94 90 98 92 94 90  ;
.byt    $94,$91,$92,$0F,$12,$94,$90,$96; 0x4fcf $8FBF 94 91 92 0F 12 94 90 96  ;
.byt    $90,$94,$90                    ; 0x4fd7 $8FC7 90 94 90                 ;
bank1_Area_Data__West_Hyrule_Grotto_with_200_Exp_Bag__dead_end_                ;
.byt    $13,$E0,$80,$4D,$E1,$00,$A5,$0F; 0x4fda $8FCA 13 E0 80 4D E1 00 A5 0F  ;
.byt    $0C,$D3,$0F,$E2,$00,$D8,$09,$E3; 0x4fe2 $8FD2 0C D3 0F E2 00 D8 09 E3  ;
.byt    $00,$D8,$0E                    ; 0x4fea $8FDA 00 D8 0E                 ;
bank1_Area_Data__West_Hyrule_Grotto_with_Heart_Container__dead_end_            ;
.byt    $13,$E0,$80,$4D,$E1,$00,$A5,$0F; 0x4fed $8FDD 13 E0 80 4D E1 00 A5 0F  ;
.byt    $0F,$D3,$0F,$E2,$00,$D8,$09,$E3; 0x4ff5 $8FE5 0F D3 0F E2 00 D8 09 E3  ;
.byt    $00,$D8,$0E                    ; 0x4ffd $8FED 00 D8 0E                 ;
bank1_Area_Data__West_Hyrule_Grotto_with_Magic_Container__South_of_North_Castle_ ;
.byt    $2D,$E0,$03,$48,$0A,$3F,$10,$3F; 0x5000 $8FF0 2D E0 03 48 0A 3F 10 3F  ;
.byt    $22,$3D,$30,$3D,$48,$35,$06,$3B; 0x5008 $8FF8 22 3D 30 3D 48 35 06 3B  ;
L9000                                                                          ;
.byt    $10,$3B,$20,$3B,$30,$37,$40,$37; 0x5010 $9000 10 3B 20 3B 30 37 40 37  ;
.byt    $E2,$00,$DE,$02,$D1,$03,$D2,$02; 0x5018 $9008 E2 00 DE 02 D1 03 D2 02  ;
.byt    $D1,$03,$D2,$02,$D1,$03,$D5,$05; 0x5020 $9010 D1 03 D2 02 D1 03 D5 05  ;
.byt    $51,$0F,$0E,$D3,$0F            ; 0x5028 $9018 51 0F 0E D3 0F           ;
bank1_Area_Data__West_Hyrule_Random_Battle___Forest__South_West_Hyrule_        ;
.byt    $22,$48,$1E,$62,$D2,$0D,$D4,$0C; 0x502d $901D 22 48 1E 62 D2 0D D4 0C  ;
.byt    $D2,$0B,$D2,$0C,$D2,$0D,$D2,$0E; 0x5035 $9025 D2 0B D2 0C D2 0D D2 0E  ;
.byt    $D2,$0D,$D4,$0E,$D4,$0D,$D2,$0E; 0x503d $902D D2 0D D4 0E D4 0D D2 0E  ;
.byt    $D2,$0D,$D4,$0C,$D2            ; 0x5045 $9035 D2 0D D4 0C D2           ;
L903A                                                                          ;
.byt    $0B,$D6,$0C,$D4,$0D            ; 0x504a $903A 0B D6 0C D4 0D           ;
bank1_Area_Data__West_Hyrule_Forest_Area_with_no_trees                         ;
.byt    $0A,$08,$90,$61,$E1,$00,$94,$03; 0x504f $903F 0A 08 90 61 E1 00 94 03  ;
.byt    $98,$03                        ; 0x5057 $9047 98 03                    ;
bank1_Area_Data__West_Hyrule_Grotto_with_Medicine__dead_end_                   ;
.byt    $13,$E0,$01,$48,$E3,$00,$96,$21; 0x5059 $9049 13 E0 01 48 E3 00 96 21  ;
.byt    $F2,$21,$92,$23,$82,$21,$70,$0F; 0x5061 $9051 F2 21 92 23 82 21 70 0F  ;
.byt    $15,$D2,$0F                    ; 0x5069 $9059 15 D2 0F                 ;
bank1_West_Hyrule_Overworld_Map_Data                                           ;
.byt    $BB,$DC,$74,$FC,$BC,$14,$CB,$BC; 0x506c $905C BB DC 74 FC BC 14 CB BC  ;
.byt    $24,$2B,$44,$FC,$7C,$34,$FB,$6C; 0x5074 $9064 24 2B 44 FC 7C 34 FB 6C  ;
.byt    $44,$0B,$01,$0B,$54,$FC,$4C,$34; 0x507c $906C 44 0B 01 0B 54 FC 4C 34  ;
.byt    $02,$04,$FB,$2B,$1C,$F4,$04,$FC; 0x5084 $9074 02 04 FB 2B 1C F4 04 FC  ;
.byt    $3C,$54,$FB,$2B,$74,$A4,$FC,$2C; 0x508c $907C 3C 54 FB 2B 74 A4 FC 2C  ;
.byt    $64,$59,$CB,$F4,$34,$FC,$0C,$74; 0x5094 $9084 64 59 CB F4 34 FC 0C 74  ;
.byt    $19,$00,$29,$BB,$F4,$44,$BC,$C4; 0x509c $908C 19 00 29 BB F4 44 BC C4  ;
.byt    $89,$7B,$F4,$64,$7C,$E4,$0C,$99; 0x50a4 $9094 89 7B F4 64 7C E4 0C 99  ;
.byt    $5B,$F4,$74,$6C,$F4,$0C,$59,$1B; 0x50ac $909C 5B F4 74 6C F4 0C 59 1B  ;
.byt    $D9,$F4,$24,$4C,$F4,$04,$0C,$09; 0x50b4 $90A4 D9 F4 24 4C F4 04 0C 09  ;
.byt    $7B,$B6,$59,$54,$55,$14,$3C,$F4; 0x50bc $90AC 7B B6 59 54 55 14 3C F4  ;
.byt    $14,$0C,$09,$7B,$F6,$06,$19,$24; 0x50c4 $90B4 14 0C 09 7B F6 06 19 24  ;
.byt    $95,$1C,$4B,$01,$1B,$B4,$0C,$09; 0x50cc $90BC 95 1C 4B 01 1B B4 0C 09  ;
.byt    $7B,$F6,$16,$19,$04,$65,$06,$25; 0x50d4 $90C4 7B F6 16 19 04 65 06 25  ;
.byt    $CB,$74,$1C,$09,$7B,$F6,$26,$A9; 0x50dc $90CC CB 74 1C 09 7B F6 26 A9  ;
.byt    $15,$FB,$44,$1C,$09,$8B,$56,$B6; 0x50e4 $90D4 15 FB 44 1C 09 8B 56 B6  ;
.byt    $95,$39,$FB,$0B,$24,$1C,$09,$9B; 0x50ec $90DC 95 39 FB 0B 24 1C 09 9B  ;
.byt    $E6,$E5,$49,$36,$9B,$14,$1C,$09; 0x50f4 $90E4 E6 E5 49 36 9B 14 1C 09  ;
.byt    $AB,$B6,$E5,$29,$25,$29,$36,$2B; 0x50fc $90EC AB B6 E5 29 25 29 36 2B  ;
.byt    $01,$3B,$04,$2C,$09,$AB,$35,$66; 0x5104 $90F4 01 3B 04 2C 09 AB 35 66  ;
.byt    $E5,$19,$65,$19,$66,$3B,$04,$2C; 0x510c $90FC E5 19 65 19 66 3B 04 2C  ;
.byt    $09,$AB,$55,$36,$2C,$B5,$19,$85; 0x5114 $9104 09 AB 55 36 2C B5 19 85  ;
.byt    $09,$56,$4B,$04,$2C,$09,$AB,$75; 0x511c $910C 09 56 4B 04 2C 09 AB 75  ;
.byt    $5C,$95,$19,$35,$36,$15,$09,$56; 0x5124 $9114 5C 95 19 35 36 15 09 56  ;
.byt    $4B,$04,$2C,$19,$8B,$75,$8C,$65; 0x512c $911C 4B 04 2C 19 8B 75 8C 65  ;
.byt    $19,$25,$56,$15,$09,$46,$5B,$04; 0x5134 $9124 19 25 56 15 09 46 5B 04  ;
.byt    $2C,$0B,$19,$5B,$85,$3C,$29,$3C; 0x513c $912C 2C 0B 19 5B 85 3C 29 3C  ;
.byt    $45,$19,$25,$56,$15,$19,$36,$5B; 0x5144 $9134 45 19 25 56 15 19 36 5B  ;
.byt    $14,$2C,$0B,$29,$5B,$75,$3C,$09; 0x514c $913C 14 2C 0B 29 5B 75 3C 09  ;
.byt    $02,$A9,$25,$66,$15,$09,$36,$6B; 0x5154 $9144 02 A9 25 66 15 09 36 6B  ;
.byt    $14,$2C,$39,$7B,$55,$3C,$29,$3C; 0x515c $914C 14 2C 39 7B 55 3C 29 3C  ;
.byt    $85,$56,$25,$09,$26,$8B,$09,$2C; 0x5164 $9154 85 56 25 09 26 8B 09 2C  ;
.byt    $39,$8B,$45,$AC,$75,$66,$15,$00; 0x516c $915C 39 8B 45 AC 75 66 15 00  ;
.byt    $09,$16,$9B,$09,$2C,$39,$8B,$55; 0x5174 $9164 09 16 9B 09 2C 39 8B 55  ;
.byt    $8C,$75,$76,$25,$09,$BB,$09,$2C; 0x517c $916C 8C 75 76 25 09 BB 09 2C  ;
.byt    $39,$9B,$55,$3C,$25,$75,$46,$5B; 0x5184 $9174 39 9B 55 3C 25 75 46 5B  ;
.byt    $05,$09,$BB,$19,$1C,$39,$9B,$85; 0x518c $917C 05 09 BB 19 1C 39 9B 85  ;
.byt    $15,$3B,$55,$16,$9B,$0E,$CB,$09; 0x5194 $9184 15 3B 55 16 9B 0E CB 09  ;
.byt    $1C,$0B,$01,$CB,$65,$8B,$25,$CB; 0x519c $918C 1C 0B 01 CB 65 8B 25 CB  ;
.byt    $09,$15,$AB,$19,$0C,$FB,$35,$FB; 0x51a4 $9194 09 15 AB 19 0C FB 35 FB  ;
.byt    $8B,$15,$09,$45,$8B,$09,$0C,$FB; 0x51ac $919C 8B 15 09 45 8B 09 0C FB  ;
.byt    $01,$FB,$9B,$35,$09,$55,$7B,$19; 0x51b4 $91A4 01 FB 9B 35 09 55 7B 19  ;
.byt    $FB,$FB,$8B,$55,$09,$55,$8B,$09; 0x51bc $91AC FB FB 8B 55 09 55 8B 09  ;
.byt    $2B,$01,$CB,$27,$FB,$1B,$01,$1B; 0x51c4 $91B4 2B 01 CB 27 FB 1B 01 1B  ;
.byt    $55,$09,$45,$0E,$01,$7B,$09,$1B; 0x51cc $91BC 55 09 45 0E 01 7B 09 1B  ;
.byt    $35,$3B,$B7,$FB,$85,$09,$55,$6B; 0x51d4 $91C4 35 3B B7 FB 85 09 55 6B  ;
.byt    $26,$0B,$55,$06,$1B,$07,$02,$67; 0x51dc $91CC 26 0B 55 06 1B 07 02 67  ;
.byt    $19,$17,$CB,$A5,$09,$55,$6B,$06; 0x51e4 $91D4 19 17 CB A5 09 55 6B 06  ;
.byt    $05,$06,$35,$47,$1B,$37,$09,$97; 0x51ec $91DC 05 06 35 47 1B 37 09 97  ;
.byt    $7B,$B5,$19,$45,$7B,$26,$15,$67; 0x51f4 $91E4 7B B5 19 45 7B 26 15 67  ;
.byt    $4B,$C7,$29,$D7,$15,$09,$55,$AB; 0x51fc $91EC 4B C7 29 D7 15 09 55 AB  ;
.byt    $15,$57,$8B,$67,$5B,$47,$A7,$09; 0x5204 $91F4 15 57 8B 67 5B 47 A7 09  ;
.byt    $45,$BB,$05,$67,$FB,$7B,$37,$19; 0x520c $91FC 45 BB 05 67 FB 7B 37 19  ;
.byt    $77,$09,$35,$CB,$05,$67,$0B,$01; 0x5214 $9204 77 09 35 CB 05 67 0B 01  ;
.byt    $FB,$6B,$C7,$09,$15,$EB,$05,$77; 0x521c $920C FB 6B C7 09 15 EB 05 77  ;
.byt    $0E,$07,$FB,$4B,$D7,$09,$FB,$0B; 0x5224 $9214 0E 07 FB 4B D7 09 FB 0B  ;
.byt    $05,$B7,$FB,$1B,$97,$4B,$09,$CB; 0x522c $921C 05 B7 FB 1B 97 4B 09 CB  ;
.byt    $24,$0C,$15,$C7,$DB,$97,$6B,$09; 0x5234 $9224 24 0C 15 C7 DB 97 6B 09  ;
.byt    $AB,$44,$0C,$25,$B7,$15,$AB,$A7; 0x523c $922C AB 44 0C 25 B7 15 AB A7  ;
.byt    $6B,$09,$8B,$54,$1C,$35,$A7,$45; 0x5244 $9234 6B 09 8B 54 1C 35 A7 45  ;
.byt    $6B,$16,$87,$6B,$19,$6B,$74,$1C; 0x524c $923C 6B 16 87 6B 19 6B 74 1C  ;
.byt    $25,$A7,$35,$A6,$15,$67,$6B,$09; 0x5254 $9244 25 A7 35 A6 15 67 6B 09  ;
.byt    $4B,$84,$00,$2C,$15,$77,$55,$B6; 0x525c $924C 4B 84 00 2C 15 77 55 B6  ;
.byt    $35,$57,$5B,$19,$2B,$B4,$2C,$15; 0x5264 $9254 35 57 5B 19 2B B4 2C 15  ;
.byt    $37,$85,$B6,$55,$47,$2B,$49,$0E; 0x526c $925C 37 85 B6 55 47 2B 49 0E  ;
.byt    $D9,$03,$1C,$2C,$17,$95,$86,$F9; 0x5274 $9264 D9 03 1C 2C 17 95 86 F9  ;
.byt    $19,$5B,$C4,$2C,$1B,$1C,$B5,$16; 0x527c $926C 19 5B C4 2C 1B 1C B5 16  ;
.byt    $69,$26,$A5,$8B,$D4,$1C,$2B,$1C; 0x5284 $9274 69 26 A5 8B D4 1C 2B 1C  ;
.byt    $B5,$19,$E6,$45,$7B,$E4,$1C,$3B; 0x528c $927C B5 19 E6 45 7B E4 1C 3B  ;
.byt    $2C,$85,$19,$55,$D6,$7B,$F4,$04; 0x5294 $9284 2C 85 19 55 D6 7B F4 04  ;
.byt    $0C,$5B,$9C,$03,$0C,$65,$C6,$7B; 0x529c $928C 0C 5B 9C 03 0C 65 C6 7B  ;
.byt    $F4,$14,$6B,$05,$75,$09,$3C,$45; 0x52a4 $9294 F4 14 6B 05 75 09 3C 45  ;
.byt    $A6,$7B,$19,$A8,$54,$6B,$35,$59; 0x52ac $929C A6 7B 19 A8 54 6B 35 59  ;
.byt    $25,$3C,$15,$A6,$6B,$19,$B8,$54; 0x52b4 $92A4 25 3C 15 A6 6B 19 B8 54  ;
.byt    $7B,$15,$19,$A5,$2C,$96,$6B,$19; 0x52bc $92AC 7B 15 19 A5 2C 96 6B 19  ;
.byt    $C8,$54,$8B,$19,$85,$06,$35,$1C; 0x52c4 $92B4 C8 54 8B 19 85 06 35 1C  ;
.byt    $36,$44,$4B,$29,$D8,$34,$1C,$7B; 0x52cc $92BC 36 44 4B 29 D8 34 1C 7B  ;
.byt    $19,$F5,$03,$54,$06,$04,$4B,$19; 0x52d4 $92C4 19 F5 03 54 06 04 4B 19  ;
.byt    $68,$29,$58,$24,$2C,$7B,$09,$E5; 0x52dc $92CC 68 29 58 24 2C 7B 09 E5  ;
.byt    $7C,$24,$3B,$04,$09,$78,$09,$08; 0x52e4 $92D4 7C 24 3B 04 09 78 09 08  ;
.byt    $09,$58,$24,$2C,$7C,$00,$85,$FC; 0x52ec $92DC 09 58 24 2C 7C 00 85 FC  ;
.byt    $0C,$2B,$14,$09,$78,$29,$58,$14; 0x52f4 $92E4 0C 2B 14 09 78 29 58 14  ;
.byt    $3C,$6B,$FC,$BC,$44,$09,$F8,$08; 0x52fc $92EC 3C 6B FC BC 44 09 F8 08  ;
.byt    $04,$4C,$7B,$00,$39,$3C,$2B,$FC; 0x5304 $92F4 04 4C 7B 00 39 3C 2B FC  ;
.byt    $34,$09,$F8,$08,$5C,$7B,$79,$3B; 0x530c $92FC 34 09 F8 08 5C 7B 79 3B  ;
.byt    $34,$BC,$34,$09,$F8,$6C,$7B,$79; 0x5314 $9304 34 BC 34 09 F8 6C 7B 79  ;
.byt    $2B,$54,$AC,$34,$09,$E8,$7C,$8B; 0x531c $930C 2B 54 AC 34 09 E8 7C 8B  ;
.byt    $59,$4B,$44,$AC,$34,$09,$D8,$8C; 0x5324 $9314 59 4B 44 AC 34 09 D8 8C  ;
.byt    $9B,$01,$AB,$34,$9C,$24,$19,$D8; 0x532c $931C 9B 01 AB 34 9C 24 19 D8  ;
.byt    $2C,$24,$2C,$FB,$4B,$01,$34,$8C; 0x5334 $9324 2C 24 2C FB 4B 01 34 8C  ;
.byt    $24,$19,$04,$C8,$2C,$44,$1C,$FB; 0x533c $932C 24 19 04 C8 2C 44 1C FB  ;
.byt    $6B,$24,$83,$39,$14,$B8,$2C,$14; 0x5344 $9334 6B 24 83 39 14 B8 2C 14  ;
.byt    $2B,$14,$0C,$FB,$9B,$8C,$54,$A8; 0x534c $933C 2B 14 0C FB 9B 8C 54 A8  ;
.byt    $3C,$04,$02,$2B,$24,$FB,$9B,$8C; 0x5354 $9344 3C 04 02 2B 24 FB 9B 8C  ;
.byt    $54,$88,$5C,$04,$4B,$14,$FB,$9B; 0x535c $934C 54 88 5C 04 4B 14 FB 9B  ;
.byt    $9C,$44,$78,$6C,$04,$4B,$14,$FB; 0x5364 $9354 9C 44 78 6C 04 4B 14 FB  ;
.byt    $9B,$9C,$44,$68,$7C,$5B,$14,$FB; 0x536c $935C 9B 9C 44 68 7C 5B 14 FB  ;
.byt    $8B,$BC,$34,$48,$AC,$1B,$01,$24; 0x5374 $9364 8B BC 34 48 AC 1B 01 24  ;
.byt    $0C,$FB,$8B,$CC,$24,$38,$CC,$4B; 0x537c $936C 0C FB 8B CC 24 38 CC 4B  ;
.byt    $0C,$FB,$7B,$EC,$14,$18,$FC,$2B; 0x5384 $9374 0C FB 7B EC 14 18 FC 2B  ;
.byt    $1C                            ; 0x538c $937C 1C                       ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_North_Castle_Curtains_Top         ;
.byt    $84,$84,$86,$86                ; 0x538d $937D 84 84 86 86              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_North_Castle_Curtains_Bottom      ;
.byt    $84,$85,$86,$87                ; 0x5391 $9381 84 85 86 87              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_Cloud_Left                        ;
.byt    $B3,$B4,$B5,$B6                ; 0x5395 $9385 B3 B4 B5 B6              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_Long_Cloud_Right                  ;
.byt    $B5,$B6,$B7,$B8                ; 0x5399 $9389 B5 B6 B7 B8              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_Short_Cloud_Right                 ;
.byt    $B7,$B8,$F4,$F4                ; 0x539d $938D B7 B8 F4 F4              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_Gravestone                        ;
.byt    $AF,$B0,$B1,$B2                ; 0x53a1 $9391 AF B0 B1 B2              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_Cross                             ;
.byt    $AD,$AE,$F4,$F4                ; 0x53a5 $9395 AD AE F4 F4              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_Slanted_Cross                     ;
.byt    $AB,$AC,$F4,$F4                ; 0x53a9 $9399 AB AC F4 F4              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_unknown0                          ;
.byt    $FE,$FE,$FE,$FE                ; 0x53ad $939D FE FE FE FE              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_North_Castle_Floor                ;
.byt    $7E,$7E,$7E,$7E                ; 0x53b1 $93A1 7E 7E 7E 7E              ;
bank1_Table_3_for_Area_Objects_Tile_Mappings_unknown1                          ;
.byt    $BA,$BB,$BC,$BD                ; 0x53b5 $93A5 BA BB BC BD              ;
bank1_table2                                                                   ;
.byt    $52,$8F,$C9                    ; 0x53b9 $93A9 52 8F C9                 ;
; ---------------------------------------------------------------------------- ;
bank1_code8                                                                    ;
asl                                    ; 0x53bc $93AC 0A                       ;
tay                                    ; 0x53bd $93AD A8                       ;
lda      $6000,y                       ; 0x53be $93AE B9 00 60                 ;
sta      L000E                         ; 0x53c1 $93B1 85 0E                    ;
lda      $6001,y                       ; 0x53c3 $93B3 B9 01 60                 ;
sta      $0F                           ; 0x53c6 $93B6 85 0F                    ;
ldy      #$00                          ; 0x53c8 $93B8 A0 00                    ; Y = 00
rts                                    ; 0x53ca $93BA 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_UNUSED_93BB                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x53cb $93BB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x53d3 $93C3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x53db $93CB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x53e3 $93D3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x53eb $93DB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x53f3 $93E3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x53fb $93EB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5403 $93F3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF            ; 0x540b $93FB FF FF FF FF FF           ;
; ---------------------------------------------------------------------------- ;
bank1_pointer_table                                                            ;
.word    bank1_Various_Projectiles     ; 0x5410 $9400 39 96                    ;
.word    L9647                         ; 0x5412 $9402 47 96                    ;
.word    L965A                         ; 0x5414 $9404 5A 96                    ;
.word    L9634                         ; 0x5416 $9406 34 96                    ;
.word    L963E                         ; 0x5418 $9408 3E 96                    ;
.word    bank1_code11                  ; 0x541a $940A 64 96                    ;
.word    bank1_Various_Projectiles     ; 0x541c $940C 39 96                    ;
; ---------------------------------------------------------------------------- ;
bank1_table3                                                                   ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x541e $940E 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00                    ; 0x5426 $9416 00 00 00                 ;
bank1_table4                                                                   ;
.byt    $80,$41,$81,$49,$42,$93,$00,$00; 0x5429 $9419 80 41 81 49 42 93 00 00  ;Has something to do with projectiles collision test and shield absorption
bank1_Enemy_Hit_Points                                                         ;
.byt    $00,$00,$00,$03,$03,$03,$08,$03; 0x5431 $9421 00 00 00 03 03 03 08 03  ;
.byt    $00,$00,$08,$02,$02,$03,$04,$03; 0x5439 $9429 00 00 08 02 02 03 04 03  ;
.byt    $03,$04,$04,$00,$04,$0C,$12,$12; 0x5441 $9431 03 04 04 00 04 0C 12 12  ;
.byt    $18,$0C,$0E,$12,$04,$03,$03,$04; 0x5449 $9439 18 0C 0E 12 04 03 03 04  ;
.byt    $08,$00,$02,$00                ; 0x5451 $9441 08 00 02 00              ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Init_Routines_pointers                                             ;
.word    bank1_RTS                     ; 0x5455 $9445 AD 95                    ;Fairy			(00)
.word    bank1_Enemy_Init_Routines_Red_Jar; 0x5457 $9447 20 96                 ;Red Jar			(01)
.word    bank1_RTS                     ; 0x5459 $9449 AD 95                    ;Locked Door		(02)
.word    bank1_RTS                     ; 0x545b $944B AD 95                    ;Myu			(03)
.word    bank1_RTS                     ; 0x545d $944D AD 95                    ;Bot			(04)
.word    bank1_RTS                     ; 0x545f $944F AD 95                    ;Bit			(05)
.word    bank1_RTS                     ; 0x5461 $9451 AD 95                    ;Moa			(06)
.word    bank1_RTS                     ; 0x5463 $9453 AD 95                    ;Ache			(07)
.word    bank1_RTS                     ; 0x5465 $9455 AD 95                    ;?			(08)
.word    bank1_RTS                     ; 0x5467 $9457 AD 95                    ;?			(09)
.word    bank1_RTS                     ; 0x5469 $9459 AD 95                    ;Acheman			(0A)
.word    bank1_Enemy_Init_Routines_Bubble_Rock_BagoBago_Moby_DumbMoblin_Generator; 0x546b $945B 4E 98;Bubble Generator	(0B)
.word    bank1_Enemy_Init_Routines_Bubble_Rock_BagoBago_Moby_DumbMoblin_Generator; 0x546d $945D 4E 98;Rock Generator		(0C)
.word    bank1_Enemy_Init_Routines_Red_Blue_Deeler; 0x546f $945F 25 96         ;Red Deeler		(0D)
.word    bank1_Enemy_Init_Routines_Red_Blue_Deeler; 0x5471 $9461 25 96         ;Blue Deeler		(0E)
.word    bank1_Enemy_Init_Routines_Bubble_Rock_BagoBago_Moby_DumbMoblin_Generator; 0x5473 $9463 4E 98;Bago Bago Generator	(0F)
.word    bank1_RTS                     ; 0x5475 $9465 AD 95                    ;Bago Bago		(10)
.word    bank1_RTS                     ; 0x5477 $9467 AD 95                    ;Red Octorok - Jumping	(11)
.word    bank1_RTS                     ; 0x5479 $9469 AD 95                    ;Red Octorok - Moving	(12)
.word    bank1_RTS                     ; 0x547b $946B AD 95                    ;Elevator		(13)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x547d $946D 31 96     ;Moblin - Orange		(14)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x547f $946F 31 96     ;Moblin - Red		(15)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x5481 $9471 31 96     ;Moblin - Blue		(16)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x5483 $9473 31 96     ;Daira - Orange		(17)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x5485 $9475 31 96     ;Daira - Red		(18)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x5487 $9477 31 96     ;Goriya - Orange		(19)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x5489 $9479 31 96     ;Goriya - Red		(1A)
.word    bank1_Enemy_Init_Routines_Moblin_Daira_Goriya; 0x548b $947B 31 96     ;Goriya - Blue		(1B)
.word    bank1_RTS                     ; 0x548d $947D AD 95                    ;Lowder			(1C)
.word    bank1_Enemy_Init_Routines_Bubble_Rock_BagoBago_Moby_DumbMoblin_Generator; 0x548f $947F 4E 98;Moby Generator		(1D)
.word    bank1_RTS                     ; 0x5491 $9481 AD 95                    ;Moby			(1E)
.word    bank1_RTS                     ; 0x5493 $9483 AD 95                    ;Megmat			(1F)
.word    bank1_Enemy_Init_Routines_Geldarm; 0x5495 $9485 6C 98                 ;Geldarm			(20)
.word    bank1_Enemy_Init_Routines_Bubble_Rock_BagoBago_Moby_DumbMoblin_Generator; 0x5497 $9487 4E 98;Dumb Moblin Generator	(21)
.word    bank1_RTS                     ; 0x5499 $9489 AD 95                    ;Dumb Moblin		(22)
.word    L0000                         ; 0x549b $948B 00 00                    ;?			(23)
bank1_Pointer_table_for_Enemy_Routines1                                        ;
.word    bank7_Enemy_Routines1_Fairy   ; 0x549d $948D 1E D9                    ;Fairy
.word    bank7_Enemy_Routines1_Red_Jar ; 0x549f $948F 59 D9                    ;Red Jar
.word    bank7_Enemy_Routines1_Locked_Door; 0x54a1 $9491 91 D9                 ;Locked Door
.word    bank7_Enemy_Routines1_Myu     ; 0x54a3 $9493 47 DA                    ;Myu
.word    bank7_Enemy_Routines1_Bot     ; 0x54a5 $9495 0C DA                    ;Bot
.word    bank7_Enemy_Routines1_Bit     ; 0x54a7 $9497 2B DA                    ;Bit
.word    bank7_Enemy_Routines1_Moa     ; 0x54a9 $9499 CF DA                    ;Moa
.word    bank7_Enemy_Routines1_Ache_and_Acheman; 0x54ab $949B 53 DB            ;Ache
.word    bank1_Enemy_Routines1_unknown0; 0x54ad $949D 98 AB                    ;?
.word    bank1_Enemy_Routines1_unknown1; 0x54af $949F E9 AB                    ;?
.word    bank7_Enemy_Routines1_Ache_and_Acheman; 0x54b1 $94A1 53 DB            ;Acheman
.word    bank7_Enemy_Routines1_Raising_Bubbles; 0x54b3 $94A3 15 DC             ;Raising Bubbles
.word    bank7_Desert_Rocks_initialization_routine; 0x54b5 $94A5 4F DC         ;Desert Rocks
.word    bank7_Enemy_Routines1_Deeler  ; 0x54b7 $94A7 DF D6                    ;Deeler
.word    bank7_Enemy_Routines1_Deeler  ; 0x54b9 $94A9 DF D6                    ;Deeler
.word    bank7_Enemy_Routines1_Bago_Bago_Generator; 0x54bb $94AB 8F D7         ;Bago Bago Generator
.word    bank7_Enemy_Routines1_Bago_Bago0; 0x54bd $94AD E1 D7                  ;Bago Bago
.word    bank7_Enemy_Routines1_Bago_Bago1; 0x54bf $94AF 42 D8                  ;Bago Bago
.word    bank7_Enemy_Routines1_Octorok ; 0x54c1 $94B1 88 D8                    ;Octorok
.word    bank7_Enemy_Routines1_Elevator; 0x54c3 $94B3 C2 D8                    ;Elevator
.word    bank1_Enemy_Routines1_Goriya  ; 0x54c5 $94B5 72 99                    ;Goriya
.word    bank1_Enemy_Routines1_Goriya  ; 0x54c7 $94B7 72 99                    ;Goriya
.word    bank1_Enemy_Routines1_Goriya  ; 0x54c9 $94B9 72 99                    ;Goriya
.word    bank1_Enemy_Routines1_Daira   ; 0x54cb $94BB 15 9A                    ;Daira
.word    bank1_Enemy_Routines1_Daira   ; 0x54cd $94BD 15 9A                    ;Daira
.word    bank1_Enemy_Routines1_Goriya  ; 0x54cf $94BF 72 99                    ;Goriya
.word    bank1_Enemy_Routines1_Goriya  ; 0x54d1 $94C1 72 99                    ;Goriya
.word    bank1_Enemy_Routines1_Goriya  ; 0x54d3 $94C3 72 99                    ;Goriya
.word    bank1_Enemy_Routines1_Lowder  ; 0x54d5 $94C5 C3 98                    ;Lowder
.word    bank1_Enemy_Routines1_Generators; 0x54d7 $94C7 31 9B                  ;Generators
.word    bank1_Enemy_Routines1_Moby    ; 0x54d9 $94C9 94 9B                    ;Moby
.word    bank1_Enemy_Routines1_Megmat  ; 0x54db $94CB 7E 98                    ;Megmat
.word    bank1_Enemy_Routines1_Geldarm ; 0x54dd $94CD B5 9B                    ;Geldarm
.word    bank1_Enemy_Routines1_Dumb_Moblin_Generator; 0x54df $94CF 2F 99       ;Dumb Moblin Generator
.word    bank1_Enemy_Routines1_Dumb_Moblin; 0x54e1 $94D1 4F 99                 ;Dumb Moblin
.word    L0000                         ; 0x54e3 $94D3 00 00                    ;?
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Attributes                                                         ;
;Enemy Attributes (Palette, Experience Code, etc.) (24 bytes)                  ;
;                                                                              ;
;xx.. ....	Palette Code (0-3)                                                  ;
;..x. ....	No Damage from Sword (needs Fire)                                   ;
;...x ....	Steals Experience Points                                            ;
;.... xxxx	Experience Code (0-F)                                               ;
;                                                                              ;
;40	.x.. ....	Fairy                                                            ;
;40	.x.. ....	Red Jar (or Exp. Bag or Magic/Heart Container)                   ;
;40	.x.. ....	Locked Door                                                      ;
;C2	xx.. ..x.	Myu                                                              ;
;C1	xx.. ...x	Bot                                                              ;
;81	x... ...x	Bit                                                              ;
;94	x..x .x..	Moa                                                              ;
;C2	xx.. ..x.	Ache                                                             ;
;80	x... ....	?                                                                ;
;90	x..x ....	?                                                                ;
;84	x... .x..	Acheman                                                          ;
;10	...x ....	Bubble Generator                                                 ;
;10	...x ....	Rock Generator                                                   ;
;81	x... ...x	Red Deeler                                                       ;
;C2	xx.. ..x.	Blue Deeler                                                      ;
;02	.... ..x.	Bago Bago Generator                                              ;
;92	x..x ..x.	Bago Bago                                                        ;
;84	x... .x..	Red Octorok - Jumping                                            ;
;84	x... .x..	Red Octorok - Moving                                             ;
;40	.x.. ....	Elevator                                                         ;
;44	.x.. .x..	Moblin - Orange                                                  ;
;85	x... .x.x	Moblin - Red                                                     ;
;C5	xx.. .x.x	Moblin - Blue                                                    ;
;48	.x.. x...	Daira - Orange                                                   ;
;89	x... x..x	Daira - Red                                                      ;
;45	.x.. .x.x	Goriya - Orange                                                  ;
;85	x... .x.x	Goriya - Red                                                     ;
;C6	xx.. .xx.	Goriya - Blue                                                    ;
;C2	xx.. ..x.	Lowder                                                           ;
;00	.... ....	Moby Generator                                                   ;
;51	.x.x ...x	Moby                                                             ;
;C3	xx.. ..xx	Megmat                                                           ;
;83	x... ..xx	Geldarm                                                          ;
;00	.... ....	Dumb Moblin Generator                                            ;
;50	.x.x ....	Dumb Moblin                                                      ;
;02	.... ..x.	?                                                                ;
.byt    $40,$40,$40,$C2,$C1,$81,$94,$C2; 0x54e5 $94D5 40 40 40 C2 C1 81 94 C2  ;
.byt    $80,$90,$84,$10,$10,$81,$C2,$02; 0x54ed $94DD 80 90 84 10 10 81 C2 02  ;
.byt    $92,$84,$84,$40,$44,$85,$C5,$48; 0x54f5 $94E5 92 84 84 40 44 85 C5 48  ;
.byt    $89,$45,$85,$C6,$C2,$00,$51,$C3; 0x54fd $94ED 89 45 85 C6 C2 00 51 C3  ;
.byt    $83,$00,$50,$02                ; 0x5505 $94F5 83 00 50 02              ;
bank1_Enemy_Vulnerability_Damage_Codes                                         ;
;xx.. ....	Strength Code (0 = gives no items, 1 = weak, 2 = strong)            ;
;..x. ....	Immune to Flying Blade and Fire                                     ;
;...x ....	?                                                                   ;
;.... xxxx	Damage Code                                                         ;
;                                                                              ;
;30	..xx ....	Fairy                                                            ;
;30	..xx ....	Red Jar                                                          ;
;30	..xx ....	Locked Door                                                      ;
;41	.x.. ...x	Myu                                                              ;
;40	.x.. ....	Bot                                                              ;
;40	.x.. ....	Bit                                                              ;
;42	.x.. ..x.	Moa                                                              ;
;40	.x.. ....	Ache                                                             ;
;31	..xx ...x	?                                                                ;
;31	..xx ...x	?                                                                ;
;42	.x.. ..x.	Acheman                                                          ;
;30	..xx ....	Bubble Generator                                                 ;
;30	..xx ....	Rock Generator                                                   ;
;40	.x.. ....	Red Deeler                                                       ;
;40	.x.. ....	Blue Deeler                                                      ;
;31	..xx ...x	Bago Bago Generator                                              ;
;41	.x.. ...x	Bago Bago                                                        ;
;41	.x.. ...x	Red Octorok - Jumping                                            ;
;41	.x.. ...x	Red Octorok - Moving                                             ;
;30	..xx ....	Elevator                                                         ;
;41	.x.. ...x	Moblin - Orange                                                  ;
;41	.x.. ...x	Moblin - Red                                                     ;
;41	.x.. ...x	Moblin - Blue                                                    ;
;A2	x.x. ..x.	Daira - Orange                                                   ;
;A2	x.x. ..x.	Daira - Red                                                      ;
;61	.xx. ...x	Goriya - Orange                                                  ;
;61	.xx. ...x	Goriya - Red                                                     ;
;A1	x.x. ...x	Goriya - Blue                                                    ;
;40	.x.. ....	Lowder                                                           ;
;30	..xx ....	Moby Generator                                                   ;
;00	.... ....	Moby                                                             ;
;41	.x.. ...x	Megmat                                                           ;
;51	.x.x ...x	Geldarm                                                          ;
;30	..xx ....	Dumb Moblin Generator                                            ;
;40	.x.. ....	Dumb Moblin                                                      ;
;00	.... ....	?                                                                ;
.byt    $30,$30,$30,$41,$40,$40,$42,$40; 0x5509 $94F9 30 30 30 41 40 40 42 40  ;
.byt    $31,$31,$42,$30,$30,$40,$40,$31; 0x5511 $9501 31 31 42 30 30 40 40 31  ;
.byt    $41,$41,$41,$30,$41,$41,$41,$A2; 0x5519 $9509 41 41 41 30 41 41 41 A2  ;
.byt    $A2,$61,$61,$A1,$40,$30,$00,$41; 0x5521 $9511 A2 61 61 A1 40 30 00 41  ;
.byt    $51,$30,$40,$00                ; 0x5529 $9519 51 30 40 00              ;
bank1_Enemy_Size_Codes                                                         ;
;00	Moblin Generator                                                           ;
;01	4-Tile Enemies                                                             ;
;02	Myu                                                                        ;
;03	Elevator                                                                   ;
;04	Locked Door                                                                ;
;0F	Fairy, Red Jar (Flying Sword and Fire go through)                          ;
;80	8-Tile Enemies (Moblin, Goriya, Daira, Acheman)                            ;
;85	Geldarm                                                                    ;
.byt    $0F,$0F,$04,$02,$01,$01,$01,$01; 0x552d $951D 0F 0F 04 02 01 01 01 01  ;
.byt    $01,$01,$80,$01,$01,$01,$01,$01; 0x5535 $9525 01 01 80 01 01 01 01 01  ;
.byt    $01,$01,$01,$03,$80,$80,$80,$80; 0x553d $952D 01 01 01 03 80 80 80 80  ;
.byt    $80,$80,$80,$80,$01,$01,$01,$01; 0x5545 $9535 80 80 80 80 01 01 01 01  ;
.byt    $85,$00,$80,$05                ; 0x554d $953D 85 00 80 05              ;
bank1_Other_Enemy_Attributes                                                   ;
;x... ....	Immune to Thunder Spell                                             ;
;.x.. ....	Regenerates                                                         ;
;..x. ....	?                                                                   ;
;...x ....	Not hittable with sword                                             ;
;.... xxxx	?                                                                   ;
;                                                                              ;
;96	x..x .xx.	Fairy                                                            ;
;86	x... .xx.	Red Jar                                                          ;
;96	x..x .xx.	Locked Door                                                      ;
;46	.x.. .xx.	Myu                                                              ;
;46	.x.. .xx.	Bot                                                              ;
;46	.x.. .xx.	Bit                                                              ;
;06	.... .xx.	Moa                                                              ;
;40	.x.. ....	Ache                                                             ;
;96	x..x .xx.	?                                                                ;
;06	.... .xx.	?                                                                ;
;40	.x.. ....	Acheman                                                          ;
;90	x..x ....	Bubble Generator                                                 ;
;90	x..x ....	Rock Generator                                                   ;
;06	.... .xx.	Deeler - Red                                                     ;
;06	.... .xx.	Deeler - Blue                                                    ;
;90	x..x ....	Bago Bago Generator                                              ;
;06	.... .xx.	Bago Bago                                                        ;
;06	.... .xx.	Red Octorok - Jumping                                            ;
;06	.... .xx.	Red Octorok - Moving                                             ;
;90	x..x ....	Elevator                                                         ;
;00	.... ....	Moblin - Orange                                                  ;
;00	.... ....	Moblin - Red                                                     ;
;00	.... ....	Moblin - Blue                                                    ;
;00	.... ....	Daira - Orange                                                   ;
;00	.... ....	Daira - Red                                                      ;
;00	.... ....	Goriya - Orange                                                  ;
;00	.... ....	Goriya - Red                                                     ;
;00	.... ....	Goriya - Blue                                                    ;
;06	.... .xx.	Lowder                                                           ;
;96	x..x .xx.	Moby Generator                                                   ;
;06	.... .xx.	Moby                                                             ;
;06	.... .xx.	Megmat                                                           ;
;00	.... ....	Geldarm                                                          ;
;00	.... ....	Dumb Moblin Generator                                            ;
;00	.... ....	Dumb Moblin                                                      ;
;00	.... ....	?                                                                ;
.byt    $96,$86,$96,$46,$46,$46,$06,$40; 0x5551 $9541 96 86 96 46 46 46 06 40  ;
.byt    $96,$06,$40,$90,$90,$06,$06,$90; 0x5559 $9549 96 06 40 90 90 06 06 90  ;
.byt    $06,$06,$06,$90,$00,$00,$00,$00; 0x5561 $9551 06 06 06 90 00 00 00 00  ;
.byt    $00,$00,$00,$00,$06,$96,$06,$06; 0x5569 $9559 00 00 00 00 06 96 06 06  ;
.byt    $00,$00,$00,$00                ; 0x5571 $9561 00 00 00 00              ;
; ---------------------------------------------------------------------------- ;
bank1_Pointer_table_for_Enemy_Routines2                                        ;
.word    bank7_Enemy_Routines2_Fairy   ; 0x5575 $9565 DD F0                    ;Fairy		00
.word    bank7_Enemy_Routines2_RedJar  ; 0x5577 $9567 12 F1                    ;Red Jar		01
.word    bank7_Enemy_Routines2_LockedDoor; 0x5579 $9569 3A F1                  ;Locked Door	02
.word    bank7_Enemy_Routines2_Myu     ; 0x557b $956B C2 EF                    ;Myu		03
.word    bank7_Enemy_Routines2_Bot_and_Bit; 0x557d $956D 91 EF                 ;Bot		04
.word    bank7_Enemy_Routines2_Bot_and_Bit; 0x557f $956F 91 EF                 ;Bit		05
.word    bank7_Enemy_Routines2_Moa     ; 0x5581 $9571 F2 EF                    ;Moa		06
.word    bank7_Enemy_Routines2_Ache_and_Acheman; 0x5583 $9573 7E F1            ;Ache		07
.word    bank7_Enemy_Routines2_unknown ; 0x5585 $9575 D2 EF                    ;?		08
.word    bank7_Enemy_Routines2_unknown ; 0x5587 $9577 D2 EF                    ;?		09
.word    bank7_Enemy_Routines2_Ache_and_Acheman; 0x5589 $9579 7E F1            ;Acheman		0A
.word    L0000                         ; 0x558b $957B 00 00                    ;Bubble generator 0B
.word    L0000                         ; 0x558d $957D 00 00                    ;Rock generator	0C
.word    bank7_Enemy_Routines2_Deeler  ; 0x558f $957F 27 F0                    ;Leeder		0D
.word    bank7_Enemy_Routines2_Deeler  ; 0x5591 $9581 27 F0                    ;Leeder		0E
.word    bank1_RTS                     ; 0x5593 $9583 AD 95                    ;Bago Bago Gen.	0F
.word    bank7_Enemy_Routines2_BagoBago; 0x5595 $9585 B9 F0                    ;Bago Bago	10
.word    bank7_Enemy_Routines2_Octorok ; 0x5597 $9587 A8 F0                    ;Octorok		11
.word    bank7_Enemy_Routines2_Octorok ; 0x5599 $9589 A8 F0                    ;Octorok		12
.word    bank7_Enemy_Routines2_Elevator; 0x559b $958B 47 EF                    ;Elevator	13
.word    bank1_Enemy_Routines2_Moblin  ; 0x559d $958D A4 9C                    ;Moblin (Orange)	14
.word    bank1_Enemy_Routines2_Moblin  ; 0x559f $958F A4 9C                    ;Moblin (Red)	15
.word    bank1_Enemy_Routines2_Moblin  ; 0x55a1 $9591 A4 9C                    ;Moblin (Blue)	16
.word    bank1_Enemy_Routines2_Daira_Orange; 0x55a3 $9593 65 9D                ;Daira (Orange)	17
.word    bank1_Enemy_Routines2_Daira_Red_; 0x55a5 $9595 69 9D                  ;Daira (Red)	18
.word    bank1_Enemy_Routines2_Goriya  ; 0x55a7 $9597 6F 9C                    ;Goriya (Orange)	19
.word    bank1_Enemy_Routines2_Goriya  ; 0x55a9 $9599 6F 9C                    ;Goriya (Red)	1A
.word    bank1_Enemy_Routines2_Goriya  ; 0x55ab $959B 6F 9C                    ;Goriya (Blue)	1B
.word    bank1_Enemy_Routines2_Lowder  ; 0x55ad $959D F1 9D                    ;Lowder		1C
.word    bank1_RTS                     ; 0x55af $959F AD 95                    ;Moby Generator	1D
.word    bank1_Enemy_Routines2_Moby    ; 0x55b1 $95A1 F6 9D                    ;Moby		1E
.word    bank1_Enemy_Routines2_Megmat  ; 0x55b3 $95A3 FB 9D                    ;Megmat		1F
.word    bank1_Geldarm_body_tiles_layout; 0x55b5 $95A5 0C 9E                   ;Geldarm		20
.word    bank1_RTS                     ; 0x55b7 $95A7 AD 95                    ;Dumb Moblin Generator 21
.word    bank1_Enemy_Routines2_DumbMoblin; 0x55b9 $95A9 43 9C                  ;Dumb Moblin	22
.word    L0000                         ; 0x55bb $95AB 00 00                    ;?		23
; ---------------------------------------------------------------------------- ;
bank1_RTS                                                                      ;
rts                                    ; 0x55bd $95AD 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_table5                                                                   ;
.byt    $AE,$AA,$AE,$84,$00,$0D,$F6,$00; 0x55be $95AE AE AA AE 84 00 0D F6 00  ;
.byt    $00                            ; 0x55c6 $95B6 00                       ;
bank1_Desert_Rocks_palette_sequence__offset_minus1                             ;
.byt    $02,$01,$02,$01,$03,$01,$01    ; 0x55c7 $95B7 02 01 02 01 03 01 01     ;
bank1_table_padding_maybe                                                      ;
.byt    $00,$00,$00,$00                ; 0x55ce $95BE 00 00 00 00              ;Padding ? (4 bytes)
; ---------------------------------------------------------------------------- ;
bank1_Pointer_Table_for_Projectiles_Routines                                   ;
.word    Projectiles_Routines_Desert_Rock; 0x55d2 $95C2 59 97                  ;Desert Rock
.word    Projectiles_Routines_Raising_Bubble; 0x55d4 $95C4 7B 97               ;Raising Bubble
.word    Projectiles_Routines_Octorok_Rock_or_Flame; 0x55d6 $95C6 6D 97        ;Octorok Rock / Flame
.word    Projectiles_Routines_Octorok_Rock_or_Flame; 0x55d8 $95C8 6D 97        ;Octorok Rock / Flame
.word    Projectiles_Routines_Moblin_Spear; 0x55da $95CA 89 97                 ;
.word    Projectiles_Routines_Boomerang; 0x55dc $95CC A9 97                    ;
.word    Projectiles_Routines_Red_Daria_Axe; 0x55de $95CE C0 97                ;
.word    bank1_RTS                     ; 0x55e0 $95D0 AD 95                    ;
.word    bank1_RTS                     ; 0x55e2 $95D2 AD 95                    ;
; ---------------------------------------------------------------------------- ;
bank1_Various_Tile_Mappings_Goriya_Walking_Frame1                              ;
.byt    $01,$03,$EA,$EC                ; 0x55e4 $95D4 01 03 EA EC              ;
bank1_Various_Tile_Mappings_Goriya_Walking_Frame2                              ;
.byt    $05,$07,$F2,$F4                ; 0x55e8 $95D8 05 07 F2 F4              ;
bank1_Various_Tile_Mappings_Goriya_Throwing_Low                                ;
.byt    $01,$03,$EA,$0B                ; 0x55ec $95DC 01 03 EA 0B              ;
bank1_Various_Tile_Mappings_Goriya_Throwing_High                               ;
.byt    $05,$09,$F2,$F4                ; 0x55f0 $95E0 05 09 F2 F4              ;
bank1_Various_Tile_Mappings_Daira_Axe_Back_Swing                               ;
.byt    $F6,$F8                        ; 0x55f4 $95E4 F6 F8                    ;
bank1_Various_Tile_Mappings_Daira_Axe_Swing_Frame_1                            ;
.byt    $F6,$F8                        ; 0x55f6 $95E6 F6 F8                    ;
bank1_Various_Tile_Mappings_Daira_Axe_Swing_Frame_2_Orange_only                ;
.byt    $FA,$F5                        ; 0x55f8 $95E8 FA F5                    ;
bank1_Various_Tile_Mappings_Goriya_Walking_Frame_1                             ;
.byt    $E6,$E8,$EA,$EC                ; 0x55fa $95EA E6 E8 EA EC              ;
bank1_Various_Tile_Mappings_Goriya_Walking_Frame_2                             ;
.byt    $EE,$F0,$F2,$F4                ; 0x55fe $95EE EE F0 F2 F4              ;
bank1_Various_Tile_Mappings_Moblin_Walking_Frame_1                             ;
.byt    $0F,$11,$17,$19                ; 0x5602 $95F2 0F 11 17 19              ;
bank1_Various_Tile_Mappings_Moblin_Walking_Frame_2_Head                        ;
.byt    $25,$27,$0F,$11                ; 0x5606 $95F6 25 27 0F 11              ;
bank1_Various_Tile_Mappings_Moblin_Walking_Frame_2_Feet                        ;
.byt    $13,$15,$25,$27                ; 0x560a $95FA 13 15 25 27              ;
bank1_Various_Tile_Mappings_Moblin_Before_Throw                                ;
.byt    $1B,$1D,$1F,$21                ; 0x560e $95FE 1B 1D 1F 21              ;
bank1_Various_Tile_Mappings_Moblin_Spear_Before_Throw                          ;
.byt    $25,$27,$1B,$23                ; 0x5612 $9602 25 27 1B 23              ;
bank1_Various_Tile_Mappings_Stabbing_Spear_Tip_Dumb_Moblin__Red_Moblin         ;
.byt    $1F,$21,$25,$27                ; 0x5616 $9606 1F 21 25 27              ;
bank1_Various_Tile_Mappings_Dumb_Moblin_Walking_Frame_1_Feet                   ;
.byt    $1B,$23,$1F,$21                ; 0x561a $960A 1B 23 1F 21              ;
bank1_Various_Tile_Mappings_Generators_maybe                                   ;
.byt    $F5,$F5                        ; 0x561e $960E F5 F5                    ;
bank1_Various_Tile_Mappings_Lowder_Frame_1                                     ;
.byt    $DE,$E0                        ; 0x5620 $9610 DE E0                    ;
bank1_Various_Tile_Mappings_Lowder_Frame_2                                     ;
.byt    $E2,$E0                        ; 0x5622 $9612 E2 E0                    ;
bank1_Various_Tile_Mappings_Megmat_Frame_1                                     ;
.byt    $D6,$D8                        ; 0x5624 $9614 D6 D8                    ;
bank1_Various_Tile_Mappings_Megmat_Frame_2                                     ;
.byt    $DA,$DC                        ; 0x5626 $9616 DA DC                    ;
bank1_Various_Tile_Mappings_Moby_Frame_1                                       ;
.byt    $D0,$D2                        ; 0x5628 $9618 D0 D2                    ;
bank1_Various_Tile_Mappings_Moby_Frame_2                                       ;
.byt    $D0,$D4                        ; 0x562a $961A D0 D4                    ;
bank1_Various_Tile_Mappings_Moblin_Thrown_Spear                                ;
.byt    $25,$27                        ; 0x562c $961C 25 27                    ;
bank1_Various_Tile_Mappings_unknown                                            ;
.byt    $FC,$FE                        ; 0x562e $961E FC FE                    ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Init_Routines_Red_Jar                                              ;
lda      #$11                          ; 0x5630 $9620 A9 11                    ; A = 11
sta      $AF,x                         ; 0x5632 $9622 95 AF                    ; Item Code
L9624                                                                          ;
rts                                    ; 0x5634 $9624 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Init_Routines_Red_Blue_Deeler                                      ;
lda      $2A,x                         ; 0x5635 $9625 B5 2A                    ; Enemy Y position
sta      $05DD                         ; 0x5637 $9627 8D DD 05                 ;
clc                                    ; 0x563a $962A 18                       ;
adc      #$60                          ; 0x563b $962B 69 60                    ; Go down rope this many pixels
sta      $05DC                         ; 0x563d $962D 8D DC 05                 ;
rts                                    ; 0x5640 $9630 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Init_Routines_Moblin_Daira_Goriya                                  ;
dec      $AF,x                         ; 0x5641 $9631 D6 AF                    ;; Various enemy state variables
rts                                    ; 0x5643 $9633 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9634                                                                          ;
jsr      L9EB2                         ; 0x5644 $9634 20 B2 9E                 ;
bank1_table6                                                                   ;
.byt    $D0,$00                        ; 0x5647 $9637 D0 00                    ;
; ---------------------------------------------------------------------------- ;
bank1_Various_Projectiles                                                      ;
lda      #$FE                          ; 0x5649 $9639 A9 FE                    ; A = FE (1111 1110) (-2)
sta      $0584,x                       ; 0x564b $963B 9D 84 05                 ; Rocks (desert, Octorok) vertical movement
L963E                                                                          ;
inc      $0584,x                       ; 0x564e $963E FE 84 05                 ; Global gravity for
inc      $0584,x                       ; 0x5651 $9641 FE 84 05                 ; spears, rocks...
jmp      L96FF                         ; 0x5654 $9644 4C FF 96                 ; goto $56FF
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9647                                                                          ;
ldy      #$04                          ; 0x5657 $9647 A0 04                    ; Y = 04 (0000 0100)
inc      $044C,x                       ; 0x5659 $9649 FE 4C 04                 ;
lda      $044C,x                       ; 0x565c $964C BD 4C 04                 ;
and      #$10                          ; 0x565f $964F 29 10                    ; keep bits ...x ....
beq      L9655                         ; 0x5661 $9651 F0 02                    ; if bit 4 is 0, skip to $5655 (< 0F)
ldy      #$FC                          ; 0x5663 $9653 A0 FC                    ; Y = FC (1111 1100)
L9655                                                                          ;
sty      $77,x                         ; 0x5665 $9655 94 77                    ;; Projectile X Velocity
jmp      L96FF                         ; 0x5667 $9657 4C FF 96                 ; goto $56FF
                                                                               ;
; ---------------------------------------------------------------------------- ;
L965A                                                                          ;
jsr      L96EB                         ; 0x566a $965A 20 EB 96                 ; goto $56EB
L965F     = * + $0002                                                          ;
jmp      bank1_Various_Projectiles     ; 0x566d $965D 4C 39 96                 ; goto $5639
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_various_boomerang_velocities                                   ;
.byt    $FF,$01                        ; 0x5670 $9660 FF 01                    ;
L9662                                                                          ;
.byt    $FC,$04                        ; 0x5672 $9662 FC 04                    ;
; ---------------------------------------------------------------------------- ;
bank1_code11                                                                   ;
jsr      L96EB                         ; 0x5674 $9664 20 EB 96                 ; goto $56EB
lda      $12                           ; 0x5677 $9667 A5 12                    ;; Frame Counter (ascending)
lsr                                    ; 0x5679 $9669 4A                       ;
bcc      L9680                         ; 0x567a $966A 90 14                    ;
lda      #$80                          ; 0x567c $966C A9 80                    ; A = 80 (boomerang sound)
sta      $ED                           ; 0x567e $966E 85 ED                    ; Sound Effects Type 2
lda      $0584,x                       ; 0x5680 $9670 BD 84 05                 ; Projectile Y Velocity
bmi      L967D                         ; 0x5683 $9673 30 08                    ; if Negative, skip to $567D
beq      L9680                         ; 0x5685 $9675 F0 09                    ; if Zero,     skip to $5680
dec      $0584,x                       ; 0x5687 $9677 DE 84 05                 ; Projectile Y Velocity
dec      $0584,x                       ; 0x568a $967A DE 84 05                 ;; Projectile Y Velocity; Projectile Y Velocity
L967D                                                                          ;
inc      $0584,x                       ; 0x568d $967D FE 84 05                 ; Projectile Y Velocity
L9680                                                                          ;
lda      $044C,x                       ; 0x5690 $9680 BD 4C 04                 ;
bmi      L96B4                         ; 0x5693 $9683 30 2F                    ; if Negative, skip to $56B4
bne      L96B1                         ; 0x5695 $9685 D0 2A                    ; if not Zero, skip to $56B1
ldy      $0458,x                       ; 0x5697 $9687 BC 58 04                 ; 0 or 1 (probably)
lda      L9662,y                       ; 0x569a $968A B9 62 96                 ; refer to table at $5660 (offset +2)
L968D                                                                          ;
sta      $0584,x                       ; 0x569d $968D 9D 84 05                 ; Projectile Y Velocity
ldy      $0452,x                       ; 0x56a0 $9690 BC 52 04                 ;
lda      $77,x                         ; 0x56a3 $9693 B5 77                    ; Projectile X Velocity
clc                                    ; 0x56a5 $9695 18                       ;
adc      L965F,y                       ; 0x56a6 $9696 79 5F 96                 ;
sta      $77,x                         ; 0x56a9 $9699 95 77                    ; Projectile X Velocity
ldy      #$02                          ; 0x56ab $969B A0 02                    ; Y = 02
cmp      #$00                          ; 0x56ad $969D C9 00                    ;
bmi      L96A2                         ; 0x56af $969F 30 01                    ;
dey                                    ; 0x56b1 $96A1 88                       ;
L96A2                                                                          ;
sty      $66,x                         ; 0x56b2 $96A2 94 66                    ; Projectile facing direction
and      #$3F                          ; 0x56b4 $96A4 29 3F                    ; keep bits ..xx xxxx
cmp      #$20                          ; 0x56b6 $96A6 C9 20                    ;
L96A8                                                                          ;
bne      L96B4                         ; 0x56b8 $96A8 D0 0A                    ; if Zero, skip to $56B4
lda      #$FF                          ; 0x56ba $96AA A9 FF                    ; A = FF (4D -> boomerang go through Goriya)
sta      $044C,x                       ; 0x56bc $96AC 9D 4C 04                 ;
bne      L96B4                         ; 0x56bf $96AF D0 03                    ; if not Zero, skip to $56B4
L96B1                                                                          ;
dec      $044C,x                       ; 0x56c1 $96B1 DE 4C 04                 ; (boomerang flying back)
L96B4                                                                          ;
jsr      L96FF                         ; 0x56c4 $96B4 20 FF 96                 ; goto $56FF
ldy      $044C,x                       ; 0x56c7 $96B7 BC 4C 04                 ;
dey                                    ; 0x56ca $96BA 88                       ;
bpl      L96EA                         ; 0x56cb $96BB 10 2D                    ; if Positive, skip to $56EA (RTS)
lda      $045E,x                       ; 0x56cd $96BD BD 5E 04                 ;
tax                                    ; 0x56d0 $96C0 AA                       ;
lda      $B6,x                         ; 0x56d1 $96C1 B5 B6                    ; Generated Enemy Slot
cmp      #$01                          ; 0x56d3 $96C3 C9 01                    ;
bne      L96EA                         ; 0x56d5 $96C5 D0 23                    ; if not Zero, skip to $56EA (RTS)
lda      $4E,x                         ; 0x56d7 $96C7 B5 4E                    ; Enemy X Position (low byte)
sbc      $072C                         ; 0x56d9 $96C9 ED 2C 07                 ; Scrolling Offset Low Byte
ldy      #$00                          ; 0x56dc $96CC A0 00                    ; Y = 00
jsr      LE94C                         ; 0x56de $96CE 20 4C E9                 ; goto $1E94C
ldy      #$03                          ; 0x56e1 $96D1 A0 03                    ; Y = 03
L96D3                                                                          ;
lda      $04,y                         ; 0x56e3 $96D3 B9 04 00                 ;
sta      L0000,y                       ; 0x56e6 $96D6 99 00 00                 ;
dey                                    ; 0x56e9 $96D9 88                       ;
bpl      L96D3                         ; 0x56ea $96DA 10 F7                    ; if (Y >= 0) loop to $56D3
ldx      $10                           ; 0x56ec $96DC A6 10                    ;; used as monster x register ;draw boss hp bar
jsr      LE469                         ; 0x56ee $96DE 20 69 E4                 ;
jsr      bank7_idem__maybe             ; 0x56f1 $96E1 20 F9 E9                 ;
bcc      L96EA                         ; 0x56f4 $96E4 90 04                    ;
lda      #$00                          ; 0x56f6 $96E6 A9 00                    ; A = 00
sta      $87,x                         ; 0x56f8 $96E8 95 87                    ;; Projectile Type
L96EA                                                                          ;
rts                                    ; 0x56fa $96EA 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L96EB                                                                          ;
ldy      #$02                          ; 0x56fb $96EB A0 02                    ; Y = 02
lda      $77,x                         ; 0x56fd $96ED B5 77                    ;; Projectile X Velocity
bmi      L96F2                         ; 0x56ff $96EF 30 01                    ;
dey                                    ; 0x5701 $96F1 88                       ; (CA -> no projectiles)
L96F2                                                                          ;
tya                                    ; 0x5702 $96F2 98                       ;
cmp      $66,x                         ; 0x5703 $96F3 D5 66                    ;; Projectile facing direction
beq      L96EA                         ; 0x5705 $96F5 F0 F3                    ;
pla                                    ; 0x5707 $96F7 68                       ;
pla                                    ; 0x5708 $96F8 68                       ;
inc      $0584,x                       ; 0x5709 $96F9 FE 84 05                 ; affects octorok rocks and boomerangs
inc      $0584,x                       ; 0x570c $96FC FE 84 05                 ; when blocked, but not spears
L96FF                                                                          ;
jsr      LDED4                         ; 0x570f $96FF 20 D4 DE                 ; goto 1DED4
lda      $CA                           ; 0x5712 $9702 A5 CA                    ;
and      #$FC                          ; 0x5714 $9704 29 FC                    ; keep bits xxxx xx..
beq      L970D                         ; 0x5716 $9706 F0 05                    ; if (A < 04) goto $570D
lda      #$00                          ; 0x5718 $9708 A9 00                    ; A = 00 (set to 03 for funny results)
sta      $87,x                         ; 0x571a $970A 95 87                    ;; Projectile Type
rts                                    ; 0x571c $970C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L970D                                                                          ;
jsr      bank1_code12                  ; 0x571d $970D 20 18 97                 ; goto $5718
jsr      LE48A                         ; 0x5720 $9710 20 8A E4                 ; goto $1E48A
L9715     = * + $0002                                                          ;
jmp      LE3B9                         ; 0x5723 $9713 4C B9 E3                 ; goto $1E3B9
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_table7                                                                   ;
.byt    $40,$00                        ; 0x5726 $9716 40 00                    ;
; ---------------------------------------------------------------------------- ;
bank1_code12                                                                   ;
lda      $87,x                         ; 0x5728 $9718 B5 87                    ; Projectile Type (chart below)
; Projectile Type (chart below)                                                ;
;00 = crash                                                                    ;
;01 = Desert rock                                                              ;
;02 = Bubble                                                                   ;
;03 = Octorok rock                                                             ;
;04 = Flame                                                                    ;
;05 = Spear                                                                    ;
;06 = Boomerang                                                                ;
;07 = Axe                                                                      ;
pha                                    ; 0x572a $971A 48                       ;
asl                                    ; 0x572b $971B 0A                       ;
tay                                    ; 0x572c $971C A8                       ;
lda      $6EC0,y                       ; 0x572d $971D B9 C0 6E                 ;
sta      L000E                         ; 0x5730 $9720 85 0E                    ;
lda      $6EC1,y                       ; 0x5732 $9722 B9 C1 6E                 ;
sta      $0F                           ; 0x5735 $9725 85 0F                    ;
ldy      $97,x                         ; 0x5737 $9727 B4 97                    ;
lda      $30,x                         ; 0x5739 $9729 B5 30                    ; projectile Y position (display)
sta      $0200,y                       ; 0x573b $972B 99 00 02                 ;
sta      L0000                         ; 0x573e $972E 85 00                    ;
lda      $CE                           ; 0x5740 $9730 A5 CE                    ; projectile X position (display)
sta      $01                           ; 0x5742 $9732 85 01                    ;
sta      $0203,y                       ; 0x5744 $9734 99 03 02                 ;
pla                                    ; 0x5747 $9737 68                       ;
tay                                    ; 0x5748 $9738 A8                       ;
lda      $6EAD,y                       ; 0x5749 $9739 B9 AD 6E                 ;
pha                                    ; 0x574c $973C 48                       ;
lda      $6EB6,y                       ; 0x574d $973D B9 B6 6E                 ;
sta      $03                           ; 0x5750 $9740 85 03                    ;
ldy      $66,x                         ; 0x5752 $9742 B4 66                    ;; Projectile facing direction
sty      $02                           ; 0x5754 $9744 84 02                    ;
ora      L9715,y                       ; 0x5756 $9746 19 15 97                 ;
ldy      $97,x                         ; 0x5759 $9749 B4 97                    ;
sta      $0202,y                       ; 0x575b $974B 99 02 02                 ;
pla                                    ; 0x575e $974E 68                       ;
sta      $0201,y                       ; 0x575f $974F 99 01 02                 ;
jmp      (L000E)                       ; 0x5762 $9752 6C 0E 00                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_relative_Y_display_of_Desert_Rocks                             ;
.byt    $00,$02,$00,$FE                ; 0x5765 $9755 00 02 00 FE              ;
; ---------------------------------------------------------------------------- ;
Projectiles_Routines_Desert_Rock                                               ;
lda      $12                           ; 0x5769 $9759 A5 12                    ;; Frame Counter (ascending)
and      #$30                          ; 0x576b $975B 29 30                    ; keep bits ..xx ....
lsr                                    ; 0x576d $975D 4A                       ; shift
lsr                                    ; 0x576e $975E 4A                       ; right
lsr                                    ; 0x576f $975F 4A                       ; 4 times
lsr                                    ; 0x5770 $9760 4A                       ; A becomes .... ..xx (frame number 0-2)
tax                                    ; 0x5771 $9761 AA                       ;
L9764     = * + $0002                                                          ;
lda      $0200,y                       ; 0x5772 $9762 B9 00 02                 ;
adc      bank1_Table_for_relative_Y_display_of_Desert_Rocks,x; 0x5775 $9765 7D 55 97; refer to table at $5755
sta      $0200,y                       ; 0x5778 $9768 99 00 02                 ;
ldx      $10                           ; 0x577b $976B A6 10                    ;; used as monster x register ;draw boss hp bar
Projectiles_Routines_Octorok_Rock_or_Flame                                     ;
lda      $12                           ; 0x577d $976D A5 12                    ;; Frame Counter (ascending)
asl                                    ; 0x577f $976F 0A                       ;
asl                                    ; 0x5780 $9770 0A                       ;
asl                                    ; 0x5781 $9771 0A                       ;
asl                                    ; 0x5782 $9772 0A                       ;
asl                                    ; 0x5783 $9773 0A                       ;
and      #$80                          ; 0x5784 $9774 29 80                    ; keep bits x... ....
ora      $0202,y                       ; 0x5786 $9776 19 02 02                 ;
bne      L9785                         ; 0x5789 $9779 D0 0A                    ;
Projectiles_Routines_Raising_Bubble                                            ;
lda      $12                           ; 0x578b $977B A5 12                    ;; Frame Counter (ascending)
asl                                    ; 0x578d $977D 0A                       ;
asl                                    ; 0x578e $977E 0A                       ;
asl                                    ; 0x578f $977F 0A                       ;
sec                                    ; 0x5790 $9780 38                       ;
rol                                    ; 0x5791 $9781 2A                       ;
asl                                    ; 0x5792 $9782 0A                       ;
and      #$43                          ; 0x5793 $9783 29 43                    ; keep bits .x.. ..xx
L9785                                                                          ;
sta      $0202,y                       ; 0x5795 $9785 99 02 02                 ;
rts                                    ; 0x5798 $9788 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Projectiles_Routines_Moblin_Spear                                              ;
lda      $040E,x                       ; 0x5799 $9789 BD 0E 04                 ; Enemy Hit State
pha                                    ; 0x579c $978C 48                       ;
lda      $045E,x                       ; 0x579d $978D BD 5E 04                 ;
beq      L9794                         ; 0x57a0 $9790 F0 02                    ;
sta      $03                           ; 0x57a2 $9792 85 03                    ; set spear palette (?)
L9794                                                                          ;
lda      #$00                          ; 0x57a4 $9794 A9 00                    ; A = 00
sta      $C9                           ; 0x57a6 $9796 85 C9                    ;
sta      $040E,x                       ; 0x57a8 $9798 9D 0E 04                 ; Enemy Hit State
ldx      #$48                          ; 0x57ab $979B A2 48                    ; Spear Tile Mapping index
jsr      LF0D7                         ; 0x57ad $979D 20 D7 F0                 ; goto $1F0D7
pla                                    ; 0x57b0 $97A0 68                       ;
sta      $040E,x                       ; 0x57b1 $97A1 9D 0E 04                 ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
rts                                    ; 0x57b4 $97A4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Boomerang_mirroring_attributes                                 ;
.byt    $02,$82,$C2,$42                ; 0x57b5 $97A5 02 82 C2 42              ;
; ---------------------------------------------------------------------------- ;
Projectiles_Routines_Boomerang                                                 ;
lda      $12                           ; 0x57b9 $97A9 A5 12                    ;; Frame Counter (ascending)
lsr                                    ; 0x57bb $97AB 4A                       ;
lsr                                    ; 0x57bc $97AC 4A                       ;
and      #$03                          ; 0x57bd $97AD 29 03                    ; keep bits .... ..xx
ldy      $66,x                         ; 0x57bf $97AF B4 66                    ;; Projectile facing direction
dey                                    ; 0x57c1 $97B1 88                       ;
bne      L97B6                         ; 0x57c2 $97B2 D0 02                    ;
eor      #$03                          ; 0x57c4 $97B4 49 03                    ; flip bits .... ..xx
L97B6                                                                          ;
tay                                    ; 0x57c6 $97B6 A8                       ;
lda      bank1_Table_for_Boomerang_mirroring_attributes,y; 0x57c7 $97B7 B9 A5 97; refer to table at $57A5
ldy      $97,x                         ; 0x57ca $97BA B4 97                    ;
sta      $0202,y                       ; 0x57cc $97BC 99 02 02                 ;
rts                                    ; 0x57cf $97BF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Projectiles_Routines_Red_Daria_Axe                                             ;
lda      $12                           ; 0x57d0 $97C0 A5 12                    ;; Frame Counter (ascending)
and      #$04                          ; 0x57d2 $97C2 29 04                    ; keep bits .... .x..
sta      L0000                         ; 0x57d4 $97C4 85 00                    ;
lda      #$F6                          ; 0x57d6 $97C6 A9 F6                    ; A = F6 (tile mapping for Red Daria's axe)
clc                                    ; 0x57d8 $97C8 18                       ;
adc      L0000                         ; 0x57d9 $97C9 65 00                    ;
sta      $0201,y                       ; 0x57db $97CB 99 01 02                 ;
ldx      #$02                          ; 0x57de $97CE A2 02                    ; X = 02 (palette for axe's frame)
lda      $12                           ; 0x57e0 $97D0 A5 12                    ;; Frame Counter (ascending)
and      #$08                          ; 0x57e2 $97D2 29 08                    ; keep bits .... x...
bne      L97D8                         ; 0x57e4 $97D4 D0 02                    ;
ldx      #$C2                          ; 0x57e6 $97D6 A2 C2                    ; X = C2
L97D8                                                                          ;
stx      $00                           ; 0x57e8 $97D8 86 00                    ;
ldx      $10                           ; 0x57ea $97DA A6 10                    ;; used as monster x register ;draw boss hp bar
lda      $66,x                         ; 0x57ec $97DC B5 66                    ;; Projectile facing direction
cmp      #$01                          ; 0x57ee $97DE C9 01                    ;
bne      L97E8                         ; 0x57f0 $97E0 D0 06                    ;
lda      L0000                         ; 0x57f2 $97E2 A5 00                    ;
eor      #$40                          ; 0x57f4 $97E4 49 40                    ; flip bits .x.. ....
sta      L0000                         ; 0x57f6 $97E6 85 00                    ;
L97E8                                                                          ;
lda      L0000                         ; 0x57f8 $97E8 A5 00                    ;
sta      $0202,y                       ; 0x57fa $97EA 99 02 02                 ;
L97ED                                                                          ;
rts                                    ; 0x57fd $97ED 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Moblins_Spear_X_Velocity_                                      ;
.byt    $28                            ; 0x57fe $97EE 28                       ;
L97EF                                                                          ;
.byt    $D8,$00,$00                    ; 0x57ff $97EF D8 00 00                 ;
; ---------------------------------------------------------------------------- ;
bank1_code15                                                                   ;
ldy      #$05                          ; 0x5802 $97F2 A0 05                    ; Y = 05
L97F4                                                                          ;
lda      $87,y                         ; 0x5804 $97F4 B9 87 00                 ;
beq      L97FD                         ; 0x5807 $97F7 F0 04                    ;
dey                                    ; 0x5809 $97F9 88                       ;
bpl      L97F4                         ; 0x580a $97FA 10 F8                    ; if (Y >= 0) loop to $57F4
rts                                    ; 0x580c $97FC 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L97FD                                                                          ;
sta      $045E,y                       ; 0x580d $97FD 99 5E 04                 ;
lda      #$05                          ; 0x5810 $9800 A9 05                    ; A = 05
sta      $87,y                         ; 0x5812 $9802 99 87 00                 ; Projectile Type
lda      $4E,x                         ; 0x5815 $9805 B5 4E                    ; Enemy X position (low byte)
sty      L0000                         ; 0x5817 $9807 84 00                    ;
ldy      $60,x                         ; 0x5819 $9809 B4 60                    ; facing direction?
adc      L97EF,y                       ; 0x581b $980B 79 EF 97                 ; refer to table at $57EE (offset +1)
ldy      L0000                         ; 0x581e $980E A4 00                    ;
sta      $54,y                         ; 0x5820 $9810 99 54 00                 ;
ldy      $60,x                         ; 0x5823 $9813 B4 60                    ;; Enemy facing direction
lda      $3C,x                         ; 0x5825 $9815 B5 3C                    ; Enemy X position (high byte)
adc      L97EF,y                       ; 0x5827 $9817 79 EF 97                 ; refer to table at $57EE (offset +1)
ldy      L0000                         ; 0x582a $981A A4 00                    ;
sta      $42,y                         ; 0x582c $981C 99 42 00                 ;
lda      $2A,x                         ; 0x582f $981F B5 2A                    ;; Enemy Y Position
adc      #$05                          ; 0x5831 $9821 69 05                    ; relative initial Y position of spears
sta      $30,y                         ; 0x5833 $9823 99 30 00                 ; when leaving Moblin's hand
lda      $1A,x                         ; 0x5836 $9826 B5 1A                    ;
adc      #$00                          ; 0x5838 $9828 69 00                    ;
sta      $20,y                         ; 0x583a $982A 99 20 00                 ;
sty      L0000                         ; 0x583d $982D 84 00                    ;
lda      $60,x                         ; 0x583f $982F B5 60                    ; facing direction?
sta      $66,y                         ; 0x5841 $9831 99 66 00                 ;
tay                                    ; 0x5844 $9834 A8                       ;
lda      L97ED,y                       ; 0x5845 $9835 B9 ED 97                 ; refer to table at $57EE (offset -1)
ldy      L0000                         ; 0x5848 $9838 A4 00                    ;
sta      $77,y                         ; 0x584a $983A 99 77 00                 ;
lda      #$E8                          ; 0x584d $983D A9 E8                    ; Spear's initial Y velocity (D8 - F8)
sta      $0584,y                       ; 0x584f $983F 99 84 05                 ;
lda      $A1,x                         ; 0x5852 $9842 B5 A1                    ; Enemy Code
cmp      #$14                          ; 0x5854 $9844 C9 14                    ; 14 = Orange Moblin
L9847     = * + $0001                                                          ;
bne      L984D                         ; 0x5856 $9846 D0 05                    ; if not 14, skip to $584D (RTS)
lda      #$01                          ; 0x5858 $9848 A9 01                    ; A = 01
sta      $045E,y                       ; 0x585a $984A 99 5E 04                 ; Moblin's Spears Palette
L984D                                                                          ;
rts                                    ; 0x585d $984D 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Init_Routines_Bubble_Rock_BagoBago_Moby_DumbMoblin_Generator       ;
ldy      #$05                          ; 0x585e $984E A0 05                    ; Y = 05
L9850                                                                          ;
cpy      $10                           ; 0x5860 $9850 C4 10                    ;; used as monster x register ;draw boss hp bar
beq      L9860                         ; 0x5862 $9852 F0 0C                    ;
lda      $B6,y                         ; 0x5864 $9854 B9 B6 00                 ; Generated Enemy Slot
beq      L9860                         ; 0x5867 $9857 F0 07                    ;
lda      $A1,y                         ; 0x5869 $9859 B9 A1 00                 ; Enemy Code
cmp      $A1,x                         ; 0x586c $985C D5 A1                    ;; Enemy Code
beq      L9864                         ; 0x586e $985E F0 04                    ;
L9860                                                                          ;
dey                                    ; 0x5870 $9860 88                       ;
bpl      L9850                         ; 0x5871 $9861 10 ED                    ;
rts                                    ; 0x5873 $9863 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9864                                                                          ;
tya                                    ; 0x5874 $9864 98                       ;
tax                                    ; 0x5875 $9865 AA                       ;
jsr      LDD3D                         ; 0x5876 $9866 20 3D DD                 ;
ldx      $10                           ; 0x5879 $9869 A6 10                    ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x587b $986B 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Init_Routines_Geldarm                                              ;
lda      #$01                          ; 0x587c $986C A9 01                    ; A = 1
sta      $AF,x                         ; 0x587e $986E 95 AF                    ;; Various enemy state variables
lsr                                    ; 0x5880 $9870 4A                       ; A >> 0
sta      $60,x                         ; 0x5881 $9871 95 60                    ;; Enemy facing direction
lda      $2A,x                         ; 0x5883 $9873 B5 2A                    ; Enemy Y Position
adc      #$3F                          ; 0x5885 $9875 69 3F                    ;
sta      $81,x                         ; 0x5887 $9877 95 81                    ; Current Animation Frame for Enemy
rts                                    ; 0x5889 $9879 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Megmat                                                         ;
.byt    $08,$F8                        ; 0x588a $987A 08 F8                    ;
L987C                                                                          ;
.byt    $FB,$FC                        ; 0x588c $987C FB FC                    ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Megmat                                                   ;
;08 = X velocity when facing right (8)                                         ;
;F8 = X velocity when facing left (-8)                                         ;
;FB = Y Velocity for high jump (-5)                                            ;
;FC = Y Velocity for low jump (-4)                                             ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x588e $987E 20 02 DA                 ; Enemy Stops when Hit
lda      $A8,x                         ; 0x5891 $9881 B5 A8                    ;; Enemy State
and      #$08                          ; 0x5893 $9883 29 08                    ; keep bits .... x...
beq      L988C                         ; 0x5895 $9885 F0 05                    ;
jsr      LDAC7                         ; 0x5897 $9887 20 C7 DA                 ; Set Enemy Y Velocity to 0
inc      $2A,x                         ; 0x589a $988A F6 2A                    ; Enemy Y Position
L988C                                                                          ;
lda      $A8,x                         ; 0x589c $988C B5 A8                    ;; Enemy State
and      #$03                          ; 0x589e $988E 29 03                    ; keep bits .... ..xx
beq      L9895                         ; 0x58a0 $9890 F0 03                    ;
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0x58a2 $9892 20 EB E8;
L9895                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x58a5 $9895 20 B8 DE               ; Simple Horizontal Movement
lda      $A8,x                         ; 0x58a8 $9898 B5 A8                    ;; Enemy State
and      #$04                          ; 0x58aa $989A 29 04                    ; keep bits .... .x..
beq      L98B2                         ; 0x58ac $989C F0 14                    ;
lda      $051B,x                       ; 0x58ae $989E BD 1B 05                 ; Randomizer
and      #$01                          ; 0x58b1 $98A1 29 01                    ; keep bits .... ...x
tay                                    ; 0x58b3 $98A3 A8                       ;
lda      L987C,y                       ; 0x58b4 $98A4 B9 7C 98                 ; refer to table at $587A (offset +2)
sta      $057E,x                       ; 0x58b7 $98A7 9D 7E 05                 ; Enemy Y Velocity
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x58ba $98AA 20 91 DC; Determine Enemy Facing Direction
lda      bank1_Table_for_Megmat,y      ; 0x58bd $98AD B9 7A 98                 ; refer to table at $587A
sta      $71,x                         ; 0x58c0 $98B0 95 71                    ; Enemy X Velocity
L98B2                                                                          ;
lda      #$30                          ; 0x58c2 $98B2 A9 30                    ; A = 30 (gravity factor while jumping up)
sta      L0000                         ; 0x58c4 $98B4 85 00                    ;
sta      $02                           ; 0x58c6 $98B6 85 02                    ;
jsr      LDECE                         ; 0x58c8 $98B8 20 CE DE                 ;
jsr      LDE3D                         ; 0x58cb $98BB 20 3D DE                 ; Display
jmp      bank7_Link_Collision_Detection; 0x58ce $98BE 4C C1 D6                 ; Link Collision Detection
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Lowder_Fast_Speeds                                             ;
;08 = fast speed when facing right                                             ;
;F8 = fast speed when facing left                                              ;
.byt    $08,$F8                        ; 0x58d1 $98C1 08 F8                    ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Lowder                                                   ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x58d3 $98C3 20 02 DA                 ; Enemy Stops when Hit
jsr      bank7_Link_Collision_Detection; 0x58d6 $98C6 20 C1 D6                 ; Link Collision Detection
jsr      LDE3D                         ; 0x58d9 $98C9 20 3D DE                 ; Display
lda      $71,x                         ; 0x58dc $98CC B5 71                    ; Enemy X Velocity
pha                                    ; 0x58de $98CE 48                       ;
lda      $60,x                         ; 0x58df $98CF B5 60                    ;; Enemy facing direction
pha                                    ; 0x58e1 $98D1 48                       ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x58e2 $98D2 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x58e5 $98D5 68                       ;
sta      $60,x                         ; 0x58e6 $98D6 95 60                    ;; Enemy facing direction
iny                                    ; 0x58e8 $98D8 C8                       ;
tya                                    ; 0x58e9 $98D9 98                       ;
cmp      $60,x                         ; 0x58ea $98DA D5 60                    ;; Enemy facing direction
bne      L98E0                         ; 0x58ec $98DC D0 02                    ;
asl      $71,x                         ; 0x58ee $98DE 16 71                    ; Enemy X Velocity
L98E0                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x58f0 $98E0 20 B8 DE               ; Simple Horizontal Movement
pla                                    ; 0x58f3 $98E3 68                       ;
sta      $71,x                         ; 0x58f4 $98E4 95 71                    ; Enemy X Velocity
lda      $29                           ; 0x58f6 $98E6 A5 29                    ; Link's Y position
clc                                    ; 0x58f8 $98E8 18                       ;
adc      #$10                          ; 0x58f9 $98E9 69 10                    ;
cmp      $2A,x                         ; 0x58fb $98EB D5 2A                    ; check if Lowder is at level with Link's feet
bne      L9901                         ; 0x58fd $98ED D0 12                    ; if not, skip to $5901
lda      $0504,x                       ; 0x58ff $98EF BD 04 05                 ; if reaction timer > 0
bne      L9901                         ; 0x5902 $98F2 D0 0D                    ; skip to $5901
lda      #$A0                          ; 0x5904 $98F4 A9 A0                    ; delay before Lowder rushes towards Link
sta      $0504,x                       ; 0x5906 $98F6 9D 04 05                 ;; Timer for Enemy
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x5909 $98F9 20 91 DC; Determine Enemy Facing Direction
lda      bank1_Table_for_Lowder_Fast_Speeds,y; 0x590c $98FC B9 C1 98           ; refer to table at $58C1
sta      $71,x                         ; 0x590f $98FF 95 71                    ; Enemy X Velocity
L9901                                                                          ;
lda      $A8,x                         ; 0x5911 $9901 B5 A8                    ;; Enemy State
and      #$04                          ; 0x5913 $9903 29 04                    ; keep bits .... .x..
beq      L9910                         ; 0x5915 $9905 F0 09                    ;
jsr      bank7_Floor_Y_Position        ; 0x5917 $9907 20 C1 DA                 ; Floor Enemy Y Position
lda      $A8,x                         ; 0x591a $990A B5 A8                    ;; Enemy State
and      #$03                          ; 0x591c $990C 29 03                    ; keep bits .... ..xx
beq      L992A                         ; 0x591e $990E F0 1A                    ;
L9910                                                                          ;
lda      $81,x                         ; 0x5920 $9910 B5 81                    ;; Current Animation Frame for Enemys
beq      L991F                         ; 0x5922 $9912 F0 0B                    ;
lda      #$20                          ; 0x5924 $9914 A9 20                    ; A = 20
sta      L0000                         ; 0x5926 $9916 85 00                    ;
lda      #$03                          ; 0x5928 $9918 A9 03                    ; A = 03
sta      $02                           ; 0x592a $991A 85 02                    ;
jmp      LDECE                         ; 0x592c $991C 4C CE DE                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L991F                                                                          ;
inc      $81,x                         ; 0x592f $991F F6 81                    ;; Current Animation Frame for Enemys
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0x5931 $9921 20 EB E8;
L9925     = * + $0001                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x5934 $9924 20 B8 DE               ; Simple Horizontal Movement
jmp      bank7_Simple_Horizontal_Movement; 0x5937 $9927 4C B8 DE               ; Simple Horizontal Movement
                                                                               ;
; ---------------------------------------------------------------------------- ;
L992A                                                                          ;
sta      $81,x                         ; 0x593a $992A 95 81                    ;; Current Animation Frame for Enemys
L992C                                                                          ;
rts                                    ; 0x593c $992C 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Dumb_Moblin_X_Velocity                                         ;
.byt    $10,$F0                        ; 0x593d $992D 10 F0                    ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Dumb_Moblin_Generator                                    ;
lda      L05C9                         ; 0x593f $992F AD C9 05                 ;
bne      L994E                         ; 0x5942 $9932 D0 1A                    ;
jsr      bank1_Enemy_Routines1_Generators; 0x5944 $9934 20 31 9B               ;
bcs      L994E                         ; 0x5947 $9937 B0 15                    ;
ldx      L0000                         ; 0x5949 $9939 A6 00                    ;
dec      $C2,x                         ; 0x594b $993B D6 C2                    ; Enemy health - 1
lda      #$22                          ; 0x594d $993D A9 22                    ; 22 = Dumb Moblin
sta      $A1,x                         ; 0x594f $993F 95 A1                    ; Dumb Moblin spawned
ldy      $60,x                         ; 0x5951 $9941 B4 60                    ;; Enemy facing direction
lda      L992C,y                       ; 0x5953 $9943 B9 2C 99                 ; refer to table at $592D (offset -1)
sta      $71,x                         ; 0x5956 $9946 95 71                    ; Enemy X Velocity
lda      #$A0                          ; 0x5958 $9948 A9 A0                    ; A = A0
sta      $2A,x                         ; 0x595a $994A 95 2A                    ; Initial Y position
ldx      $10                           ; 0x595c $994C A6 10                    ;; used as monster x register ;draw boss hp bar
L994E                                                                          ;
rts                                    ; 0x595e $994E 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Dumb_Moblin                                              ;
lda      #$08                          ; 0x595f $994F A9 08                    ; A = 08 (Dumb Moblin spear tile offset ?)
sta      $0504,x                       ; 0x5961 $9951 9D 04 05                 ;; Timer for Enemy
jsr      bank7_Enemy_Stops_when_Hit    ; 0x5964 $9954 20 02 DA                 ; Enemy Stops when Hit
jsr      LDE3D                         ; 0x5967 $9957 20 3D DE                 ;
jsr      LE563                         ; 0x596a $995A 20 63 E5                 ;
jsr      bank7_Link_Collision_Detection; 0x596d $995D 20 C1 D6                 ; Link Collision Detection
jsr      L9B22                         ; 0x5970 $9960 20 22 9B                 ;
jsr      bank7_Gravity                 ; 0x5973 $9963 20 BE DE                 ; Gravity
lda      $A8,x                         ; 0x5976 $9966 B5 A8                    ;; Enemy State
and      #$04                          ; 0x5978 $9968 29 04                    ; keep bits .... .x..
beq      L996F                         ; 0x597a $996A F0 03                    ;
jmp      bank7_Floor_Y_Position        ; 0x597c $996C 4C C1 DA                 ; Floor Enemy Y Position
                                                                               ;
; ---------------------------------------------------------------------------- ;
L996F                                                                          ;
rts                                    ; 0x597f $996F 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Goriya                                                         ;
;10 = initial relative Y position for low throw                                ;
;00 = initial relative Y position for high throw                               ;
.byt    $10,$00                        ; 0x5980 $9970 10 00                    ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Goriya                                                   ;
lda      $81,x                         ; 0x5982 $9972 B5 81                    ;; Current Animation Frame for Enemys
beq      L99EB                         ; 0x5984 $9974 F0 75                    ;
and      #$01                          ; 0x5986 $9976 29 01                    ; keep bits .... ...x
bne      L9980                         ; 0x5988 $9978 D0 06                    ; if 1, skip to $5980
jsr      bank7_Display                 ; 0x598a $997A 20 11 EF                 ;
jsr      bank7_code39                  ; 0x598d $997D 20 58 E5                 ;
L9980                                                                          ;
lda      $0504,x                       ; 0x5990 $9980 BD 04 05                 ;; Timer for Enemy
bne      L99EB                         ; 0x5993 $9983 D0 66                    ;
lda      $A1,x                         ; 0x5995 $9985 B5 A1                    ; Enemy Code
cmp      #$19                          ; 0x5997 $9987 C9 19                    ; 19 = Orange Goriya
bcc      L99C9                         ; 0x5999 $9989 90 3E                    ;
jsr      bank7_Spawn_New_Projectile    ; 0x599b $998B 20 CE DB                 ;
bcs      L99C6                         ; 0x599e $998E B0 36                    ;
txa                                    ; 0x59a0 $9990 8A                       ;
sta      $045E,y                       ; 0x59a1 $9991 99 5E 04                 ;
lda      $66,y                         ; 0x59a4 $9994 B9 66 00                 ;
sta      $0452,y                       ; 0x59a7 $9997 99 52 04                 ;
lda      $81,x                         ; 0x59aa $999A B5 81                    ;; Current Animation Frame for Enemys
lsr                                    ; 0x59ac $999C 4A                       ;
sta      $0458,y                       ; 0x59ad $999D 99 58 04                 ;
tax                                    ; 0x59b0 $99A0 AA                       ;
lda      bank1_Table_for_Goriya,x      ; 0x59b1 $99A1 BD 70 99                 ; refer to table at $5970
ldx      $10                           ; 0x59b4 $99A4 A6 10                    ;; used as monster x register ;draw boss hp bar
adc      $2A,x                         ; 0x59b6 $99A6 75 2A                    ; add Goriya's Y position
sta      $30,y                         ; 0x59b8 $99A8 99 30 00                 ; Projectile Y Position
lda      $051B,x                       ; 0x59bb $99AB BD 1B 05                 ; Randomizer
and      #$10                          ; 0x59be $99AE 29 10                    ; keep bits ...x ....
ldx      $0458,y                       ; 0x59c0 $99B0 BE 58 04                 ;
beq      L99B7                         ; 0x59c3 $99B3 F0 02                    ;
lda      #$F0                          ; 0x59c5 $99B5 A9 F0                    ; A = F0 (initial Y velocity of boomerangs)
L99B7                                                                          ;
sta      $0584,y                       ; 0x59c7 $99B7 99 84 05                 ;
ldx      $10                           ; 0x59ca $99BA A6 10                    ;; used as monster x register ;draw boss hp bar
lda      #$20                          ; 0x59cc $99BC A9 20                    ; (X distance for boomerang start coming back)
sta      $044C,y                       ; 0x59ce $99BE 99 4C 04                 ;
lda      #$06                          ; 0x59d1 $99C1 A9 06                    ; Projectile Type
sta      $87,y                         ; 0x59d3 $99C3 99 87 00                 ;
L99C6                                                                          ;
jmp      L99EE                         ; 0x59d6 $99C6 4C EE 99                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L99C9                                                                          ;
inc      $81,x                         ; 0x59d9 $99C9 F6 81                    ;; Current Animation Frame for Enemys
lda      $81,x                         ; 0x59db $99CB B5 81                    ;; Current Animation Frame for Enemys
cmp      #$03                          ; 0x59dd $99CD C9 03                    ; if (A == 03)
beq      L99EE                         ; 0x59df $99CF F0 1D                    ; skip to 59EE
cmp      #$05                          ; 0x59e1 $99D1 C9 05                    ;
bcs      L99EE                         ; 0x59e3 $99D3 B0 19                    ;
cmp      #$04                          ; 0x59e5 $99D5 C9 04                    ;
bne      L99E6                         ; 0x59e7 $99D7 D0 0D                    ;
lda      $A1,x                         ; 0x59e9 $99D9 B5 A1                    ; Enemy Code
cmp      #$15                          ; 0x59eb $99DB C9 15                    ; 15 = Red Moblin
beq      L99E6                         ; 0x59ed $99DD F0 07                    ;
jsr      bank1_code15                  ; 0x59ef $99DF 20 F2 97                 ; goto $57F2
lda      #$05                          ; 0x59f2 $99E2 A9 05                    ; A = 05
sta      $81,x                         ; 0x59f4 $99E4 95 81                    ;; Current Animation Frame for Enemys
L99E6                                                                          ;
lda      #$10                          ; 0x59f6 $99E6 A9 10                    ; A = 10
sta      $0504,x                       ; 0x59f8 $99E8 9D 04 05                 ;; Timer for Enemy
L99EB                                                                          ;
jmp      L99F2                         ; 0x59fb $99EB 4C F2 99                 ; goto $59F2
                                                                               ;
; ---------------------------------------------------------------------------- ;
L99EE                                                                          ;
L99EF     = * + $0001                                                          ;
lda      #$00                          ; 0x59fe $99EE A9 00                    ; A = 00
sta      $81,x                         ; 0x5a00 $99F0 95 81                    ;; Current Animation Frame for Enemys
L99F2                                                                          ;
lda      #$16                          ; 0x5a02 $99F2 A9 16                    ; A = 16 (distance to keep from Link)
ldy      $A1,x                         ; 0x5a04 $99F4 B4 A1                    ; Enemy Code
L99F7     = * + $0001                                                          ;
cpy      #$14                          ; 0x5a06 $99F6 C0 14                    ; 14 = Orange Moblin
beq      L99FE                         ; 0x5a08 $99F8 F0 04                    ;
cpy      #$19                          ; 0x5a0a $99FA C0 19                    ; 19 = Orange Goriya
bcc      L9A00                         ; 0x5a0c $99FC 90 02                    ;
L99FE                                                                          ;
lda      #$60                          ; 0x5a0e $99FE A9 60                    ; A = 60
L9A00                                                                          ;
jmp      L9A22                         ; 0x5a10 $9A00 4C 22 9A                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_table9                                                                   ;
.byt    $03                            ; 0x5a13 $9A03 03                       ;
L9A04                                                                          ;
.byt    $01,$01,$03,$07,$0F,$07,$03,$3F; 0x5a14 $9A04 01 01 03 07 0F 07 03 3F  ;
.byt    $3F,$1F,$3F,$3F,$7F,$3F,$3F    ; 0x5a1c $9A0C 3F 1F 3F 3F 7F 3F 3F     ;
L9A13                                                                          ;
.byt    $08,$F8                        ; 0x5a23 $9A13 08 F8                    ;
;Tables for enemies with footwork : Moblin, Daira, Goriya                      ;
;08 = approaching speed, facing right                                          ;
;F8 = approaching speed, facing left                                           ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Daira                                                    ;
jsr      bank1_code20                  ; 0x5a25 $9A15 20 D1 9A                 ;
lda      #$1E                          ; 0x5a28 $9A18 A9 1E                    ; distance Orange Daira tries to keep from Link
ldy      $A1,x                         ; 0x5a2a $9A1A B4 A1                    ; Enemy Code
cpy      #$18                          ; 0x5a2c $9A1C C0 18                    ; 18 = Red Daira
bne      L9A22                         ; 0x5a2e $9A1E D0 02                    ;
lda      #$37                          ; 0x5a30 $9A20 A9 37                    ; distance Red Daira tries to keep from Link
L9A22                                                                          ;
sta      $05E5                         ; 0x5a32 $9A22 8D E5 05                 ; store distance (Orange or Red)
asl                                    ; 0x5a35 $9A25 0A                       ; A * 2
sta      $05E6                         ; 0x5a36 $9A26 8D E6 05                 ; Daira back off speed value (?)
jsr      LDE3D                         ; 0x5a39 $9A29 20 3D DE                 ;
jsr      bank7_Link_Collision_Detection; 0x5a3c $9A2C 20 C1 D6                 ;
jsr      bank7_Gravity                 ; 0x5a3f $9A2F 20 BE DE                 ;
lda      $A8,x                         ; 0x5a42 $9A32 B5 A8                    ;; Enemy State
and      #$04                          ; 0x5a44 $9A34 29 04                    ; keep bits .... .x..
beq      L9A3B                         ; 0x5a46 $9A36 F0 03                    ;
jsr      bank7_Floor_Y_Position        ; 0x5a48 $9A38 20 C1 DA                 ; Floor Enemy Y Position
L9A3B                                                                          ;
jsr      L9B0A                         ; 0x5a4b $9A3B 20 0A 9B                 ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x5a4e $9A3E 20 91 DC; Determine Enemy Facing Direction
lda      $0F                           ; 0x5a51 $9A41 A5 0F                    ;
clc                                    ; 0x5a53 $9A43 18                       ;
L9A46     = * + $0002                                                          ;
adc      $05E5                         ; 0x5a54 $9A44 6D E5 05                 ;
cmp      $05E6                         ; 0x5a57 $9A47 CD E6 05                 ;
bcc      L9A6B                         ; 0x5a5a $9A4A 90 1F                    ;
lda      $0F                           ; 0x5a5c $9A4C A5 0F                    ;
adc      #$50                          ; 0x5a5e $9A4E 69 50                    ;
cmp      #$A0                          ; 0x5a60 $9A50 C9 A0                    ;
bcs      L9A64                         ; 0x5a62 $9A52 B0 10                    ;
lda      $A1,x                         ; 0x5a64 $9A54 B5 A1                    ; Enemy Code
cmp      #$18                          ; 0x5a66 $9A56 C9 18                    ; 18 = Red Daira
bcs      L9A61                         ; 0x5a68 $9A58 B0 07                    ;
lda      $81,x                         ; 0x5a6a $9A5A B5 81                    ;; Current Animation Frame for Enemys
bne      L9A61                         ; 0x5a6c $9A5C D0 03                    ;
jsr      L9A82                         ; 0x5a6e $9A5E 20 82 9A                 ;
L9A61                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x5a71 $9A61 20 91 DC; Determine Enemy Facing Direction
L9A64                                                                          ;
lda      L9A13,y                       ; 0x5a74 $9A64 B9 13 9A                 ; refer to table at $5A13
asl                                    ; 0x5a77 $9A67 0A                       ;
sta      $71,x                         ; 0x5a78 $9A68 95 71                    ; Enemy X Velocity
rts                                    ; 0x5a7a $9A6A 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A6B                                                                          ;
ldy      $A1,x                         ; 0x5a7b $9A6B B4 A1                    ; Enemy Code
lda      L99F7,y                       ; 0x5a7d $9A6D B9 F7 99                 ; refer to table at $5A0E (+17 +18)
inc      $AF,x                         ; 0x5a80 $9A70 F6 AF                    ;; Various enemy state variables
and      $AF,x                         ; 0x5a82 $9A72 35 AF                    ;; Various enemy state variables
bne      L9AAB                         ; 0x5a84 $9A74 D0 35                    ;
lda      $051B,x                       ; 0x5a86 $9A76 BD 1B 05                 ; Randomizer
and      L99EF,y                       ; 0x5a89 $9A79 39 EF 99                 ; refer to table at $5A06 (+17 +18)
bne      L9A82                         ; 0x5a8c $9A7C D0 04                    ;
lda      #$E0                          ; 0x5a8e $9A7E A9 E0                    ; A = E0
sta      $AF,x                         ; 0x5a90 $9A80 95 AF                    ;; Various enemy state variables
L9A82                                                                          ;
ldy      #$01                          ; 0x5a92 $9A82 A0 01                    ; Y = 01
lda      $A1,x                         ; 0x5a94 $9A84 B5 A1                    ; Enemy Code
cmp      #$14                          ; 0x5a96 $9A86 C9 14                    ; 14 = Orange Moblin
beq      L9AA2                         ; 0x5a98 $9A88 F0 18                    ;
cmp      #$17                          ; 0x5a9a $9A8A C9 17                    ; 17 = Orange Daira
beq      L9AA4                         ; 0x5a9c $9A8C F0 16                    ;
cmp      #$18                          ; 0x5a9e $9A8E C9 18                    ; 18 = Red Daira
beq      L9AA4                         ; 0x5aa0 $9A90 F0 12                    ;
lda      $051B,x                       ; 0x5aa2 $9A92 BD 1B 05                 ; Randomizer
lsr                                    ; 0x5aa5 $9A95 4A                       ;
bcs      L9A9E                         ; 0x5aa6 $9A96 B0 06                    ;
and      #$02                          ; 0x5aa8 $9A98 29 02                    ; keep bits .... ..x.
tay                                    ; 0x5aaa $9A9A A8                       ;
iny                                    ; 0x5aab $9A9B C8                       ;
bne      L9AA4                         ; 0x5aac $9A9C D0 06                    ;
L9A9E                                                                          ;
lda      $17                           ; 0x5aae $9A9E A5 17                    ; Link's shield position
bne      L9AA4                         ; 0x5ab0 $9AA0 D0 02                    ;
L9AA2                                                                          ;
iny                                    ; 0x5ab2 $9AA2 C8                       ;
iny                                    ; 0x5ab3 $9AA3 C8                       ;
L9AA4                                                                          ;
sty      $81,x                         ; 0x5ab4 $9AA4 94 81                    ;; Current Animation Frame for Enemys
lda      #$18                          ; 0x5ab6 $9AA6 A9 18                    ; A = 18
sta      $0504,x                       ; 0x5ab8 $9AA8 9D 04 05                 ; delay between axe is back and throw
L9AAB                                                                          ;
lda      #$00                          ; 0x5abb $9AAB A9 00                    ; A = 00
sta      $71,x                         ; 0x5abd $9AAD 95 71                    ; Enemy X Velocity
lda      $A7                           ; 0x5abf $9AAF A5 A7                    ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$03                          ; 0x5ac1 $9AB1 29 03                    ; keep bits .... ..xx
bne      L9ACE                         ; 0x5ac3 $9AB3 D0 19                    ;
lda      $0742                         ; 0x5ac5 $9AB5 AD 42 07                 ; Left/Right buttons held
L9AB8                                                                          ;
beq      L9ABE                         ; 0x5ac8 $9AB8 F0 04                    ;
lda      $70                           ; 0x5aca $9ABA A5 70                    ; Link's X Velocity
bne      L9AC9                         ; 0x5acc $9ABC D0 0B                    ;
L9ABE                                                                          ;
ldy      #$04                          ; 0x5ace $9ABE A0 04                    ; Y = 04 (0000 0100)
lda      $12                           ; 0x5ad0 $9AC0 A5 12                    ;; Frame Counter (ascending)
and      #$40                          ; 0x5ad2 $9AC2 29 40                    ; keep bits .x.. ....
bne      L9AC8                         ; 0x5ad4 $9AC4 D0 02                    ;
ldy      #$FC                          ; 0x5ad6 $9AC6 A0 FC                    ; Y = FC (1111 1100) (-4)
L9AC8                                                                          ;
tya                                    ; 0x5ad8 $9AC8 98                       ;
L9AC9                                                                          ;
sta      $71,x                         ; 0x5ad9 $9AC9 95 71                    ; Enemy X Velocity
asl                                    ; 0x5adb $9ACB 0A                       ;
ror      $71,x                         ; 0x5adc $9ACC 76 71                    ;; Enemy X Velocity
L9ACE                                                                          ;
rts                                    ; 0x5ade $9ACE 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Daira                                                          ;
.byt    $04,$03                        ; 0x5adf $9ACF 04 03                    ;Table for Daira (Orange, Red)
; ---------------------------------------------------------------------------- ;
bank1_code20                                                                   ;
lda      $81,x                         ; 0x5ae1 $9AD1 B5 81                    ;; Current Animation Frame for Enemys
beq      L9B04                         ; 0x5ae3 $9AD3 F0 2F                    ;
lda      $0504,x                       ; 0x5ae5 $9AD5 BD 04 05                 ;; Timer for Enemy
bne      L9B04                         ; 0x5ae8 $9AD8 D0 2A                    ;
inc      $81,x                         ; 0x5aea $9ADA F6 81                    ;; Current Animation Frame for Enemys
ldy      $A1,x                         ; 0x5aec $9ADC B4 A1                    ; Enemy Code
lda      $81,x                         ; 0x5aee $9ADE B5 81                    ;; Current Animation Frame for Enemys
cmp      L9AB8,y                       ; 0x5af0 $9AE0 D9 B8 9A                 ; refer to table at $5ACF (+17 +18)
beq      L9B05                         ; 0x5af3 $9AE3 F0 20                    ;
cmp      #$02                          ; 0x5af5 $9AE5 C9 02                    ;
bne      L9AFF                         ; 0x5af7 $9AE7 D0 16                    ;
jsr      bank7_Display                 ; 0x5af9 $9AE9 20 11 EF                 ;
jsr      bank7_code39                  ; 0x5afc $9AEC 20 58 E5                 ;
lda      $A1,x                         ; 0x5aff $9AEF B5 A1                    ; Enemy Code
cmp      #$18                          ; 0x5b01 $9AF1 C9 18                    ; 18 = Red Daira
bne      L9AFF                         ; 0x5b03 $9AF3 D0 0A                    ;
jsr      bank7_Spawn_New_Projectile    ; 0x5b05 $9AF5 20 CE DB                 ; Spawn New Projectile
bcs      L9AFF                         ; 0x5b08 $9AF8 B0 05                    ;
lda      #$07                          ; 0x5b0a $9AFA A9 07                    ; A = 07 (07 = axe)
sta      $87,y                         ; 0x5b0c $9AFC 99 87 00                 ;
L9AFF                                                                          ;
lda      #$05                          ; 0x5b0f $9AFF A9 05                    ; A = 05 (delay when axe is up and forward)
sta      $0504,x                       ; 0x5b11 $9B01 9D 04 05                 ;; Timer for Enemy
L9B04                                                                          ;
rts                                    ; 0x5b14 $9B04 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B05                                                                          ;
lda      #$00                          ; 0x5b15 $9B05 A9 00                    ; A = 00
sta      $81,x                         ; 0x5b17 $9B07 95 81                    ;; Current Animation Frame for Enemys
rts                                    ; 0x5b19 $9B09 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B0A                                                                          ;
lda      $043E,x                       ; 0x5b1a $9B0A BD 3E 04                 ;
beq      L9B1E                         ; 0x5b1d $9B0D F0 0F                    ;
dec      $043E,x                       ; 0x5b1f $9B0F DE 3E 04                 ;
bpl      L9B1A                         ; 0x5b22 $9B12 10 06                    ;
inc      $043E,x                       ; 0x5b24 $9B14 FE 3E 04                 ;
inc      $043E,x                       ; 0x5b27 $9B17 FE 3E 04                 ;
L9B1A                                                                          ;
sta      $71,x                         ; 0x5b2a $9B1A 95 71                    ; Enemy X Velocity
pla                                    ; 0x5b2c $9B1C 68                       ;
pla                                    ; 0x5b2d $9B1D 68                       ;
L9B1E                                                                          ;
jmp      L9B22                         ; 0x5b2e $9B1E 4C 22 9B                 ; skip to $5B22
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B21                                                                          ;
rts                                    ; 0x5b31 $9B21 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B22                                                                          ;
lda      $A8,x                         ; 0x5b32 $9B22 B5 A8                    ;; Enemy State
and      #$03                          ; 0x5b34 $9B24 29 03                    ; keep bits .... ..xx
bne      L9B21                         ; 0x5b36 $9B26 D0 F9                    ;
L9B2A     = * + $0002                                                          ;
jmp      bank7_Simple_Horizontal_Movement; 0x5b38 $9B28 4C B8 DE               ; Simple Horizontal Movement
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Moby                                                           ;
;20 = X Velocity when facing right                                             ;
;E0 = X Velocity when facing left                                              ;
;30 = distance from left side of the screen, facing right                      ;
;D0 = distance from right side of the screen, facing left                      ;
.byt    $20,$E0                        ; 0x5b3b $9B2B 20 E0                    ;
L9B2D                                                                          ;
.byt    $30,$D0,$00,$F8                ; 0x5b3d $9B2D 30 D0 00 F8              ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Generators                                               ;
lda      $12                           ; 0x5b41 $9B31 A5 12                    ;; Frame Counter (ascending)
and      #$7F                          ; 0x5b43 $9B33 29 7F                    ; keep bits .xxx xxxx
bne      L9B44                         ; 0x5b45 $9B35 D0 0D                    ;
lda      $A1,x                         ; 0x5b47 $9B37 B5 A1                    ; Enemy Code
sta      $0D                           ; 0x5b49 $9B39 85 0D                    ;
ldx      #$05                          ; 0x5b4b $9B3B A2 05                    ; X = 05
L9B3D                                                                          ;
lda      $B6,x                         ; 0x5b4d $9B3D B5 B6                    ; Generated Enemy Slot
beq      L9B48                         ; 0x5b4f $9B3F F0 07                    ; if 0, goto Moby init routine
dex                                    ; 0x5b51 $9B41 CA                       ;
bpl      L9B3D                         ; 0x5b52 $9B42 10 F9                    ; if (X >= 0) loop to $5B3D
L9B44                                                                          ;
ldx      $10                           ; 0x5b54 $9B44 A6 10                    ;; used as monster x register ;draw boss hp bar
sec                                    ; 0x5b56 $9B46 38                       ;
rts                                    ; 0x5b57 $9B47 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B48                                                                          ;
inc      $B6,x                         ; 0x5b58 $9B48 F6 B6                    ;; Generated Enemy Slot
lda      #$FF                          ; 0x5b5a $9B4A A9 FF                    ; A = FF
sta       !$BC,x                       ; 0x5b5c $9B4C 9D BC 00                 ;
lda      #$03                          ; 0x5b5f $9B4F A9 03                    ; A = 03
sta       !$C2,x                       ; 0x5b61 $9B51 9D C2 00                 ; Enemy Current HP
lda      #$1E                          ; 0x5b64 $9B54 A9 1E                    ; 1E = Moby
sta      $A1,x                         ; 0x5b66 $9B56 95 A1                    ; Moby assigned to slot #X
lda      $051B,x                       ; 0x5b68 $9B58 BD 1B 05                 ; Randomizer
and      #$01                          ; 0x5b6b $9B5B 29 01                    ; keep bits .... ...x
tay                                    ; 0x5b6d $9B5D A8                       ;
lda      $0D                           ; 0x5b6e $9B5E A5 0D                    ;
cmp      #$21                          ; 0x5b70 $9B60 C9 21                    ; 21 = Moblin Generator
bne      L9B66                         ; 0x5b72 $9B62 D0 02                    ;
iny                                    ; 0x5b74 $9B64 C8                       ;
iny                                    ; 0x5b75 $9B65 C8                       ;
L9B66                                                                          ;
lda      $072C                         ; 0x5b76 $9B66 AD 2C 07                 ; Scrolling Offset Low Byte
adc      L9B2D,y                       ; 0x5b79 $9B69 79 2D 9B                 ; refer to table at $5B2B (offset +2)
sta      $4E,x                         ; 0x5b7c $9B6C 95 4E                    ; Enemy X position (low byte)
lda      $072A                         ; 0x5b7e $9B6E AD 2A 07                 ; Scrolling Offset High Byte
adc      #$00                          ; 0x5b81 $9B71 69 00                    ;
sta      $3C,x                         ; 0x5b83 $9B73 95 3C                    ; Enemy X position (high byte)
lda      #$20                          ; 0x5b85 $9B75 A9 20                    ; Moby starting Y position
sta      $2A,x                         ; 0x5b87 $9B77 95 2A                    ; ALSO Y velocity when flying down
sta      $057E,x                       ; 0x5b89 $9B79 9D 7E 05                 ; Enemy Y Velocity
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x5b8c $9B7C 20 91 DC; Determine Enemy Facing Direction
lda      #$01                          ; 0x5b8f $9B7F A9 01                    ; A = 01
sta      $1A,x                         ; 0x5b91 $9B81 95 1A                    ;
lsr                                    ; 0x5b93 $9B83 4A                       ; A >> 0
L9B86     = * + $0002                                                          ;
sta      $040E,x                       ; 0x5b94 $9B84 9D 0E 04                 ; Enemy Hit State
sta      $AF,x                         ; 0x5b97 $9B87 95 AF                    ;; Various enemy state variables
sta      $71,x                         ; 0x5b99 $9B89 95 71                    ; Enemy X Velocity
sta      $0444,x                       ; 0x5b9b $9B8B 9D 44 04                 ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
stx      $00                           ; 0x5b9e $9B8E 86 00                    ;
ldx      $10                           ; 0x5ba0 $9B90 A6 10                    ;; used as monster x register ;draw boss hp bar
clc                                    ; 0x5ba2 $9B92 18                       ;
rts                                    ; 0x5ba3 $9B93 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Moby                                                     ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x5ba4 $9B94 20 02 DA                 ; Enemy Stops when Hit
lda      $2A,x                         ; 0x5ba7 $9B97 B5 2A                    ; Enemy Y position
cmp      $29                           ; 0x5ba9 $9B99 C5 29                    ; Link  Y position
bcc      L9BA7                         ; 0x5bab $9B9B 90 0A                    ;
ldy      $60,x                         ; 0x5bad $9B9D B4 60                    ; Moby facing direction ?
lda      L9B2A,y                       ; 0x5baf $9B9F B9 2A 9B                 ; refer to table at $5B2B (offset +1)
sta      $71,x                         ; 0x5bb2 $9BA2 95 71                    ; Enemy X velocity
jsr      LDAC7                         ; 0x5bb4 $9BA4 20 C7 DA                 ; Set Enemy Y Velocity to 0
L9BA7                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x5bb7 $9BA7 20 C8 DE                 ; Simple Vertical Movement
jsr      bank7_Simple_Horizontal_Movement; 0x5bba $9BAA 20 B8 DE               ; Simple Horizontal Movement
jsr      LDE40                         ; 0x5bbd $9BAD 20 40 DE                 ;
jmp      bank7_Link_Collision_Detection; 0x5bc0 $9BB0 4C C1 D6                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Geldarm                                                        ;
.byt    $FF,$01                        ; 0x5bc3 $9BB3 FF 01                    ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines1_Geldarm                                                  ;
lda      $AF,x                         ; 0x5bc5 $9BB5 B5 AF                    ; 0 = stretching/shrinking, 1 = idle
bne      L9BEE                         ; 0x5bc7 $9BB7 D0 35                    ; if not 0, skip to $5BEE
ldy      $60,x                         ; 0x5bc9 $9BB9 B4 60                    ;; Enemy facing direction
bne      L9BCA                         ; 0x5bcb $9BBB D0 0D                    ;
lda      $2A,x                         ; 0x5bcd $9BBD B5 2A                    ; Enemy Y position
clc                                    ; 0x5bcf $9BBF 18                       ;
adc      bank1_Table_for_Geldarm,y     ; 0x5bd0 $9BC0 79 B3 9B                 ;
sta      $2A,x                         ; 0x5bd3 $9BC3 95 2A                    ;; Enemy Y Position
lda      $0504,x                       ; 0x5bd5 $9BC5 BD 04 05                 ;; Timer for Enemy
bne      L9C35                         ; 0x5bd8 $9BC8 D0 6B                    ;
L9BCA                                                                          ;
L9BCB     = * + $0001                                                          ;
lda      $2A,x                         ; 0x5bda $9BCA B5 2A                    ;; Enemy Y Position
clc                                    ; 0x5bdc $9BCC 18                       ;
adc      bank1_Table_for_Geldarm,y     ; 0x5bdd $9BCD 79 B3 9B                 ; add FF (-1) or 01 (1)
sta      $2A,x                         ; 0x5be0 $9BD0 95 2A                    ;; Enemy Y Position
lda      #$05                          ; 0x5be2 $9BD2 A9 05                    ; A = 05
sta      $0504,x                       ; 0x5be4 $9BD4 9D 04 05                 ; coefficient of restretching speed (0 = fast)
lda      $81,x                         ; 0x5be7 $9BD7 B5 81                    ;; Current Animation Frame for Enemys
sec                                    ; 0x5be9 $9BD9 38                       ;
sbc      $2A,x                         ; 0x5bea $9BDA F5 2A                    ;; Enemy Y Position
bne      L9BE6                         ; 0x5bec $9BDC D0 08                    ;
lda      #$80                          ; 0x5bee $9BDE A9 80                    ; A = 80 (delay before restretching)
sta      $0504,x                       ; 0x5bf0 $9BE0 9D 04 05                 ;; Timer for Enemy
jmp      L9C2C                         ; 0x5bf3 $9BE3 4C 2C 9C                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BE6                                                                          ;
cmp      #$40                          ; 0x5bf6 $9BE6 C9 40                    ; shrink to this height (8 tiles)
bne      L9C3D                         ; 0x5bf8 $9BE8 D0 53                    ;
lda      #$01                          ; 0x5bfa $9BEA A9 01                    ; A = 01
sta      $AF,x                         ; 0x5bfc $9BEC 95 AF                    ; 01 = Geldarm is not moving
L9BEE                                                                          ;
lda      $C9                           ; 0x5bfe $9BEE A5 C9                    ;
bne      L9C3D                         ; 0x5c00 $9BF0 D0 4B                    ;
lda      $2A,x                         ; 0x5c02 $9BF2 B5 2A                    ;; Enemy Y Position
adc      #$08                          ; 0x5c04 $9BF4 69 08                    ; 08 -> 04 : Geldarm's foot invulnerable
sta      $05                           ; 0x5c06 $9BF6 85 05                    ;
lda      $81,x                         ; 0x5c08 $9BF8 B5 81                    ;; Current Animation Frame for Enemys
sec                                    ; 0x5c0a $9BFA 38                       ;
sbc      $2A,x                         ; 0x5c0b $9BFB F5 2A                    ;; Enemy Y Position
sta      $07                           ; 0x5c0d $9BFD 85 07                    ;
lda      $CD                           ; 0x5c0f $9BFF A5 CD                    ;
sta      $04                           ; 0x5c11 $9C01 85 04                    ;
lda      #$08                          ; 0x5c13 $9C03 A9 08                    ; Geldarm's hit detection on right side
sta      $06                           ; 0x5c15 $9C05 85 06                    ;
jsr      bank7_code44                  ; 0x5c17 $9C07 20 A2 E9                 ; sword hit detection on body
jsr      bank7_idem__maybe             ; 0x5c1a $9C0A 20 F9 E9                 ; idem?
bcc      L9C1E                         ; 0x5c1d $9C0D 90 0F                    ;
lda      #$00                          ; 0x5c1f $9C0F A9 00                    ; A = 00
sta      $AF,x                         ; 0x5c21 $9C11 95 AF                    ;; Various enemy state variables
lda      #$01                          ; 0x5c23 $9C13 A9 01                    ; A = 01
sta      $0504,x                       ; 0x5c25 $9C15 9D 04 05                 ;; Timer for Enemy
lda      #$10                          ; 0x5c28 $9C18 A9 10                    ; A = 10
sta      $ED                           ; 0x5c2a $9C1A 85 ED                    ; sound effect for Geldarm's body hit
bne      L9C2C                         ; 0x5c2c $9C1C D0 0E                    ;
L9C1E                                                                          ;
jsr      bank7_code43                  ; 0x5c2e $9C1E 20 75 E9                 ;
jsr      bank7_idem__maybe             ; 0x5c31 $9C21 20 F9 E9                 ;
bcc      L9C29                         ; 0x5c34 $9C24 90 03                    ;
jsr      bank7_Link_Hit_Routine        ; 0x5c36 $9C26 20 EF E2                 ; Link Hit Routine
L9C29                                                                          ;
jmp      L9C3D                         ; 0x5c39 $9C29 4C 3D 9C                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C2C                                                                          ;
lda      $60,x                         ; 0x5c3c $9C2C B5 60                    ;; Enemy facing direction
eor      #$01                          ; 0x5c3e $9C2E 49 01                    ; flip bits .... ...x
sta      $60,x                         ; 0x5c40 $9C30 95 60                    ;; Enemy facing direction
jmp      L9C3D                         ; 0x5c42 $9C32 4C 3D 9C                 ; goto $5C3D
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C35                                                                          ;
lda      $2A,x                         ; 0x5c45 $9C35 B5 2A                    ;; Enemy Y Position
sec                                    ; 0x5c47 $9C37 38                       ;
sbc      bank1_Table_for_Geldarm,y     ; 0x5c48 $9C38 F9 B3 9B                 ; subtract FF (-1) or 01 (1)
sta      $2A,x                         ; 0x5c4b $9C3B 95 2A                    ;; Enemy Y Position
L9C3D                                                                          ;
jsr      LDE40                         ; 0x5c4d $9C3D 20 40 DE                 ; goto $1DE40 (Next Enemy)
jmp      bank7_Link_Collision_Detection; 0x5c50 $9C40 4C C1 D6                 ; goto $1D6C1
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines2_DumbMoblin                                               ;
;Related to Dumb Moblin animation                                              ;
lda      $12                           ; 0x5c53 $9C43 A5 12                    ;; Frame Counter (ascending)
and      #$10                          ; 0x5c55 $9C45 29 10                    ; keep bits ...x ....
lsr                                    ; 0x5c57 $9C47 4A                       ;
lsr                                    ; 0x5c58 $9C48 4A                       ;
lsr                                    ; 0x5c59 $9C49 4A                       ;
lsr                                    ; 0x5c5a $9C4A 4A                       ;
adc      #$03                          ; 0x5c5b $9C4B 69 03                    ;
sta      $81,x                         ; 0x5c5d $9C4D 95 81                    ; Current Animation Frame for Enemy
jsr      bank1_Enemy_Routines2_Moblin  ; 0x5c5f $9C4F 20 A4 9C                 ; goto $5CA4
lda      $91,x                         ; 0x5c62 $9C52 B5 91                    ;
clc                                    ; 0x5c64 $9C54 18                       ;
adc      #$08                          ; 0x5c65 $9C55 69 08                    ;
tay                                    ; 0x5c67 $9C57 A8                       ;
lda      $2A,x                         ; 0x5c68 $9C58 B5 2A                    ; Enemy Y position
adc      #$10                          ; 0x5c6a $9C5A 69 10                    ;
sta      L0000                         ; 0x5c6c $9C5C 85 00                    ;
lda      $CD                           ; 0x5c6e $9C5E A5 CD                    ;
sta      $01                           ; 0x5c70 $9C60 85 01                    ;
ldx      #$38                          ; 0x5c72 $9C62 A2 38                    ; X = 38
lda      $12                           ; 0x5c74 $9C64 A5 12                    ;; Frame Counter (ascending)
and      #$08                          ; 0x5c76 $9C66 29 08                    ; keep bits .... x...
bne      L9C6C                         ; 0x5c78 $9C68 D0 02                    ;
ldx      #$4A                          ; 0x5c7a $9C6A A2 4A                    ; X = 4A
L9C6C                                                                          ;
jmp      LF0D7                         ; 0x5c7c $9C6C 4C D7 F0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines2_Goriya                                                   ;
ldy      #$0C                          ; 0x5c7f $9C6F A0 0C                    ; Y = 0C (related to tile mapping for throw)
lda      $81,x                         ; 0x5c81 $9C71 B5 81                    ; Current Animation Frame for Enemy
beq      L9C7D                         ; 0x5c83 $9C73 F0 08                    ;
cmp      #$01                          ; 0x5c85 $9C75 C9 01                    ;
bne      L9C8B                         ; 0x5c87 $9C77 D0 12                    ;
ldy      #$08                          ; 0x5c89 $9C79 A0 08                    ; Y = 08
bne      L9C8B                         ; 0x5c8b $9C7B D0 0E                    ;
L9C7D                                                                          ;
ldy      #$00                          ; 0x5c8d $9C7D A0 00                    ; Y = 00
lda      $71,x                         ; 0x5c8f $9C7F B5 71                    ;; Enemy X Velocity
beq      L9C8B                         ; 0x5c91 $9C81 F0 08                    ;
lda      $12                           ; 0x5c93 $9C83 A5 12                    ;; Frame Counter (ascending)
and      #$08                          ; 0x5c95 $9C85 29 08                    ; keep bits .... x...
beq      L9C8B                         ; 0x5c97 $9C87 F0 02                    ;
ldy      #$04                          ; 0x5c99 $9C89 A0 04                    ; Y = 04
L9C8B                                                                          ;
tya                                    ; 0x5c9b $9C8B 98                       ;
ldy      $91,x                         ; 0x5c9c $9C8C B4 91                    ;
tax                                    ; 0x5c9e $9C8E AA                       ;
jsr      LF1F4                         ; 0x5c9f $9C8F 20 F4 F1                 ;
jmp      LF0D7                         ; 0x5ca2 $9C92 4C D7 F0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Tables_for_Moblin_and_Spear__before_throw__tile_mapping_and_offsets      ;
.byt    $24,$1E,$24,$2A,$30,$36        ; 0x5ca5 $9C95 24 1E 24 2A 30 36        ;
L9C9B                                                                          ;
.byt    $04,$F8,$FC,$08                ; 0x5cab $9C9B 04 F8 FC 08              ;
L9C9F                                                                          ;
.byt    $00,$01,$00,$01,$01            ; 0x5caf $9C9F 00 01 00 01 01           ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines2_Moblin                                                   ;
lda      $02                           ; 0x5cb4 $9CA4 A5 02                    ;
sta      $D9                           ; 0x5cb6 $9CA6 85 D9                    ; Thunder Spell modifier ?
lda      $81,x                         ; 0x5cb8 $9CA8 B5 81                    ;; Current Animation Frame for Enemys
cmp      #$02                          ; 0x5cba $9CAA C9 02                    ;
bne      L9CB8                         ; 0x5cbc $9CAC D0 0A                    ;
lda      $0504,x                       ; 0x5cbe $9CAE BD 04 05                 ;; Timer for Enemy
cmp      #$08                          ; 0x5cc1 $9CB1 C9 08                    ;
lda      $81,x                         ; 0x5cc3 $9CB3 B5 81                    ;; Current Animation Frame for Enemys
bcs      L9CB8                         ; 0x5cc5 $9CB5 B0 01                    ;
lsr                                    ; 0x5cc7 $9CB7 4A                       ;
L9CB8                                                                          ;
sta      $05E4                         ; 0x5cc8 $9CB8 8D E4 05                 ;
tax                                    ; 0x5ccb $9CBB AA                       ;
lda      bank1_Tables_for_Moblin_and_Spear__before_throw__tile_mapping_and_offsets,x; 0x5ccc $9CBC BD 95 9C;
cpx      #$00                          ; 0x5ccf $9CBF E0 00                    ;
bne      L9CD4                         ; 0x5cd1 $9CC1 D0 11                    ;
ldx      $10                           ; 0x5cd3 $9CC3 A6 10                    ;; used as monster x register ;draw boss hp bar
ldy      $71,x                         ; 0x5cd5 $9CC5 B4 71                    ; Enemy X Velocity
beq      L9CD4                         ; 0x5cd7 $9CC7 F0 0B                    ;
ldy      #$24                          ; 0x5cd9 $9CC9 A0 24                    ; Y = 24
lda      $12                           ; 0x5cdb $9CCB A5 12                    ;; Frame Counter (ascending)
and      #$08                          ; 0x5cdd $9CCD 29 08                    ; keep bits .... x...
beq      L9CD3                         ; 0x5cdf $9CCF F0 02                    ;
ldy      #$1E                          ; 0x5ce1 $9CD1 A0 1E                    ; Y = 1E
L9CD3                                                                          ;
tya                                    ; 0x5ce3 $9CD3 98                       ;
L9CD4                                                                          ;
ldx      $10                           ; 0x5ce4 $9CD4 A6 10                    ;; used as monster x register ;draw boss hp bar
ldy      $91,x                         ; 0x5ce6 $9CD6 B4 91                    ;
tax                                    ; 0x5ce8 $9CD8 AA                       ;
jsr      LF1F4                         ; 0x5ce9 $9CD9 20 F4 F1                 ;
jsr      LF1F4                         ; 0x5cec $9CDC 20 F4 F1                 ;
stx      $0D                           ; 0x5cef $9CDF 86 0D                    ;
ldx      $10                           ; 0x5cf1 $9CE1 A6 10                    ;; used as monster x register ;draw boss hp bar
lda      $C9                           ; 0x5cf3 $9CE3 A5 C9                    ;
bne      L9D56                         ; 0x5cf5 $9CE5 D0 6F                    ;
lda      $05E4                         ; 0x5cf7 $9CE7 AD E4 05                 ;
beq      L9D56                         ; 0x5cfa $9CEA F0 6A                    ;
cmp      #$01                          ; 0x5cfc $9CEC C9 01                    ;
bne      L9CF6                         ; 0x5cfe $9CEE D0 06                    ;
lda      $02                           ; 0x5d00 $9CF0 A5 02                    ;
eor      #$03                          ; 0x5d02 $9CF2 49 03                    ; flip bits .... ..xx
sta      $02                           ; 0x5d04 $9CF4 85 02                    ;
L9CF6                                                                          ;
lda      L0000                         ; 0x5d06 $9CF6 A5 00                    ;
sec                                    ; 0x5d08 $9CF8 38                       ;
sbc      #$18                          ; 0x5d09 $9CF9 E9 18                    ;
sta      L0000                         ; 0x5d0b $9CFB 85 00                    ;
lda      $05E4                         ; 0x5d0d $9CFD AD E4 05                 ;
cmp      #$03                          ; 0x5d10 $9D00 C9 03                    ;
bcc      L9D08                         ; 0x5d12 $9D02 90 04                    ;
lda      $2A,x                         ; 0x5d14 $9D04 B5 2A                    ; Enemy Y Position
sta      L0000                         ; 0x5d16 $9D06 85 00                    ;
L9D08                                                                          ;
lda      $05E4                         ; 0x5d18 $9D08 AD E4 05                 ;
tax                                    ; 0x5d1b $9D0B AA                       ;
dex                                    ; 0x5d1c $9D0C CA                       ;
lda      L9C9F,x                       ; 0x5d1d $9D0D BD 9F 9C                 ; refer to table at $5C95 (offset +A)
tax                                    ; 0x5d20 $9D10 AA                       ;
lda      $D9                           ; 0x5d21 $9D11 A5 D9                    ;; Thunder Spell modifier ?
cmp      #$01                          ; 0x5d23 $9D13 C9 01                    ;
bne      L9D19                         ; 0x5d25 $9D15 D0 02                    ;
inx                                    ; 0x5d27 $9D17 E8                       ;
inx                                    ; 0x5d28 $9D18 E8                       ;
L9D19                                                                          ;
tya                                    ; 0x5d29 $9D19 98                       ;
pha                                    ; 0x5d2a $9D1A 48                       ;
lda      L9C9B,x                       ; 0x5d2b $9D1B BD 9B 9C                 ; refer to table at $9C95 (offset +3)
ldx      $10                           ; 0x5d2e $9D1E A6 10                    ;; used as monster x register ;draw boss hp bar
ldy      $0504,x                       ; 0x5d30 $9D20 BC 04 05                 ;; Timer for Enemy
cpy      #$03                          ; 0x5d33 $9D23 C0 03                    ;
bcc      L9D2C                         ; 0x5d35 $9D25 90 05                    ;
cpy      #$0D                          ; 0x5d37 $9D27 C0 0D                    ;
bcs      L9D2C                         ; 0x5d39 $9D29 B0 01                    ;
asl                                    ; 0x5d3b $9D2B 0A                       ;
L9D2C                                                                          ;
clc                                    ; 0x5d3c $9D2C 18                       ;
adc      $01                           ; 0x5d3d $9D2D 65 01                    ;
sta      $01                           ; 0x5d3f $9D2F 85 01                    ;
pla                                    ; 0x5d41 $9D31 68                       ;
tay                                    ; 0x5d42 $9D32 A8                       ;
ldx      $0D                           ; 0x5d43 $9D33 A6 0D                    ;
jsr      LF0D7                         ; 0x5d45 $9D35 20 D7 F0                 ;
lda      $05E4                         ; 0x5d48 $9D38 AD E4 05                 ;
clc                                    ; 0x5d4b $9D3B 18                       ;
adc      #$01                          ; 0x5d4c $9D3C 69 01                    ;
and      #$03                          ; 0x5d4e $9D3E 29 03                    ; keep bits .... ..xx
bne      L9D56                         ; 0x5d50 $9D40 D0 14                    ;
lda      #$F3                          ; 0x5d52 $9D42 A9 F3                    ; A = F3
ldx      $D9                           ; 0x5d54 $9D44 A6 D9                    ;; Thunder Spell modifier ?
cpx      #$02                          ; 0x5d56 $9D46 E0 02                    ;
beq      L9D50                         ; 0x5d58 $9D48 F0 06                    ;
lda      #$0C                          ; 0x5d5a $9D4A A9 0C                    ; A = 0C
iny                                    ; 0x5d5c $9D4C C8                       ;
iny                                    ; 0x5d5d $9D4D C8                       ;
iny                                    ; 0x5d5e $9D4E C8                       ;
iny                                    ; 0x5d5f $9D4F C8                       ;
L9D50                                                                          ;
adc      $01FB,y                       ; 0x5d60 $9D50 79 FB 01                 ;
L9D54     = * + $0001                                                          ;
sta      $01FB,y                       ; 0x5d63 $9D53 99 FB 01                 ;
L9D56                                                                          ;
ldx      $10                           ; 0x5d66 $9D56 A6 10                    ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x5d68 $9D58 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Table_for_Daira_backswing_tile_mapping__offset_and_hitbox                ;
.byt    $10,$12,$14                    ; 0x5d69 $9D59 10 12 14                 ;10 12 14	Tile mapping for Axe frames 1-2-3 (1-2 for Red Daira)
L9D5C                                                                          ;
.byt    $00,$02,$11                    ; 0x5d6c $9D5C 00 02 11                 ;00 02 11	Y offset for Axe frames 1-2-3 (1-2 for Red Daira)
L9D5F                                                                          ;
.byt    $0D,$F0,$FB,$F3,$10,$05        ; 0x5d6f $9D5F 0D F0 FB F3 10 05        ;0D F0 FB	X offset - Facing left		F3 10 05	X offset - Facing right
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines2_Daira_Orange                                             ;
lda      #$F6                          ; 0x5d75 $9D65 A9 F6                    ; A = F6
bne      L9D6B                         ; 0x5d77 $9D67 D0 02                    ;
bank1_Enemy_Routines2_Daira_Red_                                               ;
lda      #$F5                          ; 0x5d79 $9D69 A9 F5                    ; A = F5
L9D6B                                                                          ;
sta      bank1_Various_Tile_Mappings_Daira_Axe_Swing_Frame_1; 0x5d7b $9D6B 8D E6 95;
lda      #$00                          ; 0x5d7e $9D6E A9 00                    ;;A = #$00 0000_0000
sta      $0D                           ; 0x5d80 $9D70 85 0D                    ;
lda      $02                           ; 0x5d82 $9D72 A5 02                    ;
sta      $D9                           ; 0x5d84 $9D74 85 D9                    ;; Thunder Spell modifier ?
lda      $A8,x                         ; 0x5d86 $9D76 B5 A8                    ;; Enemy State
and      #$04                          ; 0x5d88 $9D78 29 04                    ; keep bits .... .x..
beq      L9D91                         ; 0x5d8a $9D7A F0 15                    ;
lda      $71,x                         ; 0x5d8c $9D7C B5 71                    ;; Enemy X Velocity
beq      L9D91                         ; 0x5d8e $9D7E F0 11                    ;
clc                                    ; 0x5d90 $9D80 18                       ;
adc      #$08                          ; 0x5d91 $9D81 69 08                    ;
tay                                    ; 0x5d93 $9D83 A8                       ;
lda      #$08                          ; 0x5d94 $9D84 A9 08                    ; A = 08
cpy      #$11                          ; 0x5d96 $9D86 C0 11                    ; if (Y >= 11)
bcc      L9D8B                         ; 0x5d98 $9D88 90 01                    ; skip  to $5D8B
lsr                                    ; 0x5d9a $9D8A 4A                       ;
L9D8B                                                                          ;
and      $12                           ; 0x5d9b $9D8B 25 12                    ;; Frame Counter (ascending)
bne      L9D91                         ; 0x5d9d $9D8D D0 02                    ;
inc      $0D                           ; 0x5d9f $9D8F E6 0D                    ;
L9D91                                                                          ;
ldy      $81,x                         ; 0x5da1 $9D91 B4 81                    ;; Current Animation Frame for Enemys
dey                                    ; 0x5da3 $9D93 88                       ;
sty      L000E                         ; 0x5da4 $9D94 84 0E                    ;
ldy      $91,x                         ; 0x5da6 $9D96 B4 91                    ;
ldx      #$16                          ; 0x5da8 $9D98 A2 16                    ; X = 16
lda      $0D                           ; 0x5daa $9D9A A5 0D                    ;
bne      L9DA0                         ; 0x5dac $9D9C D0 02                    ;
ldx      #$1A                          ; 0x5dae $9D9E A2 1A                    ; A = 1A
L9DA0                                                                          ;
jsr      LF1F4                         ; 0x5db0 $9DA0 20 F4 F1                 ;
jsr      LF1F4                         ; 0x5db3 $9DA3 20 F4 F1                 ;
lda      $C9                           ; 0x5db6 $9DA6 A5 C9                    ;
bne      L9DEE                         ; 0x5db8 $9DA8 D0 44                    ;
ldx      L000E                         ; 0x5dba $9DAA A6 0E                    ;
bmi      L9DEE                         ; 0x5dbc $9DAC 30 40                    ;
bne      L9DBC                         ; 0x5dbe $9DAE D0 0C                    ;
lda      $02                           ; 0x5dc0 $9DB0 A5 02                    ;
eor      #$03                          ; 0x5dc2 $9DB2 49 03                    ; flip bits .... ..xx
sta      $02                           ; 0x5dc4 $9DB4 85 02                    ;
lda      $03                           ; 0x5dc6 $9DB6 A5 03                    ;
ora      #$80                          ; 0x5dc8 $9DB8 09 80                    ; set bits  x... ....
sta      $03                           ; 0x5dca $9DBA 85 03                    ;
L9DBC                                                                          ;
lda      bank1_Table_for_Daira_backswing_tile_mapping__offset_and_hitbox,x; 0x5dcc $9DBC BD 59 9D; refer to table at $5D59
tax                                    ; 0x5dcf $9DBF AA                       ;
jsr      LF0D7                         ; 0x5dd0 $9DC0 20 D7 F0                 ;
lda      $2A,x                         ; 0x5dd3 $9DC3 B5 2A                    ; Enemy Y Position
ldx      L000E                         ; 0x5dd5 $9DC5 A6 0E                    ;
clc                                    ; 0x5dd7 $9DC7 18                       ;
adc      L9D5C,x                       ; 0x5dd8 $9DC8 7D 5C 9D                 ; refer to table at $5D59 (offset +3)
sta      $01F8,y                       ; 0x5ddb $9DCB 99 F8 01                 ;
sta      $01FC,y                       ; 0x5dde $9DCE 99 FC 01                 ;
lda      $D9                           ; 0x5de1 $9DD1 A5 D9                    ;; Thunder Spell modifier ?
lsr                                    ; 0x5de3 $9DD3 4A                       ;
bcc      L9DDB                         ; 0x5de4 $9DD4 90 05                    ;
txa                                    ; 0x5de6 $9DD6 8A                       ;
clc                                    ; 0x5de7 $9DD7 18                       ;
adc      #$03                          ; 0x5de8 $9DD8 69 03                    ;
tax                                    ; 0x5dea $9DDA AA                       ;
L9DDB                                                                          ;
lda      L9D5F,x                       ; 0x5deb $9DDB BD 5F 9D                 ; refer to table at $5D59 (offset +6)
pha                                    ; 0x5dee $9DDE 48                       ;
clc                                    ; 0x5def $9DDF 18                       ;
adc      $01FB,y                       ; 0x5df0 $9DE0 79 FB 01                 ;
sta      $01FB,y                       ; 0x5df3 $9DE3 99 FB 01                 ;
pla                                    ; 0x5df6 $9DE6 68                       ;
clc                                    ; 0x5df7 $9DE7 18                       ;
adc      $01FF,y                       ; 0x5df8 $9DE8 79 FF 01                 ;
sta      $01FF,y                       ; 0x5dfb $9DEB 99 FF 01                 ;
L9DEE                                                                          ;
ldx      $10                           ; 0x5dfe $9DEE A6 10                    ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x5e00 $9DF0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines2_Lowder                                                   ;
lda      #$3C                          ; 0x5e01 $9DF1 A9 3C                    ; A = 3C
jmp      LF0CC                         ; 0x5e03 $9DF3 4C CC F0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines2_Moby                                                     ;
lda      #$44                          ; 0x5e06 $9DF6 A9 44                    ; A = 44
jmp      LF0CC                         ; 0x5e08 $9DF8 4C CC F0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Enemy_Routines2_Megmat                                                   ;
lda      $057E,x                       ; 0x5e0b $9DFB BD 7E 05                 ; Enemy Y Velocity
ldx      #$40                          ; 0x5e0e $9DFE A2 40                    ;;X = #$40 0100_0000
cmp      #$02                          ; 0x5e10 $9E00 C9 02                    ;
bmi      L9E06                         ; 0x5e12 $9E02 30 02                    ;
inx                                    ; 0x5e14 $9E04 E8                       ;
inx                                    ; 0x5e15 $9E05 E8                       ;
L9E06                                                                          ;
jmp      LF0D7                         ; 0x5e16 $9E06 4C D7 F0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E09                                                                          ;
rts                                    ; 0x5e19 $9E09 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_table12                                                                  ;
.byt    $FF,$01                        ; 0x5e1a $9E0A FF 01                    ;
; ---------------------------------------------------------------------------- ;
bank1_Geldarm_body_tiles_layout                                                ;
lda      $040E,x                       ; 0x5e1c $9E0C BD 0E 04                 ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      L9E15                         ; 0x5e1f $9E0F F0 04                    ;
and      #$03                          ; 0x5e21 $9E11 29 03                    ; keep bits .... ..xx
sta      $03                           ; 0x5e23 $9E13 85 03                    ;
L9E15                                                                          ;
lda      $C9                           ; 0x5e25 $9E15 A5 C9                    ;
and      #$08                          ; 0x5e27 $9E17 29 08                    ; keep bits .... x...
bne      L9E09                         ; 0x5e29 $9E19 D0 EE                    ;
lda      #$00                          ; 0x5e2b $9E1B A9 00                    ; A = 00
sta      L0000                         ; 0x5e2d $9E1D 85 00                    ;
lda      $81,x                         ; 0x5e2f $9E1F B5 81                    ;; Current Animation Frame for Enemys
sec                                    ; 0x5e31 $9E21 38                       ;
sbc      $2A,x                         ; 0x5e32 $9E22 F5 2A                    ;; Enemy Y Position
sta      $02                           ; 0x5e34 $9E24 85 02                    ;
L9E26                                                                          ;
cmp      #$05                          ; 0x5e36 $9E26 C9 05                    ;
bcc      bank1_Geldarm_head            ; 0x5e38 $9E28 90 08                    ;
inc      L0000                         ; 0x5e3a $9E2A E6 00                    ;
sec                                    ; 0x5e3c $9E2C 38                       ;
sbc      #$05                          ; 0x5e3d $9E2D E9 05                    ;
jmp      L9E26                         ; 0x5e3f $9E2F 4C 26 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Geldarm_head                                                             ;
sta      $01                           ; 0x5e42 $9E32 85 01                    ;
ldy      $91,x                         ; 0x5e44 $9E34 B4 91                    ;
tya                                    ; 0x5e46 $9E36 98                       ;
clc                                    ; 0x5e47 $9E37 18                       ;
adc      #$14                          ; 0x5e48 $9E38 69 14                    ;
sta      $0F                           ; 0x5e4a $9E3A 85 0F                    ;
lda      $2A,x                         ; 0x5e4c $9E3C B5 2A                    ; Enemy Y position
sta      $0200,y                       ; 0x5e4e $9E3E 99 00 02                 ;
lda      #$62                          ; 0x5e51 $9E41 A9 62                    ; A = 62 (Geldarm head tile code)
sta      $0201,y                       ; 0x5e53 $9E43 99 01 02                 ;
lda      $02                           ; 0x5e56 $9E46 A5 02                    ;
bne      bank1_Geldarm_body_Tile_Mapping; 0x5e58 $9E48 D0 09                   ;
tya                                    ; 0x5e5a $9E4A 98                       ;
clc                                    ; 0x5e5b $9E4B 18                       ;
adc      #$04                          ; 0x5e5c $9E4C 69 04                    ;
sta      $0F                           ; 0x5e5e $9E4E 85 0F                    ;
jmp      L9E70                         ; 0x5e60 $9E50 4C 70 9E                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_Geldarm_body_Tile_Mapping                                                ;
lda      $0200,y                       ; 0x5e63 $9E53 B9 00 02                 ;
clc                                    ; 0x5e66 $9E56 18                       ;
adc      L0000                         ; 0x5e67 $9E57 65 00                    ;
sta      $0204,y                       ; 0x5e69 $9E59 99 04 02                 ;
lda      $01                           ; 0x5e6c $9E5C A5 01                    ;
beq      L9E6B                         ; 0x5e6e $9E5E F0 0B                    ;
dec      $01                           ; 0x5e70 $9E60 C6 01                    ;
lda      $0204,y                       ; 0x5e72 $9E62 B9 04 02                 ;
clc                                    ; 0x5e75 $9E65 18                       ;
adc      #$01                          ; 0x5e76 $9E66 69 01                    ;
sta      $0204,y                       ; 0x5e78 $9E68 99 04 02                 ;
L9E6B                                                                          ;
lda      #$64                          ; 0x5e7b $9E6B A9 64                    ; A = 64
sta      $0205,y                       ; 0x5e7d $9E6D 99 05 02                 ;
L9E70                                                                          ;
lda      $12                           ; 0x5e80 $9E70 A5 12                    ;; Frame Counter (ascending)
and      #$10                          ; 0x5e82 $9E72 29 10                    ; keep bits ...x ....
asl                                    ; 0x5e84 $9E74 0A                       ;
asl                                    ; 0x5e85 $9E75 0A                       ;
ora      $03                           ; 0x5e86 $9E76 05 03                    ;
sta      $0202,y                       ; 0x5e88 $9E78 99 02 02                 ;
sta      $0206,y                       ; 0x5e8b $9E7B 99 06 02                 ;
lda      $CD                           ; 0x5e8e $9E7E A5 CD                    ;
sta      $0203,y                       ; 0x5e90 $9E80 99 03 02                 ;
sta      $0207,y                       ; 0x5e93 $9E83 99 07 02                 ;
iny                                    ; 0x5e96 $9E86 C8                       ;
iny                                    ; 0x5e97 $9E87 C8                       ;
iny                                    ; 0x5e98 $9E88 C8                       ;
iny                                    ; 0x5e99 $9E89 C8                       ;
cpy      $0F                           ; 0x5e9a $9E8A C4 0F                    ;
bne      bank1_Geldarm_body_Tile_Mapping; 0x5e9c $9E8C D0 C5                   ;
ldy      $91,x                         ; 0x5e9e $9E8E B4 91                    ;
lda      $AF,x                         ; 0x5ea0 $9E90 B5 AF                    ;; Various enemy state variables
beq      L9EAF                         ; 0x5ea2 $9E92 F0 1B                    ;
lda      $12                           ; 0x5ea4 $9E94 A5 12                    ;; Frame Counter (ascending)
and      #$20                          ; 0x5ea6 $9E96 29 20                    ; keep bits ..x. ....
lsr                                    ; 0x5ea8 $9E98 4A                       ;
lsr                                    ; 0x5ea9 $9E99 4A                       ;
lsr                                    ; 0x5eaa $9E9A 4A                       ;
lsr                                    ; 0x5eab $9E9B 4A                       ;
lsr                                    ; 0x5eac $9E9C 4A                       ;
tax                                    ; 0x5ead $9E9D AA                       ;
lda      $0203,y                       ; 0x5eae $9E9E B9 03 02                 ;
clc                                    ; 0x5eb1 $9EA1 18                       ;
adc      bank1_table12,x               ; 0x5eb2 $9EA2 7D 0A 9E                 ; refer to table at $5E0A
sta      $0207,y                       ; 0x5eb5 $9EA5 99 07 02                 ;
clc                                    ; 0x5eb8 $9EA8 18                       ;
adc      bank1_table12,x               ; 0x5eb9 $9EA9 7D 0A 9E                 ; refer to table at $5E0A
sta      $0203,y                       ; 0x5ebc $9EAC 99 03 02                 ;
L9EAF                                                                          ;
ldx      $10                           ; 0x5ebf $9EAF A6 10                    ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x5ec1 $9EB1 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9EB2                                                                          ;
lda      $ED                           ; 0x5ec2 $9EB2 A5 ED                    ;; Sound Effects Type 2; Sound Effects Type 2
ora      #$40                          ; 0x5ec4 $9EB4 09 40                    ; set bits  .x.. ....
sta      $ED                           ; 0x5ec6 $9EB6 85 ED                    ;; Sound Effects Type 2; Sound Effects Type 2
rts                                    ; 0x5ec8 $9EB8 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_UNUSED_9EB9                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ec9 $9EB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ed1 $9EC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ed9 $9EC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ee1 $9ED1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ee9 $9ED9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ef1 $9EE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ef9 $9EE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f01 $9EF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f09 $9EF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f11 $9F01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f19 $9F09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f21 $9F11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f29 $9F19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f31 $9F21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f39 $9F29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f41 $9F31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f49 $9F39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f51 $9F41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f59 $9F49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f61 $9F51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f69 $9F59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f71 $9F61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f79 $9F69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f81 $9F71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f89 $9F79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f91 $9F81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5f99 $9F89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fa1 $9F91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fa9 $9F99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fb1 $9FA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fb9 $9FA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fc1 $9FB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fc9 $9FB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fd1 $9FC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fd9 $9FC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fe1 $9FD1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5fe9 $9FD9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ff1 $9FE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x5ff9 $9FE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6001 $9FF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF    ; 0x6009 $9FF9 FF FF FF FF FF FF FF     ;
; ---------------------------------------------------------------------------- ;
bank1_Area_Pointers_Death_Mountain                                             ;
.word    bank1_Area_Data_Death_Mountain; 0x6010 $A000 6C A2                    ;Crash (not enough data to make a valid area)
.word    LA33E                         ; 0x6012 $A002 3E A3                    ;Gradual slope climb left
.word    LA398                         ; 0x6014 $A004 98 A3                    ;Grotto with Bots and Goriya
.word    LA3DC                         ; 0x6016 $A006 DC A3                    ;Grotto with Octoroks and Goriya
.word    LA31E                         ; 0x6018 $A008 1E A3                    ;Gradual slope climb right
.word    LA5B6                         ; 0x601a $A00A B6 A5                    ;Generic Bridge
.word    LA362                         ; 0x601c $A00C 62 A3                    ;Grotto with notches in ground (for Octoroks)
.word    LA3B8                         ; 0x601e $A00E B8 A3                    ;Grotto with random lava pits
.word    LA5B6                         ; 0x6020 $A010 B6 A5                    ;Generic Bridge
.word    LA4A4                         ; 0x6022 $A012 A4 A4                    ;
.word    LA362                         ; 0x6024 $A014 62 A3                    ;
.word    LA4C0                         ; 0x6026 $A016 C0 A4                    ;
.word    LA33E                         ; 0x6028 $A018 3E A3                    ;
.word    LA31E                         ; 0x602a $A01A 1E A3                    ;
.word    LA3B8                         ; 0x602c $A01C B8 A3                    ;
.word    LA4D4                         ; 0x602e $A01E D4 A4                    ;
.word    LA408                         ; 0x6030 $A020 08 A4                    ;
.word    L8C96                         ; 0x6032 $A022 96 8C                    ;BG Map Type 5 (dead-end cave)
.word    L8C96                         ; 0x6034 $A024 96 8C                    ;BG Map Type 5 (dead-end cave)
.word    LA432                         ; 0x6036 $A026 32 A4                    ;
.word    LA458                         ; 0x6038 $A028 58 A4                    ;
.word    LA4EC                         ; 0x603a $A02A EC A4                    ;
.word    LA5F6                         ; 0x603c $A02C F6 A5                    ;
.word    LA408                         ; 0x603e $A02E 08 A4                    ;
.word    LA408                         ; 0x6040 $A030 08 A4                    ;
.word    LA432                         ; 0x6042 $A032 32 A4                    ;
.word    LA59B                         ; 0x6044 $A034 9B A5                    ;
.word    bank1_Area_Data_Death_Mountain; 0x6046 $A036 6C A2                    ;
.word    bank1_Area_Data_Death_Mountain; 0x6048 $A038 6C A2                    ;
.word    LA26E                         ; 0x604a $A03A 6E A2                    ;
.word    LA26E                         ; 0x604c $A03C 6E A2                    ;
.word    LA26E                         ; 0x604e $A03E 6E A2                    ;
.word    LA26E                         ; 0x6050 $A040 6E A2                    ;
.word    LA26E                         ; 0x6052 $A042 6E A2                    ;
.word    LA52B                         ; 0x6054 $A044 2B A5                    ;
.word    LA52B                         ; 0x6056 $A046 2B A5                    ;
.word    LA57E                         ; 0x6058 $A048 7E A5                    ;
.word    LA55F                         ; 0x605a $A04A 5F A5                    ;
.word    LA515                         ; 0x605c $A04C 15 A5                    ;
.word    LA298                         ; 0x605e $A04E 98 A2                    ;
.word    LA298                         ; 0x6060 $A050 98 A2                    ;
.word    LA298                         ; 0x6062 $A052 98 A2                    ;
.word    LA298                         ; 0x6064 $A054 98 A2                    ;
.word    LA298                         ; 0x6066 $A056 98 A2                    ;
.word    LA298                         ; 0x6068 $A058 98 A2                    ;
.word    LA298                         ; 0x606a $A05A 98 A2                    ;
.word    LA298                         ; 0x606c $A05C 98 A2                    ;
.word    LA515                         ; 0x606e $A05E 15 A5                    ;
.word    LA53B                         ; 0x6070 $A060 3B A5                    ;
.word    LA53B                         ; 0x6072 $A062 3B A5                    ;
.word    LA53B                         ; 0x6074 $A064 3B A5                    ;
.word    LA515                         ; 0x6076 $A066 15 A5                    ;
.word    LA2DC                         ; 0x6078 $A068 DC A2                    ;
.word    LA2DC                         ; 0x607a $A06A DC A2                    ;
.word    LA2DC                         ; 0x607c $A06C DC A2                    ;
.word    LA2DC                         ; 0x607e $A06E DC A2                    ;
.word    LA2DC                         ; 0x6080 $A070 DC A2                    ;
.word    LA505                         ; 0x6082 $A072 05 A5                    ;
.word    LA505                         ; 0x6084 $A074 05 A5                    ;
.word    LA2BA                         ; 0x6086 $A076 BA A2                    ;
.word    LA2BA                         ; 0x6088 $A078 BA A2                    ;
.word    LA2BA                         ; 0x608a $A07A BA A2                    ;
.word    LA2BA                         ; 0x608c $A07C BA A2                    ;
bank1_Enemy_Pointers_Death_Mountain                                            ;
.word    L71D8                         ; 0x608e $A07E D8 71                    ;Base Offset is 48A0
.word    L71DA                         ; 0x6090 $A080 DA 71                    ;
.word    L71EB                         ; 0x6092 $A082 EB 71                    ;
.word    L71FA                         ; 0x6094 $A084 FA 71                    ;
.word    L7218                         ; 0x6096 $A086 18 72                    ;
.word    L7223                         ; 0x6098 $A088 23 72                    ;
.word    L7237                         ; 0x609a $A08A 37 72                    ;
.word    L7244                         ; 0x609c $A08C 44 72                    ;
.word    L7256                         ; 0x609e $A08E 56 72                    ;
.word    L7268                         ; 0x60a0 $A090 68 72                    ;
.word    L7273                         ; 0x60a2 $A092 73 72                    ;
.word    L7280                         ; 0x60a4 $A094 80 72                    ;
.word    L728D                         ; 0x60a6 $A096 8D 72                    ;
.word    L729C                         ; 0x60a8 $A098 9C 72                    ;
.word    L72E5                         ; 0x60aa $A09A E5 72                    ;
.word    L72BA                         ; 0x60ac $A09C BA 72                    ;
.word    L72CA                         ; 0x60ae $A09E CA 72                    ;
.word    L72AB                         ; 0x60b0 $A0A0 AB 72                    ;
.word    L72AB                         ; 0x60b2 $A0A2 AB 72                    ;
.word    L72D9                         ; 0x60b4 $A0A4 D9 72                    ;
.word    L72E2                         ; 0x60b6 $A0A6 E2 72                    ;
.word    L72C5                         ; 0x60b8 $A0A8 C5 72                    ;
.word    L7223                         ; 0x60ba $A0AA 23 72                    ;
.word    L7228                         ; 0x60bc $A0AC 28 72                    ;
.word    L724D                         ; 0x60be $A0AE 4D 72                    ;
.word    L725B                         ; 0x60c0 $A0B0 5B 72                    ;
.word    L71D8                         ; 0x60c2 $A0B2 D8 71                    ;
.word    L71D8                         ; 0x60c4 $A0B4 D8 71                    ;
.word    L71D8                         ; 0x60c6 $A0B6 D8 71                    ;
.word    L7366                         ; 0x60c8 $A0B8 66 73                    ;
.word    L7366                         ; 0x60ca $A0BA 66 73                    ;
.word    L71D8                         ; 0x60cc $A0BC D8 71                    ;
.word    L71D8                         ; 0x60ce $A0BE D8 71                    ;
.word    L71D8                         ; 0x60d0 $A0C0 D8 71                    ;
.word    L72EE                         ; 0x60d2 $A0C2 EE 72                    ;
.word    L72F9                         ; 0x60d4 $A0C4 F9 72                    ;
.word    L71D8                         ; 0x60d6 $A0C6 D8 71                    ;
.word    L734B                         ; 0x60d8 $A0C8 4B 73                    ;
.word    L7311                         ; 0x60da $A0CA 11 73                    ;
.word    L734E                         ; 0x60dc $A0CC 4E 73                    ;
.word    L734E                         ; 0x60de $A0CE 4E 73                    ;
.word    L71D8                         ; 0x60e0 $A0D0 D8 71                    ;
.word    L71D8                         ; 0x60e2 $A0D2 D8 71                    ;
.word    L71D8                         ; 0x60e4 $A0D4 D8 71                    ;
.word    L71D8                         ; 0x60e6 $A0D6 D8 71                    ;
.word    L71D8                         ; 0x60e8 $A0D8 D8 71                    ;
.word    L71D8                         ; 0x60ea $A0DA D8 71                    ;
.word    L731C                         ; 0x60ec $A0DC 1C 73                    ;
.word    L7325                         ; 0x60ee $A0DE 25 73                    ;
.word    L732A                         ; 0x60f0 $A0E0 2A 73                    ;
.word    L7335                         ; 0x60f2 $A0E2 35 73                    ;
.word    L7342                         ; 0x60f4 $A0E4 42 73                    ;
.word    L737E                         ; 0x60f6 $A0E6 7E 73                    ;
.word    L737E                         ; 0x60f8 $A0E8 7E 73                    ;
.word    L71D8                         ; 0x60fa $A0EA D8 71                    ;
.word    L71D8                         ; 0x60fc $A0EC D8 71                    ;
.word    L71D8                         ; 0x60fe $A0EE D8 71                    ;
.word    L71D8                         ; 0x6100 $A0F0 D8 71                    ;
.word    L71D8                         ; 0x6102 $A0F2 D8 71                    ;
.word    L71D8                         ; 0x6104 $A0F4 D8 71                    ;
.word    L71D8                         ; 0x6106 $A0F6 D8 71                    ;
.word    L71D8                         ; 0x6108 $A0F8 D8 71                    ;
.word    L71D8                         ; 0x610a $A0FA D8 71                    ;
; ---------------------------------------------------------------------------- ;
bank1_Death_Mountain_Key_Areas_Y_Location                                      ;
.byt    $2A,$29,$28,$2A,$2B,$27,$2D,$2D; 0x610c $A0FC 2A 29 28 2A 2B 27 2D 2D  ;
.byt    $30,$2F,$2F,$30,$33,$36,$30,$32; 0x6114 $A104 30 2F 2F 30 33 36 30 32  ;
.byt    $34,$36,$3B,$39,$3A,$39,$3C,$3C; 0x611c $A10C 34 36 3B 39 3A 39 3C 3C  ;
.byt    $41,$3F,$3F,$3C,$40,$36,$36,$2F; 0x6124 $A114 41 3F 3F 3C 40 36 36 2F  ;
.byt    $30,$34,$33,$28,$2C,$3E,$44,$3A; 0x612c $A11C 30 34 33 28 2C 3E 44 3A  ;
.byt    $C3,$7F,$A5,$A5,$80,$80,$80,$80; 0x6134 $A124 C3 7F A5 A5 80 80 80 80  ;
.byt    $80,$80,$80,$80,$BA,$80,$80,$3C; 0x613c $A12C 80 80 80 80 BA 80 80 3C  ;
.byt    $40,$3A,$31,$32,$2E,$2A,$00    ; 0x6144 $A134 40 3A 31 32 2E 2A 00     ;
bank1_Death_Mountain_Key_Areas_X_Location                                      ;
.byt    $00,$44,$09,$4B,$10,$4E,$03,$47; 0x614b $A13B 00 44 09 4B 10 4E 03 47  ;
.byt    $03,$45,$0E,$50,$04,$45,$14,$54; 0x6153 $A143 03 45 0E 50 04 45 14 54  ;
.byt    $16,$54,$03,$47,$0F,$52,$0D,$51; 0x615b $A14B 16 54 03 47 0F 52 0D 51  ;
.byt    $10,$52,$16,$58,$0A,$0B,$4E,$89; 0x6163 $A153 10 52 16 58 0A 0B 4E 89  ;
.byt    $CB,$08,$4A,$92,$D2,$2D,$30,$29; 0x616b $A15B CB 08 4A 92 D2 2D 30 29  ;
.byt    $28,$00,$07,$17,$00,$40,$00,$40; 0x6173 $A163 28 00 07 17 00 40 00 40  ;
.byt    $00,$40,$00,$40,$3C,$00,$00,$39; 0x617b $A16B 00 40 00 40 3C 00 00 39  ;
.byt    $08,$30,$33,$2E,$30,$32,$00    ; 0x6183 $A173 08 30 33 2E 30 32 00     ;
bank1_Death_Mountain_Key_Areas_Map_Number                                      ;
.byt    $01,$C1,$02,$C2,$03,$C3,$04,$C4; 0x618a $A17A 01 C1 02 C2 03 C3 04 C4  ;
.byt    $05,$C5,$06,$C6,$07,$C7,$08,$C8; 0x6192 $A182 05 C5 06 C6 07 C7 08 C8  ;
.byt    $09,$C9,$0A,$CA,$0B,$CB,$0C,$CC; 0x619a $A18A 09 C9 0A CA 0B CB 0C CC  ;
.byt    $0D,$CD,$0E,$CE,$0F,$16,$D6    ; 0x61a2 $A192 0D CD 0E CE 0F 16 D6     ;
LA199                                                                          ;
.byt    $17,$D7,$18                    ; 0x61a9 $A199 17 D7 18                 ;
LA19C                                                                          ;
.byt    $D8,$19,$D9,$62,$63,$64,$28,$29; 0x61ac $A19C D8 19 D9 62 63 64 28 29  ;
.byt    $2A,$2B,$06,$C8,$06,$C8,$06,$C8; 0x61b4 $A1A4 2A 2B 06 C8 06 C8 06 C8  ;
.byt    $06,$C8,$0F,$00,$00,$65,$5A,$6F; 0x61bc $A1AC 06 C8 0F 00 00 65 5A 6F  ;
.byt    $70,$71,$72,$73,$00            ; 0x61c4 $A1B4 70 71 72 73 00           ;
bank1_Death_Mountain_Key_Areas_World_Number                                    ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x61c9 $A1B9 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x61d1 $A1C1 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x61d9 $A1C9 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x61e1 $A1D1 00 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$00,$40,$40,$80; 0x61e9 $A1D9 00 00 00 00 00 40 40 80  ;
.byt    $42,$00,$00,$00,$00,$00,$00,$00; 0x61f1 $A1E1 42 00 00 00 00 00 00 00  ;
.byt    $00,$00,$00,$00,$11,$00,$00,$80; 0x61f9 $A1E9 00 00 00 00 11 00 00 80  ;
.byt    $80,$40,$40,$40,$40,$40,$00    ; 0x6201 $A1F1 80 40 40 40 40 40 00     ;
bank1_Room_Connectivity_Data                                                   ;
.byt    $FC,$FC,$FC,$FC,$FC,$FF,$FF,$FD; 0x6208 $A1F8 FC FC FC FC FC FF FF FD  ;
.byt    $FC,$FF,$FF,$FD,$FC,$FF,$FF,$FD; 0x6210 $A200 FC FF FF FD FC FF FF FD  ;
.byt    $FC,$FF,$FF,$FD,$FC,$FF,$FF,$FD; 0x6218 $A208 FC FF FF FD FC FF FF FD  ;
.byt    $FC,$FF,$FF,$FD,$FC,$FF,$FF,$FD; 0x6220 $A210 FC FF FF FD FC FF FF FD  ;
.byt    $FC,$FF,$FF,$FD,$FC,$FF,$FF,$FD; 0x6228 $A218 FC FF FF FD FC FF FF FD  ;
.byt    $FC,$FF,$FF,$FD,$FC,$FF,$FF,$FD; 0x6230 $A220 FC FF FF FD FC FF FF FD  ;
.byt    $FC,$FF,$FF,$FD,$FC,$FF,$FF,$FD; 0x6238 $A228 FC FF FF FD FC FF FF FD  ;
.byt    $FC,$FF,$FF,$FD,$FC,$FF,$FF,$40; 0x6240 $A230 FC FF FF FD FC FF FF 40  ;
.byt    $3F,$4E,$FF,$44,$43,$FF,$FF,$FC; 0x6248 $A238 3F 4E FF 44 43 FF FF FC  ;
.byt    $FC,$FF,$FF,$4C,$4B,$FF,$42,$50; 0x6250 $A240 FC FF FF 4C 4B FF 42 50  ;
.byt    $4F,$FF,$FF,$54,$53,$FF,$FF,$FC; 0x6258 $A248 4F FF FF 54 53 FF FF FC  ;
.byt    $FC,$FF,$5E,$FD,$FE,$5A        ; 0x6260 $A250 FC FF 5E FD FE 5A        ;
LA256                                                                          ;
.byt    $FF,$FF,$FC,$66,$FF,$FD,$FE,$FF; 0x6266 $A256 FF FF FC 66 FF FD FE FF  ;
.byt    $62,$FF,$FC,$FF,$FF,$FC,$FC,$FF; 0x626e $A25E 62 FF FC FF FF FC FC FF  ;
.byt    $FF,$FC,$FC,$FF,$FF,$FC        ; 0x6276 $A266 FF FC FC FF FF FC        ;
bank1_Area_Data_Death_Mountain                                                 ;
.byt    $02,$00                        ; 0x627c $A26C 02 00                    ;
LA26E                                                                          ;
.byt    $10,$C0,$C3,$11,$D4,$02,$DE,$03; 0x627e $A26E 10 C0 C3 11 D4 02 DE 03  ;
.byt    $D4,$04,$D8,$03,$D2,$02,$DC,$03; 0x6286 $A276 D4 04 D8 03 D2 02 DC 03  ;
.byt    $1A,$44,$C2,$19,$82,$80,$82,$91; 0x628e $A27E 1A 44 C2 19 82 80 82 91  ;
.byt    $84,$80,$84,$91,$84,$80,$84,$80; 0x6296 $A286 84 80 84 91 84 80 84 80  ;
.byt    $82,$95,$8C,$80,$83,$92,$87,$91; 0x629e $A28E 82 95 8C 80 83 92 87 91  ;
.byt    $82,$80                        ; 0x62a6 $A296 82 80                    ;
LA298                                                                          ;
.byt    $22,$48,$1E,$62,$D2,$0D,$D4,$0C; 0x62a8 $A298 22 48 1E 62 D2 0D D4 0C  ;
.byt    $D2,$0B,$D2,$0C,$D2,$0D,$D2,$0E; 0x62b0 $A2A0 D2 0B D2 0C D2 0D D2 0E  ;
.byt    $D2,$0D,$D4,$0E,$D4,$0D,$D2,$0E; 0x62b8 $A2A8 D2 0D D4 0E D4 0D D2 0E  ;
.byt    $D2,$0D,$D4,$0C,$D2,$0B,$D6,$0C; 0x62c0 $A2B0 D2 0D D4 0C D2 0B D6 0C  ;
.byt    $D4,$0D                        ; 0x62c8 $A2B8 D4 0D                    ;
LA2BA                                                                          ;
.byt    $22,$40,$B1,$21,$96,$80,$74,$E2; 0x62ca $A2BA 22 40 B1 21 96 80 74 E2  ;
.byt    $52,$E4,$92,$80,$74,$E2,$94,$80; 0x62d2 $A2C2 52 E4 92 80 74 E2 94 80  ;
.byt    $92,$80,$74,$E2,$54,$E4,$92,$80; 0x62da $A2CA 92 80 74 E2 54 E4 92 80  ;
.byt    $92,$91,$92,$82,$74,$E2,$72,$E2; 0x62e2 $A2D2 92 91 92 82 74 E2 72 E2  ;
.byt    $92,$91                        ; 0x62ea $A2DA 92 91                    ;
LA2DC                                                                          ;
.byt    $42,$70,$F0,$31,$A4,$00,$A2,$00; 0x62ec $A2DC 42 70 F0 31 A4 00 A2 00  ;
.byt    $A2,$01,$A2,$00,$A2,$01,$A1,$01; 0x62f4 $A2E4 A2 01 A2 00 A2 01 A1 01  ;
.byt    $D3,$81,$91,$02,$91,$00,$92,$01; 0x62fc $A2EC D3 81 91 02 91 00 92 01  ;
.byt    $92,$00,$92,$01,$91,$01,$91,$01; 0x6304 $A2F4 92 00 92 01 91 01 91 01  ;
.byt    $91,$01,$91,$00,$D4,$82,$82,$00; 0x630c $A2FC 91 01 91 00 D4 82 82 00  ;
.byt    $82,$00,$82,$01,$D2,$81,$91,$02; 0x6314 $A304 82 00 82 01 D2 81 91 02  ;
.byt    $91,$01,$92                    ; 0x631c $A30C 91 01 92                 ;
LA30F                                                                          ;
.byt    $00,$D4,$80,$A2,$00,$A2        ; 0x631f $A30F 00 D4 80 A2 00 A2        ;
LA315                                                                          ;
.byt    $00,$A2,$02,$A2,$00,$A2,$01,$A1; 0x6325 $A315 00 A2 02 A2 00 A2 01 A1  ;
.byt    $01                            ; 0x632d $A31D 01                       ;
LA31E                                                                          ;
.byt    $20,$E0,$0D,$48,$D6,$0C,$A2,$2F; 0x632e $A31E 20 E0 0D 48 D6 0C A2 2F  ;
.byt    $D6,$0B,$92                    ; 0x6336 $A326 D6 0B 92                 ;
LA329                                                                          ;
.byt    $27,$D6,$0A,$A2,$2F,$90,$2F,$80; 0x6339 $A329 27 D6 0A A2 2F 90 2F 80  ;
.byt    $2F,$D6,$09                    ; 0x6341 $A331 2F D6 09                 ;
LA334                                                                          ;
.byt    $72,$27,$D6,$08                ; 0x6344 $A334 72 27 D6 08              ;
LA338                                                                          ;
.byt    $D2,$05,$00,$39,$DC,$06        ; 0x6348 $A338 D2 05 00 39 DC 06        ;
LA33E                                                                          ;
.byt    $24,$E0,$06,$48,$D8,$05,$02,$35; 0x634e $A33E 24 E0 06 48 D8 05 02 35  ;
.byt    $D6,$84,$00,$3F,$12,$3D,$D6,$83; 0x6356 $A346 D6 84 00 3F 12 3D D6 83  ;
.byt    $22,$35,$D6,$0A,$A0,$21,$90,$21; 0x635e $A34E 22 35 D6 0A A0 21 90 21  ;
.byt    $D2,$0B,$A0,$27,$90,$25,$D8,$0C; 0x6366 $A356 D2 0B A0 27 90 25 D8 0C  ;
.byt    $A0,$29,$DC,$0D                ; 0x636e $A35E A0 29 DC 0D              ;
LA362                                                                          ;
.byt    $36,$E0,$03,$48,$00,$33,$10,$33; 0x6372 $A362 36 E0 03 48 00 33 10 33  ;
.byt    $20,$33,$30,$33,$E1,$00,$D0,$02; 0x637a $A36A 20 33 30 33 E1 00 D0 02  ;
.byt    $81,$E1,$81,$E1,$82,$E1,$81,$E1; 0x6382 $A372 81 E1 81 E1 82 E1 81 E1  ;
.byt    $82,$E1,$81,$E1,$D2,$03,$DC,$02; 0x638a $A37A 82 E1 81 E1 D2 03 DC 02  ;
.byt    $81,$E1,$81,$E1,$82,$E1,$81,$E1; 0x6392 $A382 81 E1 81 E1 82 E1 81 E1  ;
.byt    $82,$E1,$81,$E1,$D2,$03,$0C,$33; 0x639a $A38A 82 E1 81 E1 D2 03 0C 33  ;
.byt    $10,$33,$20,$33,$30,$33        ; 0x63a2 $A392 10 33 20 33 30 33        ;
LA398                                                                          ;
.byt    $20,$E0,$0E,$48,$D2,$0B,$D5,$00; 0x63a8 $A398 20 E0 0E 48 D2 0B D5 00  ;
.byt    $D3,$02,$D2,$03,$D2,$00,$D8,$09; 0x63b0 $A3A0 D3 02 D2 03 D2 00 D8 09  ;
.byt    $D4,$0B,$D6,$09,$D8,$00,$94,$E2; 0x63b8 $A3A8 D4 0B D6 09 D8 00 94 E2  ;
.byt    $91,$E2,$D5,$09,$D8,$0B,$D4,$0E; 0x63c0 $A3B0 91 E2 D5 09 D8 0B D4 0E  ;
LA3B8                                                                          ;
.byt    $24,$E0,$05,$48,$DE,$00,$F0,$21; 0x63c8 $A3B8 24 E0 05 48 DE 00 F0 21  ;
.byt    $D2,$04,$D5,$00,$F0,$22,$D3,$04; 0x63d0 $A3C0 D2 04 D5 00 F0 22 D3 04  ;
.byt    $D8,$00,$F0,$22,$D3,$03,$D7,$05; 0x63d8 $A3C8 D8 00 F0 22 D3 03 D7 05  ;
.byt    $D8,$00,$F0,$22,$D3,$05,$D3,$00; 0x63e0 $A3D0 D8 00 F0 22 D3 05 D3 00  ;
.byt    $F0,$21,$D2,$06                ; 0x63e8 $A3D8 F0 21 D2 06              ;
LA3DC                                                                          ;
.byt    $2C,$E0,$0E,$48,$D4,$0B,$D4,$00; 0x63ec $A3DC 2C E0 0E 48 D4 0B D4 00  ;
.byt    $D4,$02,$D2,$04,$D2,$06,$D6,$04; 0x63f4 $A3E4 D4 02 D2 04 D2 06 D6 04  ;
.byt    $D2,$02,$D2,$00,$D2,$0A,$D2,$0C; 0x63fc $A3EC D2 02 D2 00 D2 0A D2 0C  ;
.byt    $D4,$0A,$D2,$00,$D2,$02,$D2,$04; 0x6404 $A3F4 D4 0A D2 00 D2 02 D2 04  ;
.byt    $D2,$06,$D6,$04,$D2,$02,$D2,$00; 0x640c $A3FC D2 06 D6 04 D2 02 D2 00  ;
.byt    $D4,$0B,$D4,$0E                ; 0x6414 $A404 D4 0B D4 0E              ;
LA408                                                                          ;
.byt    $2A,$E0,$06,$48,$00,$3D,$DA,$04; 0x6418 $A408 2A E0 06 48 00 3D DA 04  ;
.byt    $D2,$02,$D2,$08,$D6,$0E,$E2,$00; 0x6420 $A410 D2 02 D2 08 D6 0E E2 00  ;
.byt    $A5,$E1,$A1,$E1,$81,$08,$F0,$50; 0x6428 $A418 A5 E1 A1 E1 81 08 F0 50  ;
.byt    $81,$08,$A1,$E1,$A1,$E1,$D2,$0C; 0x6430 $A420 81 08 A1 E1 A1 E1 D2 0C  ;
.byt    $D2,$08,$D8,$02,$00,$39,$D2,$04; 0x6438 $A428 D2 08 D8 02 00 39 D2 04  ;
.byt    $D2,$06                        ; 0x6440 $A430 D2 06                    ;
LA432                                                                          ;
.byt    $26,$E0,$0E,$48,$D4,$09,$D4,$02; 0x6442 $A432 26 E0 0E 48 D4 09 D4 02  ;
.byt    $00,$33,$10,$33,$04,$37,$D8,$08; 0x644a $A43A 00 33 10 33 04 37 D8 08  ;
.byt    $D8,$0C,$D9,$0E,$02,$08,$F0,$50; 0x6452 $A442 D8 0C D9 0E 02 08 F0 50  ;
.byt    $B0,$E1,$01,$08,$B0,$E1,$D3,$0C; 0x645a $A44A B0 E1 01 08 B0 E1 D3 0C  ;
.byt    $D5,$09,$D8,$0C,$D4,$0E        ; 0x6462 $A452 D5 09 D8 0C D4 0E        ;
LA458                                                                          ;
.byt    $4C,$E0,$06,$48,$D8,$00,$F0,$21; 0x6468 $A458 4C E0 06 48 D8 00 F0 21  ;
.byt    $D2,$05,$D2,$00,$F0,$21,$D2,$05; 0x6470 $A460 D2 05 D2 00 F0 21 D2 05  ;
.byt    $D2,$00,$F0,$21,$D2,$04,$D2,$00; 0x6478 $A468 D2 00 F0 21 D2 04 D2 00  ;
.byt    $F0,$21,$D2,$04,$D2,$00,$F0,$21; 0x6480 $A470 F0 21 D2 04 D2 00 F0 21  ;
.byt    $D2,$03,$D2,$00,$F0,$21,$D2,$03; 0x6488 $A478 D2 03 D2 00 F0 21 D2 03  ;
.byt    $D4,$00,$F0,$21,$D2,$03,$D2,$00; 0x6490 $A480 D4 00 F0 21 D2 03 D2 00  ;
.byt    $F0,$21,$D2,$04,$D2,$00,$F0,$21; 0x6498 $A488 F0 21 D2 04 D2 00 F0 21  ;
.byt    $D2,$04,$D2,$00,$F0,$21,$D2,$05; 0x64a0 $A490 D2 04 D2 00 F0 21 D2 05  ;
.byt    $D2,$00,$F0,$21,$D2,$05,$D2,$00; 0x64a8 $A498 D2 00 F0 21 D2 05 D2 00  ;
.byt    $F0,$21,$D2,$06                ; 0x64b0 $A4A0 F0 21 D2 06              ;
LA4A4                                                                          ;
.byt    $1C,$E0,$06,$48,$DA,$04,$D2,$02; 0x64b4 $A4A4 1C E0 06 48 DA 04 D2 02  ;
.byt    $D2,$00,$66,$51,$64,$51,$64,$51; 0x64bc $A4AC D2 00 66 51 64 51 64 51  ;
.byt    $66,$51,$64,$51,$64,$51,$D8,$02; 0x64c4 $A4B4 66 51 64 51 64 51 D8 02  ;
.byt    $D2,$04,$D2,$06                ; 0x64cc $A4BC D2 04 D2 06              ;
LA4C0                                                                          ;
.byt    $14,$E0,$0E,$48,$D4,$09,$D8,$02; 0x64d0 $A4C0 14 E0 0E 48 D4 09 D8 02  ;
.byt    $DE,$04,$D4,$02,$D4,$09,$DA,$00; 0x64d8 $A4C8 DE 04 D4 02 D4 09 DA 00  ;
.byt    $DA,$09,$D6,$0E                ; 0x64e0 $A4D0 DA 09 D6 0E              ;
LA4D4                                                                          ;
.byt    $18,$60,$0E,$48,$D4,$08,$94,$F1; 0x64e4 $A4D4 18 60 0E 48 D4 08 94 F1  ;
.byt    $94,$F1,$94,$F1,$94,$F1,$94,$F1; 0x64ec $A4DC 94 F1 94 F1 94 F1 94 F1  ;
.byt    $D4,$0E,$D8,$08,$E3,$00,$DC,$0E; 0x64f4 $A4E4 D4 0E D8 08 E3 00 DC 0E  ;
LA4EC                                                                          ;
.byt    $19,$60,$0E,$48,$E2,$00,$D4,$00; 0x64fc $A4EC 19 60 0E 48 E2 00 D4 00  ;
.byt    $AC,$B7,$51,$F4,$52,$F4,$52,$F4; 0x6504 $A4F4 AC B7 51 F4 52 F4 52 F4  ;
.byt    $D3,$01,$D2,$02,$80,$0F,$06,$D4; 0x650c $A4FC D3 01 D2 02 80 0F 06 D4  ;
.byt    $0F                            ; 0x6514 $A504 0F                       ;
LA505                                                                          ;
.byt    $10,$01,$C2,$11,$96,$90,$98,$90; 0x6515 $A505 10 01 C2 11 96 90 98 90  ;
.byt    $92,$90,$98,$90,$98,$90,$92,$90; 0x651d $A50D 92 90 98 90 98 90 92 90  ;
LA515                                                                          ;
.byt    $16,$E0,$F1,$39,$DC,$83,$D2,$85; 0x6525 $A515 16 E0 F1 39 DC 83 D2 85  ;
.byt    $D2,$83,$D2,$81,$E2,$00,$DC,$83; 0x652d $A51D D2 83 D2 81 E2 00 DC 83  ;
.byt    $D4,$81,$D6,$83,$D2,$81        ; 0x6535 $A525 D4 81 D6 83 D2 81        ;
LA52B                                                                          ;
.byt    $10,$E0,$F0,$39,$D8,$81,$D8,$82; 0x653b $A52B 10 E0 F0 39 D8 81 D8 82  ;
.byt    $DC,$83,$D8,$84,$DC,$85,$D8,$86; 0x6543 $A533 DC 83 D8 84 DC 85 D8 86  ;
LA53B                                                                          ;
.byt    $24,$E0,$F1,$39,$D8,$83,$D2,$85; 0x654b $A53B 24 E0 F1 39 D8 83 D2 85  ;
.byt    $D2,$87,$D2,$85,$D2,$83,$D2,$81; 0x6553 $A543 D2 87 D2 85 D2 83 D2 81  ;
.byt    $DC,$83,$D4,$81,$D6,$83,$D2,$85; 0x655b $A54B DC 83 D4 81 D6 83 D2 85  ;
.byt    $D2,$83,$D2,$81,$D4,$83,$D2,$85; 0x6563 $A553 D2 83 D2 81 D4 83 D2 85  ;
.byt    $D2,$83,$D2,$81                ; 0x656b $A55B D2 83 D2 81              ;
LA55F                                                                          ;
.byt    $1F,$E0,$06,$48,$00,$37,$D4,$84; 0x656f $A55F 1F E0 06 48 00 37 D4 84  ;
.byt    $D2,$82,$10,$31,$20,$31,$D2,$0C; 0x6577 $A567 D2 82 10 31 20 31 D2 0C  ;
.byt    $D2,$0E,$D8,$0A,$D4,$80,$D4,$0A; 0x657f $A56F D2 0E D8 0A D4 80 D4 0A  ;
.byt    $E3,$00,$AC,$0F,$13,$D2,$0F    ; 0x6587 $A577 E3 00 AC 0F 13 D2 0F     ;
LA57E                                                                          ;
.byt    $1D,$E0,$06,$48,$00,$37,$D4,$84; 0x658e $A57E 1D E0 06 48 00 37 D4 84  ;
.byt    $D2,$82,$10,$31,$20,$31,$D2,$0C; 0x6596 $A586 D2 82 10 31 20 31 D2 0C  ;
.byt    $D2,$0E,$D8,$0A,$D4,$80,$D4,$0A; 0x659e $A58E D2 0E D8 0A D4 80 D4 0A  ;
.byt    $A2,$0F,$0E,$D2,$0F            ; 0x65a6 $A596 A2 0F 0E D2 0F           ;
LA59B                                                                          ;
.byt    $1B,$E0,$06,$48,$00,$37,$D4,$84; 0x65ab $A59B 1B E0 06 48 00 37 D4 84  ;
.byt    $D2,$82,$10,$31,$20,$31,$D2,$0C; 0x65b3 $A5A3 D2 82 10 31 20 31 D2 0C  ;
.byt    $A0,$2D,$90,$2D,$DE,$80,$A3,$0F; 0x65bb $A5AB A0 2D 90 2D DE 80 A3 0F  ;
.byt    $0E,$D1,$0F                    ; 0x65c3 $A5B3 0E D1 0F                 ;
LA5B6                                                                          ;
.byt    $40,$E0,$03,$48,$D4,$00,$80,$4B; 0x65c6 $A5B6 40 E0 03 48 D4 00 80 4B  ;
.byt    $F0,$2B,$06,$3F,$10,$3F,$24,$3B; 0x65ce $A5BE F0 2B 06 3F 10 3F 24 3B  ;
.byt    $30,$33,$40,$33,$82,$4F,$F0,$2F; 0x65d6 $A5C6 30 33 40 33 82 4F F0 2F  ;
.byt    $26,$33,$30,$33,$40,$33,$04,$31; 0x65de $A5CE 26 33 30 33 40 33 04 31  ;
.byt    $10,$31,$86,$4F,$F0,$2F,$04,$3B; 0x65e6 $A5D6 10 31 86 4F F0 2F 04 3B  ;
.byt    $10,$3B,$22,$37,$30,$37,$40,$37; 0x65ee $A5DE 10 3B 22 37 30 37 40 37  ;
.byt    $8A,$4B,$F0,$2B,$04,$37,$10,$37; 0x65f6 $A5E6 8A 4B F0 2B 04 37 10 37  ;
.byt    $22,$33,$30,$33,$40,$33,$D6,$03; 0x65fe $A5EE 22 33 30 33 40 33 D6 03  ;
LA5F6                                                                          ;
.byt    $56,$E0,$03,$48,$D4,$00,$80,$4B; 0x6606 $A5F6 56 E0 03 48 D4 00 80 4B  ;
.byt    $F0,$2B,$02,$37,$10,$37,$22,$33; 0x660e $A5FE F0 2B 02 37 10 37 22 33  ;
.byt    $32,$31,$40,$31,$86,$4D,$F0,$2D; 0x6616 $A606 32 31 40 31 86 4D F0 2D  ;
.byt    $02,$39                        ; 0x661e $A60E 02 39                    ;
LA610                                                                          ;
.byt    $10,$39,$20,$39,$32,$33,$40,$33; 0x6620 $A610 10 39 20 39 32 33 40 33  ;
.byt    $DA,$03,$D4,$01,$D2,$0E,$A0,$27; 0x6628 $A618 DA 03 D4 01 D2 0E A0 27  ;
.byt    $03,$08,$F0,$50,$A0,$E2,$01,$08; 0x6630 $A620 03 08 F0 50 A0 E2 01 08  ;
.byt    $A0,$E2,$D4,$0B,$A0,$E2,$A1,$E2; 0x6638 $A628 A0 E2 D4 0B A0 E2 A1 E2  ;
.byt    $81,$E4,$81,$E4,$D1,$00,$80,$4B; 0x6640 $A630 81 E4 81 E4 D1 00 80 4B  ;
.byt    $F0,$2B,$00,$33,$10,$33,$20,$31; 0x6648 $A638 F0 2B 00 33 10 33 20 31  ;
.byt    $30,$31,$08,$37,$10,$37,$22,$35; 0x6650 $A640 30 31 08 37 10 37 22 35  ;
.byt    $30,$35,$D2,$83                ; 0x6658 $A648 30 35 D2 83              ;
bank1_Death_Mountain_Overworld_Map_Data                                        ;
.byt    $FB,$7B,$FC,$FC,$7C,$FB,$6B,$FC; 0x665c $A64C FB 7B FC FC 7C FB 6B FC  ;
.byt    $FC,$8C,$FB,$6B,$FC,$FC,$8C,$FB; 0x6664 $A654 FC 8C FB 6B FC FC 8C FB  ;
.byt    $5B,$FC,$FC,$9C,$FB,$7B,$FC,$5C; 0x666c $A65C 5B FC FC 9C FB 7B FC 5C  ;
.byt    $1B,$FC,$FB,$8B,$FC,$2C,$5B,$DC; 0x6674 $A664 1B FC FB 8B FC 2C 5B DC  ;
.byt    $FB,$9B,$FC,$8B,$0C,$0B,$AC,$6B; 0x667c $A66C FB 9B FC 8B 0C 0B AC 6B  ;
.byt    $01,$EB,$01,$1B,$EC,$CB,$9C,$5B; 0x6684 $A674 01 EB 01 1B EC CB 9C 5B  ;
.byt    $19,$6B,$29,$2B,$29,$1B,$DC,$DB; 0x668c $A67C 19 6B 29 2B 29 1B DC DB  ;
.byt    $9C,$4B,$39,$4B,$01,$29,$1B,$49; 0x6694 $A684 9C 4B 39 4B 01 29 1B 49  ;
.byt    $EC,$EB,$8C,$4B,$39,$01,$5B,$19; 0x669c $A68C EC EB 8C 4B 39 01 5B 19  ;
.byt    $01,$0B,$19,$0B,$19,$EC,$0B,$C9; 0x66a4 $A694 01 0B 19 0B 19 EC 0B C9  ;
.byt    $0B,$8C,$3B,$01                ; 0x66ac $A69C 0B 8C 3B 01              ;
LA6A0                                                                          ;
.byt    $39,$AB,$49,$EC,$0B,$09,$8B,$09; 0x66b0 $A6A0 39 AB 49 EC 0B 09 8B 09  ;
.byt    $3B,$7C,$01,$4B,$2C,$1B,$01,$19; 0x66b8 $A6A8 3B 7C 01 4B 2C 1B 01 19  ;
.byt    $6B,$39,$DC,$1B,$C9,$2B,$6C,$19; 0x66c0 $A6B0 6B 39 DC 1B C9 2B 6C 19  ;
.byt    $9B,$39,$01,$6B,$09,$DC,$1B,$09; 0x66c8 $A6B8 9B 39 01 6B 09 DC 1B 09  ;
.byt    $6B,$09,$2B,$09,$3B,$5C,$29,$8B; 0x66d0 $A6C0 6B 09 2B 09 3B 5C 29 8B  ;
.byt    $39,$1B,$01,$4B,$09,$DC,$1B,$09; 0x66d8 $A6C8 39 1B 01 4B 09 DC 1B 09  ;
.byt    $0B,$49                        ; 0x66e0 $A6D0 0B 49                    ;
LA6D2                                                                          ;
.byt    $0B,$29,$0B,$09,$3B,$5C,$29,$01; 0x66e2 $A6D2 0B 29 0B 09 3B 5C 29 01  ;
.byt    $2B,$01,$9B,$16,$2B,$19,$DC,$1B; 0x66ea $A6DA 2B 01 9B 16 2B 19 DC 1B  ;
.byt    $09,$0B,$09,$2B,$09,$0B,$09,$0B; 0x66f2 $A6E2 09 0B 09 2B 09 0B 09 0B  ;
.byt    $09,$0B,$09,$4B,$4C,$5B,$19,$9B; 0x66fa $A6EA 09 0B 09 4B 4C 5B 19 9B  ;
.byt    $16,$1B,$19,$EC,$1B,$09,$0B,$29; 0x6702 $A6F2 16 1B 19 EC 1B 09 0B 29  ;
.byt    $0B,$29,$0B,$09,$0B,$09,$5B,$3C; 0x670a $A6FA 0B 29 0B 09 0B 09 5B 3C  ;
.byt    $4B,$01,$29,$01,$3B,$01,$1B,$29; 0x6712 $A702 4B 01 29 01 3B 01 1B 29  ;
.byt    $1B,$09,$EC,$2B,$09,$2B,$09,$0B; 0x671a $A70A 1B 09 EC 2B 09 2B 09 0B  ;
.byt    $09,$2B,$09,$0B,$09,$5B,$3C,$2B; 0x6722 $A712 09 2B 09 0B 09 5B 3C 2B  ;
.byt    $01,$1B,$29,$1B,$01,$29,$0B,$01; 0x672a $A71A 01 1B 29 1B 01 29 0B 01  ;
.byt    $29,$01,$0B,$19,$DC,$2B,$49,$0B; 0x6732 $A722 29 01 0B 19 DC 2B 49 0B  ;
.byt    $29,$0B,$09,$0B,$09,$6B,$2C,$1B; 0x673a $A72A 29 0B 09 0B 09 6B 2C 1B  ;
.byt    $19,$7B,$29,$1B,$19,$3B,$19,$CC; 0x6742 $A732 19 7B 29 1B 19 3B 19 CC  ;
.byt    $AB,$09,$0B,$09,$0B,$09,$7B,$1C; 0x674a $A73A AB 09 0B 09 0B 09 7B 1C  ;
.byt    $0B,$29,$6B,$29,$5B,$01,$2B,$19; 0x6752 $A742 0B 29 6B 29 5B 01 2B 19  ;
.byt    $BC,$2B,$89,$0B,$09,$0B,$09,$7B; 0x675a $A74A BC 2B 89 0B 09 0B 09 7B  ;
.byt    $1C,$39,$01,$4B,$01,$29,$5B,$19; 0x6762 $A752 1C 39 01 4B 01 29 5B 19  ;
.byt    $2B,$09,$BC,$2B,$09,$6B,$09,$0B; 0x676a $A75A 2B 09 BC 2B 09 6B 09 0B  ;
.byt    $09,$0B,$09,$7B,$1C,$29,$4B,$01; 0x6772 $A762 09 0B 09 7B 1C 29 4B 01  ;
.byt    $AB,$19,$01,$1B,$19,$AC,$2B,$69; 0x677a $A76A AB 19 01 1B 19 AC 2B 69  ;
.byt    $0B,$09,$0B,$69,$2B,$2C,$29,$2B; 0x6782 $A772 0B 09 0B 69 2B 2C 29 2B  ;
.byt    $39,$5B,$19,$7B,$19,$AC,$5B,$09; 0x678a $A77A 39 5B 19 7B 19 AC 5B 09  ;
.byt    $2B,$09,$6B,$09,$1B,$3C,$0B,$19; 0x6792 $A782 2B 09 6B 09 1B 3C 0B 19  ;
.byt    $1B,$01,$19,$0B,$19,$01,$1B,$01; 0x679a $A78A 1B 01 19 0B 19 01 1B 01  ;
.byt    $29,$1B,$01,$5B,$09,$BC,$0B,$29; 0x67a2 $A792 29 1B 01 5B 09 BC 0B 29  ;
.byt    $0B,$09,$0B,$49,$0B,$29,$0B,$09; 0x67aa $A79A 0B 09 0B 49 0B 29 0B 09  ;
.byt    $2B,$2C,$5B,$49,$4B,$06,$1B,$19; 0x67b2 $A7A2 2B 2C 5B 49 4B 06 1B 19  ;
.byt    $5B                            ; 0x67ba $A7AA 5B                       ;
LA7AB                                                                          ;
.byt    $09,$BC,$0B,$09,$0B,$09,$0B,$09; 0x67bb $A7AB 09 BC 0B 09 0B 09 0B 09  ;
.byt    $4B,$09,$2B,$09,$0B,$09,$4B,$0C; 0x67c3 $A7B3 4B 09 2B 09 0B 09 4B 0C  ;
.byt    $6B,$29,$7B,$39,$1B,$39,$AC,$1B; 0x67cb $A7BB 6B 29 7B 39 1B 39 AC 1B  ;
.byt    $09,$0B,$09,$0B,$49,$0B,$49,$0B; 0x67d3 $A7C3 09 0B 09 0B 49 0B 49 0B  ;
.byt    $09,$5B,$6B,$01,$3B,$19,$3B,$01; 0x67db $A7CB 09 5B 6B 01 3B 19 3B 01  ;
.byt    $3B,$39,$BC,$1B,$09,$0B,$09,$2B; 0x67e3 $A7D3 3B 39 BC 1B 09 0B 09 2B  ;
.byt    $09,$6B,$09,$0B,$09,$0B,$29,$1B; 0x67eb $A7DB 09 6B 09 0B 09 0B 29 1B  ;
.byt    $19,$9B,$29,$01,$6B,$39,$AC,$2B; 0x67f3 $A7E3 19 9B 29 01 6B 39 AC 2B  ;
.byt    $09,$0B,$A9,$0B,$09,$0B,$29,$02; 0x67fb $A7EB 09 0B A9 0B 09 0B 29 02  ;
.byt    $09,$1B,$29,$01,$6B,$39,$7B,$29; 0x6803 $A7F3 09 1B 29 01 6B 39 7B 29  ;
.byt    $BC,$2B,$09,$8B,$09,$0D,$03,$4D; 0x680b $A7FB BC 2B 09 8B 09 0D 03 4D  ;
.byt    $29,$1B,$0B,$19,$9B,$01,$2B,$01; 0x6813 $A803 29 1B 0B 19 9B 01 2B 01  ;
.byt    $5B,$01,$0B,$BC,$2B,$A9,$0D,$09; 0x681b $A80B 5B 01 0B BC 2B A9 0D 09  ;
.byt    $0B,$29,$5B,$FB,$0B,$19,$6B,$CC; 0x6823 $A813 0B 29 5B FB 0B 19 6B CC  ;
.byt    $AB,$2D,$09,$0B,$09,$7B,$FB,$29; 0x682b $A81B AB 2D 09 0B 09 7B FB 29  ;
.byt    $5B,$DC,$3B,$69,$0D,$29,$0B    ; 0x6833 $A823 5B DC 3B 69 0D 29 0B     ;
LA82A                                                                          ;
.byt    $29,$5B,$6B,$49,$5B,$01,$2B,$01; 0x683a $A82A 29 5B 6B 49 5B 01 2B 01  ;
.byt    $1B,$DC,$3B,$09                ; 0x6842 $A832 1B DC 3B 09              ;
LA836                                                                          ;
.byt    $4B,$09,$0D,$09,$4B,$09,$5B,$6B; 0x6846 $A836 4B 09 0D 09 4B 09 5B 6B  ;
.byt    $09,$0E,$09,$01,$19,$09,$5B,$24; 0x684e $A83E 09 0E 09 01 19 09 5B 24  ;
.byt    $FC,$0C,$2B,$49,$0B,$09,$03,$09; 0x6856 $A846 FC 0C 2B 49 0B 09 03 09  ;
.byt    $0B,$29,$0B,$09,$5B,$6B,$49,$0B; 0x685e $A84E 0B 29 0B 09 5B 6B 49 0B  ;
.byt    $09,$1B,$01,$2B,$14,$FC,$1C,$6D; 0x6866 $A856 09 1B 01 2B 14 FC 1C 6D  ;
.byt    $03,$2D,$09,$0B,$09,$0B,$09,$0B; 0x686e $A85E 03 2D 09 0B 09 0B 09 0B  ;
.byt    $09,$4B,$0C,$CB,$74,$FC,$3C,$1B; 0x6876 $A866 09 4B 0C CB 74 FC 3C 1B  ;
.byt    $09,$0B,$29,$0B,$29,$0B,$09,$0B; 0x687e $A86E 09 0B 29 0B 29 0B 09 0B  ;
.byt    $09,$0B,$09,$4B,$0C,$1B,$38,$6B; 0x6886 $A876 09 0B 09 4B 0C 1B 38 6B  ;
.byt    $74,$AC,$83,$29,$0B,$09,$2B,$09; 0x688e $A87E 74 AC 83 29 0B 09 2B 09  ;
.byt    $0B,$09,$0B,$09,$0B,$09,$0B,$09; 0x6896 $A886 0B 09 0B 09 0B 09 0B 09  ;
.byt    $3B,$1C,$1B,$38,$3B,$B4,$FC,$2C; 0x689e $A88E 3B 1C 1B 38 3B B4 FC 2C  ;
.byt    $1B,$09,$0B,$49,$0B,$29,$0B,$09; 0x68a6 $A896 1B 09 0B 49 0B 29 0B 09  ;
.byt    $0B,$09,$2B,$2C,$1B,$38,$F4,$FC; 0x68ae $A89E 0B 09 2B 2C 1B 38 F4 FC  ;
.byt    $2C,$1B,$09,$2B,$09,$6B,$09,$0B; 0x68b6 $A8A6 2C 1B 09 2B 09 6B 09 0B  ;
.byt    $09,$1B,$3C,$1B,$38,$94,$2C,$44; 0x68be $A8AE 09 1B 3C 1B 38 94 2C 44  ;
.byt    $FC,$0C,$1B,$E9,$2B,$2C,$5B,$56; 0x68c6 $A8B6 FC 0C 1B E9 2B 2C 5B 56  ;
.byt    $14,$4C,$04,$26,$04,$FC,$1C,$FB; 0x68ce $A8BE 14 4C 04 26 04 FC 1C FB  ;
.byt    $1B,$3C,$5B,$56,$14,$2C,$24,$1C; 0x68d6 $A8C6 1B 3C 5B 56 14 2C 24 1C  ;
.byt    $06,$04,$FC,$2C,$CB,$7C,$5B,$56; 0x68de $A8CE 06 04 FC 2C CB 7C 5B 56  ;
.byt    $34,$0C,$64,$FC,$2C,$AB,$9C,$5B; 0x68e6 $A8D6 34 0C 64 FC 2C AB 9C 5B  ;
.byt    $56,$34,$0C,$44,$FC,$5C,$2B,$0C; 0x68ee $A8DE 56 34 0C 44 FC 5C 2B 0C  ;
.byt    $4B,$AC,$BB,$FC,$FC,$FC,$3C,$BB; 0x68f6 $A8E6 4B AC BB FC FC FC 3C BB  ;
.byt    $FC,$FC,$FC,$3C,$BB,$FC,$FC,$FC; 0x68fe $A8EE FC FC FC 3C BB FC FC FC  ;
.byt    $3C,$BB,$FC,$FC,$FC,$3C,$BB,$FC; 0x6906 $A8F6 3C BB FC FC FC 3C BB FC  ;
.byt    $FC,$FC,$3C,$BB,$FC,$FC,$FC,$3C; 0x690e $A8FE FC FC 3C BB FC FC FC 3C  ;
.byt    $BB,$FC,$FC,$FC,$3C,$BB,$FC,$FC; 0x6916 $A906 BB FC FC FC 3C BB FC FC  ;
.byt    $FC,$3C,$BB,$FC,$FC,$FC,$3C,$BB; 0x691e $A90E FC 3C BB FC FC FC 3C BB  ;
.byt    $FC,$FC,$FC,$3C,$BB,$FC,$FC,$FC; 0x6926 $A916 FC FC FC 3C BB FC FC FC  ;
.byt    $3C,$BB,$FC,$FC,$FC,$3C,$BB,$FC; 0x692e $A91E 3C BB FC FC FC 3C BB FC  ;
.byt    $FC,$FC,$3C,$BB,$FC,$FC,$FC,$3C; 0x6936 $A926 FC FC 3C BB FC FC FC 3C  ;
.byt    $BB,$FC,$FC,$FC,$3C            ; 0x693e $A92E BB FC FC FC 3C           ;
bank1_UNUSED_A933                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6943 $A933 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x694b $A93B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6953 $A943 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x695b $A94B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6963 $A953 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x696b $A95B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6973 $A963 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x697b $A96B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6983 $A973 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x698b $A97B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6993 $A983 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x699b $A98B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69a3 $A993 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69ab $A99B FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69b3 $A9A3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69bb $A9AB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69c3 $A9B3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69cb $A9BB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69d3 $A9C3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69db $A9CB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69e3 $A9D3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69eb $A9DB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69f3 $A9E3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x69fb $A9EB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a03 $A9F3 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a0b $A9FB FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF            ; 0x6a13 $AA03 FF FF FF FF FF           ;
LAA08                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a18 $AA08 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a20 $AA10 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a28 $AA18 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a30 $AA20 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a38 $AA28 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a40 $AA30 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a48 $AA38 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a50 $AA40 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a58 $AA48 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a60 $AA50 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a68 $AA58 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a70 $AA60 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a78 $AA68 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a80 $AA70 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a88 $AA78 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a90 $AA80 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6a98 $AA88 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6aa0 $AA90 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6aa8 $AA98 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ab0 $AAA0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ab8 $AAA8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ac0 $AAB0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ac8 $AAB8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ad0 $AAC0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ad8 $AAC8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ae0 $AAD0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ae8 $AAD8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6af0 $AAE0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6af8 $AAE8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b00 $AAF0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b08 $AAF8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b10 $AB00 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b18 $AB08 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b20 $AB10 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b28 $AB18 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b30 $AB20 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b38 $AB28 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b40 $AB30 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b48 $AB38 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b50 $AB40 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b58 $AB48 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b60 $AB50 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b68 $AB58 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b70 $AB60 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b78 $AB68 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b80 $AB70 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b88 $AB78 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b90 $AB80 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6b98 $AB88 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ba0 $AB90 FF FF FF FF FF FF FF FF  ;
bank1_Enemy_Routines1_unknown0                                                 ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ba8 $AB98 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bb0 $ABA0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bb8 $ABA8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bc0 $ABB0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bc8 $ABB8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bd0 $ABC0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bd8 $ABC8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6be0 $ABD0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6be8 $ABD8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bf0 $ABE0 FF FF FF FF FF FF FF FF  ; A = 30
.byt    $FF                            ; 0x6bf8 $ABE8 FF                       ;
bank1_Enemy_Routines1_unknown1                                                 ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6bf9 $ABE9 FF FF FF FF FF FF FF FF  ; A = D0
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c01 $ABF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c09 $ABF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c11 $AC01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c19 $AC09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c21 $AC11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c29 $AC19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c31 $AC21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c39 $AC29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c41 $AC31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c49 $AC39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c51 $AC41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c59 $AC49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c61 $AC51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c69 $AC59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c71 $AC61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c79 $AC69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c81 $AC71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c89 $AC79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c91 $AC81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6c99 $AC89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ca1 $AC91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ca9 $AC99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cb1 $ACA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cb9 $ACA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cc1 $ACB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cc9 $ACB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cd1 $ACC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cd9 $ACC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ce1 $ACD1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ce9 $ACD9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cf1 $ACE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6cf9 $ACE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d01 $ACF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d09 $ACF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d11 $AD01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d19 $AD09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d21 $AD11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d29 $AD19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d31 $AD21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d39 $AD29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d41 $AD31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d49 $AD39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d51 $AD41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d59 $AD49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d61 $AD51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d69 $AD59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d71 $AD61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d79 $AD69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d81 $AD71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d89 $AD79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d91 $AD81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6d99 $AD89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6da1 $AD91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6da9 $AD99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6db1 $ADA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6db9 $ADA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6dc1 $ADB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6dc9 $ADB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6dd1 $ADC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6dd9 $ADC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6de1 $ADD1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6de9 $ADD9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6df1 $ADE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6df9 $ADE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e01 $ADF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e09 $ADF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e11 $AE01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e19 $AE09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e21 $AE11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e29 $AE19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e31 $AE21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e39 $AE29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e41 $AE31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e49 $AE39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e51 $AE41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e59 $AE49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e61 $AE51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e69 $AE59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e71 $AE61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e79 $AE69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e81 $AE71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e89 $AE79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e91 $AE81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6e99 $AE89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ea1 $AE91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ea9 $AE99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6eb1 $AEA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6eb9 $AEA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ec1 $AEB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ec9 $AEB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ed1 $AEC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ed9 $AEC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ee1 $AED1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ee9 $AED9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ef1 $AEE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ef9 $AEE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f01 $AEF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f09 $AEF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f11 $AF01 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f19 $AF09 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f21 $AF11 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f29 $AF19 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f31 $AF21 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f39 $AF29 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f41 $AF31 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f49 $AF39 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f51 $AF41 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f59 $AF49 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f61 $AF51 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f69 $AF59 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f71 $AF61 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f79 $AF69 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f81 $AF71 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f89 $AF79 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f91 $AF81 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6f99 $AF89 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fa1 $AF91 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fa9 $AF99 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fb1 $AFA1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fb9 $AFA9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fc1 $AFB1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fc9 $AFB9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fd1 $AFC1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fd9 $AFC9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fe1 $AFD1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6fe9 $AFD9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ff1 $AFE1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x6ff9 $AFE9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7001 $AFF1 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7009 $AFF9 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7011 $B001 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7019 $B009 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7021 $B011 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7029 $B019 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7031 $B021 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7039 $B029 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7041 $B031 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7049 $B039 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7051 $B041 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7059 $B049 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7061 $B051 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7069 $B059 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7071 $B061 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7079 $B069 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7081 $B071 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7089 $B079 FF FF FF FF FF FF FF FF  ;
.byt    $FF                            ; 0x7091 $B081 FF                       ;
LB082                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7092 $B082 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x709a $B08A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70a2 $B092 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70aa $B09A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70b2 $B0A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70ba $B0AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70c2 $B0B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70ca $B0BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70d2 $B0C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70da $B0CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70e2 $B0D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70ea $B0DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70f2 $B0E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x70fa $B0EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7102 $B0F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x710a $B0FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7112 $B102 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x711a $B10A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7122 $B112 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x712a $B11A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7132 $B122 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x713a $B12A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7142 $B132 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x714a $B13A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7152 $B142 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x715a $B14A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7162 $B152 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x716a $B15A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7172 $B162 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x717a $B16A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7182 $B172 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x718a $B17A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7192 $B182 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x719a $B18A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71a2 $B192 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71aa $B19A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71b2 $B1A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71ba $B1AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71c2 $B1B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71ca $B1BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71d2 $B1C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71da $B1CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71e2 $B1D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71ea $B1DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71f2 $B1E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x71fa $B1EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7202 $B1F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x720a $B1FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7212 $B202 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x721a $B20A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7222 $B212 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x722a $B21A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7232 $B222 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x723a $B22A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7242 $B232 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x724a $B23A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7252 $B242 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x725a $B24A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7262 $B252 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x726a $B25A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7272 $B262 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x727a $B26A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7282 $B272 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x728a $B27A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7292 $B282 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x729a $B28A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72a2 $B292 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72aa $B29A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72b2 $B2A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72ba $B2AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72c2 $B2B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72ca $B2BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72d2 $B2C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72da $B2CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72e2 $B2D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72ea $B2DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72f2 $B2E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x72fa $B2EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7302 $B2F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x730a $B2FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7312 $B302 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x731a $B30A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7322 $B312 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x732a $B31A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7332 $B322 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x733a $B32A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7342 $B332 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x734a $B33A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7352 $B342 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x735a $B34A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7362 $B352 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x736a $B35A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7372 $B362 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x737a $B36A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7382 $B372 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x738a $B37A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7392 $B382 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x739a $B38A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73a2 $B392 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73aa $B39A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73b2 $B3A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73ba $B3AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73c2 $B3B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73ca $B3BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73d2 $B3C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73da $B3CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73e2 $B3D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73ea $B3DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73f2 $B3E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x73fa $B3EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7402 $B3F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x740a $B3FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7412 $B402 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x741a $B40A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7422 $B412 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x742a $B41A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7432 $B422 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x743a $B42A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7442 $B432 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x744a $B43A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7452 $B442 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x745a $B44A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7462 $B452 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x746a $B45A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7472 $B462 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x747a $B46A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7482 $B472 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x748a $B47A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7492 $B482 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x749a $B48A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74a2 $B492 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74aa $B49A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74b2 $B4A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74ba $B4AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74c2 $B4B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74ca $B4BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74d2 $B4C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74da $B4CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74e2 $B4D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74ea $B4DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74f2 $B4E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x74fa $B4EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7502 $B4F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x750a $B4FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7512 $B502 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x751a $B50A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7522 $B512 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x752a $B51A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7532 $B522 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x753a $B52A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7542 $B532 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x754a $B53A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7552 $B542 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x755a $B54A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7562 $B552 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x756a $B55A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7572 $B562 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x757a $B56A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7582 $B572 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x758a $B57A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7592 $B582 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x759a $B58A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75a2 $B592 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75aa $B59A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75b2 $B5A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75ba $B5AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75c2 $B5B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75ca $B5BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75d2 $B5C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75da $B5CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75e2 $B5D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75ea $B5DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75f2 $B5E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x75fa $B5EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7602 $B5F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x760a $B5FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7612 $B602 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x761a $B60A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7622 $B612 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x762a $B61A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7632 $B622 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x763a $B62A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7642 $B632 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x764a $B63A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7652 $B642 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x765a $B64A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7662 $B652 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x766a $B65A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7672 $B662 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x767a $B66A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7682 $B672 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x768a $B67A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7692 $B682 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x769a $B68A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76a2 $B692 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76aa $B69A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76b2 $B6A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76ba $B6AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76c2 $B6B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76ca $B6BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76d2 $B6C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76da $B6CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76e2 $B6D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76ea $B6DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76f2 $B6E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x76fa $B6EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7702 $B6F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x770a $B6FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7712 $B702 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x771a $B70A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7722 $B712 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x772a $B71A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7732 $B722 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x773a $B72A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7742 $B732 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x774a $B73A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7752 $B742 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x775a $B74A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7762 $B752 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x776a $B75A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7772 $B762 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x777a $B76A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7782 $B772 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x778a $B77A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7792 $B782 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x779a $B78A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77a2 $B792 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77aa $B79A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77b2 $B7A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77ba $B7AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77c2 $B7B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77ca $B7BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77d2 $B7C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77da $B7CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77e2 $B7D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77ea $B7DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77f2 $B7E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x77fa $B7EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7802 $B7F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x780a $B7FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7812 $B802 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x781a $B80A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7822 $B812 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x782a $B81A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7832 $B822 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x783a $B82A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7842 $B832 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x784a $B83A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7852 $B842 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x785a $B84A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7862 $B852 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x786a $B85A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7872 $B862 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x787a $B86A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7882 $B872 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x788a $B87A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7892 $B882 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x789a $B88A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78a2 $B892 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78aa $B89A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78b2 $B8A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78ba $B8AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78c2 $B8B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78ca $B8BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78d2 $B8C2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78da $B8CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78e2 $B8D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78ea $B8DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78f2 $B8E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x78fa $B8EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7902 $B8F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x790a $B8FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7912 $B902 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x791a $B90A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7922 $B912 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x792a $B91A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7932 $B922 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x793a $B92A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7942 $B932 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x794a $B93A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7952 $B942 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x795a $B94A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7962 $B952 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x796a $B95A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7972 $B962 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x797a $B96A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7982 $B972 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x798a $B97A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7992 $B982 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x799a $B98A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79a2 $B992 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79aa $B99A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79b2 $B9A2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79ba $B9AA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79c2 $B9B2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79ca $B9BA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79d2 $B9C2 FF FF FF FF FF FF FF FF  ;
LB9CA                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79da $B9CA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79e2 $B9D2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79ea $B9DA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79f2 $B9E2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x79fa $B9EA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a02 $B9F2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a0a $B9FA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a12 $BA02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a1a $BA0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a22 $BA12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a2a $BA1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a32 $BA22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a3a $BA2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a42 $BA32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a4a $BA3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a52 $BA42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a5a $BA4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a62 $BA52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a6a $BA5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a72 $BA62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a7a $BA6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a82 $BA72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a8a $BA7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a92 $BA82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7a9a $BA8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7aa2 $BA92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7aaa $BA9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ab2 $BAA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7aba $BAAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ac2 $BAB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7aca $BABA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ad2 $BAC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ada $BACA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ae2 $BAD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7aea $BADA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7af2 $BAE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7afa $BAEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b02 $BAF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b0a $BAFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b12 $BB02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b1a $BB0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b22 $BB12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b2a $BB1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b32 $BB22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b3a $BB2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b42 $BB32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b4a $BB3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b52 $BB42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b5a $BB4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b62 $BB52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b6a $BB5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b72 $BB62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b7a $BB6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b82 $BB72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b8a $BB7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b92 $BB82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7b9a $BB8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ba2 $BB92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7baa $BB9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bb2 $BBA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bba $BBAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bc2 $BBB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bca $BBBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bd2 $BBC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bda $BBCA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7be2 $BBD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bea $BBDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bf2 $BBE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7bfa $BBEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c02 $BBF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c0a $BBFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c12 $BC02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c1a $BC0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c22 $BC12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c2a $BC1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c32 $BC22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c3a $BC2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c42 $BC32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c4a $BC3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c52 $BC42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c5a $BC4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c62 $BC52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c6a $BC5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c72 $BC62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c7a $BC6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c82 $BC72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c8a $BC7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c92 $BC82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7c9a $BC8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ca2 $BC92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7caa $BC9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cb2 $BCA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cba $BCAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cc2 $BCB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cca $BCBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cd2 $BCC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cda $BCCA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ce2 $BCD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cea $BCDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cf2 $BCE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7cfa $BCEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d02 $BCF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d0a $BCFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d12 $BD02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d1a $BD0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d22 $BD12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d2a $BD1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d32 $BD22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d3a $BD2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d42 $BD32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d4a $BD3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d52 $BD42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d5a $BD4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d62 $BD52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d6a $BD5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d72 $BD62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d7a $BD6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d82 $BD72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d8a $BD7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d92 $BD82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7d9a $BD8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7da2 $BD92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7daa $BD9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7db2 $BDA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7dba $BDAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7dc2 $BDB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7dca $BDBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7dd2 $BDC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7dda $BDCA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7de2 $BDD2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7dea $BDDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7df2 $BDE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7dfa $BDEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e02 $BDF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e0a $BDFA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e12 $BE02 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e1a $BE0A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e22 $BE12 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e2a $BE1A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e32 $BE22 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e3a $BE2A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e42 $BE32 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e4a $BE3A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e52 $BE42 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e5a $BE4A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e62 $BE52 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e6a $BE5A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e72 $BE62 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e7a $BE6A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e82 $BE72 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e8a $BE7A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e92 $BE82 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7e9a $BE8A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ea2 $BE92 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7eaa $BE9A FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7eb2 $BEA2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7eba $BEAA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ec2 $BEB2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7eca $BEBA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ed2 $BEC2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7eda $BECA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ee2 $BED2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7eea $BEDA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ef2 $BEE2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7efa $BEEA FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f02 $BEF2 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0x7f0a $BEFA FF FF FF FF FF FF        ;
LBF00                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f10 $BF00 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f18 $BF08 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f20 $BF10 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f28 $BF18 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f30 $BF20 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f38 $BF28 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f40 $BF30 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f48 $BF38 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f50 $BF40 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f58 $BF48 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f60 $BF50 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f68 $BF58 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f70 $BF60 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7f78 $BF68 FF FF FF FF FF FF FF FF  ;
; ---------------------------------------------------------------------------- ;
bank1_codeEND                                                                  ;
sei                                    ; 0x7f80 $BF70 78                       ;
cld                                    ; 0x7f81 $BF71 D8                       ;
ldx      #$00                          ; 0x7f82 $BF72 A2 00                    ; X = 00
stx      $2000                         ; 0x7f84 $BF74 8E 00 20                 ;
inx                                    ; 0x7f87 $BF77 E8                       ;
LBF78                                                                          ;
lda      $2002                         ; 0x7f88 $BF78 AD 02 20                 ;
bpl      LBF78                         ; 0x7f8b $BF7B 10 FB                    ;
dex                                    ; 0x7f8d $BF7D CA                       ;
beq      LBF78                         ; 0x7f8e $BF7E F0 F8                    ;
txs                                    ; 0x7f90 $BF80 9A                       ;
stx      bank1_Pointer_table_for_Background_Areas_Data; 0x7f91 $BF81 8E 00 80  ;
stx      bank1_Area_Pointers_Death_Mountain; 0x7f94 $BF84 8E 00 A0             ;
stx      bank7_PowerON_code            ; 0x7f97 $BF87 8E 00 C0                 ;
stx      LE000                         ; 0x7f9a $BF8A 8E 00 E0                 ;
lda      #$0F                          ; 0x7f9d $BF8D A9 0F                    ; A = 0F
jsr      LBF9D                         ; 0x7f9f $BF8F 20 9D BF                 ;
jsr      LBFB1                         ; 0x7fa2 $BF92 20 B1 BF                 ;
lda      #$07                          ; 0x7fa5 $BF95 A9 07                    ; A = 07
jsr      LBFCC                         ; 0x7fa7 $BF97 20 CC BF                 ;
jmp      bank7_PowerON_code            ; 0x7faa $BF9A 4C 00 C0                 ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBF9D                                                                          ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x7fad $BF9D 8D 00 80  ;
lsr                                    ; 0x7fb0 $BFA0 4A                       ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x7fb1 $BFA1 8D 00 80  ;
lsr                                    ; 0x7fb4 $BFA4 4A                       ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x7fb5 $BFA5 8D 00 80  ;
lsr                                    ; 0x7fb8 $BFA8 4A                       ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x7fb9 $BFA9 8D 00 80  ;
lsr                                    ; 0x7fbc $BFAC 4A                       ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x7fbd $BFAD 8D 00 80  ;
rts                                    ; 0x7fc0 $BFB0 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBFB1                                                                          ;
sta      bank1_Area_Pointers_Death_Mountain; 0x7fc1 $BFB1 8D 00 A0             ;
lsr                                    ; 0x7fc4 $BFB4 4A                       ;
sta      bank1_Area_Pointers_Death_Mountain; 0x7fc5 $BFB5 8D 00 A0             ;
lsr                                    ; 0x7fc8 $BFB8 4A                       ;
sta      bank1_Area_Pointers_Death_Mountain; 0x7fc9 $BFB9 8D 00 A0             ;
lsr                                    ; 0x7fcc $BFBC 4A                       ;
sta      bank1_Area_Pointers_Death_Mountain; 0x7fcd $BFBD 8D 00 A0             ;
lsr                                    ; 0x7fd0 $BFC0 4A                       ;
sta      bank1_Area_Pointers_Death_Mountain; 0x7fd1 $BFC1 8D 00 A0             ;
rts                                    ; 0x7fd4 $BFC4 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$00                          ; 0x7fd5 $BFC5 A9 00                    ; A = 00
beq      LBFCC                         ; 0x7fd7 $BFC7 F0 03                    ;
lda      $0769                         ; 0x7fd9 $BFC9 AD 69 07                 ;; Bank to switch to (other than 0 or 7)
LBFCC                                                                          ;
sta      LE000                         ; 0x7fdc $BFCC 8D 00 E0                 ;
lsr                                    ; 0x7fdf $BFCF 4A                       ;
sta      LE000                         ; 0x7fe0 $BFD0 8D 00 E0                 ;
lsr                                    ; 0x7fe3 $BFD3 4A                       ;
sta      LE000                         ; 0x7fe4 $BFD4 8D 00 E0                 ;
lsr                                    ; 0x7fe7 $BFD7 4A                       ;
sta      LE000                         ; 0x7fe8 $BFD8 8D 00 E0                 ;
lsr                                    ; 0x7feb $BFDB 4A                       ;
sta      LE000                         ; 0x7fec $BFDC 8D 00 E0                 ;
rts                                    ; 0x7fef $BFDF 60                       ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank1_tableEND                                                                 ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ff0 $BFE0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x7ff8 $BFE8 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x8000 $BFF0 FF FF FF FF FF FF FF FF  ;
.byt    $FF,$FF,$7B,$C0,$70,$BF,$F0,$FF; 0x8008 $BFF8 FF FF 7B C0 70 BF F0 FF  ;
; ---------------------------------------------------------------------------- ;
bank7_PowerON_code                                                             ;
lda      #$00                          ; 0x1c010 $C000 A9 00                   ; A = 00
sta      $2001                         ; 0x1c012 $C002 8D 01 20                ;
sta      $2000                         ; 0x1c015 $C005 8D 00 20                ;
lda      #$05                          ; 0x1c018 $C008 A9 05                   ;;A = #$05 0000_0101
jsr      LFFCC                         ; 0x1c01a $C00A 20 CC FF                ; Load Bank 5
jsr      LA6A0                         ; 0x1c01d $C00D 20 A0 A6                ;
LC010                                                                          ;
lda      $0736                         ; 0x1c020 $C010 AD 36 07                ; Game Mode
cmp      #$08                          ; 0x1c023 $C013 C9 08                   ;
beq      LC01B                         ; 0x1c025 $C015 F0 04                   ;
cmp      #$14                          ; 0x1c027 $C017 C9 14                   ;
bne      LC010                         ; 0x1c029 $C019 D0 F5                   ;
LC01B                                                                          ;
lda      $076C                         ; 0x1c02b $C01B AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
cmp      #$01                          ; 0x1c02e $C01E C9 01                   ;
bne      LC010                         ; 0x1c030 $C020 D0 EE                   ;
lda      #$40                          ; 0x1c032 $C022 A9 40                   ;;A = #$40 0100_0000
sta      $0100                         ; 0x1c034 $C024 8D 00 01                ;
jsr      bank7_code13                  ; 0x1c037 $C027 20 CB C4                ;
lda      #$C0                          ; 0x1c03a $C02A A9 C0                   ;;A = #$c0 1100_0000
sta      $0100                         ; 0x1c03c $C02C 8D 00 01                ;
jmp      LC010                         ; 0x1c03f $C02F 4C 10 C0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$06                          ; 0x1c042 $C032 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c044 $C034 20 CC FF                ;
jsr      bank1_Pointer_table_for_Background_Areas_Data; 0x1c047 $C037 20 00 80 ;
jmp      LC388                         ; 0x1c04a $C03A 4C 88 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_PPU_Adresses_according_to_725_as_index                                   ;
.word    L0302                         ; 0x1c04d $C03D 02 03                   ;; Used when writing text to screen
.word    L0363                         ; 0x1c04f $C03F 63 03                   ;
.word    L03A4                         ; 0x1c051 $C041 A4 03                   ;
.word    bank7_Table_for_some_Palettes ; 0x1c053 $C043 BD D0                   ;Some Palettes
.word    L696C                         ; 0x1c055 $C045 6C 69                   ;
.word    L80C9                         ; 0x1c057 $C047 C9 80                   ;Game Over Palettes
.word    LA836                         ; 0x1c059 $C049 36 A8                   ;Some Palettes
.word    bank7_Tables_for_some_PPU_Command_Data; 0x1c05b $C04B D1 D0           ;Some PPU Commands			;status bar text at top of screen ATTACK MAGIC LIFE ETC			;1C05B	is D1D0 ($D0D1)
.word    bank7_Continue_Save_Screen_Tile_Mappings; 0x1c05d $C04D CB FD         ;
.word    bank1_Pointer_table_for_Background_Areas_Data; 0x1c05f $C04F 00 80    ;Game Over PPU Macros
.word    bank7_Table_for_Overworld_Palettes; 0x1c061 $C051 58 C4               ;Overworld Palettes
.word    bank7_PPU_Macros_for_Hidden_Palace; 0x1c063 $C053 6A DF               ;
.word    bank7_table9                  ; 0x1c065 $C055 49 C4                   ;
.word    bank7_table10                 ; 0x1c067 $C057 7C C4                   ;
.word    LC490                         ; 0x1c069 $C059 90 C4                   ;
.word    LDCD3                         ; 0x1c06b $C05B D3 DC                   ;
; ---------------------------------------------------------------------------- ;
bank7_table0                                                                   ;
.byt    $00,$61,$A2                    ; 0x1c06d $C05D 00 61 A2                ;Memory Addresses Offsets (from 301) for PPU Macro Commands ?
; ---------------------------------------------------------------------------- ;
bank7_code1                                                                    ;
pha                                    ; 0x1c070 $C060 48                      ;
txa                                    ; 0x1c071 $C061 8A                      ;
pha                                    ; 0x1c072 $C062 48                      ;
tya                                    ; 0x1c073 $C063 98                      ;
pha                                    ; 0x1c074 $C064 48                      ;
lda      #$06                          ; 0x1c075 $C065 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c077 $C067 20 CC FF                ; Load Bank 6
jsr      L9000                         ; 0x1c07a $C06A 20 00 90                ; Play Sounds
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c07d $C06D 20 C9 FF                ; Load Bank X at 0x8000 (X = $0769)
pla                                    ; 0x1c080 $C070 68                      ;
tay                                    ; 0x1c081 $C071 A8                      ;
pla                                    ; 0x1c082 $C072 68                      ;
tax                                    ; 0x1c083 $C073 AA                      ;
pla                                    ; 0x1c084 $C074 68                      ;
plp                                    ; 0x1c085 $C075 28                      ;
rti                                    ; 0x1c086 $C076 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC077                                                                          ;
plp                                    ; 0x1c087 $C077 28                      ;
jmp      LA610                         ; 0x1c088 $C078 4C 10 A6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_NMI_Entry_Point                                                          ;
php                                    ; 0x1c08b $C07B 08                      ;
bit      $0100                         ; 0x1c08c $C07C 2C 00 01                ;
bpl      bank7_code1                   ; 0x1c08f $C07F 10 DF                   ; Switch to Bank 6, Play Sounds
bvc      LC077                         ; 0x1c091 $C081 50 F4                   ;
plp                                    ; 0x1c093 $C083 28                      ;
pha                                    ; 0x1c094 $C084 48                      ;
lda      $FF                           ; 0x1c095 $C085 A5 FF                   ;; Sprite Bank ?
and      #$7C                          ; 0x1c097 $C087 29 7C                   ; keep bits .xxx xx..
ora      $0747                         ; 0x1c099 $C089 0D 47 07                ;
sta      $FF                           ; 0x1c09c $C08C 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c09e $C08E 8D 00 20                ; PPU Control Register 1
lda      $0727                         ; 0x1c0a1 $C091 AD 27 07                ;
beq      LC096                         ; 0x1c0a4 $C094 F0 00                   ; useless branching
LC096                                                                          ;
ldy      #$00                          ; 0x1c0a6 $C096 A0 00                   ; Y = 00
lda      $FE                           ; 0x1c0a8 $C098 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
and      #$E0                          ; 0x1c0aa $C09A 29 E0                   ; keep bits xxx. ....
ldy      $0726                         ; 0x1c0ac $C09C AC 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
bne      LC0A8                         ; 0x1c0af $C09F D0 07                   ;
lda      $FE                           ; 0x1c0b1 $C0A1 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
ora      #$18                          ; 0x1c0b3 $C0A3 09 18                   ; set bits  ...x x...
ora      $0768                         ; 0x1c0b5 $C0A5 0D 68 07                ;;makes weird ppu effect
LC0A8                                                                          ;
sta      $FE                           ; 0x1c0b8 $C0A8 85 FE                   ;;does interesting effects when changed, perhaps involves palette? 
and      #$E1                          ; 0x1c0ba $C0AA 29 E1                   ; keep bits xxx. ...x
sta      $2001                         ; 0x1c0bc $C0AC 8D 01 20                ; PPU Control Register 2
ldx      $2002                         ; 0x1c0bf $C0AF AE 02 20                ; PPU Status Register
lda      #$00                          ; 0x1c0c2 $C0B2 A9 00                   ; A = 00
sta      $2005                         ; 0x1c0c4 $C0B4 8D 05 20                ; Screen Scroll Offsets
sta      $2005                         ; 0x1c0c7 $C0B7 8D 05 20                ;
sta      $2003                         ; 0x1c0ca $C0BA 8D 03 20                ; Sprite Memory Address
lda      #$02                          ; 0x1c0cd $C0BD A9 02                   ; A = 02
sta      $4014                         ; 0x1c0cf $C0BF 8D 14 40                ; DMA Sprite Memory ($100 * 02)
lda      $07AE                         ; 0x1c0d2 $C0C2 AD AE 07                ;
beq      LC0CA                         ; 0x1c0d5 $C0C5 F0 03                   ;
jsr      bank7_code52                  ; 0x1c0d7 $C0C7 20 82 FD                ; related to palette loading (side view)
LC0CA                                                                          ;
lda      $0725                         ; 0x1c0da $C0CA AD 25 07                ;; PPU Macro Selector	
asl                                    ; 0x1c0dd $C0CD 0A                      ;
tax                                    ; 0x1c0de $C0CE AA                      ;
lda      bank7_PPU_Adresses_according_to_725_as_index,x; 0x1c0df $C0CF BD 3D C0; refer to table at $1C03D
sta      L0000                         ; 0x1c0e2 $C0D2 85 00                   ;
lda      bank7_PPU_Adresses_according_to_725_as_index+$01,x; 0x1c0e4 $C0D4 BD 3E C0; refer to table at $1C03D
sta      $01                           ; 0x1c0e7 $C0D7 85 01                   ;
jsr      LD2EC                         ; 0x1c0e9 $C0D9 20 EC D2                ;
lda      #$3F                          ; 0x1c0ec $C0DC A9 3F                   ; A = 3F
sta      $2006                         ; 0x1c0ee $C0DE 8D 06 20                ; PPU Memory Address
ldy      #$00                          ; 0x1c0f1 $C0E1 A0 00                   ; Y = 00
sty      $2006                         ; 0x1c0f3 $C0E3 8C 06 20                ; PPU Memory Address
sty      $2006                         ; 0x1c0f6 $C0E6 8C 06 20                ; PPU Memory Address
sty      $2006                         ; 0x1c0f9 $C0E9 8C 06 20                ; PPU Memory Address
lda      $0768                         ; 0x1c0fc $C0EC AD 68 07                ;;makes weird ppu effect
bne      LC103                         ; 0x1c0ff $C0EF D0 12                   ;
lda      $FF                           ; 0x1c101 $C0F1 A5 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c103 $C0F3 8D 00 20                ; PPU Control Register 1
ldx      $2002                         ; 0x1c106 $C0F6 AE 02 20                ; PPU Status Register
lda      $FD                           ; 0x1c109 $C0F9 A5 FD                   ;
sta      $2005                         ; 0x1c10b $C0FB 8D 05 20                ; Screen Scroll Offsets
lda      $FC                           ; 0x1c10e $C0FE A5 FC                   ;
sta      $2005                         ; 0x1c110 $C100 8D 05 20                ; Screen Scroll Offsets
LC103                                                                          ;
lda      $FE                           ; 0x1c113 $C103 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
sta      $2001                         ; 0x1c115 $C105 8D 01 20                ; PPU Control Register 2
ldx      $0725                         ; 0x1c118 $C108 AE 25 07                ;; PPU Macro Selector	
beq      LC11C                         ; 0x1c11b $C10B F0 0F                   ;
iny                                    ; 0x1c11d $C10D C8                      ;
cpx      #$01                          ; 0x1c11e $C10E E0 01                   ;
beq      LC119                         ; 0x1c120 $C110 F0 07                   ;
iny                                    ; 0x1c122 $C112 C8                      ;
lda      #$00                          ; 0x1c123 $C113 A9 00                   ; A = 00
cpx      #$02                          ; 0x1c125 $C115 E0 02                   ;
bne      LC12C                         ; 0x1c127 $C117 D0 13                   ;
LC119                                                                          ;
dec      $0725                         ; 0x1c129 $C119 CE 25 07                ;; PPU Macro Selector	
LC11C                                                                          ;
ldx      bank7_table0,y                ; 0x1c12c $C11C BE 5D C0                ;
lda      #$00                          ; 0x1c12f $C11F A9 00                   ; A = 00
sta      $0301,x                       ; 0x1c131 $C121 9D 01 03                ;
lda      #$FF                          ; 0x1c134 $C124 A9 FF                   ; A = FF
sta      L0302,x                       ; 0x1c136 $C126 9D 02 03                ;
lda      $0725                         ; 0x1c139 $C129 AD 25 07                ;; PPU Macro Selector	
LC12C                                                                          ;
sta      $0725                         ; 0x1c13c $C12C 8D 25 07                ;; PPU Macro Selector	
jsr      bank7_related_to_sound        ; 0x1c13f $C12F 20 C1 C1                ; related to sound
lda      $F7                           ; 0x1c142 $C132 A5 F7                   ; Controller 1 Buttons Held
sta      $0744                         ; 0x1c144 $C134 8D 44 07                ;; Controller 1 Input; Controller 1 Buttons Held
jsr      bank7_Controllers_Input       ; 0x1c147 $C137 20 46 D3                ; Controllers Input
lda      $DE                           ; 0x1c14a $C13A A5 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
beq      LC146                         ; 0x1c14c $C13C F0 08                   ;
lda      $0763                         ; 0x1c14e $C13E AD 63 07                ;; Counter for Big Door in Hidden Kasuto
ora      $0764                         ; 0x1c151 $C141 0D 64 07                ;; Counter for Big Door in Hidden Kasuto
bne      LC14E                         ; 0x1c154 $C144 D0 08                   ;
LC146                                                                          ;
lda      $0729                         ; 0x1c156 $C146 AD 29 07                ;
beq      LC14E                         ; 0x1c159 $C149 F0 03                   ;
jsr      bank7_related_to_Pause_Pane_routine; 0x1c15b $C14B 20 CD C1           ; related to Pause Pane routine
LC14E                                                                          ;
lda      $074C                         ; 0x1c15e $C14E AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
beq      LC164                         ; 0x1c161 $C151 F0 11                   ;
cmp      #$02                          ; 0x1c163 $C153 C9 02                   ;
bcc      LC1A8                         ; 0x1c165 $C155 90 51                   ;
lda      $0524                         ; 0x1c167 $C157 AD 24 05                ; Routine Index
cmp      #$03                          ; 0x1c16a $C15A C9 03                   ;
bcc      LC169                         ; 0x1c16c $C15C 90 0B                   ;
cmp      #$07                          ; 0x1c16e $C15E C9 07                   ;
bcs      LC169                         ; 0x1c170 $C160 B0 07                   ;
bcc      LC1A8                         ; 0x1c172 $C162 90 44                   ;
LC164                                                                          ;
lda      $0524                         ; 0x1c174 $C164 AD 24 05                ; Routine Index
bne      LC1A8                         ; 0x1c177 $C167 D0 3F                   ;
LC169                                                                          ;
ldx      #$0C                          ; 0x1c179 $C169 A2 0C                   ; X = 0C
dec      $0500                         ; 0x1c17b $C16B CE 00 05                ;; Timer frequency		;?Invincibility after stun counter (counts down, nonzero = invincible)
bpl      LC177                         ; 0x1c17e $C16E 10 07                   ;
lda      #$14                          ; 0x1c180 $C170 A9 14                   ; A = 14
sta      $0500                         ; 0x1c182 $C172 8D 00 05                ;; Timer frequency		;?Invincibility after stun counter (counts down, nonzero = invincible)
ldx      #$18                          ; 0x1c185 $C175 A2 18                   ; X = 18
LC177                                                                          ;
lda      $0501,x                       ; 0x1c187 $C177 BD 01 05                ;
beq      LC17F                         ; 0x1c18a $C17A F0 03                   ;
dec      $0501,x                       ; 0x1c18c $C17C DE 01 05                ; decrease all 5xx timers (if > 0)
LC17F                                                                          ;
dex                                    ; 0x1c18f $C17F CA                      ;
bpl      LC177                         ; 0x1c190 $C180 10 F5                   ;
inc       !$12                         ; 0x1c192 $C182 EE 12 00                ;
ldx      #$00                          ; 0x1c195 $C185 A2 00                   ; X = 00
ldy      #$09                          ; 0x1c197 $C187 A0 09                   ; Y = 09
lda      $051A                         ; 0x1c199 $C189 AD 1A 05                ;
and      #$02                          ; 0x1c19c $C18C 29 02                   ; keep bits .... ..x.
sta      L0000                         ; 0x1c19e $C18E 85 00                   ;
lda      $051B                         ; 0x1c1a0 $C190 AD 1B 05                ;
and      #$02                          ; 0x1c1a3 $C193 29 02                   ; keep bits .... ..x.
eor      L0000                         ; 0x1c1a5 $C195 45 00                   ;
clc                                    ; 0x1c1a7 $C197 18                      ;
beq      LC19B                         ; 0x1c1a8 $C198 F0 01                   ;
sec                                    ; 0x1c1aa $C19A 38                      ;
LC19B                                                                          ;
ror      $051A,x                       ; 0x1c1ab $C19B 7E 1A 05                ;
inx                                    ; 0x1c1ae $C19E E8                      ;
dey                                    ; 0x1c1af $C19F 88                      ;
bne      LC19B                         ; 0x1c1b0 $C1A0 D0 F9                   ;
jsr      bank7_Remove_All_Sprites_except_Sprite0; 0x1c1b2 $C1A2 20 50 D2       ; Remove All Sprites, except Sprite 0
jsr      LC2CA                         ; 0x1c1b5 $C1A5 20 CA C2                ;
LC1A8                                                                          ;
lda      $2002                         ; 0x1c1b8 $C1A8 AD 02 20                ; PPU Status Register
lda      $FF                           ; 0x1c1bb $C1AB A5 FF                   ;; Sprite Bank ?
ora      #$80                          ; 0x1c1bd $C1AD 09 80                   ; set bits  x... ....
sta      $FF                           ; 0x1c1bf $C1AF 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c1c1 $C1B1 8D 00 20                ; PPU Status Register
pla                                    ; 0x1c1c4 $C1B4 68                      ;
rti                                    ; 0x1c1c5 $C1B5 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_code2                                                                    ;
lda      $07AB                         ; 0x1c1c6 $C1B6 AD AB 07                ;
clc                                    ; 0x1c1c9 $C1B9 18                      ;
adc      #$D8                          ; 0x1c1ca $C1BA 69 D8                   ;
sta      $07AB                         ; 0x1c1cc $C1BC 8D AB 07                ;
bcc      LC1CC                         ; 0x1c1cf $C1BF 90 0B                   ;
bank7_related_to_sound                                                         ;
lda      #$06                          ; 0x1c1d1 $C1C1 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c1d3 $C1C3 20 CC FF                ; bank switch routine
jsr      L9000                         ; 0x1c1d6 $C1C6 20 00 90                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1c1d9 $C1C9 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1CC                                                                          ;
rts                                    ; 0x1c1dc $C1CC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_related_to_Pause_Pane_routine                                            ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c1dd $C1CD 20 C5 FF                ; Load Bank 0
lda      $0736                         ; 0x1c1e0 $C1D0 AD 36 07                ; Game Mode
cmp      #$0B                          ; 0x1c1e3 $C1D3 C9 0B                   ; 0B = sidescroll mode
bne      LC220                         ; 0x1c1e5 $C1D5 D0 49                   ;
jsr      LC1DD                         ; 0x1c1e7 $C1D7 20 DD C1                ;
jmp      bank7_Load_Bank_769_at_0x8000 ; 0x1c1ea $C1DA 4C C9 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1DD                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1c1ed $C1DD 20 30 CF; Region Code * 5 + World Code
cmp      #$01                          ; 0x1c1f0 $C1E0 C9 01                   ;
bne      LC206                         ; 0x1c1f2 $C1E2 D0 22                   ;
lda      $056B                         ; 0x1c1f4 $C1E4 AD 6B 05                ; Town Code
cmp      #$02                          ; 0x1c1f7 $C1E7 C9 02                   ;
bne      LC206                         ; 0x1c1f9 $C1E9 D0 1B                   ;
lda      $0561                         ; 0x1c1fb $C1EB AD 61 05                ; Area Code
cmp      #$06                          ; 0x1c1fe $C1EE C9 06                   ;
bne      LC206                         ; 0x1c200 $C1F0 D0 14                   ;
lda      $3B                           ; 0x1c202 $C1F2 A5 3B                   ; Link's X Position (high byte)
cmp      #$02                          ; 0x1c204 $C1F4 C9 02                   ;
bcc      LC206                         ; 0x1c206 $C1F6 90 0E                   ;
lda      $0796                         ; 0x1c208 $C1F8 AD 96 07                ; Down/Up Techs (and other things)
lsr                                    ; 0x1c20b $C1FB 4A                      ;
bcc      LC206                         ; 0x1c20c $C1FC 90 08                   ;
lda      #$01                          ; 0x1c20e $C1FE A9 01                   ; A = 01
sta      $0524                         ; 0x1c210 $C200 8D 24 05                ; Routine Index
jmp      LA7AB                         ; 0x1c213 $C203 4C AB A7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC206                                                                          ;
lda      $0524                         ; 0x1c216 $C206 AD 24 05                ; Routine Index
beq      LC218                         ; 0x1c219 $C209 F0 0D                   ;
lda      $074C                         ; 0x1c21b $C20B AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cmp      #$02                          ; 0x1c21e $C20E C9 02                   ;
bcs      LC218                         ; 0x1c220 $C210 B0 06                   ;
jsr      bank7_Remove_All_Sprites_except_Sprite0; 0x1c222 $C212 20 50 D2       ; Remove All Sprites, except Sprite 0
jsr      L968D                         ; 0x1c225 $C215 20 8D 96                ;
LC218                                                                          ;
lda      $074C                         ; 0x1c228 $C218 AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
bne      bank7_code3                   ; 0x1c22b $C21B D0 16                   ;
jmp      L9D91                         ; 0x1c22d $C21D 4C 91 9D                ;jump from bank 7 to bank 0 for controller input, but this only occurs for side scroll mode
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC220                                                                          ;
lda      $0524                         ; 0x1c230 $C220 AD 24 05                ; Routine Index
ldy      $0567                         ; 0x1c233 $C223 AC 67 05                ; Related to Flute in Overworld
bne      LC23A                         ; 0x1c236 $C226 D0 12                   ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c238 $C228 20 85 D3;
bank7_pointer_table0                                                           ;
.word    LA256                         ; 0x1c23b $C22B 56 A2                   ;
.word    LA30F                         ; 0x1c23d $C22D 0F A3                   ;
.word    LA19C                         ; 0x1c23f $C22F 9C A1                   ;
.word    LA334                         ; 0x1c241 $C231 34 A3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code3                                                                    ;
cmp      #$02                          ; 0x1c243 $C233 C9 02                   ;
bcs      bank7_pointer_table1+$08      ; 0x1c245 $C235 B0 0E                   ;
jmp      L9D54                         ; 0x1c247 $C237 4C 54 9D                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC23A                                                                          ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c24a $C23A 20 85 D3;
bank7_pointer_table1                                                           ;
.word    LA199                         ; 0x1c24d $C23D 99 A1                   ;
.word    LA315                         ; 0x1c24f $C23F 15 A3                   ;
.word    LA329                         ; 0x1c251 $C241 29 A3                   ;
.word    LA338                         ; 0x1c253 $C243 38 A3                   ;
.word    L05C9                         ; 0x1c255 $C245 C9 05                   ;
.word    LD7B0                         ; 0x1c257 $C247 B0 D7                   ;
; ---------------------------------------------------------------------------- ;
bank7_code4                                                                    ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c259 $C249 20 C9 FF                ; Load Bank $0769
jmp      LB082                         ; 0x1c25c $C24C 4C 82 B0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c25f $C24F 20 C9 FF                ; Load Bank $0769
jsr      LC258                         ; 0x1c262 $C252 20 58 C2                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1c265 $C255 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC258                                                                          ;
lda      (L000E),y                     ; 0x1c268 $C258 B1 0E                   ;
sta      $053E,x                       ; 0x1c26a $C25A 9D 3E 05                ;; Tiles for Dialog Box Rows
iny                                    ; 0x1c26d $C25D C8                      ;
lda      (L000E),y                     ; 0x1c26e $C25E B1 0E                   ;
sta      $054C,x                       ; 0x1c270 $C260 9D 4C 05                ;; Tiles for Dialog Box Rows
inx                                    ; 0x1c273 $C263 E8                      ;
rts                                    ; 0x1c274 $C264 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Pointer_table_for_Item_Presence                                          ;
.word    L0600                         ; 0x1c275 $C265 00 06                   ;West Hyrule
.word    L0660                         ; 0x1c277 $C267 60 06                   ;Towns in West Hyrule
.word    L0660                         ; 0x1c279 $C269 60 06                   ;
.word    L0680                         ; 0x1c27b $C26B 80 06                   ;Palace 1 / Palace 2
.word    L06A0                         ; 0x1c27d $C26D A0 06                   ;Palace 3
.word    L0620                         ; 0x1c27f $C26F 20 06                   ;Death Mountain / Maze Island
.word    L0660                         ; 0x1c281 $C271 60 06                   ;
.word    L0660                         ; 0x1c283 $C273 60 06                   ;
.word    L0680                         ; 0x1c285 $C275 80 06                   ;
.word    L06A0                         ; 0x1c287 $C277 A0 06                   ;Palace 4
.word    L0640                         ; 0x1c289 $C279 40 06                   ;East Hyrule
.word    L0660                         ; 0x1c28b $C27B 60 06                   ;
.word    L0660                         ; 0x1c28d $C27D 60 06                   ;Towns in East Hyrule
.word    L0680                         ; 0x1c28f $C27F 80 06                   ;Palace 5
.word    L06A0                         ; 0x1c291 $C281 A0 06                   ;Palace 6
.word    L06C0                         ; 0x1c293 $C283 C0 06                   ;Palace 7
; ---------------------------------------------------------------------------- ;
bank7_Tables_for_Various_Bitmasks1                                             ;
.byt    $F7,$FB,$FD,$FE                ; 0x1c295 $C285 F7 FB FD FE             ;
LC289                                                                          ;
.byt    $7F,$BF,$DF,$EF                ; 0x1c299 $C289 7F BF DF EF             ;
LC28D                                                                          ;
.byt    $08,$04,$02,$01                ; 0x1c29d $C28D 08 04 02 01             ;
LC291                                                                          ;
.byt    $80,$40,$20,$10                ; 0x1c2a1 $C291 80 40 20 10             ;
; ---------------------------------------------------------------------------- ;
Set_Item_RAM_bit_to_0__Bits_0_3                                                ;
jsr      LC2B3                         ; 0x1c2a5 $C295 20 B3 C2                ;
bcc      Set_Item_RAM_bit_to_0__Bits_4_7; 0x1c2a8 $C298 90 06                  ;
and      bank7_Tables_for_Various_Bitmasks1,x; 0x1c2aa $C29A 3D 85 C2          ;
sta      (L0000),y                     ; 0x1c2ad $C29D 91 00                   ;
rts                                    ; 0x1c2af $C29F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Set_Item_RAM_bit_to_0__Bits_4_7                                                ;
and      LC289,x                       ; 0x1c2b0 $C2A0 3D 89 C2                ;
sta      (L0000),y                     ; 0x1c2b3 $C2A3 91 00                   ;
rts                                    ; 0x1c2b5 $C2A5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2A6                                                                          ;
jsr      LC2B3                         ; 0x1c2b6 $C2A6 20 B3 C2                ;
bcc      LC2AF                         ; 0x1c2b9 $C2A9 90 04                   ;
and      LC28D,x                       ; 0x1c2bb $C2AB 3D 8D C2                ;
rts                                    ; 0x1c2be $C2AE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2AF                                                                          ;
and      LC291,x                       ; 0x1c2bf $C2AF 3D 91 C2                ;
rts                                    ; 0x1c2c2 $C2B2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2B3                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1c2c3 $C2B3 20 30 CF; Region Code * 5 + World Code
asl                                    ; 0x1c2c6 $C2B6 0A                      ;
tay                                    ; 0x1c2c7 $C2B7 A8                      ;
lda      bank7_Pointer_table_for_Item_Presence,y; 0x1c2c8 $C2B8 B9 65 C2       ;
sta      L0000                         ; 0x1c2cb $C2BB 85 00                   ;
lda      bank7_Pointer_table_for_Item_Presence+$01,y; 0x1c2cd $C2BD B9 66 C2   ;
sta      $01                           ; 0x1c2d0 $C2C0 85 01                   ;
lda      $0561                         ; 0x1c2d2 $C2C2 AD 61 05                ; Area Code
lsr                                    ; 0x1c2d5 $C2C5 4A                      ; 4 bits per Area for Items
tay                                    ; 0x1c2d6 $C2C6 A8                      ;
lda      (L0000),y                     ; 0x1c2d7 $C2C7 B1 00                   ;
rts                                    ; 0x1c2d9 $C2C9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2CA                                                                          ;
ldy      #$00                          ; 0x1c2da $C2CA A0 00                   ; Y = 00
sty      $0727                         ; 0x1c2dc $C2CC 8C 27 07                ;
sty      $0729                         ; 0x1c2df $C2CF 8C 29 07                ;
jsr      LD174                         ; 0x1c2e2 $C2D2 20 74 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c2e5 $C2D5 20 85 D3;
bank7_pointer_table2                                                           ;
.word    LC34F                         ; 0x1c2e8 $C2D8 4F C3                   ;
.word    bank7_code5                   ; 0x1c2ea $C2DA E6 C2                   ;
.word    bank7_code6                   ; 0x1c2ec $C2DC 1E C3                   ;
.word    LCB27                         ; 0x1c2ee $C2DE 27 CB                   ;
.word    LC364                         ; 0x1c2f0 $C2E0 64 C3                   ;
.word    LC38D                         ; 0x1c2f2 $C2E2 8D C3                   ;
.word    LC410                         ; 0x1c2f4 $C2E4 10 C4                   ;
; ---------------------------------------------------------------------------- ;
bank7_code5                                                                    ;
jsr      LD168                         ; 0x1c2f6 $C2E6 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c2f9 $C2E9 20 85 D3;
bank7_pointer_table__game_mode                                                 ;
;Probably Bank 0 for addresses in the 8000-BFFF range                          ;
.word    bank7_code18                  ; 0x1c2fc $C2EC 40 CD                   ; 00	Load ROM bank, Overworld data, enemy data, etc.  
.word    bank7_go_outside              ; 0x1c2fe $C2EE B3 CC                   ; 01	Overworld Out of Area ?
.word    L8149                         ; 0x1c300 $C2F0 49 81                   ; 02	Overworld Init
.word    L87F3                         ; 0x1c302 $C2F2 F3 87                   ; 03	Overworld Load Map Tiles
.word    LC72D                         ; 0x1c304 $C2F4 2D C7                   ; 04	Set $0726 to 0 and Increment Game Mode
.word    L8558                         ; 0x1c306 $C2F6 58 85                   ; 05	Overworld Main
.word    bank7_code17                  ; 0x1c308 $C2F8 35 CB                   ; 06	Load Side View Area
.word    bank7_code12                  ; 0x1c30a $C2FA A4 C4                   ; 07	Set Routine Index to 0 and Increment Game Mode
.word    LC6EE                         ; 0x1c30c $C2FC EE C6                   ; 08	RTS
.word    LCF3C                         ; 0x1c30e $C2FE 3C CF                   ; 09	Side View Area Drawing Init
.word    LC62F                         ; 0x1c310 $C300 2F C6                   ; 0A	Switch Graphics Bank, Load Bank 0, Side View Init
.word    bank7_check_if_link_died_0494__linkdeath; 0x1c312 $C302 CC D3         ; 0B	Side View Main
.word    LC68A                         ; 0x1c314 $C304 8A C6                   ; 0C	Fall in Hole Init
.word    LA82A                         ; 0x1c316 $C306 2A A8                   ; 0D	Fall in Hole Tile Setup
.word    bank7_Related_to_Link_falling ; 0x1c318 $C308 EF C6                   ; 0E	Fall in Hole Setup
.word    L8FB7                         ; 0x1c31a $C30A B7 8F                   ; 0F	Fall in Hole Main
.word    bank7_take_side_exit          ; 0x1c31c $C30C 4C CF                   ; 10
.word    bank7_code9                   ; 0x1c31e $C30E 97 C3                   ; 11
.word    LC63E                         ; 0x1c320 $C310 3E C6                   ; 12	Increment Game Mode and execute Game Mode 0C
.word    bank7_take_elevator_exit      ; 0x1c322 $C312 44 C6                   ; 13
.word    LC6EE                         ; 0x1c324 $C314 EE C6                   ; 14	RTS
.word    LC70C                         ; 0x1c326 $C316 0C C7                   ; 15
.word    bank7_take_door_exit          ; 0x1c328 $C318 FC CF                   ; 16	Enter Door in Town
.word    L81B1                         ; 0x1c32a $C31A B1 81                   ; 17	Raft Travel Init
.word    L8207                         ; 0x1c32c $C31C 07 82                   ; 18	Raft Travel
; ---------------------------------------------------------------------------- ;
bank7_code6                                                                    ;
jsr      LD168                         ; 0x1c32e $C31E 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c331 $C321 20 85 D3;
bank7_pointer_table4                                                           ;
.word    LC722                         ; 0x1c334 $C324 22 C7                   ;
.word    LD042                         ; 0x1c336 $C326 42 D0                   ;
.word    flashing_effect__length__when_link_dies; 0x1c338 $C328 1A C7          ;
.word    LC9EE                         ; 0x1c33a $C32A EE C9                   ;
.word    LCA1B                         ; 0x1c33c $C32C 1B CA                   ;
.word    LC722                         ; 0x1c33e $C32E 22 C7                   ;
.word    LD04D                         ; 0x1c340 $C330 4D D0                   ;
.word    LC72D                         ; 0x1c342 $C332 2D C7                   ;
.word    LCF05                         ; 0x1c344 $C334 05 CF                   ; Increment Game Mode by 1
.word    LCA85                         ; 0x1c346 $C336 85 CA                   ;
.word    bank7_code53                  ; 0x1c348 $C338 76 FE                   ;
.word    bank7_code7                   ; 0x1c34a $C33A 3C C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code7                                                                    ;
lda      #$05                          ; 0x1c34c $C33C A9 05                   ; A = 05
jsr      LFFCC                         ; 0x1c34e $C33E 20 CC FF                ;
jsr      bank7_chr_bank_switch__load_A ; 0x1c351 $C341 20 B1 FF                ;
lda      #$80                          ; 0x1c354 $C344 A9 80                   ; A = 80
sta      $0100                         ; 0x1c356 $C346 8D 00 01                ;
lda      #$00                          ; 0x1c359 $C349 A9 00                   ; A = 00
sta      $076C                         ; 0x1c35b $C34B 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x1c35e $C34E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC34F                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c35f $C34F 20 C5 FF                ;
jsr      LD293                         ; 0x1c362 $C352 20 93 D2                ;
jsr      LAA08                         ; 0x1c365 $C355 20 08 AA                ;
bank7_Reset_Number_of_Lives__to_3_                                             ;
lda      #$03                          ; 0x1c368 $C358 A9 03                   ; A = 03
sta      $0700                         ; 0x1c36a $C35A 8D 00 07                ; Current number of lives
inc      $0760                         ; 0x1c36d $C35D EE 60 07                ;
LC360                                                                          ;
inc      $076C                         ; 0x1c370 $C360 EE 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x1c373 $C363 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC364                                                                          ;
jsr      LD168                         ; 0x1c374 $C364 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c377 $C367 20 85 D3;
bank7_pointer_table5                                                           ;
.word    bank7_code8                   ; 0x1c37a $C36A 76 C3                   ;
.word    bank7_code13                  ; 0x1c37c $C36C CB C4                   ;
.word    LCF3C                         ; 0x1c37e $C36E 3C CF                   ;
.word    LC37C                         ; 0x1c380 $C370 7C C3                   ;
.word    LC62F                         ; 0x1c382 $C372 2F C6                   ;
.word    LC382                         ; 0x1c384 $C374 82 C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code8                                                                    ;
jsr      LC388                         ; 0x1c386 $C376 20 88 C3                ;
jmp      L8B50                         ; 0x1c389 $C379 4C 50 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC37C                                                                          ;
jsr      LC388                         ; 0x1c38c $C37C 20 88 C3                ;
jmp      L8B69                         ; 0x1c38f $C37F 4C 69 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC382                                                                          ;
jsr      LC388                         ; 0x1c392 $C382 20 88 C3                ;
jmp      L8BBF                         ; 0x1c395 $C385 4C BF 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC388                                                                          ;
lda      #$05                          ; 0x1c398 $C388 A9 05                   ; A = 05
jmp      LFFCC                         ; 0x1c39a $C38A 4C CC FF                ; Switch to Bank 5
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC38D                                                                          ;
jsr      LD168                         ; 0x1c39d $C38D 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c3a0 $C390 20 85 D3;
bank7_pointer_table6                                                           ;
.word    LCD19                         ; 0x1c3a3 $C393 19 CD                   ;
.word    bank7_code7                   ; 0x1c3a5 $C395 3C C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code9                                                                    ;
jsr      LD15C                         ; 0x1c3a7 $C397 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c3aa $C39A 20 85 D3;
; Pointer table for "Ready..." Screen Routines (4 * 2 = 8 bytes)               ;
; Uses Routine Index $0738                                                     ;
bank7_pointer_table7                                                           ;
.word    bank7_code10                  ; 0x1c3ad $C39D A5 C3                   ;
.word    bank7_Load_Lives_Remaining_Screen; 0x1c3af $C39F B5 C3                ;
.word    LC3E6                         ; 0x1c3b1 $C3A1 E6 C3                   ;
.word    LC3ED                         ; 0x1c3b3 $C3A3 ED C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code10                                                                   ;
lda      #$0C                          ; 0x1c3b5 $C3A5 A9 0C                   ; A = 0C
sta      $0725                         ; 0x1c3b7 $C3A7 8D 25 07                ;; PPU Macro Selector	
lda      #$00                          ; 0x1c3ba $C3AA A9 00                   ; A = 00
sta      $0760                         ; 0x1c3bc $C3AC 8D 60 07                ;
inc      $0726                         ; 0x1c3bf $C3AF EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LC3E2                         ; 0x1c3c2 $C3B2 4C E2 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Load_Lives_Remaining_Screen                                              ;
lda      $076E                         ; 0x1c3c5 $C3B5 AD 6E 07                ; Graphics bank to use
jsr      bank7_chr_bank_switch__load_A ; 0x1c3c8 $C3B8 20 B1 FF                ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1c3cb $C3BB 20 66 D2;
ldy      #$13                          ; 0x1c3ce $C3BE A0 13                   ; Y = 13
LC3C0                                                                          ;
lda      $6958,y                       ; 0x1c3d0 $C3C0 B9 58 69                ;
sta      L0302,y                       ; 0x1c3d3 $C3C3 99 02 03                ;
dey                                    ; 0x1c3d6 $C3C6 88                      ;
bpl      LC3C0                         ; 0x1c3d7 $C3C7 10 F7                   ;
ldy      #$07                          ; 0x1c3d9 $C3C9 A0 07                   ; Y = 07
LC3CB                                                                          ;
lda      $07A1,y                       ; 0x1c3db $C3CB B9 A1 07                ;
sta      $0305,y                       ; 0x1c3de $C3CE 99 05 03                ;
dey                                    ; 0x1c3e1 $C3D1 88                      ;
bpl      LC3CB                         ; 0x1c3e2 $C3D2 10 F7                   ;
lda      $0700                         ; 0x1c3e4 $C3D4 AD 00 07                ; Current number of lives
clc                                    ; 0x1c3e7 $C3D7 18                      ;
adc      #$D0                          ; 0x1c3e8 $C3D8 69 D0                   ;
sta      $0314                         ; 0x1c3ea $C3DA 8D 14 03                ;
lda      #$70                          ; 0x1c3ed $C3DD A9 70                   ; A = 70
sta      $0501                         ; 0x1c3ef $C3DF 8D 01 05                ; delay for screen showing up
LC3E2                                                                          ;
inc      $0738                         ; 0x1c3f2 $C3E2 EE 38 07                ;
rts                                    ; 0x1c3f5 $C3E5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC3E6                                                                          ;
lda      #$00                          ; 0x1c3f6 $C3E6 A9 00                   ; A = 00
sta      $0726                         ; 0x1c3f8 $C3E8 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
beq      LC3E2                         ; 0x1c3fb $C3EB F0 F5                   ;
LC3ED                                                                          ;
lda      $0501                         ; 0x1c3fd $C3ED AD 01 05                ;; Timer
bne      LC3F5                         ; 0x1c400 $C3F0 D0 03                   ;while timer continues, display screen, otherwise increment game mode to resume gameplay
inc      $0736                         ; 0x1c402 $C3F2 EE 36 07                ;; Game Mode ; screen intro type
LC3F5                                                                          ;
lda      #$50                          ; 0x1c405 $C3F5 A9 50                   ; A = 50
sta      $29                           ; 0x1c407 $C3F7 85 29                   ; Link's Y Position (on "Get Ready" screen)
lda      #$78                          ; 0x1c409 $C3F9 A9 78                   ; A = 78
sta      $CC                           ; 0x1c40b $C3FB 85 CC                   ; Link's X Position on Screen
lda      #$03                          ; 0x1c40d $C3FD A9 03                   ; A = 03
sta      $80                           ; 0x1c40f $C3FF 85 80                   ; Current Animation Frame for Link
lsr                                    ; 0x1c411 $C401 4A                      ;
sta      $9F                           ; 0x1c412 $C402 85 9F                   ; Direction arrow pressed (1 = right, 2 = left)
lsr                                    ; 0x1c414 $C404 4A                      ;
sta      $C8                           ; 0x1c415 $C405 85 C8                   ;; go outside: set $c8 to 3
sta      $13                           ; 0x1c417 $C407 85 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      $11                           ; 0x1c419 $C409 85 11                   ;
sta      $90                           ; 0x1c41b $C40B 85 90                   ;
jmp      LEC02                         ; 0x1c41d $C40D 4C 02 EC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC410                                                                          ;
jsr      LD15C                         ; 0x1c420 $C410 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c423 $C413 20 85 D3;
bank7_pointer_table8                                                           ;
.word    bank7_code10                  ; 0x1c426 $C416 A5 C3                   ;
.word    bank7_Load_Lives_Remaining_Screen; 0x1c428 $C418 B5 C3                ;
.word    LC3E6                         ; 0x1c42a $C41A E6 C3                   ;
.word    bank7_code11                  ; 0x1c42c $C41C 1E C4                   ;
; ---------------------------------------------------------------------------- ;
bank7_code11                                                                   ;
lda      $0501                         ; 0x1c42e $C41E AD 01 05                ;; Timer
bne      LC446                         ; 0x1c431 $C421 D0 23                   ;
lda      #$02                          ; 0x1c433 $C423 A9 02                   ; A = 02
ldy      $0707                         ; 0x1c435 $C425 AC 07 07                ; Current World
beq      LC435                         ; 0x1c438 $C428 F0 0B                   ;
cpy      #$03                          ; 0x1c43a $C42A C0 03                   ;
bcs      LC436                         ; 0x1c43c $C42C B0 08                   ;
ldy      $056B                         ; 0x1c43e $C42E AC 6B 05                ;; Town Code	;used by wise man to pick magic to give?
cpy      #$07                          ; 0x1c441 $C431 C0 07                   ;
bne      LC436                         ; 0x1c443 $C433 D0 01                   ;
LC435                                                                          ;
asl                                    ; 0x1c445 $C435 0A                      ;
LC436                                                                          ;
sta      $075F                         ; 0x1c446 $C436 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
lda      #$01                          ; 0x1c449 $C439 A9 01                   ; A = 01
sta      $076C                         ; 0x1c44b $C43B 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
sta      $076D                         ; 0x1c44e $C43E 8D 6D 07                ;
lda      #$07                          ; 0x1c451 $C441 A9 07                   ; A = 07
sta      $0736                         ; 0x1c453 $C443 8D 36 07                ; Game Mode
LC446                                                                          ;
jmp      LC3F5                         ; 0x1c456 $C446 4C F5 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table9                                                                   ;
.byt    $3F,$00,$04,$0F,$30,$12,$16    ; 0x1c459 $C449 3F 00 04 0F 30 12 16    ;PPU Address 3F00, transfer 4 bytes
                                                                               ;
.byt    $3F,$10,$04,$0F,$18,$36,$2A    ; 0x1c460 $C450 3F 10 04 0F 18 36 2A    ;PPU Address 3F10, transfer 4 bytes
                                                                               ;
.byt    $FF                            ; 0x1c467 $C457 FF                      ;
bank7_Table_for_Overworld_Palettes                                             ;
.byt    $3F,$00,$20                    ; 0x1c468 $C458 3F 00 20                ;PPU Address 3F00, transfer 20 bytes
                                                                               ;
.byt    $0F,$30,$29,$19                ; 0x1c46b $C45B 0F 30 29 19             ;Overworld Palette Code 0
                                                                               ;
.byt    $0F,$30,$28,$17                ; 0x1c46f $C45F 0F 30 28 17             ;Overworld Palette Code 1
                                                                               ;
.byt    $0F,$30,$28,$00                ; 0x1c473 $C463 0F 30 28 00             ;Overworld Palette Code 2
                                                                               ;
.byt    $0F,$30,$36,$21                ; 0x1c477 $C467 0F 30 36 21             ;Overworld Palette Code 3
                                                                               ;
.byt    $0F,$18,$36,$2A                ; 0x1c47b $C46B 0F 18 36 2A             ;Overworld Sprites Code 0 (black color of tiles + left border)
                                                                               ;
.byt    $0F,$0F,$0F,$0F                ; 0x1c47f $C46F 0F 0F 0F 0F             ;Overworld Sprites Code 1 (right border of the screen)
                                                                               ;
.byt    $0F,$30,$16,$0F                ; 0x1c483 $C473 0F 30 16 0F             ;Overworld Sprites Code 2 (Demons)
                                                                               ;
.byt    $0F,$16,$27,$30                ; 0x1c487 $C477 0F 16 27 30             ;Overworld Sprites Code 3 (Fairy)                               
                                                                               ;
.byt    $FF                            ; 0x1c48b $C47B FF                      ;
bank7_table10                                                                  ;
.byt    $3F,$00,$10                    ; 0x1c48c $C47C 3F 00 10                ;PPU Address 3F00, transfer 10 bytes	Maybe for Last Boss, Link's Shadow ?
                                                                               ;
.byt    $14,$30,$12,$16,$14,$0F,$0F,$0F; 0x1c48f $C47F 14 30 12 16 14 0F 0F 0F ;
.byt    $14,$0F,$0F,$0F,$14,$0F,$0F,$0F; 0x1c497 $C487 14 0F 0F 0F 14 0F 0F 0F ;
.byt    $FF                            ; 0x1c49f $C48F FF                      ;
LC490                                                                          ;
.byt    $3F,$00,$10,$0F,$30,$12,$16,$0F; 0x1c4a0 $C490 3F 00 10 0F 30 12 16 0F ;
.byt    $07,$27,$37,$0F,$07,$16,$30,$0F; 0x1c4a8 $C498 07 27 37 0F 07 16 30 0F ;
.byt    $3C,$1C,$0C,$FF                ; 0x1c4b0 $C4A0 3C 1C 0C FF             ;
; ---------------------------------------------------------------------------- ;
bank7_code12                                                                   ;
jmp      LC722                         ; 0x1c4b4 $C4A4 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Extra_Background_Layers__Bushes__Grass__etc                              ;
.byt    $40,$83,$84,$4C,$40,$40,$40,$40; 0x1c4b7 $C4A7 40 83 84 4C 40 40 40 40 ;Layer Tile Codes (8 bytes)
LC4AF                                                                          ;
.byt    $00,$90,$A0,$20,$00,$00,$00,$00; 0x1c4bf $C4AF 00 90 A0 20 00 00 00 00 ;Layer Row Heights (8 bytes)
LC4B7                                                                          ;
.byt    $01,$03,$03,$04,$04,$05        ; 0x1c4c7 $C4B7 01 03 03 04 04 05       ;Table related to Bank Switch (6 bytes)
LC4BD                                                                          ;
.byt    $00,$00,$00,$00,$02,$00        ; 0x1c4cd $C4BD 00 00 00 00 02 00       ;Area and Enemy Pointer Offsets (6 bytes)
; ---------------------------------------------------------------------------- ;
bank7_Pointer_table_for_Area_and_Enemy_Pointers                                ;
.word    bank1_Area_Pointers_West_Hyrule; 0x1c4d3 $C4C3 23 85                  ;West Hyrule - Area Pointers
.word    bank1_Area_Pointers_Death_Mountain; 0x1c4d5 $C4C5 00 A0               ;Death Mountain - Area Pointers
.word    bank1_Enemy_Pointers__West_Hyrule; 0x1c4d7 $C4C7 A1 85                ;West Hyrule - Enemy Pointers
.word    bank1_Enemy_Pointers_Death_Mountain; 0x1c4d9 $C4C9 7E A0              ;Death Moutain - Enemy Pointers
; ---------------------------------------------------------------------------- ;
bank7_code13                                                                   ;
lda      #$30                          ; 0x1c4db $C4CB A9 30                   ; A = 30
sta      $2000                         ; 0x1c4dd $C4CD 8D 00 20                ;
lda      #$0E                          ; 0x1c4e0 $C4D0 A9 0E                   ; A = 0E
jsr      bank7_Config_Register         ; 0x1c4e2 $C4D2 20 9D FF                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c4e5 $C4D5 20 C9 FF                ;
lda      $FF                           ; 0x1c4e8 $C4D8 A5 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c4ea $C4DA 8D 00 20                ;
jsr      bank7_Set_Memory_200_4FF_and_00_DF_to_Zero; 0x1c4ed $C4DD 20 9C D2    ; Set Memory 200-4FF and 00-DF to Zero
sta       !$FD                         ; 0x1c4f0 $C4E0 8D FD 00                ;
sta      $0747                         ; 0x1c4f3 $C4E3 8D 47 07                ;
sta      $072A                         ; 0x1c4f6 $C4E6 8D 2A 07                ; Scrolling Offset High Byte
sta      $072B                         ; 0x1c4f9 $C4E9 8D 2B 07                ;
sta      $0732                         ; 0x1c4fc $C4EC 8D 32 07                ;
sta      $0734                         ; 0x1c4ff $C4EF 8D 34 07                ;
sta      $0733                         ; 0x1c502 $C4F2 8D 33 07                ;
sta      $0735                         ; 0x1c505 $C4F5 8D 35 07                ;
sta      $0763                         ; 0x1c508 $C4F8 8D 63 07                ; Counter for Big Door in Hidden Kasuto
sta      $0764                         ; 0x1c50b $C4FB 8D 64 07                ; Counter for Big Door in Hidden Kasuto
;Get Area Data Pointer Address (00-01)                                         ;
;And Enemy Data Pointer Address (02-03)                                        ;
ldy      $0707                         ; 0x1c50e $C4FE AC 07 07                ; Current World
bne      LC50C                         ; 0x1c511 $C501 D0 09                   ;
lda      $0706                         ; 0x1c513 $C503 AD 06 07                ; Current Region
cmp      #$01                          ; 0x1c516 $C506 C9 01                   ;
bne      LC50C                         ; 0x1c518 $C508 D0 02                   ;
ldy      #$04                          ; 0x1c51a $C50A A0 04                   ; Y = 04
LC50C                                                                          ;
lda      LC4BD,y                       ; 0x1c51c $C50C B9 BD C4                ;
tay                                    ; 0x1c51f $C50F A8                      ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers,y; 0x1c520 $C510 B9 C3 C4;
sta      L0000                         ; 0x1c523 $C513 85 00                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01,y; 0x1c525 $C515 B9 C4 C4;
sta      $01                           ; 0x1c528 $C518 85 01                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01+$03,y; 0x1c52a $C51A B9 C7 C4;
sta      $02                           ; 0x1c52d $C51D 85 02                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01+$03+$01,y; 0x1c52f $C51F B9 C8 C4;
sta      $03                           ; 0x1c532 $C522 85 03                   ;
;Get Area Data Address (D4-D5)                                                 ;
;And Enemy Data Address (D6-D7)                                                ;
lda      $0561                         ; 0x1c534 $C524 AD 61 05                ; Area Code
asl                                    ; 0x1c537 $C527 0A                      ;
tay                                    ; 0x1c538 $C528 A8                      ;
lda      (L0000),y                     ; 0x1c539 $C529 B1 00                   ;
sta      $D4                           ; 0x1c53b $C52B 85 D4                   ;
lda      ($02),y                       ; 0x1c53d $C52D B1 02                   ;
sta      $D6                           ; 0x1c53f $C52F 85 D6                   ;
iny                                    ; 0x1c541 $C531 C8                      ;
lda      (L0000),y                     ; 0x1c542 $C532 B1 00                   ;
sta      $D5                           ; 0x1c544 $C534 85 D5                   ;
lda      ($02),y                       ; 0x1c546 $C536 B1 02                   ;
sta      $D7                           ; 0x1c548 $C538 85 D7                   ;
lda      $075A                         ; 0x1c54a $C53A AD 5A 07                ;
pha                                    ; 0x1c54d $C53D 48                      ;
cmp      #$02                          ; 0x1c54e $C53E C9 02                   ;
bcc      LC551                         ; 0x1c550 $C540 90 0F                   ;
;If $75A >= 2, advance Enemy Data Address to next area		                       ;007
;Probably related to Demon hit on the Overworld                                ;
ldy      #$00                          ; 0x1c552 $C542 A0 00                   ; Y = 00
lda      $D6                           ; 0x1c554 $C544 A5 D6                   ;
clc                                    ; 0x1c556 $C546 18                      ;
adc      ($D6),y                       ; 0x1c557 $C547 71 D6                   ;
sta      $D6                           ; 0x1c559 $C549 85 D6                   ;
lda      $D7                           ; 0x1c55b $C54B A5 D7                   ;
adc      #$00                          ; 0x1c55d $C54D 69 00                   ;
sta      $D7                           ; 0x1c55f $C54F 85 D7                   ;
LC551                                                                          ;
pla                                    ; 0x1c561 $C551 68                      ;
beq      bank7_Initial_Fill_of_Background_Tiles__Side_View; 0x1c562 $C552 F0 14;
;If $75A == 1, do the following...                                             ;
ldy      #$01                          ; 0x1c564 $C554 A0 01                   ; Y = 01
LC556                                                                          ;
tya                                    ; 0x1c566 $C556 98                      ;
ldy      #$00                          ; 0x1c567 $C557 A0 00                   ; Y = 00
cmp      ($D6),y                       ; 0x1c569 $C559 D1 D6                   ;
bcs      bank7_Initial_Fill_of_Background_Tiles__Side_View; 0x1c56b $C55B B0 0B;
tay                                    ; 0x1c56d $C55D A8                      ;
lda      ($D6),y                       ; 0x1c56e $C55E B1 D6                   ;
and      #$7F                          ; 0x1c570 $C560 29 7F                   ; keep bits .xxx xxxx
sta      ($D6),y                       ; 0x1c572 $C562 91 D6                   ;
iny                                    ; 0x1c574 $C564 C8                      ;
iny                                    ; 0x1c575 $C565 C8                      ;
bne      LC556                         ; 0x1c576 $C566 D0 EE                   ;
bank7_Initial_Fill_of_Background_Tiles__Side_View                              ;
;If Ground Type (Header Byte 2 & 0x70) is 0, use Tile Code 42                  ;
;Else use Tile Code 40                                                         ;
ldx      #$40                          ; 0x1c578 $C568 A2 40                   ; X = 40
ldy      #$02                          ; 0x1c57a $C56A A0 02                   ; Y = 02
lda      ($D4),y                       ; 0x1c57c $C56C B1 D4                   ; Area Header Byte 2
and      #$70                          ; 0x1c57e $C56E 29 70                   ; keep bits .xxx ....
bne      LC574                         ; 0x1c580 $C570 D0 02                   ;
ldx      #$42                          ; 0x1c582 $C572 A2 42                   ; X = 42
LC574                                                                          ;
ldy      #$D0                          ; 0x1c584 $C574 A0 D0                   ; Y = D0
sty      L0000                         ; 0x1c586 $C576 84 00                   ;
txa                                    ; 0x1c588 $C578 8A                      ;
LC579                                                                          ;
ldy      L0000                         ; 0x1c589 $C579 A4 00                   ;
sta      $5FFF,y                       ; 0x1c58b $C57B 99 FF 5F                ;
sta      $60CF,y                       ; 0x1c58e $C57E 99 CF 60                ;
sta      $619F,y                       ; 0x1c591 $C581 99 9F 61                ;
sta      $626F,y                       ; 0x1c594 $C584 99 6F 62                ;
dec      L0000                         ; 0x1c597 $C587 C6 00                   ;
bne      LC579                         ; 0x1c599 $C589 D0 EE                   ;
ldy      #$03                          ; 0x1c59b $C58B A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1c59d $C58D B1 D4                   ; Area Header Byte 3; Area Header Byte 3
sta      $07AF                         ; 0x1c59f $C58F 8D AF 07                ;
lda      #$00                          ; 0x1c5a2 $C592 A9 00                   ; A = 00
sta      $072F                         ; 0x1c5a4 $C594 8D 2F 07                ; Area Data Reading Offset
sta      $010A                         ; 0x1c5a7 $C597 8D 0A 01                ;
ldy      #$03                          ; 0x1c5aa $C59A A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1c5ac $C59C B1 D4                   ; Area Header Byte 3; Area Header Byte 3
and      #$07                          ; 0x1c5ae $C59E 29 07                   ; keep bits .... .xxx (BG Map)
beq      LC5C2                         ; 0x1c5b0 $C5A0 F0 20                   ;
;If Background Map Code > 0, get pointer and process Map Data                  ;
asl                                    ; 0x1c5b2 $C5A2 0A                      ;
tax                                    ; 0x1c5b3 $C5A3 AA                      ;
dex                                    ; 0x1c5b4 $C5A4 CA                      ;
dex                                    ; 0x1c5b5 $C5A5 CA                      ;
lda      $D4                           ; 0x1c5b6 $C5A6 A5 D4                   ;
pha                                    ; 0x1c5b8 $C5A8 48                      ;
lda      $D5                           ; 0x1c5b9 $C5A9 A5 D5                   ;
pha                                    ; 0x1c5bb $C5AB 48                      ;
lda      bank1_Pointer_table_for_Background_Areas_Data,x; 0x1c5bc $C5AC BD 00 80; Background Map Data Pointer Byte 1
sta      $D4                           ; 0x1c5bf $C5AF 85 D4                   ;
lda      bank1_Pointer_table_for_Background_Areas_Data+$01,x; 0x1c5c1 $C5B1 BD 01 80; Background Map Data Pointer Byte 1
sta      $D5                           ; 0x1c5c4 $C5B4 85 D5                   ;
jsr      bank7_process_map_data        ; 0x1c5c6 $C5B6 20 55 C7                ; Process Map Data
jsr      LC89D                         ; 0x1c5c9 $C5B9 20 9D C8                ;this jsr function call draws the map data, nop nop nop it out for header-commands-only drawing of the map data
pla                                    ; 0x1c5cc $C5BC 68                      ;
sta      $D5                           ; 0x1c5cd $C5BD 85 D5                   ;
pla                                    ; 0x1c5cf $C5BF 68                      ;
sta      $D4                           ; 0x1c5d0 $C5C0 85 D4                   ;
LC5C2                                                                          ;
jsr      bank7_process_map_data        ; 0x1c5d2 $C5C2 20 55 C7                ; Process Map Data
;Extra Layer                                                                   ;
ldy      #$01                          ; 0x1c5d5 $C5C5 A0 01                   ; Y = 01
lda      ($D4),y                       ; 0x1c5d7 $C5C7 B1 D4                   ; Area Data Byte 1; Area Data Byte 1
and      #$1C                          ; 0x1c5d9 $C5C9 29 1C                   ; keep bits ...x xx.. (Layers bits)
lsr                                    ; 0x1c5db $C5CB 4A                      ;
lsr                                    ; 0x1c5dc $C5CC 4A                      ;
tax                                    ; 0x1c5dd $C5CD AA                      ;
dey                                    ; 0x1c5de $C5CE 88                      ;
sty      $0717                         ; 0x1c5df $C5CF 8C 17 07                ; Screen Number for Objects (0-3)
lda      LC4AF,x                       ; 0x1c5e2 $C5D2 BD AF C4                ;
sta      $010A                         ; 0x1c5e5 $C5D5 8D 0A 01                ;
beq      LC5F9                         ; 0x1c5e8 $C5D8 F0 1F                   ;
LC5DA                                                                          ;
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x1c5ea $C5DA 20 47 C9          ; Set RAM Address for Object (0E-0F)
ldy      $010A                         ; 0x1c5ed $C5DD AC 0A 01                ;
LC5E0                                                                          ;
lda      L0000                         ; 0x1c5f0 $C5E0 A5 00                   ;
lda      bank7_Extra_Background_Layers__Bushes__Grass__etc,x; 0x1c5f2 $C5E2 BD A7 C4;
sta      (L000E),y                     ; 0x1c5f5 $C5E5 91 0E                   ;
lda      L0000                         ; 0x1c5f7 $C5E7 A5 00                   ;
iny                                    ; 0x1c5f9 $C5E9 C8                      ;
tya                                    ; 0x1c5fa $C5EA 98                      ;
and      #$0F                          ; 0x1c5fb $C5EB 29 0F                   ; keep bits .... xxxx
bne      LC5E0                         ; 0x1c5fd $C5ED D0 F1                   ;
inc      $0717                         ; 0x1c5ff $C5EF EE 17 07                ; Screen Number for Objects (0-3)
lda      $0717                         ; 0x1c602 $C5F2 AD 17 07                ;; Screen Number for Objects (0-3)
cmp      #$04                          ; 0x1c605 $C5F5 C9 04                   ;
bne      LC5DA                         ; 0x1c607 $C5F7 D0 E1                   ;
LC5F9                                                                          ;
jsr      LC89D                         ; 0x1c609 $C5F9 20 9D C8                ;
lda      #$03                          ; 0x1c60c $C5FC A9 03                   ; A = 03
sta      $071B                         ; 0x1c60e $C5FE 8D 1B 07                ;
lsr                                    ; 0x1c611 $C601 4A                      ;
sta      $071F                         ; 0x1c612 $C602 8D 1F 07                ;; ???
sta      $0720                         ; 0x1c615 $C605 8D 20 07                ;
lsr                                    ; 0x1c618 $C608 4A                      ;
sta      $071C                         ; 0x1c619 $C609 8D 1C 07                ;
sta      $0721                         ; 0x1c61c $C60C 8D 21 07                ;
sta      $0740                         ; 0x1c61f $C60F 8D 40 07                ;
ldy      $075C                         ; 0x1c622 $C612 AC 5C 07                ; Position code when entering area (0-3)
lda      #$0F                          ; 0x1c625 $C615 A9 0F                   ; A = 0F
sta      $0722                         ; 0x1c627 $C617 8D 22 07                ;
lda      $697B,y                       ; 0x1c62a $C61A B9 7B 69                ;
sta      $0732                         ; 0x1c62d $C61D 8D 32 07                ;
sta      $0733                         ; 0x1c630 $C620 8D 33 07                ;
lda      $6982,y                       ; 0x1c633 $C623 B9 82 69                ;
sta      $0734                         ; 0x1c636 $C626 8D 34 07                ;
sta      $0735                         ; 0x1c639 $C629 8D 35 07                ;
jmp      LC722                         ; 0x1c63c $C62C 4C 22 C7                ;this jump is the last chance to change sidescreen tile data(?), when we jump to $C62C we are done processing map data
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC62F                                                                          ;
lda      $076E                         ; 0x1c63f $C62F AD 6E 07                ; Graphics bank to use
jsr      bank7_chr_bank_switch__load_A ; 0x1c642 $C632 20 B1 FF                ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c645 $C635 20 C5 FF                ;
jmp      L8CE1                         ; 0x1c648 $C638 4C E1 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jmp      bank7_Load_Bank_769_at_0x8000 ; 0x1c64b $C63B 4C C9 FF                ; Load Bank $0769
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC63E                                                                          ;
inc      $0736                         ; 0x1c64e $C63E EE 36 07                ; Game Mode
jmp      LC68A                         ; 0x1c651 $C641 4C 8A C6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_take_elevator_exit                                                       ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c654 $C644 20 C9 FF                ; Load Bank $0769
lda      $0561                         ; 0x1c657 $C647 AD 61 05                ; Area Code
asl                                    ; 0x1c65a $C64A 0A                      ;
asl                                    ; 0x1c65b $C64B 0A                      ;
adc      #$01                          ; 0x1c65c $C64C 69 01                   ;
ldy      $0743                         ; 0x1c65e $C64E AC 43 07                ; Up/Down Buttons Held
cpy      #$08                          ; 0x1c661 $C651 C0 08                   ; Check for Up
bne      LC657                         ; 0x1c663 $C653 D0 02                   ;
adc      #$00                          ; 0x1c665 $C655 69 00                   ;
LC657                                                                          ;
tay                                    ; 0x1c667 $C657 A8                      ;
lda      $6AFC,y                       ; 0x1c668 $C658 B9 FC 6A                ;
lsr                                    ; 0x1c66b $C65B 4A                      ;
lsr                                    ; 0x1c66c $C65C 4A                      ;
sta      $0561                         ; 0x1c66d $C65D 8D 61 05                ; Area Code
lda      $6AFC,y                       ; 0x1c670 $C660 B9 FC 6A                ; Area Room Connectivity
and      #$03                          ; 0x1c673 $C663 29 03                   ; keep bits .... ..xx
sta      $3B                           ; 0x1c675 $C665 85 3B                   ; Link's X Position (high byte)
sta      $072A                         ; 0x1c677 $C667 8D 2A 07                ; Scrolling Offset High Byte
clc                                    ; 0x1c67a $C66A 18                      ;
adc      #$01                          ; 0x1c67b $C66B 69 01                   ;
sta      $0733                         ; 0x1c67d $C66D 8D 33 07                ;
sec                                    ; 0x1c680 $C670 38                      ;
sbc      #$02                          ; 0x1c681 $C671 E9 02                   ;
cmp      #$FF                          ; 0x1c683 $C673 C9 FF                   ;
bne      LC679                         ; 0x1c685 $C675 D0 02                   ;
lda      #$03                          ; 0x1c687 $C677 A9 03                   ; A = 03
LC679                                                                          ;
sta      $0732                         ; 0x1c689 $C679 8D 32 07                ;
LC67C                                                                          ;
ldx      #$04                          ; 0x1c68c $C67C A2 04                   ; X = 04
stx      $075C                         ; 0x1c68e $C67E 8E 5C 07                ; Position code when entering area (0-3)
jsr      LC690                         ; 0x1c691 $C681 20 90 C6                ;
inc      $0705                         ; 0x1c694 $C684 EE 05 07                ;; Related to how Link entered the room (walking, falling, elevator...)
jmp      LC722                         ; 0x1c697 $C687 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC68A                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c69a $C68A 20 C5 FF                ;
jmp      LC67C                         ; 0x1c69d $C68D 4C 7C C6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC690                                                                          ;
lda      $FD                           ; 0x1c6a0 $C690 A5 FD                   ;
and      #$F0                          ; 0x1c6a2 $C692 29 F0                   ; keep bits xxxx ....
sta      $69B3,x                       ; 0x1c6a4 $C694 9D B3 69                ;
lda      $071F                         ; 0x1c6a7 $C697 AD 1F 07                ;; ???
sta      $69BA,x                       ; 0x1c6aa $C69A 9D BA 69                ;This is where healer glitch writes 69C4 at 1, triggering scroll lock 	X=A
lda      $072C                         ; 0x1c6ad $C69D AD 2C 07                ; Scrolling Offset Low Byte
and      #$F0                          ; 0x1c6b0 $C6A0 29 F0                   ; keep bits xxxx ....
sta      $69AC,x                       ; 0x1c6b2 $C6A2 9D AC 69                ;
pha                                    ; 0x1c6b5 $C6A5 48                      ;
sec                                    ; 0x1c6b6 $C6A6 38                      ;
sbc      #$60                          ; 0x1c6b7 $C6A7 E9 60                   ;
php                                    ; 0x1c6b9 $C6A9 08                      ;
ora      #$10                          ; 0x1c6ba $C6AA 09 10                   ; set  bits ...x ....
lsr                                    ; 0x1c6bc $C6AC 4A                      ;
lsr                                    ; 0x1c6bd $C6AD 4A                      ;
lsr                                    ; 0x1c6be $C6AE 4A                      ;
lsr                                    ; 0x1c6bf $C6AF 4A                      ;
sta      $6997,x                       ; 0x1c6c0 $C6B0 9D 97 69                ;
and      #$0E                          ; 0x1c6c3 $C6B3 29 0E                   ; keep bits .... xxx.
sta      $6982,x                       ; 0x1c6c5 $C6B5 9D 82 69                ;
lda      $072A                         ; 0x1c6c8 $C6B8 AD 2A 07                ; Scrolling Offset High Byte
sta      $69A5,x                       ; 0x1c6cb $C6BB 9D A5 69                ;
plp                                    ; 0x1c6ce $C6BE 28                      ;
sbc      #$00                          ; 0x1c6cf $C6BF E9 00                   ;
and      #$03                          ; 0x1c6d1 $C6C1 29 03                   ; keep bits .... ..xx
sta      $6989,x                       ; 0x1c6d3 $C6C3 9D 89 69                ;
sta      $697B,x                       ; 0x1c6d6 $C6C6 9D 7B 69                ;
pla                                    ; 0x1c6d9 $C6C9 68                      ;
clc                                    ; 0x1c6da $C6CA 18                      ;
adc      #$60                          ; 0x1c6db $C6CB 69 60                   ;
php                                    ; 0x1c6dd $C6CD 08                      ;
and      #$E0                          ; 0x1c6de $C6CE 29 E0                   ; keep bits xxx. ....
lsr                                    ; 0x1c6e0 $C6D0 4A                      ;
lsr                                    ; 0x1c6e1 $C6D1 4A                      ;
lsr                                    ; 0x1c6e2 $C6D2 4A                      ;
lsr                                    ; 0x1c6e3 $C6D3 4A                      ;
sta      $699E,x                       ; 0x1c6e4 $C6D4 9D 9E 69                ;
lda      $072A                         ; 0x1c6e7 $C6D7 AD 2A 07                ; Scrolling Offset High Byte
plp                                    ; 0x1c6ea $C6DA 28                      ;
adc      #$01                          ; 0x1c6eb $C6DB 69 01                   ;
and      #$03                          ; 0x1c6ed $C6DD 29 03                   ; keep bits .... ..xx
sta      $6990,x                       ; 0x1c6ef $C6DF 9D 90 69                ;
lda      $3B                           ; 0x1c6f2 $C6E2 A5 3B                   ; Link's X Position (high byte)
sta      $05CC,x                       ; 0x1c6f4 $C6E4 9D CC 05                ;
lda      $4D                           ; 0x1c6f7 $C6E7 A5 4D                   ; Link's X Position (low byte)
and      #$F0                          ; 0x1c6f9 $C6E9 29 F0                   ; keep bits xxxx ....
sta      $05D3,x                       ; 0x1c6fb $C6EB 9D D3 05                ;
LC6EE                                                                          ;
rts                                    ; 0x1c6fe $C6EE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Link_falling                                                  ;
inc      $0704                         ; 0x1c6ff $C6EF EE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
lda      #$01                          ; 0x1c702 $C6F2 A9 01                   ; A = 01
sta      $19                           ; 0x1c704 $C6F4 85 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
lda      #$10                          ; 0x1c706 $C6F6 A9 10                   ; A = 10
sta      $29                           ; 0x1c708 $C6F8 85 29                   ; Link's Y Position
lda      #$02                          ; 0x1c70a $C6FA A9 02                   ; A = 02
ldy      $0707                         ; 0x1c70c $C6FC AC 07 07                ; Current World
bne      LC702                         ; 0x1c70f $C6FF D0 01                   ;
asl                                    ; 0x1c711 $C701 0A                      ;
LC702                                                                          ;
sta      $075F                         ; 0x1c712 $C702 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
lda      #$01                          ; 0x1c715 $C705 A9 01                   ; A = 01 (sound of Link falling)
sta      $EE                           ; 0x1c717 $C707 85 EE                   ; Sound Effects Type 3
jmp      LC72D                         ; 0x1c719 $C709 4C 2D C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC70C                                                                          ;
lda      $071F                         ; 0x1c71c $C70C AD 1F 07                ;; ???
sta      $0720                         ; 0x1c71f $C70F 8D 20 07                ;
lda      #$09                          ; 0x1c722 $C712 A9 09                   ; A = 09
sta      $0736                         ; 0x1c724 $C714 8D 36 07                ; Game Mode
jmp      bank7_code33                  ; 0x1c727 $C717 4C 30 E0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
flashing_effect__length__when_link_dies                                        ;
lda      #$07                          ; 0x1c72a $C71A A9 07                   ; A = 07
sta      $050E                         ; 0x1c72c $C71C 8D 0E 05                ;
jmp      LC72D                         ; 0x1c72f $C71F 4C 2D C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC722                                                                          ;
lda      #$00                          ; 0x1c732 $C722 A9 00                   ; A = 00
sta      $073D                         ; 0x1c734 $C724 8D 3D 07                ; Routine Index
inc      $0726                         ; 0x1c737 $C727 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LCF05                         ; 0x1c73a $C72A 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC72D                                                                          ;
lda      #$00                          ; 0x1c73d $C72D A9 00                   ; A = 00
sta      $0726                         ; 0x1c73f $C72F 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LCF05                         ; 0x1c742 $C732 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_Masks_for_Floor_Ceiling_Tile_Mappings                              ;
.byt    $C1,$83,$C1,$87,$C1,$8F,$C1,$9F; 0x1c745 $C735 C1 83 C1 87 C1 8F C1 9F ;
.byt    $C1,$BF,$C1,$7F,$C3,$FF,$C7,$FF; 0x1c74d $C73D C1 BF C1 7F C3 FF C7 FF ;
.byt    $E0,$03,$F0,$03,$F8,$03,$FC,$03; 0x1c755 $C745 E0 03 F0 03 F8 03 FC 03 ;
.byt    $FE,$83,$FF,$C3,$FF,$E3,$FF,$FF; 0x1c75d $C74D FE 83 FF C3 FF E3 FF FF ;
; ---------------------------------------------------------------------------- ;
bank7_process_map_data                                                         ;
lda      #$00                          ; 0x1c765 $C755 A9 00                   ; A = 00
sta      $010A                         ; 0x1c767 $C757 8D 0A 01                ;
sta      $010B                         ; 0x1c76a $C75A 8D 0B 01                ;
sta      $0717                         ; 0x1c76d $C75D 8D 17 07                ; Screen Number for Objects (0-3)
ldy      #$02                          ; 0x1c770 $C760 A0 02                   ; Y = 02
lda      ($D4),y                       ; 0x1c772 $C762 B1 D4                   ; HEADER byte 2
and      #$0F                          ; 0x1c774 $C764 29 0F                   ; keep bits .... xxxx (Initial CF Code)
sta      $0731                         ; 0x1c776 $C766 8D 31 07                ; Level Object Type and Size
lda      ($D4),y                       ; 0x1c779 $C769 B1 D4                   ; HEADER byte 2
and      #$80                          ; 0x1c77b $C76B 29 80                   ; keep bits x... ....
sta      $0486                         ; 0x1c77d $C76D 8D 86 04                ; Level "No Ceiling" flag
lda      ($D4),y                       ; 0x1c780 $C770 B1 D4                   ; HEADER byte 2
and      #$70                          ; 0x1c782 $C772 29 70                   ; keep bits .xxx ....
lsr                                    ; 0x1c784 $C774 4A                      ;
lsr                                    ; 0x1c785 $C775 4A                      ;
lsr                                    ; 0x1c786 $C776 4A                      ;
lsr                                    ; 0x1c787 $C777 4A                      ;
sta      $010C                         ; 0x1c788 $C778 8D 0C 01                ; Area Ground Type (0-7)
lda      #$04                          ; 0x1c78b $C77B A9 04                   ; A = 04
sta      $072F                         ; 0x1c78d $C77D 8D 2F 07                ; Area Data Reading Offset
jsr      bank7_Set_Addy_for_Area_Layer_Tiles__using_10C; 0x1c790 $C780 20 19 C8; Set Address for Area Layer Tiles (using 10C)
ldy      #$00                          ; 0x1c793 $C783 A0 00                   ; Y = 00
lda      ($D4),y                       ; 0x1c795 $C785 B1 D4                   ; HEADER byte 0 	SIZE
sta      $072E                         ; 0x1c797 $C787 8D 2E 07                ; Area Data Length
LC78A                                                                          ;
ldy      $072F                         ; 0x1c79a $C78A AC 2F 07                ; Area Data Reading Offset
keep_loading_the_map_data                                                      ;
lda      ($D4),y                       ; 0x1c79d $C78D B1 D4                   ;map data first byte/cmd ?
sta      $0730                         ; 0x1c79f $C78F 8D 30 07                ; Position of Object Placement
jsr      LC95C                         ; 0x1c7a2 $C792 20 5C C9                ;
LC795                                                                          ;
lda      $010B                         ; 0x1c7a5 $C795 AD 0B 01                ;
lsr                                    ; 0x1c7a8 $C798 4A                      ;
lsr                                    ; 0x1c7a9 $C799 4A                      ;
lsr                                    ; 0x1c7aa $C79A 4A                      ;
lsr                                    ; 0x1c7ab $C79B 4A                      ;
sta      $0717                         ; 0x1c7ac $C79C 8D 17 07                ; Screen Number for Objects (0-3)
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x1c7af $C79F 20 47 C9          ;
lda      $010A                         ; 0x1c7b2 $C7A2 AD 0A 01                ;
cmp      $010B                         ; 0x1c7b5 $C7A5 CD 0B 01                ;
beq      LC7C6                         ; 0x1c7b8 $C7A8 F0 1C                   ;
bpl      LC7F0                         ; 0x1c7ba $C7AA 10 44                   ;
iny                                    ; 0x1c7bc $C7AC C8                      ;
lda      ($D4),y                       ; 0x1c7bd $C7AD B1 D4                   ;
cmp      #$0F                          ; 0x1c7bf $C7AF C9 0F                   ;
bne      LC7B4                         ; 0x1c7c1 $C7B1 D0 01                   ;
iny                                    ; 0x1c7c3 $C7B3 C8                      ;
LC7B4                                                                          ;
iny                                    ; 0x1c7c4 $C7B4 C8                      ;
cpy      $072E                         ; 0x1c7c5 $C7B5 CC 2E 07                ; Area Data Length
bcc      keep_loading_the_map_data     ; 0x1c7c8 $C7B8 90 D3                   ;
dey                                    ; 0x1c7ca $C7BA 88                      ;
lda      ($D4),y                       ; 0x1c7cb $C7BB B1 D4                   ;
cmp      #$0F                          ; 0x1c7cd $C7BD C9 0F                   ;
bne      LC7C2                         ; 0x1c7cf $C7BF D0 01                   ;
dey                                    ; 0x1c7d1 $C7C1 88                      ;
LC7C2                                                                          ;
dey                                    ; 0x1c7d2 $C7C2 88                      ;
jmp      LC7F0                         ; 0x1c7d3 $C7C3 4C F0 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC7C6                                                                          ;
lda      $0730                         ; 0x1c7d6 $C7C6 AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c7d9 $C7C9 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x1c7db $C7CB C9 D0                   ;
bne      LC7E2                         ; 0x1c7dd $C7CD D0 13                   ;
;Change Default Ceiling/Floor                                                  ;
iny                                    ; 0x1c7df $C7CF C8                      ;
lda      ($D4),y                       ; 0x1c7e0 $C7D0 B1 D4                   ;
pha                                    ; 0x1c7e2 $C7D2 48                      ;
and      #$0F                          ; 0x1c7e3 $C7D3 29 0F                   ; keep bits .... xxxx
sta      $0731                         ; 0x1c7e5 $C7D5 8D 31 07                ; Level Object Type and Size
pla                                    ; 0x1c7e8 $C7D8 68                      ;
and      #$80                          ; 0x1c7e9 $C7D9 29 80                   ; keep bits x... ....
sta      $0486                         ; 0x1c7eb $C7DB 8D 86 04                ; Area "No Ceiling" flag
iny                                    ; 0x1c7ee $C7DE C8                      ;
jmp      LC7F0                         ; 0x1c7ef $C7DF 4C F0 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC7E2                                                                          ;
cpy      $072E                         ; 0x1c7f2 $C7E2 CC 2E 07                ; Area Data Length
bcs      LC7F0                         ; 0x1c7f5 $C7E5 B0 09                   ;
iny                                    ; 0x1c7f7 $C7E7 C8                      ;
lda      ($D4),y                       ; 0x1c7f8 $C7E8 B1 D4                   ;map data second byte/cmd param? 
cmp      #$0F                          ; 0x1c7fa $C7EA C9 0F                   ;
bne      LC7EF                         ; 0x1c7fc $C7EC D0 01                   ;
iny                                    ; 0x1c7fe $C7EE C8                      ;
LC7EF                                                                          ;
iny                                    ; 0x1c7ff $C7EF C8                      ;
LC7F0                                                                          ;
sty      $072F                         ; 0x1c800 $C7F0 8C 2F 07                ; Area Data Reading Offset
lda      $010B                         ; 0x1c803 $C7F3 AD 0B 01                ;
and      #$0F                          ; 0x1c806 $C7F6 29 0F                   ; keep bits .... xxxx
sta      $0A                           ; 0x1c808 $C7F8 85 0A                   ;
jsr      bank7_code14                  ; 0x1c80a $C7FA 20 2B C8                ;
inc      $010B                         ; 0x1c80d $C7FD EE 0B 01                ;
lda      $010B                         ; 0x1c810 $C800 AD 0B 01                ;
cmp      #$40                          ; 0x1c813 $C803 C9 40                   ;
beq      LC818                         ; 0x1c815 $C805 F0 11                   ;
lda      $010A                         ; 0x1c817 $C807 AD 0A 01                ;
cmp      $010B                         ; 0x1c81a $C80A CD 0B 01                ;
bpl      LC812                         ; 0x1c81d $C80D 10 03                   ;
jmp      LC78A                         ; 0x1c81f $C80F 4C 8A C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC812                                                                          ;
ldy      $072F                         ; 0x1c822 $C812 AC 2F 07                ; Area Data Reading Offset
jmp      LC795                         ; 0x1c825 $C815 4C 95 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC818                                                                          ;
rts                                    ; 0x1c828 $C818 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_Addy_for_Area_Layer_Tiles__using_10C                                 ;
lda      $0707                         ; 0x1c829 $C819 AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c82c $C81C 20 85 D3;
bank7_pointer_table9                                                           ;
.word    Build_Pointer_for_Layer_Tiles_Bank_1_and_2; 0x1c82f $C81F A3 81       ; World 0 - Bank 1 and 2
.word    L8647                         ; 0x1c831 $C821 47 86                   ; World 1 - Bank 3
.word    L8647                         ; 0x1c833 $C823 47 86                   ; World 2 - Bank 3
.word    L8167                         ; 0x1c835 $C825 67 81                   ; World 3 - Bank 4
.word    L8167                         ; 0x1c837 $C827 67 81                   ; World 4 - Bank 4
.word    L817B                         ; 0x1c839 $C829 7B 81                   ; World 5 - Bank 5
; ---------------------------------------------------------------------------- ;
bank7_code14                                                                   ;
;$0A = Memory Offset of the tile to process                                    ;
lda      $0731                         ; 0x1c83b $C82B AD 31 07                ; Level Object Type and Size
asl                                    ; 0x1c83e $C82E 0A                      ;
tay                                    ; 0x1c83f $C82F A8                      ;
ldx      #$05                          ; 0x1c840 $C830 A2 05                   ; X = 05
lda      $0486                         ; 0x1c842 $C832 AD 86 04                ; Area "No Ceiling" flag
beq      LC844                         ; 0x1c845 $C835 F0 0D                   ;
;If No Ceiling flag == 1, start at Row 2                                       ;
lda      $0A                           ; 0x1c847 $C837 A5 0A                   ;
ora      #$20                          ; 0x1c849 $C839 09 20                   ; set  bits ..x. ....
sta      $0A                           ; 0x1c84b $C83B 85 0A                   ;
lda      #$38                          ; 0x1c84d $C83D A9 38                   ; A = 38
ldx      #$03                          ; 0x1c84f $C83F A2 03                   ; X = 03
jmp      LC846                         ; 0x1c851 $C841 4C 46 C8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC844                                                                          ;
lda      #$E0                          ; 0x1c854 $C844 A9 E0                   ; A = E0
LC846                                                                          ;
sta      $010E                         ; 0x1c856 $C846 8D 0E 01                ;
stx      $010F                         ; 0x1c859 $C849 8E 0F 01                ;
LC84C                                                                          ;
sty      $08                           ; 0x1c85c $C84C 84 08                   ;
ldx      $010F                         ; 0x1c85e $C84E AE 0F 01                ;
lda      bank7_table_Masks_for_Floor_Ceiling_Tile_Mappings,y; 0x1c861 $C851 B9 35 C7;
and      $010E                         ; 0x1c864 $C854 2D 0E 01                ;
cpx      #$00                          ; 0x1c867 $C857 E0 00                   ;
beq      LC85F                         ; 0x1c869 $C859 F0 04                   ;
LC85B                                                                          ;
lsr                                    ; 0x1c86b $C85B 4A                      ;
dex                                    ; 0x1c86c $C85C CA                      ;
bne      LC85B                         ; 0x1c86d $C85D D0 FC                   ;
LC85F                                                                          ;
tay                                    ; 0x1c86f $C85F A8                      ;
lda      ($0C),y                       ; 0x1c870 $C860 B1 0C                   ;
sta      $0B                           ; 0x1c872 $C862 85 0B                   ;
ldy      $0A                           ; 0x1c874 $C864 A4 0A                   ;
cmp      #$40                          ; 0x1c876 $C866 C9 40                   ; 40 = Background for All Except Type 0
beq      LC878                         ; 0x1c878 $C868 F0 0E                   ;
cmp      #$42                          ; 0x1c87a $C86A C9 42                   ; 42 = Background for Grotto (Type 0)
bne      LC874                         ; 0x1c87c $C86C D0 06                   ;
lda      (L000E),y                     ; 0x1c87e $C86E B1 0E                   ;
cmp      #$40                          ; 0x1c880 $C870 C9 40                   ;
bne      LC878                         ; 0x1c882 $C872 D0 04                   ;
LC874                                                                          ;
lda      $0B                           ; 0x1c884 $C874 A5 0B                   ;
sta      (L000E),y                     ; 0x1c886 $C876 91 0E                   ;
LC878                                                                          ;
tya                                    ; 0x1c888 $C878 98                      ;
clc                                    ; 0x1c889 $C879 18                      ;
adc      #$10                          ; 0x1c88a $C87A 69 10                   ;
sta      $0A                           ; 0x1c88c $C87C 85 0A                   ;
ldy      $08                           ; 0x1c88e $C87E A4 08                   ;
lsr      $010E                         ; 0x1c890 $C880 4E 0E 01                ;
dec      $010F                         ; 0x1c893 $C883 CE 0F 01                ;
bpl      LC84C                         ; 0x1c896 $C886 10 C4                   ;
ldx      #$05                          ; 0x1c898 $C888 A2 05                   ; X = 05
iny                                    ; 0x1c89a $C88A C8                      ;
tya                                    ; 0x1c89b $C88B 98                      ;
and      #$01                          ; 0x1c89c $C88C 29 01                   ; keep bits .... ...x
bne      LC844                         ; 0x1c89e $C88E D0 B4                   ;
ldy      $0A                           ; 0x1c8a0 $C890 A4 0A                   ;
lda      $010D                         ; 0x1c8a2 $C892 AD 0D 01                ;; Area Bottom Row Tile Code
sta      (L000E),y                     ; 0x1c8a5 $C895 91 0E                   ;
tya                                    ; 0x1c8a7 $C897 98                      ;
and      #$0F                          ; 0x1c8a8 $C898 29 0F                   ; keep bits .... xxxx
sta      $0A                           ; 0x1c8aa $C89A 85 0A                   ;
rts                                    ; 0x1c8ac $C89C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC89D                                                                          ;
lda      #$00                          ; 0x1c8ad $C89D A9 00                   ; A = 00
sta      $0717                         ; 0x1c8af $C89F 8D 17 07                ; Screen Number for Objects (0-3)
sta      $010A                         ; 0x1c8b2 $C8A2 8D 0A 01                ;
sta      $0757                         ; 0x1c8b5 $C8A5 8D 57 07                ; Elevator Generated by Objects Construction
sta      $0758                         ; 0x1c8b8 $C8A8 8D 58 07                ; Locked Door Generated by Objects Construction
tay                                    ; 0x1c8bb $C8AB A8                      ;
lda      ($D4),y                       ; 0x1c8bc $C8AC B1 D4                   ; HEADER byte 0 ; get byte 0 of Area Data
sta      $072E                         ; 0x1c8be $C8AE 8D 2E 07                ; Area Data Length
iny                                    ; 0x1c8c1 $C8B1 C8                      ;
lda      ($D4),y                       ; 0x1c8c2 $C8B2 B1 D4                   ; HEADER byte 1; get byte 1 of Area Data
and      #$60                          ; 0x1c8c4 $C8B4 29 60                   ; keep bits .xx. .... (Area Width)
lsr                                    ; 0x1c8c6 $C8B6 4A                      ;
lsr                                    ; 0x1c8c7 $C8B7 4A                      ;
lsr                                    ; 0x1c8c8 $C8B8 4A                      ;
lsr                                    ; 0x1c8c9 $C8B9 4A                      ;
lsr                                    ; 0x1c8ca $C8BA 4A                      ;
sta      $D1                           ; 0x1c8cb $C8BB 85 D1                   ; Area Width
lda      #$04                          ; 0x1c8cd $C8BD A9 04                   ; A = 04
sta      $072F                         ; 0x1c8cf $C8BF 8D 2F 07                ; Area Data Reading Offset
ldy      $072F                         ; 0x1c8d2 $C8C2 AC 2F 07                ;rts here to only do the header's draw commands(?) <---i dont  think so, check 0x1c5c9 
LC8C5                                                                          ;
lda      ($D4),y                       ; 0x1c8d5 $C8C5 B1 D4                   ; first byte of MAPDATA data
sta      $0730                         ; 0x1c8d7 $C8C7 8D 30 07                ; Position of Object Placement
jsr      bank7_Check_for_Skip_Object__E0_; 0x1c8da $C8CA 20 88 C9              ;
iny                                    ; 0x1c8dd $C8CD C8                      ;
lda      ($D4),y                       ; 0x1c8de $C8CE B1 D4                   ;
sta      $0731                         ; 0x1c8e0 $C8D0 8D 31 07                ; Level Object Type and Size
iny                                    ; 0x1c8e3 $C8D3 C8                      ;
sty      $072F                         ; 0x1c8e4 $C8D4 8C 2F 07                ; Area Data Reading Offset
jsr      LC95F                         ; 0x1c8e7 $C8D7 20 5F C9                ;
lda      $0730                         ; 0x1c8ea $C8DA AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c8ed $C8DD 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x1c8ef $C8DF C9 D0                   ;
bne      LC8E9                         ; 0x1c8f1 $C8E1 D0 06                   ;
cpy      $072E                         ; 0x1c8f3 $C8E3 CC 2E 07                ; Area Data Length
bne      LC8C5                         ; 0x1c8f6 $C8E6 D0 DD                   ;
rts                                    ; 0x1c8f8 $C8E8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8E9                                                                          ;
lda      $0731                         ; 0x1c8f9 $C8E9 AD 31 07                ; Level Object Type and Size
and      #$F0                          ; 0x1c8fc $C8EC 29 F0                   ; keep bits xxxx ....
beq      LC8F6                         ; 0x1c8fe $C8EE F0 06                   ;
jsr      LC912                         ; 0x1c900 $C8F0 20 12 C9                ;
jmp      LC909                         ; 0x1c903 $C8F3 4C 09 C9                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8F6                                                                          ;
lda      $0731                         ; 0x1c906 $C8F6 AD 31 07                ; Level Object Type and Size
cmp      #$0F                          ; 0x1c909 $C8F9 C9 0F                   ; 0F = Collectable Object
bne      LC906                         ; 0x1c90b $C8FB D0 09                   ;
jsr      LC9A5                         ; 0x1c90d $C8FD 20 A5 C9                ;
inc      $072F                         ; 0x1c910 $C900 EE 2F 07                ; Area Data Reading Offset
jmp      LC909                         ; 0x1c913 $C903 4C 09 C9                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC906                                                                          ;
jsr      bank7_Set_Address_for_Small_Object; 0x1c916 $C906 20 27 C9            ; Set Address for Background Object
LC909                                                                          ;
ldy      $072F                         ; 0x1c919 $C909 AC 2F 07                ; Area Data Reading Offset
cpy      $072E                         ; 0x1c91c $C90C CC 2E 07                ; Area Data Length
bne      LC8C5                         ; 0x1c91f $C90F D0 B4                   ;
rts                                    ; 0x1c921 $C911 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC912                                                                          ;
ldx      $0731                         ; 0x1c922 $C912 AE 31 07                ; Level Object Type and Size
lda      $0707                         ; 0x1c925 $C915 AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c928 $C918 20 85 D3; Set Object Construction Address
bank7_Pointer_table_for_Objects_Construction_Address                           ;
.word    bank1_code0                   ; 0x1c92b $C91B EE 80                   ;Overworld Areas (WH DM EH MI)
.word    L9B86                         ; 0x1c92d $C91D 86 9B                   ;Towns in West Hyrule
.word    L9B86                         ; 0x1c92f $C91F 86 9B                   ;Towns in East Hyrule
.word    bank1_code0                   ; 0x1c931 $C921 EE 80                   ;Palaces Type A
.word    bank1_code0                   ; 0x1c933 $C923 EE 80                   ;Palaces Type B
.word    bank1_code0                   ; 0x1c935 $C925 EE 80                   ;Great Palace                  
; ---------------------------------------------------------------------------- ;
bank7_Set_Address_for_Small_Object                                             ;
ldx      $0731                         ; 0x1c937 $C927 AE 31 07                ; Level Object Type and Size
lda      $0707                         ; 0x1c93a $C92A AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c93d $C92D 20 85 D3; Set Object Construction Address
bank7_Pointer_table_for_Small_Objects_Construction_Address                     ;
.word    bank1_code1                   ; 0x1c940 $C930 2F 81                   ;Overworld Areas (WH DM EH MI)
.word    L9BCB                         ; 0x1c942 $C932 CB 9B                   ;Towns in West Hyrule
.word    L9BCB                         ; 0x1c944 $C934 CB 9B                   ;Towns in East Hyrule
.word    bank1_code1                   ; 0x1c946 $C936 2F 81                   ;Palaces Type A
.word    bank1_code1                   ; 0x1c948 $C938 2F 81                   ;Palaces Type B
.word    bank1_code1                   ; 0x1c94a $C93A 2F 81                   ;Great Palace
bank7_Pointer_table_for_location_of_the_4_screens_in_RAM                       ;
.word    LD000                         ; 0x1c94c $C93C 00 D0                   ;
.word    L70A0                         ; 0x1c94e $C93E A0 70                   ;
.word    L6060                         ; 0x1c950 $C940 60 60                   ;
.word    L6261                         ; 0x1c952 $C942 61 62                   ;
; ---------------------------------------------------------------------------- ;
bank7_Set_RAM_Address_for_Object0E0F                                           ;
ldy      $0730                         ; 0x1c954 $C944 AC 30 07                ; Position of Object Placement
bank7_Set_Ram_Addy_for_Object__0E_0F                                           ;
tya                                    ; 0x1c957 $C947 98                      ;
pha                                    ; 0x1c958 $C948 48                      ;
lda      $0717                         ; 0x1c959 $C949 AD 17 07                ; Screen Number for Objects (0-3)
and      #$03                          ; 0x1c95c $C94C 29 03                   ; keep bits .... ..xx
tay                                    ; 0x1c95e $C94E A8                      ;
lda      bank7_Pointer_table_for_location_of_the_4_screens_in_RAM,y; 0x1c95f $C94F B9 3C C9;
sta      L000E                         ; 0x1c962 $C952 85 0E                   ;
lda      bank7_Pointer_table_for_location_of_the_4_screens_in_RAM+$04,y; 0x1c964 $C954 B9 40 C9;
sta      $0F                           ; 0x1c967 $C957 85 0F                   ;
pla                                    ; 0x1c969 $C959 68                      ;
tay                                    ; 0x1c96a $C95A A8                      ;
rts                                    ; 0x1c96b $C95B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC95C                                                                          ;
jsr      bank7_Check_for_Skip_Object__E0_; 0x1c96c $C95C 20 88 C9              ; Check for Skip Object (E0)
LC95F                                                                          ;
lda      $0730                         ; 0x1c96f $C95F AD 30 07                ; Position of Object Placement
and      #$0F                          ; 0x1c972 $C962 29 0F                   ; keep bits .... xxxx
clc                                    ; 0x1c974 $C964 18                      ;
adc      $010A                         ; 0x1c975 $C965 6D 0A 01                ;
sta      $010A                         ; 0x1c978 $C968 8D 0A 01                ;
and      #$0F                          ; 0x1c97b $C96B 29 0F                   ; keep bits .... xxxx
pha                                    ; 0x1c97d $C96D 48                      ;
lda      $0730                         ; 0x1c97e $C96E AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c981 $C971 29 F0                   ; keep bits xxxx ....
sta      $0730                         ; 0x1c983 $C973 8D 30 07                ;; Position of Object Placement
pla                                    ; 0x1c986 $C976 68                      ;
ora      $0730                         ; 0x1c987 $C977 0D 30 07                ; Position of Object Placement
sta      $0730                         ; 0x1c98a $C97A 8D 30 07                ;; Position of Object Placement
lda      $010A                         ; 0x1c98d $C97D AD 0A 01                ;
lsr                                    ; 0x1c990 $C980 4A                      ;
lsr                                    ; 0x1c991 $C981 4A                      ;
lsr                                    ; 0x1c992 $C982 4A                      ;
lsr                                    ; 0x1c993 $C983 4A                      ;
sta      $0717                         ; 0x1c994 $C984 8D 17 07                ; Screen Number for Objects (0-3)
rts                                    ; 0x1c997 $C987 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Check_for_Skip_Object__E0_                                               ;
lda      $0730                         ; 0x1c998 $C988 AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c99b $C98B 29 F0                   ; keep bits xxxx ....
cmp      #$E0                          ; 0x1c99d $C98D C9 E0                   ;
bne      LC9A4                         ; 0x1c99f $C98F D0 13                   ;
lda      $0730                         ; 0x1c9a1 $C991 AD 30 07                ; Position of Object Placement
and      #$03                          ; 0x1c9a4 $C994 29 03                   ; keep bits .... ..xx
asl                                    ; 0x1c9a6 $C996 0A                      ;
asl                                    ; 0x1c9a7 $C997 0A                      ;
asl                                    ; 0x1c9a8 $C998 0A                      ;
asl                                    ; 0x1c9a9 $C999 0A                      ;
sta      $010A                         ; 0x1c9aa $C99A 8D 0A 01                ;
iny                                    ; 0x1c9ad $C99D C8                      ;
iny                                    ; 0x1c9ae $C99E C8                      ;
lda      ($D4),y                       ; 0x1c9af $C99F B1 D4                   ;
sta      $0730                         ; 0x1c9b1 $C9A1 8D 30 07                ; Position of Object Placement
LC9A4                                                                          ;
rts                                    ; 0x1c9b4 $C9A4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC9A5                                                                          ;
ldx      #$05                          ; 0x1c9b5 $C9A5 A2 05                   ; X = 05
LC9A7                                                                          ;
lda      $B6,x                         ; 0x1c9b7 $C9A7 B5 B6                   ; Generated Enemy Slot
beq      LC9AF                         ; 0x1c9b9 $C9A9 F0 04                   ;
dex                                    ; 0x1c9bb $C9AB CA                      ;
bpl      LC9A7                         ; 0x1c9bc $C9AC 10 F9                   ;
inx                                    ; 0x1c9be $C9AE E8                      ;
LC9AF                                                                          ;
stx      $10                           ; 0x1c9bf $C9AF 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $0717                         ; 0x1c9c1 $C9B1 AD 17 07                ; Screen Number for Objects (0-3)
sta      $3C,x                         ; 0x1c9c4 $C9B4 95 3C                   ; Enemy X position (high byte)
tax                                    ; 0x1c9c6 $C9B6 AA                      ;
jsr      LC2A6                         ; 0x1c9c7 $C9B7 20 A6 C2                ;
ldx      $10                           ; 0x1c9ca $C9BA A6 10                   ;; used as monster x register ;draw boss hp bar
cmp      #$00                          ; 0x1c9cc $C9BC C9 00                   ;
beq      LC9E9                         ; 0x1c9ce $C9BE F0 29                   ;
ror      $BC,x                         ; 0x1c9d0 $C9C0 76 BC                   ;; Generated Enemy Y Position ?
lda      $0730                         ; 0x1c9d2 $C9C2 AD 30 07                ; Position of Object Placement
pha                                    ; 0x1c9d5 $C9C5 48                      ;
asl                                    ; 0x1c9d6 $C9C6 0A                      ;
asl                                    ; 0x1c9d7 $C9C7 0A                      ;
asl                                    ; 0x1c9d8 $C9C8 0A                      ;
asl                                    ; 0x1c9d9 $C9C9 0A                      ;
clc                                    ; 0x1c9da $C9CA 18                      ;
adc      #$03                          ; 0x1c9db $C9CB 69 03                   ;
sta      $4E,x                         ; 0x1c9dd $C9CD 95 4E                   ; Enemy X position (low byte)
pla                                    ; 0x1c9df $C9CF 68                      ;
and      #$F0                          ; 0x1c9e0 $C9D0 29 F0                   ; keep bits xxxx ....
clc                                    ; 0x1c9e2 $C9D2 18                      ;
adc      #$20                          ; 0x1c9e3 $C9D3 69 20                   ;
sta      $2A,x                         ; 0x1c9e5 $C9D5 95 2A                   ; Enemy Y Position
lda      #$01                          ; 0x1c9e7 $C9D7 A9 01                   ; A = 01
sta      $1A,x                         ; 0x1c9e9 $C9D9 95 1A                   ;
sta      $B6,x                         ; 0x1c9eb $C9DB 95 B6                   ; Generated Enemy Slot
sta      $A1,x                         ; 0x1c9ed $C9DD 95 A1                   ; Enemy Code
sta      $057E,x                       ; 0x1c9ef $C9DF 9D 7E 05                ; Enemy Y Velocity
ldy      $072F                         ; 0x1c9f2 $C9E2 AC 2F 07                ; Area Data Reading Offset
lda      ($D4),y                       ; 0x1c9f5 $C9E5 B1 D4                   ;
sta      $AF,x                         ; 0x1c9f7 $C9E7 95 AF                   ; Item Code
LC9E9                                                                          ;
rts                                    ; 0x1c9f9 $C9E9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table11                                                                  ;
.byt    $12,$16,$2A,$16                ; 0x1c9fa $C9EA 12 16 2A 16             ;
LC9EE                                                                          ;
.byt    $20,$C5,$FF                    ; 0x1c9fe $C9EE 20 C5 FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code15                                                                   ;
lda      #$0A                          ; 0x1ca01 $C9F1 A9 0A                   ; A = 0A
sta      $80                           ; 0x1ca03 $C9F3 85 80                   ; Current Animation Frame for Link (OW and SS)
jsr      bank7_Links_Display_Routine   ; 0x1ca05 $C9F5 20 F0 EB                ;
lda      $12                           ; 0x1ca08 $C9F8 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x1ca0a $C9FA 29 03                   ; keep bits .... ..xx
tax                                    ; 0x1ca0c $C9FC AA                      ;
lda      bank7_table11,x               ; 0x1ca0d $C9FD BD EA C9                ;
sta      $696F                         ; 0x1ca10 $CA00 8D 6F 69                ;
lda      $050E                         ; 0x1ca13 $CA03 AD 0E 05                ;
bne      LCA15                         ; 0x1ca16 $CA06 D0 0D                   ;
lda      #$0F                          ; 0x1ca18 $CA08 A9 0F                   ; A = 0F
sta      $696F                         ; 0x1ca1a $CA0A 8D 6F 69                ;
lda      #$10                          ; 0x1ca1d $CA0D A9 10                   ; A = 10
jsr      bank7_chr_bank_switch__load_A ; 0x1ca1f $CA0F 20 B1 FF                ;
inc      $0736                         ; 0x1ca22 $CA12 EE 36 07                ; Game Mode
LCA15                                                                          ;
lda      #$04                          ; 0x1ca25 $CA15 A9 04                   ; A = 04
LCA17                                                                          ;
sta      $0725                         ; 0x1ca27 $CA17 8D 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1ca2a $CA1A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA1B                                                                          ;
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1ca2b $CA1B 20 82 D3;
bank7_pointer_table11                                                          ;
.word    L8140                         ; 0x1ca2e $CA1E 40 81                   ;
.word    bank7_code16                  ; 0x1ca30 $CA20 24 CA                   ;
.word    LCA72                         ; 0x1ca32 $CA22 72 CA                   ;
; ---------------------------------------------------------------------------- ;
bank7_code16                                                                   ;
ldx      #$01                          ; 0x1ca34 $CA24 A2 01                   ; X = 01
LCA26                                                                          ;
jsr      LCB18_fill_hp_or_mp_to_full__provide_x_register__maybe; 0x1ca36 $CA26 20 18 CB;
dex                                    ; 0x1ca39 $CA29 CA                      ;
bpl      LCA26                         ; 0x1ca3a $CA2A 10 FA                   ;
lda      #$00                          ; 0x1ca3c $CA2C A9 00                   ; A = 00
sta      $074C                         ; 0x1ca3e $CA2E 8D 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
sta      $0524                         ; 0x1ca41 $CA31 8D 24 05                ; Routine Index
sta      $0525                         ; 0x1ca44 $CA34 8D 25 05                ; Routine Delay
sta      $DE                           ; 0x1ca47 $CA37 85 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
sta      $048D                         ; 0x1ca49 $CA39 8D 8D 04                ; Related to Link's flicker after being hit ?
ldy      #$05                          ; 0x1ca4c $CA3C A0 05                   ; Y = 05
LCA3E                                                                          ;
sta      $05C3,y                       ; 0x1ca4e $CA3E 99 C3 05                ;
dey                                    ; 0x1ca51 $CA41 88                      ;
bpl      LCA3E                         ; 0x1ca52 $CA42 10 FA                   ;
dec      $0700                         ; 0x1ca54 $CA44 CE 00 07                ; Current number of lives
bne      LCA6C                         ; 0x1ca57 $CA47 D0 23                   ;
;Game Over                                                                     ;
lda      #$02                          ; 0x1ca59 $CA49 A9 02                   ; A = 02
sta      $E9                           ; 0x1ca5b $CA4B 85 E9                   ;
lda      #$F0                          ; 0x1ca5d $CA4D A9 F0                   ; A = F0 (delay to show Ganon's Return)
sta      $0501                         ; 0x1ca5f $CA4F 8D 01 05                ;; Timer
inc      $0726                         ; 0x1ca62 $CA52 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
inc      $073D                         ; 0x1ca65 $CA55 EE 3D 07                ;; Routine Index
lda      #$09                          ; 0x1ca68 $CA58 A9 09                   ; A = 09
jsr      LCA17                         ; 0x1ca6a $CA5A 20 17 CA                ;
lda      #$00                          ; 0x1ca6d $CA5D A9 00                   ; A = 00
sta      $0775                         ; 0x1ca6f $CA5F 8D 75 07                ; Current Experience (high byte)
sta      $0776                         ; 0x1ca72 $CA62 8D 76 07                ; Current Experience (low byte)
sta      $0756                         ; 0x1ca75 $CA65 8D 56 07                ; Experience to be added (low byte)
sta      $0755                         ; 0x1ca78 $CA68 8D 55 07                ; Experience to be added (high byte)
rts                                    ; 0x1ca7b $CA6B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA6C                                                                          ;
lda      #$06                          ; 0x1ca7c $CA6C A9 06                   ; A = 06
sta      $076C                         ; 0x1ca7e $CA6E 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
LCA71                                                                          ;
rts                                    ; 0x1ca81 $CA71 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA72                                                                          ;
lda      #$00                          ; 0x1ca82 $CA72 A9 00                   ; A = 00
sta      $0726                         ; 0x1ca84 $CA74 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
lda      $F7                           ; 0x1ca87 $CA77 A5 F7                   ; Controller 1 Buttons Held
and      #$10                          ; 0x1ca89 $CA79 29 10                   ; keep bits ...x .... (Start button)
bne      LCA82                         ; 0x1ca8b $CA7B D0 05                   ;
lda      $0501                         ; 0x1ca8d $CA7D AD 01 05                ;; Timer
bne      LCA71                         ; 0x1ca90 $CA80 D0 EF                   ;
LCA82                                                                          ;
jmp      LCF05                         ; 0x1ca92 $CA82 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA85                                                                          ;
lda      $F7                           ; 0x1ca95 $CA85 A5 F7                   ; Controller 1 Buttons Held
and      #$30                          ; 0x1ca97 $CA87 29 30                   ; keep bits ..xx .... (Start/Select buttons)
asl                                    ; 0x1ca99 $CA89 0A                      ;
asl                                    ; 0x1ca9a $CA8A 0A                      ;
sta      L0000                         ; 0x1ca9b $CA8B 85 00                   ;
lda      $0744                         ; 0x1ca9d $CA8D AD 44 07                ; Controller 1 Buttons Held
and      #$30                          ; 0x1caa0 $CA90 29 30                   ; keep bits ..xx ....
asl                                    ; 0x1caa2 $CA92 0A                      ;
asl                                    ; 0x1caa3 $CA93 0A                      ;
cmp      L0000                         ; 0x1caa4 $CA94 C5 00                   ;
beq      LCAF6                         ; 0x1caa6 $CA96 F0 5E                   ;
bit      L0000                         ; 0x1caa8 $CA98 24 00                   ;
bvc      LCAF7_gameoverscreen_select_button_pressed; 0x1caaa $CA9A 50 5B       ;
lda      $079F                         ; 0x1caac $CA9C AD 9F 07                ; Number of Continues used
cmp      #$FF                          ; 0x1caaf $CA9F C9 FF                   ;
beq      LCAA6                         ; 0x1cab1 $CAA1 F0 03                   ;
inc      $079F                         ; 0x1cab3 $CAA3 EE 9F 07                ; Number of Continues + 1
;Reset Memory Ranges                                                           ;
LCAA6                                                                          ;
ldx      #$0F                          ; 0x1cab6 $CAA6 A2 0F                   ; X = 0F
lda      #$00                          ; 0x1cab8 $CAA8 A9 00                   ; A = 00
LCAAA                                                                          ;
sta      $E0,x                         ; 0x1caba $CAAA 95 E0                   ;
dex                                    ; 0x1cabc $CAAC CA                      ;
bpl      LCAAA                         ; 0x1cabd $CAAD 10 FB                   ;
ldy      #$C0                          ; 0x1cabf $CAAF A0 C0                   ; Y = C0
LCAB1                                                                          ;
sta      $0700,y                       ; 0x1cac1 $CAB1 99 00 07                ;
iny                                    ; 0x1cac4 $CAB4 C8                      ;
bne      LCAB1                         ; 0x1cac5 $CAB5 D0 FA                   ;
lda      $0488                         ; 0x1cac7 $CAB7 AD 88 04                ;
beq      LCAC4                         ; 0x1caca $CABA F0 08                   ;
lda      #$40                          ; 0x1cacc $CABC A9 40                   ; A = 40
sta      $07B0                         ; 0x1cace $CABE 8D B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
jmp      LCF05                         ; 0x1cad1 $CAC1 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCAC4                                                                          ;
sta      $0775                         ; 0x1cad4 $CAC4 8D 75 07                ; Current Experience (high byte)
sta      $0776                         ; 0x1cad7 $CAC7 8D 76 07                ; Current Experience (low byte)
sta      $0756                         ; 0x1cada $CACA 8D 56 07                ; Experience to be added (low byte)
sta      $0755                         ; 0x1cadd $CACD 8D 55 07                ; Experience to be added (high byte)
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1cae0 $CAD0 20 30 CF; Region Code * 5 + World Code
cmp      #$0F                          ; 0x1cae3 $CAD3 C9 0F                   ; Check if in Great Palace
beq      bank7_restore_in_grand_palace_restore_restart_in_gp; 0x1cae5 $CAD5 F0 07;
lda      #$00                          ; 0x1cae7 $CAD7 A9 00                   ; A = 00
ldy      #$01                          ; 0x1cae9 $CAD9 A0 01                   ; Y = 01
jmp      LCAF0                         ; 0x1caeb $CADB 4C F0 CA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_restore_in_grand_palace_restore_restart_in_gp                            ;
jsr      bank7_Reset_Number_of_Lives__to_3_; 0x1caee $CADE 20 58 C3            ; Reset Number of Lives (to 3)
lda      #$00                          ; 0x1caf1 $CAE1 A9 00                   ; A = 00
sta      $0561                         ; 0x1caf3 $CAE3 8D 61 05                ; Area Code
sta      $0701                         ; 0x1caf6 $CAE6 8D 01 07                ; Facing direction when entering area
sta      $075C                         ; 0x1caf9 $CAE9 8D 5C 07                ; Position code when entering area (0-3)
lda      #$01                          ; 0x1cafc $CAEC A9 01                   ; A = 01 (if 0, restart in North Castle)
ldy      #$02                          ; 0x1cafe $CAEE A0 02                   ; Y = 02
LCAF0                                                                          ;
sta      $076C                         ; 0x1cb00 $CAF0 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
sty      $075F                         ; 0x1cb03 $CAF3 8C 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCAF6                                                                          ;
rts                                    ; 0x1cb06 $CAF6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCAF7_gameoverscreen_select_button_pressed                                     ;
bpl      LCAF6                         ; 0x1cb07 $CAF7 10 FD                   ;
lda      #$10                          ; 0x1cb09 $CAF9 A9 10                   ; A = 10
sta      $EF                           ; 0x1cb0b $CAFB 85 EF                   ; Sound Effects Type 4
ldy      #$06                          ; 0x1cb0d $CAFD A0 06                   ; Y = 06
LCAFF                                                                          ;
lda      $6974,y                       ; 0x1cb0f $CAFF B9 74 69                ;
sta      L0302,y                       ; 0x1cb12 $CB02 99 02 03                ;
dey                                    ; 0x1cb15 $CB05 88                      ;
bpl      LCAFF                         ; 0x1cb16 $CB06 10 F7                   ;
lda      $0488                         ; 0x1cb18 $CB08 AD 88 04                ;
eor      #$01                          ; 0x1cb1b $CB0B 49 01                   ; flip bits .... ...x
sta      $0488                         ; 0x1cb1d $CB0D 8D 88 04                ;
asl                                    ; 0x1cb20 $CB10 0A                      ;
tay                                    ; 0x1cb21 $CB11 A8                      ;
lda      #$FA                          ; 0x1cb22 $CB12 A9 FA                   ; A = FA
sta      $0305,y                       ; 0x1cb24 $CB14 99 05 03                ;
rts                                    ; 0x1cb27 $CB17 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB18_fill_hp_or_mp_to_full__provide_x_register__maybe                         ;
;Magic Containers to Magic Units in Meter                                      ;
;Heart Containers to Life Units in Meter                                       ;
;                                                                              ;
;X = 0 -> Magic                                                                ;
;X = 1 -> Life                                                                 ;
;                                                                              ;
;Units Left = Number of Containers * 20 - 1                                    ;
lda      $0783,x                       ; 0x1cb28 $CB18 BD 83 07                ; Current number of Magic/Heart Containers
asl                                    ; 0x1cb2b $CB1B 0A                      ;
asl                                    ; 0x1cb2c $CB1C 0A                      ;
asl                                    ; 0x1cb2d $CB1D 0A                      ;
asl                                    ; 0x1cb2e $CB1E 0A                      ;
asl                                    ; 0x1cb2f $CB1F 0A                      ;
sec                                    ; 0x1cb30 $CB20 38                      ;
sbc      #$01                          ; 0x1cb31 $CB21 E9 01                   ;
sta      $0773,x                       ; 0x1cb33 $CB23 9D 73 07                ; Current Magic/Life left in meter
rts                                    ; 0x1cb36 $CB26 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB27                                                                          ;
lda      #$0E                          ; 0x1cb37 $CB27 A9 0E                   ; A = 0E
sta      $076E                         ; 0x1cb39 $CB29 8D 6E 07                ; Graphics bank to use
jsr      LC388                         ; 0x1cb3c $CB2C 20 88 C3                ;
jmp      LC360                         ; 0x1cb3f $CB2F 4C 60 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Height_of_frontier_between_North_and_South                               ;
;3C	Region 0	West Hyrule                                                       ;
;4B	Region 1	Death Mountain, Maze Island                                       ;
;4C	Region 2	East Hyrule                                                       ;
.byt    $3C,$4B,$4C                    ; 0x1cb42 $CB32 3C 4B 4C                ;
; ---------------------------------------------------------------------------- ;
bank7_code17                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cb45 $CB35 20 C9 FF                ; Load Bank in $0769
ldy      $0748                         ; 0x1cb48 $CB38 AC 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
cpy      #$FF                          ; 0x1cb4b $CB3B C0 FF                   ;
bne      LCB42                         ; 0x1cb4d $CB3D D0 03                   ;
jmp      bank7_Determine_the_Random_Battle_according_to_Links_position_in_OW; 0x1cb4f $CB3F 4C 0F CC;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB42                                                                          ;
lda      $0706                         ; 0x1cb52 $CB42 AD 06 07                ; Current Region
bne      LCB4B                         ; 0x1cb55 $CB45 D0 04                   ;
cpy      #$00                          ; 0x1cb57 $CB47 C0 00                   ;
beq      LCB59                         ; 0x1cb59 $CB49 F0 0E                   ;
;On exit, appear at the location of area index minus this value (0-3)          ;
LCB4B                                                                          ;
lda      $07AC                         ; 0x1cb5b $CB4B AD AC 07                ;
ora      $07AA                         ; 0x1cb5e $CB4E 0D AA 07                ;
ora      $07AD                         ; 0x1cb61 $CB51 0D AD 07                ;; * related to Raft Animation *
bne      LCB59                         ; 0x1cb64 $CB54 D0 03                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cb66 $CB56 20 3D D0   ; Mute Music
LCB59                                                                          ;
lda      $6A3F,y                       ; 0x1cb69 $CB59 B9 3F 6A                ; Area Byte 1 (X Position)
and      #$C0                          ; 0x1cb6c $CB5C 29 C0                   ; keep bits xx.. ....
asl                                    ; 0x1cb6e $CB5E 0A                      ;
rol                                    ; 0x1cb6f $CB5F 2A                      ;
rol                                    ; 0x1cb70 $CB60 2A                      ;
sta      L0000                         ; 0x1cb71 $CB61 85 00                   ;
tya                                    ; 0x1cb73 $CB63 98                      ;
sec                                    ; 0x1cb74 $CB64 38                      ;
sbc      L0000                         ; 0x1cb75 $CB65 E5 00                   ;
sta      $0748                         ; 0x1cb77 $CB67 8D 48 07                ; Overworld Area out of Side View
lda      $6A00,y                       ; 0x1cb7a $CB6A B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1cb7d $CB6D 0A                      ;
bcc      LCBB8                         ; 0x1cb7e $CB6E 90 48                   ;
lda      #$00                          ; 0x1cb80 $CB70 A9 00                   ; A = 00
sta      $07DB                         ; 0x1cb82 $CB72 8D DB 07                ;; Something for Palaces ?
jsr      bank7_Get_Area_Code__Enter_Code_and_Direction; 0x1cb85 $CB75 20 97 CC ; Get Area Code, Enter Code and Direction
lda      $0748                         ; 0x1cb88 $CB78 AD 48 07                ; Overworld Area out of Side View
sec                                    ; 0x1cb8b $CB7B 38                      ;
sbc      #$2C                          ; 0x1cb8c $CB7C E9 2C                   ;
lsr                                    ; 0x1cb8e $CB7E 4A                      ;
sta      $056B                         ; 0x1cb8f $CB7F 8D 6B 05                ; Town Code
;$056B = ($0748 - #$2C) / 2 (no remainder)                                     ;
lda      $0748                         ; 0x1cb92 $CB82 AD 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
sec                                    ; 0x1cb95 $CB85 38                      ;
sbc      #$34                          ; 0x1cb96 $CB86 E9 34                   ;
sta      $056C                         ; 0x1cb98 $CB88 8D 6C 05                ; Palace Code
;$056C = $0748 - #$34                                                          ;
lda      $0706                         ; 0x1cb9b $CB8B AD 06 07                ; Current Region
sta      $070A                         ; 0x1cb9e $CB8E 8D 0A 07                ;; Previous Region ?
lda      $6ABD,y                       ; 0x1cba1 $CB91 B9 BD 6A                ; Area Byte 3 (World Number)
pha                                    ; 0x1cba4 $CB94 48                      ;
and      #$03                          ; 0x1cba5 $CB95 29 03                   ; keep bits .... ..xx
sta      $0706                         ; 0x1cba7 $CB97 8D 06 07                ; Current Region
beq      LCBA5                         ; 0x1cbaa $CB9A F0 09                   ;
;If Region != 0, Town Code + 4                                                 ;
lda      $056B                         ; 0x1cbac $CB9C AD 6B 05                ; Town Code
clc                                    ; 0x1cbaf $CB9F 18                      ;
adc      #$04                          ; 0x1cbb0 $CBA0 69 04                   ;
sta      $056B                         ; 0x1cbb2 $CBA2 8D 6B 05                ;; Town Code	;used by wise man to pick magic to give?
LCBA5                                                                          ;
pla                                    ; 0x1cbb5 $CBA5 68                      ;
lsr                                    ; 0x1cbb6 $CBA6 4A                      ;
lsr                                    ; 0x1cbb7 $CBA7 4A                      ;
and      #$07                          ; 0x1cbb8 $CBA8 29 07                   ; keep bits .... .xxx
sta      $0707                         ; 0x1cbba $CBAA 8D 07 07                ; Current World
bne      LCBB2                         ; 0x1cbbd $CBAD D0 03                   ;
inc      $0709                         ; 0x1cbbf $CBAF EE 09 07                ;; used for going outside??
LCBB2                                                                          ;
lda      #$00                          ; 0x1cbc2 $CBB2 A9 00                   ; A = 00
sta      $0736                         ; 0x1cbc4 $CBB4 8D 36 07                ; Game Mode
rts                                    ; 0x1cbc7 $CBB7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBB8                                                                          ;
lda      $0706                         ; 0x1cbc8 $CBB8 AD 06 07                ; Current Region
ora      $0707                         ; 0x1cbcb $CBBB 0D 07 07                ; Current World
ora      $0748                         ; 0x1cbce $CBBE 0D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
beq      LCBCD                         ; 0x1cbd1 $CBC1 F0 0A                   ;
lda      $07AC                         ; 0x1cbd3 $CBC3 AD AC 07                ;
bne      LCBCD                         ; 0x1cbd6 $CBC6 D0 05                   ;
lda      #$04                          ; 0x1cbd8 $CBC8 A9 04                   ; A = 04
sta      $075F                         ; 0x1cbda $CBCA 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCBCD                                                                          ;
jsr      bank7_Get_Area_Code__Enter_Code_and_Direction; 0x1cbdd $CBCD 20 97 CC ;
;Related to the side Link enters from in a pass-through area                   ;
lda      $6ABD,y                       ; 0x1cbe0 $CBD0 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$60                          ; 0x1cbe3 $CBD3 29 60                   ; keep bits .xx. ....
beq      LCBF2                         ; 0x1cbe5 $CBD5 F0 1B                   ;
and      #$20                          ; 0x1cbe7 $CBD7 29 20                   ; keep bits ..x. ....
bne      LCBF8                         ; 0x1cbe9 $CBD9 D0 1D                   ;
lda      $0562                         ; 0x1cbeb $CBDB AD 62 05                ; Link's facing direction in OW
cmp      #$04                          ; 0x1cbee $CBDE C9 04                   ; check if Link is facing left or right
bcc      LCBE4                         ; 0x1cbf0 $CBE0 90 02                   ;
lsr                                    ; 0x1cbf2 $CBE2 4A                      ;
lsr                                    ; 0x1cbf3 $CBE3 4A                      ;
LCBE4                                                                          ;
and      #$01                          ; 0x1cbf4 $CBE4 29 01                   ; keep bits .... ...x
eor      #$01                          ; 0x1cbf6 $CBE6 49 01                   ; flip bits .... ...x
sta      $0701                         ; 0x1cbf8 $CBE8 8D 01 07                ; Facing direction when entering area
beq      LCBEF                         ; 0x1cbfb $CBEB F0 02                   ;
lda      #$03                          ; 0x1cbfd $CBED A9 03                   ; A = 03
LCBEF                                                                          ;
sta      $075C                         ; 0x1cbff $CBEF 8D 5C 07                ; Position code when entering area (0-3)
LCBF2                                                                          ;
inc      $0736                         ; 0x1cc02 $CBF2 EE 36 07                ; Game Mode
jmp      LCC40                         ; 0x1cc05 $CBF5 4C 40 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBF8                                                                          ;
lda      #$01                          ; 0x1cc08 $CBF8 A9 01                   ; A = 01
sta      $0701                         ; 0x1cc0a $CBFA 8D 01 07                ; Facing direction when entering area
lda      $075F                         ; 0x1cc0d $CBFD AD 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
cmp      #$01                          ; 0x1cc10 $CC00 C9 01                   ;
bne      LCBF2                         ; 0x1cc12 $CC02 D0 EE                   ;
sta      $075C                         ; 0x1cc14 $CC04 8D 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
jsr      LCC50                         ; 0x1cc17 $CC07 20 50 CC                ;
lda      #$11                          ; 0x1cc1a $CC0A A9 11                   ; A = 11
jmp      LCC85                         ; 0x1cc1c $CC0C 4C 85 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Determine_the_Random_Battle_according_to_Links_position_in_OW            ;
ldy      $0706                         ; 0x1cc1f $CC0F AC 06 07                ; Current Region
lda      $73                           ; 0x1cc22 $CC12 A5 73                   ; Y Position on OW (square unit)
cmp      bank7_Height_of_frontier_between_North_and_South,y; 0x1cc24 $CC14 D9 32 CB; Height of frontier between North and South
lda      #$00                          ; 0x1cc27 $CC17 A9 00                   ; A = 00
rol                                    ; 0x1cc29 $CC19 2A                      ;
sta      L0000                         ; 0x1cc2a $CC1A 85 00                   ;
lda      $0563                         ; 0x1cc2c $CC1C AD 63 05                ; Type of terrain Link is facing in OW
sec                                    ; 0x1cc2f $CC1F 38                      ;
sbc      #$04                          ; 0x1cc30 $CC20 E9 04                   ;
asl                                    ; 0x1cc32 $CC22 0A                      ;
adc      L0000                         ; 0x1cc33 $CC23 65 00                   ;
tay                                    ; 0x1cc35 $CC25 A8                      ;
lda      bank1_Code_values_for_Random_Battle_Areas_Desert,y; 0x1cc36 $CC26 B9 09 84;
ldy      #$3E                          ; 0x1cc39 $CC29 A0 3E                   ; Y = 3E
sta      $6A7E,y                       ; 0x1cc3b $CC2B 99 7E 6A                ; Area Byte 2 (Map Number)
lda      $73                           ; 0x1cc3e $CC2E A5 73                   ;; Overworld Y; Y Position on OW (square unit)
sta      $6A00,y                       ; 0x1cc40 $CC30 99 00 6A                ; Area Byte 0 (Y Position)
lda      $74                           ; 0x1cc43 $CC33 A5 74                   ;; Overworld X; X Position on OW (square unit)
sta      $6A3F,y                       ; 0x1cc45 $CC35 99 3F 6A                ; Area Byte 1 (X Position)
jsr      LCB59                         ; 0x1cc48 $CC38 20 59 CB                ;
lda      #$00                          ; 0x1cc4b $CC3B A9 00                   ; A = 00
sta      $075F                         ; 0x1cc4d $CC3D 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCC40                                                                          ;
lda      $6ABD,y                       ; 0x1cc50 $CC40 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$20                          ; 0x1cc53 $CC43 29 20                   ; keep bits ..x. .... (enter from right)
bne      LCC89                         ; 0x1cc55 $CC45 D0 42                   ;
lda      $075C                         ; 0x1cc57 $CC47 AD 5C 07                ; Position code when entering area
beq      LCC89                         ; 0x1cc5a $CC4A F0 3D                   ;
cmp      #$03                          ; 0x1cc5c $CC4C C9 03                   ;
beq      LCC89                         ; 0x1cc5e $CC4E F0 39                   ;
LCC50                                                                          ;
and      #$01                          ; 0x1cc60 $CC50 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1cc62 $CC52 8D 01 07                ; Facing direction when entering area
lda      #$70                          ; 0x1cc65 $CC55 A9 70                   ; A = 70
sta      $4D                           ; 0x1cc67 $CC57 85 4D                   ; Link's X Position (low byte)
ldx      #$0B                          ; 0x1cc69 $CC59 A2 0B                   ; X = 0B
stx      $0734                         ; 0x1cc6b $CC5B 8E 34 07                ;
ldx      #$06                          ; 0x1cc6e $CC5E A2 06                   ; X = 06
stx      $0735                         ; 0x1cc70 $CC60 8E 35 07                ;
ldx      #$00                          ; 0x1cc73 $CC63 A2 00                   ; X = 00
stx      $FD                           ; 0x1cc75 $CC65 86 FD                   ;
stx      $072C                         ; 0x1cc77 $CC67 8E 2C 07                ; Scrolling Offset Low Byte
ldx      $075C                         ; 0x1cc7a $CC6A AE 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
stx      $3B                           ; 0x1cc7d $CC6D 86 3B                   ; Link's X Position (high byte)
stx      $072A                         ; 0x1cc7f $CC6F 8E 2A 07                ; Scrolling Offset High Byte
dex                                    ; 0x1cc82 $CC72 CA                      ;
stx      $0732                         ; 0x1cc83 $CC73 8E 32 07                ;
inx                                    ; 0x1cc86 $CC76 E8                      ;
inx                                    ; 0x1cc87 $CC77 E8                      ;
stx      $0733                         ; 0x1cc88 $CC78 8E 33 07                ;
lda      $6ABD,y                       ; 0x1cc8b $CC7B B9 BD 6A                ; Area Byte 3 (World Number)
asl                                    ; 0x1cc8e $CC7E 0A                      ;
lda      #$12                          ; 0x1cc8f $CC7F A9 12                   ; A = 12
bcc      LCC85                         ; 0x1cc91 $CC81 90 02                   ;
lda      #$0C                          ; 0x1cc93 $CC83 A9 0C                   ; A = 0C
LCC85                                                                          ;
sta      $0736                         ; 0x1cc95 $CC85 8D 36 07                ; Game Mode
LCC88                                                                          ;
rts                                    ; 0x1cc98 $CC88 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC89                                                                          ;
lda      $6ABD,y                       ; 0x1cc99 $CC89 B9 BD 6A                ; Area Byte 3 (World Number)
asl                                    ; 0x1cc9c $CC8C 0A                      ;
bcc      LCC88                         ; 0x1cc9d $CC8D 90 F9                   ;
lda      #$01                          ; 0x1cc9f $CC8F A9 01                   ; A = 01
sta      $075C                         ; 0x1cca1 $CC91 8D 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
jmp      LCC50                         ; 0x1cca4 $CC94 4C 50 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Get_Area_Code__Enter_Code_and_Direction                                  ;
lda      $6A7E,y                       ; 0x1cca7 $CC97 B9 7E 6A                ; Area Byte 2 (Map Number)
pha                                    ; 0x1ccaa $CC9A 48                      ;
and      #$3F                          ; 0x1ccab $CC9B 29 3F                   ; keep bits ..xx xxxx
sta      $0561                         ; 0x1ccad $CC9D 8D 61 05                ; Area Code
pla                                    ; 0x1ccb0 $CCA0 68                      ;
asl                                    ; 0x1ccb1 $CCA1 0A                      ;
rol                                    ; 0x1ccb2 $CCA2 2A                      ;
rol                                    ; 0x1ccb3 $CCA3 2A                      ;
and      #$03                          ; 0x1ccb4 $CCA4 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1ccb6 $CCA6 8D 5C 07                ; Position code when entering area
and      #$01                          ; 0x1ccb9 $CCA9 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1ccbb $CCAB 8D 01 07                ; Facing direction when entering area
rts                                    ; 0x1ccbe $CCAE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCAF                                                                          ;
lda      #$66                          ; 0x1ccbf $CCAF A9 66                   ; A = 66
bne      LCCCC                         ; 0x1ccc1 $CCB1 D0 19                   ;
bank7_go_outside                                                               ;
lda      #$00                          ; 0x1ccc3 $CCB3 A9 00                   ; A = 00
sta      $0709                         ; 0x1ccc5 $CCB5 8D 09 07                ;; used for going outside??
sta      $075B                         ; 0x1ccc8 $CCB8 8D 5B 07                ;
ldy      $0748                         ; 0x1cccb $CCBB AC 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
lda      $6A00,y                       ; 0x1ccce $CCBE B9 00 6A                ; Area Byte 0 (Y Position)
bne      LCCCC                         ; 0x1ccd1 $CCC1 D0 09                   ;
lda      #$3D                          ; 0x1ccd3 $CCC3 A9 3D                   ; A = 3D
cmp      $6A3F,y                       ; 0x1ccd5 $CCC5 D9 3F 6A                ; Area Byte 1 (X Position)
bne      LCCAF                         ; 0x1ccd8 $CCC8 D0 E5                   ;
lda      #$51                          ; 0x1ccda $CCCA A9 51                   ; A = 51
LCCCC                                                                          ;
and      #$7F                          ; 0x1ccdc $CCCC 29 7F                   ; keep bits .xxx xxxx
sta      $73                           ; 0x1ccde $CCCE 85 73                   ; Y Position on OW (square unit)
lda      $6A3F,y                       ; 0x1cce0 $CCD0 B9 3F 6A                ; Area Byte 1 (X Position)
and      #$3F                          ; 0x1cce3 $CCD3 29 3F                   ; keep bits ..xx xxxx
sta      $74                           ; 0x1cce5 $CCD5 85 74                   ; X Position on OW (square unit)
lda      $6ABD,y                       ; 0x1cce7 $CCD7 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$40                          ; 0x1ccea $CCDA 29 40                   ; keep bits .x.. .... (unknown bit)
beq      LCCF9                         ; 0x1ccec $CCDC F0 1B                   ;
ldx      $0562                         ; 0x1ccee $CCDE AE 62 05                ; Link's facing direction in OW
cpx      #$04                          ; 0x1ccf1 $CCE1 E0 04                   ; check if Link is facing down
bcs      LCCFF                         ; 0x1ccf3 $CCE3 B0 1A                   ;
inc      $74                           ; 0x1ccf5 $CCE5 E6 74                   ; X Position on OW (square unit)
ldx      $5F                           ; 0x1ccf7 $CCE7 A6 5F                   ;; Link's facing direction
lda      $6A00,y                       ; 0x1ccf9 $CCE9 B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1ccfc $CCEC 0A                      ; check for "External" bit
bcc      LCCF2                         ; 0x1ccfd $CCED 90 03                   ;
ldx      $0562                         ; 0x1ccff $CCEF AE 62 05                ; Link's facing direction in OW
LCCF2                                                                          ;
dex                                    ; 0x1cd02 $CCF2 CA                      ;
beq      LCCF9                         ; 0x1cd03 $CCF3 F0 04                   ;
dec      $74                           ; 0x1cd05 $CCF5 C6 74                   ; X Position on OW (square unit)
dec      $74                           ; 0x1cd07 $CCF7 C6 74                   ;; Overworld X; X Position on OW (square unit)
LCCF9                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1cd09 $CCF9 20 C5 FF                ; Load Bank 0
jmp      LCF05                         ; 0x1cd0c $CCFC 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCFF                                                                          ;
inc      $73                           ; 0x1cd0f $CCFF E6 73                   ; Y Position on OW (square unit)
ldx      $5F                           ; 0x1cd11 $CD01 A6 5F                   ;; Link's facing direction
lda      $6A00,y                       ; 0x1cd13 $CD03 B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1cd16 $CD06 0A                      ; check for "External" bit
bcc      LCD0F                         ; 0x1cd17 $CD07 90 06                   ;
lda      $0562                         ; 0x1cd19 $CD09 AD 62 05                ; Link's facing direction in OW
lsr                                    ; 0x1cd1c $CD0C 4A                      ;
lsr                                    ; 0x1cd1d $CD0D 4A                      ;
tax                                    ; 0x1cd1e $CD0E AA                      ;
LCD0F                                                                          ;
dex                                    ; 0x1cd1f $CD0F CA                      ;
beq      LCCF9                         ; 0x1cd20 $CD10 F0 E7                   ;
dec      $73                           ; 0x1cd22 $CD12 C6 73                   ; Y Position on OW (square unit)
dec      $73                           ; 0x1cd24 $CD14 C6 73                   ;; Overworld Y; Y Position on OW (square unit)
jmp      LCCF9                         ; 0x1cd26 $CD16 4C F9 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD19                                                                          ;
jsr      LD15C                         ; 0x1cd29 $CD19 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1cd2c $CD1C 20 85 D3;
bank7_pointer_table12                                                          ;
.word    LCF21_SaveGameWhenChooseSAVEwhenDead__maybe; 0x1cd2f $CD1F 21 CF      ;
.word    LCF05                         ; 0x1cd31 $CD21 05 CF                   ;
bank7_Pointer_table_for_Key_Areas_Data                                         ;
.word    bank1_West_Hyrule__Key_Areas_Y_Location; 0x1cd33 $CD23 1F 86          ;West Hyrule - Key Areas (Y Pos, X Pos, Map, World)
.word    bank1_Death_Mountain_Key_Areas_Y_Location; 0x1cd35 $CD25 FC A0        ;Death Mountain - Key Areas (Y Pos, X Pos, Map, World)
; ---------------------------------------------------------------------------- ;
bank7_Region_Overworld_Map_Pointer_Offset_Selector                             ;
.byt    $00,$02,$00                    ; 0x1cd37 $CD27 00 02 00                ;Region Overworld Map Pointer Offset Selector (3 bytes) for $706?
bank7_Graphics_Bank_for_Palaces_Palace_1                                       ;
;Index = Region (706) * 4 + Palace Code (56C)                                  ;
.byt    $04                            ; 0x1cd3a $CD2A 04                      ;04	Palace 1
bank7_Graphics_Bank_for_Palaces_Palace_2                                       ;
.byt    $05                            ; 0x1cd3b $CD2B 05                      ;05	Palace 2
bank7_Graphics_Bank_for_Palaces_Palace_3                                       ;
.byt    $09                            ; 0x1cd3c $CD2C 09                      ;09	Palace 3
bank7_Graphics_Bank_for_Palaces_Hypothetical_Palace_in_Region_0                ;
.byt    $09                            ; 0x1cd3d $CD2D 09                      ;09	Hypothetical Palace in Region 0
bank7_Graphics_Bank_for_Palaces_Palace_4                                       ;
.byt    $0A                            ; 0x1cd3e $CD2E 0A                      ;0A	Palace 4
bank7_Graphics_Bank_for_Palaces_Hypothetical_Palace_in_Region_1                ;
.byt    $0A                            ; 0x1cd3f $CD2F 0A                      ;0A	Hypothetical Palace in Region 1
                                                                               ;
.byt    $0A                            ; 0x1cd40 $CD30 0A                      ;0A	Hypothetical Palace in Region 1
                                                                               ;
.byt    $0A                            ; 0x1cd41 $CD31 0A                      ;0A	Hypothetical Palace in Region 1
bank7_Graphics_Bank_for_Palaces_Palace_5                                       ;
.byt    $0B                            ; 0x1cd42 $CD32 0B                      ;0B	Palace 5
bank7_Graphics_Bank_for_Palaces_Palace_6                                       ;
.byt    $0C                            ; 0x1cd43 $CD33 0C                      ;0C	Palace 6
bank7_Graphics_Bank_for_Palaces_Palace_7                                       ;
.byt    $06                            ; 0x1cd44 $CD34 06                      ;06	Palace 7                       
bank7_Table_for_Palace_Entrance_Palettes_Offset                                ;
;Index = Region (706) * 4 + Palace Code (56C)                                  ;
.byt    $00,$10,$20,$20,$30,$30,$30,$30; 0x1cd45 $CD35 00 10 20 20 30 30 30 30 ;
.byt    $40,$50,$60                    ; 0x1cd4d $CD3D 40 50 60                ;
; ---------------------------------------------------------------------------- ;
bank7_code18                                                                   ;
ldy      $0707                         ; 0x1cd50 $CD40 AC 07 07                ; Current World;cd40 ;Normalized world number into Y
lda      LC4B7,y                       ; 0x1cd53 $CD43 B9 B7 C4                ;cd43 ;Load bank number from table 
cmp      #$01                          ; 0x1cd56 $CD46 C9 01                   ;cd46 ;Bank 1 represents overworlds
bne      LCD59                         ; 0x1cd58 $CD48 D0 0F                   ;cd48 ;if not overworld, then done
; Determine if we really want bank 1 or 2                                      ;
ldy      $0706                         ; 0x1cd5a $CD4A AC 06 07                ; Current Region;cd4a ;Get the overworld index
beq      LCD59                         ; 0x1cd5d $CD4D F0 0A                   ;cd4d ;If index==0 then WestHy (bank1).  done.
dey                                    ; 0x1cd5f $CD4F 88                      ;cd4f ;Decrement index
bne      LCD57                         ; 0x1cd60 $CD50 D0 05                   ;cd50 ;If index!=0 then EastHy (bank2).
ldy      $070A                         ; 0x1cd62 $CD52 AC 0A 07                ;cd52 ;index was 1, so its either DM or MZ.
; Use the previous overworld ($070a) to                                        ;
; determin if bank 1 or bank 2.                                                ;
beq      LCD59                         ; 0x1cd65 $CD55 F0 02                   ;cd55 ;If Y==0, then bank 1.
LCD57                                                                          ;
lda      #$02                          ; 0x1cd67 $CD57 A9 02                   ; A = 02;cd57 ;Load bank 2
LCD59                                                                          ;
sta      $0769                         ; 0x1cd69 $CD59 8D 69 07                ; Bank to switch to;cd59 ;Store desired bank number                 
jsr      LFFCC                         ; 0x1cd6c $CD5C 20 CC FF                ; Bank Switch
lda      $0769                         ; 0x1cd6f $CD5F AD 69 07                ; Bank to switch to
ldy      $0707                         ; 0x1cd72 $CD62 AC 07 07                ; Current World
cpy      #$03                          ; 0x1cd75 $CD65 C0 03                   ;
bcc      LCD78                         ; 0x1cd77 $CD67 90 0F                   ;
lda      $0706                         ; 0x1cd79 $CD69 AD 06 07                ; Current Region
asl                                    ; 0x1cd7c $CD6C 0A                      ;
asl                                    ; 0x1cd7d $CD6D 0A                      ;
adc      $056C                         ; 0x1cd7e $CD6E 6D 6C 05                ; Palace Code
tay                                    ; 0x1cd81 $CD71 A8                      ;
lda      bank7_Graphics_Bank_for_Palaces_Palace_1,y; 0x1cd82 $CD72 B9 2A CD    ;
sta      $070B                         ; 0x1cd85 $CD75 8D 0B 07                ;Graphics Bank for Palaces
LCD78                                                                          ;
asl                                    ; 0x1cd88 $CD78 0A                      ;
sta      $076E                         ; 0x1cd89 $CD79 8D 6E 07                ; Graphics bank to use
ldy      $0707                         ; 0x1cd8c $CD7C AC 07 07                ; Current World
bne      LCD8A                         ; 0x1cd8f $CD7F D0 09                   ;
lda      $0706                         ; 0x1cd91 $CD81 AD 06 07                ; Current Region
cmp      #$01                          ; 0x1cd94 $CD84 C9 01                   ;
bne      LCD8A                         ; 0x1cd96 $CD86 D0 02                   ;
ldy      #$04                          ; 0x1cd98 $CD88 A0 04                   ; Y = 04
LCD8A                                                                          ;
lda      LC4BD,y                       ; 0x1cd9a $CD8A B9 BD C4                ;
tay                                    ; 0x1cd9d $CD8D A8                      ;
lda      bank7_Pointer_table_for_Key_Areas_Data,y; 0x1cd9e $CD8E B9 23 CD      ; Pointer to Area Pointers (low byte)
sta      L0000                         ; 0x1cda1 $CD91 85 00                   ;
lda      bank7_Pointer_table_for_Key_Areas_Data+$01,y; 0x1cda3 $CD93 B9 24 CD  ; Pointer to Area Pointers (high byte)
sta      $01                           ; 0x1cda6 $CD96 85 01                   ;
ldy      #$00                          ; 0x1cda8 $CD98 A0 00                   ; Y = 00
LOOP_load_enemy_data_to_ram7000_7CFF                                           ;
lda      bank1_Enemy_Data__West_Hyrule_and_Death_Mountain,y; 0x1cdaa $CD9A B9 A0 88; Enemy Data Table
sta      L7000,y                       ; 0x1cdad $CD9D 99 00 70                ; load into 7000-70FF
iny                                    ; 0x1cdb0 $CDA0 C8                      ;
bne      LOOP_load_enemy_data_to_ram7000_7CFF; 0x1cdb1 $CDA1 D0 F7             ;
LCDA3                                                                          ;
lda      L89A0,y                       ; 0x1cdb3 $CDA3 B9 A0 89                ; Enemy Data Table
sta      $7100,y                       ; 0x1cdb6 $CDA6 99 00 71                ; load into 7100-71FF
iny                                    ; 0x1cdb9 $CDA9 C8                      ;
bne      LCDA3                         ; 0x1cdba $CDAA D0 F7                   ;
LCDAC                                                                          ;
lda      L8AA0,y                       ; 0x1cdbc $CDAC B9 A0 8A                ; Enemy Data Table
sta      $7200,y                       ; 0x1cdbf $CDAF 99 00 72                ; load into 7200-72FF
iny                                    ; 0x1cdc2 $CDB2 C8                      ;
bne      LCDAC                         ; 0x1cdc3 $CDB3 D0 F7                   ;
LCDB5                                                                          ;
lda      L8BA0,y                       ; 0x1cdc5 $CDB5 B9 A0 8B                ; Enemy Data Table
sta      $7300,y                       ; 0x1cdc8 $CDB8 99 00 73                ; load into 7300-73FF
iny                                    ; 0x1cdcb $CDBB C8                      ;
bne      LCDB5                         ; 0x1cdcc $CDBC D0 F7                   ;
ldx      $0706                         ; 0x1cdce $CDBE AE 06 07                ; Current Region
lda      bank7_Region_Overworld_Map_Pointer_Offset_Selector,x; 0x1cdd1 $CDC1 BD 27 CD;
tax                                    ; 0x1cdd4 $CDC4 AA                      ;
lda      Pointer_table_for_Overworld_Map_Data,x; 0x1cdd5 $CDC5 BD 08 85        ; Overworld Map Data Pointer Low Byte
sta      $02                           ; 0x1cdd8 $CDC8 85 02                   ;
lda      Pointer_table_for_Overworld_Map_Data+$01,x; 0x1cdda $CDCA BD 09 85    ; Overworld Map Data Pointer High Byte
sta      $03                           ; 0x1cddd $CDCD 85 03                   ;
LCDCF                                                                          ;
lda      ($02),y                       ; 0x1cddf $CDCF B1 02                   ; Overworld Data
sta      $7C00,y                       ; 0x1cde1 $CDD1 99 00 7C                ; load into 7C00-7CFF
iny                                    ; 0x1cde4 $CDD4 C8                      ;
bne      LCDCF                         ; 0x1cde5 $CDD5 D0 F8                   ;
inc      $03                           ; 0x1cde7 $CDD7 E6 03                   ;
LCDD9                                                                          ;
lda      ($02),y                       ; 0x1cde9 $CDD9 B1 02                   ; Overworld Data
sta      $7D00,y                       ; 0x1cdeb $CDDB 99 00 7D                ; load into 7D00-7DFF
iny                                    ; 0x1cdee $CDDE C8                      ;
bne      LCDD9                         ; 0x1cdef $CDDF D0 F8                   ;
inc      $03                           ; 0x1cdf1 $CDE1 E6 03                   ;
LCDE3                                                                          ;
lda      ($02),y                       ; 0x1cdf3 $CDE3 B1 02                   ; Overworld Data
sta      $7E00,y                       ; 0x1cdf5 $CDE5 99 00 7E                ; load into 7E00-7EFF
iny                                    ; 0x1cdf8 $CDE8 C8                      ;
bne      LCDE3                         ; 0x1cdf9 $CDE9 D0 F8                   ;
inc      $03                           ; 0x1cdfb $CDEB E6 03                   ;
LCDED                                                                          ;
lda      ($02),y                       ; 0x1cdfd $CDED B1 02                   ; Overworld Data
sta      $7F00,y                       ; 0x1cdff $CDEF 99 00 7F                ; load into 7F00-7FFF
iny                                    ; 0x1ce02 $CDF2 C8                      ;
bpl      LCDED                         ; 0x1ce03 $CDF3 10 F8                   ;
ldy      #$00                          ; 0x1ce05 $CDF5 A0 00                   ; Y = 00
LCDF7                                                                          ;
lda      (L0000),y                     ; 0x1ce07 $CDF7 B1 00                   ; Area Data
sta      $6A00,y                       ; 0x1ce09 $CDF9 99 00 6A                ; load into 6A00-6AFF
iny                                    ; 0x1ce0c $CDFC C8                      ;
bne      LCDF7                         ; 0x1ce0d $CDFD D0 F8                   ;
inc      $01                           ; 0x1ce0f $CDFF E6 01                   ;
LCE01                                                                          ;
lda      (L0000),y                     ; 0x1ce11 $CE01 B1 00                   ; Area Data
sta      $6B00,y                       ; 0x1ce13 $CE03 99 00 6B                ; load into 6B00-6BFF
iny                                    ; 0x1ce16 $CE06 C8                      ;
bne      LCE01                         ; 0x1ce17 $CE07 D0 F8                   ;
inc      $01                           ; 0x1ce19 $CE09 E6 01                   ;
LCE0B                                                                          ;
lda      (L0000),y                     ; 0x1ce1b $CE0B B1 00                   ; Area Data
sta      $6C00,y                       ; 0x1ce1d $CE0D 99 00 6C                ; load into 6C00-6CF5
iny                                    ; 0x1ce20 $CE10 C8                      ;
cpy      #$58                          ; 0x1ce21 $CE11 C0 58                   ;
bne      LCE0B                         ; 0x1ce23 $CE13 D0 F6                   ;
;Load All Palettes for Palaces into 7919-79F8 (E0 bytes)                       ;
ldy      #$00                          ; 0x1ce25 $CE15 A0 00                   ; Y = 00
LCE17                                                                          ;
lda      bank1_Palettes_for_West_Hyrule,y; 0x1ce27 $CE17 B9 0E 80              ; Palettes Table
sta      $7919,y                       ; 0x1ce2a $CE1A 99 19 79                ;
iny                                    ; 0x1ce2d $CE1D C8                      ;
cpy      #$E0                          ; 0x1ce2e $CE1E C0 E0                   ;
bcc      LCE17                         ; 0x1ce30 $CE20 90 F5                   ;
lda      $0707                         ; 0x1ce32 $CE22 AD 07 07                ; Current World
cmp      #$03                          ; 0x1ce35 $CE25 C9 03                   ;
bcc      bank7_Transfer_2A1_bytes_from_9400_or_A900_if_World_4_to_6D00; 0x1ce37 $CE27 90 4E;
lda      $0706                         ; 0x1ce39 $CE29 AD 06 07                ; Current Region
asl                                    ; 0x1ce3c $CE2C 0A                      ;
asl                                    ; 0x1ce3d $CE2D 0A                      ;
adc      $056C                         ; 0x1ce3e $CE2E 6D 6C 05                ; Palace Code
tay                                    ; 0x1ce41 $CE31 A8                      ;
lda      bank7_Table_for_Palace_Entrance_Palettes_Offset,y; 0x1ce42 $CE32 B9 35 CD;
tay                                    ; 0x1ce45 $CE35 A8                      ;
cmp      #$60                          ; 0x1ce46 $CE36 C9 60                   ; 60 is index A, Great Palace (R2 P2)
beq      LCE63                         ; 0x1ce48 $CE38 F0 29                   ;
pha                                    ; 0x1ce4a $CE3A 48                      ;
pha                                    ; 0x1ce4b $CE3B 48                      ;
ldx      #$00                          ; 0x1ce4c $CE3C A2 00                   ; X = 00
bank7_Load_Palace_Entrance_Palettes_into_7919_7928_10_bytes                    ;
lda      L8470,y                       ; 0x1ce4e $CE3E B9 70 84                ;
sta      $7919,x                       ; 0x1ce51 $CE41 9D 19 79                ;
iny                                    ; 0x1ce54 $CE44 C8                      ;
inx                                    ; 0x1ce55 $CE45 E8                      ;
cpx      #$10                          ; 0x1ce56 $CE46 E0 10                   ;
bcc      bank7_Load_Palace_Entrance_Palettes_into_7919_7928_10_bytes; 0x1ce58 $CE48 90 F4;
pla                                    ; 0x1ce5a $CE4A 68                      ;
tay                                    ; 0x1ce5b $CE4B A8                      ;
bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998                    ;
lda      LBF00,y                       ; 0x1ce5c $CE4C B9 00 BF                ;
sta      $7919,x                       ; 0x1ce5f $CE4F 9D 19 79                ;
iny                                    ; 0x1ce62 $CE52 C8                      ;
inx                                    ; 0x1ce63 $CE53 E8                      ;
tya                                    ; 0x1ce64 $CE54 98                      ;
and      #$0F                          ; 0x1ce65 $CE55 29 0F                   ; keep bits .... xxxx
bne      bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998; 0x1ce67 $CE57 D0 F3;
tya                                    ; 0x1ce69 $CE59 98                      ;
sec                                    ; 0x1ce6a $CE5A 38                      ;
sbc      #$10                          ; 0x1ce6b $CE5B E9 10                   ;
tay                                    ; 0x1ce6d $CE5D A8                      ;
cpx      #$80                          ; 0x1ce6e $CE5E E0 80                   ;
bcc      bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998; 0x1ce70 $CE60 90 EA;
pla                                    ; 0x1ce72 $CE62 68                      ;
LCE63                                                                          ;
lsr                                    ; 0x1ce73 $CE63 4A                      ;
lsr                                    ; 0x1ce74 $CE64 4A                      ;
tay                                    ; 0x1ce75 $CE65 A8                      ;
ldx      #$00                          ; 0x1ce76 $CE66 A2 00                   ; X = 00
LCE68                                                                          ;
lda      L84D8,y                       ; 0x1ce78 $CE68 B9 D8 84                ;
sta      $79C5,x                       ; 0x1ce7b $CE6B 9D C5 79                ;
sta      $79D5,x                       ; 0x1ce7e $CE6E 9D D5 79                ;
iny                                    ; 0x1ce81 $CE71 C8                      ;
inx                                    ; 0x1ce82 $CE72 E8                      ;
cpx      #$04                          ; 0x1ce83 $CE73 E0 04                   ;
bcc      LCE68                         ; 0x1ce85 $CE75 90 F1                   ;
bank7_Transfer_2A1_bytes_from_9400_or_A900_if_World_4_to_6D00                  ;
lda      #$00                          ; 0x1ce87 $CE77 A9 00                   ; A = 00
sta      L0000                         ; 0x1ce89 $CE79 85 00                   ;
lda      #$94                          ; 0x1ce8b $CE7B A9 94                   ; A = 94
sta      $01                           ; 0x1ce8d $CE7D 85 01                   ;
lda      $0707                         ; 0x1ce8f $CE7F AD 07 07                ; Current World
cmp      #$04                          ; 0x1ce92 $CE82 C9 04                   ; World 4 = Palaces Type B
bne      LCE8E                         ; 0x1ce94 $CE84 D0 08                   ;
lda      #$00                          ; 0x1ce96 $CE86 A9 00                   ; A = 00
sta      L0000                         ; 0x1ce98 $CE88 85 00                   ;
lda      #$A9                          ; 0x1ce9a $CE8A A9 A9                   ; A = A9
sta      $01                           ; 0x1ce9c $CE8C 85 01                   ;
LCE8E                                                                          ;
lda      #$00                          ; 0x1ce9e $CE8E A9 00                   ; A = 00
sta      $02                           ; 0x1cea0 $CE90 85 02                   ;
lda      #$6D                          ; 0x1cea2 $CE92 A9 6D                   ; A = 6D
sta      $03                           ; 0x1cea4 $CE94 85 03                   ;
lda      #$A1                          ; 0x1cea6 $CE96 A9 A1                   ; A = A1
sta      $04                           ; 0x1cea8 $CE98 85 04                   ;
lda      #$02                          ; 0x1ceaa $CE9A A9 02                   ; A = 02
sta      $05                           ; 0x1ceac $CE9C 85 05                   ;
ldy      #$00                          ; 0x1ceae $CE9E A0 00                   ; A = 00
LCEA0                                                                          ;
lda      (L0000),y                     ; 0x1ceb0 $CEA0 B1 00                   ;
sta      ($02),y                       ; 0x1ceb2 $CEA2 91 02                   ;
lda      L0000                         ; 0x1ceb4 $CEA4 A5 00                   ;
clc                                    ; 0x1ceb6 $CEA6 18                      ;
adc      #$01                          ; 0x1ceb7 $CEA7 69 01                   ;
sta      L0000                         ; 0x1ceb9 $CEA9 85 00                   ;
lda      $01                           ; 0x1cebb $CEAB A5 01                   ;
adc      #$00                          ; 0x1cebd $CEAD 69 00                   ;
sta      $01                           ; 0x1cebf $CEAF 85 01                   ;
lda      $02                           ; 0x1cec1 $CEB1 A5 02                   ;
clc                                    ; 0x1cec3 $CEB3 18                      ;
adc      #$01                          ; 0x1cec4 $CEB4 69 01                   ;
sta      $02                           ; 0x1cec6 $CEB6 85 02                   ;
lda      $03                           ; 0x1cec8 $CEB8 A5 03                   ;
adc      #$00                          ; 0x1ceca $CEBA 69 00                   ;
sta      $03                           ; 0x1cecc $CEBC 85 03                   ;
lda      $04                           ; 0x1cece $CEBE A5 04                   ;
sec                                    ; 0x1ced0 $CEC0 38                      ;
sbc      #$01                          ; 0x1ced1 $CEC1 E9 01                   ;
sta      $04                           ; 0x1ced3 $CEC3 85 04                   ;
lda      $05                           ; 0x1ced5 $CEC5 A5 05                   ;
sbc      #$00                          ; 0x1ced7 $CEC7 E9 00                   ;
sta      $05                           ; 0x1ced9 $CEC9 85 05                   ;
ora      $04                           ; 0x1cedb $CECB 05 04                   ;
bne      LCEA0                         ; 0x1cedd $CECD D0 D1                   ;
ldy      $0707                         ; 0x1cedf $CECF AC 07 07                ; Current World
dey                                    ; 0x1cee2 $CED2 88                      ;
cpy      #$02                          ; 0x1cee3 $CED3 C0 02                   ;
bcs      LCEF6                         ; 0x1cee5 $CED5 B0 1F                   ;
ldy      $056B                         ; 0x1cee7 $CED7 AC 6B 05                ; Town Code
dey                                    ; 0x1ceea $CEDA 88                      ;
cpy      #$06                          ; 0x1ceeb $CEDB C0 06                   ;
bcs      LCEF6                         ; 0x1ceed $CEDD B0 17                   ;
;If Town Code is < 6                                                           ;
;Transfer 14 bytes from a table to 6DE2                                        ;
;Related to Enemy Velocities                                                   ;
tya                                    ; 0x1ceef $CEDF 98                      ;
asl                                    ; 0x1cef0 $CEE0 0A                      ;
tay                                    ; 0x1cef1 $CEE1 A8                      ;
lda      L9624,y                       ; 0x1cef2 $CEE2 B9 24 96                ;
sta      L0000                         ; 0x1cef5 $CEE5 85 00                   ;
lda      bank1_Enemy_Init_Routines_Red_Blue_Deeler,y; 0x1cef7 $CEE7 B9 25 96   ;
sta      $01                           ; 0x1cefa $CEEA 85 01                   ;
ldy      #$13                          ; 0x1cefc $CEEC A0 13                   ; Y = 13
LCEEE                                                                          ;
lda      (L0000),y                     ; 0x1cefe $CEEE B1 00                   ;
sta      $6DE2,y                       ; 0x1cf00 $CEF0 99 E2 6D                ;
dey                                    ; 0x1cf03 $CEF3 88                      ;
bpl      LCEEE                         ; 0x1cf04 $CEF4 10 F8                   ;
LCEF6                                                                          ;
ldy      $0707                         ; 0x1cf06 $CEF6 AC 07 07                ; Current World
bne      LCF09                         ; 0x1cf09 $CEF9 D0 0E                   ;
lda      $0709                         ; 0x1cf0b $CEFB AD 09 07                ;; used for going outside??
bne      LCF05                         ; 0x1cf0e $CEFE D0 05                   ;
lda      #$06                          ; 0x1cf10 $CF00 A9 06                   ; A = 06
jmp      LCF0B                         ; 0x1cf12 $CF02 4C 0B CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF05                                                                          ;
inc      $0736                         ; 0x1cf15 $CF05 EE 36 07                ; Game Mode
rts                                    ; 0x1cf18 $CF08 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF09                                                                          ;
lda      #$07                          ; 0x1cf19 $CF09 A9 07                   ; A = 07
LCF0B                                                                          ;
sta      $0736                         ; 0x1cf1b $CF0B 8D 36 07                ; Game Mode
lda      #$01                          ; 0x1cf1e $CF0E A9 01                   ; A = 01
cpy      #$02                          ; 0x1cf20 $CF10 C0 02                   ;
bne      LCF1D                         ; 0x1cf22 $CF12 D0 09                   ;
ldy      $056B                         ; 0x1cf24 $CF14 AC 6B 05                ; Town Code
cpy      #$07                          ; 0x1cf27 $CF17 C0 07                   ;
bne      LCF1D                         ; 0x1cf29 $CF19 D0 02                   ;
lda      #$08                          ; 0x1cf2b $CF1B A9 08                   ; A = 08
LCF1D                                                                          ;
sta      $075F                         ; 0x1cf2d $CF1D 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
rts                                    ; 0x1cf30 $CF20 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF21_SaveGameWhenChooseSAVEwhenDead__maybe                                    ;
lda      #$05                          ; 0x1cf31 $CF21 A9 05                   ; A = 05
jsr      LFFCC                         ; 0x1cf33 $CF23 20 CC FF                ;
jsr      LB9CA                         ; 0x1cf36 $CF26 20 CA B9                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf39 $CF29 20 C9 FF                ; Load Bank $0769
inc      $0738                         ; 0x1cf3c $CF2C EE 38 07                ;
rts                                    ; 0x1cf3f $CF2F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW                                 ;
;Region Code * 5 + World Code                                                  ;
lda      $0706                         ; 0x1cf40 $CF30 AD 06 07                ; Current Region
asl                                    ; 0x1cf43 $CF33 0A                      ;
asl                                    ; 0x1cf44 $CF34 0A                      ;
adc      $0706                         ; 0x1cf45 $CF35 6D 06 07                ;; overworld index (0=west hyrule, 1=death mtn/maze island, 2=east hyrule)
adc      $0707                         ; 0x1cf48 $CF38 6D 07 07                ; Current World
rts                                    ; 0x1cf4b $CF3B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF3C                                                                          ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf4c $CF3C 20 C9 FF                ; Load Bank $0769
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1cf4f $CF3F 20 82 D3;
bank7_pointer_table13                                                          ;
.word    LD25E                         ; 0x1cf52 $CF42 5E D2                   ;
.word    LD269                         ; 0x1cf54 $CF44 69 D2                   ;
.word    bank7_Set_PPU_Macro_for_Palettes; 0x1cf56 $CF46 5B D0                 ;
.word    bank7_code19                  ; 0x1cf58 $CF48 FC D0                   ;
.word    LD120                         ; 0x1cf5a $CF4A 20 D1                   ;
; ---------------------------------------------------------------------------- ;
bank7_take_side_exit                                                           ;
jsr      bank7_Remove_All_Sprites      ; 0x1cf5c $CF4C 20 4C D2                ; Remove All Sprites
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf5f $CF4F 20 C9 FF                ; Load Bank $0769
lda      $0561                         ; 0x1cf62 $CF52 AD 61 05                ; Area Code
ldy      $0707                         ; 0x1cf65 $CF55 AC 07 07                ; Current World
bne      LCF60                         ; 0x1cf68 $CF58 D0 06                   ;
cmp      #$1D                          ; 0x1cf6a $CF5A C9 1D                   ;
bcc      LCF60                         ; 0x1cf6c $CF5C 90 02                   ;
lda      #$00                          ; 0x1cf6e $CF5E A9 00                   ; A = 00
LCF60                                                                          ;
asl                                    ; 0x1cf70 $CF60 0A                      ;
asl                                    ; 0x1cf71 $CF61 0A                      ;
adc      $3B                           ; 0x1cf72 $CF62 65 3B                   ; Link's X Position (high byte)
tay                                    ; 0x1cf74 $CF64 A8                      ;
lda      $6AFC,y                       ; 0x1cf75 $CF65 B9 FC 6A                ; Connectivity Data Table
pha                                    ; 0x1cf78 $CF68 48                      ;
and      #$FC                          ; 0x1cf79 $CF69 29 FC                   ; keep bits xxxx xx..
cmp      #$FC                          ; 0x1cf7b $CF6B C9 FC                   ;
bne      LCFB2                         ; 0x1cf7d $CF6D D0 43                   ;
pla                                    ; 0x1cf7f $CF6F 68                      ;
and      #$03                          ; 0x1cf80 $CF70 29 03                   ; keep bits .... ..xx
clc                                    ; 0x1cf82 $CF72 18                      ;
adc      $0748                         ; 0x1cf83 $CF73 6D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
sta      $0748                         ; 0x1cf86 $CF76 8D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
ldy      #$00                          ; 0x1cf89 $CF79 A0 00                   ; Y = 00
sty      $07FF                         ; 0x1cf8b $CF7B 8C FF 07                ;
sty      $05E9                         ; 0x1cf8e $CF7E 8C E9 05                ; Sound Played Out of Area
ldy      #$90                          ; 0x1cf91 $CF81 A0 90                   ; Y = 90
sty      $4000                         ; 0x1cf93 $CF83 8C 00 40                ;
lda      #$01                          ; 0x1cf96 $CF86 A9 01                   ; A = 01
ldy      $0707                         ; 0x1cf98 $CF88 AC 07 07                ; Current World
beq      LCF9D                         ; 0x1cf9b $CF8B F0 10                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cf9d $CF8D 20 3D D0   ; Mute Music
ldy      #$00                          ; 0x1cfa0 $CF90 A0 00                   ; Y = 00
sty      $0707                         ; 0x1cfa2 $CF92 8C 07 07                ; Current World
inc      $0709                         ; 0x1cfa5 $CF95 EE 09 07                ;; used for going outside??
lda      #$00                          ; 0x1cfa8 $CF98 A9 00                   ; A = 00
LCF9A                                                                          ;
jmp      LCFF8                         ; 0x1cfaa $CF9A 4C F8 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF9D                                                                          ;
ldy      #$04                          ; 0x1cfad $CF9D A0 04                   ; Y = 04
sty      $05E9                         ; 0x1cfaf $CF9F 8C E9 05                ; Sound Played Out of Area
ldy      $0706                         ; 0x1cfb2 $CFA2 AC 06 07                ; Current Region
bne      LCF9A                         ; 0x1cfb5 $CFA5 D0 F3                   ;
ldy      $0561                         ; 0x1cfb7 $CFA7 AC 61 05                ; Area Code
bne      LCF9A                         ; 0x1cfba $CFAA D0 EE                   ;
sty      $05E9                         ; 0x1cfbc $CFAC 8C E9 05                ; Sound Played Out of Area
jmp      LCFF8                         ; 0x1cfbf $CFAF 4C F8 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCFB2                                                                          ;
lsr                                    ; 0x1cfc2 $CFB2 4A                      ;
lsr                                    ; 0x1cfc3 $CFB3 4A                      ;
sta      $0561                         ; 0x1cfc4 $CFB4 8D 61 05                ; Area Code
pla                                    ; 0x1cfc7 $CFB7 68                      ;
ldx      $0704                         ; 0x1cfc8 $CFB8 AE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
bne      LCFC2                         ; 0x1cfcb $CFBB D0 05                   ;
and      #$03                          ; 0x1cfcd $CFBD 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1cfcf $CFBF 8D 5C 07                ; Position code when entering area (0-3)
LCFC2                                                                          ;
and      #$01                          ; 0x1cfd2 $CFC2 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1cfd4 $CFC4 8D 01 07                ; Facing direction when entering area
lda      $0561                         ; 0x1cfd7 $CFC7 AD 61 05                ; Area Code
cmp      #$24                          ; 0x1cfda $CFCA C9 24                   ;
bcs      LCFEC                         ; 0x1cfdc $CFCC B0 1E                   ;
lda      $075B                         ; 0x1cfde $CFCE AD 5B 07                ;
beq      LCFEC                         ; 0x1cfe1 $CFD1 F0 19                   ;
clc                                    ; 0x1cfe3 $CFD3 18                      ;
adc      #$04                          ; 0x1cfe4 $CFD4 69 04                   ;
sta      $075C                         ; 0x1cfe6 $CFD6 8D 5C 07                ; Position code when entering area (0-3)
dec      $075B                         ; 0x1cfe9 $CFD9 CE 5B 07                ;
bne      LCFEC                         ; 0x1cfec $CFDC D0 0E                   ;
lda      $056B                         ; 0x1cfee $CFDE AD 6B 05                ; Town Code
cmp      #$07                          ; 0x1cff1 $CFE1 C9 07                   ;
beq      LCFEC                         ; 0x1cff3 $CFE3 F0 07                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cff5 $CFE5 20 3D D0   ; Mute music when loading between areas
lda      #$02                          ; 0x1cff8 $CFE8 A9 02                   ; A = 02
bne      LCFF3                         ; 0x1cffa $CFEA D0 07                   ;
LCFEC                                                                          ;
ldx      $0704                         ; 0x1cffc $CFEC AE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
bne      LCFF6                         ; 0x1cfff $CFEF D0 05                   ;
lda      #$00                          ; 0x1d001 $CFF1 A9 00                   ; A = 00
LCFF3                                                                          ;
sta      $075F                         ; 0x1d003 $CFF3 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCFF6                                                                          ;
lda      #$07                          ; 0x1d006 $CFF6 A9 07                   ; A = 07
LCFF8                                                                          ;
sta      $0736                         ; 0x1d008 $CFF8 8D 36 07                ;; Game Mode ; screen intro type
rts                                    ; 0x1d00b $CFFB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_take_door_exit                                                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d00c $CFFC 20 C9 FF                ; Load Bank in $0769
LD000     = * + $0001                                                          ;
lda      $0561                         ; 0x1d00f $CFFF AD 61 05                ; Area Code
asl                                    ; 0x1d012 $D002 0A                      ;
asl                                    ; 0x1d013 $D003 0A                      ;
adc      $3B                           ; 0x1d014 $D004 65 3B                   ; Link's X Position (high byte)
tay                                    ; 0x1d016 $D006 A8                      ;
lda      L8817,y                       ; 0x1d017 $D007 B9 17 88                ;
and      #$FC                          ; 0x1d01a $D00A 29 FC                   ; keep bits xxxx xx..
lsr                                    ; 0x1d01c $D00C 4A                      ;
lsr                                    ; 0x1d01d $D00D 4A                      ;
sta      $0561                         ; 0x1d01e $D00E 8D 61 05                ; Area Code
lda      L8817,y                       ; 0x1d021 $D011 B9 17 88                ;
and      #$03                          ; 0x1d024 $D014 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1d026 $D016 8D 5C 07                ; Position code when entering area (0-3)
and      #$01                          ; 0x1d029 $D019 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1d02b $D01B 8D 01 07                ; Facing direction when entering area
lda      $075B                         ; 0x1d02e $D01E AD 5B 07                ;
clc                                    ; 0x1d031 $D021 18                      ;
adc      #$04                          ; 0x1d032 $D022 69 04                   ;
tax                                    ; 0x1d034 $D024 AA                      ;
jsr      LC690                         ; 0x1d035 $D025 20 90 C6                ;
jsr      LCFEC                         ; 0x1d038 $D028 20 EC CF                ;
ldx      $075B                         ; 0x1d03b $D02B AE 5B 07                ;
dex                                    ; 0x1d03e $D02E CA                      ;
bne      LD041                         ; 0x1d03f $D02F D0 10                   ;
lda      $056B                         ; 0x1d041 $D031 AD 6B 05                ;; Town Code	;used by wise man to pick magic to give?
cmp      #$07                          ; 0x1d044 $D034 C9 07                   ;
beq      LD041                         ; 0x1d046 $D036 F0 09                   ;
lda      #$08                          ; 0x1d048 $D038 A9 08                   ; A = 08		;indoor music
sta      $075F                         ; 0x1d04a $D03A 8D 5F 07                ;sets $eb later
bank7_Mute_music_when_loading_between_areas                                    ;
lda      #$80                          ; 0x1d04d $D03D A9 80                   ; A = 80 (80 = no music)
sta      $EB                           ; 0x1d04f $D03F 85 EB                   ; Music Channel
LD041                                                                          ;
rts                                    ; 0x1d051 $D041 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD042                                                                          ;
lda      #$02                          ; 0x1d052 $D042 A9 02                   ; A = 02
jsr      bank7_chr_bank_switch__load_A ; 0x1d054 $D044 20 B1 FF                ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1d057 $D047 20 66 D2;
jmp      LCF05                         ; 0x1d05a $D04A 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD04D                                                                          ;
lda      #$06                          ; 0x1d05d $D04D A9 06                   ; A = 06
jsr      bank7_chr_bank_switch__load_A ; 0x1d05f $D04F 20 B1 FF                ;
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1d062 $D052 20 82 D3;
bank7_pointer_table14                                                          ;
.word    bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1d065 $D055 66 D2 ;
.word    LD0B8                         ; 0x1d067 $D057 B8 D0                   ;
.word    LD150                         ; 0x1d069 $D059 50 D1                   ;
; ---------------------------------------------------------------------------- ;
bank7_Set_PPU_Macro_for_Palettes                                               ;
ldy      #$03                          ; 0x1d06b $D05B A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1d06d $D05D B1 D4                   ; Area Header Byte 3; Area Header Byte 3
lsr                                    ; 0x1d06f $D05F 4A                      ;
lsr                                    ; 0x1d070 $D060 4A                      ;
and      #$30                          ; 0x1d071 $D061 29 30                   ; keep bits ..xx ....
sta      L0000                         ; 0x1d073 $D063 85 00                   ;
lda      ($D4),y                       ; 0x1d075 $D065 B1 D4                   ; Area Header Byte 3
asl                                    ; 0x1d077 $D067 0A                      ;
and      #$70                          ; 0x1d078 $D068 29 70                   ; keep bits .xxx ....
cmp      #$10                          ; 0x1d07a $D06A C9 10                   ;
bne      LD07D                         ; 0x1d07c $D06C D0 0F                   ;
ldx      $0707                         ; 0x1d07e $D06E AE 07 07                ; Current World
bne      LD07D                         ; 0x1d081 $D071 D0 0A                   ;
ldx      $0785                         ; 0x1d083 $D073 AE 85 07                ; Have Candle
bne      LD07D                         ; 0x1d086 $D076 D0 05                   ;
lda      #$40                          ; 0x1d088 $D078 A9 40                   ; A = 40
sta      L0000                         ; 0x1d08a $D07A 85 00                   ;
asl                                    ; 0x1d08c $D07C 0A                      ;
LD07D                                                                          ;
tax                                    ; 0x1d08d $D07D AA                      ;
ldy      #$00                          ; 0x1d08e $D07E A0 00                   ; Y = 00
lda      #$3F                          ; 0x1d090 $D080 A9 3F                   ; A = 3F
sta      L0302                         ; 0x1d092 $D082 8D 02 03                ;; Used when writing text to screen
sty      $0303                         ; 0x1d095 $D085 8C 03 03                ;; Letter position when writing to screen
LD088                                                                          ;
lda      $7919,x                       ; 0x1d098 $D088 BD 19 79                ;
sta      $0305,y                       ; 0x1d09b $D08B 99 05 03                ;
inx                                    ; 0x1d09e $D08E E8                      ;
iny                                    ; 0x1d09f $D08F C8                      ;
cpy      #$10                          ; 0x1d0a0 $D090 C0 10                   ;
bcc      LD088                         ; 0x1d0a2 $D092 90 F4                   ;
ldx      L0000                         ; 0x1d0a4 $D094 A6 00                   ;
LD096                                                                          ;
lda      $79A9,x                       ; 0x1d0a6 $D096 BD A9 79                ;
cmp      #$FF                          ; 0x1d0a9 $D099 C9 FF                   ;
bne      LD0A3                         ; 0x1d0ab $D09B D0 06                   ;
lda      $0305                         ; 0x1d0ad $D09D AD 05 03                ;; Empty Row Space Character
sta      $0751                         ; 0x1d0b0 $D0A0 8D 51 07                ;
LD0A3                                                                          ;
sta      $0305,y                       ; 0x1d0b3 $D0A3 99 05 03                ;
inx                                    ; 0x1d0b6 $D0A6 E8                      ;
iny                                    ; 0x1d0b7 $D0A7 C8                      ;
cpy      #$20                          ; 0x1d0b8 $D0A8 C0 20                   ;
bcc      LD096                         ; 0x1d0ba $D0AA 90 EA                   ;
sty      $0304                         ; 0x1d0bc $D0AC 8C 04 03                ;; Text memory offset?
lda      #$FF                          ; 0x1d0bf $D0AF A9 FF                   ; A = FF
sta      $0305,y                       ; 0x1d0c1 $D0B1 99 05 03                ;
inc      $073D                         ; 0x1d0c4 $D0B4 EE 3D 07                ; Routine Index
rts                                    ; 0x1d0c7 $D0B7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD0B8                                                                          ;
lda      #$03                          ; 0x1d0c8 $D0B8 A9 03                   ; A = 03
jmp      LD11A                         ; 0x1d0ca $D0BA 4C 1A D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_some_Palettes                                                  ;
.byt    $3F,$00,$10,$0F,$30,$12,$16,$0F; 0x1d0cd $D0BD 3F 00 10 0F 30 12 16 0F ;
.byt    $30,$30,$30,$0F,$30,$30,$30,$0F; 0x1d0d5 $D0C5 30 30 30 0F 30 30 30 0F ;
.byt    $26,$0F,$0F,$FF                ; 0x1d0dd $D0CD 26 0F 0F FF             ;
bank7_Tables_for_some_PPU_Command_Data                                         ;
.byt    $20,$44,$06                    ; 0x1d0e1 $D0D1 20 44 06                ;
                                                                               ;
.byt    $E6,$DA,$E0,$E2,$DC,$F6        ; 0x1d0e4 $D0D4 E6 DA E0 E2 DC F6       ;MAGIC-
                                                                               ;
.byt    $20,$4D,$05                    ; 0x1d0ea $D0DA 20 4D 05                ;
                                                                               ;
.byt    $E5,$E2,$DF,$DE,$F6            ; 0x1d0ed $D0DD E5 E2 DF DE F6          ;LIFE-
                                                                               ;
.byt    $20,$5A,$04                    ; 0x1d0f2 $D0E2 20 5A 04                ;
                                                                               ;
.byt    $E7,$DE,$F1,$ED                ; 0x1d0f5 $D0E5 E7 DE F1 ED             ;NEXT
                                                                               ;
.byt    $20,$61,$01                    ; 0x1d0f9 $D0E9 20 61 01                ;
                                                                               ;
.byt    $C9                            ; 0x1d0fc $D0EC C9                      ;
                                                                               ;
.byt    $20,$6D,$01                    ; 0x1d0fd $D0ED 20 6D 01                ;
                                                                               ;
.byt    $F7,$20,$7A,$05,$CE            ; 0x1d100 $D0F0 F7 20 7A 05 CE          ;
                                                                               ;
.byt    $D0,$D0,$D0,$D0                ; 0x1d105 $D0F5 D0 D0 D0 D0             ;
bank7_table12                                                                  ;
.byt    $4C,$02,$03                    ; 0x1d109 $D0F9 4C 02 03                ;
; ---------------------------------------------------------------------------- ;
bank7_code19                                                                   ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d10c $D0FC 20 C5 FF                ; Load Bank 0
lda      #$80                          ; 0x1d10f $D0FF A9 80                   ; A = 80
sta      $074F                         ; 0x1d111 $D101 8D 4F 07                ;; Related to Pause Pane
sta      $0750                         ; 0x1d114 $D104 8D 50 07                ;
ldy      $0301                         ; 0x1d117 $D107 AC 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      L96A8                         ; 0x1d11a $D10A 20 A8 96                ;
lda      #$40                          ; 0x1d11d $D10D A9 40                   ; A = 40
sta      $074F                         ; 0x1d11f $D10F 8D 4F 07                ;; Related to Pause Pane
ldy      $0301                         ; 0x1d122 $D112 AC 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      L96A8                         ; 0x1d125 $D115 20 A8 96                ;
lda      #$07                          ; 0x1d128 $D118 A9 07                   ; A = 07
LD11A                                                                          ;
inc      $073D                         ; 0x1d12a $D11A EE 3D 07                ;; Routine Index
jmp      LD158                         ; 0x1d12d $D11D 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD120                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d130 $D120 20 C5 FF                ; Load Bank 0
jsr      L9A04                         ; 0x1d133 $D123 20 04 9A                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d136 $D126 20 C9 FF                ; Load Bank $0769
bank7_function_find_a_free_enemy_slot__maybe                                   ;
ldx      #$05                          ; 0x1d139 $D129 A2 05                   ; X = 05
LD12B                                                                          ;
stx      $10                           ; 0x1d13b $D12B 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $B6,x                         ; 0x1d13d $D12D B5 B6                   ; Generated Enemy Slot
bne      LD135                         ; 0x1d13f $D12F D0 04                   ;
tax                                    ; 0x1d141 $D131 AA                      ;
jsr      LD625                         ; 0x1d142 $D132 20 25 D6                ;
LD135                                                                          ;
dex                                    ; 0x1d145 $D135 CA                      ;
bpl      LD12B                         ; 0x1d146 $D136 10 F3                   ;
lda      $0740                         ; 0x1d148 $D138 AD 40 07                ;
beq      LD143                         ; 0x1d14b $D13B F0 06                   ;
cmp      #$05                          ; 0x1d14d $D13D C9 05                   ;
beq      LD14B                         ; 0x1d14f $D13F F0 0A                   ;
bne      LD120                         ; 0x1d151 $D141 D0 DD                   ;
LD143                                                                          ;
dec      $0722                         ; 0x1d153 $D143 CE 22 07                ;
bpl      LD14B                         ; 0x1d156 $D146 10 03                   ;
inc      $0736                         ; 0x1d158 $D148 EE 36 07                ; Game Mode
LD14B                                                                          ;
lda      #$02                          ; 0x1d15b $D14B A9 02                   ; A = 02
jmp      LD158                         ; 0x1d15d $D14D 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD150                                                                          ;
inc      $0736                         ; 0x1d160 $D150 EE 36 07                ; Game Mode
lda      #$08                          ; 0x1d163 $D153 A9 08                   ; A = 08
jmp      LD158                         ; 0x1d165 $D155 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD158                                                                          ;
sta      $0725                         ; 0x1d168 $D158 8D 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1d16b $D15B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD15C                                                                          ;
lda      $0738                         ; 0x1d16c $D15C AD 38 07                ;
cmp      $0739                         ; 0x1d16f $D15F CD 39 07                ;
sta      $0739                         ; 0x1d172 $D162 8D 39 07                ;
bne      LD195                         ; 0x1d175 $D165 D0 2E                   ;
rts                                    ; 0x1d177 $D167 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD168                                                                          ;
lda      $0736                         ; 0x1d178 $D168 AD 36 07                ; Game Mode
cmp      $0737                         ; 0x1d17b $D16B CD 37 07                ;
sta      $0737                         ; 0x1d17e $D16E 8D 37 07                ;
bne      LD18D                         ; 0x1d181 $D171 D0 1A                   ;
rts                                    ; 0x1d183 $D173 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD174                                                                          ;
lda      $076C                         ; 0x1d184 $D174 AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
cmp      $076D                         ; 0x1d187 $D177 CD 6D 07                ;
sta      $076D                         ; 0x1d18a $D17A 8D 6D 07                ;
beq      LD19A                         ; 0x1d18d $D17D F0 1B                   ;
jsr      bank7_Remove_All_Sprites      ; 0x1d18f $D17F 20 4C D2                ;
lda      $076C                         ; 0x1d192 $D182 AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
ldy      #$00                          ; 0x1d195 $D185 A0 00                   ; Y = 00
sty      $073C                         ; 0x1d197 $D187 8C 3C 07                ;
sty      $0736                         ; 0x1d19a $D18A 8C 36 07                ; Game Mode
LD18D                                                                          ;
ldy      #$00                          ; 0x1d19d $D18D A0 00                   ; Y = 00
sty      $073B                         ; 0x1d19f $D18F 8C 3B 07                ;
sty      $0738                         ; 0x1d1a2 $D192 8C 38 07                ;
LD195                                                                          ;
ldy      #$00                          ; 0x1d1a5 $D195 A0 00                   ; Y = 00
sty      $073D                         ; 0x1d1a7 $D197 8C 3D 07                ; Routine Index
LD19A                                                                          ;
rts                                    ; 0x1d1aa $D19A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_applyGravityMotion                                                       ;
ldy      #$00                          ; 0x1d1ab $D19B A0 00                   ; Y = 00
lda      $057D,x                       ; 0x1d1ad $D19D BD 7D 05                ; Link/Enemy Y Velocity
bpl      LD1A3                         ; 0x1d1b0 $D1A0 10 01                   ;
dey                                    ; 0x1d1b2 $D1A2 88                      ;
LD1A3                                                                          ;
sty      $07                           ; 0x1d1b3 $D1A3 84 07                   ;
clc                                    ; 0x1d1b5 $D1A5 18                      ;
adc      $29,x                         ; 0x1d1b6 $D1A6 75 29                   ;;y_pos (Link's y position in sideview)
sta      $29,x                         ; 0x1d1b8 $D1A8 95 29                   ; Link/Enemy Y position
lda      $19,x                         ; 0x1d1ba $D1AA B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      $07                           ; 0x1d1bc $D1AC 65 07                   ;
sta      $19,x                         ; 0x1d1be $D1AE 95 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
lda      $03E6,x                       ; 0x1d1c0 $D1B0 BD E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
clc                                    ; 0x1d1c3 $D1B3 18                      ;
adc      L0000                         ; 0x1d1c4 $D1B4 65 00                   ;
sta      $03E6,x                       ; 0x1d1c6 $D1B6 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
lda      $057D,x                       ; 0x1d1c9 $D1B9 BD 7D 05                ;;vspeed (Link's vertical velocity, negative is up.)
adc      #$00                          ; 0x1d1cc $D1BC 69 00                   ;
sta      $057D,x                       ; 0x1d1ce $D1BE 9D 7D 05                ; Link/Enemy Y Velocity				triggered when jumping
cmp      $02                           ; 0x1d1d1 $D1C1 C5 02                   ;
bne      LD1CD                         ; 0x1d1d3 $D1C3 D0 08                   ;
sta      $057D,x                       ; 0x1d1d5 $D1C5 9D 7D 05                ;;vspeed (Link's vertical velocity, negative is up.)
lda      #$00                          ; 0x1d1d8 $D1C8 A9 00                   ; A = 00
sta      $03E6,x                       ; 0x1d1da $D1CA 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
LD1CD                                                                          ;
rts                                    ; 0x1d1dd $D1CD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_XY_Movements_Routine                                                     ;
lda      $70,x                         ; 0x1d1de $D1CE B5 70                   ;;hspeed (Link's horizontal velocity)
asl                                    ; 0x1d1e0 $D1D0 0A                      ;
asl                                    ; 0x1d1e1 $D1D1 0A                      ;
asl                                    ; 0x1d1e2 $D1D2 0A                      ;
asl                                    ; 0x1d1e3 $D1D3 0A                      ;
sta      $01                           ; 0x1d1e4 $D1D4 85 01                   ;
lda      $70,x                         ; 0x1d1e6 $D1D6 B5 70                   ;;hspeed (Link's horizontal velocity)
lsr                                    ; 0x1d1e8 $D1D8 4A                      ;
lsr                                    ; 0x1d1e9 $D1D9 4A                      ;
lsr                                    ; 0x1d1ea $D1DA 4A                      ;
lsr                                    ; 0x1d1eb $D1DB 4A                      ;
cmp      #$08                          ; 0x1d1ec $D1DC C9 08                   ;
bcc      LD1E2                         ; 0x1d1ee $D1DE 90 02                   ;
ora      #$F0                          ; 0x1d1f0 $D1E0 09 F0                   ; set bits  xxxx ....
LD1E2                                                                          ;
sta      L0000                         ; 0x1d1f2 $D1E2 85 00                   ;
ldy      #$00                          ; 0x1d1f4 $D1E4 A0 00                   ; Y = 00
cmp      #$00                          ; 0x1d1f6 $D1E6 C9 00                   ;
bpl      LD1EB                         ; 0x1d1f8 $D1E8 10 01                   ;
dey                                    ; 0x1d1fa $D1EA 88                      ;
LD1EB                                                                          ;
sty      $02                           ; 0x1d1fb $D1EB 84 02                   ;
lda      $03D6,x                       ; 0x1d1fd $D1ED BD D6 03                ;
clc                                    ; 0x1d200 $D1F0 18                      ;
adc      $01                           ; 0x1d201 $D1F1 65 01                   ;
sta      $03D6,x                       ; 0x1d203 $D1F3 9D D6 03                ;
lda      #$00                          ; 0x1d206 $D1F6 A9 00                   ; A = 00
rol                                    ; 0x1d208 $D1F8 2A                      ;
pha                                    ; 0x1d209 $D1F9 48                      ;
ror                                    ; 0x1d20a $D1FA 6A                      ;
lda      $4D,x                         ; 0x1d20b $D1FB B5 4D                   ; Link/Enemy X Position (low byte)
adc      L0000                         ; 0x1d20d $D1FD 65 00                   ;
sta      $4D,x                         ; 0x1d20f $D1FF 95 4D                   ;
lda      $3B,x                         ; 0x1d211 $D201 B5 3B                   ; Link/Enemy X position (high byte)
adc      $02                           ; 0x1d213 $D203 65 02                   ;
sta      $3B,x                         ; 0x1d215 $D205 95 3B                   ;
jmp      LD247                         ; 0x1d217 $D207 4C 47 D2                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD20A                                                                          ;
lda      $057D,x                       ; 0x1d21a $D20A BD 7D 05                ; Link/Enemy Y Velocity
asl                                    ; 0x1d21d $D20D 0A                      ;
asl                                    ; 0x1d21e $D20E 0A                      ;
asl                                    ; 0x1d21f $D20F 0A                      ;
asl                                    ; 0x1d220 $D210 0A                      ;
sta      $01                           ; 0x1d221 $D211 85 01                   ;
lda      $057D,x                       ; 0x1d223 $D213 BD 7D 05                ; Link/Enemy Y Velocity
lsr                                    ; 0x1d226 $D216 4A                      ;
lsr                                    ; 0x1d227 $D217 4A                      ;
lsr                                    ; 0x1d228 $D218 4A                      ;
lsr                                    ; 0x1d229 $D219 4A                      ;
cmp      #$08                          ; 0x1d22a $D21A C9 08                   ;
bcc      LD220                         ; 0x1d22c $D21C 90 02                   ;
ora      #$F0                          ; 0x1d22e $D21E 09 F0                   ; set bits  xxxx ....
LD220                                                                          ;
sta      L0000                         ; 0x1d230 $D220 85 00                   ;
ldy      #$00                          ; 0x1d232 $D222 A0 00                   ; Y = 00
cmp      #$00                          ; 0x1d234 $D224 C9 00                   ;
bpl      LD229                         ; 0x1d236 $D226 10 01                   ;
dey                                    ; 0x1d238 $D228 88                      ;
LD229                                                                          ;
sty      $02                           ; 0x1d239 $D229 84 02                   ;
lda      $03E6,x                       ; 0x1d23b $D22B BD E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
clc                                    ; 0x1d23e $D22E 18                      ;
adc      $01                           ; 0x1d23f $D22F 65 01                   ;
sta      $03E6,x                       ; 0x1d241 $D231 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
lda      #$00                          ; 0x1d244 $D234 A9 00                   ; A = 00
rol                                    ; 0x1d246 $D236 2A                      ;
pha                                    ; 0x1d247 $D237 48                      ;
ror                                    ; 0x1d248 $D238 6A                      ;
lda       !$29,x                       ; 0x1d249 $D239 BD 29 00                ; Link/Enemy Y position
adc      L0000                         ; 0x1d24c $D23C 65 00                   ;
sta       !$29,x                       ; 0x1d24e $D23E 9D 29 00                ; Link/Enemy Y position
lda      $19,x                         ; 0x1d251 $D241 B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      $02                           ; 0x1d253 $D243 65 02                   ;
sta      $19,x                         ; 0x1d255 $D245 95 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
LD247                                                                          ;
pla                                    ; 0x1d257 $D247 68                      ;
clc                                    ; 0x1d258 $D248 18                      ;
adc      L0000                         ; 0x1d259 $D249 65 00                   ;
rts                                    ; 0x1d25b $D24B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Remove_All_Sprites                                                       ;
ldy      #$00                          ; 0x1d25c $D24C A0 00                   ; Y = 00
beq      LD252                         ; 0x1d25e $D24E F0 02                   ;
bank7_Remove_All_Sprites_except_Sprite0                                        ;
ldy      #$04                          ; 0x1d260 $D250 A0 04                   ; Y = 04
LD252                                                                          ;
lda      #$F8                          ; 0x1d262 $D252 A9 F8                   ; A = F8
LD254                                                                          ;
sta      $0200,y                       ; 0x1d264 $D254 99 00 02                ;
iny                                    ; 0x1d267 $D257 C8                      ;
iny                                    ; 0x1d268 $D258 C8                      ;
iny                                    ; 0x1d269 $D259 C8                      ;
iny                                    ; 0x1d26a $D25A C8                      ;
bne      LD254                         ; 0x1d26b $D25B D0 F7                   ;
rts                                    ; 0x1d26d $D25D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD25E                                                                          ;
jsr      LD27D                         ; 0x1d26e $D25E 20 7D D2                ;
bank7_Erase_Name_Table_1                                                       ;
lda      #$24                          ; 0x1d271 $D261 A9 24                   ; A = 24
bank7_Erase_Name_Table_0                                                       ;
jmp      bank7_Fill_Screen_with_Tile_Code_F4_space__Starting_at_PPU_Address_A_mulipliedby_100; 0x1d273 $D263 4C BE D2; Fill Screen with Tile Code F4
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0                               ;
jsr      bank7_Erase_Name_Table_1      ; 0x1d276 $D266 20 61 D2                ; Erase Name Table 1
LD269                                                                          ;
lda      #$20                          ; 0x1d279 $D269 A9 20                   ; A = 20
jsr      bank7_Erase_Name_Table_0      ; 0x1d27b $D26B 20 63 D2                ; Erase Name Table 0
lda      #$00                          ; 0x1d27e $D26E A9 00                   ; A = 00
sta      $FC                           ; 0x1d280 $D270 85 FC                   ;
sta      $FD                           ; 0x1d282 $D272 85 FD                   ;
sta      $0746                         ; 0x1d284 $D274 8D 46 07                ;
sta      $2005                         ; 0x1d287 $D277 8D 05 20                ; Screen Scroll Register (V)
sta      $2005                         ; 0x1d28a $D27A 8D 05 20                ; Screen Scroll Register (H)
LD27D                                                                          ;
inc      $073D                         ; 0x1d28d $D27D EE 3D 07                ; Routine Index
rts                                    ; 0x1d290 $D280 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Reset_Memory_Ranges                                                      ;
ldx      #$00                          ; 0x1d291 $D281 A2 00                   ; X = 00
txa                                    ; 0x1d293 $D283 8A                      ;
LD284                                                                          ;
sta      $0700,x                       ; 0x1d294 $D284 9D 00 07                ;
dex                                    ; 0x1d297 $D287 CA                      ;
bne      LD284                         ; 0x1d298 $D288 D0 FA                   ;
ldx      #$00                          ; 0x1d29a $D28A A2 00                   ; X = 00
txa                                    ; 0x1d29c $D28C 8A                      ;
LD28D                                                                          ;
sta      L0600,x                       ; 0x1d29d $D28D 9D 00 06                ;
dex                                    ; 0x1d2a0 $D290 CA                      ;
bne      LD28D                         ; 0x1d2a1 $D291 D0 FA                   ;
LD293                                                                          ;
ldx      #$00                          ; 0x1d2a3 $D293 A2 00                   ; X = 00
txa                                    ; 0x1d2a5 $D295 8A                      ;
LD296                                                                          ;
sta      $0500,x                       ; 0x1d2a6 $D296 9D 00 05                ;
dex                                    ; 0x1d2a9 $D299 CA                      ;
bne      LD296                         ; 0x1d2aa $D29A D0 FA                   ;
bank7_Set_Memory_200_4FF_and_00_DF_to_Zero                                     ;
ldx      #$00                          ; 0x1d2ac $D29C A2 00                   ; X = 00
txa                                    ; 0x1d2ae $D29E 8A                      ;
LD29F                                                                          ;
sta      $0400,x                       ; 0x1d2af $D29F 9D 00 04                ;;sword_slash_frame (animation frame)
dex                                    ; 0x1d2b2 $D2A2 CA                      ;
bne      LD29F                         ; 0x1d2b3 $D2A3 D0 FA                   ;
ldx      #$00                          ; 0x1d2b5 $D2A5 A2 00                   ; X = 00
txa                                    ; 0x1d2b7 $D2A7 8A                      ;
LD2A8                                                                          ;
sta      $0300,x                       ; 0x1d2b8 $D2A8 9D 00 03                ;
dex                                    ; 0x1d2bb $D2AB CA                      ;
bne      LD2A8                         ; 0x1d2bc $D2AC D0 FA                   ;
ldx      #$DF                          ; 0x1d2be $D2AE A2 DF                   ; X = DF
LD2B0                                                                          ;
sta      L0000,x                       ; 0x1d2c0 $D2B0 95 00                   ;
dex                                    ; 0x1d2c2 $D2B2 CA                      ;
cpx      #$FF                          ; 0x1d2c3 $D2B3 E0 FF                   ;
bne      LD2B0                         ; 0x1d2c5 $D2B5 D0 F9                   ;
stx      L0302                         ; 0x1d2c7 $D2B7 8E 02 03                ;; Used when writing text to screen
stx      L0363                         ; 0x1d2ca $D2BA 8E 63 03                ;
rts                                    ; 0x1d2cd $D2BD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Fill_Screen_with_Tile_Code_F4_space__Starting_at_PPU_Address_A_mulipliedby_100 ;
ldy      $2002                         ; 0x1d2ce $D2BE AC 02 20                ;
ldy      #$30                          ; 0x1d2d1 $D2C1 A0 30                   ; Y = 30
sty      $2000                         ; 0x1d2d3 $D2C3 8C 00 20                ;
ldy      #$00                          ; 0x1d2d6 $D2C6 A0 00                   ; Y = 00
sta      $2006                         ; 0x1d2d8 $D2C8 8D 06 20                ;
sty      $2006                         ; 0x1d2db $D2CB 8C 06 20                ;
ldx      #$03                          ; 0x1d2de $D2CE A2 03                   ; X = 03
lda      #$F4                          ; 0x1d2e0 $D2D0 A9 F4                   ; A = F4
LD2D2                                                                          ;
sta      $2007                         ; 0x1d2e2 $D2D2 8D 07 20                ;
iny                                    ; 0x1d2e5 $D2D5 C8                      ;
bne      LD2D2                         ; 0x1d2e6 $D2D6 D0 FA                   ;
dex                                    ; 0x1d2e8 $D2D8 CA                      ;
bne      LD2D2                         ; 0x1d2e9 $D2D9 D0 F7                   ;
LD2DB                                                                          ;
sta      $2007                         ; 0x1d2eb $D2DB 8D 07 20                ;
iny                                    ; 0x1d2ee $D2DE C8                      ;
cpy      #$C0                          ; 0x1d2ef $D2DF C0 C0                   ;
bne      LD2DB                         ; 0x1d2f1 $D2E1 D0 F8                   ;
lda      #$00                          ; 0x1d2f3 $D2E3 A9 00                   ; A = 00
LD2E5                                                                          ;
sta      $2007                         ; 0x1d2f5 $D2E5 8D 07 20                ;
iny                                    ; 0x1d2f8 $D2E8 C8                      ;
bne      LD2E5                         ; 0x1d2f9 $D2E9 D0 FA                   ;
LD2EB                                                                          ;
rts                                    ; 0x1d2fb $D2EB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD2EC                                                                          ;
ldy      #$00                          ; 0x1d2fc $D2EC A0 00                   ; Y = 00			;07:D2EC
lda      (L0000),y                     ; 0x1d2fe $D2EE B1 00                   ;
cmp      #$FF                          ; 0x1d300 $D2F0 C9 FF                   ;
beq      LD2EB                         ; 0x1d302 $D2F2 F0 F7                   ;RTS is here
cmp      #$4C                          ; 0x1d304 $D2F4 C9 4C                   ;
bne      LD307                         ; 0x1d306 $D2F6 D0 0F                   ;
iny                                    ; 0x1d308 $D2F8 C8                      ;
lda      (L0000),y                     ; 0x1d309 $D2F9 B1 00                   ;
tax                                    ; 0x1d30b $D2FB AA                      ;
iny                                    ; 0x1d30c $D2FC C8                      ;
lda      (L0000),y                     ; 0x1d30d $D2FD B1 00                   ;
sta      $01                           ; 0x1d30f $D2FF 85 01                   ;
stx      L0000                         ; 0x1d311 $D301 86 00                   ;
ldy      #$00                          ; 0x1d313 $D303 A0 00                   ; Y = 00
lda      (L0000),y                     ; 0x1d315 $D305 B1 00                   ;
LD307                                                                          ;
ldx      $2002                         ; 0x1d317 $D307 AE 02 20                ; PPU Status Register
sta      $2006                         ; 0x1d31a $D30A 8D 06 20                ; PPU Memory Address
iny                                    ; 0x1d31d $D30D C8                      ;
lda      (L0000),y                     ; 0x1d31e $D30E B1 00                   ;
sta      $2006                         ; 0x1d320 $D310 8D 06 20                ; PPU Memory Address
iny                                    ; 0x1d323 $D313 C8                      ;
lda      (L0000),y                     ; 0x1d324 $D314 B1 00                   ;
asl                                    ; 0x1d326 $D316 0A                      ;
pha                                    ; 0x1d327 $D317 48                      ;
lda      $FF                           ; 0x1d328 $D318 A5 FF                   ;; Sprite Bank ?
ora      #$04                          ; 0x1d32a $D31A 09 04                   ; set bits  .... .x..
bcs      LD320                         ; 0x1d32c $D31C B0 02                   ;
and      #$FB                          ; 0x1d32e $D31E 29 FB                   ; keep bits xxxx x.xx
LD320                                                                          ;
sta      $2000                         ; 0x1d330 $D320 8D 00 20                ;
LD323                                                                          ;
pla                                    ; 0x1d333 $D323 68                      ;
asl                                    ; 0x1d334 $D324 0A                      ;
bcc      LD32A                         ; 0x1d335 $D325 90 03                   ;
ora      #$02                          ; 0x1d337 $D327 09 02                   ; set bits  .... ..x.
iny                                    ; 0x1d339 $D329 C8                      ;
LD32A                                                                          ;
lsr                                    ; 0x1d33a $D32A 4A                      ;
lsr                                    ; 0x1d33b $D32B 4A                      ;
tax                                    ; 0x1d33c $D32C AA                      ;
LD32D                                                                          ;
bcs      LD330                         ; 0x1d33d $D32D B0 01                   ;
iny                                    ; 0x1d33f $D32F C8                      ;
LD330                                                                          ;
lda      (L0000),y                     ; 0x1d340 $D330 B1 00                   ;top status bar text "MAGIC" gets read here
sta      $2007                         ; 0x1d342 $D332 8D 07 20                ;
dex                                    ; 0x1d345 $D335 CA                      ;
bne      LD32D                         ; 0x1d346 $D336 D0 F5                   ;
iny                                    ; 0x1d348 $D338 C8                      ;
tya                                    ; 0x1d349 $D339 98                      ;
clc                                    ; 0x1d34a $D33A 18                      ;
adc      L0000                         ; 0x1d34b $D33B 65 00                   ;
sta      L0000                         ; 0x1d34d $D33D 85 00                   ;
bcc      LD2EC                         ; 0x1d34f $D33F 90 AB                   ;
inc      $01                           ; 0x1d351 $D341 E6 01                   ;
jmp      LD2EC                         ; 0x1d353 $D343 4C EC D2                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Controllers_Input                                                        ;
jsr      bank7_Controllers_Input_Capture; 0x1d356 $D346 20 67 D3               ;
lda      $F5                           ; 0x1d359 $D349 A5 F5                   ; Controller 1 buttons pressed
sta      L0000                         ; 0x1d35b $D34B 85 00                   ;
jsr      bank7_Controllers_Input_Capture; 0x1d35d $D34D 20 67 D3               ;
lda      $F5                           ; 0x1d360 $D350 A5 F5                   ; Controller 1 buttons pressed
cmp      L0000                         ; 0x1d362 $D352 C5 00                   ;
bne      bank7_Controllers_Input       ; 0x1d364 $D354 D0 F0                   ;
ldx      #$01                          ; 0x1d366 $D356 A2 01                   ; X = 01
LD358                                                                          ;
lda      $F5,x                         ; 0x1d368 $D358 B5 F5                   ;
tay                                    ; 0x1d36a $D35A A8                      ;
eor      $F7,x                         ; 0x1d36b $D35B 55 F7                   ;
and      $F5,x                         ; 0x1d36d $D35D 35 F5                   ;
sta      $F5,x                         ; 0x1d36f $D35F 95 F5                   ;
sty      $F7,x                         ; 0x1d371 $D361 94 F7                   ;
dex                                    ; 0x1d373 $D363 CA                      ;
bpl      LD358                         ; 0x1d374 $D364 10 F2                   ;
rts                                    ; 0x1d376 $D366 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Controllers_Input_Capture                                                ;
ldx      #$01                          ; 0x1d377 $D367 A2 01                   ;;X = #$01 0000_0001
stx      $4016                         ; 0x1d379 $D369 8E 16 40                ; controllers strobe (01)
dex                                    ; 0x1d37c $D36C CA                      ;
stx      $4016                         ; 0x1d37d $D36D 8E 16 40                ; controllers strobe (00)
ldx      #$08                          ; 0x1d380 $D370 A2 08                   ;;X = #$08 0000_1000
LD372                                                                          ;
lda      $4016                         ; 0x1d382 $D372 AD 16 40                ;
lsr                                    ; 0x1d385 $D375 4A                      ;
rol      $F5                           ; 0x1d386 $D376 26 F5                   ;; Controller 1 Buttons Pressed
lda      $4017                         ; 0x1d388 $D378 AD 17 40                ;
lsr                                    ; 0x1d38b $D37B 4A                      ;
rol      $F6                           ; 0x1d38c $D37C 26 F6                   ;; Controller 2 Buttons Pressed
dex                                    ; 0x1d38e $D37E CA                      ;
bne      LD372                         ; 0x1d38f $D37F D0 F1                   ;
rts                                    ; 0x1d391 $D381 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382 ;
lda      $073D                         ; 0x1d392 $D382 AD 3D 07                ;; Routine Index
bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP                  ;
asl                                    ; 0x1d395 $D385 0A                      ;multiply by 2 because table entry is 2 bytes per entry
tay                                    ; 0x1d396 $D386 A8                      ;transfer A to Y
pla                                    ; 0x1d397 $D387 68                      ;pull the address which we would normally RTS to 
sta      $0C                           ; 0x1d398 $D388 85 0C                   ;store for indirect read later
pla                                    ; 0x1d39a $D38A 68                      ;pull the address which we would normally RTS to 
sta      $0D                           ; 0x1d39b $D38B 85 0D                   ;store for indirect read later
iny                                    ; 0x1d39d $D38D C8                      ;increment Y because jsr makes the RTS point 1 behind?
lda      ($0C),y                       ; 0x1d39e $D38E B1 0C                   ;load address to jmp to (from the table following the JSR's RTS point)
sta      L000E                         ; 0x1d3a0 $D390 85 0E                   ;store for indirect jmp later
iny                                    ; 0x1d3a2 $D392 C8                      ;increment Y
lda      ($0C),y                       ; 0x1d3a3 $D393 B1 0C                   ;load address to jmp to
sta      $0F                           ; 0x1d3a5 $D395 85 0F                   ;store for indirect jmp later
jmp      (L000E)                       ; 0x1d3a7 $D397 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_D39A                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3aa $D39A FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3b2 $D3A2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3ba $D3AA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3c2 $D3B2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3ca $D3BA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3d2 $D3C2 FF FF FF FF FF FF FF FF ;
bank7_table13                                                                  ;
.byt    $80,$40                        ; 0x1d3da $D3CA 80 40                   ;
; ---------------------------------------------------------------------------- ;
bank7_check_if_link_died_0494__linkdeath                                       ;
lda      $0494                         ; 0x1d3dc $D3CC AD 94 04                ;; INC $0494 TO KILL LINK
beq      LD3E9                         ; 0x1d3df $D3CF F0 18                   ;
;occurs shortly after INC $0012		?		only in sidescroll with menu closed?       ;
;possibly only when you are allowed control                                    ;
ldx      $050C                         ; 0x1d3e1 $D3D1 AE 0C 05                ; Timer for Link being in injured state
bne      LD3E9                         ; 0x1d3e4 $D3D4 D0 13                   ;
stx      $0494                         ; 0x1d3e6 $D3D6 8E 94 04                ;; INC $0494 TO KILL LINK
inx                                    ; 0x1d3e9 $D3D9 E8                      ;
stx      $EC                           ; 0x1d3ea $D3DA 86 EC                   ; Sound Effects Type 1
lda      #$02                          ; 0x1d3ec $D3DC A9 02                   ; A = 02
sta      $076C                         ; 0x1d3ee $D3DE 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
lda      #$00                          ; 0x1d3f1 $D3E1 A9 00                   ; A = 00
sta      $2001                         ; 0x1d3f3 $D3E3 8D 01 20                ;
jmp      LE18A                         ; 0x1d3f6 $D3E6 4C 8A E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD3E9                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d3f9 $D3E9 20 C5 FF                ; Load Bank 0
jsr      L8DC3                         ; 0x1d3fc $D3EC 20 C3 8D                ; Spell Casting Routine
lda      $12                           ; 0x1d3ff $D3EF A5 12                   ;; Frame Counter (ascending)
and      #$01                          ; 0x1d401 $D3F1 29 01                   ; keep bits .... ...x				
tax                                    ; 0x1d403 $D3F3 AA                      ;
lda      $070C,x                       ; 0x1d404 $D3F4 BD 0C 07                ; Magic/Life to be added to Magic Meter
beq      LD433                         ; 0x1d407 $D3F7 F0 3A                   ;
dec      $070C,x                       ; 0x1d409 $D3F9 DE 0C 07                ; Magic/Life to be added to Magic Meter
lda      $0783,x                       ; 0x1d40c $D3FC BD 83 07                ; Current number of Magic/Life Containers
asl                                    ; 0x1d40f $D3FF 0A                      ;
asl                                    ; 0x1d410 $D400 0A                      ;
asl                                    ; 0x1d411 $D401 0A                      ;
asl                                    ; 0x1d412 $D402 0A                      ;
asl                                    ; 0x1d413 $D403 0A                      ;
sec                                    ; 0x1d414 $D404 38                      ;
sbc      #$01                          ; 0x1d415 $D405 E9 01                   ;
sta      L0000                         ; 0x1d417 $D407 85 00                   ;
lda      $0773,x                       ; 0x1d419 $D409 BD 73 07                ; Current Magic/Life left in meter
clc                                    ; 0x1d41c $D40C 18                      ;
adc      #$02                          ; 0x1d41d $D40D 69 02                   ;
bcs      LD415                         ; 0x1d41f $D40F B0 04                   ;
cmp      L0000                         ; 0x1d421 $D411 C5 00                   ;
bcc      LD41C                         ; 0x1d423 $D413 90 07                   ;
LD415                                                                          ;
lda      #$00                          ; 0x1d425 $D415 A9 00                   ; A = 00
sta      $070C,x                       ; 0x1d427 $D417 9D 0C 07                ; Magic/Life to be added to Magic Meter
lda      L0000                         ; 0x1d42a $D41A A5 00                   ;
LD41C                                                                          ;
sta      $0773,x                       ; 0x1d42c $D41C 9D 73 07                ; Current Magic/Life left in meter
lda      $074F                         ; 0x1d42f $D41F AD 4F 07                ;; Related to Pause Pane
ora      bank7_table13,x               ; 0x1d432 $D422 1D CA D3                ;
sta      $074F                         ; 0x1d435 $D425 8D 4F 07                ;; Related to Pause Pane
lda      $07FB                         ; 0x1d438 $D428 AD FB 07                ;
cmp      #$10                          ; 0x1d43b $D42B C9 10                   ;
beq      LD433                         ; 0x1d43d $D42D F0 04                   ;
lda      #$10                          ; 0x1d43f $D42F A9 10                   ; A = 10 (sound for meters/experience up/down)
sta      $EF                           ; 0x1d441 $D431 85 EF                   ; Sound Effects Type 4
LD433                                                                          ;
lda      $0756                         ; 0x1d443 $D433 AD 56 07                ; Experience to be added (low byte)
ora      $0755                         ; 0x1d446 $D436 0D 55 07                ; Experience to be added (high byte)
beq      LD477                         ; 0x1d449 $D439 F0 3C                   ; check if Exp. to be added is 0
ldy      #$0A                          ; 0x1d44b $D43B A0 0A                   ; Y = 0A
lda      $0756                         ; 0x1d44d $D43D AD 56 07                ; Experience to be added (low byte)
ldx      $0755                         ; 0x1d450 $D440 AE 55 07                ; Experience to be added (high byte)
bne      LD44B                         ; 0x1d453 $D443 D0 06                   ;
cmp      #$0A                          ; 0x1d455 $D445 C9 0A                   ;
bcs      LD44B                         ; 0x1d457 $D447 B0 02                   ;
ldy      #$01                          ; 0x1d459 $D449 A0 01                   ; Y = 01
LD44B                                                                          ;
sty      L0000                         ; 0x1d45b $D44B 84 00                   ;
sec                                    ; 0x1d45d $D44D 38                      ;
sbc      L0000                         ; 0x1d45e $D44E E5 00                   ;
sta      $0756                         ; 0x1d460 $D450 8D 56 07                ; Experience to be added (low byte)
bcs      LD458                         ; 0x1d463 $D453 B0 03                   ;
dec      $0755                         ; 0x1d465 $D455 CE 55 07                ; Experience to be added (high byte)
LD458                                                                          ;
lda      $0776                         ; 0x1d468 $D458 AD 76 07                ; Current Experience (low byte)
clc                                    ; 0x1d46b $D45B 18                      ;
adc      L0000                         ; 0x1d46c $D45C 65 00                   ;
sta      $0776                         ; 0x1d46e $D45E 8D 76 07                ; Current Experience (low byte)
lda      $0775                         ; 0x1d471 $D461 AD 75 07                ; Current Experience (high byte)
adc      #$00                          ; 0x1d474 $D464 69 00                   ;
sta      $0775                         ; 0x1d476 $D466 8D 75 07                ; Current Experience (high byte)
lda      $07FB                         ; 0x1d479 $D469 AD FB 07                ;
cmp      #$10                          ; 0x1d47c $D46C C9 10                   ;
beq      LD474                         ; 0x1d47e $D46E F0 04                   ;
lda      #$10                          ; 0x1d480 $D470 A9 10                   ; A = 10 (sound for meters/experience up/down)
sta      $EF                           ; 0x1d482 $D472 85 EF                   ; Sound Effects Type 4
LD474                                                                          ;
jmp      LD4A3                         ; 0x1d484 $D474 4C A3 D4                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD477                                                                          ;
lda      $05E8                         ; 0x1d487 $D477 AD E8 05                ;
beq      LD4AB                         ; 0x1d48a $D47A F0 2F                   ;
dec      $05E8                         ; 0x1d48c $D47C CE E8 05                ;
lda      $0776                         ; 0x1d48f $D47F AD 76 07                ; Current Experience (low byte)
ora      $0775                         ; 0x1d492 $D482 0D 75 07                ; Current Experience (high byte)
beq      LD4AB                         ; 0x1d495 $D485 F0 24                   ;
lda      $0776                         ; 0x1d497 $D487 AD 76 07                ; Current Experience (low byte)
sec                                    ; 0x1d49a $D48A 38                      ;
sbc      #$01                          ; 0x1d49b $D48B E9 01                   ;
sta      $0776                         ; 0x1d49d $D48D 8D 76 07                ; Current Experience (low byte)
lda      $0775                         ; 0x1d4a0 $D490 AD 75 07                ; Current Experience (high byte)
sbc      #$00                          ; 0x1d4a3 $D493 E9 00                   ;
sta      $0775                         ; 0x1d4a5 $D495 8D 75 07                ; Current Experience (high byte)
lda      $07FB                         ; 0x1d4a8 $D498 AD FB 07                ;
cmp      #$10                          ; 0x1d4ab $D49B C9 10                   ;
beq      LD4A3                         ; 0x1d4ad $D49D F0 04                   ;
lda      #$10                          ; 0x1d4af $D49F A9 10                   ; A = 10
sta      $EF                           ; 0x1d4b1 $D4A1 85 EF                   ; Sound Effects Type 4
LD4A3                                                                          ;
lda      $074F                         ; 0x1d4b3 $D4A3 AD 4F 07                ;; Related to Pause Pane
ora      #$40                          ; 0x1d4b6 $D4A6 09 40                   ; set bits .x.. ....
sta      $074F                         ; 0x1d4b8 $D4A8 8D 4F 07                ;; Related to Pause Pane
LD4AB                                                                          ;
lda      $074C                         ; 0x1d4bb $D4AB AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cmp      #$02                          ; 0x1d4be $D4AE C9 02                   ;
bcs      LD4CE                         ; 0x1d4c0 $D4B0 B0 1C                   ;
LD4B2                                                                          ;
bit      $2002                         ; 0x1d4c2 $D4B2 2C 02 20                ;
bvc      LD4B2                         ; 0x1d4c5 $D4B5 50 FB                   ;
lda      $FF                           ; 0x1d4c7 $D4B7 A5 FF                   ;; Sprite Bank ?
ora      $0746                         ; 0x1d4c9 $D4B9 0D 46 07                ;
sta      $FF                           ; 0x1d4cc $D4BC 85 FF                   ;; Sprite Bank ?
ldx      $FD                           ; 0x1d4ce $D4BE A6 FD                   ;
ldy      #$10                          ; 0x1d4d0 $D4C0 A0 10                   ; Y = 10
LD4C2                                                                          ;
dey                                    ; 0x1d4d2 $D4C2 88                      ;
bne      LD4C2                         ; 0x1d4d3 $D4C3 D0 FD                   ;
sta      $2000                         ; 0x1d4d5 $D4C5 8D 00 20                ;
stx      $2005                         ; 0x1d4d8 $D4C8 8E 05 20                ;
sty      $2005                         ; 0x1d4db $D4CB 8C 05 20                ;
LD4CE                                                                          ;
jsr      L968D                         ; 0x1d4de $D4CE 20 8D 96                ; Hub Update Routine
lda      $0565                         ; 0x1d4e1 $D4D1 AD 65 05                ;; Hit Points - Display
cmp      #$20                          ; 0x1d4e4 $D4D4 C9 20                   ;
bcs      LD4F3                         ; 0x1d4e6 $D4D6 B0 1B                   ;
lda      $07FB                         ; 0x1d4e8 $D4D8 AD FB 07                ;
cmp      #$10                          ; 0x1d4eb $D4DB C9 10                   ;
bcs      LD4F3                         ; 0x1d4ed $D4DD B0 14                   ;
lda      $07FC                         ; 0x1d4ef $D4DF AD FC 07                ;
cmp      #$40                          ; 0x1d4f2 $D4E2 C9 40                   ;
beq      LD4F3                         ; 0x1d4f4 $D4E4 F0 0D                   ;
lda      $07FE                         ; 0x1d4f6 $D4E6 AD FE 07                ;
cmp      #$02                          ; 0x1d4f9 $D4E9 C9 02                   ;
beq      LD4F3                         ; 0x1d4fb $D4EB F0 06                   ;
lda      $EF                           ; 0x1d4fd $D4ED A5 EF                   ; Sound Effects Type 4
ora      #$40                          ; 0x1d4ff $D4EF 09 40                   ; set bits .x.. ....
sta      $EF                           ; 0x1d501 $D4F1 85 EF                   ; sound for Low Health Beeping
LD4F3                                                                          ;
jsr      L903A                         ; 0x1d503 $D4F3 20 3A 90                ;
lda      #$00                          ; 0x1d506 $D4F6 A9 00                   ; A = 00
sta      $0754                         ; 0x1d508 $D4F8 8D 54 07                ;;in_elevator (boolean)
sta      $05E7                         ; 0x1d50b $D4FB 8D E7 05                ;
jsr      L9925                         ; 0x1d50e $D4FE 20 25 99                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d511 $D501 20 C9 FF                ; Load Bank $0769
jsr      bank7_code21                  ; 0x1d514 $D504 20 A7 D5                ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d517 $D507 20 C5 FF                ; Load Bank 0
jsr      L80E5                         ; 0x1d51a $D50A 20 E5 80                ; North Castle Chandeliers
jsr      L9847                         ; 0x1d51d $D50D 20 47 98                ;
jsr      LA6D2                         ; 0x1d520 $D510 20 D2 A6                ;
lda      $0497                         ; 0x1d523 $D513 AD 97 04                ;;crouch_timer (timer for Link crouching after landing); Timer for Link crouching after landing
beq      LD51F                         ; 0x1d526 $D516 F0 07                   ;
dec      $0497                         ; 0x1d528 $D518 CE 97 04                ;;crouch_timer (timer for Link crouching after landing); Timer for Link crouching after landing
lda      #$06                          ; 0x1d52b $D51B A9 06                   ; A = 06
sta      $80                           ; 0x1d52d $D51D 85 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
LD51F                                                                          ;
lda      $0518                         ; 0x1d52f $D51F AD 18 05                ;; Invulnerable Timeout (01-02 - Blinking, 03+ - Not Blinking); Timer for Link being immune from attacks
beq      LD52D                         ; 0x1d532 $D522 F0 09                   ;
cmp      #$03                          ; 0x1d534 $D524 C9 03                   ;
bcs      LD52D                         ; 0x1d536 $D526 B0 05                   ;
lda      $12                           ; 0x1d538 $D528 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1d53a $D52A 4A                      ;
bcs      LD538                         ; 0x1d53b $D52B B0 0B                   ;
LD52D                                                                          ;
jsr      bank7_Links_Display_Routine   ; 0x1d53d $D52D 20 F0 EB                ;
lda      $0503                         ; 0x1d540 $D530 AD 03 05                ;; Timer for moving left or right (when entering area)
bne      LD538                         ; 0x1d543 $D533 D0 03                   ;
jsr      bank7_related_to_breakable_block; 0x1d545 $D535 20 DD E1              ;related to breakable block
LD538                                                                          ;
lda      $0736                         ; 0x1d548 $D538 AD 36 07                ; Game Mode
cmp      #$0B                          ; 0x1d54b $D53B C9 0B                   ;
bne      LD545                         ; 0x1d54d $D53D D0 06                   ;
inc      $0727                         ; 0x1d54f $D53F EE 27 07                ;
inc      $0729                         ; 0x1d552 $D542 EE 29 07                ;
LD545                                                                          ;
jmp      L99E6                         ; 0x1d555 $D545 4C E6 99                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Flying_Blade_Disappearing__maybe                                         ;
ldy      $97,x                         ; 0x1d558 $D548 B4 97                   ;
lda      $CA                           ; 0x1d55a $D54A A5 CA                   ;
and      #$08                          ; 0x1d55c $D54C 29 08                   ; keep bits .... x...
bne      LD55A                         ; 0x1d55e $D54E D0 0A                   ;
lda      $30,x                         ; 0x1d560 $D550 B5 30                   ; Projectile Y Position
sta      $0200,y                       ; 0x1d562 $D552 99 00 02                ;
lda      $CE                           ; 0x1d565 $D555 A5 CE                   ;
sta      $0203,y                       ; 0x1d567 $D557 99 03 02                ;
LD55A                                                                          ;
inc      $87,x                         ; 0x1d56a $D55A F6 87                   ; Projectile Type
lda      $87,x                         ; 0x1d56c $D55C B5 87                   ;; Projectile Type
and      #$08                          ; 0x1d56e $D55E 29 08                   ; keep bits .... x...
lsr                                    ; 0x1d570 $D560 4A                      ;
lsr                                    ; 0x1d571 $D561 4A                      ;
adc      #$78                          ; 0x1d572 $D562 69 78                   ; 78 = Tile Mapping offset
sta      $0201,y                       ; 0x1d574 $D564 99 01 02                ;
lda      #$01                          ; 0x1d577 $D567 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1d579 $D569 99 02 02                ;
LD56C                                                                          ;
rts                                    ; 0x1d57c $D56C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD56D                                                                          ;
txa                                    ; 0x1d57d $D56D 8A                      ;
clc                                    ; 0x1d57e $D56E 18                      ;
adc      #$07                          ; 0x1d57f $D56F 69 07                   ;
tax                                    ; 0x1d581 $D571 AA                      ;
ldy      #$02                          ; 0x1d582 $D572 A0 02                   ; Y = 02
jsr      bank7_code51                  ; 0x1d584 $D574 20 7D F2                ;
ldx      $10                           ; 0x1d587 $D577 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $87,x                         ; 0x1d589 $D579 B5 87                   ; Projectile Type
beq      LD56C                         ; 0x1d58b $D57B F0 EF                   ;
bmi      bank7_Flying_Blade_Disappearing__maybe; 0x1d58d $D57D 30 C9           ;
sec                                    ; 0x1d58f $D57F 38                      ;
sbc      #$01                          ; 0x1d590 $D580 E9 01                   ;
asl                                    ; 0x1d592 $D582 0A                      ;
tay                                    ; 0x1d593 $D583 A8                      ;
lda      $6D00,y                       ; 0x1d594 $D584 B9 00 6D                ;
sta      L000E                         ; 0x1d597 $D587 85 0E                   ;
lda      $6D01,y                       ; 0x1d599 $D589 B9 01 6D                ;
bank7_table14 = * + $0002                                                      ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d59c $D58C 4C D6 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD58F                                                                          ;
.byt    $50,$68,$80,$98,$B0,$C8,$50,$68; 0x1d59f $D58F 50 68 80 98 B0 C8 50 68 ;
.byt    $80,$98,$B0,$C8                ; 0x1d5a7 $D597 80 98 B0 C8             ;
LD59B                                                                          ;
.byt    $20,$28,$30,$E0,$E8,$F0,$20,$28; 0x1d5ab $D59B 20 28 30 E0 E8 F0 20 28 ;
.byt    $30,$E0,$E8,$F0                ; 0x1d5b3 $D5A3 30 E0 E8 F0             ;
; ---------------------------------------------------------------------------- ;
bank7_code21                                                                   ;
lda      $B5                           ; 0x1d5b7 $D5A7 A5 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
beq      LD5D9                         ; 0x1d5b9 $D5A9 F0 2E                   ;
inc      $0485                         ; 0x1d5bb $D5AB EE 85 04                ;
ldx      #$05                          ; 0x1d5be $D5AE A2 05                   ; X = 05
LD5B0                                                                          ;
stx      $10                           ; 0x1d5c0 $D5B0 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $0485                         ; 0x1d5c2 $D5B2 AD 85 04                ;
cmp      #$06                          ; 0x1d5c5 $D5B5 C9 06                   ;
bcc      LD5BE                         ; 0x1d5c7 $D5B7 90 05                   ;
lda      #$00                          ; 0x1d5c9 $D5B9 A9 00                   ; A = 00
sta      $0485                         ; 0x1d5cb $D5BB 8D 85 04                ;
LD5BE                                                                          ;
clc                                    ; 0x1d5ce $D5BE 18                      ;
adc      $10                           ; 0x1d5cf $D5BF 65 10                   ;; used as monster x register ;draw boss hp bar
tay                                    ; 0x1d5d1 $D5C1 A8                      ;
lda      LD58F,y                       ; 0x1d5d2 $D5C2 B9 8F D5                ;
sta      $91,x                         ; 0x1d5d5 $D5C5 95 91                   ;
lda      LD59B,y                       ; 0x1d5d7 $D5C7 B9 9B D5                ;
sta      $97,x                         ; 0x1d5da $D5CA 95 97                   ;
jsr      LD5DA                         ; 0x1d5dc $D5CC 20 DA D5                ;
ldx      $10                           ; 0x1d5df $D5CF A6 10                   ;; used as monster x register ;draw boss hp bar
jsr      LD56D                         ; 0x1d5e1 $D5D1 20 6D D5                ;
ldx      $10                           ; 0x1d5e4 $D5D4 A6 10                   ;; used as monster x register ;draw boss hp bar
dex                                    ; 0x1d5e6 $D5D6 CA                      ;
bpl      LD5B0                         ; 0x1d5e7 $D5D7 10 D7                   ;
LD5D9                                                                          ;
rts                                    ; 0x1d5e9 $D5D9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD5DA                                                                          ;
ldy      #$01                          ; 0x1d5ea $D5DA A0 01                   ; Y = 01
inx                                    ; 0x1d5ec $D5DC E8                      ;
jsr      bank7_code51                  ; 0x1d5ed $D5DD 20 7D F2                ;
ldx      $10                           ; 0x1d5f0 $D5E0 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $B6,x                         ; 0x1d5f2 $D5E2 B5 B6                   ; Generated Enemy Slot
asl                                    ; 0x1d5f4 $D5E4 0A                      ;
tay                                    ; 0x1d5f5 $D5E5 A8                      ;
lda      bank7_pointer_table15,y       ; 0x1d5f6 $D5E6 B9 F1 D5                ;
sta      L000E                         ; 0x1d5f9 $D5E9 85 0E                   ;
lda      bank7_pointer_table15+$01,y   ; 0x1d5fb $D5EB B9 F2 D5                ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d5fe $D5EE 4C D6 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_pointer_table15                                                          ;
.word    bank7_code22                  ; 0x1d601 $D5F1 03 D6                   ;
.word    bank7_enemy_every_frame_routine; 0x1d603 $D5F3 CA D6                  ;
.word    LDCAE                         ; 0x1d605 $D5F5 AE DC                   ;
.word    bank7_code30                  ; 0x1d607 $D5F7 6C DD                   ;
; ---------------------------------------------------------------------------- ;
bank7_table15                                                                  ;
.byt    $08,$F8                        ; 0x1d609 $D5F9 08 F8                   ;
LD5FB                                                                          ;
.byt    $30,$50,$60,$70,$80,$90,$A0,$B0; 0x1d60b $D5FB 30 50 60 70 80 90 A0 B0 ;
; ---------------------------------------------------------------------------- ;
bank7_code22                                                                   ;
lda      $0759                         ; 0x1d613 $D603 AD 59 07                ;; if not 0, cause fairy spawn at next encounter (??)
bne      LD624                         ; 0x1d616 $D606 D0 1C                   ;
lda      $071F                         ; 0x1d618 $D608 AD 1F 07                ;; ???
lsr                                    ; 0x1d61b $D60B 4A                      ;
eor      #$01                          ; 0x1d61c $D60C 49 01                   ; flip bits .... ...x
tax                                    ; 0x1d61e $D60E AA                      ;
lda      $0732                         ; 0x1d61f $D60F AD 32 07                ;
cmp      $0733                         ; 0x1d622 $D612 CD 33 07                ;
bcc      LD625                         ; 0x1d625 $D615 90 0E                   ;
cmp      #$02                          ; 0x1d627 $D617 C9 02                   ;
beq      LD620                         ; 0x1d629 $D619 F0 05                   ;
cpx      #$01                          ; 0x1d62b $D61B E0 01                   ;
beq      LD625                         ; 0x1d62d $D61D F0 06                   ;
rts                                    ; 0x1d62f $D61F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD620                                                                          ;
cpx      #$00                          ; 0x1d630 $D620 E0 00                   ;
beq      LD625                         ; 0x1d632 $D622 F0 01                   ;
LD624                                                                          ;
rts                                    ; 0x1d634 $D624 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD625                                                                          ;
lda      $0732,x                       ; 0x1d635 $D625 BD 32 07                ;
sta      L0000                         ; 0x1d638 $D628 85 00                   ;
lda      $0734,x                       ; 0x1d63a $D62A BD 34 07                ;
sta      $01                           ; 0x1d63d $D62D 85 01                   ;
ldx      $10                           ; 0x1d63f $D62F A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      #$01                          ; 0x1d641 $D631 A0 01                   ; Y = 01
LD633                                                                          ;
tya                                    ; 0x1d643 $D633 98                      ;
ldy      #$00                          ; 0x1d644 $D634 A0 00                   ; Y = 00
cmp      ($D6),y                       ; 0x1d646 $D636 D1 D6                   ;
bcs      LD624                         ; 0x1d648 $D638 B0 EA                   ;
tay                                    ; 0x1d64a $D63A A8                      ;
iny                                    ; 0x1d64b $D63B C8                      ;
lda      ($D6),y                       ; 0x1d64c $D63C B1 D6                   ;
asl                                    ; 0x1d64e $D63E 0A                      ;
rol                                    ; 0x1d64f $D63F 2A                      ;
rol                                    ; 0x1d650 $D640 2A                      ;
and      #$03                          ; 0x1d651 $D641 29 03                   ; keep bits .... ..xx
cmp      L0000                         ; 0x1d653 $D643 C5 00                   ;
beq      LD64B                         ; 0x1d655 $D645 F0 04                   ;
LD647                                                                          ;
iny                                    ; 0x1d657 $D647 C8                      ;
jmp      LD633                         ; 0x1d658 $D648 4C 33 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD64B                                                                          ;
dey                                    ; 0x1d65b $D64B 88                      ;
lda      ($D6),y                       ; 0x1d65c $D64C B1 D6                   ;
and      #$0F                          ; 0x1d65e $D64E 29 0F                   ; keep bits .... xxxx
cmp      $01                           ; 0x1d660 $D650 C5 01                   ;
beq      LD658                         ; 0x1d662 $D652 F0 04                   ;DECIDE IF SPAWN MONSTER FROM MAP DATA
;---- spawn monster ?                                                          ;
;                                                                              ;
;Related to Enemy Generation ?		2 bytes: 	[0-2:Y index for table to get Y position]	[bits0-5:monID];
;                                                                              ; JSR $D685: 		07:D685:B1 D6     LDA ($D6),Y @ $700D = #$1D
;                                                                              ;set D6 to point to 2 bytes of monster data
iny                                    ; 0x1d664 $D654 C8                      ;
jmp      LD647                         ; 0x1d665 $D655 4C 47 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD658                                                                          ;
lda      ($D6),y                       ; 0x1d668 $D658 B1 D6                   ;
asl                                    ; 0x1d66a $D65A 0A                      ;
bcs      LD6C0                         ; 0x1d66b $D65B B0 63                   ;
inc      $B6,x                         ; 0x1d66d $D65D F6 B6                   ; Generated Enemy Slot
pha                                    ; 0x1d66f $D65F 48                      ;
sec                                    ; 0x1d670 $D660 38                      ;
ror                                    ; 0x1d671 $D661 6A                      ;
sta      ($D6),y                       ; 0x1d672 $D662 91 D6                   ;
sty      $02                           ; 0x1d674 $D664 84 02                   ;
pla                                    ; 0x1d676 $D666 68                      ;
lsr                                    ; 0x1d677 $D667 4A                      ;
lsr                                    ; 0x1d678 $D668 4A                      ;
lsr                                    ; 0x1d679 $D669 4A                      ;
lsr                                    ; 0x1d67a $D66A 4A                      ;
lsr                                    ; 0x1d67b $D66B 4A                      ;
and      #$07                          ; 0x1d67c $D66C 29 07                   ; keep bits .... .xxx
tay                                    ; 0x1d67e $D66E A8                      ;
lda      LD5FB,y                       ; 0x1d67f $D66F B9 FB D5                ;
sta      $2A,x                         ; 0x1d682 $D672 95 2A                   ; Enemy Y Position
ldy      $02                           ; 0x1d684 $D674 A4 02                   ;
sty      $BC,x                         ; 0x1d686 $D676 94 BC                   ;; Generated Enemy Y Position ?
lda      L0000                         ; 0x1d688 $D678 A5 00                   ;
sta      $3C,x                         ; 0x1d68a $D67A 95 3C                   ; Enemy X Position (high byte)
lda      $01                           ; 0x1d68c $D67C A5 01                   ;
asl                                    ; 0x1d68e $D67E 0A                      ;
asl                                    ; 0x1d68f $D67F 0A                      ;
asl                                    ; 0x1d690 $D680 0A                      ;
asl                                    ; 0x1d691 $D681 0A                      ;
sta      $4E,x                         ; 0x1d692 $D682 95 4E                   ; Enemy X Position (low byte)
iny                                    ; 0x1d694 $D684 C8                      ;
lda      ($D6),y                       ; 0x1d695 $D685 B1 D6                   ;??got called when existing for awhile as a bot <-bug?
and      #$3F                          ; 0x1d697 $D687 29 3F                   ; keep bits ..xx xxxx
sta      $A1,x                         ; 0x1d699 $D689 95 A1                   ; Enemy Code
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d69b $D68B 20 91 DC; Determine Enemy Facing Direction
lda      bank7_table15,y               ; 0x1d69e $D68E B9 F9 D5                ; 08 or F8
sta      $71,x                         ; 0x1d6a1 $D691 95 71                   ; Enemy X Velocity
lda      #$01                          ; 0x1d6a3 $D693 A9 01                   ; A = 01
sta      $1A,x                         ; 0x1d6a5 $D695 95 1A                   ;
lsr                                    ; 0x1d6a7 $D697 4A                      ;
sta      $040E,x                       ; 0x1d6a8 $D698 9D 0E 04                ; Enemy Hit State (0 = not in Hit State)
sta      $AF,x                         ; 0x1d6ab $D69B 95 AF                   ; Various enemy state variables
sta      $81,x                         ; 0x1d6ad $D69D 95 81                   ; Current Animation Frame for Enemy
sta      $043E,x                       ; 0x1d6af $D69F 9D 3E 04                ;
sta      $057E,x                       ; 0x1d6b2 $D6A2 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
sta      $0444,x                       ; 0x1d6b5 $D6A5 9D 44 04                ; Enemy Vulnerability
sta      $04A0,x                       ; 0x1d6b8 $D6A8 9D A0 04                ;
ldy      $A1,x                         ; 0x1d6bb $D6AB B4 A1                   ; Enemy Code
lda      $6D21,y                       ; 0x1d6bd $D6AD B9 21 6D                ;
sta      $C2,x                         ; 0x1d6c0 $D6B0 95 C2                   ; Enemy Current HP
tya                                    ; 0x1d6c2 $D6B2 98                      ;
asl                                    ; 0x1d6c3 $D6B3 0A                      ;
tay                                    ; 0x1d6c4 $D6B4 A8                      ;
lda      $6D45,y                       ; 0x1d6c5 $D6B5 B9 45 6D                ;
sta      L000E                         ; 0x1d6c8 $D6B8 85 0E                   ;
lda      $6D46,y                       ; 0x1d6ca $D6BA B9 46 6D                ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d6cd $D6BD 4C D6 D6                ;<----- JUMPS TO $(E)
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD6C0                                                                          ;
rts                                    ; 0x1d6d0 $D6C0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Link_Collision_Detection                                                 ;
lda      $A8,x                         ; 0x1d6d1 $D6C1 B5 A8                   ; Enemy State ?
and      #$10                          ; 0x1d6d3 $D6C3 29 10                   ; keep bits ...x .... (bit for enemy frozen ?)
beq      LD6C0                         ; 0x1d6d5 $D6C5 F0 F9                   ;
jmp      bank7_Link_Hit_Routine        ; 0x1d6d7 $D6C7 4C EF E2                ; Link Hit Routine
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_enemy_every_frame_routine                                                ;
lda      $A1,x                         ; 0x1d6da $D6CA B5 A1                   ; Enemy Code
asl                                    ; 0x1d6dc $D6CC 0A                      ;
tay                                    ; 0x1d6dd $D6CD A8                      ;
lda      $6D8D,y                       ; 0x1d6de $D6CE B9 8D 6D                ;
sta      L000E                         ; 0x1d6e1 $D6D1 85 0E                   ;
lda      $6D8E,y                       ; 0x1d6e3 $D6D3 B9 8E 6D                ;
bank7_JUMPS_TO___E_                                                            ;
sta      $0F                           ; 0x1d6e6 $D6D6 85 0F                   ;
jmp      (L000E)                       ; 0x1d6e8 $D6D8 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Deeler                                                         ;
.byt    $20,$F0                        ; 0x1d6eb $D6DB 20 F0                   ;20 = Speed when descending	;F0 = Speed when ascending
LD6DD                                                                          ;
.byt    $08,$F8                        ; 0x1d6ed $D6DD 08 F8                   ;08 = Speed going right	;F8 = Speed going left
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Deeler                                                   ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d6ef $D6DF 20 02 DA                ; Enemy Stops when Hit
jsr      bank7_Link_Collision_Detection; 0x1d6f2 $D6E2 20 C1 D6                ; Link Collision Detection
lda      $AF,x                         ; 0x1d6f5 $D6E5 B5 AF                   ;; Various enemy state variables
bpl      LD6EC                         ; 0x1d6f7 $D6E7 10 03                   ;
jmp      LD750                         ; 0x1d6f9 $D6E9 4C 50 D7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD6EC                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d6fc $D6EC 20 91 DC; Determine Enemy Facing Direction
lda      $AF,x                         ; 0x1d6ff $D6EF B5 AF                   ;; Various enemy state variables
bne      LD711                         ; 0x1d701 $D6F1 D0 1E                   ;
lda      $0F                           ; 0x1d703 $D6F3 A5 0F                   ;
adc      #$40                          ; 0x1d705 $D6F5 69 40                   ;
cmp      #$80                          ; 0x1d707 $D6F7 C9 80                   ;
bcc      bank7_Deeler_Red_Blue         ; 0x1d709 $D6F9 90 0B                   ;
LD6FB                                                                          ;
lda      LD6DD,y                       ; 0x1d70b $D6FB B9 DD D6                ;
sta      $71,x                         ; 0x1d70e $D6FE 95 71                   ; Enemy X Velocity
jsr      bank7_Simple_Horizontal_Movement; 0x1d710 $D700 20 B8 DE              ; Simple Horizontal Movement
jmp      LD74D                         ; 0x1d713 $D703 4C 4D D7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Deeler_Red_Blue                                                          ;
lda      $051B,x                       ; 0x1d716 $D706 BD 1B 05                ; Randomizer
and      #$1F                          ; 0x1d719 $D709 29 1F                   ; keep bits ...x xxxx
ora      $C9                           ; 0x1d71b $D70B 05 C9                   ;
bne      LD6FB                         ; 0x1d71d $D70D D0 EC                   ;
LD70F                                                                          ;
inc      $AF,x                         ; 0x1d71f $D70F F6 AF                   ;; Various enemy state variables
LD711                                                                          ;
lda      $AF,x                         ; 0x1d721 $D711 B5 AF                   ;; Various enemy state variables
lsr                                    ; 0x1d723 $D713 4A                      ;
tay                                    ; 0x1d724 $D714 A8                      ;
lda      $2A,x                         ; 0x1d725 $D715 B5 2A                   ; Enemy Y Position
cmp      $05DC,y                       ; 0x1d727 $D717 D9 DC 05                ; Go down that many pixels
bne      LD728                         ; 0x1d72a $D71A D0 0C                   ;
lda      $AF,x                         ; 0x1d72c $D71C B5 AF                   ;; Various enemy state variables
cmp      #$02                          ; 0x1d72e $D71E C9 02                   ;
bne      LD70F                         ; 0x1d730 $D720 D0 ED                   ;
lda      #$00                          ; 0x1d732 $D722 A9 00                   ; A = 00
sta      $AF,x                         ; 0x1d734 $D724 95 AF                   ;; Various enemy state variables
beq      LD74D                         ; 0x1d736 $D726 F0 25                   ;
LD728                                                                          ;
lda      $A1,x                         ; 0x1d738 $D728 B5 A1                   ; Enemy Code
cmp      #$0E                          ; 0x1d73a $D72A C9 0E                   ; 0E = Blue Deeler
bne      LD744                         ; 0x1d73c $D72C D0 16                   ;
lda      $2A,x                         ; 0x1d73e $D72E B5 2A                   ; Enemy Y Position
cmp      #$8E                          ; 0x1d740 $D730 C9 8E                   ; minimum height after first fall
bcc      LD744                         ; 0x1d742 $D732 90 10                   ;
ror      $AF,x                         ; 0x1d744 $D734 76 AF                   ;; Various enemy state variables
lda      #$00                          ; 0x1d746 $D736 A9 00                   ; A = 00
sta      $71,x                         ; 0x1d748 $D738 95 71                   ; Enemy X Velocity
lda      #$20                          ; 0x1d74a $D73A A9 20                   ; A = 20
sta      $057E,x                       ; 0x1d74c $D73C 9D 7E 05                ; Enemy Y Velocity
sta      $0504,x                       ; 0x1d74f $D73F 9D 04 05                ; Timer for Enemy
bne      LD773                         ; 0x1d752 $D742 D0 2F                   ;
LD744                                                                          ;
lda      bank7_Table_for_Deeler,y      ; 0x1d754 $D744 B9 DB D6                ;
sta      $057E,x                       ; 0x1d757 $D747 9D 7E 05                ; Enemy Y Velocity
jsr      bank7_Simple_Vertical_Movement; 0x1d75a $D74A 20 C8 DE                ; Simple Vertical Movement
LD74D                                                                          ;
jmp      LDE40                         ; 0x1d75d $D74D 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD750                                                                          ;
lda      $0504,x                       ; 0x1d760 $D750 BD 04 05                ; Timer for Enemy
bne      LD773                         ; 0x1d763 $D753 D0 1E                   ;
lda      $051B,x                       ; 0x1d765 $D755 BD 1B 05                ; Randomizer
and      #$3F                          ; 0x1d768 $D758 29 3F                   ; keep bits ..xx xxxx
ora      #$40                          ; 0x1d76a $D75A 09 40                   ; set  bits .x.. ....
sta      $0504,x                       ; 0x1d76c $D75C 9D 04 05                ; random 40-7F (delay before next jump)
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d76f $D75F 20 91 DC; Determine Enemy Facing Direction
lda      LD6DD,y                       ; 0x1d772 $D762 B9 DD D6                ;
asl                                    ; 0x1d775 $D765 0A                      ;
asl                                    ; 0x1d776 $D766 0A                      ;
sta      $71,x                         ; 0x1d777 $D767 95 71                   ; Enemy X Velocity
lda      $051B,x                       ; 0x1d779 $D769 BD 1B 05                ; Randomizer
and      #$07                          ; 0x1d77c $D76C 29 07                   ; keep bits .... .xxx
ora      #$E8                          ; 0x1d77e $D76E 09 E8                   ; set  bits xxx. x...
sta      $057E,x                       ; 0x1d780 $D770 9D 7E 05                ; Enemy Y Velocity (random E8-EF) (-18 -11)
LD773                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d783 $D773 20 B8 DE              ; Simple Horizontal Movement
jsr      bank7_Simple_Vertical_Movement; 0x1d786 $D776 20 C8 DE                ; Simple Vertical Movement
inc      $057E,x                       ; 0x1d789 $D779 FE 7E 05                ; Enemy Y Velocity
jsr      LDE3D                         ; 0x1d78c $D77C 20 3D DE                ;
lda      $A8,x                         ; 0x1d78f $D77F B5 A8                   ; Enemy State ?
and      #$04                          ; 0x1d791 $D781 29 04                   ; keep bits .... .x..
beq      LD78A                         ; 0x1d793 $D783 F0 05                   ;
jsr      bank7_Floor_Y_Position        ; 0x1d795 $D785 20 C1 DA                ; Floor Enemy Y Position
sta      $71,x                         ; 0x1d798 $D788 95 71                   ; Enemy X Velocity
LD78A                                                                          ;
rts                                    ; 0x1d79a $D78A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bago_Bago                                                      ;
.byt    $10,$F0                        ; 0x1d79b $D78B 10 F0                   ;10 = Initial X Position, facing right	;F0 = Initial X Position, facing left
LD78D                                                                          ;
.byt    $20,$E0                        ; 0x1d79d $D78D 20 E0                   ;20 = X Velocity while in mid-air, facing right	;E0 = X Velocity while in mid-air, facing left
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bago_Bago_Generator                                      ;
lda      $12                           ; 0x1d79f $D78F A5 12                   ;; Frame Counter (ascending)
and      #$7F                          ; 0x1d7a1 $D791 29 7F                   ; keep bits .xxx xxxx
bne      LD79E                         ; 0x1d7a3 $D793 D0 09                   ; delay before next Bago Bago is spawned
ldx      #$05                          ; 0x1d7a5 $D795 A2 05                   ; X = 05
LD797                                                                          ;
lda      $B6,x                         ; 0x1d7a7 $D797 B5 B6                   ;; Generated Enemy Slot
beq      LD7A1                         ; 0x1d7a9 $D799 F0 06                   ;
dex                                    ; 0x1d7ab $D79B CA                      ;
bpl      LD797                         ; 0x1d7ac $D79C 10 F9                   ;
LD79E                                                                          ;
ldx      $10                           ; 0x1d7ae $D79E A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1d7b0 $D7A0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7A1                                                                          ;
lda      #$01                          ; 0x1d7b1 $D7A1 A9 01                   ; A = 01
sta      $B6,x                         ; 0x1d7b3 $D7A3 95 B6                   ;; Generated Enemy Slot
lda      #$10                          ; 0x1d7b5 $D7A5 A9 10                   ; A = 10
sta      $A1,x                         ; 0x1d7b7 $D7A7 95 A1                   ; Enemy Code (10 = Bago Bago)
lda      $051B,x                       ; 0x1d7b9 $D7A9 BD 1B 05                ; Randomizer
and      #$01                          ; 0x1d7bc $D7AC 29 01                   ; keep bits .... ...x
tay                                    ; 0x1d7be $D7AE A8                      ;
LD7B0     = * + $0001                                                          ;
lda      $072C                         ; 0x1d7bf $D7AF AD 2C 07                ; Scrolling Offset Low Byte
adc      bank7_Table_for_Bago_Bago,y   ; 0x1d7c2 $D7B2 79 8B D7                ;
sta      $4E,x                         ; 0x1d7c5 $D7B5 95 4E                   ; Enemy X position (low byte)
lda      $072A                         ; 0x1d7c7 $D7B7 AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1d7ca $D7BA 69 00                   ;
sta      $3C,x                         ; 0x1d7cc $D7BC 95 3C                   ; Enemy X position (high byte)
lda      LD78D,y                       ; 0x1d7ce $D7BE B9 8D D7                ;
sta      $71,x                         ; 0x1d7d1 $D7C1 95 71                   ; X Velocity for Enemy
lda      #$D0                          ; 0x1d7d3 $D7C3 A9 D0                   ; A = D0
sta      $2A,x                         ; 0x1d7d5 $D7C5 95 2A                   ; Initial Y position for Bago Bago
sta      $BC,x                         ; 0x1d7d7 $D7C7 95 BC                   ;; Generated Enemy Y Position ?
lda      #$C0                          ; 0x1d7d9 $D7C9 A9 C0                   ; A = C0
sta      $057E,x                       ; 0x1d7db $D7CB 9D 7E 05                ; Initial Y Velocity for Bago Bago
lda      #$03                          ; 0x1d7de $D7CE A9 03                   ; A = 03
sta      $C2,x                         ; 0x1d7e0 $D7D0 95 C2                   ; Enemy HP
lsr                                    ; 0x1d7e2 $D7D2 4A                      ;
sta      $1A,x                         ; 0x1d7e3 $D7D3 95 1A                   ;
lsr                                    ; 0x1d7e5 $D7D5 4A                      ;
sta      $040E,x                       ; 0x1d7e6 $D7D6 9D 0E 04                ; Enemy Hit State
iny                                    ; 0x1d7e9 $D7D9 C8                      ;
sty      $60,x                         ; 0x1d7ea $D7DA 94 60                   ;; Enemy facing direction
ldx      $10                           ; 0x1d7ec $D7DC A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1d7ee $D7DE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bago_Bago_X_Velocity_on_ground                                 ;
.byt    $10,$F0                        ; 0x1d7ef $D7DF 10 F0                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bago_Bago0                                               ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d7f1 $D7E1 20 02 DA                ; Enemy Stops when Hit
lda      $C9                           ; 0x1d7f4 $D7E4 A5 C9                   ;
and      #$0C                          ; 0x1d7f6 $D7E6 29 0C                   ; keep bits .... xx..
cmp      #$0C                          ; 0x1d7f8 $D7E8 C9 0C                   ;
bne      LD7F1                         ; 0x1d7fa $D7EA D0 05                   ;
lda      #$00                          ; 0x1d7fc $D7EC A9 00                   ; A = 00
sta      $B6,x                         ; 0x1d7fe $D7EE 95 B6                   ;; Generated Enemy Slot
rts                                    ; 0x1d800 $D7F0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7F1                                                                          ;
jsr      bank7_Link_Collision_Detection; 0x1d801 $D7F1 20 C1 D6                ; Link Collision Detection
lda      $AF,x                         ; 0x1d804 $D7F4 B5 AF                   ;; Various enemy state variables
bne      bank7_Bago_Bago_and_Octorok   ; 0x1d806 $D7F6 D0 40                   ;
lda      $A8,x                         ; 0x1d808 $D7F8 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d80a $D7FA 29 04                   ;;Keep Bits:0000_0100
beq      LD812                         ; 0x1d80c $D7FC F0 14                   ;
lda      $057E,x                       ; 0x1d80e $D7FE BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
bmi      LD812                         ; 0x1d811 $D801 30 0F                   ;
inc      $AF,x                         ; 0x1d813 $D803 F6 AF                   ;; Various enemy state variables
jsr      bank7_Floor_Y_Position        ; 0x1d815 $D805 20 C1 DA                ; Floor Enemy Y Position
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d818 $D808 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_Bago_Bago_X_Velocity_on_ground,y; 0x1d81b $D80B B9 DF D7;
sta      $71,x                         ; 0x1d81e $D80E 95 71                   ;; Enemy X Velocity
bne      bank7_Bago_Bago_and_Octorok   ; 0x1d820 $D810 D0 26                   ;
LD812                                                                          ;
inc      $057E,x                       ; 0x1d822 $D812 FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jsr      bank7_Simple_Vertical_Movement; 0x1d825 $D815 20 C8 DE                ; Simple Vertical Movement
LD818                                                                          ;
lda      $0504,x                       ; 0x1d828 $D818 BD 04 05                ;; Timer for Enemy
bne      LD832                         ; 0x1d82b $D81B D0 15                   ;
lda      $2A,x                         ; 0x1d82d $D81D B5 2A                   ; Enemy Y position
sbc      $29                           ; 0x1d82f $D81F E5 29                   ; Link's Y position
cmp      #$11                          ; 0x1d831 $D821 C9 11                   ;
bcs      LD832                         ; 0x1d833 $D823 B0 0D                   ;
lda      #$70                          ; 0x1d835 $D825 A9 70                   ; A = 70
sta      $0504,x                       ; 0x1d837 $D827 9D 04 05                ; Minimum delay between rocks
lda      $051B,x                       ; 0x1d83a $D82A BD 1B 05                ; Randomizer
bmi      LD832                         ; 0x1d83d $D82D 30 03                   ; 50% chance of shooting rock at right Y pos
jsr      bank7_shoot_rock              ; 0x1d83f $D82F 20 6C D8                ; Shoot Rock
LD832                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d842 $D832 20 B8 DE              ;
jmp      LDE3D                         ; 0x1d845 $D835 4C 3D DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Bago_Bago_and_Octorok                                                    ;
lda      $A8,x                         ; 0x1d848 $D838 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d84a $D83A 29 04                   ; keep bits .... .x..
bne      LD840                         ; 0x1d84c $D83C D0 02                   ;
sta      $AF,x                         ; 0x1d84e $D83E 95 AF                   ;; Various enemy state variables
LD840                                                                          ;
bpl      LD818                         ; 0x1d850 $D840 10 D6                   ;
bank7_Enemy_Routines1_Bago_Bago1                                               ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d852 $D842 20 02 DA                ; Enemy Stops when Hit
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d855 $D845 20 91 DC; Determine Enemy Facing Direction
LD848                                                                          ;
inc      $AF,x                         ; 0x1d858 $D848 F6 AF                   ;; Various enemy state variables
lda      $AF,x                         ; 0x1d85a $D84A B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1d85c $D84C 29 7F                   ; keep bits .xxx xxxx
bne      LD855                         ; 0x1d85e $D84E D0 05                   ; delay before next jump (Octorok)
lda      #$E0                          ; 0x1d860 $D850 A9 E0                   ; A = E0
sta      $057E,x                       ; 0x1d862 $D852 9D 7E 05                ; Y Velocity for Octorok jump
LD855                                                                          ;
jsr      bank7_Gravity                 ; 0x1d865 $D855 20 BE DE                ; Gravity
jsr      LDE3D                         ; 0x1d868 $D858 20 3D DE                ; Display
jsr      bank7_Link_Collision_Detection; 0x1d86b $D85B 20 C1 D6                ; Link Collision Detection
lda      $A8,x                         ; 0x1d86e $D85E B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d870 $D860 29 04                   ; keep bits .... .x..
beq      LD867                         ; 0x1d872 $D862 F0 03                   ;
jmp      bank7_Floor_Y_Position        ; 0x1d874 $D864 4C C1 DA                ; Floor Enemy Y Position
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD867                                                                          ;
lda      $057E,x                       ; 0x1d877 $D867 BD 7E 05                ; Enemy Y Velocity
bne      LD885                         ; 0x1d87a $D86A D0 19                   ;
bank7_shoot_rock                                                               ;
lda      $60,x                         ; 0x1d87c $D86C B5 60                   ;; Enemy facing direction
pha                                    ; 0x1d87e $D86E 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d87f $D86F 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1d882 $D872 68                      ;
sta      $60,x                         ; 0x1d883 $D873 95 60                   ;; Enemy facing direction
iny                                    ; 0x1d885 $D875 C8                      ;
tya                                    ; 0x1d886 $D876 98                      ;
cmp      $60,x                         ; 0x1d887 $D877 D5 60                   ;; Enemy facing direction
bne      LD885                         ; 0x1d889 $D879 D0 0A                   ;
jsr      bank7_Spawn_New_Projectile    ; 0x1d88b $D87B 20 CE DB                ; Spawn New Projectile
bcs      LD885                         ; 0x1d88e $D87E B0 05                   ;
lda      #$03                          ; 0x1d890 $D880 A9 03                   ; A = 03
sta      $87,y                         ; 0x1d892 $D882 99 87 00                ; generate projectile type 3 (Octorok rock)
LD885                                                                          ;
rts                                    ; 0x1d895 $D885 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Octorok_X_Velocity                                             ;
.byt    $08,$F8                        ; 0x1d896 $D886 08 F8                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Octorok                                                  ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d898 $D888 20 02 DA                ; Enemy Stops when Hit
jsr      LD848                         ; 0x1d89b $D88B 20 48 D8                ;
lda      $A8,x                         ; 0x1d89e $D88E B5 A8                   ;; Enemy State
and      #$03                          ; 0x1d8a0 $D890 29 03                   ; keep bits .... ..xx
beq      LD897                         ; 0x1d8a2 $D892 F0 03                   ;
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0x1d8a4 $D894 20 EB E8; Wall Hit Collision Test
LD897                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d8a7 $D897 20 B8 DE              ; Simple Horizontal Movement
lda      $AF,x                         ; 0x1d8aa $D89A B5 AF                   ;; Various enemy state variables
asl                                    ; 0x1d8ac $D89C 0A                      ;
cmp      #$80                          ; 0x1d8ad $D89D C9 80                   ;
bne      LD8A9                         ; 0x1d8af $D89F D0 08                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d8b1 $D8A1 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_Octorok_X_Velocity,y; 0x1d8b4 $D8A4 B9 86 D8          ;
sta      $71,x                         ; 0x1d8b7 $D8A7 95 71                   ; Enemy X Velocity
LD8A9                                                                          ;
lda      $0504,x                       ; 0x1d8b9 $D8A9 BD 04 05                ;; Timer for Enemy
bne      LD8BE                         ; 0x1d8bc $D8AC D0 10                   ;
lda      $051B,x                       ; 0x1d8be $D8AE BD 1B 05                ; Randomizer
and      #$7F                          ; 0x1d8c1 $D8B1 29 7F                   ; keep bits .xxx xxxx
ora      #$80                          ; 0x1d8c3 $D8B3 09 80                   ; set  bits x... ....
sta      $0504,x                       ; 0x1d8c5 $D8B5 9D 04 05                ; random 80-FF (delay before shooting rock)
lda      $A8,x                         ; 0x1d8c8 $D8B8 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d8ca $D8BA 29 04                   ; keep bits .... .x..
bne      bank7_shoot_rock              ; 0x1d8cc $D8BC D0 AE                   ;
LD8BE                                                                          ;
rts                                    ; 0x1d8ce $D8BE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Elevator_Y_Velocity                                            ;
.byt    $00,$18,$E8                    ; 0x1d8cf $D8BF 00 18 E8                ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Elevator                                                 ;
lda      $A8,x                         ; 0x1d8d2 $D8C2 B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d8d4 $D8C4 29 10                   ; keep bits ...x ....
beq      LD91B                         ; 0x1d8d6 $D8C6 F0 53                   ;
sta      $0754                         ; 0x1d8d8 $D8C8 8D 54 07                ;;in_elevator (boolean)
lda      #$00                          ; 0x1d8db $D8CB A9 00                   ; A = 00
sta      $0479                         ; 0x1d8dd $D8CD 8D 79 04                ; Link is in mid-air ?
sta      $057D                         ; 0x1d8e0 $D8D0 8D 7D 05                ;;vspeed (Link's vertical velocity, negative is up.); Link's Y Velocity; Player Y Delta; Link's Y Velocity
lda      $0743                         ; 0x1d8e3 $D8D3 AD 43 07                ; Up/Down Buttons Held
lsr                                    ; 0x1d8e6 $D8D6 4A                      ;
lsr                                    ; 0x1d8e7 $D8D7 4A                      ;
tay                                    ; 0x1d8e8 $D8D8 A8                      ;
lda      bank7_Table_for_Elevator_Y_Velocity,y; 0x1d8e9 $D8D9 B9 BF D8         ;
sta      $057E,x                       ; 0x1d8ec $D8DC 9D 7E 05                ; Enemy Y Velocity
lda      $0743                         ; 0x1d8ef $D8DF AD 43 07                ;; Controller 1 Input; Up/Down Buttons Held		;elevator was moving up or down: 8=up, 4=down
beq      LD8F4                         ; 0x1d8f2 $D8E2 F0 10                   ;
lda      $A7                           ; 0x1d8f4 $D8E4 A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$0C                          ; 0x1d8f6 $D8E6 29 0C                   ; keep bits .... xx..
eor      $0743                         ; 0x1d8f8 $D8E8 4D 43 07                ; Up/Down Buttons Held
beq      LD8FB                         ; 0x1d8fb $D8EB F0 0E                   ;
lda      #$20                          ; 0x1d8fd $D8ED A9 20                   ; A = 20
sta      $EF                           ; 0x1d8ff $D8EF 85 EF                   ; Sound Effects Type 4
jsr      bank7_Simple_Vertical_Movement; 0x1d901 $D8F1 20 C8 DE                ;
LD8F4                                                                          ;
lda      $2A,x                         ; 0x1d904 $D8F4 B5 2A                   ; Enemy Y position
clc                                    ; 0x1d906 $D8F6 18                      ;
adc      #$08                          ; 0x1d907 $D8F7 69 08                   ;
sta      $29                           ; 0x1d909 $D8F9 85 29                   ; Link's Y position
LD8FB                                                                          ;
lda      $2A,x                         ; 0x1d90b $D8FB B5 2A                   ; Enemy Y position
cmp      #$D8                          ; 0x1d90d $D8FD C9 D8                   ;
;BCS when going down to new floor below while on elevator                      ;
bcc      LD91B                         ; 0x1d90f $D8FF 90 1A                   ;
lda      #$70                          ; 0x1d911 $D901 A9 70                   ; A = 70
sta      $4D                           ; 0x1d913 $D903 85 4D                   ; Link's X position (low byte)
lda      #$06                          ; 0x1d915 $D905 A9 06                   ; A = 06
sta      $0735                         ; 0x1d917 $D907 8D 35 07                ;
lda      #$0B                          ; 0x1d91a $D90A A9 0B                   ; A = 0B
sta      $0734                         ; 0x1d91c $D90C 8D 34 07                ;
lda      #$00                          ; 0x1d91f $D90F A9 00                   ; A = 00
sta      $FD                           ; 0x1d921 $D911 85 FD                   ;
sta      $072C                         ; 0x1d923 $D913 8D 2C 07                ; Scrolling Offset Low Byte
lda      #$13                          ; 0x1d926 $D916 A9 13                   ; A = 13
jmp      LE187                         ; 0x1d928 $D918 4C 87 E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD91B                                                                          ;
jmp      LDE40                         ; 0x1d92b $D91B 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Fairy                                                    ;
lda      $C9                           ; 0x1d92e $D91E A5 C9                   ;
and      #$08                          ; 0x1d930 $D920 29 08                   ; keep bits .... x...
bne      LD931                         ; 0x1d932 $D922 D0 0D                   ;
lda      $81,x                         ; 0x1d934 $D924 B5 81                   ;; Current Animation Frame for Enemys
ora      $07FE                         ; 0x1d936 $D926 0D FE 07                ;
bne      LD931                         ; 0x1d939 $D929 D0 06                   ;
lda      #$C0                          ; 0x1d93b $D92B A9 C0                   ; A = C0
sta      $EC                           ; 0x1d93d $D92D 85 EC                   ; Sound Effects Type 1
inc      $81,x                         ; 0x1d93f $D92F F6 81                   ;; Current Animation Frame for Enemys
LD931                                                                          ;
jsr      LDE40                         ; 0x1d941 $D931 20 40 DE                ;
ldy      $AF,x                         ; 0x1d944 $D934 B4 AF                   ;; Various enemy state variables
bne      LD947                         ; 0x1d946 $D936 D0 0F                   ;
lda      $A8,x                         ; 0x1d948 $D938 B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d94a $D93A 29 10                   ; keep bits ...x ....
beq      LD946                         ; 0x1d94c $D93C F0 08                   ;
inc      $AF,x                         ; 0x1d94e $D93E F6 AF                   ;; Various enemy state variables
inc      $DE                           ; 0x1d950 $D940 E6 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
dey                                    ; 0x1d952 $D942 88                      ;
sty      $070D                         ; 0x1d953 $D943 8C 0D 07                ; Life to be added to Life Meter
LD946                                                                          ;
rts                                    ; 0x1d956 $D946 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD947                                                                          ;
lda      $074B                         ; 0x1d957 $D947 AD 4B 07                ; Spell Flash Counter
ora      #$10                          ; 0x1d95a $D94A 09 10                   ; set bits ...x ....
sta      $074B                         ; 0x1d95c $D94C 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      $070D                         ; 0x1d95f $D94F AD 0D 07                ; Life to be added to Life Meter
bne      LD946                         ; 0x1d962 $D952 D0 F2                   ;
sta      $DE                           ; 0x1d964 $D954 85 DE                   ; Spell Spell modifier
jmp      bank7_remove_enemy_or_item    ; 0x1d966 $D956 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Red_Jar                                                  ;
jsr      LDE3D                         ; 0x1d969 $D959 20 3D DE                ; Display
lda      $A8,x                         ; 0x1d96c $D95C B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d96e $D95E 29 04                   ; keep bits .... .x..
beq      LD98B                         ; 0x1d970 $D960 F0 29                   ;
lda      $2A,x                         ; 0x1d972 $D962 B5 2A                   ; Enemy Y position
and      #$F0                          ; 0x1d974 $D964 29 F0                   ; keep bits xxxx ....
sta      $2A,x                         ; 0x1d976 $D966 95 2A                   ;; Enemy Y Position
lda      $AF,x                         ; 0x1d978 $D968 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1d97a $D96A 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1d97c $D96C A8                      ;
lda      #$FF                          ; 0x1d97d $D96D A9 FF                   ; A = FF
cpy      #$0A                          ; 0x1d97f $D96F C0 0A                   ;
bcc      LD977                         ; 0x1d981 $D971 90 04                   ;
cpy      #$0E                          ; 0x1d983 $D973 C0 0E                   ;
bcc      LD988                         ; 0x1d985 $D975 90 11                   ;
LD977                                                                          ;
ldy      $057E,x                       ; 0x1d987 $D977 BC 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
cpy      #$0E                          ; 0x1d98a $D97A C0 0E                   ;
bcc      LD988                         ; 0x1d98c $D97C 90 0A                   ;
dec      $2A,x                         ; 0x1d98e $D97E D6 2A                   ;; Enemy Y Position
lda      #$F7                          ; 0x1d990 $D980 A9 F7                   ; A = F7
cpy      #$30                          ; 0x1d992 $D982 C0 30                   ;
bcc      LD988                         ; 0x1d994 $D984 90 02                   ;
lda      #$F0                          ; 0x1d996 $D986 A9 F0                   ; A = F0
LD988                                                                          ;
sta      $057E,x                       ; 0x1d998 $D988 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
LD98B                                                                          ;
inc      $057E,x                       ; 0x1d99b $D98B FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jmp      bank7_Simple_Vertical_Movement; 0x1d99e $D98E 4C C8 DE                ; Simple Vertical Movement
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Locked_Door                                              ;
jsr      LDE40                         ; 0x1d9a1 $D991 20 40 DE                ;
ldy      $AF,x                         ; 0x1d9a4 $D994 B4 AF                   ;; Various enemy state variables
beq      bank7_link_door_collision_maybe; 0x1d9a6 $D996 F0 22                  ;
inc      $AF,x                         ; 0x1d9a8 $D998 F6 AF                   ;; Various enemy state variables
cpy      #$11                          ; 0x1d9aa $D99A C0 11                   ;
bne      LD9FD                         ; 0x1d9ac $D99C D0 5F                   ;
lda      #$F0                          ; 0x1d9ae $D99E A9 F0                   ; A = F0
sta      $87                           ; 0x1d9b0 $D9A0 85 87                   ; Projectile Type
lda      $4E,x                         ; 0x1d9b2 $D9A2 B5 4E                   ; Enemy X position (low byte)
sta      $54                           ; 0x1d9b4 $D9A4 85 54                   ; Projectile X Position (low byte)
lda      $3C,x                         ; 0x1d9b6 $D9A6 B5 3C                   ; Enemy X position (high byte)
sta      $42                           ; 0x1d9b8 $D9A8 85 42                   ; Projectile X Position (high byte)
lda      #$AC                          ; 0x1d9ba $D9AA A9 AC                   ; A = AC
sta      $30                           ; 0x1d9bc $D9AC 85 30                   ; Projectile Y Position
lda      #$01                          ; 0x1d9be $D9AE A9 01                   ; A = 01
sta      $20                           ; 0x1d9c0 $D9B0 85 20                   ; Enemy Condition
sta      $EF                           ; 0x1d9c2 $D9B2 85 EF                   ; Sound Effects Type 4
lsr                                    ; 0x1d9c4 $D9B4 4A                      ;
sta      $DE                           ; 0x1d9c5 $D9B5 85 DE                   ; Spell Spell modifier
jmp      bank7_remove_enemy_or_item    ; 0x1d9c7 $D9B7 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_link_door_collision_maybe                                                ;
lda      $A8,x                         ; 0x1d9ca $D9BA B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d9cc $D9BC 29 10                   ; keep bits ...x ....
sta      $05E7                         ; 0x1d9ce $D9BE 8D E7 05                ;
beq      LD9FD                         ; 0x1d9d1 $D9C1 F0 3A                   ;
lda      $13                           ; 0x1d9d3 $D9C3 A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      LD9D0                         ; 0x1d9d5 $D9C5 D0 09                   ;
lda      #$00                          ; 0x1d9d7 $D9C7 A9 00                   ; A = 00
sta      $05                           ; 0x1d9d9 $D9C9 85 05                   ;
sta      $0B                           ; 0x1d9db $D9CB 85 0B                   ;
jsr      bank7_code37                  ; 0x1d9dd $D9CD 20 71 E3                ;
LD9D0                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d9e0 $D9D0 20 91 DC; Determine Enemy Facing Direction
iny                                    ; 0x1d9e3 $D9D3 C8                      ;
tya                                    ; 0x1d9e4 $D9D4 98                      ;
eor      #$03                          ; 0x1d9e5 $D9D5 49 03                   ; flip bits .... ..xx
sta      $05E7                         ; 0x1d9e7 $D9D7 8D E7 05                ;
lda      $078C                         ; 0x1d9ea $D9DA AD 8C 07                ; Have Magic Key
bne      LD9E7                         ; 0x1d9ed $D9DD D0 08                   ;
lda      $0793                         ; 0x1d9ef $D9DF AD 93 07                ; Current number of keys
beq      LD9FD                         ; 0x1d9f2 $D9E2 F0 19                   ;
dec      $0793                         ; 0x1d9f4 $D9E4 CE 93 07                ;; Keys (00-09); Current number of Keys
LD9E7                                                                          ;
lda      $3C,x                         ; 0x1d9f7 $D9E7 B5 3C                   ;; Enemy X Position (high byte)
tax                                    ; 0x1d9f9 $D9E9 AA                      ;
jsr      Set_Item_RAM_bit_to_0__Bits_0_3; 0x1d9fa $D9EA 20 95 C2               ;
ldx      $10                           ; 0x1d9fd $D9ED A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$80                          ; 0x1d9ff $D9EF A9 80                   ; A = 80
sta      $EC                           ; 0x1da01 $D9F1 85 EC                   ; Sound Effects Type 1
sta      $DE                           ; 0x1da03 $D9F3 85 DE                   ; Spell Spell modifier
asl                                    ; 0x1da05 $D9F5 0A                      ; A >> 0
sta      $70                           ; 0x1da06 $D9F6 85 70                   ; Link's X Velocity
sta      $057D                         ; 0x1da08 $D9F8 8D 7D 05                ; Link's Y Velocity
inc      $AF,x                         ; 0x1da0b $D9FB F6 AF                   ;; Various enemy state variables
LD9FD                                                                          ;
rts                                    ; 0x1da0d $D9FD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bot                                                            ;
.byt    $10,$F0                        ; 0x1da0e $D9FE 10 F0                   ;10 = X velocity while jumping, facing right	;F0 = X velocity while jumping, facing left
LDA00                                                                          ;
.byt    $C0,$40                        ; 0x1da10 $DA00 C0 40                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Stops_when_Hit                                                     ;
lda      $040E,x                       ; 0x1da12 $DA02 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LD9FD                         ; 0x1da15 $DA05 F0 F6                   ; if 0, return...
pla                                    ; 0x1da17 $DA07 68                      ;
pla                                    ; 0x1da18 $DA08 68                      ;
jmp      LDE40                         ; 0x1da19 $DA09 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bot                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da1c $DA0C 20 02 DA                ; Enemy Stops when Hit
lda      $A8,x                         ; 0x1da1f $DA0F B5 A8                   ; Enemy state ?
and      #$04                          ; 0x1da21 $DA11 29 04                   ;;Keep Bits:0000_0100
beq      LDA28                         ; 0x1da23 $DA13 F0 13                   ;
lda      $051B,x                       ; 0x1da25 $DA15 BD 1B 05                ; Randomizer
asl                                    ; 0x1da28 $DA18 0A                      ; 1 : 128
bne      LDA28                         ; 0x1da29 $DA19 D0 0D                   ;
lda      #$E5                          ; 0x1da2b $DA1B A9 E5                   ; Bot's initial Y velocity when jumping
sta      $057E,x                       ; 0x1da2d $DA1D 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1da30 $DA20 20 91 DC; Determine Enemy Facing Direction; Determine Enemy Facing Direction
lda      bank7_Table_for_Bot,y         ; 0x1da33 $DA23 B9 FE D9                ; refer to table at $1D9FE
sta      $71,x                         ; 0x1da36 $DA26 95 71                   ;; Enemy X Velocity
LDA28                                                                          ;
jmp      bank7_Enemy_Routines1_Myu     ; 0x1da38 $DA28 4C 47 DA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bit                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da3b $DA2B 20 02 DA                ; Enemy Stops when Hit
txa                                    ; 0x1da3e $DA2E 8A                      ;
asl                                    ; 0x1da3f $DA2F 0A                      ;
asl                                    ; 0x1da40 $DA30 0A                      ;
asl                                    ; 0x1da41 $DA31 0A                      ;
asl                                    ; 0x1da42 $DA32 0A                      ;
asl                                    ; 0x1da43 $DA33 0A                      ;
ora      $12                           ; 0x1da44 $DA34 05 12                   ;; Frame Counter (ascending)
cmp      #$C0                          ; 0x1da46 $DA36 C9 C0                   ; affects Bit's movement (slow vs fast)
bcc      bank7_Enemy_Routines1_Myu     ; 0x1da48 $DA38 90 0D                   ;
lda      #$40                          ; 0x1da4a $DA3A A9 40                   ; Bit/Bot fast movement, facing right
sta      $05DA                         ; 0x1da4c $DA3C 8D DA 05                ;
lda      #$C0                          ; 0x1da4f $DA3F A9 C0                   ; Bit/Bot fast movement, facing left
sta      $05DB                         ; 0x1da51 $DA41 8D DB 05                ;
jmp      LDA54                         ; 0x1da54 $DA44 4C 54 DA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Myu                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da57 $DA47 20 02 DA                ; Enemy Stops when Hit
lda      #$20                          ; 0x1da5a $DA4A A9 20                   ; Bit/Bot slow movement, facing right
sta      $05DA                         ; 0x1da5c $DA4C 8D DA 05                ;
lda      #$E0                          ; 0x1da5f $DA4F A9 E0                   ; Bit/Bot slow movement, facing left
sta      $05DB                         ; 0x1da61 $DA51 8D DB 05                ;
LDA54                                                                          ;
jsr      bank7_Gravity                 ; 0x1da64 $DA54 20 BE DE                ; Gravity
jsr      LDE3D                         ; 0x1da67 $DA57 20 3D DE                ; Display
jsr      bank7_Link_Collision_Detection; 0x1da6a $DA5A 20 C1 D6                ; Link Collision Detection
lda      $2A,x                         ; 0x1da6d $DA5D B5 2A                   ; Enemy Y Position
cmp      #$60                          ; 0x1da6f $DA5F C9 60                   ;
bcc      LDA69                         ; 0x1da71 $DA61 90 06                   ;
lda      $A8,x                         ; 0x1da73 $DA63 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1da75 $DA65 29 04                   ; keep bits .... .x..
bne      LDA72                         ; 0x1da77 $DA67 D0 09                   ;
LDA69                                                                          ;
lda      $A8,x                         ; 0x1da79 $DA69 B5 A8                   ;; Enemy State
and      #$03                          ; 0x1da7b $DA6B 29 03                   ; keep bits .... ..xx
bne      LDAC0                         ; 0x1da7d $DA6D D0 51                   ;
jmp      bank7_Simple_Horizontal_Movement; 0x1da7f $DA6F 4C B8 DE              ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDA72                                                                          ;
jsr      bank7_Floor_Y_Position        ; 0x1da82 $DA72 20 C1 DA                ; Floor Enemy Y Position
lda      $AF,x                         ; 0x1da85 $DA75 B5 AF                   ;; Various enemy state variables
beq      LDA7D                         ; 0x1da87 $DA77 F0 04                   ;
sta      $81,x                         ; 0x1da89 $DA79 95 81                   ;; Current Animation Frame for Enemys
bne      LDAA4                         ; 0x1da8b $DA7B D0 27                   ;
LDA7D                                                                          ;
lda      $0444,x                       ; 0x1da8d $DA7D BD 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
pha                                    ; 0x1da90 $DA80 48                      ;
and      #$0C                          ; 0x1da91 $DA81 29 0C                   ; keep bits ... xx..
sta      $81,x                         ; 0x1da93 $DA83 95 81                   ;; Current Animation Frame for Enemys
inc      $0444,x                       ; 0x1da95 $DA85 FE 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
pla                                    ; 0x1da98 $DA88 68                      ;
and      #$0F                          ; 0x1da99 $DA89 29 0F                   ; keep bits .... xxxx
cmp      #$0F                          ; 0x1da9b $DA8B C9 0F                   ; delay for pause between slides
beq      LDA93                         ; 0x1da9d $DA8D F0 04                   ; (affects Myu also)
cmp      #$03                          ; 0x1da9f $DA8F C9 03                   ;
bne      LDAA4                         ; 0x1daa1 $DA91 D0 11                   ;
LDA93                                                                          ;
ldy      $0401,x                       ; 0x1daa3 $DA93 BC 01 04                ;
lda      $05DA,y                       ; 0x1daa6 $DA96 B9 DA 05                ;
sta      $71,x                         ; 0x1daa9 $DA99 95 71                   ;; Enemy X Velocity
lda      $A8,x                         ; 0x1daab $DA9B B5 A8                   ;; Enemy State
and      #$03                          ; 0x1daad $DA9D 29 03                   ; keep bits .... ..xx
bne      LDAA4                         ; 0x1daaf $DA9F D0 03                   ;
jsr      bank7_Simple_Horizontal_Movement; 0x1dab1 $DAA1 20 B8 DE              ; Simple Horizontal Movement
LDAA4                                                                          ;
lda      $0504,x                       ; 0x1dab4 $DAA4 BD 04 05                ;; Timer for Enemy
bne      LDAC0                         ; 0x1dab7 $DAA7 D0 17                   ;
lda      $AF,x                         ; 0x1dab9 $DAA9 B5 AF                   ;; Various enemy state variables
eor      #$01                          ; 0x1dabb $DAAB 49 01                   ; flip bits .... ...x
sta      $AF,x                         ; 0x1dabd $DAAD 95 AF                   ;; Various enemy state variables
tay                                    ; 0x1dabf $DAAF A8                      ;
lda      $051B,x                       ; 0x1dac0 $DAB0 BD 1B 05                ; Randomizer
and      #$3F                          ; 0x1dac3 $DAB3 29 3F                   ; keep bits ..xx xxxx
ora      LDA00,y                       ; 0x1dac5 $DAB5 19 00 DA                ; refer to table at $1D9FE (offset +2)
sta      $0504,x                       ; 0x1dac8 $DAB8 9D 04 05                ;; Timer for Enemy
and      #$01                          ; 0x1dacb $DABB 29 01                   ; keep bits .... ...x
sta      $0401,x                       ; 0x1dacd $DABD 9D 01 04                ;
LDAC0                                                                          ;
rts                                    ; 0x1dad0 $DAC0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Floor_Y_Position                                                         ;
;Floor Enemy Y Position to multiple of 0x10                                    ;
lda      $2A,x                         ; 0x1dad1 $DAC1 B5 2A                   ; Enemy Y Position
and      #$F0                          ; 0x1dad3 $DAC3 29 F0                   ; keep bits xxxx ....
sta      $2A,x                         ; 0x1dad5 $DAC5 95 2A                   ;; Enemy Y Position
;Set Enemy Y Velocity to 0                                                     ;
LDAC7                                                                          ;
lda      #$00                          ; 0x1dad7 $DAC7 A9 00                   ; A = 00
sta      $057E,x                       ; 0x1dad9 $DAC9 9D 7E 05                ; Enemy Y Velocity
rts                                    ; 0x1dadc $DACC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_for_Moa                                                            ;
.byt    $08,$F8                        ; 0x1dadd $DACD 08 F8                   ;08 = Moa's Y velocity when going down	;F8 = Moa's Y velocity when going up
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Moa                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1dadf $DACF 20 02 DA                ; Enemy Stops when Hit
jsr      LDE54                         ; 0x1dae2 $DAD2 20 54 DE                ;
lda      $0706                         ; 0x1dae5 $DAD5 AD 06 07                ; Current Region
cmp      #$02                          ; 0x1dae8 $DAD8 C9 02                   ; check if Region is 02 (East Hyrule)
bne      LDAE1                         ; 0x1daea $DADA D0 05                   ;
lda      $078A                         ; 0x1daec $DADC AD 8A 07                ; Have Cross ?
beq      LDAE4                         ; 0x1daef $DADF F0 03                   ; if NOT, skip display routine
LDAE1                                                                          ;
jsr      bank7_Display                 ; 0x1daf1 $DAE1 20 11 EF                ; Display
LDAE4                                                                          ;
jsr      bank7_Link_Collision_Detection; 0x1daf4 $DAE4 20 C1 D6                ; Link Collision Detection
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1daf7 $DAE7 20 91 DC; Determine Enemy Facing Direction
lda      $71,x                         ; 0x1dafa $DAEA B5 71                   ; Enemy X Velocity
pha                                    ; 0x1dafc $DAEC 48                      ;
adc      $70                           ; 0x1dafd $DAED 65 70                   ; Link's X Velocity
adc      bank7_table_for_Moa,y         ; 0x1daff $DAEF 79 CD DA                ;
sta      $71,x                         ; 0x1db02 $DAF2 95 71                   ;; Enemy X Velocity
jsr      bank7_Simple_Horizontal_Movement; 0x1db04 $DAF4 20 B8 DE              ; Simple Horizontal Movement
pla                                    ; 0x1db07 $DAF7 68                      ;
sta      $71,x                         ; 0x1db08 $DAF8 95 71                   ;; Enemy X Velocity
ldy      #$02                          ; 0x1db0a $DAFA A0 02                   ; Y = 02
asl                                    ; 0x1db0c $DAFC 0A                      ;
bcs      LDB00                         ; 0x1db0d $DAFD B0 01                   ;
dey                                    ; 0x1db0f $DAFF 88                      ;
LDB00                                                                          ;
sty      $60,x                         ; 0x1db10 $DB00 94 60                   ;; Enemy facing direction
lda      $AF,x                         ; 0x1db12 $DB02 B5 AF                   ;; Various enemy state variables
bne      LDB2D                         ; 0x1db14 $DB04 D0 27                   ;
lda      $0504,x                       ; 0x1db16 $DB06 BD 04 05                ;; Timer for Enemy
bne      LDB2C                         ; 0x1db19 $DB09 D0 21                   ;
inc      $AF,x                         ; 0x1db1b $DB0B F6 AF                   ;; Various enemy state variables
lda      $051B,x                       ; 0x1db1d $DB0D BD 1B 05                ; Randomizer
and      #$01                          ; 0x1db20 $DB10 29 01                   ; keep bits .... ...x
tay                                    ; 0x1db22 $DB12 A8                      ;
lda      $2A,x                         ; 0x1db23 $DB13 B5 2A                   ; Enemy Y Position
cmp      #$40                          ; 0x1db25 $DB15 C9 40                   ;
bcs      LDB1B                         ; 0x1db27 $DB17 B0 02                   ;
ldy      #$00                          ; 0x1db29 $DB19 A0 00                   ; Y = 00 (Moa going down)
LDB1B                                                                          ;
cmp      #$C0                          ; 0x1db2b $DB1B C9 C0                   ;
bcc      LDB21                         ; 0x1db2d $DB1D 90 02                   ;
ldy      #$01                          ; 0x1db2f $DB1F A0 01                   ; Y = 01 (Moa going up)
LDB21                                                                          ;
lda      bank7_table_for_Moa,y         ; 0x1db31 $DB21 B9 CD DA                ;
sta      $057E,x                       ; 0x1db34 $DB24 9D 7E 05                ; Enemy Y Velocity
lda      $60,x                         ; 0x1db37 $DB27 B5 60                   ; Enemy facing direction
sta      $0401,x                       ; 0x1db39 $DB29 9D 01 04                ;
LDB2C                                                                          ;
rts                                    ; 0x1db3c $DB2C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDB2D                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x1db3d $DB2D 20 C8 DE                ; Simple Vertical Movement
ldy      $0401,x                       ; 0x1db40 $DB30 BC 01 04                ;
dey                                    ; 0x1db43 $DB33 88                      ;
beq      bank7_Related_to_Moa          ; 0x1db44 $DB34 F0 09                   ;
inc      $71,x                         ; 0x1db46 $DB36 F6 71                   ; * double the increase for more speed *
lda      $71,x                         ; 0x1db48 $DB38 B5 71                   ; Enemy X Velocity
cmp      #$20                          ; 0x1db4a $DB3A C9 20                   ; velocity for changing X direction (right)
beq      LDB47                         ; 0x1db4c $DB3C F0 09                   ;
rts                                    ; 0x1db4e $DB3E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Moa                                                           ;
dec      $71,x                         ; 0x1db4f $DB3F D6 71                   ; * double the decrease for more speed *
lda      $71,x                         ; 0x1db51 $DB41 B5 71                   ; Enemy X Velocity
cmp      #$E0                          ; 0x1db53 $DB43 C9 E0                   ; velocity for changing X direction (left)
bne      LDB4E                         ; 0x1db55 $DB45 D0 07                   ;
LDB47                                                                          ;
dec      $AF,x                         ; 0x1db57 $DB47 D6 AF                   ;; Various enemy state variables
lda      #$20                          ; 0x1db59 $DB49 A9 20                   ; A = 20
sta      $0504,x                       ; 0x1db5b $DB4B 9D 04 05                ;; Timer for Enemy
LDB4E                                                                          ;
rts                                    ; 0x1db5e $DB4E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Ache_Acheman_and_many_others                                   ;
;38 C8 = good speed for challenge                                              ;
;                                                                              ;
;F8 = X Velocity, flying left                                                  ;
;08 = X Velocity, flying right                                                 ;
;20 = X Velocity of Flame, facing right                                        ;
;E0 = X Velocity of Flame, facing left                                         ;
.byt    $F8                            ; 0x1db5f $DB4F F8                      ;
LDB50                                                                          ;
.byt    $08,$20,$E0                    ; 0x1db60 $DB50 08 20 E0                ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Ache_and_Acheman                                         ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1db63 $DB53 20 02 DA                ; Enemy Stops when Hit
lda      $A1,x                         ; 0x1db66 $DB56 B5 A1                   ; Enemy Code
cmp      #$0A                          ; 0x1db68 $DB58 C9 0A                   ; 0A = Acheman
bne      bank7_Ache                    ; 0x1db6a $DB5A D0 1D                   ;
lda      $AF,x                         ; 0x1db6c $DB5C B5 AF                   ;; Various enemy state variables
beq      bank7_Ache                    ; 0x1db6e $DB5E F0 19                   ;
dec      $AF,x                         ; 0x1db70 $DB60 D6 AF                   ;; Various enemy state variables
cmp      #$18                          ; 0x1db72 $DB62 C9 18                   ; delay before flying back
bne      bank7_Go_on___                ; 0x1db74 $DB64 D0 0D                   ;
bank7_Spawn_Flame                                                              ;
jsr      bank7_Spawn_New_Projectile    ; 0x1db76 $DB66 20 CE DB                ; Spawn New Projectile
bcs      bank7_Go_on___                ; 0x1db79 $DB69 B0 08                   ; Carry Set = max number of projectiles reached
lda      $30,y                         ; 0x1db7b $DB6B B9 30 00                ; Projectile Y Position
adc      #$02                          ; 0x1db7e $DB6E 69 02                   ; 02 = relative Y position of Flame
sta      $30,y                         ; 0x1db80 $DB70 99 30 00                ; ** can be randomized! 02 or 12 **
bank7_Go_on___                                                                 ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1db83 $DB73 20 91 DC; Determine Enemy Facing Direction
jmp      LDBC8                         ; 0x1db86 $DB76 4C C8 DB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Ache                                                                     ;
lda      $81,x                         ; 0x1db89 $DB79 B5 81                   ;; Current Animation Frame for Enemys
bne      LDBA8                         ; 0x1db8b $DB7B D0 2B                   ;
ldy      $3C,x                         ; 0x1db8d $DB7D B4 3C                   ;; Enemy X Position (high byte)
dey                                    ; 0x1db8f $DB7F 88                      ;
cpy      #$02                          ; 0x1db90 $DB80 C0 02                   ;
bcc      bank7_Ache_Acheman1           ; 0x1db92 $DB82 90 07                   ;
tya                                    ; 0x1db94 $DB84 98                      ;
and      #$01                          ; 0x1db95 $DB85 29 01                   ; keep bits .... ...x
tay                                    ; 0x1db97 $DB87 A8                      ;
jmp      LDB9C                         ; 0x1db98 $DB88 4C 9C DB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Ache_Acheman1                                                            ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1db9b $DB8B 20 91 DC; Determine Enemy Facing Direction
lda      $0F                           ; 0x1db9e $DB8E A5 0F                   ;
adc      #$20                          ; 0x1dba0 $DB90 69 20                   ; 30 and 60 work, reaction distance increased
cmp      #$40                          ; 0x1dba2 $DB92 C9 40                   ; 40 and 80 work, too
bcs      LDBC8                         ; 0x1dba4 $DB94 B0 32                   ;
lda      $051B,x                       ; 0x1dba6 $DB96 BD 1B 05                ; Randomizer
and      #$01                          ; 0x1dba9 $DB99 29 01                   ; keep bits .... ...x
tay                                    ; 0x1dbab $DB9B A8                      ; fly down direction (random 0-1)
LDB9C                                                                          ;
lda      bank7_Table_for_Ache_Acheman_and_many_others,y; 0x1dbac $DB9C B9 4F DB;
sta      $71,x                         ; 0x1dbaf $DB9F 95 71                   ; Enemy X Velocity
inc      $81,x                         ; 0x1dbb1 $DBA1 F6 81                   ; Current Animation Frame for Enemy
lda      #$40                          ; 0x1dbb3 $DBA3 A9 40                   ; A = 40; A = 5C
sta      $057E,x                       ; 0x1dbb5 $DBA5 9D 7E 05                ; initial Y velocity for Ache/Acheman
LDBA8                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1dbb8 $DBA8 20 B8 DE              ; Simple Horizontal Movement
dec      $057E,x                       ; 0x1dbbb $DBAB DE 7E 05                ; Enemy Y Velocity
bne      LDBB4                         ; 0x1dbbe $DBAE D0 04                   ;
lda      #$30                          ; 0x1dbc0 $DBB0 A9 30                   ; A = 30
sta      $AF,x                         ; 0x1dbc2 $DBB2 95 AF                   ; delay for Acheman in dragon form
LDBB4                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x1dbc4 $DBB4 20 C8 DE                ; Simple Vertical Movement
lda      $2A,x                         ; 0x1dbc7 $DBB7 B5 2A                   ; Enemy Y Position
cmp      #$30                          ; 0x1dbc9 $DBB9 C9 30                   ;
bcs      LDBC8                         ; 0x1dbcb $DBBB B0 0B                   ;
lda      #$30                          ; 0x1dbcd $DBBD A9 30                   ; A = 30
sta      $2A,x                         ; 0x1dbcf $DBBF 95 2A                   ; Enemy Y Position
lda      #$00                          ; 0x1dbd1 $DBC1 A9 00                   ; A = 00
sta      $057E,x                       ; 0x1dbd3 $DBC3 9D 7E 05                ; Enemy Y Velocity
sta      $81,x                         ; 0x1dbd6 $DBC6 95 81                   ; Current Animation Frame for Enemy
LDBC8                                                                          ;
jsr      LDE40                         ; 0x1dbd8 $DBC8 20 40 DE                ;
jmp      bank7_Link_Collision_Detection; 0x1dbdb $DBCB 4C C1 D6                ; Link Collision Detection
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Spawn_New_Projectile                                                     ;
ldy      #$05                          ; 0x1dbde $DBCE A0 05                   ; Y = 05
jsr      LDBFD                         ; 0x1dbe0 $DBD0 20 FD DB                ;
bcs      LDBF8                         ; 0x1dbe3 $DBD3 B0 23                   ; Carry Set = No Projectile Slot Available
lda      #$04                          ; 0x1dbe5 $DBD5 A9 04                   ; A = 04
sta      $87,y                         ; 0x1dbe7 $DBD7 99 87 00                ; Projectile Type (04 = Flame)
lda      $4E,x                         ; 0x1dbea $DBDA B5 4E                   ; Enemy X position (low byte)
sta      $54,y                         ; 0x1dbec $DBDC 99 54 00                ; Projectile X Position (low byte)
lda      $3C,x                         ; 0x1dbef $DBDF B5 3C                   ; Enemy X position (high byte)
sta      $42,y                         ; 0x1dbf1 $DBE1 99 42 00                ; Projectile X Position (high byte)
lda      $2A,x                         ; 0x1dbf4 $DBE4 B5 2A                   ; Enemy Y Position
sta      $30,y                         ; 0x1dbf6 $DBE6 99 30 00                ; Projectile Y Position
lda      $60,x                         ; 0x1dbf9 $DBE9 B5 60                   ; Enemy facing direction
sta      $66,y                         ; 0x1dbfb $DBEB 99 66 00                ; Projectile facing direction
tax                                    ; 0x1dbfe $DBEE AA                      ;
lda      LDB50,x                       ; 0x1dbff $DBEF BD 50 DB                ;
sta      $77,y                         ; 0x1dc02 $DBF2 99 77 00                ; Projectile X Velocity
ldx      $10                           ; 0x1dc05 $DBF5 A6 10                   ;; used as monster x register ;draw boss hp bar
clc                                    ; 0x1dc07 $DBF7 18                      ;
LDBF8                                                                          ;
rts                                    ; 0x1dc08 $DBF8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Generated_Rock_X_Velocity                                      ;
.byt    $10,$F0                        ; 0x1dc09 $DBF9 10 F0                   ;
; ---------------------------------------------------------------------------- ;
bank7_spawn_new_bubble_or_rock                                                 ;
ldy      #$03                          ; 0x1dc0b $DBFB A0 03                   ; Y = 03
LDBFD                                                                          ;
lda      $87,y                         ; 0x1dc0d $DBFD B9 87 00                ; Projectile Type
beq      bank7_Related_to_Desert_Rocks__Raising_Bubbles__projectiles__etc; 0x1dc10 $DC00 F0 05;
dey                                    ; 0x1dc12 $DC02 88                      ;
bpl      LDBFD                         ; 0x1dc13 $DC03 10 F8                   ;
sec                                    ; 0x1dc15 $DC05 38                      ;
rts                                    ; 0x1dc16 $DC06 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Desert_Rocks__Raising_Bubbles__projectiles__etc               ;
lda      #$01                          ; 0x1dc17 $DC07 A9 01                   ; A = 01
sta      $20,y                         ; 0x1dc19 $DC09 99 20 00                ;
sta      $66,y                         ; 0x1dc1c $DC0C 99 66 00                ;
lsr                                    ; 0x1dc1f $DC0F 4A                      ; A >> 00
sta      $0584,y                       ; 0x1dc20 $DC10 99 84 05                ;
clc                                    ; 0x1dc23 $DC13 18                      ;
rts                                    ; 0x1dc24 $DC14 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Raising_Bubbles                                          ;
inc      $AF,x                         ; 0x1dc25 $DC15 F6 AF                   ;; Various enemy state variables
lda      $AF,x                         ; 0x1dc27 $DC17 B5 AF                   ;; Various enemy state variables
and      #$1F                          ; 0x1dc29 $DC19 29 1F                   ; 1F = delay before next bubble appears
bne      LDC44                         ; 0x1dc2b $DC1B D0 27                   ;
jsr      bank7_spawn_new_bubble_or_rock; 0x1dc2d $DC1D 20 FB DB                ; spawn new bubble
bcs      LDC44                         ; 0x1dc30 $DC20 B0 22                   ; Carry Set = max number of bubbles reached
lda      #$02                          ; 0x1dc32 $DC22 A9 02                   ; 02 = bubble
sta      $87,y                         ; 0x1dc34 $DC24 99 87 00                ; projectile type
lda      $072C                         ; 0x1dc37 $DC27 AD 2C 07                ; Scrolling Offset Low Byte
adc      $051B,x                       ; 0x1dc3a $DC2A 7D 1B 05                ; Randomizer
and      #$F0                          ; 0x1dc3d $DC2D 29 F0                   ; keep bits xxxx ....
sta      $54,y                         ; 0x1dc3f $DC2F 99 54 00                ;
lda      $072A                         ; 0x1dc42 $DC32 AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1dc45 $DC35 69 00                   ;
sta      $42,y                         ; 0x1dc47 $DC37 99 42 00                ;
lda      #$E0                          ; 0x1dc4a $DC3A A9 E0                   ; A = E0
sta      $30,y                         ; 0x1dc4c $DC3C 99 30 00                ; Initial Y position
lda      #$E4                          ; 0x1dc4f $DC3F A9 E4                   ; A = E4
sta      $0584,y                       ; 0x1dc51 $DC41 99 84 05                ; Initial Y velocity
LDC44                                                                          ;
rts                                    ; 0x1dc54 $DC44 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Rocks_possible_X_Positions_                                    ;
.byt    $0C,$F4                        ; 0x1dc55 $DC45 0C F4                   ;
bank7_Table_for_Rocks_possible_Y_Positions_                                    ;
.byt    $03,$13,$F3,$E3,$D3,$C3,$03,$13; 0x1dc57 $DC47 03 13 F3 E3 D3 C3 03 13 ;
; ---------------------------------------------------------------------------- ;
bank7_Desert_Rocks_initialization_routine                                      ;
lda      $12                           ; 0x1dc5f $DC4F A5 12                   ;; Frame Counter (ascending)
and      #$1F                          ; 0x1dc61 $DC51 29 1F                   ; 1F = delay before next rock appears
bne      LDC90                         ; 0x1dc63 $DC53 D0 3B                   ;
jsr      bank7_spawn_new_bubble_or_rock; 0x1dc65 $DC55 20 FB DB                ; spawn new rock
bcs      LDC90                         ; 0x1dc68 $DC58 B0 36                   ;
lda      $051B,x                       ; 0x1dc6a $DC5A BD 1B 05                ; Randomizer
and      #$07                          ; 0x1dc6d $DC5D 29 07                   ; keep bits .... .xxx
tax                                    ; 0x1dc6f $DC5F AA                      ;
lda      $29                           ; 0x1dc70 $DC60 A5 29                   ; Link's Y Position
adc      bank7_Table_for_Rocks_possible_Y_Positions_,x; 0x1dc72 $DC62 7D 47 DC ;
sta      $30,y                         ; 0x1dc75 $DC65 99 30 00                ;
txa                                    ; 0x1dc78 $DC68 8A                      ;
and      #$01                          ; 0x1dc79 $DC69 29 01                   ; keep bits .... ...x
sta      $044C,y                       ; 0x1dc7b $DC6B 99 4C 04                ;
tax                                    ; 0x1dc7e $DC6E AA                      ;
lda      $072C                         ; 0x1dc7f $DC6F AD 2C 07                ;; Scrolling Offset Low Byte
adc      bank7_Table_for_Rocks_possible_X_Positions_,x; 0x1dc82 $DC72 7D 45 DC ;
sta      $54,y                         ; 0x1dc85 $DC75 99 54 00                ; Rock's X Position (low byte)
lda      $072A                         ; 0x1dc88 $DC78 AD 2A 07                ;;link Pagepos SideScroll		; Scrolling Offset High Byte
adc      #$00                          ; 0x1dc8b $DC7B 69 00                   ;
sta      $42,y                         ; 0x1dc8d $DC7D 99 42 00                ; Rock's X Position (high byte)
lda      bank7_Table_for_Generated_Rock_X_Velocity,x; 0x1dc90 $DC80 BD F9 DB   ;
sta      $77,y                         ; 0x1dc93 $DC83 99 77 00                ; Rock's X Velocity
inx                                    ; 0x1dc96 $DC86 E8                      ;
stx      $66,y                         ; 0x1dc97 $DC87 96 66                   ;
ldx      $10                           ; 0x1dc99 $DC89 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$01                          ; 0x1dc9b $DC8B A9 01                   ; A = 01
sta      $87,y                         ; 0x1dc9d $DC8D 99 87 00                ;
LDC90                                                                          ;
rts                                    ; 0x1dca0 $DC90 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Determine_Enemy_Facing_Direction_relative_to_Link                        ;
ldy      #$01                          ; 0x1dca1 $DC91 A0 01                   ; Y = 01
lda      $4D                           ; 0x1dca3 $DC93 A5 4D                   ; Link's Current X position (low byte)
adc      #$08                          ; 0x1dca5 $DC95 69 08                   ;
pha                                    ; 0x1dca7 $DC97 48                      ;
lda      $3B                           ; 0x1dca8 $DC98 A5 3B                   ; Link's Current X position (high byte)
adc      #$00                          ; 0x1dcaa $DC9A 69 00                   ;
sta      L000E                         ; 0x1dcac $DC9C 85 0E                   ;
pla                                    ; 0x1dcae $DC9E 68                      ;
sbc      $4E,x                         ; 0x1dcaf $DC9F F5 4E                   ; Enemy X position (low byte)
sta      $0F                           ; 0x1dcb1 $DCA1 85 0F                   ;
lda      L000E                         ; 0x1dcb3 $DCA3 A5 0E                   ;
sbc      $3C,x                         ; 0x1dcb5 $DCA5 F5 3C                   ; Enemy X position (high byte)
bpl      LDCAA                         ; 0x1dcb7 $DCA7 10 01                   ;
iny                                    ; 0x1dcb9 $DCA9 C8                      ;
LDCAA                                                                          ;
sty      $60,x                         ; 0x1dcba $DCAA 94 60                   ;facing dir
dey                                    ; 0x1dcbc $DCAC 88                      ;
rts                                    ; 0x1dcbd $DCAD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCAE                                                                          ;
lda      $0504,x                       ; 0x1dcbe $DCAE BD 04 05                ;; Timer for Enemy
bne      LDCC2                         ; 0x1dcc1 $DCB1 D0 0F                   ;
lda      #$20                          ; 0x1dcc3 $DCB3 A9 20                   ; A = 20
ldy      $0414,x                       ; 0x1dcc5 $DCB5 BC 14 04                ;
bpl      LDCBC                         ; 0x1dcc8 $DCB8 10 02                   ;
lda      #$00                          ; 0x1dcca $DCBA A9 00                   ; A = 00
LDCBC                                                                          ;
sta      $0504,x                       ; 0x1dccc $DCBC 9D 04 05                ;; Timer for Enemy
inc      $B6,x                         ; 0x1dccf $DCBF F6 B6                   ; Generated Enemy Slot
rts                                    ; 0x1dcd1 $DCC1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCC2                                                                          ;
ldy      $A1,x                         ; 0x1dcd2 $DCC2 B4 A1                   ; Enemy Code
lda      $6E1D,y                       ; 0x1dcd4 $DCC4 B9 1D 6E                ;
ldy      $0504,x                       ; 0x1dcd7 $DCC7 BC 04 05                ;; Timer for Enemy
cmp      #$FF                          ; 0x1dcda $DCCA C9 FF                   ;
beq      bank7_code29                  ; 0x1dcdc $DCCC F0 0D                   ;
jmp      LEEB2                         ; 0x1dcde $DCCE 4C B2 EE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table17                                                                  ;
.byt    $08,$F8                        ; 0x1dce1 $DCD1 08 F8                   ;
LDCD3                                                                          ;
.byt    $3F,$18,$04,$0F,$0F,$0F,$0F,$FF; 0x1dce3 $DCD3 3F 18 04 0F 0F 0F 0F FF ;
; ---------------------------------------------------------------------------- ;
bank7_code29                                                                   ;
cpy      #$68                          ; 0x1dceb $DCDB C0 68                   ;
bne      LDCED                         ; 0x1dced $DCDD D0 0E                   ;
lda      #$E8                          ; 0x1dcef $DCDF A9 E8                   ; A = E8
sta      $074B                         ; 0x1dcf1 $DCE1 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      #$0F                          ; 0x1dcf4 $DCE4 A9 0F                   ; A = 0F
sta      $0725                         ; 0x1dcf6 $DCE6 8D 25 07                ;; PPU Macro Selector	
lda      #$80                          ; 0x1dcf9 $DCE9 A9 80                   ; A = 80
sta      $EC                           ; 0x1dcfb $DCEB 85 EC                   ; Sound Effects Type 1
LDCED                                                                          ;
bcc      LDCF5                         ; 0x1dcfd $DCED 90 06                   ;
jsr      bank7_Display                 ; 0x1dcff $DCEF 20 11 EF                ;
jmp      LDD27                         ; 0x1dd02 $DCF2 4C 27 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCF5                                                                          ;
lda      $29                           ; 0x1dd05 $DCF5 A5 29                   ; Link's Y Position
sta      $2A                           ; 0x1dd07 $DCF7 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1dd09 $DCF9 20 91 DC; Determine Enemy Facing Direction
lda      $CC                           ; 0x1dd0c $DCFC A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
adc      bank7_table17,y               ; 0x1dd0e $DCFE 79 D1 DC                ;
sta      $CD                           ; 0x1dd11 $DD01 85 CD                   ;
lda      $80                           ; 0x1dd13 $DD03 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
sta      $81                           ; 0x1dd15 $DD05 85 81                   ;
lda      $9F                           ; 0x1dd17 $DD07 A5 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
sta      $A0                           ; 0x1dd19 $DD09 85 A0                   ;
lda      #$50                          ; 0x1dd1b $DD0B A9 50                   ; A = 50
sta      $91                           ; 0x1dd1d $DD0D 85 91                   ;
lda      #$00                          ; 0x1dd1f $DD0F A9 00                   ; A = 00
sta      $C9                           ; 0x1dd21 $DD11 85 C9                   ;
ldx      #$01                          ; 0x1dd23 $DD13 A2 01                   ; X = 01
stx      $11                           ; 0x1dd25 $DD15 86 11                   ;
inx                                    ; 0x1dd27 $DD17 E8                      ;
stx      $0753                         ; 0x1dd28 $DD18 8E 53 07                ;
jsr      LEC02                         ; 0x1dd2b $DD1B 20 02 EC                ;
ldx      $10                           ; 0x1dd2e $DD1E A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $4E,x                         ; 0x1dd30 $DD20 B5 4E                   ; Enemy X position (low byte)
sbc      $072C                         ; 0x1dd32 $DD22 ED 2C 07                ; Scrolling Offset Low Byte
sta      $CD                           ; 0x1dd35 $DD25 85 CD                   ;
LDD27                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1dd37 $DD27 20 30 CF; Region Code * 5 + World Code
cmp      #$0F                          ; 0x1dd3a $DD2A C9 0F                   ;
bne      LDD31                         ; 0x1dd3c $DD2C D0 03                   ;
jmp      L9764                         ; 0x1dd3e $DD2E 4C 64 97                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDD31                                                                          ;
jmp      L9A46                         ; 0x1dd41 $DD31 4C 46 9A                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDD34                                                                          ;
ldy      $A1,x                         ; 0x1dd44 $DD34 B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1dd46 $DD36 B9 41 6E                ;
and      #$40                          ; 0x1dd49 $DD39 29 40                   ; keep bits .x.. .... (Regenerate bit)
beq      bank7_remove_enemy_or_item    ; 0x1dd4b $DD3B F0 0A                   ;
LDD3D                                                                          ;
ldy      $BC,x                         ; 0x1dd4d $DD3D B4 BC                   ;; Generated Enemy Y Position ?
bmi      bank7_remove_enemy_or_item    ; 0x1dd4f $DD3F 30 06                   ;
lda      ($D6),y                       ; 0x1dd51 $DD41 B1 D6                   ;
and      #$7F                          ; 0x1dd53 $DD43 29 7F                   ; keep bits .xxx xxxx
sta      ($D6),y                       ; 0x1dd55 $DD45 91 D6                   ;
bank7_remove_enemy_or_item                                                     ;
lda      #$00                          ; 0x1dd57 $DD47 A9 00                   ; A = 00
sta      $B6,x                         ; 0x1dd59 $DD49 95 B6                   ; Generated Enemy Slot
rts                                    ; 0x1dd5b $DD4B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Enemy_Score_Tile_Mapping_Codes                                 ;
;F5 = Nothing                                                                  ;
;A0 = 10                                                                       ;
;A2 = 5                                                                        ;
;A4 = 2                                                                        ;
;A6 = 7                                                                        ;
;60 = 3                                                                        ;
;6C = 15                                                                       ;
;9C = 0                                                                        ;
;9E = 00                                                                       ;
.byt    $F5,$F5,$F5,$F5,$F5,$A4,$60,$A2; 0x1dd5c $DD4C F5 F5 F5 F5 F5 A4 60 A2 ;
.byt    $A6,$A0,$6C,$A4,$60,$A2,$A6,$A0; 0x1dd64 $DD54 A6 A0 6C A4 60 A2 A6 A0 ;
LDD5C                                                                          ;
.byt    $F5,$A4,$60,$A2,$A0,$9C,$9C,$9C; 0x1dd6c $DD5C F5 A4 60 A2 A0 9C 9C 9C ;
.byt    $9C,$9C,$9C,$9E,$9E,$9E,$9E,$9E; 0x1dd74 $DD64 9C 9C 9C 9E 9E 9E 9E 9E ;
; ---------------------------------------------------------------------------- ;
bank7_code30                                                                   ;
lda      $0504,x                       ; 0x1dd7c $DD6C BD 04 05                ;; Timer for Enemy
beq      bank7_monster_death_give_exp  ; 0x1dd7f $DD6F F0 7B                   ;
ldy      $91,x                         ; 0x1dd81 $DD71 B4 91                   ;
lda      $0414,x                       ; 0x1dd83 $DD73 BD 14 04                ;
and      #$0F                          ; 0x1dd86 $DD76 29 0F                   ; keep bits .... xxxx
tax                                    ; 0x1dd88 $DD78 AA                      ;
lda      bank7_Table_for_Enemy_Score_Tile_Mapping_Codes,x; 0x1dd89 $DD79 BD 4C DD;
sta      $0201,y                       ; 0x1dd8c $DD7C 99 01 02                ;
lda      LDD5C,x                       ; 0x1dd8f $DD7F BD 5C DD                ;
ldx      $10                           ; 0x1dd92 $DD82 A6 10                   ;; used as monster x register ;draw boss hp bar
sta      $0205,y                       ; 0x1dd94 $DD84 99 05 02                ;
lda      #$01                          ; 0x1dd97 $DD87 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1dd99 $DD89 99 02 02                ;
sta      $0206,y                       ; 0x1dd9c $DD8C 99 06 02                ;
lda      $12                           ; 0x1dd9f $DD8F A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1dda1 $DD91 4A                      ;
bcc      LDD96                         ; 0x1dda2 $DD92 90 02                   ;
dec      $2A,x                         ; 0x1dda4 $DD94 D6 2A                   ; Enemy Y Position
LDD96                                                                          ;
lda      $2A,x                         ; 0x1dda6 $DD96 B5 2A                   ; Enemy Y Position
sta      $0200,y                       ; 0x1dda8 $DD98 99 00 02                ;
sta      $0204,y                       ; 0x1ddab $DD9B 99 04 02                ;
lda      $CD                           ; 0x1ddae $DD9E A5 CD                   ;
sta      $0203,y                       ; 0x1ddb0 $DDA0 99 03 02                ;
clc                                    ; 0x1ddb3 $DDA3 18                      ;
adc      #$08                          ; 0x1ddb4 $DDA4 69 08                   ;
sta      $0207,y                       ; 0x1ddb6 $DDA6 99 07 02                ;
lda      $C9                           ; 0x1ddb9 $DDA9 A5 C9                   ;
pha                                    ; 0x1ddbb $DDAB 48                      ;
and      #$08                          ; 0x1ddbc $DDAC 29 08                   ; keep bits .... x...
beq      LDDB5                         ; 0x1ddbe $DDAE F0 05                   ;
lda      #$F8                          ; 0x1ddc0 $DDB0 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1ddc2 $DDB2 99 00 02                ;
LDDB5                                                                          ;
pla                                    ; 0x1ddc5 $DDB5 68                      ;
and      #$04                          ; 0x1ddc6 $DDB6 29 04                   ; keep bits .... .x..
beq      LDDBF                         ; 0x1ddc8 $DDB8 F0 05                   ;
lda      #$F8                          ; 0x1ddca $DDBA A9 F8                   ; A = F8
sta      $0204,y                       ; 0x1ddcc $DDBC 99 04 02                ;
LDDBF                                                                          ;
rts                                    ; 0x1ddcf $DDBF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Experience_Table_Low_Byte                                                ;
.byt    $00,$02,$03,$05,$0A,$14,$1E,$32; 0x1ddd0 $DDC0 00 02 03 05 0A 14 1E 32 ;
.byt    $46,$64,$96,$C8,$2D,$F4,$BC,$E8; 0x1ddd8 $DDC8 46 64 96 C8 2D F4 BC E8 ;
bank7_Japanese_version_score_table                                             ;
.byt    $00,$01,$02,$05,$0A,$14,$32,$64; 0x1dde0 $DDD0 00 01 02 05 0A 14 32 64 ;
.byt    $C8,$F4,$E8,$D0                ; 0x1dde8 $DDD8 C8 F4 E8 D0             ;
bank7_Experience_Table_High_Byte                                               ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x1ddec $DDDC 00 00 00 00 00 00 00 00 ;
.byt    $00,$00,$00,$00,$01,$01,$02,$03; 0x1ddf4 $DDE4 00 00 00 00 01 01 02 03 ;
; ---------------------------------------------------------------------------- ;
bank7_monster_death_give_exp                                                   ;
lda      $0414,x                       ; 0x1ddfc $DDEC BD 14 04                ;
bmi      LDE20                         ; 0x1ddff $DDEF 30 2F                   ;
tay                                    ; 0x1de01 $DDF1 A8                      ;
lda      bank7_Experience_Table_Low_Byte,y; 0x1de02 $DDF2 B9 C0 DD             ;
clc                                    ; 0x1de05 $DDF5 18                      ;
adc      $0756                         ; 0x1de06 $DDF6 6D 56 07                ;; Experience to be added (low byte)
sta      $0756                         ; 0x1de09 $DDF9 8D 56 07                ; Experience to be added (low byte)
lda      bank7_Experience_Table_High_Byte,y; 0x1de0c $DDFC B9 DC DD            ;
adc      $0755                         ; 0x1de0f $DDFF 6D 55 07                ;; Experience to be added (high byte)
sta      $0755                         ; 0x1de12 $DE02 8D 55 07                ; Experience to be added (high byte)
ldy      $A1,x                         ; 0x1de15 $DE05 B4 A1                   ; Enemy Code
lda      $6E1D,y                       ; 0x1de17 $DE07 B9 1D 6E                ;
cmp      #$FF                          ; 0x1de1a $DE0A C9 FF                   ;
bne      LDE1D                         ; 0x1de1c $DE0C D0 0F                   ;
;boss (now dead) turns into a key ?                                            ;
lda      #$80                          ; 0x1de1e $DE0E A9 80                   ; A = 80
sta      $4E,x                         ; 0x1de20 $DE10 95 4E                   ; Enemy X position (low byte)
lsr                                    ; 0x1de22 $DE12 4A                      ;
sta      $2A,x                         ; 0x1de23 $DE13 95 2A                   ; Enemy Y Position
jsr      LDE20                         ; 0x1de25 $DE15 20 20 DE                ;
lda      #$08                          ; 0x1de28 $DE18 A9 08                   ; A = 08					;key ID
sta      $AF,x                         ; 0x1de2a $DE1A 95 AF                   ; Various enemy state variables			;store as item ID
rts                                    ; 0x1de2c $DE1C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE1D                                                                          ;
jmp      LDD34                         ; 0x1de2d $DE1D 4C 34 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE20                                                                          ;
jsr      LDD34                         ; 0x1de30 $DE20 20 34 DD                ;
lda      #$02                          ; 0x1de33 $DE23 A9 02                   ; sound of dropped item
sta      $EF                           ; 0x1de35 $DE25 85 EF                   ;; Sound Effects Type 4; Sound Effects Type 4
lda      $048E,x                       ; 0x1de37 $DE27 BD 8E 04                ; (set to any item ID, anything can be dropped)
sta      $AF,x                         ; 0x1de3a $DE2A 95 AF                   ;; Various enemy state variables
lda      #$FF                          ; 0x1de3c $DE2C A9 FF                   ; A = FF
sta      $BC,x                         ; 0x1de3e $DE2E 95 BC                   ;; Generated Enemy Y Position ?
lda      #$01                          ; 0x1de40 $DE30 A9 01                   ; Code for Red Jar (maybe Blue too)
sta      $B6,x                         ; 0x1de42 $DE32 95 B6                   ;; Generated Enemy Slot
sta      $A1,x                         ; 0x1de44 $DE34 95 A1                   ; Takes the defeated enemy's slot
lsr                                    ; 0x1de46 $DE36 4A                      ;
sta      $057E,x                       ; 0x1de47 $DE37 9D 7E 05                ; Enemy Y Velocity
sta      $C2,x                         ; 0x1de4a $DE3A 95 C2                   ; Enemy Current HP
rts                                    ; 0x1de4c $DE3C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE3D                                                                          ;
jsr      LEA32                         ; 0x1de4d $DE3D 20 32 EA                ;
LDE40                                                                          ;
ldy      #$01                          ; 0x1de50 $DE40 A0 01                   ; Y = 01
inx                                    ; 0x1de52 $DE42 E8                      ;
jsr      bank7_code51                  ; 0x1de53 $DE43 20 7D F2                ;
ldx      $10                           ; 0x1de56 $DE46 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $1A,x                         ; 0x1de58 $DE48 B5 1A                   ;
cmp      #$02                          ; 0x1de5a $DE4A C9 02                   ;
bcc      LDE51                         ; 0x1de5c $DE4C 90 03                   ;
jmp      LDD3D                         ; 0x1de5e $DE4E 4C 3D DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE51                                                                          ;
jsr      bank7_Display                 ; 0x1de61 $DE51 20 11 EF                ; Display
LDE54                                                                          ;
lda      $C9                           ; 0x1de64 $DE54 A5 C9                   ;
and      #$FC                          ; 0x1de66 $DE56 29 FC                   ; keep bits xxxx xx..
beq      LDE63                         ; 0x1de68 $DE58 F0 09                   ;
lda      $A8,x                         ; 0x1de6a $DE5A B5 A8                   ; Enemy State
and      #$0F                          ; 0x1de6c $DE5C 29 0F                   ; keep bits .... xxxx
sta      $A8,x                         ; 0x1de6e $DE5E 95 A8                   ; Enemy State
jmp      LDE6C                         ; 0x1de70 $DE60 4C 6C DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE63                                                                          ;
jsr      LE48B                         ; 0x1de73 $DE63 20 8B E4                ;
jsr      bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least; 0x1de76 $DE66 20 77 E6; Sword Hit Detection
jmp      LE4D9                         ; 0x1de79 $DE69 4C D9 E4                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE6C                                                                          ;
lda      $A1,x                         ; 0x1de7c $DE6C B5 A1                   ; Enemy Code
cmp      #$13                          ; 0x1de7e $DE6E C9 13                   ; 13 = Elevator
beq      LDEB7                         ; 0x1de80 $DE70 F0 45                   ;
cmp      #$03                          ; 0x1de82 $DE72 C9 03                   ; 03 = Myu
bcc      LDEB7                         ; 0x1de84 $DE74 90 41                   ;
ldy      #$01                          ; 0x1de86 $DE76 A0 01                   ; Y = 01
sty      $0F                           ; 0x1de88 $DE78 84 0F                   ;
lda      $072C                         ; 0x1de8a $DE7A AD 2C 07                ; Scrolling Offset Low Byte
sec                                    ; 0x1de8d $DE7D 38                      ;
sbc      #$60                          ; 0x1de8e $DE7E E9 60                   ;
sta      $01                           ; 0x1de90 $DE80 85 01                   ;
lda      $072A                         ; 0x1de92 $DE82 AD 2A 07                ; Scrolling Offset High Byte
sbc      $0F                           ; 0x1de95 $DE85 E5 0F                   ;
sta      L0000                         ; 0x1de97 $DE87 85 00                   ;
inc      L0000                         ; 0x1de99 $DE89 E6 00                   ;
lda      $072D                         ; 0x1de9b $DE8B AD 2D 07                ;
clc                                    ; 0x1de9e $DE8E 18                      ;
adc      #$60                          ; 0x1de9f $DE8F 69 60                   ;
sta      $03                           ; 0x1dea1 $DE91 85 03                   ;
lda      $072B                         ; 0x1dea3 $DE93 AD 2B 07                ;
adc      $0F                           ; 0x1dea6 $DE96 65 0F                   ;
sta      $02                           ; 0x1dea8 $DE98 85 02                   ;
inc      $02                           ; 0x1deaa $DE9A E6 02                   ;
lda      $4E,x                         ; 0x1deac $DE9C B5 4E                   ; Enemy X position (low byte)
cmp      $01                           ; 0x1deae $DE9E C5 01                   ;
ldy      $3C,x                         ; 0x1deb0 $DEA0 B4 3C                   ; Enemy X position (high byte)
iny                                    ; 0x1deb2 $DEA2 C8                      ;
tya                                    ; 0x1deb3 $DEA3 98                      ;
sbc      L0000                         ; 0x1deb4 $DEA4 E5 00                   ;
bmi      LDEB4                         ; 0x1deb6 $DEA6 30 0C                   ;
lda      $4E,x                         ; 0x1deb8 $DEA8 B5 4E                   ; Enemy X position (low byte)
cmp      $03                           ; 0x1deba $DEAA C5 03                   ;
ldy      $3C,x                         ; 0x1debc $DEAC B4 3C                   ; Enemy X position (high byte)
iny                                    ; 0x1debe $DEAE C8                      ;
tya                                    ; 0x1debf $DEAF 98                      ;
sbc      $02                           ; 0x1dec0 $DEB0 E5 02                   ;
bmi      LDEB7                         ; 0x1dec2 $DEB2 30 03                   ;
LDEB4                                                                          ;
jsr      LDD3D                         ; 0x1dec4 $DEB4 20 3D DD                ;
LDEB7                                                                          ;
rts                                    ; 0x1dec7 $DEB7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Simple_Horizontal_Movement                                               ;
inx                                    ; 0x1dec8 $DEB8 E8                      ;
jsr      bank7_XY_Movements_Routine    ; 0x1dec9 $DEB9 20 CE D1                ;
dex                                    ; 0x1decc $DEBC CA                      ;
rts                                    ; 0x1decd $DEBD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Gravity                                                                  ;
jsr      bank7_Simple_Vertical_Movement; 0x1dece $DEBE 20 C8 DE                ; Simple Vertical Movement
inc      $057E,x                       ; 0x1ded1 $DEC1 FE 7E 05                ; Enemy Y Velocity
inc      $057E,x                       ; 0x1ded4 $DEC4 FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
rts                                    ; 0x1ded7 $DEC7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Simple_Vertical_Movement                                                 ;
inx                                    ; 0x1ded8 $DEC8 E8                      ;
jsr      LD20A                         ; 0x1ded9 $DEC9 20 0A D2                ;
dex                                    ; 0x1dedc $DECC CA                      ;
rts                                    ; 0x1dedd $DECD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDECE                                                                          ;
inx                                    ; 0x1dede $DECE E8                      ;
jsr      bank7_applyGravityMotion      ; 0x1dedf $DECF 20 9B D1                ;
dex                                    ; 0x1dee2 $DED2 CA                      ;
rts                                    ; 0x1dee3 $DED3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDED4                                                                          ;
txa                                    ; 0x1dee4 $DED4 8A                      ;
clc                                    ; 0x1dee5 $DED5 18                      ;
adc      #$07                          ; 0x1dee6 $DED6 69 07                   ;
tax                                    ; 0x1dee8 $DED8 AA                      ;
jsr      bank7_XY_Movements_Routine    ; 0x1dee9 $DED9 20 CE D1                ;
jsr      LD20A                         ; 0x1deec $DEDC 20 0A D2                ;
ldy      #$02                          ; 0x1deef $DEDF A0 02                   ; Y = 02
jsr      bank7_code51                  ; 0x1def1 $DEE1 20 7D F2                ;
ldx      $10                           ; 0x1def4 $DEE4 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1def6 $DEE6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_tile_and_move_right_1_column                                         ;
sta      (L000E),y                     ; 0x1def7 $DEE7 91 0E                   ;
iny                                    ; 0x1def9 $DEE9 C8                      ;
tya                                    ; 0x1defa $DEEA 98                      ;
and      #$0F                          ; 0x1defb $DEEB 29 0F                   ; keep bits .... xxxx
bne      LDF00                         ; 0x1defd $DEED D0 11                   ;
lda      L000E                         ; 0x1deff $DEEF A5 0E                   ;
clc                                    ; 0x1df01 $DEF1 18                      ;
adc      #$D0                          ; 0x1df02 $DEF2 69 D0                   ;
sta      L000E                         ; 0x1df04 $DEF4 85 0E                   ;
bcc      LDEFA                         ; 0x1df06 $DEF6 90 02                   ;
inc      $0F                           ; 0x1df08 $DEF8 E6 0F                   ;
LDEFA                                                                          ;
lda      $0730                         ; 0x1df0a $DEFA AD 30 07                ;; Position of Object Placement
and      #$F0                          ; 0x1df0d $DEFD 29 F0                   ; keep bits xxxx ....
tay                                    ; 0x1df0f $DEFF A8                      ;
LDF00                                                                          ;
rts                                    ; 0x1df10 $DF00 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDF01                                                                          ;
lda      $75                           ; 0x1df11 $DF01 A5 75                   ; X position in OW
jsr      LDF3F                         ; 0x1df13 $DF03 20 3F DF                ;
sta      L0000                         ; 0x1df16 $DF06 85 00                   ;
tya                                    ; 0x1df18 $DF08 98                      ;
asl                                    ; 0x1df19 $DF09 0A                      ;
asl                                    ; 0x1df1a $DF0A 0A                      ;
asl                                    ; 0x1df1b $DF0B 0A                      ;
asl                                    ; 0x1df1c $DF0C 0A                      ;
ora      L0000                         ; 0x1df1d $DF0D 05 00                   ;
sta      $0A                           ; 0x1df1f $DF0F 85 0A                   ;
sta      $77                           ; 0x1df21 $DF11 85 77                   ;;projectile speed	77,78,79,7A,7B,7C	77,Y
lda      #$08                          ; 0x1df23 $DF13 A9 08                   ; A = 08
sta      L0000                         ; 0x1df25 $DF15 85 00                   ;
asl                                    ; 0x1df27 $DF17 0A                      ;
sta      $7D                           ; 0x1df28 $DF18 85 7D                   ;;number of pixels to move? automove? on overworld, only partially, causes bug
lda      $0A                           ; 0x1df2a $DF1A A5 0A                   ;
asl                                    ; 0x1df2c $DF1C 0A                      ;
asl                                    ; 0x1df2d $DF1D 0A                      ;
asl                                    ; 0x1df2e $DF1E 0A                      ;
asl                                    ; 0x1df2f $DF1F 0A                      ;
asl                                    ; 0x1df30 $DF20 0A                      ;
rol      L0000                         ; 0x1df31 $DF21 26 00                   ;
asl                                    ; 0x1df33 $DF23 0A                      ;
rol      L0000                         ; 0x1df34 $DF24 26 00                   ;
sta      $01                           ; 0x1df36 $DF26 85 01                   ;
lda      $76                           ; 0x1df38 $DF28 A5 76                   ; X position on map (Link)
and      #$0F                          ; 0x1df3a $DF2A 29 0F                   ; keep bits .... xxxx
asl                                    ; 0x1df3c $DF2C 0A                      ;
adc      $01                           ; 0x1df3d $DF2D 65 01                   ;
sta      $7A                           ; 0x1df3f $DF2F 85 7A                   ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
lda      $0A                           ; 0x1df41 $DF31 A5 0A                   ;
and      #$10                          ; 0x1df43 $DF33 29 10                   ; keep bits ...x ....
lsr                                    ; 0x1df45 $DF35 4A                      ;
ora      L0000                         ; 0x1df46 $DF36 05 00                   ;
sta      $79                           ; 0x1df48 $DF38 85 79                   ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
lda      #$00                          ; 0x1df4a $DF3A A9 00                   ; A = 00
sta      $7E                           ; 0x1df4c $DF3C 85 7E                   ;
rts                                    ; 0x1df4e $DF3E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDF3F                                                                          ;
ldy      #$FF                          ; 0x1df4f $DF3F A0 FF                   ; Y = FF
LDF41                                                                          ;
iny                                    ; 0x1df51 $DF41 C8                      ;
sec                                    ; 0x1df52 $DF42 38                      ;
sbc      #$0F                          ; 0x1df53 $DF43 E9 0F                   ;
bcs      LDF41                         ; 0x1df55 $DF45 B0 FA                   ;
adc      #$0F                          ; 0x1df57 $DF47 69 0F                   ;
rts                                    ; 0x1df59 $DF49 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_tile_and_go_down_1_row_in_2x2_tiles_units                            ;
sta      (L000E),y                     ; 0x1df5a $DF4A 91 0E                   ;
LDF4C                                                                          ;
lda      $0730                         ; 0x1df5c $DF4C AD 30 07                ; Position of Object Placement
clc                                    ; 0x1df5f $DF4F 18                      ;
adc      #$10                          ; 0x1df60 $DF50 69 10                   ; Go down 1 row
sta      $0730                         ; 0x1df62 $DF52 8D 30 07                ;; Position of Object Placement
rts                                    ; 0x1df65 $DF55 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDF56                                                                          ;
sta      (L000E),y                     ; 0x1df66 $DF56 91 0E                   ;
tya                                    ; 0x1df68 $DF58 98                      ;
clc                                    ; 0x1df69 $DF59 18                      ;
adc      #$10                          ; 0x1df6a $DF5A 69 10                   ;
tay                                    ; 0x1df6c $DF5C A8                      ;
rts                                    ; 0x1df6d $DF5D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_OW_tiles_that_transform_into_another_type                      ;
;0E -> 04	Rock   -> Desert                                                     ;
;0F -> 04	Spider -> Desert                                                     ;
;04 -> 02	Desert -> Palace                                                     ;
;06 -> 00	Forest -> Town                                                       ;
.byt    $0E,$0F,$04,$06                ; 0x1df6e $DF5E 0E 0F 04 06             ;
bank7_Transform_into_this                                                      ;
.byt    $04,$04,$02,$00                ; 0x1df72 $DF62 04 04 02 00             ;
bank7_table19                                                                  ;
.byt    $35,$31                        ; 0x1df76 $DF66 35 31                   ;
LDF68                                                                          ;
.byt    $E6,$D1                        ; 0x1df78 $DF68 E6 D1                   ;
bank7_PPU_Macros_for_Hidden_Palace                                             ;
.byt    $23,$1A,$02,$60,$62,$23,$3A,$02; 0x1df7a $DF6A 23 1A 02 60 62 23 3A 02 ;
.byt    $61,$63,$23,$F6,$01,$FB,$FF    ; 0x1df82 $DF72 61 63 23 F6 01 FB FF    ;
; ---------------------------------------------------------------------------- ;
bank7_forest_chop_with_hammer                                                  ;
jsr      bank1_overworld_limit_check_jmp_from_bank7; 0x1df89 $DF79 20 CF 83    ;
LDF7C                                                                          ;
lda      (L000E),y                     ; 0x1df8c $DF7C B1 0E                   ;
cmp      bank7_Table_for_OW_tiles_that_transform_into_another_type,x; 0x1df8e $DF7E DD 5E DF;
beq      bank7_Related_to_Hidden_Town_revealed; 0x1df91 $DF81 F0 08            ;
dex                                    ; 0x1df93 $DF83 CA                      ;
bpl      LDF7C                         ; 0x1df94 $DF84 10 F6                   ;
inx                                    ; 0x1df96 $DF86 E8                      ;
stx      $0725                         ; 0x1df97 $DF87 8E 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1df9a $DF8A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Hidden_Town_revealed                                          ;
txa                                    ; 0x1df9b $DF8B 8A                      ;
beq      LDFBD                         ; 0x1df9c $DF8C F0 2F                   ;
lda      $0706                         ; 0x1df9e $DF8E AD 06 07                ; Current Region
cmp      #$02                          ; 0x1dfa1 $DF91 C9 02                   ; Region 02 = East Hyrule
bne      LDFD1                         ; 0x1dfa3 $DF93 D0 3C                   ; if NOT 02, return
cpx      #$03                          ; 0x1dfa5 $DF95 E0 03                   ;
bne      LDFB9                         ; 0x1dfa7 $DF97 D0 20                   ;
lda      $04                           ; 0x1dfa9 $DF99 A5 04                   ; Y Units Offset in Overworld
cmp      #$33                          ; 0x1dfab $DF9B C9 33                   ; Y Coordinate of Hidden Kasuto ???
bne      LDFD1                         ; 0x1dfad $DF9D D0 32                   ;
lda      L0000                         ; 0x1dfaf $DF9F A5 00                   ;
cmp      #$3E                          ; 0x1dfb1 $DFA1 C9 3E                   ; X Coordinate of Hidden Kasuto ???
bne      LDFD1                         ; 0x1dfb3 $DFA3 D0 2C                   ;
lda      #$5C                          ; 0x1dfb5 $DFA5 A9 5C                   ; A = 5C
sta      $0305                         ; 0x1dfb7 $DFA7 8D 05 03                ;; Empty Row Space Character
lda      #$5D                          ; 0x1dfba $DFAA A9 5D                   ; A = 5D
sta      $0306                         ; 0x1dfbc $DFAC 8D 06 03                ;; Letter Written to Screen
lda      #$5E                          ; 0x1dfbf $DFAF A9 5E                   ; A = 5E
sta      $030A                         ; 0x1dfc1 $DFB1 8D 0A 03                ;
lda      #$5F                          ; 0x1dfc4 $DFB4 A9 5F                   ; A = 5F
sta      $030B                         ; 0x1dfc6 $DFB6 8D 0B 03                ;
LDFB9                                                                          ;
lda      #$10                          ; 0x1dfc9 $DFB9 A9 10                   ; A = 10
sta      $EB                           ; 0x1dfcb $DFBB 85 EB                   ; EB = Music
LDFBD                                                                          ;
lda      bank7_Transform_into_this,x   ; 0x1dfcd $DFBD BD 62 DF                ;
sta      (L000E),y                     ; 0x1dfd0 $DFC0 91 0E                   ;
cpx      #$02                          ; 0x1dfd2 $DFC2 E0 02                   ;
bcc      LDFD1                         ; 0x1dfd4 $DFC4 90 0B                   ;
dex                                    ; 0x1dfd6 $DFC6 CA                      ;
dex                                    ; 0x1dfd7 $DFC7 CA                      ;
ldy      bank7_table19,x               ; 0x1dfd8 $DFC8 BC 66 DF                ;
lda      LDF68,x                       ; 0x1dfdb $DFCB BD 68 DF                ;
sta      $6A00,y                       ; 0x1dfde $DFCE 99 00 6A                ;
LDFD1                                                                          ;
rts                                    ; 0x1dfe1 $DFD1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfe2 $DFD2 20 C9 FF                ; Load Bank $0769
jsr      bank7_forest_chop_with_hammer ; 0x1dfe5 $DFD5 20 79 DF                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1dfe8 $DFD8 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfeb $DFDB 20 C9 FF                ; Load Bank $0769
jsr      bank7_Set_0E_0F_pointer_according_to_Object_Group; 0x1dfee $DFDE 20 E4 DF;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1dff1 $DFE1 4C C5 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_0E_0F_pointer_according_to_Object_Group                              ;
;Y is the index, already multiplied by 2                                       ;
lda      bank1_Pointer_table_for_Objects_Tile_Mappings,y; 0x1dff4 $DFE4 B9 00 85;
sta      L000E                         ; 0x1dff7 $DFE7 85 0E                   ;
lda      bank1_Pointer_table_for_Objects_Tile_Mappings+$01,y; 0x1dff9 $DFE9 B9 01 85;
sta      $0F                           ; 0x1dffc $DFEC 85 0F                   ;
rts                                    ; 0x1dffe $DFEE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Overworld_Boundaries__Mountain_or_Water_Bank_1                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfff $DFEF 20 C9 FF                ; Load Bank $0769
jsr      bank1_overworld_limit_check_jmp_from_bank7; 0x1e002 $DFF2 20 CF 83    ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e005 $DFF5 4C C5 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Check_for_Hidden_Palace_spot_Bank_1                                      ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e008 $DFF8 20 C9 FF                ; Load Bank $0769
jsr      bank1_Check_for_Hidden_Palace_spot; 0x1e00b $DFFB 20 68 83            ;
LE000     = * + $0002                                                          ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e00e $DFFE 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e011 $E001 20 C9 FF                ; Load Bank $0769
lda      (L000E),y                     ; 0x1e014 $E004 B1 0E                   ;
and      #$0F                          ; 0x1e016 $E006 29 0F                   ; keep bits .... xxxx
sta      $02                           ; 0x1e018 $E008 85 02                   ;
lda      (L000E),y                     ; 0x1e01a $E00A B1 0E                   ;
lsr                                    ; 0x1e01c $E00C 4A                      ;
lsr                                    ; 0x1e01d $E00D 4A                      ;
lsr                                    ; 0x1e01e $E00E 4A                      ;
lsr                                    ; 0x1e01f $E00F 4A                      ;
sec                                    ; 0x1e020 $E010 38                      ;
adc      $03                           ; 0x1e021 $E011 65 03                   ;
sta      $03                           ; 0x1e023 $E013 85 03                   ;
pha                                    ; 0x1e025 $E015 48                      ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1e026 $E016 20 C5 FF                ; Load Bank 0
pla                                    ; 0x1e029 $E019 68                      ;
rts                                    ; 0x1e02a $E01A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Turn_Palaces_into_Stone_Bank_1                                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e02b $E01B 20 C9 FF                ; Load Bank $0769
jsr      bank1_Transform_completed_palaces_into_stone; 0x1e02e $E01E 20 9B 87  ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e031 $E021 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e034 $E024 20 C9 FF                ; Load Bank $0769
jsr      bank1_code6                   ; 0x1e037 $E027 20 A1 83                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e03a $E02A 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table20                                                                  ;
.byt    $FF,$FF,$FF                    ; 0x1e03d $E02D FF FF FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code33                                                                   ;
lda      #$AF                          ; 0x1e040 $E030 A9 AF                   ; A = AF
bank7_Links_initial_Y_Position_when_entering_an_area__ground_center_or_side    ;
sta      $29                           ; 0x1e042 $E032 85 29                   ; Link's Y position
ldy      #$00                          ; 0x1e044 $E034 A0 00                   ; Y = 00
ldx      #$00                          ; 0x1e046 $E036 A2 00                   ; X = 00
jsr      bank7_code51                  ; 0x1e048 $E038 20 7D F2                ;
jsr      bank7_code34                  ; 0x1e04b $E03B 20 70 E0                ;
lda      $A7                           ; 0x1e04e $E03E A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
beq      LE04B                         ; 0x1e050 $E040 F0 09                   ;
lda      $29                           ; 0x1e052 $E042 A5 29                   ; Link's Y Position
sec                                    ; 0x1e054 $E044 38                      ;
sbc      #$10                          ; 0x1e055 $E045 E9 10                   ;
cmp      #$10                          ; 0x1e057 $E047 C9 10                   ;
bcs      bank7_Links_initial_Y_Position_when_entering_an_area__ground_center_or_side; 0x1e059 $E049 B0 E7;
LE04B                                                                          ;
inc      $29                           ; 0x1e05b $E04B E6 29                   ; Link's Y position
rts                                    ; 0x1e05d $E04D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table21                                                                  ;
.byt    $01,$02,$01,$02,$04,$04,$08,$08; 0x1e05e $E04E 01 02 01 02 04 04 08 08 ;
.byt    $01,$02,$01,$02,$04,$04,$08,$08; 0x1e066 $E056 01 02 01 02 04 04 08 08 ;
.byt    $01,$02,$01,$02,$04,$08,$01,$02; 0x1e06e $E05E 01 02 01 02 04 08 01 02 ;
.byt    $01,$02,$04,$08,$01,$02,$01,$02; 0x1e076 $E066 01 02 04 08 01 02 01 02 ;
.byt    $04,$08                        ; 0x1e07e $E06E 04 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_code34                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e080 $E070 20 C9 FF                ;
jsr      bank7_Related_to_Link_falling_in_Lava_Water; 0x1e083 $E073 20 79 E0   ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e086 $E076 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Link_falling_in_Lava_Water                                    ;
ldx      #$00                          ; 0x1e089 $E079 A2 00                   ; X = 00
stx      $A7                           ; 0x1e08b $E07B 86 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$07                          ; 0x1e08d $E07D A9 07                   ; A = 07
clc                                    ; 0x1e08f $E07F 18                      ;
adc      $13                           ; 0x1e090 $E080 65 13                   ; Fairy state (0 = Not in Fairy state)
tay                                    ; 0x1e092 $E082 A8                      ;
jsr      LE1B8                         ; 0x1e093 $E083 20 B8 E1                ;
lda      $03                           ; 0x1e096 $E086 A5 03                   ;
sta      $0D                           ; 0x1e098 $E088 85 0D                   ;
lda      #$05                          ; 0x1e09a $E08A A9 05                   ; A = 05
clc                                    ; 0x1e09c $E08C 18                      ;
adc      $13                           ; 0x1e09d $E08D 65 13                   ; Fairy state (0 = Not in Fairy state)
tay                                    ; 0x1e09f $E08F A8                      ;
jsr      LE1B8                         ; 0x1e0a0 $E090 20 B8 E1                ;
ldy      #$1D                          ; 0x1e0a3 $E093 A0 1D                   ; Y = 1D
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e0a5 $E095 20 E8 EA;
lda      #$00                          ; 0x1e0a8 $E098 A9 00                   ; A = 00
sta      $0752                         ; 0x1e0aa $E09A 8D 52 07                ;
lda      $03                           ; 0x1e0ad $E09D A5 03                   ;tile index stepped on?
cmp      L8520                         ; 0x1e0af $E09F CD 20 85                ;
bne      LE0B0                         ; 0x1e0b2 $E0A2 D0 0C                   ;
bank7_Link_touched_Lava_Water                                                  ;
lda      #$01                          ; 0x1e0b4 $E0A4 A9 01                   ; A = 01
sta      $E9                           ; 0x1e0b6 $E0A6 85 E9                   ;
lda      #$10                          ; 0x1e0b8 $E0A8 A9 10                   ; A = 10
sta      $050C                         ; 0x1e0ba $E0AA 8D 0C 05                ; Timer for Link being in injured state
inc      $B5                           ; 0x1e0bd $E0AD E6 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
rts                                    ; 0x1e0bf $E0AF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0B0                                                                          ;
cmp      L8521                         ; 0x1e0c0 $E0B0 CD 21 85                ;
beq      LE0BA                         ; 0x1e0c3 $E0B3 F0 05                   ;
cmp      L8522                         ; 0x1e0c5 $E0B5 CD 22 85                ;
bne      LE0C5                         ; 0x1e0c8 $E0B8 D0 0B                   ;
;at this point:                                                                ;
;$2 is the offset for below foot(10*Y position), add to $E or $F               ;
;$3 is tile below links foot                                                   ;
;$E, $F are the vertical line which contains the tiles link is at              ;
LE0BA                                                                          ;
ldy      $29                           ; 0x1e0ca $E0BA A4 29                   ; Link's Y Position
cpy      #$A5                          ; 0x1e0cc $E0BC C0 A5                   ;
bcc      LE0C5                         ; 0x1e0ce $E0BE 90 05                   ;
ldy      #$20                          ; 0x1e0d0 $E0C0 A0 20                   ; Y = 20
sty      $0752                         ; 0x1e0d2 $E0C2 8C 52 07                ;
LE0C5                                                                          ;
cmp      L851F                         ; 0x1e0d5 $E0C5 CD 1F 85                ;breakable step on break-able step-on
beq      LE0FC                         ; 0x1e0d8 $E0C8 F0 32                   ;
cmp      bank1_table1                  ; 0x1e0da $E0CA CD 1A 85                ;
beq      LE0E6                         ; 0x1e0dd $E0CD F0 17                   ;
cmp      L851C                         ; 0x1e0df $E0CF CD 1C 85                ;
beq      LE0E6                         ; 0x1e0e2 $E0D2 F0 12                   ;
cmp      L851B                         ; 0x1e0e4 $E0D4 CD 1B 85                ;
beq      LE0E6                         ; 0x1e0e7 $E0D7 F0 0D                   ;
bank7_table22                                                                  ;
.byt    $CD,$1D,$85,$D0                ; 0x1e0e9 $E0D9 CD 1D 85 D0             ;
; ---------------------------------------------------------------------------- ;
bank7_code35                                                                   ;
.byt    $1B                            ; 0x1e0ed $E0DD 1B                      ;
lda      $17                           ; 0x1e0ee $E0DE A5 17                   ;; Link's Shield Position; Link's Shield Position (0 = Link ducked)
bne      LE0F9                         ; 0x1e0f0 $E0E0 D0 17                   ;
inc      $070E                         ; 0x1e0f2 $E0E2 EE 0E 07                ;;setting to 1 will make link sink (duck into the chimney)
LE0E5                                                                          ;
rts                                    ; 0x1e0f5 $E0E5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0E6                                                                          ;
lda      $F7                           ; 0x1e0f6 $E0E6 A5 F7                   ;; Controller 1 Buttons Held
and      #$08                          ; 0x1e0f8 $E0E8 29 08                   ;;Keep Bits:0000_1000
beq      LE0F9                         ; 0x1e0fa $E0EA F0 0D                   ;
lda      $0479                         ; 0x1e0fc $E0EC AD 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
bne      LE0E5                         ; 0x1e0ff $E0EF D0 F4                   ;
inc      $075B                         ; 0x1e101 $E0F1 EE 5B 07                ;
lda      #$16                          ; 0x1e104 $E0F4 A9 16                   ;;A = #$16 0001_0110
jmp      LE187                         ; 0x1e106 $E0F6 4C 87 E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0F9                                                                          ;
jmp      LE12B                         ; 0x1e109 $E0F9 4C 2B E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0FC                                                                          ;
lda      #$8F                          ; 0x1e10c $E0FC A9 8F                   ;;A = #$8f 1000_1111
ldy      $02                           ; 0x1e10e $E0FE A4 02                   ;
sta      (L000E),y                     ; 0x1e110 $E100 91 0E                   ;
jsr      bank7_find_next_free_41A_X_or_something_and_write_to___associated; 0x1e112 $E102 20 92 E2;
lda      #$81                          ; 0x1e115 $E105 A9 81                   ;;A = #$81 1000_0001
sta      $041A,x                       ; 0x1e117 $E107 9D 1A 04                ;;break block by stab/stepon: ?exists/in-use
lda      #$02                          ; 0x1e11a $E10A A9 02                   ;;A = #$02 0000_0010
sta      $ED                           ; 0x1e11c $E10C 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
lda      $29                           ; 0x1e11e $E10E A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
clc                                    ; 0x1e120 $E110 18                      ;
adc      #$20                          ; 0x1e121 $E111 69 20                   ;
and      #$F0                          ; 0x1e123 $E113 29 F0                   ;;Keep Bits:1111_0000
sta      $0429,x                       ; 0x1e125 $E115 9D 29 04                ;;break block by stab/stepon: y
lda      $4D                           ; 0x1e128 $E118 A5 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
clc                                    ; 0x1e12a $E11A 18                      ;
adc      #$0F                          ; 0x1e12b $E11B 69 0F                   ;
and      #$F0                          ; 0x1e12d $E11D 29 F0                   ;;Keep Bits:1111_0000
sta      $0424,x                       ; 0x1e12f $E11F 9D 24 04                ;;break block by stab/stepon: X
lda      $3B                           ; 0x1e132 $E122 A5 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
adc      #$00                          ; 0x1e134 $E124 69 00                   ;
sta      $041F,x                       ; 0x1e136 $E126 9D 1F 04                ;;break block by stab/stepon: map page
ldx      #$00                          ; 0x1e139 $E129 A2 00                   ;;X = #$00 0000_0000
LE12B                                                                          ;
lda      $5F                           ; 0x1e13b $E12B A5 5F                   ;; Link's facing direction
lsr                                    ; 0x1e13d $E12D 4A                      ;
clc                                    ; 0x1e13e $E12E 18                      ;
adc      $13                           ; 0x1e13f $E12F 65 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      L0000                         ; 0x1e141 $E131 85 00                   ;
pha                                    ; 0x1e143 $E133 48                      ;
lda      #$00                          ; 0x1e144 $E134 A9 00                   ;;A = #$00 0000_0000
sta      $01                           ; 0x1e146 $E136 85 01                   ;
jsr      LE1BE                         ; 0x1e148 $E138 20 BE E1                ;
pla                                    ; 0x1e14b $E13B 68                      ;
clc                                    ; 0x1e14c $E13C 18                      ;
adc      #$02                          ; 0x1e14d $E13D 69 02                   ;
adc      $13                           ; 0x1e14f $E13F 65 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      L0000                         ; 0x1e151 $E141 85 00                   ;
lda      #$00                          ; 0x1e153 $E143 A9 00                   ;;A = #$00 0000_0000
sta      $01                           ; 0x1e155 $E145 85 01                   ;
jsr      LE1BE                         ; 0x1e157 $E147 20 BE E1                ;
lda      $B5                           ; 0x1e15a $E14A A5 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
cmp      #$01                          ; 0x1e15c $E14C C9 01                   ;
bne      LE19D                         ; 0x1e15e $E14E D0 4D                   ;
lda      $0503                         ; 0x1e160 $E150 AD 03 05                ;; Timer for moving left or right (when entering area)
bne      LE19E                         ; 0x1e163 $E153 D0 49                   ;
lda      $C8                           ; 0x1e165 $E155 A5 C8                   ;; go outside: set $c8 to 3
ldy      $0728                         ; 0x1e167 $E157 AC 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
beq      LE16F                         ; 0x1e16a $E15A F0 13                   ;
and      #$09                          ; 0x1e16c $E15C 29 09                   ;;Keep Bits:0000_1001
beq      LE16E                         ; 0x1e16e $E15E F0 0E                   ;
lsr                                    ; 0x1e170 $E160 4A                      ;
lsr                                    ; 0x1e171 $E161 4A                      ;
lsr                                    ; 0x1e172 $E162 4A                      ;
tay                                    ; 0x1e173 $E163 A8                      ;
iny                                    ; 0x1e174 $E164 C8                      ;
cpy      $5F                           ; 0x1e175 $E165 C4 5F                   ;; Link's facing direction
bne      LE16E                         ; 0x1e177 $E167 D0 05                   ;
tya                                    ; 0x1e179 $E169 98                      ;
ora      $A7                           ; 0x1e17a $E16A 05 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
sta      $A7                           ; 0x1e17c $E16C 85 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
LE16E                                                                          ;
rts                                    ; 0x1e17e $E16E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE16F                                                                          ;
and      #$06                          ; 0x1e17f $E16F 29 06                   ;;Keep Bits:0000_0110
beq      LE19E                         ; 0x1e181 $E171 F0 2B                   ;
and      #$04                          ; 0x1e183 $E173 29 04                   ;;Keep Bits:0000_0100
beq      LE179                         ; 0x1e185 $E175 F0 02                   ;
inc      $3B                           ; 0x1e187 $E177 E6 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
LE179                                                                          ;
lda      #$00                          ; 0x1e189 $E179 A9 00                   ;;A = #$00 0000_0000
sta      $13                           ; 0x1e18b $E17B 85 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      $0759                         ; 0x1e18d $E17D 8D 59 07                ;; if not 0, cause fairy spawn at next encounter (??)
sta      $075A                         ; 0x1e190 $E180 8D 5A 07                ;
sta      $70                           ; 0x1e193 $E183 85 70                   ;;hspeed (Link's horizontal velocity); Link's X Velocity	; Player X Delta (E8-00, 00-18)
lda      #$10                          ; 0x1e195 $E185 A9 10                   ;;A = #$10 0001_0000
LE187                                                                          ;
sta      $0736                         ; 0x1e197 $E187 8D 36 07                ;; Game Mode ; screen intro type
LE18A                                                                          ;
inc      $0726                         ; 0x1e19a $E18A EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
ldx      #$05                          ; 0x1e19d $E18D A2 05                   ; X = 05
bank7_KillAllMonsters                                                          ;
lda      $B6,x                         ; 0x1e19f $E18F B5 B6                   ;does monster exist?
beq      LE198                         ; 0x1e1a1 $E191 F0 05                   ;if no, skip past 
jsr      LDD3D                         ; 0x1e1a3 $E193 20 3D DD                ;do something  and  kill monster (set B6,x=0)
inc      $B6,x                         ; 0x1e1a6 $E196 F6 B6                   ;
LE198                                                                          ;
dex                                    ; 0x1e1a8 $E198 CA                      ;decrement x
bpl      bank7_KillAllMonsters         ; 0x1e1a9 $E199 10 F4                   ;if x > 0
ldx      $10                           ; 0x1e1ab $E19B A6 10                   ;last current monster x register?
LE19D                                                                          ;
rts                                    ; 0x1e1ad $E19D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE19E                                                                          ;
lda      $13                           ; 0x1e1ae $E19E A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
beq      LE1A8                         ; 0x1e1b0 $E1A0 F0 06                   ;
lda      $29                           ; 0x1e1b2 $E1A2 A5 29                   ; Link's Y Position
cmp      #$E4                          ; 0x1e1b4 $E1A4 C9 E4                   ;
bcs      LE1AE                         ; 0x1e1b6 $E1A6 B0 06                   ;
LE1A8                                                                          ;
lda      $19                           ; 0x1e1b8 $E1A8 A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$02                          ; 0x1e1ba $E1AA C9 02                   ;
bcc      LE19D                         ; 0x1e1bc $E1AC 90 EF                   ;
LE1AE                                                                          ;
lda      #$00                          ; 0x1e1be $E1AE A9 00                   ; A = 00
sta      $13                           ; 0x1e1c0 $E1B0 85 13                   ;fall down hole ?
inc      $0736                         ; 0x1e1c2 $E1B2 EE 36 07                ; Game Mode
jmp      LE18A                         ; 0x1e1c5 $E1B5 4C 8A E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE1B8                                                                          ;
sty      L0000                         ; 0x1e1c8 $E1B8 84 00                   ;
lda      #$01                          ; 0x1e1ca $E1BA A9 01                   ; A = 01
sta      $01                           ; 0x1e1cc $E1BC 85 01                   ;
LE1BE                                                                          ;
ldy      L0000                         ; 0x1e1ce $E1BE A4 00                   ;
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e1d0 $E1C0 20 E8 EA;
jsr      bank1_code7                   ; 0x1e1d3 $E1C3 20 0C 85                ; Check for False Wall	while step on?
bcc      LE1D2                         ; 0x1e1d6 $E1C6 90 0A                   ;007 CHANGE THIS AND CAN EXIST IN TILES, COLLIDE WITH SKY?
ldy      L0000                         ; 0x1e1d8 $E1C8 A4 00                   ;
lda      $A7,x                         ; 0x1e1da $E1CA B5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
ora      bank7_table21,y               ; 0x1e1dc $E1CC 19 4E E0                ;
sta      $A7,x                         ; 0x1e1df $E1CF 95 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
rts                                    ; 0x1e1e1 $E1D1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE1D2                                                                          ;
dec      L0000                         ; 0x1e1e2 $E1D2 C6 00                   ;
dec      $01                           ; 0x1e1e4 $E1D4 C6 01                   ;
bpl      LE1BE                         ; 0x1e1e6 $E1D6 10 E6                   ;
rts                                    ; 0x1e1e8 $E1D8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Links_velocities_when_breaking_blocks_or_hitting_walls        ;
.byt    $0C                            ; 0x1e1e9 $E1D9 0C                      ;24 DC 0C F4	Values multiplied by 3
.byt    $F4                            ; 0x1e1ea $E1DA F4                      ;
LE1DB                                                                          ;
.byt    $04                            ; 0x1e1eb $E1DB 04                      ;
.byt    $FC                            ; 0x1e1ec $E1DC FC                      ;
bank7_related_to_breakable_block                                               ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e1ed $E1DD 20 C9 FF                ; Load Bank $0769
jsr      bank7_Related_to_Breakable_Blocks; 0x1e1f0 $E1E0 20 E6 E1             ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e1f3 $E1E3 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Breakable_Blocks                                              ;
lda      $0480                         ; 0x1e1f6 $E1E6 AD 80 04                ;
cmp      #$F8                          ; 0x1e1f9 $E1E9 C9 F8                   ;
bcs      LE234                         ; 0x1e1fb $E1EB B0 47                   ;
ldy      $80                           ; 0x1e1fd $E1ED A4 80                   ; Current Animation Frame for Link
cpy      #$08                          ; 0x1e1ff $E1EF C0 08                   ; 08 = Up Stab
beq      LE1F7                         ; 0x1e201 $E1F1 F0 04                   ;
cpy      #$09                          ; 0x1e203 $E1F3 C0 09                   ; 09 = Down Stab
beq      LE1F7                         ; 0x1e205 $E1F5 F0 00                   ;
LE1F7                                                                          ;
clc                                    ; 0x1e207 $E1F7 18                      ;
adc      #$03                          ; 0x1e208 $E1F8 69 03                   ;
sta      $39                           ; 0x1e20a $E1FA 85 39                   ;
lda      $047E                         ; 0x1e20c $E1FC AD 7E 04                ;
cpy      #$08                          ; 0x1e20f $E1FF C0 08                   ;
bne      LE214                         ; 0x1e211 $E201 D0 11                   ;
dec      $39                           ; 0x1e213 $E203 C6 39                   ;
dec      $39                           ; 0x1e215 $E205 C6 39                   ;
dec      $39                           ; 0x1e217 $E207 C6 39                   ;
lda      $CC                           ; 0x1e219 $E209 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e21b $E20B 18                      ;
adc      #$0A                          ; 0x1e21c $E20C 69 0A                   ;
ldy      $5F                           ; 0x1e21e $E20E A4 5F                   ; Link's facing direction
dey                                    ; 0x1e220 $E210 88                      ;
adc      LE1DB,y                       ; 0x1e221 $E211 79 DB E1                ;
LE214                                                                          ;
clc                                    ; 0x1e224 $E214 18                      ;
adc      #$04                          ; 0x1e225 $E215 69 04                   ;
adc      $072C                         ; 0x1e227 $E217 6D 2C 07                ; Scrolling Offset Low Byte
sta      $5D                           ; 0x1e22a $E21A 85 5D                   ;
lda      $072A                         ; 0x1e22c $E21C AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1e22f $E21F 69 00                   ;
sta      $4B                           ; 0x1e231 $E221 85 4B                   ;
ldx      #$10                          ; 0x1e233 $E223 A2 10                   ; X = 10
ldy      #$1C                          ; 0x1e235 $E225 A0 1C                   ; Y = 1C
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e237 $E227 20 E8 EA;sets $e $f $2 and $3	, with Y as offset: based on location of link, below his foot	;60D3	Y=B0	54B0
cmp      L851E                         ; 0x1e23a $E22A CD 1E 85                ; check for Breakable Block Tile Code
beq      LE235                         ; 0x1e23d $E22D F0 06                   ;
jsr      bank1_code7                   ; 0x1e23f $E22F 20 0C 85                ; Check for False Wall
bcs      LE26A                         ; 0x1e242 $E232 B0 36                   ;
LE234                                                                          ;
rts                                    ; 0x1e244 $E234 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE235                                                                          ;
lda      $0786                         ; 0x1e245 $E235 AD 86 07                ; Have Glove
beq      LE26A                         ; 0x1e248 $E238 F0 30                   ;
bank7_stab_brick_at_0E_with_A_and_does_draw                                    ;
lda      #$42                          ; 0x1e24a $E23A A9 42                   ; A = 42						;FUNCTION: stab brick at E with A and does draw
ldy      $02                           ; 0x1e24c $E23C A4 02                   ;
sta      (L000E),y                     ; 0x1e24e $E23E 91 0E                   ;store to side screen tile  in ram			;FUNCTION: stab brick at E with A
jsr      bank7_find_next_free_41A_X_or_something_and_write_to___associated; 0x1e250 $E240 20 92 E2;
lda      #$01                          ; 0x1e253 $E243 A9 01                   ; A = 01
sta      $041A,x                       ; 0x1e255 $E245 9D 1A 04                ;;break block by stab/stepon: ?exists/in-use
lda      #$04                          ; 0x1e258 $E248 A9 04                   ; A = 04 (04 = Sound of Block Breaking)
sta      $ED                           ; 0x1e25a $E24A 85 ED                   ; Sound Effects Type 2
lda      $39                           ; 0x1e25c $E24C A5 39                   ;
and      #$F0                          ; 0x1e25e $E24E 29 F0                   ; keep bits xxxx ....
sta      $0429,x                       ; 0x1e260 $E250 9D 29 04                ;;break block by stab/stepon: y
lda      $5D                           ; 0x1e263 $E253 A5 5D                   ;
and      #$F0                          ; 0x1e265 $E255 29 F0                   ; keep bits xxxx ....
sta      $0424,x                       ; 0x1e267 $E257 9D 24 04                ;;break block by stab/stepon: X
lda      $4B                           ; 0x1e26a $E25A A5 4B                   ;
sta      $041F,x                       ; 0x1e26c $E25C 9D 1F 04                ;;break block by stab/stepon: map page
lda      $80                           ; 0x1e26f $E25F A5 80                   ; Current Animation Frame for Link
sec                                    ; 0x1e271 $E261 38                      ;
sbc      #$08                          ; 0x1e272 $E262 E9 08                   ;
cmp      #$02                          ; 0x1e274 $E264 C9 02                   ;
bcc      LE28C                         ; 0x1e276 $E266 90 24                   ;
bcs      LE277                         ; 0x1e278 $E268 B0 0D                   ;
LE26A                                                                          ;
lda      $80                           ; 0x1e27a $E26A A5 80                   ; Current Animation Frame for Link
sec                                    ; 0x1e27c $E26C 38                      ;
sbc      #$08                          ; 0x1e27d $E26D E9 08                   ;
cmp      #$02                          ; 0x1e27f $E26F C9 02                   ;
bcc      LE28B                         ; 0x1e281 $E271 90 18                   ;
lda      #$02                          ; 0x1e283 $E273 A9 02                   ; A = 02 (sound of wall hit by sword)
sta      $EC                           ; 0x1e285 $E275 85 EC                   ; Sound Effects Type 1
LE277                                                                          ;
lda      #$18                          ; 0x1e287 $E277 A9 18                   ; A = 18
sta      $0502                         ; 0x1e289 $E279 8D 02 05                ;; Timer
ldy      #$00                          ; 0x1e28c $E27C A0 00                   ; Y = 00
lda      $047E                         ; 0x1e28e $E27E AD 7E 04                ;
cmp      $CC                           ; 0x1e291 $E281 C5 CC                   ; Link's X Position on Screen
bcc      LE286                         ; 0x1e293 $E283 90 01                   ;
iny                                    ; 0x1e295 $E285 C8                      ;
LE286                                                                          ;
lda      bank7_Related_to_Links_velocities_when_breaking_blocks_or_hitting_walls,y; 0x1e296 $E286 B9 D9 E1;
sta      $70                           ; 0x1e299 $E289 85 70                   ; Link's X Velocity
LE28B                                                                          ;
rts                                    ; 0x1e29b $E28B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE28C                                                                          ;
lda      #$00                          ; 0x1e29c $E28C A9 00                   ; A = 00
sta      $057D                         ; 0x1e29e $E28E 8D 7D 05                ; Link's Y Velocity
rts                                    ; 0x1e2a1 $E291 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_find_next_free_41A_X_or_something_and_write_to___associated              ;
ldx      #$04                          ; 0x1e2a2 $E292 A2 04                   ; X = 04
LE294                                                                          ;
lda      $041A,x                       ; 0x1e2a4 $E294 BD 1A 04                ;;break block by stab/stepon: ?exists/in-use
beq      LE29E                         ; 0x1e2a7 $E297 F0 05                   ;
dex                                    ; 0x1e2a9 $E299 CA                      ;
bpl      LE294                         ; 0x1e2aa $E29A 10 F8                   ;
ldx      #$00                          ; 0x1e2ac $E29C A2 00                   ; X = 00
LE29E                                                                          ;
ldy      $02                           ; 0x1e2ae $E29E A4 02                   ;
tya                                    ; 0x1e2b0 $E2A0 98                      ;
sta      $042E,x                       ; 0x1e2b1 $E2A1 9D 2E 04                ;
lda      L000E                         ; 0x1e2b4 $E2A4 A5 0E                   ;
sta      $0433,x                       ; 0x1e2b6 $E2A6 9D 33 04                ;;break block by stab/stepon: ?addy (low)
lda      $0F                           ; 0x1e2b9 $E2A9 A5 0F                   ;
sta      $0438,x                       ; 0x1e2bb $E2AB 9D 38 04                ;;break block by stab/stepon: ?addy (high)
LE2AE                                                                          ;
rts                                    ; 0x1e2be $E2AE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Enemy_Damage                                                   ;
.byt    $10,$0C,$0C,$0C,$08,$04,$04,$04; 0x1e2bf $E2AF 10 0C 0C 0C 08 04 04 04 ;Damage Code 0
.byt    $20,$1C,$14,$10,$0C,$0C,$08,$08; 0x1e2c7 $E2B7 20 1C 14 10 0C 0C 08 08 ;Damage Code 1
.byt    $30,$28,$24,$20,$18,$14,$10,$0C; 0x1e2cf $E2BF 30 28 24 20 18 14 10 0C ;Damage Code 2
.byt    $60,$48,$38,$30,$28,$20,$1C,$18; 0x1e2d7 $E2C7 60 48 38 30 28 20 1C 18 ;Damage Code 3
.byt    $90,$78,$60,$48,$38,$30,$28,$20; 0x1e2df $E2CF 90 78 60 48 38 30 28 20 ;Damage Code 4
.byt    $E0,$A0,$80,$70,$60,$50,$40,$30; 0x1e2e7 $E2D7 E0 A0 80 70 60 50 40 30 ;Damage Code 5
.byt    $E0,$C0,$A0,$90,$80,$70,$60,$50; 0x1e2ef $E2DF E0 C0 A0 90 80 70 60 50 ;Damage Code 6
                                                                               ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1e2f7 $E2E7 FF FF FF FF FF FF FF FF ;Damage Code 7
; ---------------------------------------------------------------------------- ;
bank7_Link_Hit_Routine                                                         ;
ldy      $A1,x                         ; 0x1e2ff $E2EF B4 A1                   ; Enemy Code
lda      $0518                         ; 0x1e301 $E2F1 AD 18 05                ; Timer for Link immunity (0 = vulnerable)
bne      LE308                         ; 0x1e304 $E2F4 D0 12                   ; if Link Invulnerable, skip to $1E308
lda      $6DD5,y                       ; 0x1e306 $E2F6 B9 D5 6D                ; load Enemy Bits; load Enemy Bits (from RAM)
and      #$10                          ; 0x1e309 $E2F9 29 10                   ; keep bits ...x .... (Steal Points bit); keep bits .... xxxx (Experience bits)
beq      LE305                         ; 0x1e30b $E2FB F0 08                   ; if 0, skip to $1E305
lda      #$0A                          ; 0x1e30d $E2FD A9 0A                   ; A = 0A (lose 10 exp. when hit)
cpy      #$06                          ; 0x1e30f $E2FF C0 06                   ; if Enemy Code NOT 6 (Moa); restore Y to its original value
bne      LE305                         ; 0x1e311 $E301 D0 02                   ; skip
lda      #$14                          ; 0x1e313 $E303 A9 14                   ; else A = 14 (lose 20 exp. when hit)
LE305                                                                          ;
sta      $05E8                         ; 0x1e315 $E305 8D E8 05                ; amount of exp. to lose
LE308                                                                          ;
lda      $6DF9,y                       ; 0x1e318 $E308 B9 F9 6D                ; Enemy Vulnerability/Damage Code
and      #$0F                          ; 0x1e31b $E30B 29 0F                   ; keep bits .... xxxx
LE30D                                                                          ;
sta      $0C                           ; 0x1e31d $E30D 85 0C                   ;
lda      $0518                         ; 0x1e31f $E30F AD 18 05                ; Timer for Link being immune from attacks
bne      LE368                         ; 0x1e322 $E312 D0 54                   ; if Invulnerable (Not 0), skip to $1E368
lda      #$01                          ; 0x1e324 $E314 A9 01                   ; A = 01					;link hurt sound
sta      $E9                           ; 0x1e326 $E316 85 E9                   ;
sta      L0000                         ; 0x1e328 $E318 85 00                   ;
jsr      bank7_Set_Links_Recoil        ; 0x1e32a $E31A 20 99 E3                ; set Link's recoil
lda      $0C                           ; 0x1e32d $E31D A5 0C                   ; Code for amount of Life to lose (0-7)
asl                                    ; 0x1e32f $E31F 0A                      ;
asl                                    ; 0x1e330 $E320 0A                      ;
asl                                    ; 0x1e331 $E321 0A                      ;
adc      $0779                         ; 0x1e332 $E322 6D 79 07                ; Add Life Power (1-8)
tay                                    ; 0x1e335 $E325 A8                      ;
lda      LE2AE,y                       ; 0x1e336 $E326 B9 AE E2                ; refer to table at 1E2AF (Enemy Damage)
ldy      $070F                         ; 0x1e339 $E329 AC 0F 07                ; Color of Link after Shield Spell
beq      LE32F                         ; 0x1e33c $E32C F0 01                   ;
lsr                                    ; 0x1e33e $E32E 4A                      ; Divide by 2 (if Shield is cast)
LE32F                                                                          ;
sta      $0C                           ; 0x1e33f $E32F 85 0C                   ;
lda      $0774                         ; 0x1e341 $E331 AD 74 07                ; Current Life left in meter
sec                                    ; 0x1e344 $E334 38                      ;
sbc      $0C                           ; 0x1e345 $E335 E5 0C                   ;
sta      $0774                         ; 0x1e347 $E337 8D 74 07                ;; Hit Points; Current Life left in meter
lda      $074F                         ; 0x1e34a $E33A AD 4F 07                ;; Related to Pause Pane
ora      #$40                          ; 0x1e34d $E33D 09 40                   ; set bits  .x.. ....
sta      $074F                         ; 0x1e34f $E33F 8D 4F 07                ;; Related to Pause Pane
bcs      LE34C                         ; 0x1e352 $E342 B0 08                   ;
lda      #$00                          ; 0x1e354 $E344 A9 00                   ; A = 00
sta      $0774                         ; 0x1e356 $E346 8D 74 07                ; Current Life left in meter
inc      $0494                         ; 0x1e359 $E349 EE 94 04                ;kill link
LE34C                                                                          ;
lda      #$20                          ; 0x1e35c $E34C A9 20                   ; A = 20
sta      $050C                         ; 0x1e35e $E34E 8D 0C 05                ; Timer for Link being in injured state
lda      #$04                          ; 0x1e361 $E351 A9 04                   ; A = 04
sta      $0518                         ; 0x1e363 $E353 8D 18 05                ; Timer for Link being immune (0 = vulnerable)
lda      #$00                          ; 0x1e366 $E356 A9 00                   ; A = 00
sta      $0400                         ; 0x1e368 $E358 8D 00 04                ; Sword slash frame code
lda      $A7                           ; 0x1e36b $E35B A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$FB                          ; 0x1e36d $E35D 29 FB                   ; keep bits xxxx x.xx
sta      $A7                           ; 0x1e36f $E35F 85 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$FE                          ; 0x1e371 $E361 A9 FE                   ; A = FE
sta      $057D                         ; 0x1e373 $E363 8D 7D 05                ; Link's Y Velocity when hit
sec                                    ; 0x1e376 $E366 38                      ;
rts                                    ; 0x1e377 $E367 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE368                                                                          ;
clc                                    ; 0x1e378 $E368 18                      ;
LE369                                                                          ;
rts                                    ; 0x1e379 $E369 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_various_recoil_variables                                       ;
;0C = recoil when hit by Flying Blade - Facing left                            ;
;F4 = recoil when hit by Flying Blade - Facing right                           ;
;0C =                                                                          ;
;04 = recoil when Link is hit on shield, when Link hits - Facing left          ;
;FC = recoil when Link is hit on shield, when Link hits - Facing right         ;
;                                                                              ;
;Doesn't apply to all enemies                                                  ;
;Mostly ground enemies with weapons, but also Moa                              ;
;                                                                              ;
;0D = X Velocity when Link is hit - Facing left                                ;
;F3 = X Velocity when Link is hit - Facing right                               ;
;                                                                              ;
;This applies to being hit by the enemy itself, but not its weapon             ;
.byt    $0C,$F4                        ; 0x1e37a $E36A 0C F4                   ;
LE36C                                                                          ;
.byt    $0C,$04,$FC,$0D,$F3            ; 0x1e37c $E36C 0C 04 FC 0D F3          ;
; ---------------------------------------------------------------------------- ;
bank7_code37                                                                   ;
lda      #$00                          ; 0x1e381 $E371 A9 00                   ; A = 00
sta      L0000                         ; 0x1e383 $E373 85 00                   ;
lda      $0B                           ; 0x1e385 $E375 A5 0B                   ;
bne      LE381                         ; 0x1e387 $E377 D0 08                   ;
lda      #$18                          ; 0x1e389 $E379 A9 18                   ; A = 18
sta      $0502                         ; 0x1e38b $E37B 8D 02 05                ;; Timer
jsr      bank7_Set_Links_Recoil        ; 0x1e38e $E37E 20 99 E3                ;
LE381                                                                          ;
lda      $60,x                         ; 0x1e391 $E381 B5 60                   ;; Enemy facing direction
pha                                    ; 0x1e393 $E383 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e394 $E384 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1e397 $E387 68                      ;
sta      $60,x                         ; 0x1e398 $E388 95 60                   ;; Enemy facing direction
iny                                    ; 0x1e39a $E38A C8                      ;
iny                                    ; 0x1e39b $E38B C8                      ;
LE38C                                                                          ;
lda      LE369,y                       ; 0x1e39c $E38C B9 69 E3                ;
ldy      $040E,x                       ; 0x1e39f $E38F BC 0E 04                ; Enemy Hit State (0 = not in Hit State)
beq      LE395                         ; 0x1e3a2 $E392 F0 01                   ;
asl                                    ; 0x1e3a4 $E394 0A                      ;
LE395                                                                          ;
sta      $043E,x                       ; 0x1e3a5 $E395 9D 3E 04                ;
rts                                    ; 0x1e3a8 $E398 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_Links_Recoil                                                         ;
lda      $A7                           ; 0x1e3a9 $E399 A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$03                          ; 0x1e3ab $E39B 29 03                   ; keep bits .... ..xx
sta      $0D                           ; 0x1e3ad $E39D 85 0D                   ;
lda      $60,x                         ; 0x1e3af $E39F B5 60                   ; Enemy facing direction
pha                                    ; 0x1e3b1 $E3A1 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e3b2 $E3A2 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1e3b5 $E3A5 68                      ;
sta      $60,x                         ; 0x1e3b6 $E3A6 95 60                   ; Enemy facing direction
iny                                    ; 0x1e3b8 $E3A8 C8                      ;
cpy      $0D                           ; 0x1e3b9 $E3A9 C4 0D                   ;
beq      LE3B8                         ; 0x1e3bb $E3AB F0 0B                   ;
lda      L0000                         ; 0x1e3bd $E3AD A5 00                   ;
beq      LE3B3                         ; 0x1e3bf $E3AF F0 02                   ;
LE3B1                                                                          ;
iny                                    ; 0x1e3c1 $E3B1 C8                      ;
iny                                    ; 0x1e3c2 $E3B2 C8                      ;
LE3B3                                                                          ;
lda      LE36C,y                       ; 0x1e3c3 $E3B3 B9 6C E3                ;
sta      $70                           ; 0x1e3c6 $E3B6 85 70                   ; Link's X Velocity
LE3B8                                                                          ;
rts                                    ; 0x1e3c8 $E3B8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE3B9                                                                          ;
lda      $12                           ; 0x1e3c9 $E3B9 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1e3cb $E3BB 4A                      ;
txa                                    ; 0x1e3cc $E3BC 8A                      ;
and      #$01                          ; 0x1e3cd $E3BD 29 01                   ; keep bits .... ...x
bne      LE3C7                         ; 0x1e3cf $E3BF D0 06                   ;
php                                    ; 0x1e3d1 $E3C1 08                      ;
pla                                    ; 0x1e3d2 $E3C2 68                      ;
eor      #$01                          ; 0x1e3d3 $E3C3 49 01                   ; flip bits .... ...x
pha                                    ; 0x1e3d5 $E3C5 48                      ;
plp                                    ; 0x1e3d6 $E3C6 28                      ;
LE3C7                                                                          ;
bcs      LE3B8                         ; 0x1e3d7 $E3C7 B0 EF                   ;
jsr      LE469                         ; 0x1e3d9 $E3C9 20 69 E4                ;
ldy      $87,x                         ; 0x1e3dc $E3CC B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e3de $E3CE B9 17 6D                ;
and      #$C0                          ; 0x1e3e1 $E3D1 29 C0                   ; keep bits xx.. ....
cmp      #$80                          ; 0x1e3e3 $E3D3 C9 80                   ;
bne      LE3DD                         ; 0x1e3e5 $E3D5 D0 06                   ;
ldy      $0710                         ; 0x1e3e7 $E3D7 AC 10 07                ; Reflect Spell effect (01 = activated)
beq      LE442                         ; 0x1e3ea $E3DA F0 66                   ;
asl                                    ; 0x1e3ec $E3DC 0A                      ;
LE3DD                                                                          ;
sta      $D9                           ; 0x1e3ed $E3DD 85 D9                   ;; Thunder Spell modifier ?
ldy      #$02                          ; 0x1e3ef $E3DF A0 02                   ; Y = 02
lda      $77,x                         ; 0x1e3f1 $E3E1 B5 77                   ; Projectile X Velocity
beq      LE3ED                         ; 0x1e3f3 $E3E3 F0 08                   ;
bmi      LE3E8                         ; 0x1e3f5 $E3E5 30 01                   ;
dey                                    ; 0x1e3f7 $E3E7 88                      ;
LE3E8                                                                          ;
tya                                    ; 0x1e3f8 $E3E8 98                      ;
cmp      $66,x                         ; 0x1e3f9 $E3E9 D5 66                   ; Projectile facing direction
bne      LE441                         ; 0x1e3fb $E3EB D0 54                   ;
LE3ED                                                                          ;
lda      $13                           ; 0x1e3fd $E3ED A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      LE442                         ; 0x1e3ff $E3EF D0 51                   ;
jsr      bank7_code45                  ; 0x1e401 $E3F1 20 D8 E9                ;
jsr      bank7_idem__maybe             ; 0x1e404 $E3F4 20 F9 E9                ;
bcc      LE442                         ; 0x1e407 $E3F7 90 49                   ;
lda      $D9                           ; 0x1e409 $E3F9 A5 D9                   ;; Thunder Spell modifier ?
beq      LE413                         ; 0x1e40b $E3FB F0 16                   ;
cmp      #$40                          ; 0x1e40d $E3FD C9 40                   ;
beq      bank7_code38                  ; 0x1e40f $E3FF F0 30                   ;
lda      $0710                         ; 0x1e411 $E401 AD 10 07                ; Reflect Spell effect (01 = activated)
beq      LE413                         ; 0x1e414 $E404 F0 0D                   ;
lda      #$00                          ; 0x1e416 $E406 A9 00                   ; A = 00
sta      $044C,x                       ; 0x1e418 $E408 9D 4C 04                ;
jsr      bank7_code38                  ; 0x1e41b $E40B 20 31 E4                ;
asl      $77,x                         ; 0x1e41e $E40E 16 77                   ; Projectile X Velocity
asl      $77,x                         ; 0x1e420 $E410 16 77                   ; Projectile X Velocity
rts                                    ; 0x1e422 $E412 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE413                                                                          ;
ldy      $87,x                         ; 0x1e423 $E413 B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e425 $E415 B9 17 6D                ;
ldy      #$10                          ; 0x1e428 $E418 A0 10                   ; Y = 10 (sound for absorbed projectile)
and      #$10                          ; 0x1e42a $E41A 29 10                   ; keep bits ...x ....
beq      LE424                         ; 0x1e42c $E41C F0 06                   ;
lda      #$02                          ; 0x1e42e $E41E A9 02                   ; A = 02
sta      $EC                           ; 0x1e430 $E420 85 EC                   ; Sound Effects Type 1
ldy      #$00                          ; 0x1e432 $E422 A0 00                   ; Y = 00
LE424                                                                          ;
sty      $EE                           ; 0x1e434 $E424 84 EE                   ; Sound Effects Type 3
dec      $30,x                         ; 0x1e436 $E426 D6 30                   ;; Projectile Y Position
dec      $30,x                         ; 0x1e438 $E428 D6 30                   ;; Projectile Y Position
lda      #$F2                          ; 0x1e43a $E42A A9 F2                   ; A = F2
sta      $87,x                         ; 0x1e43c $E42C 95 87                   ;; Projectile Type
LE42E                                                                          ;
rts                                    ; 0x1e43e $E42E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table23                                                                  ;
.byt    $F8,$08                        ; 0x1e43f $E42F F8 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_code38                                                                   ;
lda      #$10                          ; 0x1e441 $E431 A9 10                   ; A = 10
sta      $EE                           ; 0x1e443 $E433 85 EE                   ; Sound Effects Type 3
ldy      $66,x                         ; 0x1e445 $E435 B4 66                   ; Projectile facing direction
lda      LE42E,y                       ; 0x1e447 $E437 B9 2E E4                ;
sta      $77,x                         ; 0x1e44a $E43A 95 77                   ; Projectile X Velocity
lda      #$F8                          ; 0x1e44c $E43C A9 F8                   ; A = F8 (Y Velocity after shield hit)
sta      $0584,x                       ; 0x1e44e $E43E 9D 84 05                ; Projectile Y Velocity
LE441                                                                          ;
rts                                    ; 0x1e451 $E441 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE442                                                                          ;
jsr      bank7_code43                  ; 0x1e452 $E442 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e455 $E445 20 F9 E9                ;
bcc      LE441                         ; 0x1e458 $E448 90 F7                   ;
ldy      $87,x                         ; 0x1e45a $E44A B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e45c $E44C B9 17 6D                ;
and      #$20                          ; 0x1e45f $E44F 29 20                   ; keep bits ..x. ....
bne      LE457                         ; 0x1e461 $E451 D0 04                   ;
lda      #$00                          ; 0x1e463 $E453 A9 00                   ; A = 00
sta      $87,x                         ; 0x1e465 $E455 95 87                   ;; Projectile Type
LE457                                                                          ;
lda      $0518                         ; 0x1e467 $E457 AD 18 05                ;; Invulnerable Timeout (01-02 - Blinking, 03+ - Not Blinking); Timer for Link being immune from attacks
bne      LE441                         ; 0x1e46a $E45A D0 E5                   ;
lda      $6D17,y                       ; 0x1e46c $E45C B9 17 6D                ;
and      #$07                          ; 0x1e46f $E45F 29 07                   ; keep bits .... .xxx
jsr      LE30D                         ; 0x1e471 $E461 20 0D E3                ;
ldy      $66,x                         ; 0x1e474 $E464 B4 66                   ;; Projectile facing direction
jmp      LE3B1                         ; 0x1e476 $E466 4C B1 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE469                                                                          ;
ldy      $87,x                         ; 0x1e479 $E469 B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e47b $E46B B9 17 6D                ;
ldy      #$03                          ; 0x1e47e $E46E A0 03                   ; Y = 03
and      #$08                          ; 0x1e480 $E470 29 08                   ; keep bits .... x...
beq      LE476                         ; 0x1e482 $E472 F0 02                   ;
ldy      #$0A                          ; 0x1e484 $E474 A0 0A                   ; Y = 0A
LE476                                                                          ;
sty      $06                           ; 0x1e486 $E476 84 06                   ;
lda      $30,x                         ; 0x1e488 $E478 B5 30                   ;; Projectile Y Position
clc                                    ; 0x1e48a $E47A 18                      ;
adc      #$07                          ; 0x1e48b $E47B 69 07                   ;
sta      $05                           ; 0x1e48d $E47D 85 05                   ;
lda      #$02                          ; 0x1e48f $E47F A9 02                   ; A = 02
sta      $07                           ; 0x1e491 $E481 85 07                   ;
lda      $CE                           ; 0x1e493 $E483 A5 CE                   ;
clc                                    ; 0x1e495 $E485 18                      ;
adc      #$03                          ; 0x1e496 $E486 69 03                   ;
sta      $04                           ; 0x1e498 $E488 85 04                   ;
LE48A                                                                          ;
rts                                    ; 0x1e49a $E48A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE48B                                                                          ;
lda      $B6,x                         ; 0x1e49b $E48B B5 B6                   ; Generated Enemy Slot
cmp      #$01                          ; 0x1e49d $E48D C9 01                   ;
bne      LE4BB                         ; 0x1e49f $E48F D0 2A                   ;
lda      $040E,x                       ; 0x1e4a1 $E491 BD 0E 04                ; Enemy Hit State (0 = not in Hit State)
bne      LE4BB                         ; 0x1e4a4 $E494 D0 25                   ;
ldy      #$01                          ; 0x1e4a6 $E496 A0 01                   ; Y = 01
LE498                                                                          ;
sty      $11                           ; 0x1e4a8 $E498 84 11                   ;
lda      $8D,y                         ; 0x1e4aa $E49A B9 8D 00                ; Flying Blade/Flame slot
beq      LE4B8                         ; 0x1e4ad $E49D F0 19                   ;
bmi      LE4B8                         ; 0x1e4af $E49F 30 17                   ;
jsr      LE4BC                         ; 0x1e4b1 $E4A1 20 BC E4                ;
lda      #$01                          ; 0x1e4b4 $E4A4 A9 01                   ; A = 01
sta      $0B                           ; 0x1e4b6 $E4A6 85 0B                   ;
jsr      LE694                         ; 0x1e4b8 $E4A8 20 94 E6                ;
ldy      $11                           ; 0x1e4bb $E4AB A4 11                   ;
bcc      LE4B8                         ; 0x1e4bd $E4AD 90 09                   ;
lda      $6D,y                         ; 0x1e4bf $E4AF B9 6D 00                ;
tay                                    ; 0x1e4c2 $E4B2 A8                      ;
jmp      LE38C                         ; 0x1e4c3 $E4B3 4C 8C E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ldy      $11                           ; 0x1e4c6 $E4B6 A4 11                   ;
LE4B8                                                                          ;
dey                                    ; 0x1e4c8 $E4B8 88                      ;
bpl      LE498                         ; 0x1e4c9 $E4B9 10 DD                   ;
LE4BB                                                                          ;
rts                                    ; 0x1e4cb $E4BB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE4BC                                                                          ;
lda      $5A,y                         ; 0x1e4cc $E4BC B9 5A 00                ; Flying Blade/Flame X Position (low byte)
sec                                    ; 0x1e4cf $E4BF 38                      ;
sbc      $072C                         ; 0x1e4d0 $E4C0 ED 2C 07                ; Scrolling Offset Low Byte
clc                                    ; 0x1e4d3 $E4C3 18                      ;
adc      #$02                          ; 0x1e4d4 $E4C4 69 02                   ;
sta      L0000                         ; 0x1e4d6 $E4C6 85 00                   ;
lda      #$04                          ; 0x1e4d8 $E4C8 A9 04                   ; A = 04
sta      $02                           ; 0x1e4da $E4CA 85 02                   ;
lda      $36,y                         ; 0x1e4dc $E4CC B9 36 00                ; Flying Blade/Flame Y Position
clc                                    ; 0x1e4df $E4CF 18                      ;
adc      #$04                          ; 0x1e4e0 $E4D0 69 04                   ;
sta      $01                           ; 0x1e4e2 $E4D2 85 01                   ;
lda      #$06                          ; 0x1e4e4 $E4D4 A9 06                   ; A = 06
sta      $03                           ; 0x1e4e6 $E4D6 85 03                   ;
rts                                    ; 0x1e4e8 $E4D8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE4D9                                                                          ;
lda      $A1,x                         ; 0x1e4e9 $E4D9 B5 A1                   ; Enemy Code
cmp      #$13                          ; 0x1e4eb $E4DB C9 13                   ; 13 = Elevator
beq      LE4F7                         ; 0x1e4ed $E4DD F0 18                   ;
ldy      $0707                         ; 0x1e4ef $E4DF AC 07 07                ; Current World
dey                                    ; 0x1e4f2 $E4E2 88                      ;
cpy      #$02                          ; 0x1e4f3 $E4E3 C0 02                   ;
bcc      LE4F7                         ; 0x1e4f5 $E4E5 90 10                   ;
lda      $12                           ; 0x1e4f7 $E4E7 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1e4f9 $E4E9 4A                      ;
txa                                    ; 0x1e4fa $E4EA 8A                      ;
and      #$01                          ; 0x1e4fb $E4EB 29 01                   ; keep bits .... ...x
bne      LE4F5                         ; 0x1e4fd $E4ED D0 06                   ;
php                                    ; 0x1e4ff $E4EF 08                      ;
pla                                    ; 0x1e500 $E4F0 68                      ;
eor      #$01                          ; 0x1e501 $E4F1 49 01                   ; flip bits .... ...x
pha                                    ; 0x1e503 $E4F3 48                      ;
plp                                    ; 0x1e504 $E4F4 28                      ;
LE4F5                                                                          ;
bcs      LE54F                         ; 0x1e505 $E4F5 B0 58                   ;
LE4F7                                                                          ;
lda      $B6,x                         ; 0x1e507 $E4F7 B5 B6                   ; Generated Enemy Slot
cmp      #$01                          ; 0x1e509 $E4F9 C9 01                   ;
bne      LE54F                         ; 0x1e50b $E4FB D0 52                   ;
lda      $040E,x                       ; 0x1e50d $E4FD BD 0E 04                ; Enemy Hit State (0 = not in Hit State)
bne      LE54F                         ; 0x1e510 $E500 D0 4D                   ;
lda      $C8                           ; 0x1e512 $E502 A5 C8                   ;; go outside: set $c8 to 3
and      #$06                          ; 0x1e514 $E504 29 06                   ; keep bits .... .xx.
asl                                    ; 0x1e516 $E506 0A                      ;
ora      $C9                           ; 0x1e517 $E507 05 C9                   ;
and      #$FC                          ; 0x1e519 $E509 29 FC                   ; keep bits xxxx xx..
bne      LE54F                         ; 0x1e51b $E50B D0 42                   ;
jsr      LE942                         ; 0x1e51d $E50D 20 42 E9                ;
jsr      bank7_code43                  ; 0x1e520 $E510 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e523 $E513 20 F9 E9                ;
bcc      LE54F                         ; 0x1e526 $E516 90 37                   ;
lda      $A8,x                         ; 0x1e528 $E518 B5 A8                   ; Enemy State ?
ora      #$10                          ; 0x1e52a $E51A 09 10                   ; set  bits ...x ....
sta      $A8,x                         ; 0x1e52c $E51C 95 A8                   ;; Enemy State
lda      $A1,x                         ; 0x1e52e $E51E B5 A1                   ; Enemy Code
cmp      #$01                          ; 0x1e530 $E520 C9 01                   ; 01 = Red Jar
bne      LE555                         ; 0x1e532 $E522 D0 31                   ;
lda      $AF,x                         ; 0x1e534 $E524 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e536 $E526 29 7F                   ; keep bits .xxx xxxx
cmp      #$08                          ; 0x1e538 $E528 C9 08                   ;
bcc      LE538                         ; 0x1e53a $E52A 90 0C                   ;
cmp      #$0E                          ; 0x1e53c $E52C C9 0E                   ;
bcc      LE555                         ; 0x1e53e $E52E 90 25                   ;
cmp      #$10                          ; 0x1e540 $E530 C9 10                   ;
beq      LE555                         ; 0x1e542 $E532 F0 21                   ;
cmp      #$11                          ; 0x1e544 $E534 C9 11                   ;
beq      LE555                         ; 0x1e546 $E536 F0 1D                   ;
LE538                                                                          ;
jsr      bank7_get_item                ; 0x1e548 $E538 20 71 E7                ;
lda      #$70                          ; 0x1e54b $E53B A9 70                   ; A = 70
sta      $049C                         ; 0x1e54d $E53D 8D 9C 04                ;;hold item above head: timer
lda      #$00                          ; 0x1e550 $E540 A9 00                   ; A = 00
sta      $057D                         ; 0x1e552 $E542 8D 7D 05                ; Link's Y Velocity
sta      $70                           ; 0x1e555 $E545 85 70                   ; Link's X Velocity
lda      $AF,x                         ; 0x1e557 $E547 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e559 $E549 29 7F                   ; keep bits .xxx xxxx
sta      $049D                         ; 0x1e55b $E54B 8D 9D 04                ; Related to Palace Item
rts                                    ; 0x1e55e $E54E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE54F                                                                          ;
lda      $A8,x                         ; 0x1e55f $E54F B5 A8                   ; Enemy State ?
and      #$EF                          ; 0x1e561 $E551 29 EF                   ; keep bits xxx. xxxx
sta      $A8,x                         ; 0x1e563 $E553 95 A8                   ;; Enemy State
LE555                                                                          ;
rts                                    ; 0x1e565 $E555 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_X_Velocity_when_Link_is_hit_                                   ;
.byt    $18,$E8                        ; 0x1e566 $E556 18 E8                   ;
; ---------------------------------------------------------------------------- ;
bank7_code39                                                                   ;
lda      $0710                         ; 0x1e568 $E558 AD 10 07                ; Reflect Spell effect
bne      LE563                         ; 0x1e56b $E55B D0 06                   ;
lda      $A1,x                         ; 0x1e56d $E55D B5 A1                   ; Enemy Code
cmp      #$17                          ; 0x1e56f $E55F C9 17                   ; 17 = Orange Daira
bcs      LE579                         ; 0x1e571 $E561 B0 16                   ;
LE563                                                                          ;
jsr      bank7_check_if_shield_protects_from_sword_hit; 0x1e573 $E563 20 F3 E5 ; check if shield protects from sword hit
jsr      bank7_code45                  ; 0x1e576 $E566 20 D8 E9                ; idem ?
jsr      bank7_idem__maybe             ; 0x1e579 $E569 20 F9 E9                ; idem ?
bcc      LE579                         ; 0x1e57c $E56C 90 0B                   ; if Carry set, shield protects
lda      #$02                          ; 0x1e57e $E56E A9 02                   ; A = 02 (sound of enemy sword hit shield)
sta      $EC                           ; 0x1e580 $E570 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$00                          ; 0x1e582 $E572 A9 00                   ; A = 00
sta      $0B                           ; 0x1e584 $E574 85 0B                   ;
jmp      bank7_code37                  ; 0x1e586 $E576 4C 71 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE579                                                                          ;
jsr      bank7_check_if_shield_protects_from_sword_hit; 0x1e589 $E579 20 F3 E5 ;
jsr      bank7_code43                  ; 0x1e58c $E57C 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e58f $E57F 20 F9 E9                ;
bcc      LE5F2                         ; 0x1e592 $E582 90 6E                   ; if Carry set, Link is hit (sword or spike)
jsr      bank7_Link_Hit_Routine        ; 0x1e594 $E584 20 EF E2                ; Link Hit Routine
bcc      LE59B                         ; 0x1e597 $E587 90 12                   ;
lda      $0444,x                       ; 0x1e599 $E589 BD 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
cmp      #$02                          ; 0x1e59c $E58C C9 02                   ;
bcc      LE59B                         ; 0x1e59e $E58E 90 0B                   ;
asl      $057D                         ; 0x1e5a0 $E590 0E 7D 05                ; Link's Y Velocity * 2 (hit by strong boss)
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e5a3 $E593 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_X_Velocity_when_Link_is_hit_,y; 0x1e5a6 $E596 B9 56 E5;
sta      $70                           ; 0x1e5a9 $E599 85 70                   ; Link's X Velocity
LE59B                                                                          ;
rts                                    ; 0x1e5ab $E59B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Ironknuckle_Shield_protection                                 ;
.byt    $12,$00,$05,$10,$05,$02,$02    ; 0x1e5ac $E59C 12 00 05 10 05 02 02    ;
LE5A3                                                                          ;
.byt    $08,$0D,$20,$10,$20,$0D,$10    ; 0x1e5b3 $E5A3 08 0D 20 10 20 0D 10    ;
LE5AA                                                                          ;
.byt    $00,$00,$00,$FC,$00,$FF,$02    ; 0x1e5ba $E5AA 00 00 00 FC 00 FF 02    ;
LE5B1                                                                          ;
.byt    $02,$02,$10,$18,$0F,$12        ; 0x1e5c1 $E5B1 02 02 10 18 0F 12       ;
LE5B7                                                                          ;
.byt    $14,$F0,$00                    ; 0x1e5c7 $E5B7 14 F0 00                ;
; ---------------------------------------------------------------------------- ;
bank7_code40                                                                   ;
lda      $2A,x                         ; 0x1e5ca $E5BA B5 2A                   ; Enemy Y Position
ldy      $0444,x                       ; 0x1e5cc $E5BC BC 44 04                ; Enemy Vulnerability
clc                                    ; 0x1e5cf $E5BF 18                      ;
adc      bank7_Related_to_Ironknuckle_Shield_protection,y; 0x1e5d0 $E5C0 79 9C E5;
sta      $05                           ; 0x1e5d3 $E5C3 85 05                   ;
lda      LE5A3,y                       ; 0x1e5d5 $E5C5 B9 A3 E5                ;
sta      $07                           ; 0x1e5d8 $E5C8 85 07                   ;
lda      $CD                           ; 0x1e5da $E5CA A5 CD                   ;
adc      LE5AA,y                       ; 0x1e5dc $E5CC 79 AA E5                ;
sta      $04                           ; 0x1e5df $E5CF 85 04                   ;
lda      LE5B1,y                       ; 0x1e5e1 $E5D1 B9 B1 E5                ;
sta      $06                           ; 0x1e5e4 $E5D4 85 06                   ;
cpy      #$02                          ; 0x1e5e6 $E5D6 C0 02                   ;
bcs      LE5E5                         ; 0x1e5e8 $E5D8 B0 0B                   ;
lda      $60,x                         ; 0x1e5ea $E5DA B5 60                   ;; Enemy facing direction
lsr                                    ; 0x1e5ec $E5DC 4A                      ;
bcc      LE5E5                         ; 0x1e5ed $E5DD 90 06                   ;
lda      $04                           ; 0x1e5ef $E5DF A5 04                   ;
adc      #$0D                          ; 0x1e5f1 $E5E1 69 0D                   ;
sta      $04                           ; 0x1e5f3 $E5E3 85 04                   ;
LE5E5                                                                          ;
cpy      #$04                          ; 0x1e5f5 $E5E5 C0 04                   ;
bne      LE5F2                         ; 0x1e5f7 $E5E7 D0 09                   ;
ldy      $60,x                         ; 0x1e5f9 $E5E9 B4 60                   ;; Enemy facing direction
lda      $04                           ; 0x1e5fb $E5EB A5 04                   ;
adc      LE5B7,y                       ; 0x1e5fd $E5ED 79 B7 E5                ;
sta      $04                           ; 0x1e600 $E5F0 85 04                   ;
LE5F2                                                                          ;
rts                                    ; 0x1e602 $E5F2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_check_if_shield_protects_from_sword_hit                                  ;
ldy      $91,x                         ; 0x1e603 $E5F3 B4 91                   ;
lda      $0210,y                       ; 0x1e605 $E5F5 B9 10 02                ;
clc                                    ; 0x1e608 $E5F8 18                      ;
adc      #$09                          ; 0x1e609 $E5F9 69 09                   ;
sta      $05                           ; 0x1e60b $E5FB 85 05                   ;
lda      #$01                          ; 0x1e60d $E5FD A9 01                   ; A = 01
sta      $07                           ; 0x1e60f $E5FF 85 07                   ;
lda      $0213,y                       ; 0x1e611 $E601 B9 13 02                ;
sta      $04                           ; 0x1e614 $E604 85 04                   ;
lda      #$0E                          ; 0x1e616 $E606 A9 0E                   ; A = 0E
sta      $06                           ; 0x1e618 $E608 85 06                   ;
lda      $04                           ; 0x1e61a $E60A A5 04                   ;
adc      $06                           ; 0x1e61c $E60C 65 06                   ;
bcc      LE616                         ; 0x1e61e $E60E 90 06                   ;
lda      $04                           ; 0x1e620 $E610 A5 04                   ;
eor      #$FF                          ; 0x1e622 $E612 49 FF                   ; flip all bits
sta      $06                           ; 0x1e624 $E614 85 06                   ;
LE616                                                                          ;
rts                                    ; 0x1e626 $E616 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $C8                           ; 0x1e627 $E617 A5 C8                   ;; go outside: set $c8 to 3
asl                                    ; 0x1e629 $E619 0A                      ;
and      #$0C                          ; 0x1e62a $E61A 29 0C                   ; keep bits .... xx..
ora      $C9                           ; 0x1e62c $E61C 05 C9                   ;
and      #$FC                          ; 0x1e62e $E61E 29 FC                   ; keep bits xxxx xx..
bne      LE616                         ; 0x1e630 $E620 D0 F4                   ;
lda      $2A,x                         ; 0x1e632 $E622 B5 2A                   ; Enemy Y Position
adc      #$10                          ; 0x1e634 $E624 69 10                   ;
cmp      #$30                          ; 0x1e636 $E626 C9 30                   ;
bcc      LE616                         ; 0x1e638 $E628 90 EC                   ;
jsr      bank7_code40                  ; 0x1e63a $E62A 20 BA E5                ;
ldy      #$01                          ; 0x1e63d $E62D A0 01                   ; Y = 01
LE62F                                                                          ;
sty      $11                           ; 0x1e63f $E62F 84 11                   ;
lda      $8D,y                         ; 0x1e641 $E631 B9 8D 00                ; Flying Blade/Flame slot
beq      LE649                         ; 0x1e644 $E634 F0 13                   ;
bmi      LE649                         ; 0x1e646 $E636 30 11                   ;
jsr      LE4BC                         ; 0x1e648 $E638 20 BC E4                ;
jsr      bank7_idem__maybe             ; 0x1e64b $E63B 20 F9 E9                ;
ldy      $11                           ; 0x1e64e $E63E A4 11                   ;
bcc      LE649                         ; 0x1e650 $E640 90 07                   ;
lda      #$02                          ; 0x1e652 $E642 A9 02                   ; 02 = sound of enemy sword hit shield
sta      $EC                           ; 0x1e654 $E644 85 EC                   ;      or Flying Blade/Flame hit shield
jsr      LE6E8                         ; 0x1e656 $E646 20 E8 E6                ;
LE649                                                                          ;
dey                                    ; 0x1e659 $E649 88                      ;
bpl      LE62F                         ; 0x1e65a $E64A 10 E3                   ;
jsr      bank7_code44                  ; 0x1e65c $E64C 20 A2 E9                ;
jsr      bank7_idem__maybe             ; 0x1e65f $E64F 20 F9 E9                ;
bcc      LE616                         ; 0x1e662 $E652 90 C2                   ;
LE654                                                                          ;
lda      #$02                          ; 0x1e664 $E654 A9 02                   ; 02 = sound of enemy sword hit shield
sta      $EC                           ; 0x1e666 $E656 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$00                          ; 0x1e668 $E658 A9 00                   ; A = 00
sta      $0B                           ; 0x1e66a $E65A 85 0B                   ;
pla                                    ; 0x1e66c $E65C 68                      ;
pla                                    ; 0x1e66d $E65D 68                      ;
lda      $80                           ; 0x1e66e $E65E A5 80                   ; Current Animation Frame for Link
cmp      #$09                          ; 0x1e670 $E660 C9 09                   ; 09 = Down Stab
bne      LE66A                         ; 0x1e672 $E662 D0 06                   ;
lda      #$FE                          ; 0x1e674 $E664 A9 FE                   ; A = FE
sta      $057D                         ; 0x1e676 $E666 8D 7D 05                ; Y Velocity after downstabing an armored enemy
rts                                    ; 0x1e679 $E669 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE66A                                                                          ;
LE66C     = * + $0002                                                          ;
jmp      bank7_code37                  ; 0x1e67a $E66A 4C 71 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Attack_Power_for_8_Levels                                                ;
.byt    $02,$03,$04,$06,$09,$0C,$12,$18; 0x1e67d $E66D 02 03 04 06 09 0C 12 18 ;Attack Power for 8 Levels (8 bytes)
.byt    $32                            ; 0x1e685 $E675 32                      ;Attack Power for Thunder spell
                                                                               ;
.byt    $E0                            ; 0x1e686 $E676 E0                      ;???
; ---------------------------------------------------------------------------- ;
bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least                  ;
lda      $0480                         ; 0x1e687 $E677 AD 80 04                ;
cmp      #$F8                          ; 0x1e68a $E67A C9 F8                   ;
beq      LE6A6                         ; 0x1e68c $E67C F0 28                   ;
ldy      $A1,x                         ; 0x1e68e $E67E B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1e690 $E680 B9 41 6E                ; Enemy Data Table in RAM (5541)
and      #$10                          ; 0x1e693 $E683 29 10                   ; keep bits ...x ....
bne      LE6A6                         ; 0x1e695 $E685 D0 1F                   ;
lda      $B6,x                         ; 0x1e697 $E687 B5 B6                   ;; Generated Enemy Slot
cmp      #$01                          ; 0x1e699 $E689 C9 01                   ;
bne      LE6A6                         ; 0x1e69b $E68B D0 19                   ;
jsr      bank7_code44                  ; 0x1e69d $E68D 20 A2 E9                ;
lda      #$00                          ; 0x1e6a0 $E690 A9 00                   ; A = 00
sta      $0B                           ; 0x1e6a2 $E692 85 0B                   ;
LE694                                                                          ;
ldy      $A1,x                         ; 0x1e6a4 $E694 B4 A1                   ; Enemy Code
cpy      #$13                          ; 0x1e6a6 $E696 C0 13                   ; 13 = Elevator
beq      LE6AC                         ; 0x1e6a8 $E698 F0 12                   ;
cpy      #$02                          ; 0x1e6aa $E69A C0 02                   ; 02 = Locked Door
beq      LE6AC                         ; 0x1e6ac $E69C F0 0E                   ;
jsr      LE942                         ; 0x1e6ae $E69E 20 42 E9                ;
LE6A1                                                                          ;
jsr      bank7_idem__maybe             ; 0x1e6b1 $E6A1 20 F9 E9                ;
bcs      LE6AE                         ; 0x1e6b4 $E6A4 B0 08                   ;
LE6A6                                                                          ;
lda      $A8,x                         ; 0x1e6b6 $E6A6 B5 A8                   ;; Enemy State
and      #$DF                          ; 0x1e6b8 $E6A8 29 DF                   ; keep bits xx.x xxxx
sta      $A8,x                         ; 0x1e6ba $E6AA 95 A8                   ;; Enemy State
LE6AC                                                                          ;
clc                                    ; 0x1e6bc $E6AC 18                      ; Carry = 0 means sword hits nothing
LE6AD                                                                          ;
rts                                    ; 0x1e6bd $E6AD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6AE                                                                          ;
ldy      $A1,x                         ; 0x1e6be $E6AE B4 A1                   ; Enemy Code
lda      $0B                           ; 0x1e6c0 $E6B0 A5 0B                   ;
bne      LE6BE                         ; 0x1e6c2 $E6B2 D0 0A                   ;
lda      $6DD5,y                       ; 0x1e6c4 $E6B4 B9 D5 6D                ; Enemy Attributes Table (palette, exp., etc)
and      #$20                          ; 0x1e6c7 $E6B7 29 20                   ; keep bits ..x. ....
beq      LE6BE                         ; 0x1e6c9 $E6B9 F0 03                   ; Bit 5 = 1 means no damage from sword (fire)
jmp      LE654                         ; 0x1e6cb $E6BB 4C 54 E6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6BE                                                                          ;
lda      $0B                           ; 0x1e6ce $E6BE A5 0B                   ;
bne      LE6CB                         ; 0x1e6d0 $E6C0 D0 09                   ;
cpy      #$01                          ; 0x1e6d2 $E6C2 C0 01                   ;
bne      LE6CB                         ; 0x1e6d4 $E6C4 D0 05                   ;
lda      $040E,x                       ; 0x1e6d6 $E6C6 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
bne      LE6AC                         ; 0x1e6d9 $E6C9 D0 E1                   ;
LE6CB                                                                          ;
lda      $0B                           ; 0x1e6db $E6CB A5 0B                   ;
beq      LE6F3                         ; 0x1e6dd $E6CD F0 24                   ;
lda      $6DD5,y                       ; 0x1e6df $E6CF B9 D5 6D                ; Enemy Attributes Table (palette, exp., etc)
and      #$20                          ; 0x1e6e2 $E6D2 29 20                   ; keep bits ..x. ....
beq      LE6DD                         ; 0x1e6e4 $E6D4 F0 07                   ;
ldy      $11                           ; 0x1e6e6 $E6D6 A4 11                   ;
lda      $05CA,y                       ; 0x1e6e8 $E6D8 B9 CA 05                ;
bne      LE6E6                         ; 0x1e6eb $E6DB D0 09                   ;
LE6DD                                                                          ;
ldy      $A1,x                         ; 0x1e6ed $E6DD B4 A1                   ; Enemy Code
lda      $6DF9,y                       ; 0x1e6ef $E6DF B9 F9 6D                ; Another Enemy Attributes Table
and      #$20                          ; 0x1e6f2 $E6E2 29 20                   ; keep bits ..x. ....
beq      LE6F3                         ; 0x1e6f4 $E6E4 F0 0D                   ;
LE6E6                                                                          ;
ldy      $11                           ; 0x1e6f6 $E6E6 A4 11                   ;
LE6E8                                                                          ;
lda      #$00                          ; 0x1e6f8 $E6E8 A9 00                   ; A = 00
sta      $7D,y                         ; 0x1e6fa $E6EA 99 7D 00                ;
lda      #$F2                          ; 0x1e6fd $E6ED A9 F2                   ; A = F2
sta      $8D,y                         ; 0x1e6ff $E6EF 99 8D 00                ;
rts                                    ; 0x1e702 $E6F2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6F3                                                                          ;
lda      $80                           ; 0x1e703 $E6F3 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$08                          ; 0x1e705 $E6F5 C9 08                   ; 08 = Up Stab
bne      LE708                         ; 0x1e707 $E6F7 D0 0F                   ;
lda      $0B                           ; 0x1e709 $E6F9 A5 0B                   ;
bne      LE708                         ; 0x1e70b $E6FB D0 0B                   ;
lda      $29                           ; 0x1e70d $E6FD A5 29                   ; Link Y Position
cmp      $2A,x                         ; 0x1e70f $E6FF D5 2A                   ; Enemy Y Position
bcc      LE6A6                         ; 0x1e711 $E701 90 A3                   ;
lda      #$00                          ; 0x1e713 $E703 A9 00                   ; A = 00
sta      $057D                         ; 0x1e715 $E705 8D 7D 05                ; $057D = Link Jumping State ?
LE708                                                                          ;
lda      $A8,x                         ; 0x1e718 $E708 B5 A8                   ;; Enemy State
and      #$20                          ; 0x1e71a $E70A 29 20                   ; keep bits ..x. ....
bne      LE6AD                         ; 0x1e71c $E70C D0 9F                   ;
lda      $A8,x                         ; 0x1e71e $E70E B5 A8                   ;; Enemy State
ora      #$20                          ; 0x1e720 $E710 09 20                   ; set  bits ..x. ....
sta      $A8,x                         ; 0x1e722 $E712 95 A8                   ;; Enemy State
lda      $80                           ; 0x1e724 $E714 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$09                          ; 0x1e726 $E716 C9 09                   ; 09 = Down Stab
bne      LE723                         ; 0x1e728 $E718 D0 09                   ;
lda      $0B                           ; 0x1e72a $E71A A5 0B                   ;
bne      LE723                         ; 0x1e72c $E71C D0 05                   ;
lda      #$FE                          ; 0x1e72e $E71E A9 FE                   ; A = FE
sta      $057D                         ; 0x1e730 $E720 8D 7D 05                ; Link's Y Velocity
LE723                                                                          ;
ldy      $0777                         ; 0x1e733 $E723 AC 77 07                ; Attack Power
lda      #$30                          ; 0x1e736 $E726 A9 30                   ; A = 30
sta      $040E,x                       ; 0x1e738 $E728 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
lda      #$10                          ; 0x1e73b $E72B A9 10                   ; A = 10
sta      $ED                           ; 0x1e73d $E72D 85 ED                   ; Sound Effects Type 2
lda      $C2,x                         ; 0x1e73f $E72F B5 C2                   ; Enemy HP
sec                                    ; 0x1e741 $E731 38                      ;
sbc      LE66C,y                       ; 0x1e742 $E732 F9 6C E6                ; refer to table at $1E66C (+1)
sta      $C2,x                         ; 0x1e745 $E735 95 C2                   ;; Enemy Current HP
beq      LE74C                         ; 0x1e747 $E737 F0 13                   ; if (HP == 0)
bcc      LE74C                         ; 0x1e749 $E739 90 11                   ; or (HP is Negative) goto $1E74C (enemy dead)
lda      $A1,x                         ; 0x1e74b $E73B B5 A1                   ; Enemy Code
cmp      #$01                          ; 0x1e74d $E73D C9 01                   ; 01 = Red Jar
beq      LE755                         ; 0x1e74f $E73F F0 14                   ;
lda      $80                           ; 0x1e751 $E741 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$09                          ; 0x1e753 $E743 C9 09                   ;
beq      LE74A                         ; 0x1e755 $E745 F0 03                   ;
jsr      bank7_code37                  ; 0x1e757 $E747 20 71 E3                ;
LE74A                                                                          ;
sec                                    ; 0x1e75a $E74A 38                      ;
rts                                    ; 0x1e75b $E74B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE74C                                                                          ;
ldy      $A1,x                         ; 0x1e75c $E74C B4 A1                   ; Enemy Code
cpy      #$01                          ; 0x1e75e $E74E C0 01                   ; 01 = Red Jar
beq      LE755                         ; 0x1e760 $E750 F0 03                   ;
jmp      bank7_monster_death           ; 0x1e762 $E752 4C 80 E8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE755                                                                          ;
;item gets stabbed ?                                                           ;
lda      $AF,x                         ; 0x1e765 $E755 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e767 $E757 29 7F                   ; keep bits .xxx xxxx
cmp      #$08                          ; 0x1e769 $E759 C9 08                   ;
bcc      LE769                         ; 0x1e76b $E75B 90 0C                   ;
cmp      #$0E                          ; 0x1e76d $E75D C9 0E                   ;
bcc      bank7_get_item                ; 0x1e76f $E75F 90 10                   ;
cmp      #$10                          ; 0x1e771 $E761 C9 10                   ;
beq      bank7_get_item                ; 0x1e773 $E763 F0 0C                   ;
cmp      #$11                          ; 0x1e775 $E765 C9 11                   ;
beq      bank7_get_item                ; 0x1e777 $E767 F0 08                   ;
LE769                                                                          ;
lda      #$00                          ; 0x1e779 $E769 A9 00                   ; A = 00
sta      $040E,x                       ; 0x1e77b $E76B 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
sta      $ED                           ; 0x1e77e $E76E 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
rts                                    ; 0x1e780 $E770 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_get_item                                                                 ;
lda      $AF,x                         ; 0x1e781 $E771 B5 AF                   ;; Various enemy state variables
bmi      LE77D                         ; 0x1e783 $E773 30 08                   ;
lda      $3C,x                         ; 0x1e785 $E775 B5 3C                   ; Enemy X position (high byte)
tax                                    ; 0x1e787 $E777 AA                      ;
jsr      Set_Item_RAM_bit_to_0__Bits_0_3; 0x1e788 $E778 20 95 C2               ; set Item as taken in RAM
ldx      $10                           ; 0x1e78b $E77B A6 10                   ;; used as monster x register ;draw boss hp bar
LE77D                                                                          ;
lda      $AF,x                         ; 0x1e78d $E77D B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e78f $E77F 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1e791 $E781 A8                      ;
cpy      #$08                          ; 0x1e792 $E782 C0 08                   ;
bcs      LE79A                         ; 0x1e794 $E784 B0 14                   ; check if Item Code > 8
lda      #$A0                          ; 0x1e796 $E786 A9 A0                   ; A = A0
sta      $074B                         ; 0x1e798 $E788 8D 4B 07                ; Spell Flash Counter (bit 7 set = decor flash)
lda      #$10                          ; 0x1e79b $E78B A9 10                   ; A = 10
sta      $EB                           ; 0x1e79d $E78D 85 EB                   ; Music
lda      $0785,y                       ; 0x1e79f $E78F B9 85 07                ; Have Item Y
ora      #$01                          ; 0x1e7a2 $E792 09 01                   ; set  bits .... ...x
sta      $0785,y                       ; 0x1e7a4 $E794 99 85 07                ;
LE797                                                                          ;
jmp      bank7_remove_enemy_or_item    ; 0x1e7a7 $E797 4C 47 DD                ; Remove Enemy/Item
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE79A                                                                          ;
lda      #$08                          ; 0x1e7aa $E79A A9 08                   ; A = 08
sta      $EF                           ; 0x1e7ac $E79C 85 EF                   ; Sound Effects Type 4
cpy      #$08                          ; 0x1e7ae $E79E C0 08                   ;
bne      LE7BB                         ; 0x1e7b0 $E7A0 D0 19                   ;
lda      $0728                         ; 0x1e7b2 $E7A2 AD 28 07                ; Related to boss key state
beq      LE7B5                         ; 0x1e7b5 $E7A5 F0 0E                   ;
lda      #$00                          ; 0x1e7b7 $E7A7 A9 00                   ; A = 00
sta      $0728                         ; 0x1e7b9 $E7A9 8D 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
lda      $07FB                         ; 0x1e7bc $E7AC AD FB 07                ;
bne      LE7B5                         ; 0x1e7bf $E7AF D0 04                   ;
;                                                                              ;Restart Music after taking a key that falls after beating a boss
lda      #$02                          ; 0x1e7c1 $E7B1 A9 02                   ; A = 02 (04 = quiet version of Palace theme)
sta      $EB                           ; 0x1e7c3 $E7B3 85 EB                   ; Music
LE7B5                                                                          ;
inc      $0793                         ; 0x1e7c5 $E7B5 EE 93 07                ; Number of Keys
jmp      LE797                         ; 0x1e7c8 $E7B8 4C 97 E7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE7BB                                                                          ;
cpy      #$0E                          ; 0x1e7cb $E7BB C0 0E                   ;
bcc      bank7_code42                  ; 0x1e7cd $E7BD 90 35                   ;
cpy      #$10                          ; 0x1e7cf $E7BF C0 10                   ;
bcs      LE80C                         ; 0x1e7d1 $E7C1 B0 49                   ;
;Item is Magic (0E) or Heart (0F) Container                                    ;
lda      #$10                          ; 0x1e7d3 $E7C3 A9 10                   ; A = 10
sta      $EB                           ; 0x1e7d5 $E7C5 85 EB                   ; Music
lda      #$00                          ; 0x1e7d7 $E7C7 A9 00                   ; A = 00
sta      $EF                           ; 0x1e7d9 $E7C9 85 EF                   ; Sound Effects Type 4
tya                                    ; 0x1e7db $E7CB 98                      ;
tax                                    ; 0x1e7dc $E7CC AA                      ;
inc      $0775,x                       ; 0x1e7dd $E7CD FE 75 07                ; 0E = Magic Containers, 0F = Heart Containers
cpx      #$0E                          ; 0x1e7e0 $E7D0 E0 0E                   ;
bne      LE7E3                         ; 0x1e7e2 $E7D2 D0 0F                   ;
ldy      $0775,x                       ; 0x1e7e4 $E7D4 BC 75 07                ;
cpy      #$07                          ; 0x1e7e7 $E7D7 C0 07                   ; check if Link has 7 Magic Containers
bcc      LE7E3                         ; 0x1e7e9 $E7D9 90 08                   ;
lda      $079D                         ; 0x1e7eb $E7DB AD 9D 07                ;; Have 7 Magic Containers (08)
ora      #$08                          ; 0x1e7ee $E7DE 09 08                   ; set  bits .... x...
sta      $079D                         ; 0x1e7f0 $E7E0 8D 9D 07                ; set bit for 7 Magic Containers (08) (Kasuto)
LE7E3                                                                          ;
tya                                    ; 0x1e7f3 $E7E3 98                      ;
asl                                    ; 0x1e7f4 $E7E4 0A                      ;
asl                                    ; 0x1e7f5 $E7E5 0A                      ;
LE7E6                                                                          ;
asl                                    ; 0x1e7f6 $E7E6 0A                      ;
asl                                    ; 0x1e7f7 $E7E7 0A                      ;
sta      $06FE,x                       ; 0x1e7f8 $E7E8 9D FE 06                ; Magic/Life to be added to Magic/Life Meter
ldx      $10                           ; 0x1e7fb $E7EB A6 10                   ;; used as monster x register ;draw boss hp bar
jmp      bank7_remove_enemy_or_item    ; 0x1e7fd $E7ED 4C 47 DD                ; Remove Enemy/Item
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table24                                                                  ;
.byt    $07,$09,$0B,$0D                ; 0x1e800 $E7F0 07 09 0B 0D             ;
; ---------------------------------------------------------------------------- ;
bank7_code42                                                                   ;
jsr      bank7_monster_death           ; 0x1e804 $E7F4 20 80 E8                ;
lda      $AF,x                         ; 0x1e807 $E7F7 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e809 $E7F9 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1e80b $E7FB A8                      ;
lda      LE7E6,y                       ; 0x1e80c $E7FC B9 E6 E7                ;
sta      $0414,x                       ; 0x1e80f $E7FF 9D 14 04                ;
lda      #$08                          ; 0x1e812 $E802 A9 08                   ; A = 08
sta      $EF                           ; 0x1e814 $E804 85 EF                   ; Sound Effects Type 4
lda      #$00                          ; 0x1e816 $E806 A9 00                   ; A = 00
sta      $0504,x                       ; 0x1e818 $E808 9D 04 05                ;; Timer for Enemy
rts                                    ; 0x1e81b $E80B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE80C                                                                          ;
lda      #$10                          ; 0x1e81c $E80C A9 10                   ; A = 10
sta      $EB                           ; 0x1e81e $E80E 85 EB                   ; Music
lda      #$00                          ; 0x1e820 $E810 A9 00                   ; A = 00
sta      $EF                           ; 0x1e822 $E812 85 EF                   ; Sound Effects Type 4
cpy      #$12                          ; 0x1e824 $E814 C0 12                   ; 12 = Doll
bne      LE81D                         ; 0x1e826 $E816 D0 05                   ;
inc      $0700                         ; 0x1e828 $E818 EE 00 07                ; Number of Lives
bne      LE86D                         ; 0x1e82b $E81B D0 50                   ;
LE81D                                                                          ;
cpy      #$13                          ; 0x1e82d $E81D C0 13                   ; 13 = Kidnapped Child
bne      LE82B                         ; 0x1e82f $E81F D0 0A                   ;
lda      $079C                         ; 0x1e831 $E821 AD 9C 07                ;; Have collected Lost Child (20)
ora      #$20                          ; 0x1e834 $E824 09 20                   ; set  bits ..x. ....
sta      $079C                         ; 0x1e836 $E826 8D 9C 07                ;; Have collected Lost Child (20)
bne      LE86D                         ; 0x1e839 $E829 D0 42                   ;
LE82B                                                                          ;
cpy      #$14                          ; 0x1e83b $E82B C0 14                   ; 14 = Trophy
bne      LE839                         ; 0x1e83d $E82D D0 0A                   ;
lda      $0798                         ; 0x1e83f $E82F AD 98 07                ;; Trophy In Inventory (10 - Yes); Have collected Trophy (10)
ora      #$10                          ; 0x1e842 $E832 09 10                   ; set  bits ...x ....
sta      $0798                         ; 0x1e844 $E834 8D 98 07                ;; Trophy In Inventory (10 - Yes); Have collected Trophy (10)
bne      LE86D                         ; 0x1e847 $E837 D0 34                   ;
LE839                                                                          ;
cpy      #$15                          ; 0x1e849 $E839 C0 15                   ; 15 = Medicine
bne      LE847                         ; 0x1e84b $E83B D0 0A                   ;
lda      $079A                         ; 0x1e84d $E83D AD 9A 07                ;; Have collected note from Bagu (08) Medicine (40)
ora      #$40                          ; 0x1e850 $E840 09 40                   ; set bits  .x.. ....
sta      $079A                         ; 0x1e852 $E842 8D 9A 07                ;; Have collected note from Bagu (08) Medicine (40)
bne      LE86D                         ; 0x1e855 $E845 D0 26                   ;
LE847                                                                          ;
lda      #$08                          ; 0x1e857 $E847 A9 08                   ; A = 08
sta      $EF                           ; 0x1e859 $E849 85 EF                   ; Sound Effects Type 4
lda      #$00                          ; 0x1e85b $E84B A9 00                   ; A = 00
sta      $EB                           ; 0x1e85d $E84D 85 EB                   ; Music
lda      #$10                          ; 0x1e85f $E84F A9 10                   ; A = 10
sta      $05E2                         ; 0x1e861 $E851 8D E2 05                ; Amount of Magic to restore for Blue Jar
lda      $0783                         ; 0x1e864 $E854 AD 83 07                ; Number of Magic Containers
asl                                    ; 0x1e867 $E857 0A                      ;
asl                                    ; 0x1e868 $E858 0A                      ;
asl                                    ; 0x1e869 $E859 0A                      ;
asl                                    ; 0x1e86a $E85A 0A                      ;
sta      $05E3                         ; 0x1e86b $E85B 8D E3 05                ; Amount of Magic to restore for Red Jar
tya                                    ; 0x1e86e $E85E 98                      ;
sec                                    ; 0x1e86f $E85F 38                      ;
sbc      #$10                          ; 0x1e870 $E860 E9 10                   ;
tay                                    ; 0x1e872 $E862 A8                      ;
lda      $070C                         ; 0x1e873 $E863 AD 0C 07                ;add 5E2 to 70C for blue jar=magic	;add 5E3 to 70D for red jar=hp
clc                                    ; 0x1e876 $E866 18                      ;
adc      $05E2,y                       ; 0x1e877 $E867 79 E2 05                ;
sta      $070C                         ; 0x1e87a $E86A 8D 0C 07                ;add to link MP
LE86D                                                                          ;
jmp      bank7_remove_enemy_or_item    ; 0x1e87d $E86D 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Probability_for_Item_given_by_killed_enemy                     ;
.byt    $90,$90,$8A,$90,$90,$90,$90,$90; 0x1e880 $E870 90 90 8A 90 90 90 90 90 ;Weak Enemy
.byt    $91,$8C,$91,$8C,$8C,$91,$8C,$91; 0x1e888 $E878 91 8C 91 8C 8C 91 8C 91 ;Strong Enemy
; ---------------------------------------------------------------------------- ;
bank7_monster_death                                                            ;
ldy      $A1,x                         ; 0x1e890 $E880 B4 A1                   ; Enemy Code
lda      $6DD5,y                       ; 0x1e892 $E882 B9 D5 6D                ; Enemy Properties (Palette, Exp. Code, etc.)
and      #$0F                          ; 0x1e895 $E885 29 0F                   ; keep bits .... xxxx
sta      $0414,x                       ; 0x1e897 $E887 9D 14 04                ;
lda      $6DF9,y                       ; 0x1e89a $E88A B9 F9 6D                ; Enemy Vulnerability/Damage Code
and      #$C0                          ; 0x1e89d $E88D 29 C0                   ; keep bits xx.. ....
beq      LE8BF                         ; 0x1e89f $E88F F0 2E                   ; if enemy never give special items, skip
bank7_Drop_Item                                                                ;
lsr                                    ; 0x1e8a1 $E891 4A                      ;
lsr                                    ; 0x1e8a2 $E892 4A                      ;
lsr                                    ; 0x1e8a3 $E893 4A                      ;
lsr                                    ; 0x1e8a4 $E894 4A                      ;
lsr                                    ; 0x1e8a5 $E895 4A                      ;
lsr                                    ; 0x1e8a6 $E896 4A                      ;
tax                                    ; 0x1e8a7 $E897 AA                      ;
tay                                    ; 0x1e8a8 $E898 A8                      ;
inc      $05DE,x                       ; 0x1e8a9 $E899 FE DE 05                ; Current number of enemies killed for item
lda      $05DE,x                       ; 0x1e8ac $E89C BD DE 05                ;; Current number of enemies killed for magic/bag
cmp      #$06                          ; 0x1e8af $E89F C9 06                   ; Number of enemies to kill for item
bne      LE8BF                         ; 0x1e8b1 $E8A1 D0 1C                   ;
lda      #$00                          ; 0x1e8b3 $E8A3 A9 00                   ; A = 00
sta      $05DE,x                       ; 0x1e8b5 $E8A5 9D DE 05                ; Reset item counter
ldx      $10                           ; 0x1e8b8 $E8A8 A6 10                   ;; used as monster x register ;draw boss hp bar
ror      $0414,x                       ; 0x1e8ba $E8AA 7E 14 04                ;
lda      $051B,x                       ; 0x1e8bd $E8AD BD 1B 05                ; Randomizer
and      #$07                          ; 0x1e8c0 $E8B0 29 07                   ; keep bits .... .xxx
cpy      #$02                          ; 0x1e8c2 $E8B2 C0 02                   ; 02 = Strong Enemy (200P and Red Jar)
bne      LE8B8                         ; 0x1e8c4 $E8B4 D0 02                   ;
adc      #$07                          ; 0x1e8c6 $E8B6 69 07                   ; the Carry is set, so it's 8
LE8B8                                                                          ;
tay                                    ; 0x1e8c8 $E8B8 A8                      ;
lda      bank7_Table_for_Probability_for_Item_given_by_killed_enemy,y; 0x1e8c9 $E8B9 B9 70 E8;
sta      $048E,x                       ; 0x1e8cc $E8BC 9D 8E 04                ;; Dropped Item Code
LE8BF                                                                          ;
ldx      $10                           ; 0x1e8cf $E8BF A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$25                          ; 0x1e8d1 $E8C1 A9 25                   ; A = 25 (timer for kill animation)
sta      $0504,x                       ; 0x1e8d3 $E8C3 9D 04 05                ;; Timer for Enemy
lda      #$00                          ; 0x1e8d6 $E8C6 A9 00                   ; A = 00
sta      $043E,x                       ; 0x1e8d8 $E8C8 9D 3E 04                ;
lda      #$02                          ; 0x1e8db $E8CB A9 02                   ; A = 02
sta      $B6,x                         ; 0x1e8dd $E8CD 95 B6                   ; Generated Enemy Slot
lda      #$04                          ; 0x1e8df $E8CF A9 04                   ; A = 04
sta      $EF                           ; 0x1e8e1 $E8D1 85 EF                   ; Sound Effects Type 4
sec                                    ; 0x1e8e3 $E8D3 38                      ;
rts                                    ; 0x1e8e4 $E8D4 60                      ;try jmping at this point and check monster id then drop custom item	(Y=monID	X=monX register	)
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $2A,x                         ; 0x1e8e5 $E8D5 B5 2A                   ; Enemy Y Position
sta      $05                           ; 0x1e8e7 $E8D7 85 05                   ;
lda      #$08                          ; 0x1e8e9 $E8D9 A9 08                   ; A = 08
sta      $07                           ; 0x1e8eb $E8DB 85 07                   ;
lda      $CD                           ; 0x1e8ed $E8DD A5 CD                   ;
sta      $04                           ; 0x1e8ef $E8DF 85 04                   ;
lda      #$08                          ; 0x1e8f1 $E8E1 A9 08                   ; A = 08
sta      $06                           ; 0x1e8f3 $E8E3 85 06                   ;
jsr      bank7_code44                  ; 0x1e8f5 $E8E5 20 A2 E9                ;
jmp      LE6A1                         ; 0x1e8f8 $E8E8 4C A1 E6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Change_Enemy_Facing_Direction_and_X_Velocity                             ;
lda      $60,x                         ; 0x1e8fb $E8EB B5 60                   ; Enemy Facing Direction
eor      #$03                          ; 0x1e8fd $E8ED 49 03                   ; flip bits .... ..xx
sta      $60,x                         ; 0x1e8ff $E8EF 95 60                   ;; Enemy facing direction
lda      $71,x                         ; 0x1e901 $E8F1 B5 71                   ; Enemy X Velocity
eor      #$FF                          ; 0x1e903 $E8F3 49 FF                   ; flip all bits
tay                                    ; 0x1e905 $E8F5 A8                      ;
iny                                    ; 0x1e906 $E8F6 C8                      ;
sty      $71,x                         ; 0x1e907 $E8F7 94 71                   ;; Enemy X Velocity
rts                                    ; 0x1e909 $E8F9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN0                                                                 ;
.byt    $02,$0C,$03,$17,$02,$0C,$03,$0A; 0x1e90a $E8FA 02 0C 03 17 02 0C 03 0A ;
.byt    $04,$08,$0B,$03,$00,$18,$22,$08; 0x1e912 $E902 04 08 0B 03 00 18 22 08 ;
.byt    $FE,$0C,$00,$30,$00,$08,$00,$08; 0x1e91a $E90A FE 0C 00 30 00 08 00 08 ;
.byt    $03,$02,$03,$70,$00,$08,$F6,$20; 0x1e922 $E912 03 02 03 70 00 08 F6 20 ;
.byt    $0E,$04,$00,$10,$FC,$18,$10,$10; 0x1e92a $E91A 0E 04 00 10 FC 18 10 10 ;
.byt    $00,$10,$00,$18,$08,$10,$00,$30; 0x1e932 $E922 00 10 00 18 08 10 00 30 ;
.byt    $F4,$28,$00,$20,$00,$60,$00,$80; 0x1e93a $E92A F4 28 00 20 00 60 00 80 ;
.byt    $0E,$04,$10,$0E,$01,$06,$08,$03; 0x1e942 $E932 0E 04 10 0E 01 06 08 03 ;
.byt    $00,$20,$08,$18,$04,$10,$18,$18; 0x1e94a $E93A 00 20 08 18 04 10 18 18 ;
LE942                                                                          ;
.byt    $B4,$A1,$B9,$1D,$6E,$0A,$0A,$A8; 0x1e952 $E942 B4 A1 B9 1D 6E 0A 0A A8 ;
.byt    $A5,$CD                        ; 0x1e95a $E94A A5 CD                   ;
LE94C                                                                          ;
.byt    $18,$79,$FA,$E8,$85,$04,$B9,$FB; 0x1e95c $E94C 18 79 FA E8 85 04 B9 FB ;
.byt    $E8,$85,$06,$B5,$2A,$18,$79,$FC; 0x1e964 $E954 E8 85 06 B5 2A 18 79 FC ;
.byt    $E8,$85,$05,$B9,$FD,$E8,$85,$07; 0x1e96c $E95C E8 85 05 B9 FD E8 85 07 ;
.byt    $A5,$04,$65,$06,$90,$06,$A5,$04; 0x1e974 $E964 A5 04 65 06 90 06 A5 04 ;
.byt    $49,$FF,$85,$06,$60            ; 0x1e97c $E96C 49 FF 85 06 60          ;
LE971                                                                          ;
.byt    $04,$00                        ; 0x1e981 $E971 04 00                   ;
LE973                                                                          ;
.byt    $19,$1D                        ; 0x1e983 $E973 19 1D                   ;
; ---------------------------------------------------------------------------- ;
bank7_code43                                                                   ;
lda      $CC                           ; 0x1e985 $E975 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e987 $E977 18                      ;
adc      #$09                          ; 0x1e988 $E978 69 09                   ;
sta      L0000                         ; 0x1e98a $E97A 85 00                   ;
lda      #$0D                          ; 0x1e98c $E97C A9 0D                   ; A = 0D
sta      $02                           ; 0x1e98e $E97E 85 02                   ;
ldy      $17                           ; 0x1e990 $E980 A4 17                   ; Link's Shield Position
lda      $29                           ; 0x1e992 $E982 A5 29                   ; Link's Y Position
clc                                    ; 0x1e994 $E984 18                      ;
adc      LE971,y                       ; 0x1e995 $E985 79 71 E9                ; refer to table at $1E971
sta      $01                           ; 0x1e998 $E988 85 01                   ;
lda      LE973,y                       ; 0x1e99a $E98A B9 73 E9                ; refer to table at $1E973
sta      $03                           ; 0x1e99d $E98D 85 03                   ;
lda      L0000                         ; 0x1e99f $E98F A5 00                   ;
adc      $02                           ; 0x1e9a1 $E991 65 02                   ;
bcc      LE99B                         ; 0x1e9a3 $E993 90 06                   ;
lda      L0000                         ; 0x1e9a5 $E995 A5 00                   ;
eor      #$FF                          ; 0x1e9a7 $E997 49 FF                   ; flip all bits
sta      $02                           ; 0x1e9a9 $E999 85 02                   ;
LE99B                                                                          ;
rts                                    ; 0x1e9ab $E99B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table26                                                                  ;
.byt    $F8,$02                        ; 0x1e9ac $E99C F8 02                   ;
LE99E                                                                          ;
.byt    $07,$00                        ; 0x1e9ae $E99E 07 00                   ;
LE9A0                                                                          ;
.byt    $03,$03                        ; 0x1e9b0 $E9A0 03 03                   ;
; ---------------------------------------------------------------------------- ;
bank7_code44                                                                   ;
ldy      #$00                          ; 0x1e9b2 $E9A2 A0 00                   ; Y = 00
lda      $047E                         ; 0x1e9b4 $E9A4 AD 7E 04                ;
pha                                    ; 0x1e9b7 $E9A7 48                      ;
cmp      $CC                           ; 0x1e9b8 $E9A8 C5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
bcs      LE9AD                         ; 0x1e9ba $E9AA B0 01                   ;
iny                                    ; 0x1e9bc $E9AC C8                      ;
LE9AD                                                                          ;
pla                                    ; 0x1e9bd $E9AD 68                      ;
clc                                    ; 0x1e9be $E9AE 18                      ;
adc      bank7_table26,y               ; 0x1e9bf $E9AF 79 9C E9                ;
sta      L0000                         ; 0x1e9c2 $E9B2 85 00                   ;
lda      #$0E                          ; 0x1e9c4 $E9B4 A9 0E                   ; A = 0E
sta      $02                           ; 0x1e9c6 $E9B6 85 02                   ;
ldy      #$00                          ; 0x1e9c8 $E9B8 A0 00                   ; Y = 00
lda      $80                           ; 0x1e9ca $E9BA A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$08                          ; 0x1e9cc $E9BC C9 08                   ;
beq      LE9C4                         ; 0x1e9ce $E9BE F0 04                   ;
cmp      #$09                          ; 0x1e9d0 $E9C0 C9 09                   ;
bne      LE9C5                         ; 0x1e9d2 $E9C2 D0 01                   ;
LE9C4                                                                          ;
iny                                    ; 0x1e9d4 $E9C4 C8                      ;
LE9C5                                                                          ;
lda      $0480                         ; 0x1e9d5 $E9C5 AD 80 04                ;
clc                                    ; 0x1e9d8 $E9C8 18                      ;
adc      LE99E,y                       ; 0x1e9d9 $E9C9 79 9E E9                ;
sta      $01                           ; 0x1e9dc $E9CC 85 01                   ;
lda      LE9A0,y                       ; 0x1e9de $E9CE B9 A0 E9                ;
sta      $03                           ; 0x1e9e1 $E9D1 85 03                   ;
rts                                    ; 0x1e9e3 $E9D3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table27                                                                  ;
.byt    $0E,$FF                        ; 0x1e9e4 $E9D4 0E FF                   ;
LE9D6                                                                          ;
.byt    $11,$02                        ; 0x1e9e6 $E9D6 11 02                   ;
; ---------------------------------------------------------------------------- ;
bank7_code45                                                                   ;
ldy      $9F                           ; 0x1e9e8 $E9D8 A4 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
dey                                    ; 0x1e9ea $E9DA 88                      ;
lda      $CC                           ; 0x1e9eb $E9DB A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e9ed $E9DD 18                      ;
adc      #$08                          ; 0x1e9ee $E9DE 69 08                   ;
clc                                    ; 0x1e9f0 $E9E0 18                      ;
adc      bank7_table27,y               ; 0x1e9f1 $E9E1 79 D4 E9                ; refer to table at $1E9D4
sta      L0000                         ; 0x1e9f4 $E9E4 85 00                   ;
lda      #$05                          ; 0x1e9f6 $E9E6 A9 05                   ; A = 05
sta      $02                           ; 0x1e9f8 $E9E8 85 02                   ;
ldy      $17                           ; 0x1e9fa $E9EA A4 17                   ; Link's Shield Position
lda      $29                           ; 0x1e9fc $E9EC A5 29                   ; Link's Y Position
clc                                    ; 0x1e9fe $E9EE 18                      ;
adc      LE9D6,y                       ; 0x1e9ff $E9EF 79 D6 E9                ; refer to table at $1E9D6
sta      $01                           ; 0x1ea02 $E9F2 85 01                   ;
lda      #$0C                          ; 0x1ea04 $E9F4 A9 0C                   ; A = 0C
sta      $03                           ; 0x1ea06 $E9F6 85 03                   ;
rts                                    ; 0x1ea08 $E9F8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_idem__maybe                                                              ;
ldx      #$01                          ; 0x1ea09 $E9F9 A2 01                   ; X = 01
LE9FB                                                                          ;
lda      $04,x                         ; 0x1ea0b $E9FB B5 04                   ;
sec                                    ; 0x1ea0d $E9FD 38                      ;
sbc      L0000,x                       ; 0x1ea0e $E9FE F5 00                   ;
clc                                    ; 0x1ea10 $EA00 18                      ;
adc      $06,x                         ; 0x1ea11 $EA01 75 06                   ;
sta      $0F                           ; 0x1ea13 $EA03 85 0F                   ;
lda      $02,x                         ; 0x1ea15 $EA05 B5 02                   ;
clc                                    ; 0x1ea17 $EA07 18                      ;
adc      $06,x                         ; 0x1ea18 $EA08 75 06                   ;
cmp      $0F                           ; 0x1ea1a $EA0A C5 0F                   ;
bcc      LEA11                         ; 0x1ea1c $EA0C 90 03                   ;
dex                                    ; 0x1ea1e $EA0E CA                      ;
bpl      LE9FB                         ; 0x1ea1f $EA0F 10 EA                   ;
LEA11                                                                          ;
ldx      $10                           ; 0x1ea21 $EA11 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1ea23 $EA13 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ldy      #$1E                          ; 0x1ea24 $EA14 A0 1E                   ; Y = 1E
bne      LEA1E                         ; 0x1ea26 $EA16 D0 06                   ;
ldy      #$1E                          ; 0x1ea28 $EA18 A0 1E                   ; Y = 1E
bne      LEA24                         ; 0x1ea2a $EA1A D0 08                   ;
ldy      #$1F                          ; 0x1ea2c $EA1C A0 1F                   ; Y = 1F
LEA1E                                                                          ;
lda      $30,x                         ; 0x1ea2e $EA1E B5 30                   ; Projectile Y Position
cmp      #$90                          ; 0x1ea30 $EA20 C9 90                   ;
bcc      LEA31                         ; 0x1ea32 $EA22 90 0D                   ;
LEA24                                                                          ;
txa                                    ; 0x1ea34 $EA24 8A                      ;
clc                                    ; 0x1ea35 $EA25 18                      ;
adc      #$07                          ; 0x1ea36 $EA26 69 07                   ;
tax                                    ; 0x1ea38 $EA28 AA                      ;
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1ea39 $EA29 20 E8 EA;
jsr      bank1_code7                   ; 0x1ea3c $EA2C 20 0C 85                ;
ldx      $10                           ; 0x1ea3f $EA2F A6 10                   ;; used as monster x register ;draw boss hp bar
LEA31                                                                          ;
rts                                    ; 0x1ea41 $EA31 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LEA32                                                                          ;
ldy      $A1,x                         ; 0x1ea42 $EA32 B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1ea44 $EA34 B9 41 6E                ;
and      #$0F                          ; 0x1ea47 $EA37 29 0F                   ; keep bits .... xxxx
sta      $09                           ; 0x1ea49 $EA39 85 09                   ;
inx                                    ; 0x1ea4b $EA3B E8                      ;
lda      $A7,x                         ; 0x1ea4c $EA3C B5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$F0                          ; 0x1ea4e $EA3E 29 F0                   ; keep bits xxxx ....
sta      $A7,x                         ; 0x1ea50 $EA40 95 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$15                          ; 0x1ea52 $EA42 A9 15                   ; A = 15
clc                                    ; 0x1ea54 $EA44 18                      ;
adc      $09                           ; 0x1ea55 $EA45 65 09                   ;
sta      L0000                         ; 0x1ea57 $EA47 85 00                   ;
lda      #$00                          ; 0x1ea59 $EA49 A9 00                   ; A = 00
sta      $01                           ; 0x1ea5b $EA4B 85 01                   ;
jsr      LE1BE                         ; 0x1ea5d $EA4D 20 BE E1                ;
lda      #$14                          ; 0x1ea60 $EA50 A9 14                   ; A = 14
clc                                    ; 0x1ea62 $EA52 18                      ;
adc      $09                           ; 0x1ea63 $EA53 65 09                   ;
sta      L0000                         ; 0x1ea65 $EA55 85 00                   ;
lda      #$00                          ; 0x1ea67 $EA57 A9 00                   ; A = 00
sta      $01                           ; 0x1ea69 $EA59 85 01                   ;
jsr      LE1BE                         ; 0x1ea6b $EA5B 20 BE E1                ;
lda      $02                           ; 0x1ea6e $EA5E A5 02                   ;
sec                                    ; 0x1ea70 $EA60 38                      ;
sbc      #$10                          ; 0x1ea71 $EA61 E9 10                   ;
sta      $044B                         ; 0x1ea73 $EA63 8D 4B 04                ;
lda      L000E                         ; 0x1ea76 $EA66 A5 0E                   ;
sta      $DA                           ; 0x1ea78 $EA68 85 DA                   ;
lda      $0F                           ; 0x1ea7a $EA6A A5 0F                   ;
sta      $DB                           ; 0x1ea7c $EA6C 85 DB                   ;
lda      #$01                          ; 0x1ea7e $EA6E A9 01                   ; A = 01
ldy      $70,x                         ; 0x1ea80 $EA70 B4 70                   ;;hspeed (Link's horizontal velocity)
bmi      LEA75                         ; 0x1ea82 $EA72 30 01                   ;
lsr                                    ; 0x1ea84 $EA74 4A                      ;
LEA75                                                                          ;
clc                                    ; 0x1ea85 $EA75 18                      ;
adc      #$10                          ; 0x1ea86 $EA76 69 10                   ;
clc                                    ; 0x1ea88 $EA78 18                      ;
adc      $09                           ; 0x1ea89 $EA79 65 09                   ;
sta      L0000                         ; 0x1ea8b $EA7B 85 00                   ;
pha                                    ; 0x1ea8d $EA7D 48                      ;
lda      #$00                          ; 0x1ea8e $EA7E A9 00                   ; A = 00
sta      $01                           ; 0x1ea90 $EA80 85 01                   ;
jsr      LE1BE                         ; 0x1ea92 $EA82 20 BE E1                ;
pla                                    ; 0x1ea95 $EA85 68                      ;
clc                                    ; 0x1ea96 $EA86 18                      ;
adc      #$02                          ; 0x1ea97 $EA87 69 02                   ;
sta      L0000                         ; 0x1ea99 $EA89 85 00                   ;
lda      #$00                          ; 0x1ea9b $EA8B A9 00                   ; A = 00
sta      $01                           ; 0x1ea9d $EA8D 85 01                   ;
jsr      LE1BE                         ; 0x1ea9f $EA8F 20 BE E1                ;
dex                                    ; 0x1eaa2 $EA92 CA                      ;
lda      L000E                         ; 0x1eaa3 $EA93 A5 0E                   ;
sta      $DC                           ; 0x1eaa5 $EA95 85 DC                   ;
lda      $0F                           ; 0x1eaa7 $EA97 A5 0F                   ;
sta      $DD                           ; 0x1eaa9 $EA99 85 DD                   ;
lda      $03                           ; 0x1eaab $EA9B A5 03                   ;
sta      $D9                           ; 0x1eaad $EA9D 85 D9                   ;; Thunder Spell modifier ?
rts                                    ; 0x1eaaf $EA9F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table28                                                                  ;
.byt    $17,$09,$17,$09,$14,$0C,$14,$0C; 0x1eab0 $EAA0 17 09 17 09 14 0C 14 0C ;
.byt    $15,$0B,$15,$0B,$12,$0E,$12,$0E; 0x1eab8 $EAA8 15 0B 15 0B 12 0E 12 0E ;
.byt    $0E,$02,$0E,$02,$08,$08,$0E,$02; 0x1eac0 $EAB0 0E 02 0E 02 08 08 0E 02 ;
.byt    $0E,$02,$08,$08,$00,$0F,$04,$04; 0x1eac8 $EAB8 0E 02 08 08 00 0F 04 04 ;
LEAC0                                                                          ;
.byt    $E6,$E6,$FA,$FA,$00,$00,$E0,$E0; 0x1ead0 $EAC0 E6 E6 FA FA 00 00 E0 E0 ;
.byt    $EC,$EC,$F0,$F0,$FA,$FA,$E8,$E8; 0x1ead8 $EAC8 EC EC F0 F0 FA FA E8 E8 ;
.byt    $E7,$E7,$F8,$F8,$00,$EA,$E5,$E5; 0x1eae0 $EAD0 E7 E7 F8 F8 00 EA E5 E5 ;
.byt    $EB,$EB,$F0,$E1,$E0,$00,$F0,$E8; 0x1eae8 $EAD8 EB EB F0 E1 E0 00 F0 E8 ;
bank7_Tables_for_generating_pointers_in_the_6000_7FFF_range                    ;
.byt    $00,$D0,$A0,$70                ; 0x1eaf0 $EAE0 00 D0 A0 70             ;6000	60D0	61A0	6270
LEAE4                                                                          ;
.byt    $60,$60,$61,$62                ; 0x1eaf4 $EAE4 60 60 61 62             ;
; ---------------------------------------------------------------------------- ;
bank7_Generic_Collision_Test_with_Level_Objects                                ;
;bank7_Generic_Collision_Test_with_Level_Objects                               ;
;sets $e $f $2 and $3	, with Y as offset: based on location of link, below his foot	;60D3	Y=B0	54B0
;----                                                                          ;
;Collision Test with Level Objects                                             ;
;Determine Collision Tile Code                                                 ;
;                                                                              ;
;$0C = Link/Enemy Y Position Offset Index ?                                    ;
;                                                                              ;
;Output                                                                        ;
;                                                                              ;
;$03 = Row Number for Tile Code                                                ;
;$02 = Column Number for Tile Code                                             ;
;$02-$03 = Address of Tile Code in the 6000-633F range                         ;
sty      $0C                           ; 0x1eaf8 $EAE8 84 0C                   ;
lda      $4D,x                         ; 0x1eafa $EAEA B5 4D                   ; Link/Enemy X position (low byte)
clc                                    ; 0x1eafc $EAEC 18                      ;
adc      bank7_table28,y               ; 0x1eafd $EAED 79 A0 EA                ;
sta      L000E                         ; 0x1eb00 $EAF0 85 0E                   ;
lda      $3B,x                         ; 0x1eb02 $EAF2 B5 3B                   ; Link/Enemy X position (high byte)
adc      #$00                          ; 0x1eb04 $EAF4 69 00                   ;
cmp      #$04                          ; 0x1eb06 $EAF6 C9 04                   ;
bcs      LEB1D                         ; 0x1eb08 $EAF8 B0 23                   ;
tay                                    ; 0x1eb0a $EAFA A8                      ;
lda      L000E                         ; 0x1eb0b $EAFB A5 0E                   ;
lsr                                    ; 0x1eb0d $EAFD 4A                      ;
lsr                                    ; 0x1eb0e $EAFE 4A                      ;
lsr                                    ; 0x1eb0f $EAFF 4A                      ;
lsr                                    ; 0x1eb10 $EB00 4A                      ;
clc                                    ; 0x1eb11 $EB01 18                      ;
adc      bank7_Tables_for_generating_pointers_in_the_6000_7FFF_range,y; 0x1eb12 $EB02 79 E0 EA;
sta      L000E                         ; 0x1eb15 $EB05 85 0E                   ;
lda      LEAE4,y                       ; 0x1eb17 $EB07 B9 E4 EA                ;
sta      $0F                           ; 0x1eb1a $EB0A 85 0F                   ;
ldy      $0C                           ; 0x1eb1c $EB0C A4 0C                   ;
lda      $29,x                         ; 0x1eb1e $EB0E B5 29                   ; Link/Enemy Y Position
clc                                    ; 0x1eb20 $EB10 18                      ;
adc      LEAC0,y                       ; 0x1eb21 $EB11 79 C0 EA                ;
and      #$F0                          ; 0x1eb24 $EB14 29 F0                   ; keep bits xxxx ....
sta      $02                           ; 0x1eb26 $EB16 85 02                   ;
tay                                    ; 0x1eb28 $EB18 A8                      ;
cpy      #$D0                          ; 0x1eb29 $EB19 C0 D0                   ;
bcc      Label_EB20                    ; 0x1eb2b $EB1B 90 03                   ;
LEB1D                                                                          ;
lda      #$40                          ; 0x1eb2d $EB1D A9 40                   ; A = 40
Label_EB20 = * + $0001                                                         ;
; read from side scroll tile data ? 6000 to 63FF                               ;
; $EB20:B1 0E    LDA ($0E),Y 	@ $6151 = #$40                                   ;
bit      $0EB1                         ; 0x1eb2f $EB1F 2C B1 0E                ;
sta      $03                           ; 0x1eb32 $EB22 85 03                   ;
rts                                    ; 0x1eb34 $EB24 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN1                                                                 ;
.byt    $F5                            ; 0x1eb35 $EB25 F5                      ;Tile Mapping for Slashing Sword ?
LEB26                                                                          ;
.byt    $00                            ; 0x1eb36 $EB26 00                      ;
LEB27                                                                          ;
.byt    $02,$F5,$04,$06,$F5,$08,$0A,$F5; 0x1eb37 $EB27 02 F5 04 06 F5 08 0A F5 ;
.byt    $0C,$0E,$F5,$00,$02,$F5,$10,$12; 0x1eb3f $EB2F 0C 0E F5 00 02 F5 10 12 ;
.byt    $F5,$46,$48,$F5,$4A,$4C,$F5,$00; 0x1eb47 $EB37 F5 46 48 F5 4A 4C F5 00 ;
.byt    $02,$F5,$26,$06,$28,$2A,$30,$2C; 0x1eb4f $EB3F 02 F5 26 06 28 2A 30 2C ;
.byt    $2E,$F5,$34,$36,$38,$F5,$3A,$3C; 0x1eb57 $EB47 2E F5 34 36 38 F5 3A 3C ;
.byt    $F5,$46,$48,$4E,$50,$52,$56,$58; 0x1eb5f $EB4F F5 46 48 4E 50 52 56 58 ;
.byt    $F5,$5A,$5C,$5E,$F5,$1C,$1E,$F5; 0x1eb67 $EB57 F5 5A 5C 5E F5 1C 1E F5 ;
.byt    $20,$22,$F5,$08,$0A,$F5,$0C,$24; 0x1eb6f $EB5F 20 22 F5 08 0A F5 0C 24 ;
.byt    $28,$2A,$2C,$F5,$2E,$60,$34,$36; 0x1eb77 $EB67 28 2A 2C F5 2E 60 34 36 ;
.byt    $38,$F5,$3A,$62,$F5,$14,$16,$F5; 0x1eb7f $EB6F 38 F5 3A 62 F5 14 16 F5 ;
.byt    $18,$1A,$F5,$3E,$40,$F5,$42,$44; 0x1eb87 $EB77 18 1A F5 3E 40 F5 42 44 ;
.byt    $F5,$01,$01,$F5,$03,$03,$F5,$71; 0x1eb8f $EB7F F5 01 01 F5 03 03 F5 71 ;
.byt    $73,$F5,$75,$77,$F5,$21,$23,$F5; 0x1eb97 $EB87 73 F5 75 77 F5 21 23 F5 ;
.byt    $25,$27,$F5,$81,$83,$F5,$AD,$AF; 0x1eb9f $EB8F 25 27 F5 81 83 F5 AD AF ;
LEB97                                                                          ;
.byt    $00,$06,$0C,$18,$1E,$24,$12,$30; 0x1eba7 $EB97 00 06 0C 18 1E 24 12 30 ;
.byt    $36,$54,$4E,$5A,$60,$66,$6C,$10; 0x1ebaf $EB9F 36 54 4E 5A 60 66 6C 10 ;
.byt    $0C,$00,$04,$04                ; 0x1ebb7 $EBA7 0C 00 04 04             ;
LEBAB                                                                          ;
.byt    $00,$14                        ; 0x1ebbb $EBAB 00 14                   ;
LEBAD                                                                          ;
.byt    $EC,$0C,$08                    ; 0x1ebbd $EBAD EC 0C 08                ;
bank7_Table_for_Fairy_floating_movement                                        ;
.byt    $01,$02,$03,$04,$03,$02,$01,$00; 0x1ebc0 $EBB0 01 02 03 04 03 02 01 00 ;
; ---------------------------------------------------------------------------- ;
bank7_code47                                                                   ;
lda      $C8                           ; 0x1ebc8 $EBB8 A5 C8                   ;; go outside: set $c8 to 3
and      #$06                          ; 0x1ebca $EBBA 29 06                   ; keep bits .... .xx.
bne      LEBEF                         ; 0x1ebcc $EBBC D0 31                   ; if not Swamp, skip
lda      $12                           ; 0x1ebce $EBBE A5 12                   ;; Frame Counter (ascending)
and      #$38                          ; 0x1ebd0 $EBC0 29 38                   ; keep bits ..xx x...
lsr                                    ; 0x1ebd2 $EBC2 4A                      ;
lsr                                    ; 0x1ebd3 $EBC3 4A                      ;
lsr                                    ; 0x1ebd4 $EBC4 4A                      ;
tay                                    ; 0x1ebd5 $EBC5 A8                      ;
lda      $29                           ; 0x1ebd6 $EBC6 A5 29                   ; Link's Y position
adc      #$08                          ; 0x1ebd8 $EBC8 69 08                   ;
adc      bank7_Table_for_Fairy_floating_movement,y; 0x1ebda $EBCA 79 B0 EB     ;
sta      $0208                         ; 0x1ebdd $EBCD 8D 08 02                ;
lda      $CC                           ; 0x1ebe0 $EBD0 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
adc      #$0C                          ; 0x1ebe2 $EBD2 69 0C                   ;
sta      $020B                         ; 0x1ebe4 $EBD4 8D 0B 02                ;
lda      $12                           ; 0x1ebe7 $EBD7 A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1ebe9 $EBD9 29 04                   ; keep bits .... .x..
lsr                                    ; 0x1ebeb $EBDB 4A                      ;
adc      #$68                          ; 0x1ebec $EBDC 69 68                   ;
sta      $0209                         ; 0x1ebee $EBDE 8D 09 02                ;
ldy      #$01                          ; 0x1ebf1 $EBE1 A0 01                   ; Y = 01
lda      $050C                         ; 0x1ebf3 $EBE3 AD 0C 05                ; Timer for Link being in injured state
beq      LEBEC                         ; 0x1ebf6 $EBE6 F0 04                   ;
lsr                                    ; 0x1ebf8 $EBE8 4A                      ;
and      #$03                          ; 0x1ebf9 $EBE9 29 03                   ; keep bits .... ..xx
tay                                    ; 0x1ebfb $EBEB A8                      ;
LEBEC                                                                          ;
sty      $020A                         ; 0x1ebfc $EBEC 8C 0A 02                ;
LEBEF                                                                          ;
rts                                    ; 0x1ebff $EBEF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Links_Display_Routine                                                    ;
lda      $048D                         ; 0x1ec00 $EBF0 AD 8D 04                ; related to Link's flicker after being hit ?
bne      LEBEF                         ; 0x1ec03 $EBF3 D0 FA                   ;
ldx      #$00                          ; 0x1ec05 $EBF5 A2 00                   ; X = 00
stx      $11                           ; 0x1ec07 $EBF7 86 11                   ;
lda      #$08                          ; 0x1ec09 $EBF9 A9 08                   ; A = 08
sta      $90                           ; 0x1ec0b $EBFB 85 90                   ;
ldy      #$00                          ; 0x1ec0d $EBFD A0 00                   ; Y = 00
jsr      bank7_code51                  ; 0x1ec0f $EBFF 20 7D F2                ;
LEC02                                                                          ;
ldx      $11                           ; 0x1ec12 $EC02 A6 11                   ;
lda      $29,x                         ; 0x1ec14 $EC04 B5 29                   ; Link's Y Position ( ,X ?)
cpx      #$00                          ; 0x1ec16 $EC06 E0 00                   ;
bne      LEC17                         ; 0x1ec18 $EC08 D0 0D                   ;
ldy      $0479                         ; 0x1ec1a $EC0A AC 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
beq      LEC17                         ; 0x1ec1d $EC0D F0 08                   ;
ldy      $80,x                         ; 0x1ec1f $EC0F B4 80                   ; Link's Animation Frame
cpy      #$06                          ; 0x1ec21 $EC11 C0 06                   ; 06 = Ducked
bne      LEC17                         ; 0x1ec23 $EC13 D0 02                   ;
sbc      #$04                          ; 0x1ec25 $EC15 E9 04                   ;
LEC17                                                                          ;
sta      L0000                         ; 0x1ec27 $EC17 85 00                   ;
lda      #$F8                          ; 0x1ec29 $EC19 A9 F8                   ; A = F8
sta      $0480,x                       ; 0x1ec2b $EC1B 9D 80 04                ;
lda      $13                           ; 0x1ec2e $EC1E A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      bank7_code47                  ; 0x1ec30 $EC20 D0 96                   ;
lda      $0752                         ; 0x1ec32 $EC22 AD 52 07                ;
beq      LEC40                         ; 0x1ec35 $EC25 F0 19                   ;
lda      $29                           ; 0x1ec37 $EC27 A5 29                   ; Link's Y Position
bpl      LEC40                         ; 0x1ec39 $EC29 10 15                   ;
lda      $70                           ; 0x1ec3b $EC2B A5 70                   ; Link's Walking Velocity
beq      LEC40                         ; 0x1ec3d $EC2D F0 11                   ;
lda      $12                           ; 0x1ec3f $EC2F A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1ec41 $EC31 4A                      ;
lsr                                    ; 0x1ec42 $EC32 4A                      ;
lsr                                    ; 0x1ec43 $EC33 4A                      ;
lsr                                    ; 0x1ec44 $EC34 4A                      ;
and      #$07                          ; 0x1ec45 $EC35 29 07                   ; keep bits .... .xxx
tay                                    ; 0x1ec47 $EC37 A8                      ;
lda      L0000                         ; 0x1ec48 $EC38 A5 00                   ;
sec                                    ; 0x1ec4a $EC3A 38                      ;
sbc      bank7_Table_for_Fairy_floating_movement,y; 0x1ec4b $EC3B F9 B0 EB     ;
sta      L0000                         ; 0x1ec4e $EC3E 85 00                   ;
LEC40                                                                          ;
ldy      $90,x                         ; 0x1ec50 $EC40 B4 90                   ;
lda      $80,x                         ; 0x1ec52 $EC42 B5 80                   ; Link's Animation Frame
tax                                    ; 0x1ec54 $EC44 AA                      ;
lda      LEB97,x                       ; 0x1ec55 $EC45 BD 97 EB                ;
tax                                    ; 0x1ec58 $EC48 AA                      ;
lda      $C8                           ; 0x1ec59 $EC49 A5 C8                   ;; go outside: set $c8 to 3
and      #$C0                          ; 0x1ec5b $EC4B 29 C0                   ; keep bits xx.. ....
bne      LEC62                         ; 0x1ec5d $EC4D D0 13                   ;
lda      $0752                         ; 0x1ec5f $EC4F AD 52 07                ;
pha                                    ; 0x1ec62 $EC52 48                      ;
lda      $070E                         ; 0x1ec63 $EC53 AD 0E 07                ;;setting to 1 will make link sink (duck into the chimney)
bne      LEC5B                         ; 0x1ec66 $EC56 D0 03                   ;
sta      $0752                         ; 0x1ec68 $EC58 8D 52 07                ;
LEC5B                                                                          ;
jsr      bank7_Sword_Slash_Display_maybe; 0x1ec6b $EC5B 20 7A ED               ;
pla                                    ; 0x1ec6e $EC5E 68                      ;
sta      $0752                         ; 0x1ec6f $EC5F 8D 52 07                ;
LEC62                                                                          ;
lda      $C8                           ; 0x1ec72 $EC62 A5 C8                   ;; go outside: set $c8 to 3
and      #$30                          ; 0x1ec74 $EC64 29 30                   ; keep bits ..xx ....
bne      LEC6B                         ; 0x1ec76 $EC66 D0 03                   ;
jsr      bank7_Sword_Slash_Display_maybe; 0x1ec78 $EC68 20 7A ED               ;
LEC6B                                                                          ;
ldy      #$14                          ; 0x1ec7b $EC6B A0 14                   ; Y = 14
LEC6D                                                                          ;
lda      $0209,y                       ; 0x1ec7d $EC6D B9 09 02                ;
cmp      #$F5                          ; 0x1ec80 $EC70 C9 F5                   ;
bne      LEC79                         ; 0x1ec82 $EC72 D0 05                   ;
lda      #$F8                          ; 0x1ec84 $EC74 A9 F8                   ; A = F8
sta      $0208,y                       ; 0x1ec86 $EC76 99 08 02                ;
LEC79                                                                          ;
dey                                    ; 0x1ec89 $EC79 88                      ;
dey                                    ; 0x1ec8a $EC7A 88                      ;
dey                                    ; 0x1ec8b $EC7B 88                      ;
dey                                    ; 0x1ec8c $EC7C 88                      ;
bpl      LEC6D                         ; 0x1ec8d $EC7D 10 EE                   ;
ldx      $11                           ; 0x1ec8f $EC7F A6 11                   ;
ldy      $90,x                         ; 0x1ec91 $EC81 B4 90                   ;
lda      $0203,y                       ; 0x1ec93 $EC83 B9 03 02                ;
sta      $15,x                         ; 0x1ec96 $EC86 95 15                   ;
lda      $80,x                         ; 0x1ec98 $EC88 B5 80                   ; Link's Animation Frame
cmp      #$0B                          ; 0x1ec9a $EC8A C9 0B                   ;
bne      LEC96                         ; 0x1ec9c $EC8C D0 08                   ;
lda      #$40                          ; 0x1ec9e $EC8E A9 40                   ;;A = #$40 0100_0000
sta      $020A,y                       ; 0x1eca0 $EC90 99 0A 02                ;
sta      $0216,y                       ; 0x1eca3 $EC93 99 16 02                ;
LEC96                                                                          ;
pha                                    ; 0x1eca6 $EC96 48                      ;
lda      $9F,x                         ; 0x1eca7 $EC97 B5 9F                   ;
tax                                    ; 0x1eca9 $EC99 AA                      ;
dex                                    ; 0x1ecaa $EC9A CA                      ;
pla                                    ; 0x1ecab $EC9B 68                      ;
cmp      #$05                          ; 0x1ecac $EC9C C9 05                   ; 05 = Sword Strike
bne      bank7_Strike_Ducked           ; 0x1ecae $EC9E D0 30                   ;
lda      #$32                          ; 0x1ecb0 $ECA0 A9 32                   ; A = 32 (tile for sword slash)
sta      $0219,y                       ; 0x1ecb2 $ECA2 99 19 02                ;
ldx      $11                           ; 0x1ecb5 $ECA5 A6 11                   ;
lda      $29,x                         ; 0x1ecb7 $ECA7 B5 29                   ; Link's Y Position ( ,X ?)
sta      $0218,y                       ; 0x1ecb9 $ECA9 99 18 02                ;
LECAC                                                                          ;
lda      $CC,x                         ; 0x1ecbc $ECAC B5 CC                   ;
pha                                    ; 0x1ecbe $ECAE 48                      ;
lda      $9F,x                         ; 0x1ecbf $ECAF B5 9F                   ;
tax                                    ; 0x1ecc1 $ECB1 AA                      ;
pla                                    ; 0x1ecc2 $ECB2 68                      ;
clc                                    ; 0x1ecc3 $ECB3 18                      ;
adc      #$0C                          ; 0x1ecc4 $ECB4 69 0C                   ;
clc                                    ; 0x1ecc6 $ECB6 18                      ;
adc      LEBAB,x                       ; 0x1ecc7 $ECB7 7D AB EB                ;
sta      $021B,y                       ; 0x1ecca $ECBA 99 1B 02                ;
php                                    ; 0x1eccd $ECBD 08                      ;
dex                                    ; 0x1ecce $ECBE CA                      ;
beq      LECC5                         ; 0x1eccf $ECBF F0 04                   ;
pla                                    ; 0x1ecd1 $ECC1 68                      ;
eor      #$01                          ; 0x1ecd2 $ECC2 49 01                   ; flip bits .... ...x
pha                                    ; 0x1ecd4 $ECC4 48                      ;
LECC5                                                                          ;
plp                                    ; 0x1ecd5 $ECC5 28                      ;
bcc      LECCD                         ; 0x1ecd6 $ECC6 90 05                   ;
lda      #$F8                          ; 0x1ecd8 $ECC8 A9 F8                   ; A = F8
sta      $0218,y                       ; 0x1ecda $ECCA 99 18 02                ;
LECCD                                                                          ;
jmp      LED67                         ; 0x1ecdd $ECCD 4C 67 ED                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Strike_Ducked                                                            ;
cmp      #$07                          ; 0x1ece0 $ECD0 C9 07                   ;
bne      bank7_Up_Stab                 ; 0x1ece2 $ECD2 D0 12                   ;
lda      #$54                          ; 0x1ece4 $ECD4 A9 54                   ; A = 54
sta      $0219,y                       ; 0x1ece6 $ECD6 99 19 02                ;
ldx      $11                           ; 0x1ece9 $ECD9 A6 11                   ;
lda      $29,x                         ; 0x1eceb $ECDB B5 29                   ;;y_pos (Link's y position in sideview)
clc                                    ; 0x1eced $ECDD 18                      ;
adc      #$10                          ; 0x1ecee $ECDE 69 10                   ;
sta      $0218,y                       ; 0x1ecf0 $ECE0 99 18 02                ;
jmp      LECAC                         ; 0x1ecf3 $ECE3 4C AC EC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Up_Stab                                                                  ;
cmp      #$08                          ; 0x1ecf6 $ECE6 C9 08                   ;
bne      LED02                         ; 0x1ecf8 $ECE8 D0 18                   ;
LECEA                                                                          ;
ldx      $11                           ; 0x1ecfa $ECEA A6 11                   ;
lda      $15,x                         ; 0x1ecfc $ECEC B5 15                   ;
ldy      $9F,x                         ; 0x1ecfe $ECEE B4 9F                   ;
clc                                    ; 0x1ed00 $ECF0 18                      ;
adc      LEBAD,y                       ; 0x1ed01 $ECF1 79 AD EB                ;
sta      $047E,x                       ; 0x1ed04 $ECF4 9D 7E 04                ;
ldy      $90,x                         ; 0x1ed07 $ECF7 B4 90                   ;
lda      $29,x                         ; 0x1ed09 $ECF9 B5 29                   ;;y_pos (Link's y position in sideview)
sec                                    ; 0x1ed0b $ECFB 38                      ;
sbc      #$04                          ; 0x1ed0c $ECFC E9 04                   ;
sta      $0480,x                       ; 0x1ed0e $ECFE 9D 80 04                ;
rts                                    ; 0x1ed11 $ED01 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LED02                                                                          ;
ldx      $11                           ; 0x1ed12 $ED02 A6 11                   ;
lda      $80,x                         ; 0x1ed14 $ED04 B5 80                   ;
cmp      #$09                          ; 0x1ed16 $ED06 C9 09                   ; 09 = Downstab
bne      LED1B                         ; 0x1ed18 $ED08 D0 11                   ;
jsr      LECEA                         ; 0x1ed1a $ED0A 20 EA EC                ;
clc                                    ; 0x1ed1d $ED0D 18                      ;
adc      #$25                          ; 0x1ed1e $ED0E 69 25                   ;
sta      $0480,x                       ; 0x1ed20 $ED10 9D 80 04                ;
lda      $CC,x                         ; 0x1ed23 $ED13 B5 CC                   ;
clc                                    ; 0x1ed25 $ED15 18                      ;
adc      #$10                          ; 0x1ed26 $ED16 69 10                   ;
sta      $047E,x                       ; 0x1ed28 $ED18 9D 7E 04                ;
LED1B                                                                          ;
lda      $80                           ; 0x1ed2b $ED1B A5 80                   ; Link's Animation Frame
cmp      #$0C                          ; 0x1ed2d $ED1D C9 0C                   ; 0C = Item in hand
bcc      LED66                         ; 0x1ed2f $ED1F 90 45                   ;
lda      $049D                         ; 0x1ed31 $ED21 AD 9D 04                ;;hold item above head: item id	; Related to Palace Item
asl                                    ; 0x1ed34 $ED24 0A                      ;
tay                                    ; 0x1ed35 $ED25 A8                      ;
lda      LEE7F,y                       ; 0x1ed36 $ED26 B9 7F EE                ; Tile Mapping for Item Y
sta      $0221                         ; 0x1ed39 $ED29 8D 21 02                ;
lda      LEE80,y                       ; 0x1ed3c $ED2C B9 80 EE                ;
sta      $0225                         ; 0x1ed3f $ED2F 8D 25 02                ;
lda      $29                           ; 0x1ed42 $ED32 A5 29                   ; Link's Y Position
sec                                    ; 0x1ed44 $ED34 38                      ;
sbc      #$10                          ; 0x1ed45 $ED35 E9 10                   ;
sta      $0220                         ; 0x1ed47 $ED37 8D 20 02                ;
sta      $0224                         ; 0x1ed4a $ED3A 8D 24 02                ;
lda      $CC                           ; 0x1ed4d $ED3D A5 CC                   ; Link's X Position on Screen
clc                                    ; 0x1ed4f $ED3F 18                      ;
adc      #$08                          ; 0x1ed50 $ED40 69 08                   ;
sta      $0223                         ; 0x1ed52 $ED42 8D 23 02                ;
adc      #$08                          ; 0x1ed55 $ED45 69 08                   ;
sta      $0227                         ; 0x1ed57 $ED47 8D 27 02                ;
lda      #$01                          ; 0x1ed5a $ED4A A9 01                   ; A = 01
sta      $0222                         ; 0x1ed5c $ED4C 8D 22 02                ;
lda      #$41                          ; 0x1ed5f $ED4F A9 41                   ; A = 41
sta      $0226                         ; 0x1ed61 $ED51 8D 26 02                ;
ldy      $049D                         ; 0x1ed64 $ED54 AC 9D 04                ;;hold item above head: item id	; Related to Palace Item
cpy      #$10                          ; 0x1ed67 $ED57 C0 10                   ;
bcc      LED66                         ; 0x1ed69 $ED59 90 0B                   ;
lda      LF0FC,y                       ; 0x1ed6b $ED5B B9 FC F0                ;
sta      $0222                         ; 0x1ed6e $ED5E 8D 22 02                ;
ora      #$40                          ; 0x1ed71 $ED61 09 40                   ; set bits  .x.. ....
sta      $0226                         ; 0x1ed73 $ED63 8D 26 02                ;
LED66                                                                          ;
rts                                    ; 0x1ed76 $ED66 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LED67                                                                          ;
ldx      $11                           ; 0x1ed77 $ED67 A6 11                   ;
lda      $0218,y                       ; 0x1ed79 $ED69 B9 18 02                ;
sta      $0480,x                       ; 0x1ed7c $ED6C 9D 80 04                ;
lda      $021B,y                       ; 0x1ed7f $ED6F B9 1B 02                ;
sta      $047E,x                       ; 0x1ed82 $ED72 9D 7E 04                ;
LED77     = * + $0002                                                          ;
jmp      LED02                         ; 0x1ed85 $ED75 4C 02 ED                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table29                                                                  ;
.byt    $F8,$08                        ; 0x1ed88 $ED78 F8 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_Sword_Slash_Display_maybe                                                ;
sty      $08                           ; 0x1ed8a $ED7A 84 08                   ;
stx      $09                           ; 0x1ed8c $ED7C 86 09                   ;
lda      bank7_UNKNOWN1,x              ; 0x1ed8e $ED7E BD 25 EB                ;
sta      $0201,y                       ; 0x1ed91 $ED81 99 01 02                ;
lda      LEB26,x                       ; 0x1ed94 $ED84 BD 26 EB                ;
sta      $0205,y                       ; 0x1ed97 $ED87 99 05 02                ;
lda      LEB27,x                       ; 0x1ed9a $ED8A BD 27 EB                ;
sta      $0209,y                       ; 0x1ed9d $ED8D 99 09 02                ;
lda      #$00                          ; 0x1eda0 $ED90 A9 00                   ; A = 00
sta      $01                           ; 0x1eda2 $ED92 85 01                   ;
ldx      $11                           ; 0x1eda4 $ED94 A6 11                   ;
lda      $C8,x                         ; 0x1eda6 $ED96 B5 C8                   ;
sta      $0B                           ; 0x1eda8 $ED98 85 0B                   ;
lda      $CC,x                         ; 0x1edaa $ED9A B5 CC                   ;
pha                                    ; 0x1edac $ED9C 48                      ;
lda      $9F,x                         ; 0x1edad $ED9D B5 9F                   ;
ldy      $80,x                         ; 0x1edaf $ED9F B4 80                   ;
tax                                    ; 0x1edb1 $EDA1 AA                      ;
pla                                    ; 0x1edb2 $EDA2 68                      ;
cpy      #$04                          ; 0x1edb3 $EDA3 C0 04                   ;
bne      LEDC1                         ; 0x1edb5 $EDA5 D0 1A                   ;
clc                                    ; 0x1edb7 $EDA7 18                      ;
adc      LED77,x                       ; 0x1edb8 $EDA8 7D 77 ED                ;
pha                                    ; 0x1edbb $EDAB 48                      ;
stx      $D9                           ; 0x1edbc $EDAC 86 D9                   ;; Thunder Spell modifier ?
ldx      #$00                          ; 0x1edbe $EDAE A2 00                   ; X = 00
ldy      #$00                          ; 0x1edc0 $EDB0 A0 00                   ; Y = 00
jsr      LF2D3                         ; 0x1edc2 $EDB2 20 D3 F2                ;
lsr                                    ; 0x1edc5 $EDB5 4A                      ;
lsr                                    ; 0x1edc6 $EDB6 4A                      ;
lsr                                    ; 0x1edc7 $EDB7 4A                      ;
dec      $D9                           ; 0x1edc8 $EDB8 C6 D9                   ;; Thunder Spell modifier ?
bne      LEDBE                         ; 0x1edca $EDBA D0 02                   ;
lsr                                    ; 0x1edcc $EDBC 4A                      ;
lsr                                    ; 0x1edcd $EDBD 4A                      ;
LEDBE                                                                          ;
sta      $0B                           ; 0x1edce $EDBE 85 0B                   ;
pla                                    ; 0x1edd0 $EDC0 68                      ;
LEDC1                                                                          ;
sta      $02                           ; 0x1edd1 $EDC1 85 02                   ;
ldx      $11                           ; 0x1edd3 $EDC3 A6 11                   ;
lda      $9F,x                         ; 0x1edd5 $EDC5 B5 9F                   ;
ldx      $09                           ; 0x1edd7 $EDC7 A6 09                   ;
ldy      $08                           ; 0x1edd9 $EDC9 A4 08                   ;
lsr                                    ; 0x1eddb $EDCB 4A                      ;
bne      LEDE7                         ; 0x1eddc $EDCC D0 19                   ;
asl      $0B                           ; 0x1edde $EDCE 06 0B                   ;
lda      bank7_UNKNOWN1,x              ; 0x1ede0 $EDD0 BD 25 EB                ;
sta      $0209,y                       ; 0x1ede3 $EDD3 99 09 02                ;
lda      LEB27,x                       ; 0x1ede6 $EDD6 BD 27 EB                ;
sta      $0201,y                       ; 0x1ede9 $EDD9 99 01 02                ;
lda      $02                           ; 0x1edec $EDDC A5 02                   ;
clc                                    ; 0x1edee $EDDE 18                      ;
adc      #$08                          ; 0x1edef $EDDF 69 08                   ;
sta      $02                           ; 0x1edf1 $EDE1 85 02                   ;
lda      #$40                          ; 0x1edf3 $EDE3 A9 40                   ; A = 40
sta      $01                           ; 0x1edf5 $EDE5 85 01                   ;
LEDE7                                                                          ;
ldx      $11                           ; 0x1edf7 $EDE7 A6 11                   ;
lda      $050C,x                       ; 0x1edf9 $EDE9 BD 0C 05                ;
beq      LEDF1                         ; 0x1edfc $EDEC F0 03                   ;
lsr                                    ; 0x1edfe $EDEE 4A                      ;
and      #$03                          ; 0x1edff $EDEF 29 03                   ; keep bits .... ..xx
LEDF1                                                                          ;
ora      $01                           ; 0x1ee01 $EDF1 05 01                   ;
ora      $0752,x                       ; 0x1ee03 $EDF3 1D 52 07                ;
ldx      $B5                           ; 0x1ee06 $EDF6 A6 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
dex                                    ; 0x1ee08 $EDF8 CA                      ;
beq      LEDFD                         ; 0x1ee09 $EDF9 F0 02                   ;
ora      #$20                          ; 0x1ee0b $EDFB 09 20                   ; set bits  ..x. ....
LEDFD                                                                          ;
sta      $0202,y                       ; 0x1ee0d $EDFD 99 02 02                ;
sta      $0206,y                       ; 0x1ee10 $EE00 99 06 02                ;
sta      $020A,y                       ; 0x1ee13 $EE03 99 0A 02                ;
sta      $020E,y                       ; 0x1ee16 $EE06 99 0E 02                ;
lda      L0000                         ; 0x1ee19 $EE09 A5 00                   ;
sta      $0200,y                       ; 0x1ee1b $EE0B 99 00 02                ;
sta      $0204,y                       ; 0x1ee1e $EE0E 99 04 02                ;
sta      $0208,y                       ; 0x1ee21 $EE11 99 08 02                ;
clc                                    ; 0x1ee24 $EE14 18                      ;
adc      #$10                          ; 0x1ee25 $EE15 69 10                   ;
sta      L0000                         ; 0x1ee27 $EE17 85 00                   ;
lda      #$08                          ; 0x1ee29 $EE19 A9 08                   ; A = 08
sta      $0A                           ; 0x1ee2b $EE1B 85 0A                   ;
ldx      #$03                          ; 0x1ee2d $EE1D A2 03                   ; X = 03
LEE1F                                                                          ;
lda      $0A                           ; 0x1ee2f $EE1F A5 0A                   ;
and      $0B                           ; 0x1ee31 $EE21 25 0B                   ;
beq      LEE2A                         ; 0x1ee33 $EE23 F0 05                   ;
lda      #$F8                          ; 0x1ee35 $EE25 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1ee37 $EE27 99 00 02                ;
LEE2A                                                                          ;
iny                                    ; 0x1ee3a $EE2A C8                      ;
iny                                    ; 0x1ee3b $EE2B C8                      ;
iny                                    ; 0x1ee3c $EE2C C8                      ;
iny                                    ; 0x1ee3d $EE2D C8                      ;
lsr      $0A                           ; 0x1ee3e $EE2E 46 0A                   ;
dex                                    ; 0x1ee40 $EE30 CA                      ;
bne      LEE1F                         ; 0x1ee41 $EE31 D0 EC                   ;
ldy      $08                           ; 0x1ee43 $EE33 A4 08                   ;
ldx      $09                           ; 0x1ee45 $EE35 A6 09                   ;
lda      $02                           ; 0x1ee47 $EE37 A5 02                   ;
sta      $0203,y                       ; 0x1ee49 $EE39 99 03 02                ;
clc                                    ; 0x1ee4c $EE3C 18                      ;
adc      #$08                          ; 0x1ee4d $EE3D 69 08                   ;
sta      $0207,y                       ; 0x1ee4f $EE3F 99 07 02                ;
clc                                    ; 0x1ee52 $EE42 18                      ;
adc      #$08                          ; 0x1ee53 $EE43 69 08                   ;
sta      $020B,y                       ; 0x1ee55 $EE45 99 0B 02                ;
inx                                    ; 0x1ee58 $EE48 E8                      ;
inx                                    ; 0x1ee59 $EE49 E8                      ;
inx                                    ; 0x1ee5a $EE4A E8                      ;
tya                                    ; 0x1ee5b $EE4B 98                      ;
clc                                    ; 0x1ee5c $EE4C 18                      ;
adc      #$0C                          ; 0x1ee5d $EE4D 69 0C                   ;
tay                                    ; 0x1ee5f $EE4F A8                      ;
rts                                    ; 0x1ee60 $EE50 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_item_sprites_map_to_graphic_image                                  ;
;this means: tile code of the item                                             ;
;the item has a tile code (a number) associated which is used to index in the graphics table (or something);
.byt    $86                            ; 0x1ee61 $EE51 86                      ;
LEE52                                                                          ;
.byt    $86,$88,$88,$DC,$DE,$AC,$AC,$E4; 0x1ee62 $EE52 86 88 88 DC DE AC AC E4 ;
.byt    $E6,$E8,$EA,$C0,$C2,$C0,$C4,$BA; 0x1ee6a $EE5A E6 E8 EA C0 C2 C0 C4 BA ;
.byt    $BC,$C6,$C8,$CA,$CC,$50,$50,$4E; 0x1ee72 $EE62 BC C6 C8 CA CC 50 50 4E ;
.byt    $4E,$7C,$7E,$80,$82,$B6,$B8,$BB; 0x1ee7a $EE6A 4E 7C 7E 80 82 B6 B8 BB ;
.byt    $BD,$BF,$C1,$C3,$C3,$B2,$B2,$B4; 0x1ee82 $EE72 BD BF C1 C3 C3 B2 B2 B4 ;
.byt    $B4,$24,$24,$B0,$B0            ; 0x1ee8a $EE7A B4 24 24 B0 B0          ;
LEE7F                                                                          ;
.byt    $8C                            ; 0x1ee8f $EE7F 8C                      ;
; Tile Mappings for Items (2E bytes)                                           ;
;                                                                              ;
; 8C F5	Candle                                                                 ;
; 8E F5	Glove                                                                  ;
; 90 F5	Raft                                                                   ;
; 92 F5	Boot                                                                   ;
; 94 F5	Flute                                                                  ;
; 96 F5	Cross                                                                  ;
; 98 F5	Hammer                                                                 ;
; 9A F5	Magic Key                                                              ;
; 66 F5	Key                                                                    ;
; 00 F5	Invalid Index                                                          ;
; 72 F5	Experience Bag - 50 pts                                                ;
; 72 F5	Experience Bag - 100 pts                                               ;
; 72 F5	Experience Bag - 200 pts                                               ;
; 72 F5	Experience Bag - 500 pts                                               ;
; 83 83	Magic Container                                                        ;
; 81 81	Heart Container                                                        ;
; 8A F5	Blue Jar                                                               ;
; 8A F5	Red Jar                                                                ;
; A8 F5	Link Doll                                                              ;
; 31 31	Medicine                                                               ;
; 2F 2F	Trophy                                                                 ;
; 31 31	Kidnapped Child                                                        ;
; 67 67	Invalid Index ?                                                        ;
LEE80                                                                          ;
.byt    $F5,$8E,$F5,$90,$F5,$92,$F5,$94; 0x1ee90 $EE80 F5 8E F5 90 F5 92 F5 94 ;
.byt    $F5,$96,$F5,$98,$F5,$9A,$F5,$66; 0x1ee98 $EE88 F5 96 F5 98 F5 9A F5 66 ;
.byt    $F5,$00,$F5,$72,$F5,$72,$F5,$72; 0x1eea0 $EE90 F5 00 F5 72 F5 72 F5 72 ;
.byt    $F5,$72,$F5,$83,$83,$81,$81,$8A; 0x1eea8 $EE98 F5 72 F5 83 83 81 81 8A ;
.byt    $F5,$8A,$F5,$A8,$F5,$31,$31,$2F; 0x1eeb0 $EEA0 F5 8A F5 A8 F5 31 31 2F ;
.byt    $2F,$31,$31,$67,$67,$00,$02,$02; 0x1eeb8 $EEA8 2F 31 31 67 67 00 02 02 ;
.byt    $00,$00                        ; 0x1eec0 $EEB0 00 00                   ;
LEEB2                                                                          ;
.byt    $C0,$18,$90,$11,$98,$9D,$0E,$04; 0x1eec2 $EEB2 C0 18 90 11 98 9D 0E 04 ;
.byt    $B5,$91,$48,$69,$0F,$95,$91,$20; 0x1eeca $EEBA B5 91 48 69 0F 95 91 20 ;
.byt    $11,$EF,$68,$95,$91,$A9,$00,$9D; 0x1eed2 $EEC2 11 EF 68 95 91 A9 00 9D ;
.byt    $0E,$04,$B4,$A1,$B9,$1D,$6E,$48; 0x1eeda $EECA 0E 04 B4 A1 B9 1D 6E 48 ;
.byt    $B5,$2A,$85,$00,$A5,$CD,$85,$01; 0x1eee2 $EED2 B5 2A 85 00 A5 CD 85 01 ;
.byt    $A9,$02,$85,$02,$A5,$12,$0A,$0A; 0x1eeea $EEDA A9 02 85 02 A5 12 0A 0A ;
.byt    $0A,$0A,$0A,$29,$80,$09,$01,$85; 0x1eef2 $EEE2 0A 0A 0A 29 80 09 01 85 ;
.byt    $03,$B4,$91,$BD,$04,$05,$4A,$4A; 0x1eefa $EEEA 03 B4 91 BD 04 05 4A 4A ;
.byt    $4A,$AA,$BD,$AD,$EE,$AA,$20,$16; 0x1ef02 $EEF2 4A AA BD AD EE AA 20 16 ;
.byt    $F2,$20,$08,$EF,$68,$10,$05,$CA; 0x1ef0a $EEFA F2 20 08 EF 68 10 05 CA ;
.byt    $CA                            ; 0x1ef12 $EF02 CA                      ;
; ---------------------------------------------------------------------------- ;
bank7_code49                                                                   ;
jsr      LF216                         ; 0x1ef13 $EF03 20 16 F2                ;
ldx      $10                           ; 0x1ef16 $EF06 A6 10                   ;; used as monster x register ;draw boss hp bar
LEF08                                                                          ;
lda      $01FE,y                       ; 0x1ef18 $EF08 B9 FE 01                ;
ora      #$40                          ; 0x1ef1b $EF0B 09 40                   ; set bits .x.. ....
sta      $01FE,y                       ; 0x1ef1d $EF0D 99 FE 01                ;
rts                                    ; 0x1ef20 $EF10 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Display                                                                  ;
lda      $040E,x                       ; 0x1ef21 $EF11 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LEF19                         ; 0x1ef24 $EF14 F0 03                   ;
dec      $040E,x                       ; 0x1ef26 $EF16 DE 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
LEF19                                                                          ;
lda      $2A,x                         ; 0x1ef29 $EF19 B5 2A                   ; Enemy Y Position
sta      L0000                         ; 0x1ef2b $EF1B 85 00                   ;
lda      $CD                           ; 0x1ef2d $EF1D A5 CD                   ;
sta      $01                           ; 0x1ef2f $EF1F 85 01                   ;
lda      $60,x                         ; 0x1ef31 $EF21 B5 60                   ;; Enemy facing direction
sta      $02                           ; 0x1ef33 $EF23 85 02                   ;
lda      #$00                          ; 0x1ef35 $EF25 A9 00                   ; A = 00
sta      $03                           ; 0x1ef37 $EF27 85 03                   ;
lda      $A1,x                         ; 0x1ef39 $EF29 B5 A1                   ; Enemy Code
tay                                    ; 0x1ef3b $EF2B A8                      ;
lda      $6DD5,y                       ; 0x1ef3c $EF2C B9 D5 6D                ;
asl                                    ; 0x1ef3f $EF2F 0A                      ;
rol      $03                           ; 0x1ef40 $EF30 26 03                   ;
asl                                    ; 0x1ef42 $EF32 0A                      ;
rol      $03                           ; 0x1ef43 $EF33 26 03                   ;
tya                                    ; 0x1ef45 $EF35 98                      ;
asl                                    ; 0x1ef46 $EF36 0A                      ;
tay                                    ; 0x1ef47 $EF37 A8                      ;
lda      $6E65,y                       ; 0x1ef48 $EF38 B9 65 6E                ;
sta      L000E                         ; 0x1ef4b $EF3B 85 0E                   ;
lda      $6E66,y                       ; 0x1ef4d $EF3D B9 66 6E                ;
sta      $0F                           ; 0x1ef50 $EF40 85 0F                   ;
ldy      $91,x                         ; 0x1ef52 $EF42 B4 91                   ;
jmp      (L000E)                       ; 0x1ef54 $EF44 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Elevator                                                 ;
ldx      #$06                          ; 0x1ef57 $EF47 A2 06                   ; X = 06
jsr      LF216                         ; 0x1ef59 $EF49 20 16 F2                ;
dex                                    ; 0x1ef5c $EF4C CA                      ;
dex                                    ; 0x1ef5d $EF4D CA                      ;
iny                                    ; 0x1ef5e $EF4E C8                      ;
iny                                    ; 0x1ef5f $EF4F C8                      ;
iny                                    ; 0x1ef60 $EF50 C8                      ;
iny                                    ; 0x1ef61 $EF51 C8                      ;
lda      L0000                         ; 0x1ef62 $EF52 A5 00                   ;
clc                                    ; 0x1ef64 $EF54 18                      ;
adc      #$18                          ; 0x1ef65 $EF55 69 18                   ;
sta      L0000                         ; 0x1ef67 $EF57 85 00                   ;
jsr      LF216                         ; 0x1ef69 $EF59 20 16 F2                ;
lda      L0000                         ; 0x1ef6c $EF5C A5 00                   ;
sec                                    ; 0x1ef6e $EF5E 38                      ;
sbc      #$10                          ; 0x1ef6f $EF5F E9 10                   ;
sta      $0200,y                       ; 0x1ef71 $EF61 99 00 02                ;
sec                                    ; 0x1ef74 $EF64 38                      ;
sbc      #$28                          ; 0x1ef75 $EF65 E9 28                   ;
sta      $01F4,y                       ; 0x1ef77 $EF67 99 F4 01                ;
lda      $01                           ; 0x1ef7a $EF6A A5 01                   ;
clc                                    ; 0x1ef7c $EF6C 18                      ;
adc      #$10                          ; 0x1ef7d $EF6D 69 10                   ;
sta      $01F7,y                       ; 0x1ef7f $EF6F 99 F7 01                ;
sta      $0203,y                       ; 0x1ef82 $EF72 99 03 02                ;
ldx      #$AC                          ; 0x1ef85 $EF75 A2 AC                   ; X = AC
lda      $C9                           ; 0x1ef87 $EF77 A5 C9                   ;
and      #$02                          ; 0x1ef89 $EF79 29 02                   ; keep bits .... ..x.
beq      LEF7F                         ; 0x1ef8b $EF7B F0 02                   ;
ldx      #$F5                          ; 0x1ef8d $EF7D A2 F5                   ; X = F5
LEF7F                                                                          ;
txa                                    ; 0x1ef8f $EF7F 8A                      ;
sta      $01F5,y                       ; 0x1ef90 $EF80 99 F5 01                ;
sta      $0201,y                       ; 0x1ef93 $EF83 99 01 02                ;
lda      #$01                          ; 0x1ef96 $EF86 A9 01                   ; A = 01
sta      $01F6,y                       ; 0x1ef98 $EF88 99 F6 01                ;
sta      $0202,y                       ; 0x1ef9b $EF8B 99 02 02                ;
ldx      $10                           ; 0x1ef9e $EF8E A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1efa0 $EF90 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Bot_and_Bit                                              ;
lda      #$02                          ; 0x1efa1 $EF91 A9 02                   ; A = 02
sta      $02                           ; 0x1efa3 $EF93 85 02                   ;
lda      $81,x                         ; 0x1efa5 $EF95 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$26                          ; 0x1efa7 $EF97 A2 26                   ; X = 26
cmp      #$00                          ; 0x1efa9 $EF99 C9 00                   ;
beq      LEF9F                         ; 0x1efab $EF9B F0 02                   ;
inx                                    ; 0x1efad $EF9D E8                      ;
inx                                    ; 0x1efae $EF9E E8                      ;
LEF9F                                                                          ;
jsr      LF216                         ; 0x1efaf $EF9F 20 16 F2                ;
tya                                    ; 0x1efb2 $EFA2 98                      ;
tax                                    ; 0x1efb3 $EFA3 AA                      ;
ldy      $10                           ; 0x1efb4 $EFA4 A4 10                   ;; used as monster x register ;draw boss hp bar
lda      $AF,y                         ; 0x1efb6 $EFA6 B9 AF 00                ;
beq      LEFB7                         ; 0x1efb9 $EFA9 F0 0C                   ;
lda      $12                           ; 0x1efbb $EFAB A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1efbd $EFAD 29 04                   ; keep bits .... .x..
bne      LEFB7                         ; 0x1efbf $EFAF D0 06                   ;
inc      $01FB,x                       ; 0x1efc1 $EFB1 FE FB 01                ;
dec      $01FF,x                       ; 0x1efc4 $EFB4 DE FF 01                ;
LEFB7                                                                          ;
lda      $01FA,x                       ; 0x1efc7 $EFB7 BD FA 01                ;
ora      #$40                          ; 0x1efca $EFBA 09 40                   ; set  bits .x.. ....
sta      $01FE,x                       ; 0x1efcc $EFBC 9D FE 01                ;
ldx      $10                           ; 0x1efcf $EFBF A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1efd1 $EFC1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Myu                                                      ;
lda      #$02                          ; 0x1efd2 $EFC2 A9 02                   ; A = 02
sta      $02                           ; 0x1efd4 $EFC4 85 02                   ;
lda      $81,x                         ; 0x1efd6 $EFC6 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$2A                          ; 0x1efd8 $EFC8 A2 2A                   ; A = 2A
asl                                    ; 0x1efda $EFCA 0A                      ;
beq      LEFCF                         ; 0x1efdb $EFCB F0 02                   ;
inx                                    ; 0x1efdd $EFCD E8                      ;
inx                                    ; 0x1efde $EFCE E8                      ;
LEFCF                                                                          ;
jmp      bank7_code49                  ; 0x1efdf $EFCF 4C 03 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_unknown                                                  ;
lda      #$02                          ; 0x1efe2 $EFD2 A9 02                   ; A = 02
sta      $02                           ; 0x1efe4 $EFD4 85 02                   ;
lda      $AF,x                         ; 0x1efe6 $EFD6 B5 AF                   ;; Various enemy state variables
ldx      #$20                          ; 0x1efe8 $EFD8 A2 20                   ; X = 20
cmp      #$00                          ; 0x1efea $EFDA C9 00                   ;
beq      LEFE6                         ; 0x1efec $EFDC F0 08                   ;
ldx      #$22                          ; 0x1efee $EFDE A2 22                   ; X = 22
cmp      #$08                          ; 0x1eff0 $EFE0 C9 08                   ;
bcc      LEFE6                         ; 0x1eff2 $EFE2 90 02                   ;
ldx      #$24                          ; 0x1eff4 $EFE4 A2 24                   ; X = 24
LEFE6                                                                          ;
jmp      LF0C6                         ; 0x1eff6 $EFE6 4C C6 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LEFE9                                                                          ;
.byt    $03                            ; 0x1eff9 $EFE9 03                      ;
.byt    $03                            ; 0x1effa $EFEA 03                      ;
.byt    $02                            ; 0x1effb $EFEB 02                      ;
.byt    $02                            ; 0x1effc $EFEC 02                      ;
ora      ($01,x)                       ; 0x1effd $EFED 01 01                   ;
brk                                    ; 0x1efff $EFEF 00                      ;
brk                                    ; 0x1f000 $EFF0 00                      ;
brk                                    ; 0x1f001 $EFF1 00                      ;
bank7_Enemy_Routines2_Moa                                                      ;
lda      #$01                          ; 0x1f002 $EFF2 A9 01                   ; A = 01
sta      $02                           ; 0x1f004 $EFF4 85 02                   ;
lda      $71,x                         ; 0x1f006 $EFF6 B5 71                   ;; Enemy X Velocity
bpl      LEFFC                         ; 0x1f008 $EFF8 10 02                   ;
inc      $02                           ; 0x1f00a $EFFA E6 02                   ;
LEFFC                                                                          ;
ldx      #$1E                          ; 0x1f00c $EFFC A2 1E                   ; X = 1E
lda      $12                           ; 0x1f00e $EFFE A5 12                   ;; Frame Counter (ascending)
and      #$10                          ; 0x1f010 $F000 29 10                   ; keep bits ...x ....
bne      LF00A                         ; 0x1f012 $F002 D0 06                   ;
lda      $03                           ; 0x1f014 $F004 A5 03                   ;
ora      #$80                          ; 0x1f016 $F006 09 80                   ; set  bits x... ....
sta      $03                           ; 0x1f018 $F008 85 03                   ;
LF00A                                                                          ;
jsr      LF216                         ; 0x1f01a $F00A 20 16 F2                ;
ldx      $10                           ; 0x1f01d $F00D A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      $91,x                         ; 0x1f01f $F00F B4 91                   ;
lda      $71,x                         ; 0x1f021 $F011 B5 71                   ;; Enemy X Velocity
bpl      LF017                         ; 0x1f023 $F013 10 02                   ;
eor      #$FF                          ; 0x1f025 $F015 49 FF                   ;;Flip Bits:1111_1111
LF017                                                                          ;
lsr                                    ; 0x1f027 $F017 4A                      ;
lsr                                    ; 0x1f028 $F018 4A                      ;
tax                                    ; 0x1f029 $F019 AA                      ;
lda      $0207,y                       ; 0x1f02a $F01A B9 07 02                ;
sec                                    ; 0x1f02d $F01D 38                      ;
sbc      LEFE9,x                       ; 0x1f02e $F01E FD E9 EF                ;
sta      $0207,y                       ; 0x1f031 $F021 99 07 02                ;
ldx      $10                           ; 0x1f034 $F024 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f036 $F026 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Deeler                                                   ;
lda      $03                           ; 0x1f037 $F027 A5 03                   ;
ldy      $AF,x                         ; 0x1f039 $F029 B4 AF                   ;; Various enemy state variables
bne      LF02F                         ; 0x1f03b $F02B D0 02                   ;
ora      #$80                          ; 0x1f03d $F02D 09 80                   ; set  bits x... .... (vertical flip bit)
LF02F                                                                          ;
cpy      #$00                          ; 0x1f03f $F02F C0 00                   ;
bpl      LF037                         ; 0x1f041 $F031 10 04                   ;
inc      L0000                         ; 0x1f043 $F033 E6 00                   ;
inc      L0000                         ; 0x1f045 $F035 E6 00                   ;
LF037                                                                          ;
sta      $03                           ; 0x1f047 $F037 85 03                   ;
ldy      $91,x                         ; 0x1f049 $F039 B4 91                   ;
lda      $12                           ; 0x1f04b $F03B A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1f04d $F03D 4A                      ;
lsr                                    ; 0x1f04e $F03E 4A                      ;
lsr                                    ; 0x1f04f $F03F 4A                      ;
and      #$01                          ; 0x1f050 $F040 29 01                   ; keep bits .... ...x
tax                                    ; 0x1f052 $F042 AA                      ;
inx                                    ; 0x1f053 $F043 E8                      ;
stx      $02                           ; 0x1f054 $F044 86 02                   ;
ldx      #$10                          ; 0x1f056 $F046 A2 10                   ; X = 10
jsr      LF0C6                         ; 0x1f058 $F048 20 C6 F0                ;
lda      $C9                           ; 0x1f05b $F04B A5 C9                   ;
and      #$0C                          ; 0x1f05d $F04D 29 0C                   ; keep bits .... xx..
bne      LF0A7                         ; 0x1f05f $F04F D0 56                   ;
lda      $AF,x                         ; 0x1f061 $F051 B5 AF                   ;; Various enemy state variables
bmi      LF0A7                         ; 0x1f063 $F053 30 52                   ;
ldy      $91,x                         ; 0x1f065 $F055 B4 91                   ;
lda      $2A,x                         ; 0x1f067 $F057 B5 2A                   ; Enemy Y position
sec                                    ; 0x1f069 $F059 38                      ;
sbc      $05DD                         ; 0x1f06a $F05A ED DD 05                ;
beq      LF0A7                         ; 0x1f06d $F05D F0 48                   ;
ldy      #$FF                          ; 0x1f06f $F05F A0 FF                   ; Y = FF
LF061                                                                          ;
iny                                    ; 0x1f071 $F061 C8                      ;
sec                                    ; 0x1f072 $F062 38                      ;
sbc      #$03                          ; 0x1f073 $F063 E9 03                   ;
bpl      LF061                         ; 0x1f075 $F065 10 FA                   ;
sty      L0000                         ; 0x1f077 $F067 84 00                   ;
ldy      $91,x                         ; 0x1f079 $F069 B4 91                   ;
lda      $12                           ; 0x1f07b $F06B A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1f07d $F06D 4A                      ;
lda      L0000                         ; 0x1f07e $F06E A5 00                   ;
bcc      LF074                         ; 0x1f080 $F070 90 02                   ;
lda      #$00                          ; 0x1f082 $F072 A9 00                   ; A = 00
LF074                                                                          ;
lsr                                    ; 0x1f084 $F074 4A                      ;
clc                                    ; 0x1f085 $F075 18                      ;
adc      $05DD                         ; 0x1f086 $F076 6D DD 05                ;
sta      $0208,y                       ; 0x1f089 $F079 99 08 02                ;
adc      L0000                         ; 0x1f08c $F07C 65 00                   ;
sta      $020C,y                       ; 0x1f08e $F07E 99 0C 02                ;
adc      L0000                         ; 0x1f091 $F081 65 00                   ;
sta      $0210,y                       ; 0x1f093 $F083 99 10 02                ;
lda      $CD                           ; 0x1f096 $F086 A5 CD                   ;
sta      $020B,y                       ; 0x1f098 $F088 99 0B 02                ;
sta      $020F,y                       ; 0x1f09b $F08B 99 0F 02                ;
sta      $0213,y                       ; 0x1f09e $F08E 99 13 02                ;
lda      #$01                          ; 0x1f0a1 $F091 A9 01                   ; A = 01
sta      $020A,y                       ; 0x1f0a3 $F093 99 0A 02                ;
sta      $020E,y                       ; 0x1f0a6 $F096 99 0E 02                ;
sta      $0212,y                       ; 0x1f0a9 $F099 99 12 02                ;
lda      #$BE                          ; 0x1f0ac $F09C A9 BE                   ; A = BE
sta      $0209,y                       ; 0x1f0ae $F09E 99 09 02                ;
sta      $020D,y                       ; 0x1f0b1 $F0A1 99 0D 02                ;
sta      $0211,y                       ; 0x1f0b4 $F0A4 99 11 02                ;
LF0A7                                                                          ;
rts                                    ; 0x1f0b7 $F0A7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Octorok                                                  ;
lda      L0000                         ; 0x1f0b8 $F0A8 A5 00                   ;
cmp      #$B5                          ; 0x1f0ba $F0AA C9 B5                   ;
bcc      LF0B5                         ; 0x1f0bc $F0AC 90 07                   ;
lda      $03                           ; 0x1f0be $F0AE A5 03                   ;
ora      $0753                         ; 0x1f0c0 $F0B0 0D 53 07                ;
sta      $03                           ; 0x1f0c3 $F0B3 85 03                   ;
LF0B5                                                                          ;
lda      #$12                          ; 0x1f0c5 $F0B5 A9 12                   ; A = 12
bne      LF0BB                         ; 0x1f0c7 $F0B7 D0 02                   ;
bank7_Enemy_Routines2_BagoBago                                                 ;
lda      #$0C                          ; 0x1f0c9 $F0B9 A9 0C                   ; A = 0C
LF0BB                                                                          ;
sta      $05                           ; 0x1f0cb $F0BB 85 05                   ;
lda      $12                           ; 0x1f0cd $F0BD A5 12                   ; Permanent Frame Counter
and      #$08                          ; 0x1f0cf $F0BF 29 08                   ; keep bits .... x...
lsr                                    ; 0x1f0d1 $F0C1 4A                      ;
lsr                                    ; 0x1f0d2 $F0C2 4A                      ;
adc      $05                           ; 0x1f0d3 $F0C3 65 05                   ;
tax                                    ; 0x1f0d5 $F0C5 AA                      ;
LF0C6                                                                          ;
jsr      LF216                         ; 0x1f0d6 $F0C6 20 16 F2                ;
ldx      $10                           ; 0x1f0d9 $F0C9 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f0db $F0CB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF0CC                                                                          ;
sta      $05                           ; 0x1f0dc $F0CC 85 05                   ;
lda      $12                           ; 0x1f0de $F0CE A5 12                   ; Permanent Frame Counter
and      #$08                          ; 0x1f0e0 $F0D0 29 08                   ; keep bits .... x...
lsr                                    ; 0x1f0e2 $F0D2 4A                      ;
lsr                                    ; 0x1f0e3 $F0D3 4A                      ;
adc      $05                           ; 0x1f0e4 $F0D4 65 05                   ;
tax                                    ; 0x1f0e6 $F0D6 AA                      ;
LF0D7                                                                          ;
jsr      LF1F4                         ; 0x1f0e7 $F0D7 20 F4 F1                ;
ldx      $10                           ; 0x1f0ea $F0DA A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f0ec $F0DC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Fairy                                                    ;
lda      $C9                           ; 0x1f0ed $F0DD A5 C9                   ;
and      #$08                          ; 0x1f0ef $F0DF 29 08                   ; keep bits .... x...
bne      LF10B                         ; 0x1f0f1 $F0E1 D0 28                   ;
lda      $12                           ; 0x1f0f3 $F0E3 A5 12                   ;; Frame Counter (ascending)
and      #$38                          ; 0x1f0f5 $F0E5 29 38                   ; keep bits ..xx x...
lsr                                    ; 0x1f0f7 $F0E7 4A                      ;
lsr                                    ; 0x1f0f8 $F0E8 4A                      ;
lsr                                    ; 0x1f0f9 $F0E9 4A                      ;
tax                                    ; 0x1f0fa $F0EA AA                      ;
lda      L0000                         ; 0x1f0fb $F0EB A5 00                   ;
adc      #$08                          ; 0x1f0fd $F0ED 69 08                   ;
adc      bank7_Table_for_Fairy_floating_movement,x; 0x1f0ff $F0EF 7D B0 EB     ;
sta      $0200,y                       ; 0x1f102 $F0F2 99 00 02                ;
ldx      $10                           ; 0x1f105 $F0F5 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $01                           ; 0x1f107 $F0F7 A5 01                   ;
sta      $0203,y                       ; 0x1f109 $F0F9 99 03 02                ;
LF0FC                                                                          ;
lda      #$01                          ; 0x1f10c $F0FC A9 01                   ; A = 01
sta      $0202,y                       ; 0x1f10e $F0FE 99 02 02                ;
lda      $12                           ; 0x1f111 $F101 A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1f113 $F103 29 04                   ; keep bits .... .x..
lsr                                    ; 0x1f115 $F105 4A                      ;
adc      #$68                          ; 0x1f116 $F106 69 68                   ;
sta      $0201,y                       ; 0x1f118 $F108 99 01 02                ;
LF10B                                                                          ;
rts                                    ; 0x1f11b $F10B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table31                                                                  ;
.byt    $03,$02,$00,$01,$01,$01        ; 0x1f11c $F10C 03 02 00 01 01 01       ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_RedJar                                                   ;
lda      #$02                          ; 0x1f122 $F112 A9 02                   ; A = 02
sta      $02                           ; 0x1f124 $F114 85 02                   ;
lda      $AF,x                         ; 0x1f126 $F116 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1f128 $F118 29 7F                   ; keep bits .xxx xxxx
tax                                    ; 0x1f12a $F11A AA                      ;
pha                                    ; 0x1f12b $F11B 48                      ;
cpx      #$10                          ; 0x1f12c $F11C E0 10                   ;
bcc      LF125                         ; 0x1f12e $F11E 90 05                   ;
lda      LF0FC,x                       ; 0x1f130 $F120 BD FC F0                ;
sta      $03                           ; 0x1f133 $F123 85 03                   ;
LF125                                                                          ;
pla                                    ; 0x1f135 $F125 68                      ;
asl                                    ; 0x1f136 $F126 0A                      ;
adc      #$2E                          ; 0x1f137 $F127 69 2E                   ;
tax                                    ; 0x1f139 $F129 AA                      ;
jsr      LF0C6                         ; 0x1f13a $F12A 20 C6 F0                ;
lda      $01FD,y                       ; 0x1f13d $F12D B9 FD 01                ;
cmp      #$F5                          ; 0x1f140 $F130 C9 F5                   ;
bne      LF137                         ; 0x1f142 $F132 D0 03                   ;
sta      $01FC,y                       ; 0x1f144 $F134 99 FC 01                ;
LF137                                                                          ;
jmp      LEF08                         ; 0x1f147 $F137 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_LockedDoor                                               ;
lda      $C9                           ; 0x1f14a $F13A A5 C9                   ;
and      #$08                          ; 0x1f14c $F13C 29 08                   ; keep bits .... x...
bne      LF17D                         ; 0x1f14e $F13E D0 3D                   ;
dec      L0000                         ; 0x1f150 $F140 C6 00                   ;
lda      L0000                         ; 0x1f152 $F142 A5 00                   ;
clc                                    ; 0x1f154 $F144 18                      ;
adc      #$10                          ; 0x1f155 $F145 69 10                   ;
sta      $0200,y                       ; 0x1f157 $F147 99 00 02                ;
adc      #$10                          ; 0x1f15a $F14A 69 10                   ;
sec                                    ; 0x1f15c $F14C 38                      ;
sbc      $AF,x                         ; 0x1f15d $F14D F5 AF                   ;; Various enemy state variables
sta      $0204,y                       ; 0x1f15f $F14F 99 04 02                ;
lda      L0000                         ; 0x1f162 $F152 A5 00                   ;
clc                                    ; 0x1f164 $F154 18                      ;
adc      $AF,x                         ; 0x1f165 $F155 75 AF                   ;; Various enemy state variables
sta      $0208,y                       ; 0x1f167 $F157 99 08 02                ;
lda      $01                           ; 0x1f16a $F15A A5 01                   ;
sta      $0203,y                       ; 0x1f16c $F15C 99 03 02                ;
sta      $0207,y                       ; 0x1f16f $F15F 99 07 02                ;
sta      $020B,y                       ; 0x1f172 $F162 99 0B 02                ;
lda      #$76                          ; 0x1f175 $F165 A9 76                   ; A = 76
sta      $0201,y                       ; 0x1f177 $F167 99 01 02                ;
lda      #$74                          ; 0x1f17a $F16A A9 74                   ; A = 74
sta      $0205,y                       ; 0x1f17c $F16C 99 05 02                ;
sta      $0209,y                       ; 0x1f17f $F16F 99 09 02                ;
lda      #$01                          ; 0x1f182 $F172 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1f184 $F174 99 02 02                ;
sta      $0206,y                       ; 0x1f187 $F177 99 06 02                ;
sta      $020A,y                       ; 0x1f18a $F17A 99 0A 02                ;
LF17D                                                                          ;
rts                                    ; 0x1f18d $F17D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Ache_and_Acheman                                         ;
lda      $A1,x                         ; 0x1f18e $F17E B5 A1                   ; Enemy Code
cmp      #$0A                          ; 0x1f190 $F180 C9 0A                   ; check if Acheman
bne      LF188                         ; 0x1f192 $F182 D0 04                   ;
lda      $AF,x                         ; 0x1f194 $F184 B5 AF                   ;; Various enemy state variables
bne      LF1AD                         ; 0x1f196 $F186 D0 25                   ;
LF188                                                                          ;
lda      $03                           ; 0x1f198 $F188 A5 03                   ;
ora      #$80                          ; 0x1f19a $F18A 09 80                   ; set  bits x... ....
sta      $03                           ; 0x1f19c $F18C 85 03                   ;
lda      #$02                          ; 0x1f19e $F18E A9 02                   ; A = 02
sta      $02                           ; 0x1f1a0 $F190 85 02                   ;
lda      $81,x                         ; 0x1f1a2 $F192 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$16                          ; 0x1f1a4 $F194 A2 16                   ; X = 16
asl                                    ; 0x1f1a6 $F196 0A                      ;
beq      LF1A7                         ; 0x1f1a7 $F197 F0 0E                   ;
lda      $03                           ; 0x1f1a9 $F199 A5 03                   ;
and      #$0F                          ; 0x1f1ab $F19B 29 0F                   ; keep bits .... xxxx
sta      $03                           ; 0x1f1ad $F19D 85 03                   ;
lda      #$16                          ; 0x1f1af $F19F A9 16                   ; A = 16
jsr      LF0BB                         ; 0x1f1b1 $F1A1 20 BB F0                ;
jmp      LEF08                         ; 0x1f1b4 $F1A4 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1A7                                                                          ;
jsr      LF0C6                         ; 0x1f1b7 $F1A7 20 C6 F0                ;
jmp      LEF08                         ; 0x1f1ba $F1AA 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1AD                                                                          ;
ldx      #$1A                          ; 0x1f1bd $F1AD A2 1A                   ;;X = #$1a 0001_1010
jsr      LF216                         ; 0x1f1bf $F1AF 20 16 F2                ;
jmp      LF0C6                         ; 0x1f1c2 $F1B2 4C C6 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1B5                                                                          ;
ora      $03                           ; 0x1f1c5 $F1B5 05 03                   ;
sty      $09                           ; 0x1f1c7 $F1B7 84 09                   ;
stx      $08                           ; 0x1f1c9 $F1B9 86 08                   ;
ldx      $10                           ; 0x1f1cb $F1BB A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      $040E,x                       ; 0x1f1cd $F1BD BC 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LF1CC                         ; 0x1f1d0 $F1C0 F0 0A                   ;
and      #$FC                          ; 0x1f1d2 $F1C2 29 FC                   ; keep bits xxxx xx..
sta      $04                           ; 0x1f1d4 $F1C4 85 04                   ;
tya                                    ; 0x1f1d6 $F1C6 98                      ;
lsr                                    ; 0x1f1d7 $F1C7 4A                      ;
and      #$03                          ; 0x1f1d8 $F1C8 29 03                   ; keep bits .... ..xx
ora      $04                           ; 0x1f1da $F1CA 05 04                   ;
LF1CC                                                                          ;
ldy      $09                           ; 0x1f1dc $F1CC A4 09                   ;
sta      $0202,y                       ; 0x1f1de $F1CE 99 02 02                ;
sta      $0206,y                       ; 0x1f1e1 $F1D1 99 06 02                ;
ldx      $08                           ; 0x1f1e4 $F1D4 A6 08                   ;
rts                                    ; 0x1f1e6 $F1D6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1D7                                                                          ;
lda      #$08                          ; 0x1f1e7 $F1D7 A9 08                   ; A = 08
sta      $0A                           ; 0x1f1e9 $F1D9 85 0A                   ;
LF1DB                                                                          ;
lda      $0A                           ; 0x1f1eb $F1DB A5 0A                   ;
and      $C9                           ; 0x1f1ed $F1DD 25 C9                   ;
beq      LF1E6                         ; 0x1f1ef $F1DF F0 05                   ;
lda      #$F8                          ; 0x1f1f1 $F1E1 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1f1f3 $F1E3 99 00 02                ;
LF1E6                                                                          ;
iny                                    ; 0x1f1f6 $F1E6 C8                      ;
iny                                    ; 0x1f1f7 $F1E7 C8                      ;
iny                                    ; 0x1f1f8 $F1E8 C8                      ;
iny                                    ; 0x1f1f9 $F1E9 C8                      ;
lsr      $0A                           ; 0x1f1fa $F1EA 46 0A                   ;
dex                                    ; 0x1f1fc $F1EC CA                      ;
bne      LF1DB                         ; 0x1f1fd $F1ED D0 EC                   ;
ldx      $08                           ; 0x1f1ff $F1EF A6 08                   ;
ldy      $09                           ; 0x1f201 $F1F1 A4 09                   ;
rts                                    ; 0x1f203 $F1F3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1F4                                                                          ;
lda      $02                           ; 0x1f204 $F1F4 A5 02                   ;
lsr                                    ; 0x1f206 $F1F6 4A                      ;
lda      $6ED4,x                       ; 0x1f207 $F1F7 BD D4 6E                ;
bcc      LF209                         ; 0x1f20a $F1FA 90 0D                   ;
sta      $0205,y                       ; 0x1f20c $F1FC 99 05 02                ;
lda      $6ED5,x                       ; 0x1f20f $F1FF BD D5 6E                ;
sta      $0201,y                       ; 0x1f212 $F202 99 01 02                ;
lda      #$40                          ; 0x1f215 $F205 A9 40                   ; A = 40
bne      LF214                         ; 0x1f217 $F207 D0 0B                   ;
LF209                                                                          ;
sta      $0201,y                       ; 0x1f219 $F209 99 01 02                ;
lda      $6ED5,x                       ; 0x1f21c $F20C BD D5 6E                ;
sta      $0205,y                       ; 0x1f21f $F20F 99 05 02                ;
lda      #$00                          ; 0x1f222 $F212 A9 00                   ; A = 00
LF214                                                                          ;
bpl      LF236                         ; 0x1f224 $F214 10 20                   ;
LF216                                                                          ;
lda      $02                           ; 0x1f226 $F216 A5 02                   ;
lsr                                    ; 0x1f228 $F218 4A                      ;
lda      bank7_table_item_sprites_map_to_graphic_image,x; 0x1f229 $F219 BD 51 EE;
bcc      LF22B                         ; 0x1f22c $F21C 90 0D                   ;
sta      $0205,y                       ; 0x1f22e $F21E 99 05 02                ;
lda      LEE52,x                       ; 0x1f231 $F221 BD 52 EE                ;
sta      $0201,y                       ; 0x1f234 $F224 99 01 02                ;
lda      #$40                          ; 0x1f237 $F227 A9 40                   ; A = 40
bne      LF236                         ; 0x1f239 $F229 D0 0B                   ;
LF22B                                                                          ;
sta      $0201,y                       ; 0x1f23b $F22B 99 01 02                ;
lda      LEE52,x                       ; 0x1f23e $F22E BD 52 EE                ;
sta      $0205,y                       ; 0x1f241 $F231 99 05 02                ;
lda      #$00                          ; 0x1f244 $F234 A9 00                   ; A = 00
LF236                                                                          ;
pha                                    ; 0x1f246 $F236 48                      ;
lda      #$01                          ; 0x1f247 $F237 A9 01                   ; A = 01
sta      $0F                           ; 0x1f249 $F239 85 0F                   ;
pla                                    ; 0x1f24b $F23B 68                      ;
jsr      LF1B5                         ; 0x1f24c $F23C 20 B5 F1                ;
lda      $C9                           ; 0x1f24f $F23F A5 C9                   ;
and      #$F0                          ; 0x1f251 $F241 29 F0                   ; keep bits xxxx ....
bne      LF25D                         ; 0x1f253 $F243 D0 18                   ;
lda      L0000                         ; 0x1f255 $F245 A5 00                   ;
sta      $0200,y                       ; 0x1f257 $F247 99 00 02                ;
sta      $0204,y                       ; 0x1f25a $F24A 99 04 02                ;
ldx      #$02                          ; 0x1f25d $F24D A2 02                   ; X = 02
jsr      LF1D7                         ; 0x1f25f $F24F 20 D7 F1                ;
lda      $01                           ; 0x1f262 $F252 A5 01                   ;
sta      $0203,y                       ; 0x1f264 $F254 99 03 02                ;
clc                                    ; 0x1f267 $F257 18                      ;
adc      #$08                          ; 0x1f268 $F258 69 08                   ;
sta      $0207,y                       ; 0x1f26a $F25A 99 07 02                ;
LF25D                                                                          ;
lda      L0000                         ; 0x1f26d $F25D A5 00                   ;
clc                                    ; 0x1f26f $F25F 18                      ;
adc      #$10                          ; 0x1f270 $F260 69 10                   ;
sta      L0000                         ; 0x1f272 $F262 85 00                   ;
tya                                    ; 0x1f274 $F264 98                      ;
clc                                    ; 0x1f275 $F265 18                      ;
adc      #$08                          ; 0x1f276 $F266 69 08                   ;
tay                                    ; 0x1f278 $F268 A8                      ;
inx                                    ; 0x1f279 $F269 E8                      ;
inx                                    ; 0x1f27a $F26A E8                      ;
rts                                    ; 0x1f27b $F26B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Tables_for_Various_Bitmasks2                                             ;
.byt    $80,$40,$20,$10                ; 0x1f27c $F26C 80 40 20 10             ;
LF270                                                                          ;
.byt    $08,$04,$02,$01                ; 0x1f280 $F270 08 04 02 01             ;
LF274                                                                          ;
.byt    $00,$08,$10,$18,$20,$28,$30,$38; 0x1f284 $F274 00 08 10 18 20 28 30 38 ;
.byt    $40                            ; 0x1f28c $F27C 40                      ;
; ---------------------------------------------------------------------------- ;
bank7_code51                                                                   ;
sty      L0000                         ; 0x1f28d $F27D 84 00                   ;
lda      #$00                          ; 0x1f28f $F27F A9 00                   ; A = 00
sta      $C8,y                         ; 0x1f291 $F281 99 C8 00                ;
ldy      #$03                          ; 0x1f294 $F284 A0 03                   ; Y = 03
LF286                                                                          ;
lda      $4D,x                         ; 0x1f296 $F286 B5 4D                   ; Link's Current X position (low byte)
clc                                    ; 0x1f298 $F288 18                      ;
adc      LF274,y                       ; 0x1f299 $F289 79 74 F2                ;
sta      L000E                         ; 0x1f29c $F28C 85 0E                   ;
lda      $3B,x                         ; 0x1f29e $F28E B5 3B                   ; Link's Current X position (high byte)
adc      #$00                          ; 0x1f2a0 $F290 69 00                   ;
sta      $0F                           ; 0x1f2a2 $F292 85 0F                   ;
lda      L000E                         ; 0x1f2a4 $F294 A5 0E                   ;
cmp      $072C                         ; 0x1f2a6 $F296 CD 2C 07                ; Scrolling Offset Low Byte
lda      $0F                           ; 0x1f2a9 $F299 A5 0F                   ;
sbc      $072A                         ; 0x1f2ab $F29B ED 2A 07                ; Scrolling Offset High Byte
beq      LF2AF                         ; 0x1f2ae $F29E F0 0F                   ;
sty      $01                           ; 0x1f2b0 $F2A0 84 01                   ;
lda      LF270,y                       ; 0x1f2b2 $F2A2 B9 70 F2                ;
ldy      L0000                         ; 0x1f2b5 $F2A5 A4 00                   ;
ora      $C8,y                         ; 0x1f2b7 $F2A7 19 C8 00                ;
sta      $C8,y                         ; 0x1f2ba $F2AA 99 C8 00                ;
ldy      $01                           ; 0x1f2bd $F2AD A4 01                   ;
LF2AF                                                                          ;
dey                                    ; 0x1f2bf $F2AF 88                      ;
bpl      LF286                         ; 0x1f2c0 $F2B0 10 D4                   ;
ldy      L0000                         ; 0x1f2c2 $F2B2 A4 00                   ;
lda      $29,x                         ; 0x1f2c4 $F2B4 B5 29                   ; Link's Y Position
clc                                    ; 0x1f2c6 $F2B6 18                      ;
adc      #$10                          ; 0x1f2c7 $F2B7 69 10                   ;
lda      $19,x                         ; 0x1f2c9 $F2B9 B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      #$00                          ; 0x1f2cb $F2BB 69 00                   ;
cmp      #$01                          ; 0x1f2cd $F2BD C9 01                   ;
beq      LF2C9                         ; 0x1f2cf $F2BF F0 08                   ;
lda      #$F0                          ; 0x1f2d1 $F2C1 A9 F0                   ; A = F0
ora      $C8,y                         ; 0x1f2d3 $F2C3 19 C8 00                ;
sta      $C8,y                         ; 0x1f2d6 $F2C6 99 C8 00                ;
LF2C9                                                                          ;
lda      $4D,x                         ; 0x1f2d9 $F2C9 B5 4D                   ; Link's X Position (low byte)
sec                                    ; 0x1f2db $F2CB 38                      ;
sbc      $072C                         ; 0x1f2dc $F2CC ED 2C 07                ; Scrolling Offset Low Byte
sta      $CC,y                         ; 0x1f2df $F2CF 99 CC 00                ;
rts                                    ; 0x1f2e2 $F2D2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF2D3                                                                          ;
lda      #$00                          ; 0x1f2e3 $F2D3 A9 00                   ; A = 00
sta      $02                           ; 0x1f2e5 $F2D5 85 02                   ;
ldy      #$07                          ; 0x1f2e7 $F2D7 A0 07                   ; Y = 07
LF2D9                                                                          ;
lda      $4D,x                         ; 0x1f2e9 $F2D9 B5 4D                   ; Link's X Position (low byte)
clc                                    ; 0x1f2eb $F2DB 18                      ;
adc      LF274,y                       ; 0x1f2ec $F2DC 79 74 F2                ;
sta      L000E                         ; 0x1f2ef $F2DF 85 0E                   ;
lda      $3B,x                         ; 0x1f2f1 $F2E1 B5 3B                   ; Link's X position (high byte)
adc      #$00                          ; 0x1f2f3 $F2E3 69 00                   ;
sta      $0F                           ; 0x1f2f5 $F2E5 85 0F                   ;
lda      L000E                         ; 0x1f2f7 $F2E7 A5 0E                   ;
cmp      $072C                         ; 0x1f2f9 $F2E9 CD 2C 07                ; Scrolling Offset Low Byte
lda      $0F                           ; 0x1f2fc $F2EC A5 0F                   ;
sbc      $072A                         ; 0x1f2fe $F2EE ED 2A 07                ; Scrolling Offset High Byte
beq      LF2FA                         ; 0x1f301 $F2F1 F0 07                   ;
lda      $02                           ; 0x1f303 $F2F3 A5 02                   ;
ora      bank7_Tables_for_Various_Bitmasks2,y; 0x1f305 $F2F5 19 6C F2          ;
sta      $02                           ; 0x1f308 $F2F8 85 02                   ;
LF2FA                                                                          ;
dey                                    ; 0x1f30a $F2FA 88                      ;
bpl      LF2D9                         ; 0x1f30b $F2FB 10 DC                   ;
lda      $02                           ; 0x1f30d $F2FD A5 02                   ;
rts                                    ; 0x1f30f $F2FF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN2                                                                 ;
.byt    $55,$AB,$D5,$AA,$5A,$4B,$95,$4A; 0x1f310 $F300 55 AB D5 AA 5A 4B 95 4A ;
.byt    $55,$A9,$54,$D5,$D6,$AA,$A4,$35; 0x1f318 $F308 55 A9 54 D5 D6 AA A4 35 ;
.byt    $4B,$89,$52,$55,$D9,$5B,$5F,$57; 0x1f320 $F310 4B 89 52 55 D9 5B 5F 57 ;
.byt    $75,$2A,$49,$42,$92,$22,$4D,$D5; 0x1f328 $F318 75 2A 49 42 92 22 4D D5 ;
.byt    $76,$DB,$D7,$2A,$A5,$24,$92,$28; 0x1f330 $F320 76 DB D7 2A A5 24 92 28 ;
.byt    $52,$A9,$7F,$DF,$DB,$6D,$4F,$89; 0x1f338 $F328 52 A9 7F DF DB 6D 4F 89 ;
.byt    $20,$24,$82,$88,$D2,$7B,$77,$AD; 0x1f340 $F330 20 24 82 88 D2 7B 77 AD ;
.byt    $AA,$54,$8A,$41,$48,$FF,$7F,$57; 0x1f348 $F338 AA 54 8A 41 48 FF 7F 57 ;
.byt    $7B,$5F,$12,$02,$92,$22,$02,$6A; 0x1f350 $F340 7B 5F 12 02 92 22 02 6A ;
.byt    $7B,$57,$AA,$6A,$A5,$48,$10,$FF; 0x1f358 $F348 7B 57 AA 6A A5 48 10 FF ;
.byt    $FF,$77,$73,$7F,$45,$20,$40,$89; 0x1f360 $F350 FF 77 73 7F 45 20 40 89 ;
.byt    $08,$2A,$B5,$53,$95,$AA,$AA,$24; 0x1f368 $F358 08 2A B5 53 95 AA AA 24 ;
.byt    $6A,$FF,$FF,$BF,$D6,$57,$82,$00; 0x1f370 $F360 6A FF FF BF D6 57 82 00 ;
.byt    $28,$49,$88,$A8,$D6,$AC,$A4,$D2; 0x1f378 $F368 28 49 88 A8 D6 AC A4 D2 ;
.byt    $8C,$DA,$FF,$FF,$BF,$D6,$B5,$08; 0x1f380 $F370 8C DA FF FF BF D6 B5 08 ;
.byt    $08,$20,$29,$82,$90,$D6,$56,$25; 0x1f388 $F378 08 20 29 82 90 D6 56 25 ;
.byt    $A9,$A6,$DD,$FF,$FF,$AF,$DA,$35; 0x1f390 $F380 A9 A6 DD FF FF AF DA 35 ;
.byt    $22,$80,$A0,$A2,$80,$A0,$5A,$A7; 0x1f398 $F388 22 80 A0 A2 80 A0 5A A7 ;
.byt    $94,$4A,$5B,$FD,$FF,$FF,$CD,$7A; 0x1f3a0 $F390 94 4A 5B FD FF FF CD 7A ;
.byt    $8B,$02,$01,$8A,$04,$22,$88,$76; 0x1f3a8 $F398 8B 02 01 8A 04 22 88 76 ;
.byt    $55,$52,$4A,$DB,$FF,$FF,$D7,$76; 0x1f3b0 $F3A0 55 52 4A DB FF FF D7 76 ;
.byt    $3F,$2A,$20,$48,$49,$20,$08,$75; 0x1f3b8 $F3A8 3F 2A 20 48 49 20 08 75 ;
.byt    $97,$8A,$AC,$56,$FA,$CA,$8A,$A8; 0x1f3c0 $F3B0 97 8A AC 56 FA CA 8A A8 ;
.byt    $A5,$4A,$01,$02,$95,$22,$08,$A0; 0x1f3c8 $F3B8 A5 4A 01 02 95 22 08 A0 ;
.byt    $4A,$52,$55,$B5,$55,$33,$95,$4A; 0x1f3d0 $F3C0 4A 52 55 B5 55 33 95 4A ;
.byt    $55,$AB,$55,$A9,$2A,$55,$55,$DD; 0x1f3d8 $F3C8 55 AB 55 A9 2A 55 55 DD ;
.byt    $37,$2A,$09,$4A,$AB,$6D,$57,$4A; 0x1f3e0 $F3D0 37 2A 09 4A AB 6D 57 4A ;
.byt    $29,$AA,$B5,$D5,$9A,$4A,$A5,$54; 0x1f3e8 $F3D8 29 AA B5 D5 9A 4A A5 54 ;
.byt    $AB,$5A,$A5,$52,$55,$AA,$FD,$17; 0x1f3f0 $F3E0 AB 5A A5 52 55 AA FD 17 ;
.byt    $A5,$00,$69,$6B,$7B,$93,$A2,$92; 0x1f3f8 $F3E8 A5 00 69 6B 7B 93 A2 92 ;
.byt    $74,$5B,$6D,$8D,$A2,$92,$5A,$5B; 0x1f400 $F3F0 74 5B 6D 8D A2 92 5A 5B ;
.byt    $AA,$2A,$4A,$DD,$FF,$98,$04,$20; 0x1f408 $F3F8 AA 2A 4A DD FF 98 04 20 ;
.byt    $B7,$76,$AF,$48,$89,$64,$77,$75; 0x1f410 $F400 B7 76 AF 48 89 64 77 75 ;
.byt    $AD,$88,$94,$B2,$B6,$4A,$8B,$A2; 0x1f418 $F408 AD 88 94 B2 B6 4A 8B A2 ;
.byt    $FF,$8F,$29,$00,$74,$CB,$FF,$08; 0x1f420 $F410 FF 8F 29 00 74 CB FF 08 ;
.byt    $2A,$22,$FD,$AD,$5D,$09,$64,$49; 0x1f428 $F418 2A 22 FD AD 5D 09 64 49 ;
.byt    $DD,$2A,$25,$EA,$FF,$D3,$08,$00; 0x1f430 $F420 DD 2A 25 EA FF D3 08 00 ;
.byt    $7E,$F6,$3D,$02,$25,$52,$FF,$D3; 0x1f438 $F428 7E F6 3D 02 25 52 FF D3 ;
.byt    $2D,$00,$35,$5A,$9F,$88,$D6,$FF; 0x1f440 $F430 2D 00 35 5A 9F 88 D6 FF ;
.byt    $B3,$00,$80,$7D,$FE,$0F,$80,$0A; 0x1f448 $F438 B3 00 80 7D FE 0F 80 0A ;
.byt    $ED,$DF,$BA,$02,$90,$A6,$ED,$0A; 0x1f450 $F440 ED DF BA 02 90 A6 ED 0A ;
.byt    $F2,$FF,$D3,$20,$00,$FD,$FC,$2F; 0x1f458 $F448 F2 FF D3 20 00 FD FC 2F ;
.byt    $00,$0C,$DE,$7F,$D3,$02,$C0,$9A; 0x1f460 $F450 00 0C DE 7F D3 02 C0 9A ;
.byt    $BE,$08,$FD,$BF,$0E,$01,$F0,$4F; 0x1f468 $F458 BE 08 FD BF 0E 01 F0 4F ;
.byt    $FF,$02,$40,$D2,$FF,$1D,$0D,$00; 0x1f470 $F460 FF 02 40 D2 FF 1D 0D 00 ;
.byt    $EE,$D1,$23,$F8,$FF,$1C,$08,$E0; 0x1f478 $F468 EE D1 23 F8 FF 1C 08 E0 ;
.byt    $3F,$FF,$03,$00,$C3,$FF,$37,$20; 0x1f480 $F470 3F FF 03 00 C3 FF 37 20 ;
.byt    $00,$FD,$C3,$42,$FF,$3F,$03,$00; 0x1f488 $F478 00 FD C3 42 FF 3F 03 00 ;
.byt    $FC,$DF,$F3,$00,$C0,$F5,$FF,$09; 0x1f490 $F480 FC DF F3 00 C0 F5 FF 09 ;
.byt    $00,$E0,$7F,$20,$F4,$FF,$37,$00; 0x1f498 $F488 00 E0 7F 20 F4 FF 37 00 ;
.byt    $C0,$FF,$3F,$03,$00,$D7,$FF,$13; 0x1f4a0 $F490 C0 FF 3F 03 00 D7 FF 13 ;
.byt    $00,$50,$7F,$03,$F8,$FF,$3B,$00; 0x1f4a8 $F498 00 50 7F 03 F8 FF 3B 00 ;
.byt    $C0,$FF,$3F,$01,$C0,$E7,$FF,$03; 0x1f4b0 $F4A0 C0 FF 3F 01 C0 E7 FF 03 ;
.byt    $00,$B0,$BF,$00,$FD,$FF,$0E,$00; 0x1f4b8 $F4A8 00 B0 BF 00 FD FF 0E 00 ;
.byt    $F8,$FF,$8B,$00,$F0,$F7,$3F,$00; 0x1f4c0 $F4B0 F8 FF 8B 00 F0 F7 3F 00 ;
.byt    $00,$F7,$07,$E0,$FF,$F3,$00,$C0; 0x1f4c8 $F4B8 00 F7 07 E0 FF F3 00 C0 ;
.byt    $FF,$3F,$08,$C0,$EF,$FF,$02,$00; 0x1f4d0 $F4C0 FF 3F 08 C0 EF FF 02 00 ;
.byt    $F0,$3F,$00,$FF,$CF,$03,$80,$FF; 0x1f4d8 $F4C8 F0 3F 00 FF CF 03 80 FF ;
.byt    $F7,$00,$00,$FF,$FF,$03,$00,$D0; 0x1f4e0 $F4D0 F7 00 00 FF FF 03 00 D0 ;
.byt    $BF,$00,$FF,$3F,$0F,$00,$FD,$EF; 0x1f4e8 $F4D8 BF 00 FF 3F 0F 00 FD EF ;
.byt    $03,$00,$FC,$FD,$0F,$00,$C0,$FF; 0x1f4f0 $F4E0 03 00 FC FD 0F 00 C0 FF ;
.byt    $00,$FC,$3F,$0F,$00,$FE,$DF,$03; 0x1f4f8 $F4E8 00 FC 3F 0F 00 FE DF 03 ;
.byt    $00,$FC,$FF,$0F,$00,$40,$FF,$02; 0x1f500 $F4F0 00 FC FF 0F 00 40 FF 02 ;
.byt    $FC,$3F,$0F,$00,$FC,$FF,$03,$00; 0x1f508 $F4F8 FC 3F 0F 00 FC FF 03 00 ;
.byt    $FC,$FF,$0F,$00,$40,$FF,$01,$FC; 0x1f510 $F500 FC FF 0F 00 40 FF 01 FC ;
.byt    $3F,$0F,$00,$FC,$FF,$03,$00,$FC; 0x1f518 $F508 3F 0F 00 FC FF 03 00 FC ;
.byt    $FF,$2F,$00,$00,$FF,$03,$F8,$BF; 0x1f520 $F510 FF 2F 00 00 FF 03 F8 BF ;
.byt    $2E,$00,$FC,$DF,$0F,$00,$F0,$F7; 0x1f528 $F518 2E 00 FC DF 0F 00 F0 F7 ;
.byt    $3F,$00,$00,$FF,$03,$F0,$FF,$BC; 0x1f530 $F520 3F 00 00 FF 03 F0 FF BC ;
.byt    $00,$F0,$FF,$3E,$00,$C0,$DF,$FF; 0x1f538 $F528 00 F0 FF 3E 00 C0 DF FF ;
.byt    $00,$00,$FC,$3F,$00,$FF,$CF,$03; 0x1f540 $F530 00 00 FC 3F 00 FF CF 03 ;
.byt    $00,$FF,$FF,$02,$00,$7E,$FF,$07; 0x1f548 $F538 00 FF FF 02 00 7E FF 07 ;
.byt    $00,$C0,$FF,$02,$F0,$FF,$BB,$00; 0x1f550 $F540 00 C0 FF 02 F0 FF BB 00 ;
.byt    $C0,$FF,$3F,$00,$80,$FF,$FF,$00; 0x1f558 $F548 C0 FF 3F 00 80 FF FF 00 ;
.byt    $00,$FD,$0F,$08,$C1,$FF,$BF,$00; 0x1f560 $F550 00 FD 0F 08 C1 FF BF 00 ;
.byt    $C0,$FF,$3F,$00,$C0,$FF,$5F,$00; 0x1f568 $F558 C0 FF 3F 00 C0 FF 5F 00 ;
.byt    $D0,$DD,$9D,$08,$A2,$FF,$FF,$00; 0x1f570 $F560 D0 DD 9D 08 A2 FF FF 00 ;
.byt    $00,$FC,$FF,$08,$00,$FF,$77,$09; 0x1f578 $F568 00 FC FF 08 00 FF 77 09 ;
.byt    $A0,$D6,$B7,$89,$A4,$62,$FF,$3F; 0x1f580 $F570 A0 D6 B7 89 A4 62 FF 3F ;
.byt    $00,$A0,$FD,$55,$0A,$62,$DD,$55; 0x1f588 $F578 00 A0 FD 55 0A 62 DD 55 ;
.byt    $75,$FF,$07,$00,$C0,$FF,$0F,$40; 0x1f590 $F580 75 FF 07 00 C0 FF 0F 40 ;
.byt    $D0,$FF,$0F,$02,$E8,$DF,$A8,$20; 0x1f598 $F588 D0 FF 0F 02 E8 DF A8 20 ;
.byt    $C8,$FF,$FF,$04,$00,$FC,$FF,$03; 0x1f5a0 $F590 C8 FF FF 04 00 FC FF 03 ;
.byt    $00,$FC,$FF,$0F,$00,$D0,$FF,$03; 0x1f5a8 $F598 00 FC FF 0F 00 D0 FF 03 ;
.byt    $00,$D0,$FF,$FF,$00,$00,$FF,$FF; 0x1f5b0 $F5A0 00 D0 FF FF 00 00 FF FF ;
.byt    $00,$00,$FF,$FF,$03,$00,$FC,$BF; 0x1f5b8 $F5A8 00 00 FF FF 03 00 FC BF ;
.byt    $00,$F0,$FF,$3F,$00,$C0,$FF,$BF; 0x1f5c0 $F5B0 00 F0 FF 3F 00 C0 FF BF ;
.byt    $00,$00,$FD,$FF,$00,$00,$F0,$0F; 0x1f5c8 $F5B8 00 00 FD FF 00 00 F0 0F ;
.byt    $FC,$FF,$3C,$00,$F0,$FF,$3F,$00; 0x1f5d0 $F5C0 FC FF 3C 00 F0 FF 3F 00 ;
.byt    $F0,$FF,$3F,$00,$00,$C0,$F2,$FF; 0x1f5d8 $F5C8 F0 FF 3F 00 00 C0 F2 FF ;
.byt    $DF,$00,$00,$FF,$FF,$00,$00,$FF; 0x1f5e0 $F5D0 DF 00 00 FF FF 00 00 FF ;
.byt    $FF,$01,$00,$00,$FC,$FF,$FF,$00; 0x1f5e8 $F5D8 FF 01 00 00 FC FF FF 00 ;
.byt    $C0,$FF,$7F,$00,$80,$FF,$FF,$00; 0x1f5f0 $F5E0 C0 FF 7F 00 80 FF FF 00 ;
.byt    $00,$00,$FF,$FF,$0F,$30,$FC,$FF; 0x1f5f8 $F5E8 00 00 FF FF 0F 30 FC FF ;
.byt    $0F,$00,$F0,$FF,$0F,$00,$00,$F0; 0x1f600 $F5F0 0F 00 F0 FF 0F 00 00 F0 ;
.byt    $FF,$3F,$F0,$C3,$FF,$3F,$F0,$80; 0x1f608 $F5F8 FF 3F F0 C3 FF 3F F0 80 ;
.byt    $FF,$0F,$00,$00,$F0,$FF,$0F,$F0; 0x1f610 $F600 FF 0F 00 00 F0 FF 0F F0 ;
.byt    $C3,$FF,$2F,$FC,$03,$FC,$03,$F0; 0x1f618 $F608 C3 FF 2F FC 03 FC 03 F0 ;
.byt    $0F,$FC,$FF,$00,$FF,$C0,$FF,$00; 0x1f620 $F610 0F FC FF 00 FF C0 FF 00 ;
.byt    $3F,$00,$2C,$00,$FF,$C0,$FF,$0F; 0x1f628 $F618 3F 00 2C 00 FF C0 FF 0F ;
.byt    $FC,$03,$FC,$2F,$00,$00,$F0,$03; 0x1f630 $F620 FC 03 FC 2F 00 00 F0 03 ;
.byt    $FC,$C0,$FF,$2F,$FC,$00,$F0,$3F; 0x1f638 $F628 FC C0 FF 2F FC 00 F0 3F ;
.byt    $00,$00,$C0,$0B,$3C,$FC,$FF,$0F; 0x1f640 $F630 00 00 C0 0B 3C FC FF 0F ;
.byt    $3F,$00,$FC,$0F,$00,$00,$FE,$03; 0x1f648 $F638 3F 00 FC 0F 00 00 FE 03 ;
.byt    $0F,$FF,$FF,$03,$3F,$70,$FF,$0F; 0x1f650 $F640 0F FF FF 03 3F 70 FF 0F ;
.byt    $00,$00,$F8,$C0,$0F,$FF,$FF,$C3; 0x1f658 $F648 00 00 F8 C0 0F FF FF C3 ;
.byt    $0F,$10,$FF,$03,$00,$00,$FF,$C0; 0x1f660 $F650 0F 10 FF 03 00 00 FF C0 ;
.byt    $C3,$FF,$FF,$C2,$0F,$C0,$FF,$03; 0x1f668 $F658 C3 FF FF C2 0F C0 FF 03 ;
.byt    $00,$00,$3F,$C0,$C3,$FF,$FF,$C0; 0x1f670 $F660 00 00 3F C0 C3 FF FF C0 ;
.byt    $03,$CC,$FF,$03,$00,$00,$BF,$C0; 0x1f678 $F668 03 CC FF 03 00 00 BF C0 ;
.byt    $C3,$FF,$FF,$C3,$03,$CC,$FF,$03; 0x1f680 $F670 C3 FF FF C3 03 CC FF 03 ;
.byt    $00,$00,$FD,$00,$03,$FF,$FF,$07; 0x1f688 $F678 00 00 FD 00 03 FF FF 07 ;
.byt    $0F,$F0,$FF,$0F,$00,$00,$FC,$03; 0x1f690 $F680 0F F0 FF 0F 00 00 FC 03 ;
.byt    $00,$FC,$FF,$3F,$3C,$C0,$FF,$3F; 0x1f698 $F688 00 FC FF 3F 3C C0 FF 3F ;
.byt    $00,$00,$F0,$2F,$00,$00,$FF,$FF; 0x1f6a0 $F690 00 00 F0 2F 00 00 FF FF ;
.byt    $0F,$3F,$F0,$FF,$0F,$00,$00,$FE; 0x1f6a8 $F698 0F 3F F0 FF 0F 00 00 FE ;
.byt    $0F,$00,$00,$FF,$FF,$0F,$00,$F0; 0x1f6b0 $F6A0 0F 00 00 FF FF 0F 00 F0 ;
.byt    $FF,$2F,$00,$00,$FF,$0F,$00,$00; 0x1f6b8 $F6A8 FF 2F 00 00 FF 0F 00 00 ;
.byt    $FE,$FF,$FF,$03,$00,$FF,$0F,$00; 0x1f6c0 $F6B0 FE FF FF 03 00 FF 0F 00 ;
.byt    $00,$FD,$FF,$03,$40,$B6,$FF,$F7; 0x1f6c8 $F6B8 00 FD FF 03 40 B6 FF F7 ;
.byt    $FF,$47,$09,$00,$01,$F0,$2D,$94; 0x1f6d0 $F6C0 FF 47 09 00 01 F0 2D 94 ;
.byt    $22,$77,$6B,$57,$A0,$FD,$DB,$FF; 0x1f6d8 $F6C8 22 77 6B 57 A0 FD DB FF ;
.byt    $21,$29,$CA,$26,$80,$02,$ED,$A9; 0x1f6e0 $F6D0 21 29 CA 26 80 02 ED A9 ;
.byt    $56,$52,$B7,$DA,$2A,$D6,$AD,$FD; 0x1f6e8 $F6D8 56 52 B7 DA 2A D6 AD FD ;
.byt    $09,$D9,$52,$B7,$08,$88,$A9,$4A; 0x1f6f0 $F6E0 09 D9 52 B7 08 88 A9 4A ;
.byt    $73,$29,$AA,$B6,$55,$A9,$AA,$55; 0x1f6f8 $F6E8 73 29 AA B6 55 A9 AA 55 ;
.byt    $5B,$CB,$54,$6D,$55,$AD,$4A,$35; 0x1f700 $F6F0 5B CB 54 6D 55 AD 4A 35 ;
.byt    $55,$93,$2A,$55,$55,$95,$4A,$55; 0x1f708 $F6F8 55 93 2A 55 55 95 4A 55 ;
.byt    $36,$89,$52,$D5,$AD,$8A,$4A,$D5; 0x1f710 $F700 36 89 52 D5 AD 8A 4A D5 ;
.byt    $75,$95,$48,$5A,$5B,$55,$4A,$55; 0x1f718 $F708 75 95 48 5A 5B 55 4A 55 ;
.byt    $6A,$F7,$1F,$00,$88,$FD,$3F,$24; 0x1f720 $F710 6A F7 1F 00 88 FD 3F 24 ;
.byt    $80,$F7,$AF,$09,$82,$FD,$AD,$88; 0x1f728 $F718 80 F7 AF 09 82 FD AD 88 ;
.byt    $50,$AB,$5A,$23,$FB,$FF,$00,$00; 0x1f730 $F720 50 AB 5A 23 FB FF 00 00 ;
.byt    $FC,$FF,$14,$00,$FC,$3F,$8F,$00; 0x1f738 $F728 FC FF 14 00 FC 3F 8F 00 ;
.byt    $FD,$CA,$2A,$80,$2D,$D9,$FF,$BF; 0x1f740 $F730 FD CA 2A 80 2D D9 FF BF ;
.byt    $00,$00,$FC,$FF,$0A,$00,$FC,$FF; 0x1f748 $F738 00 00 FC FF 0A 00 FC FF ;
.byt    $03,$40,$BD,$3E,$0A,$40,$D1,$FF; 0x1f750 $F740 03 40 BD 3E 0A 40 D1 FF ;
.byt    $FF,$00,$00,$FC,$FF,$0F,$00,$F8; 0x1f758 $F748 FF 00 00 FC FF 0F 00 F8 ;
.byt    $FF,$07,$00,$3D,$BD,$02,$80,$F6; 0x1f760 $F750 FF 07 00 3D BD 02 80 F6 ;
.byt    $FF,$5F,$00,$C0,$FF,$7F,$00,$00; 0x1f768 $F758 FF 5F 00 C0 FF 7F 00 00 ;
.byt    $FF,$FF,$03,$00,$F8,$9F,$00,$F0; 0x1f770 $F760 FF FF 03 00 F8 9F 00 F0 ;
.byt    $FF,$FF,$00,$00,$FF,$FF,$00,$00; 0x1f778 $F768 FF FF 00 00 FF FF 00 00 ;
.byt    $FF,$FF,$03,$00,$E0,$3F,$00,$FE; 0x1f780 $F770 FF FF 03 00 E0 3F 00 FE ;
.byt    $FF,$1D,$00,$F0,$FF,$0F,$00,$F0; 0x1f788 $F778 FF 1D 00 F0 FF 0F 00 F0 ;
.byt    $FF,$3F,$00,$00,$FC,$0F,$C0,$FF; 0x1f790 $F780 FF 3F 00 00 FC 0F C0 FF ;
.byt    $7F,$03,$00,$FD,$FF,$00,$00,$FE; 0x1f798 $F788 7F 03 00 FD FF 00 00 FE ;
.byt    $FF,$0F,$00,$80,$FF,$00,$F8,$FF; 0x1f7a0 $F790 FF 0F 00 80 FF 00 F8 FF ;
.byt    $3F,$00,$C0,$FF,$3F,$00,$C0,$FF; 0x1f7a8 $F798 3F 00 C0 FF 3F 00 C0 FF ;
.byt    $FF,$00,$00,$F0,$3F,$00,$FD,$FF; 0x1f7b0 $F7A0 FF 00 00 F0 3F 00 FD FF ;
.byt    $0F,$00,$F8,$FF,$03,$00,$F8,$FF; 0x1f7b8 $F7A8 0F 00 F8 FF 03 00 F8 FF ;
.byt    $3F,$00,$00,$FC,$07,$C0,$FF,$FF; 0x1f7c0 $F7B0 3F 00 00 FC 07 C0 FF FF ;
.byt    $03,$00,$FC,$FF,$01,$00,$FC,$FF; 0x1f7c8 $F7B8 03 00 FC FF 01 00 FC FF ;
.byt    $0F,$00,$C0,$FF,$02,$80,$FF,$FF; 0x1f7d0 $F7C0 0F 00 C0 FF 02 80 FF FF ;
.byt    $03,$00,$FE,$FF,$02,$00,$FC,$FF; 0x1f7d8 $F7C8 03 00 FE FF 02 00 FC FF ;
.byt    $0F,$00,$C0,$FF,$21,$00,$FC,$FF; 0x1f7e0 $F7D0 0F 00 C0 FF 21 00 FC FF ;
.byt    $2F,$00,$F0,$FF,$0F,$00,$F0,$FF; 0x1f7e8 $F7D8 2F 00 F0 FF 0F 00 F0 FF ;
.byt    $3F,$00,$80,$FF,$0F,$00,$60,$FF; 0x1f7f0 $F7E0 3F 00 80 FF 0F 00 60 FF ;
.byt    $FF,$00,$00,$FE,$FF,$03,$00,$FC; 0x1f7f8 $F7E8 FF 00 00 FE FF 03 00 FC ;
.byt    $FF,$07,$00,$FE,$DD,$22,$40,$AD; 0x1f800 $F7F0 FF 07 00 FE DD 22 40 AD ;
.byt    $FD,$FF,$0B,$00,$D8,$DD,$22,$24; 0x1f808 $F7F8 FD FF 0B 00 D8 DD 22 24 ;
.byt    $D5,$6D,$55,$4A,$55,$6B,$A5,$B2; 0x1f810 $F800 D5 6D 55 4A 55 6B A5 B2 ;
.byt    $54,$D5,$B5,$6C,$AB,$A9,$24,$55; 0x1f818 $F808 54 D5 B5 6C AB A9 24 55 ;
.byt    $95,$54,$4B,$AD,$4A,$55,$55,$AB; 0x1f820 $F810 95 54 4B AD 4A 55 55 AB ;
.byt    $56,$A9,$B2,$6A,$AD,$4A,$AD,$AA; 0x1f828 $F818 56 A9 B2 6A AD 4A AD AA ;
.byt    $56,$49,$A9,$6A,$2B,$4A,$55,$B5; 0x1f830 $F820 56 49 A9 6A 2B 4A 55 B5 ;
.byt    $A6,$A5,$52,$75,$AD,$4A,$CA,$5A; 0x1f838 $F828 A6 A5 52 75 AD 4A CA 5A ;
.byt    $AB,$2A,$69,$55,$B5,$2A,$A9,$AA; 0x1f840 $F830 AB 2A 69 55 B5 2A A9 AA ;
.byt    $56,$55,$2A,$55,$AD,$55,$A5,$AA; 0x1f848 $F838 56 55 2A 55 AD 55 A5 AA ;
.byt    $59,$95,$65,$95,$A9,$9A,$AA,$AA; 0x1f850 $F840 59 95 65 95 A9 9A AA AA ;
.byt    $AA,$69,$AA,$A6,$AA,$6A,$D5,$2D; 0x1f858 $F848 AA 69 AA A6 AA 6A D5 2D ;
.byt    $89,$52,$55,$B7,$2A,$A9,$94,$75; 0x1f860 $F850 89 52 55 B7 2A A9 94 75 ;
.byt    $6D,$A5,$48,$6A,$AD,$55,$A5,$54; 0x1f868 $F858 6D A5 48 6A AD 55 A5 54 ;
.byt    $A5,$DA,$FD,$17,$00,$88,$FE,$BF; 0x1f870 $F860 A5 DA FD 17 00 88 FE BF ;
.byt    $50,$20,$F0,$7F,$AB,$09,$82,$F5; 0x1f878 $F868 50 20 F0 7F AB 09 82 F5 ;
.byt    $B7,$8A,$40,$D5,$AA,$56,$49,$FB; 0x1f880 $F870 B7 8A 40 D5 AA 56 49 FB ;
.byt    $FF,$02,$00,$E0,$FF,$0F,$0B,$00; 0x1f888 $F878 FF 02 00 E0 FF 0F 0B 00 ;
.byt    $F7,$5F,$2F,$02,$D8,$2F,$B5,$0A; 0x1f890 $F880 F7 5F 2F 02 D8 2F B5 0A ;
.byt    $60,$4B,$DA,$FF,$FF,$00,$00,$D0; 0x1f898 $F888 60 4B DA FF FF 00 00 D0 ;
.byt    $FF,$AF,$02,$00,$FD,$FF,$07,$00; 0x1f8a0 $F890 FF AF 02 00 FD FF 07 00 ;
.byt    $D6,$E7,$95,$00,$52,$E1,$FF,$FF; 0x1f8a8 $F898 D6 E7 95 00 52 E1 FF FF ;
.byt    $03,$00,$C0,$FF,$FF,$01,$00,$FC; 0x1f8b0 $F8A0 03 00 C0 FF FF 01 00 FC ;
.byt    $FF,$0F,$00,$F0,$E3,$AB,$00,$A0; 0x1f8b8 $F8A8 FF 0F 00 F0 E3 AB 00 A0 ;
.byt    $F6,$FF,$3F,$01,$00,$FC,$FF,$3F; 0x1f8c0 $F8B0 F6 FF 3F 01 00 FC FF 3F ;
.byt    $00,$00,$FF,$FF,$07,$00,$A0,$7F; 0x1f8c8 $F8B8 00 00 FF FF 07 00 A0 7F ;
.byt    $07,$00,$FC,$FF,$FF,$00,$00,$FC; 0x1f8d0 $F8C0 07 00 FC FF FF 00 00 FC ;
.byt    $FF,$0F,$00,$C0,$FF,$FF,$03,$00; 0x1f8d8 $F8C8 FF 0F 00 C0 FF FF 03 00 ;
.byt    $00,$FF,$07,$C0,$FF,$FF,$0E,$00; 0x1f8e0 $F8D0 00 FF 07 C0 FF FF 0E 00 ;
.byt    $C0,$FF,$FF,$00,$00,$FC,$FF,$3F; 0x1f8e8 $F8D8 C0 FF FF 00 00 FC FF 3F ;
.byt    $00,$00,$F8,$3F,$00,$FC,$FF,$F7; 0x1f8f0 $F8E0 00 00 F8 3F 00 FC FF F7 ;
.byt    $00,$00,$FF,$FF,$03,$00,$E0,$FF; 0x1f8f8 $F8E8 00 00 FF FF 03 00 E0 FF ;
.byt    $FF,$02,$00,$C0,$FF,$02,$C0,$FF; 0x1f900 $F8F0 FF 02 00 C0 FF 02 C0 FF ;
.byt    $FF,$03,$00,$F0,$FF,$3F,$00,$00; 0x1f908 $F8F8 FF 03 00 F0 FF 3F 00 00 ;
.byt    $FF,$FF,$0F,$00,$00,$FD,$0F,$00; 0x1f910 $F900 FF FF 0F 00 00 FD 0F 00 ;
.byt    $FF,$FF,$3D,$00,$C0,$FF,$FF,$00; 0x1f918 $F908 FF FF 3D 00 C0 FF FF 00 ;
.byt    $00,$FC,$FF,$3F,$00,$00,$F0,$BF; 0x1f920 $F910 00 FC FF 3F 00 00 F0 BF ;
.byt    $00,$F0,$FF,$FF,$01,$00,$F8,$FF; 0x1f928 $F918 00 F0 FF FF 01 00 F8 FF ;
.byt    $0F,$00,$C0,$FF,$FF,$07,$00,$00; 0x1f930 $F920 0F 00 C0 FF FF 07 00 00 ;
.byt    $FF,$07,$02,$F0,$FF,$FF,$00,$00; 0x1f938 $F928 FF 07 02 F0 FF FF 00 00 ;
.byt    $FF,$FF,$03,$00,$E0,$FF,$FF,$03; 0x1f940 $F930 FF FF 03 00 E0 FF FF 03 ;
.byt    $00,$C0,$FF,$83,$00,$E0,$FF,$FF; 0x1f948 $F938 00 C0 FF 83 00 E0 FF FF ;
.byt    $03,$00,$F0,$FF,$3F,$00,$00,$FF; 0x1f950 $F940 03 00 F0 FF 3F 00 00 FF ;
.byt    $FF,$2F,$00,$80,$FF,$8F,$00,$00; 0x1f958 $F948 FF 2F 00 80 FF 8F 00 00 ;
.byt    $F7,$FF,$3F,$00,$00,$FE,$FF,$0B; 0x1f960 $F950 F7 FF 3F 00 00 FE FF 0B ;
.byt    $00,$E0,$FF,$FF,$00,$00,$7F,$77; 0x1f968 $F958 00 E0 FF FF 00 00 7F 77 ;
.byt    $0B,$40,$55,$DB,$FF,$BF,$02,$00; 0x1f970 $F960 0B 40 55 DB FF BF 02 00 ;
.byt    $74,$77,$8D,$82,$52,$6D,$5B,$95; 0x1f978 $F968 74 77 8D 82 52 6D 5B 95 ;
.byt    $52,$55,$AD,$55,$2A,$53,$55,$6D; 0x1f980 $F970 52 55 AD 55 2A 53 55 6D ;
.byt    $2D,$6D,$AB,$A9,$A2,$A8,$55,$4A; 0x1f988 $F978 2D 6D AB A9 A2 A8 55 4A ;
.byt    $55,$55,$D5,$52,$55,$55,$AD,$6A; 0x1f990 $F980 55 55 D5 52 55 55 AD 6A ;
.byt    $96,$2A,$AB,$56,$AB,$4A,$B5,$AA; 0x1f998 $F988 96 2A AB 56 AB 4A B5 AA ;
.byt    $56,$25,$95,$AA,$D6,$8A,$52,$55; 0x1f9a0 $F990 56 25 95 AA D6 8A 52 55 ;
.byt    $B5,$A6,$AA,$8A,$6A,$5B,$AB,$A2; 0x1f9a8 $F998 B5 A6 AA 8A 6A 5B AB A2 ;
.byt    $D2,$5A,$AD,$2A,$A5,$66,$55,$AB; 0x1f9b0 $F9A0 D2 5A AD 2A A5 66 55 AB ;
.byt    $52,$AA,$AA,$56,$55,$A9,$54,$B5; 0x1f9b8 $F9A8 52 AA AA 56 55 A9 54 B5 ;
.byt    $5A,$55,$A9,$B4,$6A,$55,$65,$AA; 0x1f9c0 $F9B0 5A 55 A9 B4 6A 55 65 AA ;
.byt    $55,$55,$55,$55,$AA,$56,$55,$55; 0x1f9c8 $F9B8 55 55 55 55 AA 56 55 55 ;
.byt    $D7,$56,$A5,$48,$6A,$AD,$55,$55; 0x1f9d0 $F9C0 D7 56 A5 48 6A AD 55 55 ;
.byt    $4A,$55,$A5,$DA,$FF,$95,$80,$80; 0x1f9d8 $F9C8 4A 55 A5 DA FF 95 80 80 ;
.byt    $E8,$FF,$2D,$92,$20,$F0,$FD,$AD; 0x1f9e0 $F9D0 E8 FF 2D 92 20 F0 FD AD ;
.byt    $16,$22,$68,$F7,$AD,$8A,$08,$55; 0x1f9e8 $F9D8 16 22 68 F7 AD 8A 08 55 ;
.byt    $AB,$6A,$55,$D2,$FE,$FF,$00,$00; 0x1f9f0 $F9E0 AB 6A 55 D2 FE FF 00 00 ;
.byt    $40,$FF,$FF,$70,$80,$80,$FF,$37; 0x1f9f8 $F9E8 40 FF FF 70 80 80 FF 37 ;
.byt    $BD,$08,$C0,$FD,$4A,$AD,$02,$62; 0x1fa00 $F9F0 BD 08 C0 FD 4A AD 02 62 ;
.byt    $4B,$A9,$FF,$FF,$2F,$00,$00,$F0; 0x1fa08 $F9F8 4B A9 FF FF 2F 00 00 F0 ;
.byt    $FF,$2F,$0A,$00,$F0,$FF,$DF,$01; 0x1fa10 $FA00 FF 2F 0A 00 F0 FF DF 01 ;
.byt    $00,$DB,$A7,$37,$0A,$A0,$34,$F4; 0x1fa18 $FA08 00 DB A7 37 0A A0 34 F4 ;
.byt    $FF,$FF,$03,$00,$00,$FE,$FF,$3F; 0x1fa20 $FA10 FF FF 03 00 00 FE FF 3F ;
.byt    $00,$00,$FC,$FF,$3F,$00,$40,$5F; 0x1fa28 $FA18 00 00 FC FF 3F 00 40 5F ;
.byt    $F9,$2A,$00,$A1,$DA,$FF,$FF,$12; 0x1fa30 $FA20 F9 2A 00 A1 DA FF FF 12 ;
.byt    $00,$00,$FF,$FF,$3F,$00,$00,$FC; 0x1fa38 $FA28 00 00 FF FF 3F 00 00 FC ;
.byt    $FF,$7F,$02,$00,$A8,$FD,$1D,$00; 0x1fa40 $FA30 FF 7F 02 00 A8 FD 1D 00 ;
.byt    $D0,$FF,$FF,$3F,$00,$00,$FC,$FF; 0x1fa48 $FA38 D0 FF FF 3F 00 00 FC FF ;
.byt    $3F,$00,$00,$F8,$FF,$FF,$01,$00; 0x1fa50 $FA40 3F 00 00 F8 FF FF 01 00 ;
.byt    $00,$FD,$3F,$20,$F0,$FF,$FF,$2C; 0x1fa58 $FA48 00 FD 3F 20 F0 FF FF 2C ;
.byt    $00,$00,$FF,$FF,$0F,$00,$00,$FD; 0x1fa60 $FA50 00 00 FF FF 0F 00 00 FD ;
.byt    $FF,$DF,$00,$00,$40,$FF,$1D,$00; 0x1fa68 $FA58 FF DF 00 00 40 FF 1D 00 ;
.byt    $FD,$FF,$3F,$03,$00,$E0,$FF,$FF; 0x1fa70 $FA60 FD FF 3F 03 00 E0 FF FF ;
.byt    $03,$00,$C0,$FF,$FF,$3B,$00,$00; 0x1fa78 $FA68 03 00 C0 FF FF 3B 00 00 ;
.byt    $C0,$FF,$0B,$00,$FF,$FF,$CF,$02; 0x1fa80 $FA70 C0 FF 0B 00 FF FF CF 02 ;
.byt    $00,$F0,$FF,$FF,$00,$00,$E0,$FF; 0x1fa88 $FA78 00 F0 FF FF 00 00 E0 FF ;
.byt    $FF,$2F,$00,$00,$E0,$FF,$02,$40; 0x1fa90 $FA80 FF 2F 00 00 E0 FF 02 40 ;
.byt    $FF,$FF,$F3,$00,$00,$FC,$FF,$3F; 0x1fa98 $FA88 FF FF F3 00 00 FC FF 3F ;
.byt    $00,$00,$F4,$FF,$FF,$03,$00,$00; 0x1faa0 $FA90 00 00 F4 FF FF 03 00 00 ;
.byt    $F6,$BF,$00,$D0,$FF,$FF,$37,$00; 0x1faa8 $FA98 F6 BF 00 D0 FF FF 37 00 ;
.byt    $00,$FC,$FF,$1F,$00,$00,$FC,$FF; 0x1fab0 $FAA0 00 FC FF 1F 00 00 FC FF ;
.byt    $FF,$03,$00                    ; 0x1fab8 $FAA8 FF 03 00                ;
bank7_UNKNOWN3                                                                 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fabb $FAAB 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fac3 $FAB3 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1facb $FABB DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fad3 $FAC3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fadb $FACB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fae3 $FAD3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1faeb $FADB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1faf3 $FAE3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fafb $FAEB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fb03 $FAF3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fb0b $FAFB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fb13 $FB03 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fb1b $FB0B FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fb23 $FB13 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fb2b $FB1B FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fb33 $FB23 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fb3b $FB2B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fb43 $FB33 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fb4b $FB3B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fb53 $FB43 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fb5b $FB4B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fb63 $FB53 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fb6b $FB5B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fb73 $FB63 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fb7b $FB6B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fb83 $FB73 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fb8b $FB7B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fb93 $FB83 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fb9b $FB8B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fba3 $FB93 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fbab $FB9B 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fbb3 $FBA3 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1fbbb $FBAB DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fbc3 $FBB3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fbcb $FBBB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fbd3 $FBC3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1fbdb $FBCB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1fbe3 $FBD3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fbeb $FBDB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fbf3 $FBE3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fbfb $FBEB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fc03 $FBF3 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fc0b $FBFB FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fc13 $FC03 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fc1b $FC0B FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fc23 $FC13 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fc2b $FC1B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fc33 $FC23 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fc3b $FC2B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fc43 $FC33 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fc4b $FC3B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fc53 $FC43 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fc5b $FC4B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fc63 $FC53 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fc6b $FC5B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fc73 $FC63 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fc7b $FC6B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fc83 $FC73 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fc8b $FC7B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fc93 $FC83 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fc9b $FC8B 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fca3 $FC93 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1fcab $FC9B DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fcb3 $FCA3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fcbb $FCAB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fcc3 $FCB3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1fccb $FCBB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1fcd3 $FCC3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fcdb $FCCB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fce3 $FCD3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fceb $FCDB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fcf3 $FCE3 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fcfb $FCEB FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fd03 $FCF3 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fd0b $FCFB FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fd13 $FD03 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fd1b $FD0B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fd23 $FD13 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fd2b $FD1B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fd33 $FD23 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fd3b $FD2B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fd43 $FD33 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fd4b $FD3B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fd53 $FD43 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fd5b $FD4B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fd63 $FD53 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fd6b $FD5B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fd73 $FD63 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fd7b $FD6B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fd83 $FD73 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40            ; 0x1fd8b $FD7B 00 FD 3F 00 40          ;
LFD80                                                                          ;
.byt    $03,$01                        ; 0x1fd90 $FD80 03 01                   ;
; ---------------------------------------------------------------------------- ;
bank7_code52                                                                   ;
lda      $0720                         ; 0x1fd92 $FD82 AD 20 07                ;
lsr                                    ; 0x1fd95 $FD85 4A                      ;
tax                                    ; 0x1fd96 $FD86 AA                      ;
lda      $071E                         ; 0x1fd97 $FD87 AD 1E 07                ;
and      #$1F                          ; 0x1fd9a $FD8A 29 1F                   ; keep bits ...x xxxx
sec                                    ; 0x1fd9c $FD8C 38                      ;
sbc      LFD80,x                       ; 0x1fd9d $FD8D FD 80 FD                ;
lsr                                    ; 0x1fda0 $FD90 4A                      ;
lsr                                    ; 0x1fda1 $FD91 4A                      ;
clc                                    ; 0x1fda2 $FD92 18                      ;
adc      #$C0                          ; 0x1fda3 $FD93 69 C0                   ;
sta      $01                           ; 0x1fda5 $FD95 85 01                   ;
lda      $071D                         ; 0x1fda7 $FD97 AD 1D 07                ;
ora      #$03                          ; 0x1fdaa $FD9A 09 03                   ; set bits  .... ..xx
sta      L0000                         ; 0x1fdac $FD9C 85 00                   ;
ldx      #$00                          ; 0x1fdae $FD9E A2 00                   ; X = 00
stx      $07AE                         ; 0x1fdb0 $FDA0 8E AE 07                ;
LFDA3                                                                          ;
lda      $2002                         ; 0x1fdb3 $FDA3 AD 02 20                ;
lda      L0000                         ; 0x1fdb6 $FDA6 A5 00                   ;
sta      $2006                         ; 0x1fdb8 $FDA8 8D 06 20                ;
lda      $01                           ; 0x1fdbb $FDAB A5 01                   ;
clc                                    ; 0x1fdbd $FDAD 18                      ;
adc      #$08                          ; 0x1fdbe $FDAE 69 08                   ;
sta      $2006                         ; 0x1fdc0 $FDB0 8D 06 20                ;
sta      $01                           ; 0x1fdc3 $FDB3 85 01                   ;
lda      $0471,x                       ; 0x1fdc5 $FDB5 BD 71 04                ;
sta      $2007                         ; 0x1fdc8 $FDB8 8D 07 20                ;
lda      #$00                          ; 0x1fdcb $FDBB A9 00                   ; A = 00
sta      $0471,x                       ; 0x1fdcd $FDBD 9D 71 04                ;
inx                                    ; 0x1fdd0 $FDC0 E8                      ;
cpx      #$07                          ; 0x1fdd1 $FDC1 E0 07                   ;
bcc      LFDA3                         ; 0x1fdd3 $FDC3 90 DE                   ;
lda      #$FF                          ; 0x1fdd5 $FDC5 A9 FF                   ; A = FF
sty      $03A3                         ; 0x1fdd7 $FDC7 8C A3 03                ;
rts                                    ; 0x1fdda $FDCA 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Continue_Save_Screen_Tile_Mappings                                       ;
.byt    $23,$D8,$7F,$FF                ; 0x1fddb $FDCB 23 D8 7F FF             ;
                                                                               ;
.byt    $23,$F7,$01,$FF                ; 0x1fddf $FDCF 23 F7 01 FF             ;
                                                                               ;
.byt    $20,$CA,$0A,$FA,$F4,$DC,$E8,$E7; 0x1fde3 $FDD3 20 CA 0A FA F4 DC E8 E7 ;CONTINUE (FA = Magic Bag Tile)
.byt    $ED,$E2,$E7,$EE,$DE            ; 0x1fdeb $FDDB ED E2 E7 EE DE          ;
                                                                               ;
.byt    $21,$0C,$04,$EC,$DA,$EF,$DE    ; 0x1fdf0 $FDE0 21 0C 04 EC DA EF DE    ;SAVE
                                                                               ;
.byt    $21,$83,$5A,$CB                ; 0x1fdf7 $FDE7 21 83 5A CB             ;
                                                                               ;
.byt    $23,$03,$5A,$CB                ; 0x1fdfb $FDEB 23 03 5A CB             ;
                                                                               ;
.byt    $21,$A3,$CB,$CC                ; 0x1fdff $FDEF 21 A3 CB CC             ;
                                                                               ;
.byt    $21,$BC,$CB,$CC                ; 0x1fe03 $FDF3 21 BC CB CC             ;
                                                                               ;
.byt    $21,$83,$01,$CA                ; 0x1fe07 $FDF7 21 83 01 CA             ;
                                                                               ;
.byt    $21,$9C,$01,$CA                ; 0x1fe0b $FDFB 21 9C 01 CA             ;
                                                                               ;
.byt    $23,$03,$01,$CA                ; 0x1fe0f $FDFF 23 03 01 CA             ;
                                                                               ;
.byt    $23,$1C,$01,$CA                ; 0x1fe13 $FE03 23 1C 01 CA             ;
                                                                               ;
.byt    $21,$CC,$07,$DC,$DA,$EE,$ED,$E2; 0x1fe17 $FE07 21 CC 07 DC DA EE ED E2 ;CAUTION
.byt    $E8,$E7                        ; 0x1fe1f $FE0F E8 E7                   ;
                                                                               ;
.byt    $22,$05,$16,$ED,$E8,$F4,$DA,$EF; 0x1fe21 $FE11 22 05 16 ED E8 F4 DA EF ;
.byt    $E8,$E2,$DD,$F4,$DD,$DA,$E6,$DA; 0x1fe29 $FE19 E8 E2 DD F4 DD DA E6 DA ;
.byt    $E0,$E2,$E7,$E0,$F4,$E0,$DA,$E6; 0x1fe31 $FE21 E0 E2 E7 E0 F4 E0 DA E6 ;
.byt    $DE                            ; 0x1fe39 $FE29 DE                      ;
                                                                               ;
.byt    $22,$45,$16,$E2,$E7,$DF,$E8,$F4; 0x1fe3a $FE2A 22 45 16 E2 E7 DF E8 F4 ;
.byt    $F4,$EC,$DA,$EF,$DE,$DD,$9C,$F4; 0x1fe42 $FE32 F4 EC DA EF DE DD 9C F4 ;
.byt    $F4,$E1,$E8,$E5,$DD,$F4,$F4,$E2; 0x1fe4a $FE3A F4 E1 E8 E5 DD F4 F4 E2 ;
.byt    $E7                            ; 0x1fe52 $FE42 E7                      ;
                                                                               ;
.byt    $22,$85,$16,$EB,$DE,$EC,$DE,$ED; 0x1fe53 $FE43 22 85 16 EB DE EC DE ED ;
.byt    $F4,$F4,$DB,$EE,$ED,$ED,$E8,$E7; 0x1fe5b $FE4B F4 F4 DB EE ED ED E8 E7 ;
.byt    $F4,$F4,$DA,$EC,$F4,$F4,$F2,$E8; 0x1fe63 $FE53 F4 F4 DA EC F4 F4 F2 E8 ;
.byt    $EE                            ; 0x1fe6b $FE5B EE                      ;
                                                                               ;
.byt    $22,$C5,$16,$ED,$EE,$EB,$E7,$F4; 0x1fe6c $FE5C 22 C5 16 ED EE EB E7 F4 ;
.byt    $E9,$E8,$F0,$DE,$EB,$F4,$E8,$DF; 0x1fe74 $FE64 E9 E8 F0 DE EB F4 E8 DF ;
.byt    $DF,$CF,$F4,$F4,$F4,$F4,$F4,$F4; 0x1fe7c $FE6C DF CF F4 F4 F4 F4 F4 F4 ;
.byt    $F4                            ; 0x1fe84 $FE74 F4                      ;
                                                                               ;
.byt    $FF                            ; 0x1fe85 $FE75 FF                      ;End Byte
; ---------------------------------------------------------------------------- ;
bank7_code53                                                                   ;
jsr      LD15C                         ; 0x1fe86 $FE76 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1fe89 $FE79 20 85 D3;
bank7_pointer_table                                                            ;
.word    bank7_code54__Flash_Text_QUIT_Red_and_White; 0x1fe8c $FE7C 87 FE      ;
.word    LCF21_SaveGameWhenChooseSAVEwhenDead__maybe; 0x1fe8e $FE7E 21 CF      ;
.word    LCF05                         ; 0x1fe90 $FE80 05 CF                   ;
.word    LD323                         ; 0x1fe92 $FE82 23 D3                   ;
; ---------------------------------------------------------------------------- ;
bank7_table32                                                                  ;
.byt    $01,$00,$FF                    ; 0x1fe94 $FE84 01 00 FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code54__Flash_Text_QUIT_Red_and_White                                    ;
lda      $07B0                         ; 0x1fe97 $FE87 AD B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
beq      LFEA6                         ; 0x1fe9a $FE8A F0 1A                   ;
dec      $07B0                         ; 0x1fe9c $FE8C CE B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
pha                                    ; 0x1fe9f $FE8F 48                      ;
ldx      #$04                          ; 0x1fea0 $FE90 A2 04                   ; X = 04
LFE92                                                                          ;
lda      bank7_pointer_table+$06,x     ; 0x1fea2 $FE92 BD 82 FE                ;
sta      L0302,x                       ; 0x1fea5 $FE95 9D 02 03                ;
dex                                    ; 0x1fea8 $FE98 CA                      ;
bpl      LFE92                         ; 0x1fea9 $FE99 10 F7                   ;
pla                                    ; 0x1feab $FE9B 68                      ;
and      #$04                          ; 0x1feac $FE9C 29 04                   ; keep bits .... .x..
beq      LFEA5                         ; 0x1feae $FE9E F0 05                   ;
lda      #$FF                          ; 0x1feb0 $FEA0 A9 FF                   ; A = FF
sta      $0305                         ; 0x1feb2 $FEA2 8D 05 03                ;; Empty Row Space Character
LFEA5                                                                          ;
rts                                    ; 0x1feb5 $FEA5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFEA6                                                                          ;
inc      $0738                         ; 0x1feb6 $FEA6 EE 38 07                ;
rts                                    ; 0x1feb9 $FEA9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_FEAA                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1feba $FEAA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1fec2 $FEB2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1feca $FEBA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1fed2 $FEC2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0x1feda $FECA FF FF FF FF FF FF       ;
; ---------------------------------------------------------------------------- ;
bank7_code55                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1fee0 $FED0 20 C9 FF                ; Load Bank $0769
LFED3                                                                          ;
stx      $01                           ; 0x1fee3 $FED3 86 01                   ;
lda      $0464,x                       ; 0x1fee5 $FED5 BD 64 04                ;
and      #$C0                          ; 0x1fee8 $FED8 29 C0                   ; keep bits xx.. ....
sta      $03                           ; 0x1feea $FEDA 85 03                   ;
asl                                    ; 0x1feec $FEDC 0A                      ;
rol                                    ; 0x1feed $FEDD 2A                      ;
rol                                    ; 0x1feee $FEDE 2A                      ;
asl                                    ; 0x1feef $FEDF 0A                      ;
tay                                    ; 0x1fef0 $FEE0 A8                      ;
lda      bank1_Pointer_table_for_Objects_Tile_Mappings,y; 0x1fef1 $FEE1 B9 00 85;
sta      L000E                         ; 0x1fef4 $FEE4 85 0E                   ;
lda      bank1_Pointer_table_for_Objects_Tile_Mappings+$01,y; 0x1fef6 $FEE6 B9 01 85;
sta      $0F                           ; 0x1fef9 $FEE9 85 0F                   ;
lda      $0464,x                       ; 0x1fefb $FEEB BD 64 04                ;
and      #$3F                          ; 0x1fefe $FEEE 29 3F                   ; keep bits ..xx xxxx
asl                                    ; 0x1ff00 $FEF0 0A                      ;
asl                                    ; 0x1ff01 $FEF1 0A                      ;
sta      $02                           ; 0x1ff02 $FEF2 85 02                   ;
lda      $0740                         ; 0x1ff04 $FEF4 AD 40 07                ;
and      #$01                          ; 0x1ff07 $FEF7 29 01                   ; keep bits .... ...x
eor      #$01                          ; 0x1ff09 $FEF9 49 01                   ; flip bits .... ...x
asl                                    ; 0x1ff0b $FEFB 0A                      ;
adc      $02                           ; 0x1ff0c $FEFC 65 02                   ;
tay                                    ; 0x1ff0e $FEFE A8                      ;
ldx      L0000                         ; 0x1ff0f $FEFF A6 00                   ;
lda      (L000E),y                     ; 0x1ff11 $FF01 B1 0E                   ;
sta      $03A7,x                       ; 0x1ff13 $FF03 9D A7 03                ;
iny                                    ; 0x1ff16 $FF06 C8                      ;
lda      (L000E),y                     ; 0x1ff17 $FF07 B1 0E                   ;
sta      $03A8,x                       ; 0x1ff19 $FF09 9D A8 03                ;
ldy      $04                           ; 0x1ff1c $FF0C A4 04                   ;
lda      $05                           ; 0x1ff1e $FF0E A5 05                   ;
bne      LFF20                         ; 0x1ff20 $FF10 D0 0E                   ;
lda      $01                           ; 0x1ff22 $FF12 A5 01                   ;
lsr                                    ; 0x1ff24 $FF14 4A                      ;
bcs      LFF30                         ; 0x1ff25 $FF15 B0 19                   ;
rol      $03                           ; 0x1ff27 $FF17 26 03                   ;
rol      $03                           ; 0x1ff29 $FF19 26 03                   ;
rol      $03                           ; 0x1ff2b $FF1B 26 03                   ;
jmp      LFF36                         ; 0x1ff2d $FF1D 4C 36 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFF20                                                                          ;
lda      $01                           ; 0x1ff30 $FF20 A5 01                   ;
lsr                                    ; 0x1ff32 $FF22 4A                      ;
bcs      LFF34                         ; 0x1ff33 $FF23 B0 0F                   ;
lsr      $03                           ; 0x1ff35 $FF25 46 03                   ;
lsr      $03                           ; 0x1ff37 $FF27 46 03                   ;
lsr      $03                           ; 0x1ff39 $FF29 46 03                   ;
lsr      $03                           ; 0x1ff3b $FF2B 46 03                   ;
jmp      LFF36                         ; 0x1ff3d $FF2D 4C 36 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFF30                                                                          ;
lsr      $03                           ; 0x1ff40 $FF30 46 03                   ;
lsr      $03                           ; 0x1ff42 $FF32 46 03                   ;
LFF34                                                                          ;
inc      $04                           ; 0x1ff44 $FF34 E6 04                   ;
LFF36                                                                          ;
lda      $0471,y                       ; 0x1ff46 $FF36 B9 71 04                ;
ora      $03                           ; 0x1ff49 $FF39 05 03                   ;
sta      $0471,y                       ; 0x1ff4b $FF3B 99 71 04                ;
inc      L0000                         ; 0x1ff4e $FF3E E6 00                   ;
inc      L0000                         ; 0x1ff50 $FF40 E6 00                   ;
ldx      $01                           ; 0x1ff52 $FF42 A6 01                   ;
inx                                    ; 0x1ff54 $FF44 E8                      ;
cpx      #$0D                          ; 0x1ff55 $FF45 E0 0D                   ;
bcc      LFED3                         ; 0x1ff57 $FF47 90 8A                   ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1ff59 $FF49 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_FF4C                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff5c $FF4C FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff64 $FF54 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff6c $FF5C FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff74 $FF64 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF                ; 0x1ff7c $FF6C FF FF FF FF             ;
; ---------------------------------------------------------------------------- ;
bank7_reset                                                                    ;
sei                                    ; 0x1ff80 $FF70 78                      ;
cld                                    ; 0x1ff81 $FF71 D8                      ;
ldx      #$00                          ; 0x1ff82 $FF72 A2 00                   ; X = 00
stx      $2000                         ; 0x1ff84 $FF74 8E 00 20                ;
inx                                    ; 0x1ff87 $FF77 E8                      ;
LFF78                                                                          ;
lda      $2002                         ; 0x1ff88 $FF78 AD 02 20                ;
bpl      LFF78                         ; 0x1ff8b $FF7B 10 FB                   ;
dex                                    ; 0x1ff8d $FF7D CA                      ;
beq      LFF78                         ; 0x1ff8e $FF7E F0 F8                   ;
txs                                    ; 0x1ff90 $FF80 9A                      ;
stx      bank1_Pointer_table_for_Background_Areas_Data; 0x1ff91 $FF81 8E 00 80 ;
stx      bank1_Area_Pointers_Death_Mountain; 0x1ff94 $FF84 8E 00 A0            ;
stx      bank7_PowerON_code            ; 0x1ff97 $FF87 8E 00 C0                ;
stx      LE000                         ; 0x1ff9a $FF8A 8E 00 E0                ;
lda      #$0F                          ; 0x1ff9d $FF8D A9 0F                   ; A = 0F
jsr      bank7_Config_Register         ; 0x1ff9f $FF8F 20 9D FF                ;
jsr      bank7_chr_bank_switch__load_A ; 0x1ffa2 $FF92 20 B1 FF                ;
lda      #$07                          ; 0x1ffa5 $FF95 A9 07                   ; A = 07
jsr      LFFCC                         ; 0x1ffa7 $FF97 20 CC FF                ;
jmp      bank7_PowerON_code            ; 0x1ffaa $FF9A 4C 00 C0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Config_Register                                                          ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x1ffad $FF9D 8D 00 80 ;
lsr                                    ; 0x1ffb0 $FFA0 4A                      ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x1ffb1 $FFA1 8D 00 80 ;
lsr                                    ; 0x1ffb4 $FFA4 4A                      ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x1ffb5 $FFA5 8D 00 80 ;
lsr                                    ; 0x1ffb8 $FFA8 4A                      ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x1ffb9 $FFA9 8D 00 80 ;
lsr                                    ; 0x1ffbc $FFAC 4A                      ;
sta      bank1_Pointer_table_for_Background_Areas_Data; 0x1ffbd $FFAD 8D 00 80 ;
rts                                    ; 0x1ffc0 $FFB0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_chr_bank_switch__load_A                                                  ;
sta      bank1_Area_Pointers_Death_Mountain; 0x1ffc1 $FFB1 8D 00 A0            ;
lsr                                    ; 0x1ffc4 $FFB4 4A                      ;
sta      bank1_Area_Pointers_Death_Mountain; 0x1ffc5 $FFB5 8D 00 A0            ;
lsr                                    ; 0x1ffc8 $FFB8 4A                      ;
sta      bank1_Area_Pointers_Death_Mountain; 0x1ffc9 $FFB9 8D 00 A0            ;
lsr                                    ; 0x1ffcc $FFBC 4A                      ;
sta      bank1_Area_Pointers_Death_Mountain; 0x1ffcd $FFBD 8D 00 A0            ;
lsr                                    ; 0x1ffd0 $FFC0 4A                      ;
sta      bank1_Area_Pointers_Death_Mountain; 0x1ffd1 $FFC1 8D 00 A0            ;
rts                                    ; 0x1ffd4 $FFC4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Load_Bank_0_at_0x8000                                                    ;
lda      #$00                          ; 0x1ffd5 $FFC5 A9 00                   ; A = 00
beq      LFFCC                         ; 0x1ffd7 $FFC7 F0 03                   ;
bank7_Load_Bank_769_at_0x8000                                                  ;
lda      $0769                         ; 0x1ffd9 $FFC9 AD 69 07                ;; Bank to switch to (other than 0 or 7)
LFFCC                                                                          ;
sta      LE000                         ; 0x1ffdc $FFCC 8D 00 E0                ;
lsr                                    ; 0x1ffdf $FFCF 4A                      ;
sta      LE000                         ; 0x1ffe0 $FFD0 8D 00 E0                ;
lsr                                    ; 0x1ffe3 $FFD3 4A                      ;
sta      LE000                         ; 0x1ffe4 $FFD4 8D 00 E0                ;
lsr                                    ; 0x1ffe7 $FFD7 4A                      ;
sta      LE000                         ; 0x1ffe8 $FFD8 8D 00 E0                ;
lsr                                    ; 0x1ffeb $FFDB 4A                      ;
sta      LE000                         ; 0x1ffec $FFDC 8D 00 E0                ;
rts                                    ; 0x1ffef $FFDF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table33                                                                  ;
.byt    $4C,$45,$47,$45,$4E,$44,$20,$4F; 0x1fff0 $FFE0 4C 45 47 45 4E 44 20 4F ;
.byt    $46,$20,$5A,$45,$4C,$44,$41,$32; 0x1fff8 $FFE8 46 20 5A 45 4C 44 41 32 ;
.byt    $98,$F2,$DD,$DB,$33,$04,$01,$0F; 0x20000 $FFF0 98 F2 DD DB 33 04 01 0F ;
.byt    $01,$00,$7B,$C0,$70,$FF,$F0,$FF; 0x20008 $FFF8 01 00 7B C0 70 FF F0 FF ;
                                                                               ;
                                                                               ;
