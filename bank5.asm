; DISASSEMBLY ORIGINALLY WROTE BY TRAX (99.9% of his work)
 * = $8000                                                                      ;
; da65 V2.18 
; Created     2021-04-12 11 24 36                                              ;
; Input file  bank5_and_7.nes                                                  ;
; Page        1                                                                ;
                                                                               ;
                                                                               ;
;.setcpu  "6502"                                                               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L0000     = $0000                                                              ;
L000E     = $000E                                                              ;
L02AD     = $02AD                                                              ;
L0302     = $0302                                                              ;
L0363     = $0363                                                              ;
L03A4     = $03A4                                                              ;
L05C9     = $05C9                                                              ;
L0600     = $0600                                                              ;
L0620     = $0620                                                              ;
L0640     = $0640                                                              ;
L0660     = $0660                                                              ;
L0680     = $0680                                                              ;
L06A0     = $06A0                                                              ;
L06C0     = $06C0                                                              ;
L07AD     = $07AD                                                              ;
L6002     = $6002                                                              ;
L6034     = $6034                                                              ;
L6060     = $6060                                                              ;
L6066     = $6066                                                              ;
L6098     = $6098                                                              ;
L6178     = $6178                                                              ;
L6258     = $6258                                                              ;
L6261     = $6261                                                              ;
L696C     = $696C                                                              ;
L7000     = $7000                                                              ;
L7001     = $7001                                                              ;
L7004     = $7004                                                              ;
L700B     = $700B                                                              ;
L700E     = $700E                                                              ;
L7013     = $7013                                                              ;
L7018     = $7018                                                              ;
L701D     = $701D                                                              ;
L702A     = $702A                                                              ;
L7033     = $7033                                                              ;
L7038     = $7038                                                              ;
L703D     = $703D                                                              ;
L7042     = $7042                                                              ;
L7045     = $7045                                                              ;
L7048     = $7048                                                              ;
L7051     = $7051                                                              ;
L7054     = $7054                                                              ;
L705F     = $705F                                                              ;
L7064     = $7064                                                              ;
L706F     = $706F                                                              ;
L7072     = $7072                                                              ;
L7079     = $7079                                                              ;
L7084     = $7084                                                              ;
L708B     = $708B                                                              ;
L7090     = $7090                                                              ;
L7097     = $7097                                                              ;
L70A0     = $70A0                                                              ;
L70A5     = $70A5                                                              ;
L70AA     = $70AA                                                              ;
L70AD     = $70AD                                                              ;
L70BA     = $70BA                                                              ;
L70BF     = $70BF                                                              ;
L70C2     = $70C2                                                              ;
L70C5     = $70C5                                                              ;
L70CE     = $70CE                                                              ;
L70D9     = $70D9                                                              ;
L70E0     = $70E0                                                              ;
L70ED     = $70ED                                                              ;
L70F4     = $70F4                                                              ;
L70F9     = $70F9                                                              ;
L70FE     = $70FE                                                              ;
L7103     = $7103                                                              ;
L7106     = $7106                                                              ;
L710F     = $710F                                                              ;
L7114     = $7114                                                              ;
L711B     = $711B                                                              ;
L7120     = $7120                                                              ;
L7123     = $7123                                                              ;
L7126     = $7126                                                              ;
L7129     = $7129                                                              ;
L712C     = $712C                                                              ;
L712F     = $712F                                                              ;
L7132     = $7132                                                              ;
L7135     = $7135                                                              ;
L7400     = $7400                                                              ;
L7402     = $7402                                                              ;
L7434     = $7434                                                              ;
L7466     = $7466                                                              ;
L7498     = $7498                                                              ;
L749A     = $749A                                                              ;
L757A     = $757A                                                              ;
L765A     = $765A                                                              ;
L773A     = $773A                                                              ;
; ---------------------------------------------------------------------------- ;
bank5_nothing                                                                  ;
.byt    $00                            ; 0x14010 $8000 00                      ;
L8001                                                                          ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x14011 $8001 00 00 00 00 00 00 00 00 ;
.byt    $00,$00,$00,$00,$00            ; 0x14019 $8009 00 00 00 00 00          ;
bank5_Palettes_for_Great_Palace0                                               ;
.byt    $0F,$30,$12,$16,$0F,$07,$27,$37; 0x1401e $800E 0F 30 12 16 0F 07 27 37 ;
.byt    $0F,$27,$16,$0F,$0F,$30,$10,$00; 0x14026 $8016 0F 27 16 0F 0F 30 10 00 ;
.byt    $0F,$30,$12,$16,$0F,$07,$27,$37; 0x1402e $801E 0F 30 12 16 0F 07 27 37 ;
.byt    $0F,$07,$16,$30,$0F,$3C,$1C,$0C; 0x14036 $8026 0F 07 16 30 0F 3C 1C 0C ;
.byt    $0F,$30,$12,$16,$0F,$00,$10,$30; 0x1403e $802E 0F 30 12 16 0F 00 10 30 ;
.byt    $0F,$36,$16,$07,$0F,$23,$03,$0F; 0x14046 $8036 0F 36 16 07 0F 23 03 0F ;
.byt    $0F,$30,$12,$16,$0F,$07,$27,$37; 0x1404e $803E 0F 30 12 16 0F 07 27 37 ;
.byt    $0F,$07,$16,$30,$0F,$23,$13,$03; 0x14056 $8046 0F 07 16 30 0F 23 13 03 ;
.byt    $0F,$30,$12,$16,$0F,$17,$07,$08; 0x1405e $804E 0F 30 12 16 0F 17 07 08 ;
.byt    $0F,$29,$19,$09,$0F,$30,$1C,$0C; 0x14066 $8056 0F 29 19 09 0F 30 1C 0C ;
.byt    $21,$30,$12,$16,$21,$37,$18,$0F; 0x1406e $805E 21 30 12 16 21 37 18 0F ;
.byt    $21,$29,$1C,$0C,$21,$30,$1C,$0C; 0x14076 $8066 21 29 1C 0C 21 30 1C 0C ;
.byt    $03,$30,$12,$16,$03,$19,$09,$0F; 0x1407e $806E 03 30 12 16 03 19 09 0F ;
.byt    $03,$27,$16,$0F,$03,$30,$00,$0F; 0x14086 $8076 03 27 16 0F 03 30 00 0F ;
.byt    $21,$30,$12,$16,$21,$37,$18,$0F; 0x1408e $807E 21 30 12 16 21 37 18 0F ;
.byt    $21,$30,$11,$01,$21,$30,$1C,$0C; 0x14096 $8086 21 30 11 01 21 30 1C 0C ;
.byt    $0F,$30,$12,$16,$0F,$12,$01,$0F; 0x1409e $808E 0F 30 12 16 0F 12 01 0F ;
.byt    $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F; 0x140a6 $8096 0F 0F 0F 0F 0F 0F 0F 0F ;
.byt    $FF,$18,$36,$2A,$FF,$16,$27,$30; 0x140ae $809E FF 18 36 2A FF 16 27 30 ;
.byt    $FF,$06,$16,$30,$FF,$02,$21,$30; 0x140b6 $80A6 FF 06 16 30 FF 02 21 30 ;
.byt    $FF,$18,$36,$2A,$FF,$16,$27,$30; 0x140be $80AE FF 18 36 2A FF 16 27 30 ;
.byt    $FF,$07,$16,$36,$FF,$00,$26,$30; 0x140c6 $80B6 FF 07 16 36 FF 00 26 30 ;
.byt    $FF,$18,$36,$2A,$FF,$16,$27,$30; 0x140ce $80BE FF 18 36 2A FF 16 27 30 ;
.byt    $FF,$04,$14                    ; 0x140d6 $80C6 FF 04 14                ;
L80C9                                                                          ;
.byt    $30,$FF,$28,$08,$30,$FF,$18,$36; 0x140d9 $80C9 30 FF 28 08 30 FF 18 36 ;
.byt    $2A,$FF,$16,$27,$30,$FF,$0F,$0F; 0x140e1 $80D1 2A FF 16 27 30 FF 0F 0F ;
.byt    $0F,$FF,$0F,$0F,$0F,$FF,$01,$21; 0x140e9 $80D9 0F FF 0F 0F 0F FF 01 21 ;
.byt    $11,$FF,$16,$27                ; 0x140f1 $80E1 11 FF 16 27             ;
L80E5                                                                          ;
.byt    $30,$FF,$0F,$0F,$0F,$FF,$0F,$0F; 0x140f5 $80E5 30 FF 0F 0F 0F FF 0F 0F ;
.byt    $0F                            ; 0x140fd $80ED 0F                      ;
; ---------------------------------------------------------------------------- ;
bank5_code0                                                                    ;
txa                                    ; 0x140fe $80EE 8A                      ;
lsr                                    ; 0x140ff $80EF 4A                      ;
lsr                                    ; 0x14100 $80F0 4A                      ;
lsr                                    ; 0x14101 $80F1 4A                      ;
lsr                                    ; 0x14102 $80F2 4A                      ;
tax                                    ; 0x14103 $80F3 AA                      ;
dex                                    ; 0x14104 $80F4 CA                      ;
lda      $0730                         ; 0x14105 $80F5 AD 30 07                ;; Position of Object Placement
and      #$F0                          ; 0x14108 $80F8 29 F0                   ; keep bits xxxx ....
cmp      #$F0                          ; 0x1410a $80FA C9 F0                   ;
bne      L8103                         ; 0x1410c $80FC D0 05                   ;
txa                                    ; 0x1410e $80FE 8A                      ;
clc                                    ; 0x1410f $80FF 18                      ;
adc      #$0F                          ; 0x14110 $8100 69 0F                   ;
tax                                    ; 0x14112 $8102 AA                      ;
L8103                                                                          ;
txa                                    ; 0x14113 $8103 8A                      ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x14114 $8104 20 85 D3;
bank5_Pointer_table_for_Objects_Construction_Routines                          ;
.word    bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x14117 $8107 AD 81;Object 1 high, X wide	(1x)
.word    bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x14119 $8109 AD 81;Object 1 high, X wide	(2x)
.word    bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x1411b $810B AD 81;Object 1 high, X wide	(3x)
.word    bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x1411d $810D AD 81;Object 1 high, X wide	(4x)
.word    bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x1411f $810F AD 81;Object 1 high, X wide	(5x)
.word    bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x14121 $8111 AD 81;Object 1 high, X wide	(6x)
.word    bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x14123 $8113 AD 81;Object 1 high, X wide	(7x)
.word    bank5_Objects_Construction_Routines_2_high__X_wide; 0x14125 $8115 B3 81;Object 2 high, X wide	(8x)
.word    bank5_Objects_Construction_Routines_2_high__X_wide; 0x14127 $8117 B3 81;Object 2 high, X wide	(9x)
.word    bank5_Objects_Construction_Routines_2_high__X_wide; 0x14129 $8119 B3 81;Object 2 high, X wide	(Ax)
.word    bank5_Objects_Construction_Routines_2_high__X_wide; 0x1412b $811B B3 81;Object 2 high, X wide	(Bx)
.word    bank5_Objects_Construction_Routines_2_high__X_wide; 0x1412d $811D B3 81;Object 2 high, X wide	(Cx)
.word    bank5_Objects_Construction_Routines_X_high__1_wide_single_tile_type; 0x1412f $811F D1 81;Object X high, 1 wide, single tile type	(Dx)			
.word    bank5_Objects_Construction_Routines_X_high__1_wide_single_tile_type; 0x14131 $8121 D1 81;Object X high, 1 wide, single tile type	(Ex)
.word    bank5_Objects_Construction_Routines_Object_X_high__1_wide; 0x14133 $8123 D7 81;Object X high, 1 wide	(Fx)					;USE X REGISTER variable as object type
bank5_Special_Objects_Y_Position_F                                             ;
.word    bank5_Objects_Construction_Routines_Object_Lava_Pit__3_high_bottom_of_screen; 0x14135 $8125 1F 82;Lava Pit, 3 high, bottom of screen	(1x)
.word    bank5_Objects_Construction_Routines_Object_Lava_Pit__3_high_bottom_of_screen; 0x14137 $8127 1F 82;Lava Pit, 3 high, bottom of screen	(2x)
.word    bank5_Objects_Construction_Routines_Object_Lava_Pit__3_high_bottom_of_screen; 0x14139 $8129 1F 82;Lava Pit, 3 high, bottom of screen	(3x)
.word    bank5_Objects_Construction_Routines_Object_Lava_Pit__3_high_bottom_of_screen; 0x1413b $812B 1F 82;Lava Pit, 3 high, bottom of screen	(4x)
.word    bank5_Objects_Construction_Routines_Object_Elevator; 0x1413d $812D 4F 82;Elevator				(5x)
; ---------------------------------------------------------------------------- ;
bank5_code1                                                                    ;
txa                                    ; 0x1413f $812F 8A                      ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x14140 $8130 20 85 D3;
bank5_Pointer_table_for_Small_Objects_Construction_Routines                    ;
.word    bank5_Small_Objects_Construction_Routines_Window_2_high; 0x14143 $8133 6A 82;Window, 2 high
.word    bank5_Small_Objects_Construction_Routines_Ra_Statue_facing_right_2_high; 0x14145 $8135 6E 82;Ra Statue, facing right, 2 high
.word    bank5_Small_Objects_Construction_Routines_Mau_Statue_facing_right_2_high; 0x14147 $8137 72 82;Mau Statue, facing right, 2 high
.word    bank5_Small_Objects_Construction_Routines_Mau_Statue_facing_right_2_high; 0x14149 $8139 72 82;Mau Statue, facing right, 2 high
.word    bank5_Small_Objects_Construction_Routines_Mau_Statue_facing_right_2_high; 0x1414b $813B 72 82;Mau Statue, facing right, 2 high
.word    bank5_Small_Objects_Construction_Routines_Locked_Door; 0x1414d $813D 56 82;Locked Door
L8140     = * + $0001                                                          ;
.word    bank5_Small_Objects_Construction_Routines_Pit_extending_to_bottom_1_wide; 0x1414f $813F 8F 82;Pit, extending to bottom, 1 wide
.word    bank5_Small_Objects_Construction_Routines_Cloud__Long; 0x14151 $8141 B1 82;Cloud - Long
.word    bank5_Small_Objects_Construction_Routines_Cloud__Short; 0x14153 $8143 B7 82;Cloud - Short
.word    bank5_Small_Objects_Construction_Routines_Zelda; 0x14155 $8145 9E 82  ;Zelda
.word    bank5_Small_Objects_Construction_Routines_Fokka_Statue; 0x14157 $8147 7E 82;Fokka Statue
L8149                                                                          ;
.word    bank5_Small_Objects_Construction_Routines_Cloud__Short; 0x14159 $8149 B7 82;Cloud - Short
.word    bank5_Small_Objects_Construction_Routines_Cloud__Short; 0x1415b $814B B7 82;Cloud - Short
.word    bank5_Small_Objects_Construction_Routines_Cloud__Short; 0x1415d $814D B7 82;Cloud - Short
.word    bank5_Small_Objects_Construction_Routines_Cloud__Short; 0x1415f $814F B7 82;Cloud - Short
.word    bank5_Small_Objects_Construction_Routines_Cloud__Short; 0x14161 $8151 B7 82;Cloud - Short
; ---------------------------------------------------------------------------- ;
bank5_Tables_for_Level_Layers_Data                                             ;
.byt    $42,$42,$4C,$4C,$42,$42,$4C,$4C; 0x14163 $8153 42 42 4C 4C 42 42 4C 4C ;
.byt    $4C,$40,$40,$4C,$88,$40,$40,$4C; 0x1416b $815B 4C 40 40 4C 88 40 40 4C ;
.byt    $4C,$88,$40,$40                ; 0x14173 $8163 4C 88 40 40             ;
L8167                                                                          ;
.byt    $48,$C5,$40,$40,$48,$48,$C5,$40; 0x14177 $8167 48 C5 40 40 48 48 C5 40 ;
.byt    $40,$4C,$4C,$40,$40,$4C,$4C,$4C; 0x1417f $816F 40 4C 4C 40 40 4C 4C 4C ;
bank5_Table_for_Level_Layers_Data_pointers                                     ;
.byt    $53,$5C,$65,$6E                ; 0x14187 $8177 53 5C 65 6E             ;Pointer created from 81 (14184) and a value from this table
; ---------------------------------------------------------------------------- ;
bank5_Build_a_pointer_with_81_and_a_value_from_14177                           ;
ldx      $010C                         ; 0x1418b $817B AE 0C 01                ;; Area Palette Group (Type of Area)	; Area Ground Type (0-7)
lda      bank5_Table_for_Level_Layers_Data_pointers,x; 0x1418e $817E BD 77 81  ;
sta      $0C                           ; 0x14191 $8181 85 0C                   ;
lda      #$81                          ; 0x14193 $8183 A9 81                   ; A = 81
sta      $0D                           ; 0x14195 $8185 85 0D                   ;
ldy      #$08                          ; 0x14197 $8187 A0 08                   ; Y = 08
lda      ($0C),y                       ; 0x14199 $8189 B1 0C                   ;
sta      $010D                         ; 0x1419b $818B 8D 0D 01                ;; Area Bottom Row Tile Code
rts                                    ; 0x1419e $818E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Tile_Codes_for_Objects_Set_0_Canopy_00                                   ;
.byt    $4D                            ; 0x1419f $818F 4D                      ;Canopy           X REGISTER =  00
L8190                                                                          ;
.byt    $4D                            ; 0x141a0 $8190 4D                      ;
bank5_Tile_Codes_for_Objects_Set_0_Bricks____01                                ;
.byt    $4C,$4C                        ; 0x141a1 $8191 4C 4C                   ;Bricks                         01
bank5_Tile_Codes_for_Objects_Set_0_Breakable_Blocks__02                        ;
.byt    $4E,$4E                        ; 0x141a3 $8193 4E 4E                   ;Breakable Blocks               02
bank5_Tile_Codes_for_Objects_Set_0_Pedestal_Blocks___03                        ;
.byt    $C6,$C6                        ; 0x141a5 $8195 C6 C6                   ;Pedestal Blocks                03
bank5_Tile_Codes_for_Objects_Set_0_North_Castle_Bricks__04                     ;
.byt    $48,$48                        ; 0x141a7 $8197 48 48                   ;North Castle Bricks            04
bank5_Tile_Codes_for_Objects_Set_0_North_Castle_Carpet__05                     ;
.byt    $85,$85                        ; 0x141a9 $8199 85 85                   ;North Castle Carpet            05
bank5_Tile_Codes_for_Objects_Set_0_Breaking_Bridge___06                        ;
.byt    $50,$50                        ; 0x141ab $819B 50 50                   ;Breaking Bridge                06
bank5_Tile_Codes_for_Objects_Set_0_Bridge____07                                ;
.byt    $45,$4F                        ; 0x141ad $819D 45 4F                   ;Bridge                         07
bank5_Tile_Codes_for_Objects_Set_0_Bricks____08                                ;
.byt    $4C,$4C                        ; 0x141af $819F 4C 4C                   ;Bricks                         08
bank5_Tile_Codes_for_Objects_Set_0_Curtains___09                               ;
.byt    $C0,$C1                        ; 0x141b1 $81A1 C0 C1                   ;Curtains                       09
bank5_Tile_Codes_for_Objects_Set_0_False_Bricks_pass_through_0A                ;
.byt    $49,$49                        ; 0x141b3 $81A3 49 49                   ;False Bricks (pass through)    0A
bank5_Tile_Codes_for_Objects_Set_0_Breakable_Blocks__0B                        ;
.byt    $4E,$4E                        ; 0x141b5 $81A5 4E 4E                   ;Breakable Blocks               0B
bank5_Tile_Codes_for_Objects_Set_0_Breakable_Blocks__0C                        ;
.byt    $4E,$4E                        ; 0x141b7 $81A7 4E 4E                   ;Breakable Blocks               0C
bank5_Tile_Codes_for_Objects_Set_0_Electric_Barrier_Background_0D              ;
.byt    $82,$82                        ; 0x141b9 $81A9 82 82                   ;Electric Barrier Background    0D
bank5_Tile_Codes_for_Objects_Set_0_Column____0E                                ;
.byt    $46,$47                        ; 0x141bb $81AB 46 47                   ;Column                         0E
; ---------------------------------------------------------------------------- ;
bank5_Objects_Construction_Routines_Object_1_high__X_wide                      ;
L81AE     = * + $0001                                                          ;
jsr      L8201                         ; 0x141bd $81AD 20 01 82                ;
L81B1     = * + $0001                                                          ;
jmp      L81BE                         ; 0x141c0 $81B0 4C BE 81                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Objects_Construction_Routines_2_high__X_wide                             ;
jsr      bank5_Objects_Construction_Routines_Object_1_high__X_wide; 0x141c3 $81B3 20 AD 81;
lda      L0000                         ; 0x141c6 $81B6 A5 00                   ;
sta      $0112                         ; 0x141c8 $81B8 8D 12 01                ;; Tile Code 0 for Object
jsr      LDF4C                         ; 0x141cb $81BB 20 4C DF                ;
L81BE                                                                          ;
lda      $0731                         ; 0x141ce $81BE AD 31 07                ;; Level Object Type and Size
and      #$0F                          ; 0x141d1 $81C1 29 0F                   ; keep bits .... xxxx
tax                                    ; 0x141d3 $81C3 AA                      ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x141d4 $81C4 20 44 C9          ;
L81C7                                                                          ;
lda      $0112                         ; 0x141d7 $81C7 AD 12 01                ;; Tile Code 0 for Object
jsr      bank7_Set_tile_and_move_right_1_column; 0x141da $81CA 20 E7 DE        ;
dex                                    ; 0x141dd $81CD CA                      ;
bpl      L81C7                         ; 0x141de $81CE 10 F7                   ;
rts                                    ; 0x141e0 $81D0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Objects_Construction_Routines_X_high__1_wide_single_tile_type            ;
jsr      L8201                         ; 0x141e1 $81D1 20 01 82                ;
jmp      L81EE                         ; 0x141e4 $81D4 4C EE 81                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Objects_Construction_Routines_Object_X_high__1_wide                      ;
jsr      L8201                         ; 0x141e7 $81D7 20 01 82                ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x141ea $81DA 20 44 C9          ;
lda      $0112                         ; 0x141ed $81DD AD 12 01                ;; Tile Code 0 for Object
jsr      LDF56                         ; 0x141f0 $81E0 20 56 DF                ;
sta      $0730                         ; 0x141f3 $81E3 8D 30 07                ;; Position of Object Placement
dec      $0731                         ; 0x141f6 $81E6 CE 31 07                ;; Level Object Type and Size
lda      L0000                         ; 0x141f9 $81E9 A5 00                   ;
sta      $0112                         ; 0x141fb $81EB 8D 12 01                ;; Tile Code 0 for Object
L81EE                                                                          ;
lda      $0731                         ; 0x141fe $81EE AD 31 07                ;; Level Object Type and Size
and      #$0F                          ; 0x14201 $81F1 29 0F                   ; keep bits .... xxxx
tax                                    ; 0x14203 $81F3 AA                      ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x14204 $81F4 20 44 C9          ;
L81F7                                                                          ;
lda      $0112                         ; 0x14207 $81F7 AD 12 01                ;; Tile Code 0 for Object
jsr      LDF56                         ; 0x1420a $81FA 20 56 DF                ;
dex                                    ; 0x1420d $81FD CA                      ;
bpl      L81F7                         ; 0x1420e $81FE 10 F7                   ;
rts                                    ; 0x14210 $8200 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8201                                                                          ;
txa                                    ; 0x14211 $8201 8A                      ;
asl                                    ; 0x14212 $8202 0A                      ;
tax                                    ; 0x14213 $8203 AA                      ;
ldy      #$01                          ; 0x14214 $8204 A0 01                   ; Y = 01
L8207     = * + $0001                                                          ;
lda      ($D4),y                       ; 0x14216 $8206 B1 D4                   ;
asl                                    ; 0x14218 $8208 0A                      ;
lda      bank5_Objects_Construction_Routines_Object_1_high__X_wide,x; 0x14219 $8209 BD AD 81; ???
bcs      L8211                         ; 0x1421c $820C B0 03                   ;
lda      bank5_Tile_Codes_for_Objects_Set_0_Canopy_00,x; 0x1421e $820E BD 8F 81;
L8211                                                                          ;
sta      $0112                         ; 0x14221 $8211 8D 12 01                ;; Tile Code 0 for Object
lda      L81AE,x                       ; 0x14224 $8214 BD AE 81                ; ???
bcs      L821C                         ; 0x14227 $8217 B0 03                   ;
lda      L8190,x                       ; 0x14229 $8219 BD 90 81                ;
L821C                                                                          ;
sta      L0000                         ; 0x1422c $821C 85 00                   ;
rts                                    ; 0x1422e $821E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Objects_Construction_Routines_Object_Lava_Pit__3_high_bottom_of_screen   ;
lda      $0730                         ; 0x1422f $821F AD 30 07                ;; Position of Object Placement
and      #$0F                          ; 0x14232 $8222 29 0F                   ; keep bits .... xxxx
ora      #$A0                          ; 0x14234 $8224 09 A0                   ; set  bits x.x. ....
sta      $0730                         ; 0x14236 $8226 8D 30 07                ;; Position of Object Placement
lda      #$83                          ; 0x14239 $8229 A9 83                   ; A = 83
sta      $0112                         ; 0x1423b $822B 8D 12 01                ;; Tile Code 0 for Object
L822E                                                                          ;
lda      $0731                         ; 0x1423e $822E AD 31 07                ;; Level Object Type and Size
and      #$0F                          ; 0x14241 $8231 29 0F                   ; keep bits .... xxxx
tax                                    ; 0x14243 $8233 AA                      ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x14244 $8234 20 44 C9          ;
L8237                                                                          ;
lda      $0112                         ; 0x14247 $8237 AD 12 01                ;; Tile Code 0 for Object
jsr      bank7_Set_tile_and_move_right_1_column; 0x1424a $823A 20 E7 DE        ;
dex                                    ; 0x1424d $823D CA                      ;
bpl      L8237                         ; 0x1424e $823E 10 F7                   ;
lda      #$84                          ; 0x14250 $8240 A9 84                   ; A = 84
sta      $0112                         ; 0x14252 $8242 8D 12 01                ;; Tile Code 0 for Object
jsr      LDF4C                         ; 0x14255 $8245 20 4C DF                ;
and      #$F0                          ; 0x14258 $8248 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x1425a $824A C9 D0                   ;
bcc      L822E                         ; 0x1425c $824C 90 E0                   ;
rts                                    ; 0x1425e $824E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Objects_Construction_Routines_Object_Elevator                            ;
lda      $010A                         ; 0x1425f $824F AD 0A 01                ;
sta      $0757                         ; 0x14262 $8252 8D 57 07                ;; Position of Elevator in Map
rts                                    ; 0x14265 $8255 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Small_Objects_Construction_Routines_Locked_Door                          ;
lda      $010A                         ; 0x14266 $8256 AD 0A 01                ;
sta      $0758                         ; 0x14269 $8259 8D 58 07                ;; Position of Locked Door in Map
rts                                    ; 0x1426c $825C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x1426d $825D 20 44 C9          ;
lda      #$40                          ; 0x14270 $8260 A9 40                   ; A = 40
jsr      LDF56                         ; 0x14272 $8262 20 56 DF                ;
lda      #$40                          ; 0x14275 $8265 A9 40                   ; A = 40
sta      (L000E),y                     ; 0x14277 $8267 91 0E                   ;
rts                                    ; 0x14279 $8269 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Small_Objects_Construction_Routines_Window_2_high                        ;
ldx      #$00                          ; 0x1427a $826A A2 00                   ; X = 00
beq      L8280                         ; 0x1427c $826C F0 12                   ;
bank5_Small_Objects_Construction_Routines_Ra_Statue_facing_right_2_high        ;
ldx      #$01                          ; 0x1427e $826E A2 01                   ; X = 01
bne      L8280                         ; 0x14280 $8270 D0 0E                   ;
bank5_Small_Objects_Construction_Routines_Mau_Statue_facing_right_2_high       ;
ldx      #$02                          ; 0x14282 $8272 A2 02                   ; X = 02
bne      L8280                         ; 0x14284 $8274 D0 0A                   ;
bank5_Tile_Codes_for_Window__Ra_Statue__Mau_Statue__Fokka_Statue               ;
.byt    $80,$44,$43,$4A                ; 0x14286 $8276 80 44 43 4A             ;
L827A                                                                          ;
.byt    $81,$42,$42,$4B                ; 0x1428a $827A 81 42 42 4B             ;
; ---------------------------------------------------------------------------- ;
bank5_Small_Objects_Construction_Routines_Fokka_Statue                         ;
ldx      #$03                          ; 0x1428e $827E A2 03                   ; X = 03
L8280                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x14290 $8280 20 44 C9          ;
lda      bank5_Tile_Codes_for_Window__Ra_Statue__Mau_Statue__Fokka_Statue,x; 0x14293 $8283 BD 76 82;
jsr      LDF56                         ; 0x14296 $8286 20 56 DF                ;
lda      L827A,x                       ; 0x14299 $8289 BD 7A 82                ;
sta      (L000E),y                     ; 0x1429c $828C 91 0E                   ;
rts                                    ; 0x1429e $828E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Small_Objects_Construction_Routines_Pit_extending_to_bottom_1_wide       ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x1429f $828F 20 44 C9          ;
L8292                                                                          ;
lda      #$40                          ; 0x142a2 $8292 A9 40                   ; A = 40
jsr      LDF56                         ; 0x142a4 $8294 20 56 DF                ;
and      #$F0                          ; 0x142a7 $8297 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x142a9 $8299 C9 D0                   ;
bcc      L8292                         ; 0x142ab $829B 90 F5                   ;
rts                                    ; 0x142ad $829D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Small_Objects_Construction_Routines_Zelda                                ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x142ae $829E 20 44 C9          ;
ldx      #$01                          ; 0x142b1 $82A1 A2 01                   ; X = 01
lda      #$86                          ; 0x142b3 $82A3 A9 86                   ; A = 86
jmp      L82AA                         ; 0x142b5 $82A5 4C AA 82                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L82A8                                                                          ;
lda      #$87                          ; 0x142b8 $82A8 A9 87                   ; A = 87
L82AA                                                                          ;
sta      (L000E),y                     ; 0x142ba $82AA 91 0E                   ;
iny                                    ; 0x142bc $82AC C8                      ;
dex                                    ; 0x142bd $82AD CA                      ;
bpl      L82A8                         ; 0x142be $82AE 10 F8                   ;
rts                                    ; 0x142c0 $82B0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Small_Objects_Construction_Routines_Cloud__Long                          ;
ldx      #$00                          ; 0x142c1 $82B1 A2 00                   ; X = 00
beq      L82B9                         ; 0x142c3 $82B3 F0 04                   ;
bank5_Tile_Codes_for_Clouds                                                    ;
.byt    $C3,$C4                        ; 0x142c5 $82B5 C3 C4                   ;
; ---------------------------------------------------------------------------- ;
bank5_Small_Objects_Construction_Routines_Cloud__Short                         ;
ldx      #$01                          ; 0x142c7 $82B7 A2 01                   ; X = 01
L82B9                                                                          ;
jsr      bank7_Set_RAM_Address_for_Object0E0F; 0x142c9 $82B9 20 44 C9          ;
lda      #$C2                          ; 0x142cc $82BC A9 C2                   ; A = C2
sta      (L000E),y                     ; 0x142ce $82BE 91 0E                   ;
iny                                    ; 0x142d0 $82C0 C8                      ;
lda      bank5_Tile_Codes_for_Clouds,x ; 0x142d1 $82C1 BD B5 82                ;
sta      (L000E),y                     ; 0x142d4 $82C4 91 0E                   ;
rts                                    ; 0x142d6 $82C6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Table_0_1_for_Area_Objects_Tile_Mappings                                 ;
.byt    $F4,$F4,$F4,$F4,$F0,$F0,$F1,$F1; 0x142d7 $82C7 F4 F4 F4 F4 F0 F0 F1 F1 ;
.byt    $68,$69,$69,$68,$38,$39,$3A,$3B; 0x142df $82CF 68 69 69 68 38 39 3A 3B ;
.byt    $34,$35,$36,$37,$68,$7C,$69,$7C; 0x142e7 $82D7 34 35 36 37 68 7C 69 7C ;
.byt    $8E,$8F,$90,$91,$A5,$A5,$A6,$A6; 0x142ef $82DF 8E 8F 90 91 A5 A5 A6 A6 ;
.byt    $9A,$9B,$9A,$9B,$64,$65,$65,$64; 0x142f7 $82E7 9A 9B 9A 9B 64 65 65 64 ;
.byt    $40,$41,$42,$43,$48,$49,$4A,$4B; 0x142ff $82EF 40 41 42 43 48 49 4A 4B ;
.byt    $64,$65,$65,$64,$78,$79,$78,$79; 0x14307 $82F7 64 65 65 64 78 79 78 79 ;
.byt    $BA,$BB,$BC,$BD,$7D,$69,$7D,$68; 0x1430f $82FF BA BB BC BD 7D 69 7D 68 ;
.byt    $92,$93,$92,$93                ; 0x14317 $8307 92 93 92 93             ;
bank5_Table_2_for_Area_Objects_Tile_Mappings                                   ;
.byt    $6A,$6C,$6B,$6D,$6C,$6E,$6D,$6F; 0x1431b $830B 6A 6C 6B 6D 6C 6E 6D 6F ;
.byt    $9E,$9F,$9E,$9F,$98,$99,$98,$99; 0x14323 $8313 9E 9F 9E 9F 98 99 98 99 ;
.byt    $FE,$FE,$FE,$FE,$7F,$FE,$7F,$FE; 0x1432b $831B FE FE FE FE 7F FE 7F FE ;
.byt    $02,$06,$03,$06,$04,$06,$05,$06; 0x14333 $8323 02 06 03 06 04 06 05 06 ;
.byt    $63,$63,$63,$63                ; 0x1433b $832B 63 63 63 63             ;
bank5_Table_3_for_Area_Objects_Tile_Mappings                                   ;
.byt    $84,$84,$86,$86,$84,$85,$86,$87; 0x1433f $832F 84 84 86 86 84 85 86 87 ;
.byt    $B3,$B4,$B5,$B6,$B5,$B6,$B7,$B8; 0x14347 $8337 B3 B4 B5 B6 B5 B6 B7 B8 ;
.byt    $B7,$B8,$F4,$F4,$7E,$7E,$7E,$7E; 0x1434f $833F B7 B8 F4 F4 7E 7E 7E 7E ;
.byt    $5C,$5D,$5E,$5F                ; 0x14357 $8347 5C 5D 5E 5F             ;
bank5_table_false_wall_maybe                                                   ;
.byt    $4C,$88,$C5                    ; 0x1435b $834B 4C 88 C5                ;Table for False Wall parameters ? (3 bytes)	;Bank 4 has a similar table, but this one may be used for something else
bank5_Area_Data_Great_Palace0                                                  ;
.byt    $40,$60,$0E,$08,$D6,$08,$50,$01; 0x1435e $834E 40 60 0E 08 D6 08 50 01 ;
.byt    $55,$02,$D1,$0E,$D2,$08,$50,$01; 0x14366 $8356 55 02 D1 0E D2 08 50 01 ;
.byt    $55,$02,$D1,$0E,$D2,$08,$50,$01; 0x1436e $835E 55 02 D1 0E D2 08 50 01 ;
.byt    $55,$02                        ; 0x14376 $8366 55 02                   ;
L8368                                                                          ;
.byt    $D1,$0E,$D2,$08,$50,$01,$55,$02; 0x14378 $8368 D1 0E D2 08 50 01 55 02 ;
.byt    $D1,$0E,$A1,$25,$82,$06,$F0,$50; 0x14380 $8370 D1 0E A1 25 82 06 F0 50 ;
.byt    $81,$06,$D6,$08,$50,$01,$55,$02; 0x14388 $8378 81 06 D6 08 50 01 55 02 ;
.byt    $D1,$0E,$80,$D2,$81,$D2,$D1,$08; 0x14390 $8380 D1 0E 80 D2 81 D2 D1 08 ;
.byt    $50,$01,$55,$02,$D1,$0E        ; 0x14398 $8388 50 01 55 02 D1 0E       ;
L838E                                                                          ;
.byt    $1A,$60,$3E,$C8,$DC,$0C,$D2,$0A; 0x1439e $838E 1A 60 3E C8 DC 0C D2 0A ;
.byt    $D2,$00,$10,$AF,$A0,$4F,$4D,$14; 0x143a6 $8396 D2 00 10 AF A0 4F 4D 14 ;
.byt    $51,$F4,$12                    ; 0x143ae $839E 51 F4 12                ;
L83A1                                                                          ;
.byt    $A2,$A0,$41,$D2,$07,$D1,$0F    ; 0x143b1 $83A1 A2 A0 41 D2 07 D1 0F    ;
L83A8                                                                          ;
.byt    $30,$60,$04,$08,$10,$2F,$24,$F4; 0x143b8 $83A8 30 60 04 08 10 2F 24 F4 ;
.byt    $D4,$03,$24,$F5,$D4,$02,$10,$2F; 0x143c0 $83B0 D4 03 24 F5 D4 02 10 2F ;
.byt    $24,$F6,$D4,$01,$24,$F7,$D4,$08; 0x143c8 $83B8 24 F6 D4 01 24 F7 D4 08 ;
.byt    $D4,$0E,$03,$06,$F0,$50,$B0,$90; 0x143d0 $83C0 D4 0E 03 06 F0 50 B0 90 ;
.byt    $01,$06,$B0,$90,$D4,$08,$D4    ; 0x143d8 $83C8 01 06 B0 90 D4 08 D4    ;
L83CF                                                                          ;
.byt    $01,$10,$2F,$24,$F7,$D4,$02,$24; 0x143df $83CF 01 10 2F 24 F7 D4 02 24 ;
.byt    $F6                            ; 0x143e7 $83D7 F6                      ;
L83D8                                                                          ;
.byt    $2E,$60,$0E,$08,$84,$23,$D4,$08; 0x143e8 $83D8 2E 60 0E 08 84 23 D4 08 ;
.byt    $20,$30,$30,$30,$80,$70,$11,$29; 0x143f0 $83E0 20 30 30 30 80 70 11 29 ;
.byt    $61,$70,$D1,$07,$D8,$08,$F0,$1F; 0x143f8 $83E8 61 70 D1 07 D8 08 F0 1F ;
.byt    $D3,$0E,$D9,$08,$D1,$0E,$F3,$1F; 0x14400 $83F0 D3 0E D9 08 D1 0E F3 1F ;
.byt    $D7,$08,$D1,$0E,$F8,$14,$D1,$08; 0x14408 $83F8 D7 08 D1 0E F8 14 D1 08 ;
.byt    $D4,$07,$10,$27,$D2,$06        ; 0x14410 $8400 D4 07 10 27 D2 06       ;
L8406                                                                          ;
.byt    $2A,$60,$0E                    ; 0x14416 $8406 2A 60 0E                ;
L8409                                                                          ;
.byt    $08,$D2,$00,$74,$31,$44,$31,$90; 0x14419 $8409 08 D2 00 74 31 44 31 90 ;
.byt    $31,$74,$31,$44,$31,$90,$31,$74; 0x14421 $8411 31 74 31 44 31 90 31 74 ;
.byt    $31,$44,$31,$90,$31,$74,$31,$44; 0x14429 $8419 31 44 31 90 31 74 31 44 ;
.byt    $31,$90,$31,$74,$31,$44,$31,$90; 0x14431 $8421 31 90 31 74 31 44 31 90 ;
.byt    $31,$D4,$07,$E3,$00,$DE,$0F    ; 0x14439 $8429 31 D4 07 E3 00 DE 0F    ;
L8430                                                                          ;
.byt    $42,$60,$0D,$08,$D2,$00,$50,$9F; 0x14440 $8430 42 60 0D 08 D2 00 50 9F ;
.byt    $E1,$00,$52,$B3,$D4,$0D,$D6,$0C; 0x14448 $8438 E1 00 52 B3 D4 0D D6 0C ;
.byt    $D2,$0A,$90,$33,$A0,$33,$72,$3F; 0x14450 $8440 D2 0A 90 33 A0 33 72 3F ;
.byt    $80,$31,$D2,$08,$B0,$06,$B1,$06; 0x14458 $8448 80 31 D2 08 B0 06 B1 06 ;
.byt    $B1,$06,$B1,$06,$B1,$06,$B1,$06; 0x14460 $8450 B1 06 B1 06 B1 06 B1 06 ;
.byt    $B1,$06,$B1,$06,$B1,$06,$B1,$06; 0x14468 $8458 B1 06 B1 06 B1 06 B1 06 ;
.byt    $B1,$06,$B1,$06,$D1,$0A,$80,$31; 0x14470 $8460 B1 06 B1 06 D1 0A 80 31 ;
.byt    $90,$33,$A0,$33,$D4,$0C,$D2,$0E; 0x14478 $8468 90 33 A0 33 D4 0C D2 0E ;
L8470                                                                          ;
.byt    $D8,$0F                        ; 0x14480 $8470 D8 0F                   ;
L8472                                                                          ;
.byt    $28,$60,$0E,$08,$E1,$00,$D0,$08; 0x14482 $8472 28 60 0E 08 E1 00 D0 08 ;
.byt    $E2,$00,$D0,$0E,$D2,$0C,$D2,$0A; 0x1448a $847A E2 00 D0 0E D2 0C D2 0A ;
.byt    $90,$99,$D2,$08,$70,$97,$52,$95; 0x14492 $8482 90 99 D2 08 70 97 52 95 ;
.byt    $26,$D8,$21,$D8,$D1,$0E,$A5,$21; 0x1449a $848A 26 D8 21 D8 D1 0E A5 21 ;
.byt    $82,$06,$F0,$50,$81,$06,$D1,$0F; 0x144a2 $8492 82 06 F0 50 81 06 D1 0F ;
L849A                                                                          ;
.byt    $1C,$60,$0F,$08,$E1,$00,$D0,$08; 0x144aa $849A 1C 60 0F 08 E1 00 D0 08 ;
.byt    $7F,$21,$50,$0A,$E2,$00,$D0,$0E; 0x144b2 $84A2 7F 21 50 0A E2 00 D0 0E ;
.byt    $DA,$0F,$70,$BC,$90,$BB,$0D,$06; 0x144ba $84AA DA 0F 70 BC 90 BB 0D 06 ;
.byt    $F0,$50,$01,$06                ; 0x144c2 $84B2 F0 50 01 06             ;
L84B6                                                                          ;
.byt    $0C,$60,$80,$08,$E1,$00,$82,$F2; 0x144c6 $84B6 0C 60 80 08 E1 00 82 F2 ;
.byt    $E2,$00,$7D,$F3                ; 0x144ce $84BE E2 00 7D F3             ;
bank5_UNUSED_84C2                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x144d2 $84C2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0x144da $84CA FF FF FF FF FF FF       ;
bank5_Palettes_for_Great_Palace1                                               ;
.byt    $02,$30,$12,$16,$02,$0F,$28,$38; 0x144e0 $84D0 02 30 12 16 02 0F 28 38 ;
L84D8                                                                          ;
.byt    $02,$27,$17,$0F,$02,$30,$10,$00; 0x144e8 $84D8 02 27 17 0F 02 30 10 00 ;
bank5_UNUSED_84E0                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x144f0 $84E0 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x144f8 $84E8 FF FF FF FF FF FF FF FF ;
bank5_table0                                                                   ;
.byt    $FF,$00,$10,$30                ; 0x14500 $84F0 FF 00 10 30             ;
bank5_UNUSED_84F4                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x14504 $84F4 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF                ; 0x1450c $84FC FF FF FF FF             ;
; ---------------------------------------------------------------------------- ;
bank5_Pointer_table_for_Objects_Tile_Mappings                                  ;
.word    bank5_Table_0_1_for_Area_Objects_Tile_Mappings; 0x14510 $8500 C7 82   ;
.word    bank5_Table_0_1_for_Area_Objects_Tile_Mappings; 0x14512 $8502 C7 82   ;
.word    bank5_Table_2_for_Area_Objects_Tile_Mappings; 0x14514 $8504 0B 83     ;
.word    bank5_Table_3_for_Area_Objects_Tile_Mappings; 0x14516 $8506 2F 83     ;
; ---------------------------------------------------------------------------- ;
bank5_table_unused                                                             ;
.byt    $FF                            ; 0x14518 $8508 FF                      ;
L8509                                                                          ;
.byt    $FF,$FF,$FF                    ; 0x14519 $8509 FF FF FF                ;
; ---------------------------------------------------------------------------- ;
bank5_code3                                                                    ;
pha                                    ; 0x1451c $850C 48                      ;
and      #$C0                          ; 0x1451d $850D 29 C0                   ; keep bits xx.. ....
clc                                    ; 0x1451f $850F 18                      ;
rol                                    ; 0x14520 $8510 2A                      ;
rol                                    ; 0x14521 $8511 2A                      ;
rol                                    ; 0x14522 $8512 2A                      ;
tay                                    ; 0x14523 $8513 A8                      ;
dey                                    ; 0x14524 $8514 88                      ;
pla                                    ; 0x14525 $8515 68                      ;
cmp      bank5_table_false_wall_maybe,y; 0x14526 $8516 D9 4B 83                ;
rts                                    ; 0x14529 $8519 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table1                                                                   ;
.byt    $00                            ; 0x1452a $851A 00                      ;
L851B                                                                          ;
.byt    $00                            ; 0x1452b $851B 00                      ;
L851C                                                                          ;
.byt    $00,$00                        ; 0x1452c $851C 00 00                   ;
L851E                                                                          ;
.byt    $4E                            ; 0x1452e $851E 4E                      ;
L851F                                                                          ;
.byt    $50                            ; 0x1452f $851F 50                      ;
L8520                                                                          ;
.byt    $83                            ; 0x14530 $8520 83                      ;
L8521                                                                          ;
.byt    $00                            ; 0x14531 $8521 00                      ;
L8522                                                                          ;
.byt    $00                            ; 0x14532 $8522 00                      ;
; ---------------------------------------------------------------------------- ;
bank5_Area_Pointers_Great_Palace                                               ;
.word    bank5_Area_Data_Great_Palace1 ; 0x14533 $8523 1F 86                   ;
.word    L8681                         ; 0x14535 $8525 81 86                   ;
.word    L83A8                         ; 0x14537 $8527 A8 83                   ;
.word    L86A9                         ; 0x14539 $8529 A9 86                   ;
.word    L8406                         ; 0x1453b $852B 06 84                   ;
.word    L8681                         ; 0x1453d $852D 81 86                   ;
.word    L83A8                         ; 0x1453f $852F A8 83                   ;
.word    L86A9                         ; 0x14541 $8531 A9 86                   ;
.word    L8AFB                         ; 0x14543 $8533 FB 8A                   ;
.word    L8A0A                         ; 0x14545 $8535 0A 8A                   ;
.word    bank5_Area_Data_Great_Palace0 ; 0x14547 $8537 4E 83                   ;
.word    L8430                         ; 0x14549 $8539 30 84                   ;
.word    L8A0A                         ; 0x1454b $853B 0A 8A                   ;
.word    L8472                         ; 0x1454d $853D 72 84                   ;
.word    L8681                         ; 0x1454f $853F 81 86                   ;
.word    L86DB                         ; 0x14551 $8541 DB 86                   ;
.word    L849A                         ; 0x14553 $8543 9A 84                   ;
.word    L849A                         ; 0x14555 $8545 9A 84                   ;
.word    L849A                         ; 0x14557 $8547 9A 84                   ;
.word    L8B15                         ; 0x14559 $8549 15 8B                   ;
.word    L8AFB                         ; 0x1455b $854B FB 8A                   ;
.word    L8681                         ; 0x1455d $854D 81 86                   ;
.word    L83A8                         ; 0x1455f $854F A8 83                   ;
.word    L8AFB                         ; 0x14561 $8551 FB 8A                   ;
.word    L849A                         ; 0x14563 $8553 9A 84                   ;
.word    L8A0A                         ; 0x14565 $8555 0A 8A                   ;
L8558     = * + $0001                                                          ;
.word    bank5_Area_Data_Great_Palace3 ; 0x14567 $8557 D8 89                   ;
.word    L8A0A                         ; 0x14569 $8559 0A 8A                   ;
.word    bank5_Area_Data_Great_Palace3 ; 0x1456b $855B D8 89                   ;
.word    L8B15                         ; 0x1456d $855D 15 8B                   ;
.word    bank5_Area_Data_Great_Palace3 ; 0x1456f $855F D8 89                   ;
.word    L8B15                         ; 0x14571 $8561 15 8B                   ;
.word    L8472                         ; 0x14573 $8563 72 84                   ;
.word    L849A                         ; 0x14575 $8565 9A 84                   ;
.word    L849A                         ; 0x14577 $8567 9A 84                   ;
.word    L8A0A                         ; 0x14579 $8569 0A 8A                   ;
.word    L84B6                         ; 0x1457b $856B B6 84                   ;
.word    L86A9                         ; 0x1457d $856D A9 86                   ;
.word    L86A9                         ; 0x1457f $856F A9 86                   ;
.word    bank5_Area_Data_Great_Palace3 ; 0x14581 $8571 D8 89                   ;
.word    L8B15                         ; 0x14583 $8573 15 8B                   ;
.word    L8A94                         ; 0x14585 $8575 94 8A                   ;
.word    bank5_Area_Data_Great_Palace2 ; 0x14587 $8577 17 88                   ;
.word    L8A0A                         ; 0x14589 $8579 0A 8A                   ;
.word    L83D8                         ; 0x1458b $857B D8 83                   ;
.word    L8A7E                         ; 0x1458d $857D 7E 8A                   ;
.word    L83A8                         ; 0x1458f $857F A8 83                   ;
.word    L8406                         ; 0x14591 $8581 06 84                   ;
.word    L886F                         ; 0x14593 $8583 6F 88                   ;
.word    L8ADF                         ; 0x14595 $8585 DF 8A                   ;
.word    L86A9                         ; 0x14597 $8587 A9 86                   ;
.word    L8406                         ; 0x14599 $8589 06 84                   ;
.word    L886F                         ; 0x1459b $858B 6F 88                   ;
.word    L8665                         ; 0x1459d $858D 65 86                   ;
.word    L838E                         ; 0x1459f $858F 8E 83                   ;
.word    bank5_Area_Data_Great_Palace1 ; 0x145a1 $8591 1F 86                   ;
.word    bank5_Area_Data_Great_Palace1 ; 0x145a3 $8593 1F 86                   ;
.word    bank5_Area_Data_Great_Palace1 ; 0x145a5 $8595 1F 86                   ;
.word    bank5_Area_Data_Great_Palace1 ; 0x145a7 $8597 1F 86                   ;
.word    bank5_Area_Data_Great_Palace1 ; 0x145a9 $8599 1F 86                   ;
.word    bank5_Area_Data_Great_Palace1 ; 0x145ab $859B 1F 86                   ;
.word    L8A5C                         ; 0x145ad $859D 5C 8A                   ;
.word    L8A78                         ; 0x145af $859F 78 8A                   ;
bank5_Enemy_Pointers_Great_Palace                                              ;
.word    L7001                         ; 0x145b1 $85A1 01 70                   ;Base Offset is 148A0
.word    L7004                         ; 0x145b3 $85A3 04 70                   ;
.word    L700B                         ; 0x145b5 $85A5 0B 70                   ;
.word    L700E                         ; 0x145b7 $85A7 0E 70                   ;
.word    L7013                         ; 0x145b9 $85A9 13 70                   ;
.word    L7018                         ; 0x145bb $85AB 18 70                   ;
.word    L7000                         ; 0x145bd $85AD 00 70                   ;; Enemy Data
.word    L7000                         ; 0x145bf $85AF 00 70                   ;; Enemy Data
.word    L7126                         ; 0x145c1 $85B1 26 71                   ;
.word    L701D                         ; 0x145c3 $85B3 1D 70                   ;
.word    L702A                         ; 0x145c5 $85B5 2A 70                   ;
.word    L7033                         ; 0x145c7 $85B7 33 70                   ;
.word    L7038                         ; 0x145c9 $85B9 38 70                   ;
.word    L703D                         ; 0x145cb $85BB 3D 70                   ;
.word    L7042                         ; 0x145cd $85BD 42 70                   ;
.word    L7129                         ; 0x145cf $85BF 29 71                   ;
.word    L712C                         ; 0x145d1 $85C1 2C 71                   ;
.word    L712F                         ; 0x145d3 $85C3 2F 71                   ;
.word    L7045                         ; 0x145d5 $85C5 45 70                   ;
.word    L7048                         ; 0x145d7 $85C7 48 70                   ;
.word    L7051                         ; 0x145d9 $85C9 51 70                   ;
.word    L7054                         ; 0x145db $85CB 54 70                   ;
.word    L705F                         ; 0x145dd $85CD 5F 70                   ;
.word    L7064                         ; 0x145df $85CF 64 70                   ;
.word    L706F                         ; 0x145e1 $85D1 6F 70                   ;
.word    L7072                         ; 0x145e3 $85D3 72 70                   ;
.word    L7079                         ; 0x145e5 $85D5 79 70                   ;
.word    L7084                         ; 0x145e7 $85D7 84 70                   ;
.word    L708B                         ; 0x145e9 $85D9 8B 70                   ;
.word    L7090                         ; 0x145eb $85DB 90 70                   ;
.word    L7097                         ; 0x145ed $85DD 97 70                   ;
.word    L70A0                         ; 0x145ef $85DF A0 70                   ;
.word    L70A5                         ; 0x145f1 $85E1 A5 70                   ;
.word    L7135                         ; 0x145f3 $85E3 35 71                   ;
.word    L70AA                         ; 0x145f5 $85E5 AA 70                   ;
.word    L70AD                         ; 0x145f7 $85E7 AD 70                   ;
.word    L70BA                         ; 0x145f9 $85E9 BA 70                   ;
.word    L70BF                         ; 0x145fb $85EB BF 70                   ;
.word    L70C2                         ; 0x145fd $85ED C2 70                   ;
.word    L70C5                         ; 0x145ff $85EF C5 70                   ;
.word    L70CE                         ; 0x14601 $85F1 CE 70                   ;
.word    L70D9                         ; 0x14603 $85F3 D9 70                   ;
.word    L70E0                         ; 0x14605 $85F5 E0 70                   ;
.word    L70ED                         ; 0x14607 $85F7 ED 70                   ;
.word    L7132                         ; 0x14609 $85F9 32 71                   ;
.word    L70F4                         ; 0x1460b $85FB F4 70                   ;
.word    L70F9                         ; 0x1460d $85FD F9 70                   ;
.word    L70FE                         ; 0x1460f $85FF FE 70                   ;
.word    L7103                         ; 0x14611 $8601 03 71                   ;
.word    L7106                         ; 0x14613 $8603 06 71                   ;
.word    L710F                         ; 0x14615 $8605 0F 71                   ;
.word    L7114                         ; 0x14617 $8607 14 71                   ;
.word    L711B                         ; 0x14619 $8609 1B 71                   ;
.word    L7120                         ; 0x1461b $860B 20 71                   ;
.word    L7123                         ; 0x1461d $860D 23 71                   ;
.word    L7000                         ; 0x1461f $860F 00 70                   ;; Enemy Data
.word    L7000                         ; 0x14621 $8611 00 70                   ;; Enemy Data
.word    L7000                         ; 0x14623 $8613 00 70                   ;; Enemy Data
.word    L7000                         ; 0x14625 $8615 00 70                   ;; Enemy Data
.word    L7000                         ; 0x14627 $8617 00 70                   ;; Enemy Data
.word    L7000                         ; 0x14629 $8619 00 70                   ;; Enemy Data
.word    L7000                         ; 0x1462b $861B 00 70                   ;; Enemy Data
.word    L7000                         ; 0x1462d $861D 00 70                   ;; Enemy Data
; ---------------------------------------------------------------------------- ;
bank5_Area_Data_Great_Palace1                                                  ;
.byt    $46,$60,$90,$40,$32,$07,$A4,$21; 0x1462f $861F 46 60 90 40 32 07 A4 21 ;
.byt    $50,$08,$92,$9F,$82,$40,$82,$40; 0x14637 $8627 50 08 92 9F 82 40 82 40 ;
.byt    $82,$40,$D2,$00,$D1,$08,$20,$E6; 0x1463f $862F 82 40 D2 00 D1 08 20 E6 ;
.byt    $21,$E6,$21,$E6,$21,$E6,$21,$E6; 0x14647 $8637 21 E6 21 E6 21 E6 21 E6 ;
.byt    $21,$E6,$22,$F6,$90,$9F,$23,$F6; 0x1464f $863F 21 E6 22 F6 90 9F 23 F6 ;
L8647                                                                          ;
.byt    $23,$F6,$23,$F6,$23,$F6,$23,$F6; 0x14657 $8647 23 F6 23 F6 23 F6 23 F6 ;
.byt    $91,$9C,$22,$F6,$23,$F6,$23,$F6; 0x1465f $864F 91 9C 22 F6 23 F6 23 F6 ;
.byt    $D5,$0D,$A0,$2A,$D2,$0E,$80,$06; 0x14667 $8657 D5 0D A0 2A D2 0E 80 06 ;
.byt    $F0,$50,$81,$06,$81,$96        ; 0x1466f $865F F0 50 81 06 81 96       ;
L8665                                                                          ;
.byt    $1C,$60,$0E,$08,$D8,$80,$63,$F4; 0x14675 $8665 1C 60 0E 08 D8 80 63 F4 ;
.byt    $62,$F4,$62,$F4,$62,$F4,$A3,$47; 0x1467d $866D 62 F4 62 F4 62 F4 A3 47 ;
.byt    $92,$43,$68,$F4,$62,$F4,$62,$F4; 0x14685 $8675 92 43 68 F4 62 F4 62 F4 ;
.byt    $62,$F4,$D4,$0E                ; 0x1468d $867D 62 F4 D4 0E             ;
L8681                                                                          ;
.byt    $28,$60,$0F,$08,$D2,$08,$80,$92; 0x14691 $8681 28 60 0F 08 D2 08 80 92 ;
.byt    $A0,$28,$65,$9F,$80,$06,$F0,$50; 0x14699 $8689 A0 28 65 9F 80 06 F0 50 ;
.byt    $81,$06,$81,$91,$6E,$96,$67,$B1; 0x146a1 $8691 81 06 81 91 6E 96 67 B1 ;
.byt    $62,$9F,$80,$F2,$E3,$00,$70,$31; 0x146a9 $8699 62 9F 80 F2 E3 00 70 31 ;
.byt    $80,$33,$90,$35,$A0,$37,$DE,$0E; 0x146b1 $86A1 80 33 90 35 A0 37 DE 0E ;
L86A9                                                                          ;
.byt    $32,$60,$0A,$08,$80,$23,$90,$93; 0x146b9 $86A9 32 60 0A 08 80 23 90 93 ;
.byt    $D4,$00,$70,$8F,$F0,$1F,$16,$2B; 0x146c1 $86B1 D4 00 70 8F F0 1F 16 2B ;
.byt    $22,$97,$42,$93,$76,$8F,$F0,$1F; 0x146c9 $86B9 22 97 42 93 76 8F F0 1F ;
.byt    $16,$2B,$22,$97,$42,$93,$86,$27; 0x146d1 $86C1 16 2B 22 97 42 93 86 27 ;
.byt    $90,$97,$16,$2B,$22,$97,$70,$8F; 0x146d9 $86C9 90 97 16 2B 22 97 70 8F ;
.byt    $F0,$1F,$42,$93,$DE,$0A,$80,$23; 0x146e1 $86D1 F0 1F 42 93 DE 0A 80 23 ;
.byt    $90,$93                        ; 0x146e9 $86D9 90 93                   ;
L86DB                                                                          ;
.byt    $2A,$60,$07,$08,$D4,$00,$30,$7B; 0x146eb $86DB 2A 60 07 08 D4 00 30 7B ;
.byt    $F0,$1F,$5C,$77,$F4,$1F,$74,$77; 0x146f3 $86E3 F0 1F 5C 77 F4 1F 74 77 ;
.byt    $98,$77,$F4,$15,$D6,$03,$D2,$05; 0x146fb $86EB 98 77 F4 15 D6 03 D2 05 ;
.byt    $D2,$07,$D2,$00,$D2,$0E,$05,$06; 0x14703 $86F3 D2 07 D2 00 D2 0E 05 06 ;
.byt    $B0,$90,$F0,$50,$01,$06,$B0,$90; 0x1470b $86FB B0 90 F0 50 01 06 B0 90 ;
.byt    $D1,$0F                        ; 0x14713 $8703 D1 0F                   ;
bank5_UNUSED_8705                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x14715 $8705 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1471d $870D FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0x14725 $8715 FF FF FF FF FF FF       ;
bank5_Room_Connectivity_Data                                                   ;
.byt    $FC,$0A,$00,$FC,$FC,$1A,$00,$08; 0x1472b $871B FC 0A 00 FC FC 1A 00 08 ;
.byt    $07,$00,$03,$0C,$0B,$00,$00,$10; 0x14733 $8723 07 00 03 0C 0B 00 00 10 ;
.byt    $0F,$00,$00,$FC,$FC,$24,$00,$18; 0x1473b $872B 0F 00 00 FC FC 24 00 18 ;
.byt    $17,$00,$04,$1C,$1B,$00,$00,$20; 0x14743 $8733 17 00 04 1C 1B 00 00 20 ;
.byt    $1F,$30,$00,$FC,$FC,$00,$14,$28; 0x1474b $873B 1F 30 00 FC FC 00 14 28 ;
.byt    $27,$3F,$00,$2C,$2B,$00,$92,$FC; 0x14753 $8743 27 3F 00 2C 2B 00 92 FC ;
.byt    $FC,$00,$23,$34,$33,$43,$00,$FC; 0x1475b $874B FC 00 23 34 33 43 00 FC ;
.byt    $FC,$47,$00,$3C,$3B,$00,$2A,$FC; 0x14763 $8753 FC 47 00 3C 3B 00 2A FC ;
.byt    $FC,$4B,$37,$FC,$FC,$4C,$38,$FC; 0x1476b $875B FC 4B 37 FC FC 4C 38 FC ;
.byt    $FC,$5A,$43,$FC,$FC,$00,$47,$50; 0x14773 $8763 FC 5A 43 FC FC 00 47 50 ;
.byt    $4F,$63,$12,$FC,$FC,$64,$00,$58; 0x1477b $876B 4F 63 12 FC FC 64 00 58 ;
.byt    $57,$00,$4B,$5C,$5B,$6C,$00,$FC; 0x14783 $8773 57 00 4B 5C 5B 6C 00 FC ;
.byt    $FC,$8C,$53,$FC,$FC,$00,$54,$68; 0x1478b $877B FC 8C 53 FC FC 00 54 68 ;
.byt    $67,$74,$00,$FC,$FC,$00,$5F,$70; 0x14793 $8783 67 74 00 FC FC 00 5F 70 ;
.byt    $6F,$7C,$00,$FC,$FC,$00,$6B,$78; 0x1479b $878B 6F 7C 00 FC FC 00 6B 78 ;
.byt    $77,$87,$00,$FC,$FC,$00,$73,$80; 0x147a3 $8793 77 87 00 FC FC 00 73 80 ;
L879B                                                                          ;
.byt    $7F,$8B,$00,$FC,$FC,$A0,$7B,$FC; 0x147ab $879B 7F 8B 00 FC FC A0 7B FC ;
.byt    $FC,$AA,$83,$FC,$FC,$00,$63,$90; 0x147b3 $87A3 FC AA 83 FC FC 00 63 90 ;
.byt    $8F,$00,$00,$94,$93,$00,$00,$98; 0x147bb $87AB 8F 00 00 94 93 00 00 98 ;
.byt    $97,$00,$00,$9C,$9B,$AC,$00,$FC; 0x147c3 $87B3 97 00 00 9C 9B AC 00 FC ;
.byt    $FC,$00,$87,$A4,$A3,$00,$B6,$A8; 0x147cb $87BB FC 00 87 A4 A3 00 B6 A8 ;
.byt    $A7,$BA,$8B,$FC,$FC,$00,$9F,$B0; 0x147d3 $87C3 A7 BA 8B FC FC 00 9F B0 ;
.byt    $AF,$00,$00,$B4,$B3,$00,$C2,$B8; 0x147db $87CB AF 00 00 B4 B3 00 C2 B8 ;
.byt    $B7,$00,$AA,$BC,$BB,$00,$00,$FC; 0x147e3 $87D3 B7 00 AA BC BB 00 00 FC ;
.byt    $FC,$00,$00,$C4,$C3,$00,$D2,$C8; 0x147eb $87DB FC 00 00 C4 C3 00 D2 C8 ;
.byt    $C7,$00,$00,$CC,$CB,$00,$00,$FC; 0x147f3 $87E3 C7 00 00 CC CB 00 00 FC ;
.byt    $FC,$00,$00,$D4,$D3,$00,$00,$D8; 0x147fb $87EB FC 00 00 D4 D3 00 00 D8 ;
L87F3                                                                          ;
.byt    $D7,$00,$00,$FC,$FC,$00,$00,$FC; 0x14803 $87F3 D7 00 00 FC FC 00 00 FC ;
.byt    $FC,$00,$00,$FC,$FC,$00,$00,$FC; 0x1480b $87FB FC 00 00 FC FC 00 00 FC ;
.byt    $FC,$00,$00,$FC,$FC,$00,$00,$FC; 0x14813 $8803 FC 00 00 FC FC 00 00 FC ;
.byt    $FC,$00,$00,$FC,$FC,$00,$00,$FC; 0x1481b $880B FC 00 00 FC FC 00 00 FC ;
.byt    $FC,$00,$00,$FC                ; 0x14823 $8813 FC 00 00 FC             ;
bank5_Area_Data_Great_Palace2                                                  ;
.byt    $58,$60,$0A,$08,$70,$93,$90,$93; 0x14827 $8817 58 60 0A 08 70 93 90 93 ;
.byt    $D2,$08,$F2,$11,$72,$91,$90,$91; 0x1482f $881F D2 08 F2 11 72 91 90 91 ;
.byt    $F2,$11,$72,$91,$90,$91,$F2,$11; 0x14837 $8827 F2 11 72 91 90 91 F2 11 ;
.byt    $72,$91,$90,$91,$F2,$11,$72,$91; 0x1483f $882F 72 91 90 91 F2 11 72 91 ;
.byt    $90,$91,$F2,$11,$82,$21,$90,$91; 0x14847 $8837 90 91 F2 11 82 21 90 91 ;
.byt    $F2,$11,$82,$21,$90,$91,$F2,$11; 0x1484f $883F F2 11 82 21 90 91 F2 11 ;
.byt    $92,$91,$F2,$11,$A2,$2B,$D2,$0E; 0x14857 $8847 92 91 F2 11 A2 2B D2 0E ;
.byt    $03,$06,$F0,$50,$01,$06,$D4,$08; 0x1485f $884F 03 06 F0 50 01 06 D4 08 ;
.byt    $82,$31,$90,$31,$F0,$1F,$62,$31; 0x14867 $8857 82 31 90 31 F0 1F 62 31 ;
.byt    $70,$31,$42,$3B,$50,$3B,$68,$33; 0x1486f $885F 70 31 42 3B 50 3B 68 33 ;
.byt    $70,$31,$80,$31,$90,$33,$D4,$0F; 0x14877 $8867 70 31 80 31 90 33 D4 0F ;
L886F                                                                          ;
.byt    $22,$60,$0F,$08,$D2,$08,$82,$37; 0x1487f $886F 22 60 0F 08 D2 08 82 37 ;
.byt    $93,$D1,$91,$D1,$64,$37,$73,$D3; 0x14887 $8877 93 D1 91 D1 64 37 73 D3 ;
.byt    $71,$D3,$44,$37,$53,$D5,$51,$D5; 0x1488f $887F 71 D3 44 37 53 D5 51 D5 ;
.byt    $D4,$0E,$D6,$88,$DC,$0E,$D6,$08; 0x14897 $8887 D4 0E D6 88 DC 0E D6 08 ;
.byt    $D8,$0E                        ; 0x1489f $888F D8 0E                   ;
bank5_UNUSED_8891                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x148a1 $8891 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF    ; 0x148a9 $8899 FF FF FF FF FF FF FF    ;
bank5_Enemy_Data_Great_Palace                                                  ;
.byt    $01,$03,$01,$60,$07,$7A,$44,$7D; 0x148b0 $88A0 01 03 01 60 07 7A 44 7D ;
.byt    $44,$7F,$44,$03,$4D,$1D,$05,$0F; 0x148b8 $88A8 44 7F 44 03 4D 1D 05 0F ;
.byt    $0F,$00,$CF,$05,$5B,$5D,$1B,$D5; 0x148c0 $88B0 0F 00 CF 05 5B 5D 1B D5 ;
.byt    $05,$0B,$56,$04,$96,$0D,$65,$51; 0x148c8 $88B8 05 0B 56 04 96 0D 65 51 ;
.byt    $77,$51,$79,$51,$70,$D1,$72,$D1; 0x148d0 $88C0 77 51 79 51 70 D1 72 D1 ;
.byt    $64,$D1,$09,$20,$54,$28,$54,$3E; 0x148d8 $88C8 64 D1 09 20 54 28 54 3E ;
.byt    $45,$22,$D4,$05,$21,$5D,$38,$9D; 0x148e0 $88D0 45 22 D4 05 21 5D 38 9D ;
.byt    $05,$0B,$56,$04,$96,$05,$78,$59; 0x148e8 $88D8 05 0B 56 04 96 05 78 59 ;
.byt    $47,$84,$03,$19,$5D,$03,$12,$57; 0x148f0 $88E0 47 84 03 19 5D 03 12 57 ;
.byt    $09,$0B,$56,$71,$83,$74,$83,$04; 0x148f8 $88E8 09 0B 56 71 83 74 83 04 ;
.byt    $96,$03,$35,$D9,$0B,$77,$51,$38; 0x14900 $88F0 96 03 35 D9 0B 77 51 38 ;
.byt    $51,$73,$91,$52,$D1,$76,$D1,$05; 0x14908 $88F8 51 73 91 52 D1 76 D1 05 ;
.byt    $4D,$1D,$5A,$DD,$0B,$7E,$11,$7A; 0x14910 $8900 4D 1D 5A DD 0B 7E 11 7A ;
.byt    $51,$0B,$56,$04,$96,$35,$C5,$03; 0x14918 $8908 51 0B 56 04 96 35 C5 03 ;
.byt    $47,$40,$07,$65,$44,$79,$44,$75; 0x14920 $8910 47 40 07 65 44 79 44 75 ;
.byt    $9A,$0B,$5D,$03,$51,$43,$55,$43; 0x14928 $8918 9A 0B 5D 03 51 43 55 43 ;
.byt    $5A,$84,$5D,$84,$07,$65,$44,$79; 0x14930 $8920 5A 84 5D 84 07 65 44 79 ;
.byt    $44,$75,$9A,$05,$5E,$11,$79,$95; 0x14938 $8928 44 75 9A 05 5E 11 79 95 ;
.byt    $07,$18,$54,$74,$9D,$10,$D4,$09; 0x14940 $8930 07 18 54 74 9D 10 D4 09 ;
.byt    $7C,$15,$77,$55,$52,$84,$5A,$84; 0x14948 $8938 7C 15 77 55 52 84 5A 84 ;
.byt    $05,$14,$97,$7C,$9D,$05,$78,$5A; 0x14950 $8940 05 14 97 7C 9D 05 78 5A ;
.byt    $18,$97,$03,$3F,$45,$0D,$72,$11; 0x14958 $8948 18 97 03 3F 45 0D 72 11 ;
.byt    $7D,$11,$65,$54,$32,$C5,$64,$D4; 0x14960 $8950 7D 11 65 54 32 C5 64 D4 ;
.byt    $19,$D1,$05,$0B,$56,$04,$96,$03; 0x14968 $8958 19 D1 05 0B 56 04 96 03 ;
.byt    $07,$5E,$03,$4C,$59,$09,$0B,$56; 0x14970 $8960 07 5E 03 4C 59 09 0B 56 ;
.byt    $52,$84,$04,$96,$5A,$84,$0B,$7A; 0x14978 $8968 52 84 04 96 5A 84 0B 7A ;
.byt    $43,$0B,$56,$7E,$43,$72,$83,$04; 0x14980 $8970 43 0B 56 7E 43 72 83 04 ;
.byt    $96,$07,$28,$19,$3D,$04,$36,$44; 0x14988 $8978 96 07 28 19 3D 04 36 44 ;
.byt    $0D,$47,$04,$4B,$04,$42,$44,$57; 0x14990 $8980 0D 47 04 4B 04 42 44 57 ;
.byt    $44,$6F,$44,$6C,$C0,$07,$65,$43; 0x14998 $8988 44 6F 44 6C C0 07 65 43 ;
.byt    $70,$9A,$64,$C3,$05,$0B,$56,$04; 0x149a0 $8990 70 9A 64 C3 05 0B 56 04 ;
.byt    $96,$05,$4A,$1D,$61,$44,$05,$5B; 0x149a8 $8998 96 05 4A 1D 61 44 05 5B ;
L89A0                                                                          ;
.byt    $5A,$1A,$D5,$03,$17,$DE,$09,$6C; 0x149b0 $89A0 5A 1A D5 03 17 DE 09 6C ;
.byt    $15,$2C,$43,$21,$83,$63,$D5,$05; 0x149b8 $89A8 15 2C 43 21 83 63 D5 05 ;
.byt    $0F,$0F,$00,$CF,$07,$2F,$57,$43; 0x149c0 $89B0 0F 0F 00 CF 07 2F 57 43 ;
.byt    $97,$0C,$C0,$05,$77,$05,$77,$45; 0x149c8 $89B8 97 0C C0 05 77 05 77 45 ;
.byt    $03,$21,$A2,$03,$1D,$63,$03,$71; 0x149d0 $89C0 03 21 A2 03 1D 63 03 71 ;
.byt    $DD,$03,$70,$D1,$03,$3F,$45,$03; 0x149d8 $89C8 DD 03 70 D1 03 3F 45 03 ;
.byt    $3F,$45,$03,$18,$05,$03,$3F,$45; 0x149e0 $89D0 3F 45 03 18 05 03 3F 45 ;
bank5_Area_Data_Great_Palace3                                                  ;
.byt    $32,$60,$0B,$08,$80,$27,$90,$97; 0x149e8 $89D8 32 60 0B 08 80 27 90 97 ;
.byt    $D4,$09,$D4,$08,$80,$7E,$F0,$1F; 0x149f0 $89E0 D4 09 D4 08 80 7E F0 1F ;
.byt    $8F,$72,$F1,$11,$22,$2B,$80,$2B; 0x149f8 $89E8 8F 72 F1 11 22 2B 80 2B ;
.byt    $90,$9B,$34,$23,$F8,$19,$82,$29; 0x14a00 $89F0 90 9B 34 23 F8 19 82 29 ;
.byt    $D8,$09,$90,$91,$D2,$0B,$A0,$24; 0x14a08 $89F8 D8 09 90 91 D2 0B A0 24 ;
.byt    $D2,$0E,$83,$06,$F0,$50,$81,$06; 0x14a10 $8A00 D2 0E 83 06 F0 50 81 06 ;
.byt    $D1,$0F                        ; 0x14a18 $8A08 D1 0F                   ;
L8A0A                                                                          ;
.byt    $52,$60,$0F,$08,$D2,$0E,$05,$06; 0x14a1a $8A0A 52 60 0F 08 D2 0E 05 06 ;
.byt    $B0,$90,$F0,$50,$01,$06,$B0,$90; 0x14a22 $8A12 B0 90 F0 50 01 06 B0 90 ;
.byt    $D4,$08,$43,$00,$25,$D8,$31,$30; 0x14a2a $8A1A D4 08 43 00 25 D8 31 30 ;
.byt    $60,$30,$90,$30,$21,$D8,$21,$30; 0x14a32 $8A22 60 30 90 30 21 D8 21 30 ;
.byt    $50,$30,$80,$30,$21,$D8,$41,$30; 0x14a3a $8A2A 50 30 80 30 21 D8 41 30 ;
.byt    $70,$30,$A0,$30,$21,$D8,$46,$00; 0x14a42 $8A32 70 30 A0 30 21 D8 46 00 ;
.byt    $44,$00,$44,$00,$27,$D8,$41,$30; 0x14a4a $8A3A 44 00 44 00 27 D8 41 30 ;
.byt    $70,$30,$A0,$30,$21,$D8,$21,$30; 0x14a52 $8A42 70 30 A0 30 21 D8 21 30 ;
.byt    $50,$30,$80,$30,$21,$D8,$31,$30; 0x14a5a $8A4A 50 30 80 30 21 D8 31 30 ;
.byt    $60,$30,$90,$30,$21,$D8,$45,$00; 0x14a62 $8A52 60 30 90 30 21 D8 45 00 ;
.byt    $D4,$0E                        ; 0x14a6a $8A5A D4 0E                   ;
L8A5C                                                                          ;
.byt    $1C,$00,$28,$50,$20,$AF,$A0,$5F; 0x14a6c $8A5C 1C 00 28 50 20 AF A0 5F ;
.byt    $21,$F7,$91,$5B,$81,$59,$A0,$69; 0x14a74 $8A64 21 F7 91 5B 81 59 A0 69 ;
.byt    $21,$F5,$90,$67,$81,$65,$72,$09; 0x14a7c $8A6C 21 F5 90 67 81 65 72 09 ;
.byt    $24,$F5,$23,$F7                ; 0x14a84 $8A74 24 F5 23 F7             ;
L8A78                                                                          ;
.byt    $06,$00,$28,$50,$20,$AF        ; 0x14a88 $8A78 06 00 28 50 20 AF       ;
L8A7E                                                                          ;
.byt    $16,$60,$05,$08,$10,$23,$D4,$08; 0x14a8e $8A7E 16 60 05 08 10 23 D4 08 ;
.byt    $60,$9E,$6F,$9F,$DD,$80,$A0,$3F; 0x14a96 $8A86 60 9E 6F 9F DD 80 A0 3F ;
.byt    $63,$9C,$B1,$B1,$DC,$0E        ; 0x14a9e $8A8E 63 9C B1 B1 DC 0E       ;
L8A94                                                                          ;
.byt    $4B,$60,$0E,$08,$D4,$08,$60,$9B; 0x14aa4 $8A94 4B 60 0E 08 D4 08 60 9B ;
.byt    $42,$00,$44,$00                ; 0x14aac $8A9C 42 00 44 00             ;
L8AA0                                                                          ;
.byt    $44,$00,$62,$B3,$42,$00,$62,$C9; 0x14ab0 $8AA0 44 00 62 B3 42 00 62 C9 ;
.byt    $42,$00,$44,$00,$92,$95,$42,$00; 0x14ab8 $8AA8 42 00 44 00 92 95 42 00 ;
.byt    $60,$93,$80,$23,$64,$B3,$40,$00; 0x14ac0 $8AB0 60 93 80 23 64 B3 40 00 ;
.byt    $B0,$06,$B1,$06,$B1,$06,$B1,$06; 0x14ac8 $8AB8 B0 06 B1 06 B1 06 B1 06 ;
.byt    $41,$00,$60,$C7,$B0,$06,$B1,$06; 0x14ad0 $8AC0 41 00 60 C7 B0 06 B1 06 ;
.byt    $B1,$06,$B1,$06,$41,$00,$B0,$06; 0x14ad8 $8AC8 B1 06 B1 06 41 00 B0 06 ;
.byt    $B1,$06,$B1,$06,$B1,$06,$D1,$0F; 0x14ae0 $8AD0 B1 06 B1 06 B1 06 D1 0F ;
.byt    $D4,$08,$92,$0F,$12,$D8,$0E    ; 0x14ae8 $8AD8 D4 08 92 0F 12 D8 0E    ;
L8ADF                                                                          ;
.byt    $1C,$60,$86,$08,$D6,$80,$50,$7E; 0x14aef $8ADF 1C 60 86 08 D6 80 50 7E ;
.byt    $F0,$1F,$5F,$7F,$F1,$1E,$5F,$7F; 0x14af7 $8AE7 F0 1F 5F 7F F1 1E 5F 7F ;
.byt    $90,$92,$91,$06,$F2,$1F,$5D,$74; 0x14aff $8AEF 90 92 91 06 F2 1F 5D 74 ;
.byt    $F3,$11,$D2,$86                ; 0x14b07 $8AF7 F3 11 D2 86             ;
L8AFB                                                                          ;
.byt    $1A,$60,$80,$08,$7B,$F3,$7C,$F3; 0x14b0b $8AFB 1A 60 80 08 7B F3 7C F3 ;
.byt    $E3,$00,$A4,$22,$51,$0A,$70,$20; 0x14b13 $8B03 E3 00 A4 22 51 0A 70 20 ;
.byt    $D1,$0E,$81,$06,$F0,$50,$81,$06; 0x14b1b $8B0B D1 0E 81 06 F0 50 81 06 ;
.byt    $D1,$0F                        ; 0x14b23 $8B13 D1 0F                   ;
L8B15                                                                          ;
.byt    $1C,$60,$0F,$08,$D2,$0E,$05,$06; 0x14b25 $8B15 1C 60 0F 08 D2 0E 05 06 ;
.byt    $B0,$90,$F0,$50,$01,$06,$B0,$90; 0x14b2d $8B1D B0 90 F0 50 01 06 B0 90 ;
.byt    $D8,$00,$10,$AF,$E2,$00,$10,$AF; 0x14b35 $8B25 D8 00 10 AF E2 00 10 AF ;
.byt    $E3,$00,$10,$AF                ; 0x14b3d $8B2D E3 00 10 AF             ;
bank5_UNUSED_8B31                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x14b41 $8B31 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x14b49 $8B39 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x14b51 $8B41 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF    ; 0x14b59 $8B49 FF FF FF FF FF FF FF    ;
; ---------------------------------------------------------------------------- ;
bank5_routines_related_to_Ending_sequence                                      ;
lda      #$05                          ; 0x14b60 $8B50 A9 05                   ; A = 05
sta      $0769                         ; 0x14b62 $8B52 8D 69 07                ; Bank to switch to
lda      #$05                          ; 0x14b65 $8B55 A9 05                   ; A = 05
sta      $0707                         ; 0x14b67 $8B57 8D 07 07                ; Current World
lda      #$3E                          ; 0x14b6a $8B5A A9 3E                   ; A = 3E
ldy      $0761                         ; 0x14b6c $8B5C AC 61 07                ;
bne      L8B63                         ; 0x14b6f $8B5F D0 02                   ;
lda      #$3D                          ; 0x14b71 $8B61 A9 3D                   ; A = 3D
L8B63                                                                          ;
sta      $0561                         ; 0x14b73 $8B63 8D 61 05                ; Area Code
jmp      LC722                         ; 0x14b76 $8B66 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8B69                                                                          ;
ldy      $0761                         ; 0x14b79 $8B69 AC 61 07                ;
bne      L8B77                         ; 0x14b7c $8B6C D0 09                   ;
ldx      #$04                          ; 0x14b7e $8B6E A2 04                   ; X = 04
stx      $EB                           ; 0x14b80 $8B70 86 EB                   ; Music
lda      #$06                          ; 0x14b82 $8B72 A9 06                   ; A = 06
sta      $0707                         ; 0x14b84 $8B74 8D 07 07                ; Current World
L8B77                                                                          ;
lda      $2002                         ; 0x14b87 $8B77 AD 02 20                ;
lda      $FF                           ; 0x14b8a $8B7A A5 FF                   ;; Sprite Bank ?
and      #$FB                          ; 0x14b8c $8B7C 29 FB                   ; keep bits xxxx x.xx
sta      $2000                         ; 0x14b8e $8B7E 8D 00 20                ;
lda      #$20                          ; 0x14b91 $8B81 A9 20                   ; A = 20
sta      $2006                         ; 0x14b93 $8B83 8D 06 20                ;
lda      #$00                          ; 0x14b96 $8B86 A9 00                   ; A = 00
sta      $2006                         ; 0x14b98 $8B88 8D 06 20                ;
ldy      #$03                          ; 0x14b9b $8B8B A0 03                   ; Y = 03
lda      #$9A                          ; 0x14b9d $8B8D A9 9A                   ; A = 9A
L8B8F                                                                          ;
ldx      #$20                          ; 0x14b9f $8B8F A2 20                   ; X = 20
L8B91                                                                          ;
sta      $2007                         ; 0x14ba1 $8B91 8D 07 20                ;
dex                                    ; 0x14ba4 $8B94 CA                      ;
bne      L8B91                         ; 0x14ba5 $8B95 D0 FA                   ;
eor      #$01                          ; 0x14ba7 $8B97 49 01                   ; flip bits .... ...x
dey                                    ; 0x14ba9 $8B99 88                      ;
bpl      L8B8F                         ; 0x14baa $8B9A 10 F3                   ;
lda      #$23                          ; 0x14bac $8B9C A9 23                   ; A = 23
L8BA0     = * + $0002                                                          ;
sta      $2006                         ; 0x14bae $8B9E 8D 06 20                ;
lda      #$C0                          ; 0x14bb1 $8BA1 A9 C0                   ; A = C0
sta      $2006                         ; 0x14bb3 $8BA3 8D 06 20                ;
ldy      #$08                          ; 0x14bb6 $8BA6 A0 08                   ; Y = 08
L8BA8                                                                          ;
lda      #$55                          ; 0x14bb8 $8BA8 A9 55                   ; A = 55
sta      $2007                         ; 0x14bba $8BAA 8D 07 20                ;
dey                                    ; 0x14bbd $8BAD 88                      ;
bne      L8BA8                         ; 0x14bbe $8BAE D0 F8                   ;
jmp      L9255                         ; 0x14bc0 $8BB0 4C 55 92                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_ppu_command                                                              ;
.byt    $3F,$1C,$04,$0F,$30,$30,$30,$FF; 0x14bc3 $8BB3 3F 1C 04 0F 30 30 30 FF ;
bank5_table2                                                                   ;
.byt    $17,$27,$37,$37                ; 0x14bcb $8BBB 17 27 37 37             ;
; ---------------------------------------------------------------------------- ;
bank5_code4                                                                    ;
ldx      $0301                         ; 0x14bcf $8BBF AE 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
ldy      #$00                          ; 0x14bd2 $8BC2 A0 00                   ; Y = 00
L8BC4                                                                          ;
lda      bank5_ppu_command,y           ; 0x14bd4 $8BC4 B9 B3 8B                ;
sta      L0302,x                       ; 0x14bd7 $8BC7 9D 02 03                ;
inx                                    ; 0x14bda $8BCA E8                      ;
iny                                    ; 0x14bdb $8BCB C8                      ;
cpy      #$08                          ; 0x14bdc $8BCC C0 08                   ;
bne      L8BC4                         ; 0x14bde $8BCE D0 F4                   ;
lda      $12                           ; 0x14be0 $8BD0 A5 12                   ; Permanent Frame Counter (ascending)
lsr                                    ; 0x14be2 $8BD2 4A                      ;
lsr                                    ; 0x14be3 $8BD3 4A                      ;
and      #$03                          ; 0x14be4 $8BD4 29 03                   ; keep bits .... ..xx
tay                                    ; 0x14be6 $8BD6 A8                      ;
lda      bank5_table2,y                ; 0x14be7 $8BD7 B9 BB 8B                ;
sta      $02FF,x                       ; 0x14bea $8BDA 9D FF 02                ;
dex                                    ; 0x14bed $8BDD CA                      ;
stx      $0301                         ; 0x14bee $8BDE 8E 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
lda      $0761                         ; 0x14bf1 $8BE1 AD 61 07                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x14bf4 $8BE4 20 85 D3;
bank5_pointer_table_Related_to_Ending                                          ;
.word    bank5_code5                   ; 0x14bf7 $8BE7 1D 8C                   ;
.word    L8C5F                         ; 0x14bf9 $8BE9 5F 8C                   ;
.word    L8CBB                         ; 0x14bfb $8BEB BB 8C                   ;
.word    bank5_change_tile_of_zelda_to_wake_her_up; 0x14bfd $8BED 64 8D        ;
.word    bank5_code7                   ; 0x14bff $8BEF BA 8D                   ;
.word    bank5_code8                   ; 0x14c01 $8BF1 0A 8E                   ;
.word    L8E6F                         ; 0x14c03 $8BF3 6F 8E                   ;
.word    L8F68                         ; 0x14c05 $8BF5 68 8F                   ;
.word    bank5_code12                  ; 0x14c07 $8BF7 9E 8F                   ;
.word    L8E6F                         ; 0x14c09 $8BF9 6F 8E                   ;
.word    L8FB4                         ; 0x14c0b $8BFB B4 8F                   ;
.word    L9042                         ; 0x14c0d $8BFD 42 90                   ;
.word    L9248                         ; 0x14c0f $8BFF 48 92                   ;
.word    L8E6F                         ; 0x14c11 $8C01 6F 8E                   ;
.word    L921C                         ; 0x14c13 $8C03 1C 92                   ;
; ---------------------------------------------------------------------------- ;
bank5_table3                                                                   ;
.byt    $A0,$D6,$01,$78,$A0,$D6,$41,$80; 0x14c15 $8C05 A0 D6 01 78 A0 D6 41 80 ;
L8C0D                                                                          ;
.byt    $B0,$E0,$00,$78,$B0,$E0,$40,$80; 0x14c1d $8C0D B0 E0 00 78 B0 E0 40 80 ;
.byt    $C0,$E2,$00,$78,$C0,$E2,$40,$80; 0x14c25 $8C15 C0 E2 00 78 C0 E2 40 80 ;
; ---------------------------------------------------------------------------- ;
bank5_code5                                                                    ;
ldy      #$07                          ; 0x14c2d $8C1D A0 07                   ; Y = 07
L8C1F                                                                          ;
lda      bank5_table3,y                ; 0x14c2f $8C1F B9 05 8C                ;
sta      $0230,y                       ; 0x14c32 $8C22 99 30 02                ;
dey                                    ; 0x14c35 $8C25 88                      ;
bpl      L8C1F                         ; 0x14c36 $8C26 10 F7                   ;
lda      #$03                          ; 0x14c38 $8C28 A9 03                   ; A = 03
sta      $0232                         ; 0x14c3a $8C2A 8D 32 02                ;
ora      #$40                          ; 0x14c3d $8C2D 09 40                   ; set  bits .x.. ....
sta      $0236                         ; 0x14c3f $8C2F 8D 36 02                ;
jsr      L8C38                         ; 0x14c42 $8C32 20 38 8C                ;
jmp      L8C44                         ; 0x14c45 $8C35 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C38                                                                          ;
ldy      #$0F                          ; 0x14c48 $8C38 A0 0F                   ; Y = 0F
L8C3A                                                                          ;
lda      L8C0D,y                       ; 0x14c4a $8C3A B9 0D 8C                ;
sta      $0210,y                       ; 0x14c4d $8C3D 99 10 02                ;
dey                                    ; 0x14c50 $8C40 88                      ;
bpl      L8C3A                         ; 0x14c51 $8C41 10 F7                   ;
rts                                    ; 0x14c53 $8C43 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C44                                                                          ;
lda      $37                           ; 0x14c54 $8C44 A5 37                   ;
bne      L8C4C                         ; 0x14c56 $8C46 D0 04                   ;
lda      #$60                          ; 0x14c58 $8C48 A9 60                   ; A = 60
sta      $37                           ; 0x14c5a $8C4A 85 37                   ;
L8C4C                                                                          ;
dec      $37                           ; 0x14c5c $8C4C C6 37                   ;
bne      L8C5E                         ; 0x14c5e $8C4E D0 0E                   ;
inc      $0761                         ; 0x14c60 $8C50 EE 61 07                ;
lda      $0761                         ; 0x14c63 $8C53 AD 61 07                ;
cmp      #$0A                          ; 0x14c66 $8C56 C9 0A                   ;
bne      L8C5E                         ; 0x14c68 $8C58 D0 04                   ;
lda      #$08                          ; 0x14c6a $8C5A A9 08                   ; A = 08
sta      $EB                           ; 0x14c6c $8C5C 85 EB                   ; Music
L8C5E                                                                          ;
rts                                    ; 0x14c6e $8C5E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C5F                                                                          ;
jsr      L8C38                         ; 0x14c6f $8C5F 20 38 8C                ;
lda      $38                           ; 0x14c72 $8C62 A5 38                   ;
cmp      #$60                          ; 0x14c74 $8C64 C9 60                   ;
bne      L8C6E                         ; 0x14c76 $8C66 D0 06                   ;
jsr      L8C8B                         ; 0x14c78 $8C68 20 8B 8C                ;
jmp      L8C44                         ; 0x14c7b $8C6B 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8C6E                                                                          ;
lda      $38                           ; 0x14c7e $8C6E A5 38                   ;
bne      L8C7F                         ; 0x14c80 $8C70 D0 0D                   ;
ldx      #$02                          ; 0x14c82 $8C72 A2 02                   ; X = 02
L8C74                                                                          ;
lda      #$A0                          ; 0x14c84 $8C74 A9 A0                   ; A = A0
sta      $38,x                         ; 0x14c86 $8C76 95 38                   ;
lda      #$78                          ; 0x14c88 $8C78 A9 78                   ; A = 78
sta      $3B,x                         ; 0x14c8a $8C7A 95 3B                   ;
dex                                    ; 0x14c8c $8C7C CA                      ;
bpl      L8C74                         ; 0x14c8d $8C7D 10 F5                   ;
L8C7F                                                                          ;
lda      $12                           ; 0x14c8f $8C7F A5 12                   ; Permanent Frame Counter
and      #$07                          ; 0x14c91 $8C81 29 07                   ; keep bits .... .xxx
bne      L8C8B                         ; 0x14c93 $8C83 D0 06                   ;
dec      $38                           ; 0x14c95 $8C85 C6 38                   ;
inc      $3C                           ; 0x14c97 $8C87 E6 3C                   ;;monster x*255	3c,3d,3e,3f,40,41
dec      $3D                           ; 0x14c99 $8C89 C6 3D                   ;
L8C8B                                                                          ;
ldx      #$02                          ; 0x14c9b $8C8B A2 02                   ; X = 02
L8C8D                                                                          ;
txa                                    ; 0x14c9d $8C8D 8A                      ;
asl                                    ; 0x14c9e $8C8E 0A                      ;
asl                                    ; 0x14c9f $8C8F 0A                      ;
asl                                    ; 0x14ca0 $8C90 0A                      ;
tay                                    ; 0x14ca1 $8C91 A8                      ;
lda      $38,x                         ; 0x14ca2 $8C92 B5 38                   ;
sta      $0230,y                       ; 0x14ca4 $8C94 99 30 02                ;
sta      $0234,y                       ; 0x14ca7 $8C97 99 34 02                ;
lda      #$D6                          ; 0x14caa $8C9A A9 D6                   ; A = D6
sta      $0231,y                       ; 0x14cac $8C9C 99 31 02                ;
sta      $0235,y                       ; 0x14caf $8C9F 99 35 02                ;
lda      #$03                          ; 0x14cb2 $8CA2 A9 03                   ; A = 03
sta      $0232,y                       ; 0x14cb4 $8CA4 99 32 02                ;
ora      #$40                          ; 0x14cb7 $8CA7 09 40                   ; set  bits .x.. ....
sta      $0236,y                       ; 0x14cb9 $8CA9 99 36 02                ;
lda      $3B,x                         ; 0x14cbc $8CAC B5 3B                   ;
sta      $0233,y                       ; 0x14cbe $8CAE 99 33 02                ;
clc                                    ; 0x14cc1 $8CB1 18                      ;
adc      #$08                          ; 0x14cc2 $8CB2 69 08                   ;
sta      $0237,y                       ; 0x14cc4 $8CB4 99 37 02                ;
dex                                    ; 0x14cc7 $8CB7 CA                      ;
bpl      L8C8D                         ; 0x14cc8 $8CB8 10 D3                   ;
rts                                    ; 0x14cca $8CBA 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8CBB                                                                          ;
jsr      L8C8B                         ; 0x14ccb $8CBB 20 8B 8C                ;
jsr      L8C38                         ; 0x14cce $8CBE 20 38 8C                ;
lda      $33                           ; 0x14cd1 $8CC1 A5 33                   ;
bne      L8CD0                         ; 0x14cd3 $8CC3 D0 0B                   ;
lda      #$04                          ; 0x14cd5 $8CC5 A9 04                   ; A = 04
sta      $EC                           ; 0x14cd7 $8CC7 85 EC                   ; Sound Effects Type 1
lda      #$E0                          ; 0x14cd9 $8CC9 A9 E0                   ; A = E0
sta      $074B                         ; 0x14cdb $8CCB 8D 4B 07                ; Spell Flash Counter
inc      $33                           ; 0x14cde $8CCE E6 33                   ;
L8CD0                                                                          ;
lda      $0751                         ; 0x14ce0 $8CD0 AD 51 07                ;
sta      $69CC                         ; 0x14ce3 $8CD3 8D CC 69                ;
lda      $074B                         ; 0x14ce6 $8CD6 AD 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
asl                                    ; 0x14ce9 $8CD9 0A                      ;
bne      L8CE3                         ; 0x14cea $8CDA D0 07                   ;
sta      $074B                         ; 0x14cec $8CDC 8D 4B 07                ; Spell Flash Counter
L8CE1     = * + $0002                                                          ;
jmp      L8C44                         ; 0x14cef $8CDF 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8CE2                                                                          ;
rts                                    ; 0x14cf2 $8CE2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8CE3                                                                          ;
ldx      $0301                         ; 0x14cf3 $8CE3 AE 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
cpx      #$19                          ; 0x14cf6 $8CE6 E0 19                   ;
bcs      L8CE2                         ; 0x14cf8 $8CE8 B0 F8                   ;
dec      $074B                         ; 0x14cfa $8CEA CE 4B 07                ; Spell Flash Counter
lda      #$3F                          ; 0x14cfd $8CED A9 3F                   ; A = 3F
sta      L0302,x                       ; 0x14cff $8CEF 9D 02 03                ;
lda      #$10                          ; 0x14d02 $8CF2 A9 10                   ; A = 10
sta      $0303,x                       ; 0x14d04 $8CF4 9D 03 03                ;
lda      #$04                          ; 0x14d07 $8CF7 A9 04                   ; A = 04
sta      $0304,x                       ; 0x14d09 $8CF9 9D 04 03                ;
ldy      #$03                          ; 0x14d0c $8CFC A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x14d0e $8CFE B1 D4                   ;
iny                                    ; 0x14d10 $8D00 C8                      ;
and      #$38                          ; 0x14d11 $8D01 29 38                   ; keep bits ..xx x...
cmp      #$08                          ; 0x14d13 $8D03 C9 08                   ;
bne      L8D10                         ; 0x14d15 $8D05 D0 09                   ;
lda      $0707                         ; 0x14d17 $8D07 AD 07 07                ; Current World
ora      $0785                         ; 0x14d1a $8D0A 0D 85 07                ; Have Candle
bne      L8D10                         ; 0x14d1d $8D0D D0 01                   ;
iny                                    ; 0x14d1f $8D0F C8                      ;
L8D10                                                                          ;
lda      $074B                         ; 0x14d20 $8D10 AD 4B 07                ; Spell Flash Counter
and      #$7F                          ; 0x14d23 $8D13 29 7F                   ; keep bits .xxx xxxx
beq      L8D1A                         ; 0x14d25 $8D15 F0 03                   ;
and      #$03                          ; 0x14d27 $8D17 29 03                   ; keep bits .... ..xx
tay                                    ; 0x14d29 $8D19 A8                      ;
L8D1A                                                                          ;
lda      $69CE,y                       ; 0x14d2a $8D1A B9 CE 69                ;
sta      $0306,x                       ; 0x14d2d $8D1D 9D 06 03                ;
lda      $69D4,y                       ; 0x14d30 $8D20 B9 D4 69                ;
sta      $0307,x                       ; 0x14d33 $8D23 9D 07 03                ;
lda      $69DA,y                       ; 0x14d36 $8D26 B9 DA 69                ;
sta      $0308,x                       ; 0x14d39 $8D29 9D 08 03                ;
lda      $074B                         ; 0x14d3c $8D2C AD 4B 07                ; Spell Flash Counter
asl                                    ; 0x14d3f $8D2F 0A                      ;
bcs      L8D34                         ; 0x14d40 $8D30 B0 02                   ;
ldy      #$04                          ; 0x14d42 $8D32 A0 04                   ; Y = 04
L8D34                                                                          ;
lda      $69C8,y                       ; 0x14d44 $8D34 B9 C8 69                ;
sta      $0305,x                       ; 0x14d47 $8D37 9D 05 03                ;
lda      #$FF                          ; 0x14d4a $8D3A A9 FF                   ; A = FF
sta      $0309,x                       ; 0x14d4c $8D3C 9D 09 03                ;
txa                                    ; 0x14d4f $8D3F 8A                      ;
clc                                    ; 0x14d50 $8D40 18                      ;
adc      #$07                          ; 0x14d51 $8D41 69 07                   ;
sta      $0301                         ; 0x14d53 $8D43 8D 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
lda      $074B                         ; 0x14d56 $8D46 AD 4B 07                ; Spell Flash Counter
bne      L8D8C                         ; 0x14d59 $8D49 D0 41                   ;
jmp      L8C44                         ; 0x14d5b $8D4B 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_ppu_macro0                                                               ;
.byt    $22,$0F,$02,$00,$0A,$22,$2F,$02; 0x14d5e $8D4E 22 0F 02 00 0A 22 2F 02 ;
.byt    $01,$0B,$22,$4E,$03,$F4,$0C,$0D; 0x14d66 $8D56 01 0B 22 4E 03 F4 0C 0D ;
.byt    $23,$E3,$02,$AA,$AA,$FF        ; 0x14d6e $8D5E 23 E3 02 AA AA FF       ;
; ---------------------------------------------------------------------------- ;
bank5_change_tile_of_zelda_to_wake_her_up                                      ;
ldy      #$00                          ; 0x14d74 $8D64 A0 00                   ; Y = 00
ldx      $0301                         ; 0x14d76 $8D66 AE 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
L8D69                                                                          ;
lda      bank5_ppu_macro0,y            ; 0x14d79 $8D69 B9 4E 8D                ;
sta      L0302,x                       ; 0x14d7c $8D6C 9D 02 03                ;
inx                                    ; 0x14d7f $8D6F E8                      ;
iny                                    ; 0x14d80 $8D70 C8                      ;
cpy      #$16                          ; 0x14d81 $8D71 C0 16                   ;
bne      L8D69                         ; 0x14d83 $8D73 D0 F4                   ;
dex                                    ; 0x14d85 $8D75 CA                      ;
stx      $0301                         ; 0x14d86 $8D76 8E 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      L8C8B                         ; 0x14d89 $8D79 20 8B 8C                ;
jsr      L8C38                         ; 0x14d8c $8D7C 20 38 8C                ;
jsr      L8C44                         ; 0x14d8f $8D7F 20 44 8C                ;
lda      $37                           ; 0x14d92 $8D82 A5 37                   ;
bne      L8D8C                         ; 0x14d94 $8D84 D0 06                   ;
sta      $2001                         ; 0x14d96 $8D86 8D 01 20                ;
sta      $0736                         ; 0x14d99 $8D89 8D 36 07                ; Game Mode
L8D8C                                                                          ;
rts                                    ; 0x14d9c $8D8C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table4                                                                   ;
.byt    $B0,$02,$60,$70,$B0,$E4,$20,$78; 0x14d9d $8D8D B0 02 60 70 B0 E4 20 78 ;
.byt    $B0,$D8,$22,$80,$B0,$DA,$22,$88; 0x14da5 $8D95 B0 D8 22 80 B0 DA 22 88 ;
.byt    $C0,$06,$60,$70,$C0,$E6,$20,$78; 0x14dad $8D9D C0 06 60 70 C0 E6 20 78 ;
.byt    $C0,$DC,$22,$80,$C0,$DE,$22,$88; 0x14db5 $8DA5 C0 DC 22 80 C0 DE 22 88 ;
bank5_ppu_macro1                                                               ;
.byt    $23,$D8,$48,$0F,$23,$E0,$50,$00; 0x14dbd $8DAD 23 D8 48 0F 23 E0 50 00 ;
.byt    $23,$F0,$48,$F0,$FF            ; 0x14dc5 $8DB5 23 F0 48 F0 FF          ;
; ---------------------------------------------------------------------------- ;
bank5_code7                                                                    ;
ldx      $0301                         ; 0x14dca $8DBA AE 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
ldy      #$00                          ; 0x14dcd $8DBD A0 00                   ; Y = 00
L8DBF                                                                          ;
lda      bank5_ppu_macro1,y            ; 0x14dcf $8DBF B9 AD 8D                ;
L8DC3     = * + $0001                                                          ;
sta      L0302,x                       ; 0x14dd2 $8DC2 9D 02 03                ;
inx                                    ; 0x14dd5 $8DC5 E8                      ;
iny                                    ; 0x14dd6 $8DC6 C8                      ;
cpy      #$0D                          ; 0x14dd7 $8DC7 C0 0D                   ;
bne      L8DBF                         ; 0x14dd9 $8DC9 D0 F4                   ;
dex                                    ; 0x14ddb $8DCB CA                      ;
stx      $0301                         ; 0x14ddc $8DCC 8E 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      L8DD5                         ; 0x14ddf $8DCF 20 D5 8D                ;
jmp      L8C44                         ; 0x14de2 $8DD2 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8DD5                                                                          ;
ldy      #$1F                          ; 0x14de5 $8DD5 A0 1F                   ; Y = 1F
L8DD7                                                                          ;
lda      bank5_table4,y                ; 0x14de7 $8DD7 B9 8D 8D                ;
sta      $0210,y                       ; 0x14dea $8DDA 99 10 02                ;
dey                                    ; 0x14ded $8DDD 88                      ;
bpl      L8DD7                         ; 0x14dee $8DDE 10 F7                   ;
rts                                    ; 0x14df0 $8DE0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Ending_Text_Zelda_                                                       ;
.byt    $F2,$E8,$EE,$00,$EC,$DA,$EF,$DE; 0x14df1 $8DE1 F2 E8 EE 00 EC DA EF DE ;
.byt    $DD,$00,$E1,$F2,$EB,$EE,$E5,$DE; 0x14df9 $8DE9 DD 00 E1 F2 EB EE E5 DE ;
.byt    $00,$DA,$E7,$DD,$F2,$E8,$EE,$00; 0x14e01 $8DF1 00 DA E7 DD F2 E8 EE 00 ;
.byt    $DA,$EB,$DE,$00,$DA,$00,$EB,$DE; 0x14e09 $8DF9 DA EB DE 00 DA 00 EB DE ;
.byt    $DA,$E5,$00,$E1,$DE,$EB,$E8,$07; 0x14e11 $8E01 DA E5 00 E1 DE EB E8 07 ;
.byt    $FF                            ; 0x14e19 $8E09 FF                      ;
; ---------------------------------------------------------------------------- ;
bank5_code8                                                                    ;
jsr      L8DD5                         ; 0x14e1a $8E0A 20 D5 8D                ;
ldx      $3E                           ; 0x14e1d $8E0D A6 3E                   ;
lda      bank5_Ending_Text_Zelda_,x    ; 0x14e1f $8E0F BD E1 8D                ;
cmp      #$FF                          ; 0x14e22 $8E12 C9 FF                   ;
bne      L8E1D                         ; 0x14e24 $8E14 D0 07                   ;
lda      #$00                          ; 0x14e26 $8E16 A9 00                   ; A = 00
sta      $33                           ; 0x14e28 $8E18 85 33                   ;
jmp      L8C44                         ; 0x14e2a $8E1A 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8E1D                                                                          ;
cmp      #$00                          ; 0x14e2d $8E1D C9 00                   ;
bne      L8E26                         ; 0x14e2f $8E1F D0 05                   ;
inc      $3E                           ; 0x14e31 $8E21 E6 3E                   ;
jmp      bank5_code8                   ; 0x14e33 $8E23 4C 0A 8E                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8E26                                                                          ;
lda      $12                           ; 0x14e36 $8E26 A5 12                   ; Permanent Frame Counter
and      #$0F                          ; 0x14e38 $8E28 29 0F                   ; keep bits .... xxxx
bne      L8E6E                         ; 0x14e3a $8E2A D0 42                   ;
lda      #$21                          ; 0x14e3c $8E2C A9 21                   ; A = 21
sta      L0000                         ; 0x14e3e $8E2E 85 00                   ;
lda      #$CB                          ; 0x14e40 $8E30 A9 CB                   ; A = CB
sta      $01                           ; 0x14e42 $8E32 85 01                   ;
lda      $3E                           ; 0x14e44 $8E34 A5 3E                   ;
L8E36                                                                          ;
cmp      #$0A                          ; 0x14e46 $8E36 C9 0A                   ;
bmi      L8E4D                         ; 0x14e48 $8E38 30 13                   ;
sec                                    ; 0x14e4a $8E3A 38                      ;
sbc      #$0A                          ; 0x14e4b $8E3B E9 0A                   ;
pha                                    ; 0x14e4d $8E3D 48                      ;
lda      $01                           ; 0x14e4e $8E3E A5 01                   ;
clc                                    ; 0x14e50 $8E40 18                      ;
adc      #$40                          ; 0x14e51 $8E41 69 40                   ;
sta      $01                           ; 0x14e53 $8E43 85 01                   ;
bcc      L8E49                         ; 0x14e55 $8E45 90 02                   ;
inc      L0000                         ; 0x14e57 $8E47 E6 00                   ;
L8E49                                                                          ;
pla                                    ; 0x14e59 $8E49 68                      ;
jmp      L8E36                         ; 0x14e5a $8E4A 4C 36 8E                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8E4D                                                                          ;
inc      $3E                           ; 0x14e5d $8E4D E6 3E                   ;
clc                                    ; 0x14e5f $8E4F 18                      ;
adc      $01                           ; 0x14e60 $8E50 65 01                   ;
sta      $0303                         ; 0x14e62 $8E52 8D 03 03                ;; Letter position when writing to screen
lda      L0000                         ; 0x14e65 $8E55 A5 00                   ;
sta      L0302                         ; 0x14e67 $8E57 8D 02 03                ;; Used when writing text to screen
lda      #$01                          ; 0x14e6a $8E5A A9 01                   ; A = 01
sta      $0304                         ; 0x14e6c $8E5C 8D 04 03                ;; Text memory offset?
lda      bank5_Ending_Text_Zelda_,x    ; 0x14e6f $8E5F BD E1 8D                ;
sta      $0305                         ; 0x14e72 $8E62 8D 05 03                ;; Empty Row Space Character
lda      #$FF                          ; 0x14e75 $8E65 A9 FF                   ; A = FF
sta      $0306                         ; 0x14e77 $8E67 8D 06 03                ;; Letter Written to Screen
lda      #$02                          ; 0x14e7a $8E6A A9 02                   ; A = 02
sta      $EF                           ; 0x14e7c $8E6C 85 EF                   ; Sound Effects Type 4
L8E6E                                                                          ;
rts                                    ; 0x14e7e $8E6E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8E6F                                                                          ;
lda      $0761                         ; 0x14e7f $8E6F AD 61 07                ;
cmp      #$0D                          ; 0x14e82 $8E72 C9 0D                   ;
beq      L8E83                         ; 0x14e84 $8E74 F0 0D                   ;
cmp      #$09                          ; 0x14e86 $8E76 C9 09                   ;
beq      L8E80                         ; 0x14e88 $8E78 F0 06                   ;
jsr      L8DD5                         ; 0x14e8a $8E7A 20 D5 8D                ;
jmp      L8E83                         ; 0x14e8d $8E7D 4C 83 8E                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8E80                                                                          ;
jsr      L8F6B                         ; 0x14e90 $8E80 20 6B 8F                ;
L8E83                                                                          ;
lda      $33                           ; 0x14e93 $8E83 A5 33                   ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x14e95 $8E85 20 85 D3;
bank5_pointer_table0                                                           ;
.word    bank5_code9                   ; 0x14e98 $8E88 8E 8E                   ;
.word    bank5_code10                  ; 0x14e9a $8E8A AE 8E                   ;
.word    bank5_code11                  ; 0x14e9c $8E8C 1B 8F                   ;
; ---------------------------------------------------------------------------- ;
bank5_code9                                                                    ;
lda      #$21                          ; 0x14e9e $8E8E A9 21                   ; A = 21
sta      $27                           ; 0x14ea0 $8E90 85 27                   ;
lda      #$60                          ; 0x14ea2 $8E92 A9 60                   ; A = 60
sta      $28                           ; 0x14ea4 $8E94 85 28                   ;
lda      #$D8                          ; 0x14ea6 $8E96 A9 D8                   ; A = D8
sta      $2E                           ; 0x14ea8 $8E98 85 2E                   ;
lda      #$00                          ; 0x14eaa $8E9A A9 00                   ; A = 00
sta      $3F                           ; 0x14eac $8E9C 85 3F                   ;
inc      $33                           ; 0x14eae $8E9E E6 33                   ;
rts                                    ; 0x14eb0 $8EA0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table5                                                                   ;
.byt    $60,$F4,$23,$00,$48,$00,$FF    ; 0x14eb1 $8EA1 60 F4 23 00 48 00 FF    ;
L8EA8                                                                          ;
.byt    $0F,$FF,$0F,$FF,$5F,$FF        ; 0x14eb8 $8EA8 0F FF 0F FF 5F FF       ;
; ---------------------------------------------------------------------------- ;
bank5_code10                                                                   ;
lda      $12                           ; 0x14ebe $8EAE A5 12                   ; Permanent Frame Counter
and      #$07                          ; 0x14ec0 $8EB0 29 07                   ; keep bits .... .xxx
bne      L8EFA                         ; 0x14ec2 $8EB2 D0 46                   ;
lda      $3F                           ; 0x14ec4 $8EB4 A5 3F                   ;
bne      L8EF8                         ; 0x14ec6 $8EB6 D0 40                   ;
lda      $28                           ; 0x14ec8 $8EB8 A5 28                   ;
clc                                    ; 0x14eca $8EBA 18                      ;
adc      #$20                          ; 0x14ecb $8EBB 69 20                   ;
sta      $0303                         ; 0x14ecd $8EBD 8D 03 03                ;; Letter position when writing to screen
lda      $27                           ; 0x14ed0 $8EC0 A5 27                   ;
adc      #$00                          ; 0x14ed2 $8EC2 69 00                   ;
sta      L0302                         ; 0x14ed4 $8EC4 8D 02 03                ;; Used when writing text to screen
ldx      #$06                          ; 0x14ed7 $8EC7 A2 06                   ; X = 06
L8EC9                                                                          ;
lda      bank5_table5,x                ; 0x14ed9 $8EC9 BD A1 8E                ;
sta      $0304,x                       ; 0x14edc $8ECC 9D 04 03                ;
dex                                    ; 0x14edf $8ECF CA                      ;
bpl      L8EC9                         ; 0x14ee0 $8ED0 10 F7                   ;
lda      $32                           ; 0x14ee2 $8ED2 A5 32                   ;
and      #$0E                          ; 0x14ee4 $8ED4 29 0E                   ; keep bits .... xxx.
lsr                                    ; 0x14ee6 $8ED6 4A                      ;
tax                                    ; 0x14ee7 $8ED7 AA                      ;
lda      $2E                           ; 0x14ee8 $8ED8 A5 2E                   ;
sta      $0307                         ; 0x14eea $8EDA 8D 07 03                ;; Text memory offset?
cmp      #$F0                          ; 0x14eed $8EDD C9 F0                   ;
bne      L8EE3                         ; 0x14eef $8EDF D0 02                   ;
ldx      #$01                          ; 0x14ef1 $8EE1 A2 01                   ; X = 01
L8EE3                                                                          ;
lda      L8EA8,x                       ; 0x14ef3 $8EE3 BD A8 8E                ;
sta      $0309                         ; 0x14ef6 $8EE6 8D 09 03                ;
inc      $32                           ; 0x14ef9 $8EE9 E6 32                   ;
lda      $32                           ; 0x14efb $8EEB A5 32                   ;
and      #$03                          ; 0x14efd $8EED 29 03                   ; keep bits .... ..xx
bne      L8EF8                         ; 0x14eff $8EEF D0 07                   ;
lda      $2E                           ; 0x14f01 $8EF1 A5 2E                   ;
clc                                    ; 0x14f03 $8EF3 18                      ;
adc      #$08                          ; 0x14f04 $8EF4 69 08                   ;
sta      $2E                           ; 0x14f06 $8EF6 85 2E                   ;
L8EF8                                                                          ;
inc      $33                           ; 0x14f08 $8EF8 E6 33                   ;
L8EFA                                                                          ;
rts                                    ; 0x14f0a $8EFA 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table6                                                                   ;
.byt    $70                            ; 0x14f0b $8EFB 70                      ;
L8EFC                                                                          ;
.byt    $71                            ; 0x14f0c $8EFC 71                      ;
L8EFD                                                                          ;
.byt    $72                            ; 0x14f0d $8EFD 72                      ;
L8EFE                                                                          ;
.byt    $73,$70,$71,$74,$75,$70,$71,$76; 0x14f0e $8EFE 73 70 71 74 75 70 71 76 ;
.byt    $77,$84,$86,$85,$87,$70,$71,$76; 0x14f16 $8F06 77 84 86 85 87 70 71 76 ;
.byt    $77,$70,$71,$74,$75,$70,$71,$72; 0x14f1e $8F0E 77 70 71 74 75 70 71 72 ;
.byt    $73,$84,$86,$F4,$F4            ; 0x14f26 $8F16 73 84 86 F4 F4          ;
; ---------------------------------------------------------------------------- ;
bank5_code11                                                                   ;
lda      $37                           ; 0x14f2b $8F1B A5 37                   ;
bne      L8F62                         ; 0x14f2d $8F1D D0 43                   ;
lda      #$00                          ; 0x14f2f $8F1F A9 00                   ; A = 00
sta      L0000                         ; 0x14f31 $8F21 85 00                   ;
jsr      L8FF6                         ; 0x14f33 $8F23 20 F6 8F                ;
inc      $3F                           ; 0x14f36 $8F26 E6 3F                   ;
lda      $3F                           ; 0x14f38 $8F28 A5 3F                   ;
cmp      #$04                          ; 0x14f3a $8F2A C9 04                   ;
bne      L8F65                         ; 0x14f3c $8F2C D0 37                   ;
lda      #$00                          ; 0x14f3e $8F2E A9 00                   ; A = 00
sta      $3F                           ; 0x14f40 $8F30 85 3F                   ;
lda      $28                           ; 0x14f42 $8F32 A5 28                   ;
clc                                    ; 0x14f44 $8F34 18                      ;
adc      #$20                          ; 0x14f45 $8F35 69 20                   ;
sta      $28                           ; 0x14f47 $8F37 85 28                   ;
lda      $27                           ; 0x14f49 $8F39 A5 27                   ;
adc      #$00                          ; 0x14f4b $8F3B 69 00                   ;
sta      $27                           ; 0x14f4d $8F3D 85 27                   ;
lda      $0761                         ; 0x14f4f $8F3F AD 61 07                ;
cmp      #$0D                          ; 0x14f52 $8F42 C9 0D                   ;
beq      L8F52                         ; 0x14f54 $8F44 F0 0C                   ;
lda      $27                           ; 0x14f56 $8F46 A5 27                   ;
cmp      #$22                          ; 0x14f58 $8F48 C9 22                   ;
bne      L8F52                         ; 0x14f5a $8F4A D0 06                   ;
lda      $28                           ; 0x14f5c $8F4C A5 28                   ;
cmp      #$E0                          ; 0x14f5e $8F4E C9 E0                   ;
beq      L8F62                         ; 0x14f60 $8F50 F0 10                   ;
L8F52                                                                          ;
lda      $27                           ; 0x14f62 $8F52 A5 27                   ;
cmp      #$23                          ; 0x14f64 $8F54 C9 23                   ;
bne      L8F65                         ; 0x14f66 $8F56 D0 0D                   ;
lda      $28                           ; 0x14f68 $8F58 A5 28                   ;
beq      L8F65                         ; 0x14f6a $8F5A F0 09                   ;
lda      #$00                          ; 0x14f6c $8F5C A9 00                   ; A = 00
sta      $3F                           ; 0x14f6e $8F5E 85 3F                   ;
sta      $28                           ; 0x14f70 $8F60 85 28                   ;
L8F62                                                                          ;
jmp      L8C44                         ; 0x14f72 $8F62 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8F65                                                                          ;
dec      $33                           ; 0x14f75 $8F65 C6 33                   ;
rts                                    ; 0x14f77 $8F67 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8F68                                                                          ;
jsr      L8C44                         ; 0x14f78 $8F68 20 44 8C                ;
L8F6B                                                                          ;
jsr      L8DD5                         ; 0x14f7b $8F6B 20 D5 8D                ;
lda      #$75                          ; 0x14f7e $8F6E A9 75                   ; A = 75
sta      $0213                         ; 0x14f80 $8F70 8D 13 02                ;
sta      $0223                         ; 0x14f83 $8F73 8D 23 02                ;
lda      #$7D                          ; 0x14f86 $8F76 A9 7D                   ; A = 7D
sta      $0217                         ; 0x14f88 $8F78 8D 17 02                ;
sta      $0227                         ; 0x14f8b $8F7B 8D 27 02                ;
lda      #$7B                          ; 0x14f8e $8F7E A9 7B                   ; A = 7B
sta      $021B                         ; 0x14f90 $8F80 8D 1B 02                ;
sta      $022B                         ; 0x14f93 $8F83 8D 2B 02                ;
lda      #$83                          ; 0x14f96 $8F86 A9 83                   ; A = 83
sta      $021F                         ; 0x14f98 $8F88 8D 1F 02                ;
sta      $022F                         ; 0x14f9b $8F8B 8D 2F 02                ;
rts                                    ; 0x14f9e $8F8E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_ppu_macro2                                                               ;
.byt    $23,$18,$07,$ED,$E1,$DE,$F4,$DE; 0x14f9f $8F8F 23 18 07 ED E1 DE F4 DE ;
.byt    $E7,$DD,$23,$F6,$42,$F0,$FF    ; 0x14fa7 $8F97 E7 DD 23 F6 42 F0 FF    ;
; ---------------------------------------------------------------------------- ;
bank5_code12                                                                   ;
lda      $37                           ; 0x14fae $8F9E A5 37                   ;
bne      L8FB1                         ; 0x14fb0 $8FA0 D0 0F                   ;
ldy      #$0E                          ; 0x14fb2 $8FA2 A0 0E                   ; Y = 0E
L8FA4                                                                          ;
lda      bank5_ppu_macro2,y            ; 0x14fb4 $8FA4 B9 8F 8F                ;
sta      L0302,y                       ; 0x14fb7 $8FA7 99 02 03                ;
dey                                    ; 0x14fba $8FAA 88                      ;
bpl      L8FA4                         ; 0x14fbb $8FAB 10 F7                   ;
lda      #$01                          ; 0x14fbd $8FAD A9 01                   ; A = 01
sta      $33                           ; 0x14fbf $8FAF 85 33                   ;
L8FB1                                                                          ;
jmp      L8F68                         ; 0x14fc1 $8FB1 4C 68 8F                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8FB4                                                                          ;
lda      $37                           ; 0x14fc4 $8FB4 A5 37                   ;
L8FB7     = * + $0001                                                          ;
bne      L8FF2                         ; 0x14fc6 $8FB6 D0 3A                   ;
lda      $12                           ; 0x14fc8 $8FB8 A5 12                   ;; Frame Counter (ascending)
and      #$07                          ; 0x14fca $8FBA 29 07                   ; keep bits .... .xxx
bne      L8FF5                         ; 0x14fcc $8FBC D0 37                   ;
lda      #$10                          ; 0x14fce $8FBE A9 10                   ; A = 10
sta      L0000                         ; 0x14fd0 $8FC0 85 00                   ;
jsr      L8FF6                         ; 0x14fd2 $8FC2 20 F6 8F                ;
inc      $3F                           ; 0x14fd5 $8FC5 E6 3F                   ;
lda      $3F                           ; 0x14fd7 $8FC7 A5 3F                   ;
cmp      #$04                          ; 0x14fd9 $8FC9 C9 04                   ;
bne      L8FF5                         ; 0x14fdb $8FCB D0 28                   ;
lda      #$00                          ; 0x14fdd $8FCD A9 00                   ; A = 00
sta      $3F                           ; 0x14fdf $8FCF 85 3F                   ;
lda      $28                           ; 0x14fe1 $8FD1 A5 28                   ;
sec                                    ; 0x14fe3 $8FD3 38                      ;
sbc      #$20                          ; 0x14fe4 $8FD4 E9 20                   ;
sta      $28                           ; 0x14fe6 $8FD6 85 28                   ;
lda      $27                           ; 0x14fe8 $8FD8 A5 27                   ;
sbc      #$00                          ; 0x14fea $8FDA E9 00                   ;
sta      $27                           ; 0x14fec $8FDC 85 27                   ;
cmp      #$21                          ; 0x14fee $8FDE C9 21                   ;
bne      L8FF5                         ; 0x14ff0 $8FE0 D0 13                   ;
lda      $28                           ; 0x14ff2 $8FE2 A5 28                   ;
cmp      #$40                          ; 0x14ff4 $8FE4 C9 40                   ;
bne      L8FF5                         ; 0x14ff6 $8FE6 D0 0D                   ;
lda      #$11                          ; 0x14ff8 $8FE8 A9 11                   ; A = 11
sta      $2B                           ; 0x14ffa $8FEA 85 2B                   ;
lda      #$00                          ; 0x14ffc $8FEC A9 00                   ; A = 00
sta      $2C                           ; 0x14ffe $8FEE 85 2C                   ;
sta      $33                           ; 0x15000 $8FF0 85 33                   ;
L8FF2                                                                          ;
jmp      L8C44                         ; 0x15002 $8FF2 4C 44 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8FF5                                                                          ;
rts                                    ; 0x15005 $8FF5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L8FF6                                                                          ;
ldx      #$00                          ; 0x15006 $8FF6 A2 00                   ; X = 00
lda      $3F                           ; 0x15008 $8FF8 A5 3F                   ;
asl                                    ; 0x1500a $8FFA 0A                      ;
asl                                    ; 0x1500b $8FFB 0A                      ;
ora      L0000                         ; 0x1500c $8FFC 05 00                   ;
tay                                    ; 0x1500e $8FFE A8                      ;
L9000     = * + $0001                                                          ;
lda      $27                           ; 0x1500f $8FFF A5 27                   ;
sta      L0302                         ; 0x15011 $9001 8D 02 03                ;; Used when writing text to screen
lda      $28                           ; 0x15014 $9004 A5 28                   ;
sta      $0303                         ; 0x15016 $9006 8D 03 03                ;; Letter position when writing to screen
clc                                    ; 0x15019 $9009 18                      ;
adc      #$20                          ; 0x1501a $900A 69 20                   ;
sta      $0326                         ; 0x1501c $900C 8D 26 03                ;
lda      $27                           ; 0x1501f $900F A5 27                   ;
adc      #$00                          ; 0x15021 $9011 69 00                   ;
sta      $0325                         ; 0x15023 $9013 8D 25 03                ;
lda      #$20                          ; 0x15026 $9016 A9 20                   ; A = 20
sta      $0304                         ; 0x15028 $9018 8D 04 03                ;; Text memory offset?
sta      $0327                         ; 0x1502b $901B 8D 27 03                ;
L901E                                                                          ;
lda      bank5_table6,y                ; 0x1502e $901E B9 FB 8E                ;
sta      $0305,x                       ; 0x15031 $9021 9D 05 03                ;
lda      L8EFC,y                       ; 0x15034 $9024 B9 FC 8E                ;
sta      $0306,x                       ; 0x15037 $9027 9D 06 03                ;
lda      L8EFD,y                       ; 0x1503a $902A B9 FD 8E                ;
sta      $0328,x                       ; 0x1503d $902D 9D 28 03                ;
lda      L8EFE,y                       ; 0x15040 $9030 B9 FE 8E                ;
sta      $0329,x                       ; 0x15043 $9033 9D 29 03                ;
inx                                    ; 0x15046 $9036 E8                      ;
inx                                    ; 0x15047 $9037 E8                      ;
cpx      #$20                          ; 0x15048 $9038 E0 20                   ;
L903A                                                                          ;
bne      L901E                         ; 0x1504a $903A D0 E2                   ;
lda      #$FF                          ; 0x1504c $903C A9 FF                   ; A = FF
sta      $0348                         ; 0x1504e $903E 8D 48 03                ;
rts                                    ; 0x15051 $9041 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9042                                                                          ;
lda      #$00                          ; 0x15052 $9042 A9 00                   ; A = 00
sta      $0765                         ; 0x15054 $9044 8D 65 07                ;
lda      $33                           ; 0x15057 $9047 A5 33                   ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x15059 $9049 20 85 D3;
bank5_pointer_table_Probably_related_to_End_Credits                            ;
.word    bank5_code13                  ; 0x1505c $904C 75 90                   ;
.word    L908D                         ; 0x1505e $904E 8D 90                   ;
.word    bank5_code14                  ; 0x15060 $9050 FE 90                   ;
.word    bank5_code15                  ; 0x15062 $9052 73 91                   ;
.word    L91A8                         ; 0x15064 $9054 A8 91                   ;
; ---------------------------------------------------------------------------- ;
bank5_table7                                                                   ;
.byt    $03                            ; 0x15066 $9056 03                      ;
L9057                                                                          ;
.byt    $01                            ; 0x15067 $9057 01                      ;
bank5_ppu_macro3                                                               ;
.byt    $21,$CB,$05,$60,$61,$62,$63,$63; 0x15068 $9058 21 CB 05 60 61 62 63 63 ;
.byt    $23,$D8,$48,$55,$23,$E0,$48,$00; 0x15070 $9060 23 D8 48 55 23 E0 48 00 ;
.byt    $23,$E8,$48,$AA,$3F,$00,$44,$0F; 0x15078 $9068 23 E8 48 AA 3F 00 44 0F ;
.byt    $3F,$08,$44,$0F,$FF            ; 0x15080 $9070 3F 08 44 0F FF          ;
; ---------------------------------------------------------------------------- ;
bank5_code13                                                                   ;
ldy      #$1C                          ; 0x15085 $9075 A0 1C                   ; Y = 1C
L9077                                                                          ;
lda      bank5_ppu_macro3,y            ; 0x15087 $9077 B9 58 90                ;
sta      L0302,y                       ; 0x1508a $907A 99 02 03                ;
dey                                    ; 0x1508d $907D 88                      ;
bpl      L9077                         ; 0x1508e $907E 10 F7                   ;
lda      #$11                          ; 0x15090 $9080 A9 11                   ; A = 11
sta      $29                           ; 0x15092 $9082 85 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
lda      #$00                          ; 0x15094 $9084 A9 00                   ; A = 00
sta      $2A                           ; 0x15096 $9086 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
sta      $3F                           ; 0x15098 $9088 85 3F                   ;
inc      $33                           ; 0x1509a $908A E6 33                   ;
rts                                    ; 0x1509c $908C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L908D                                                                          ;
lda      #$00                          ; 0x1509d $908D A9 00                   ; A = 00
sta      $02                           ; 0x1509f $908F 85 02                   ;
lda      $54                           ; 0x150a1 $9091 A5 54                   ;;projectile x		54,55,56,57,58,59	54,y	? only 56,59confirmed
asl                                    ; 0x150a3 $9093 0A                      ;
tay                                    ; 0x150a4 $9094 A8                      ;
lda      bank5_Pointer_table_for_End_Credits,y; 0x150a5 $9095 B9 59 92         ;
sta      L0000                         ; 0x150a8 $9098 85 00                   ;
lda      bank5_Pointer_table_for_End_Credits+$01,y; 0x150aa $909A B9 5A 92     ;
sta      $01                           ; 0x150ad $909D 85 01                   ;
ldy      #$00                          ; 0x150af $909F A0 00                   ; Y = 00
L90A1                                                                          ;
lda      (L0000),y                     ; 0x150b1 $90A1 B1 00                   ;
sta      L0302,y                       ; 0x150b3 $90A3 99 02 03                ;
iny                                    ; 0x150b6 $90A6 C8                      ;
cmp      #$FF                          ; 0x150b7 $90A7 C9 FF                   ;
bne      L90A1                         ; 0x150b9 $90A9 D0 F6                   ;
inc      $33                           ; 0x150bb $90AB E6 33                   ;
rts                                    ; 0x150bd $90AD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table8                                                                   ;
.byt    $08,$08,$08,$08,$C0,$08,$08,$08; 0x150be $90AE 08 08 08 08 C0 08 08 08 ;
; ---------------------------------------------------------------------------- ;
bank5_pointer_table1                                                           ;
.word    bank5_Probably_related_to_Palette_fading; 0x150c6 $90B6 BA 90         ;
.word    L90DA                         ; 0x150c8 $90B8 DA 90                   ;
; ---------------------------------------------------------------------------- ;
bank5_Probably_related_to_Palette_fading                                       ;
.byt    $0F,$05,$05,$16,$0F,$15,$05,$16; 0x150ca $90BA 0F 05 05 16 0F 15 05 16 ;
.byt    $0F,$25,$05,$16,$0F,$30,$15,$16; 0x150d2 $90C2 0F 25 05 16 0F 30 15 16 ;
.byt    $0F,$25,$05,$16,$0F,$15,$05,$16; 0x150da $90CA 0F 25 05 16 0F 15 05 16 ;
.byt    $0F,$05,$05,$16,$0F,$0F,$0F,$0F; 0x150e2 $90D2 0F 05 05 16 0F 0F 0F 0F ;
L90DA                                                                          ;
.byt    $0F,$02,$02,$16,$0F,$12,$02,$16; 0x150ea $90DA 0F 02 02 16 0F 12 02 16 ;
.byt    $0F,$22,$02,$16,$0F,$30,$12,$16; 0x150f2 $90E2 0F 22 02 16 0F 30 12 16 ;
.byt    $0F,$22,$02,$16,$0F,$12,$02,$16; 0x150fa $90EA 0F 22 02 16 0F 12 02 16 ;
.byt    $0F,$02,$02,$16,$0F,$0F,$0F,$0F; 0x15102 $90F2 0F 02 02 16 0F 0F 0F 0F ;
L90FA                                                                          ;
.byt    $00,$08                        ; 0x1510a $90FA 00 08                   ;
L90FC                                                                          ;
.byt    $04,$00                        ; 0x1510c $90FC 04 00                   ;
; ---------------------------------------------------------------------------- ;
bank5_code14                                                                   ;
lda      $37                           ; 0x1510e $90FE A5 37                   ;
bne      L9109                         ; 0x15110 $9100 D0 07                   ;
ldy      $55                           ; 0x15112 $9102 A4 55                   ;
lda      bank5_table8,y                ; 0x15114 $9104 B9 AE 90                ;
sta      $37                           ; 0x15117 $9107 85 37                   ;
L9109                                                                          ;
dec      $37                           ; 0x15119 $9109 C6 37                   ;
bne      L9167                         ; 0x1511b $910B D0 5A                   ;
lda      $54                           ; 0x1511d $910D A5 54                   ;;projectile x		54,55,56,57,58,59	54,y	? only 56,59confirmed
and      #$01                          ; 0x1511f $910F 29 01                   ; keep bits .... ...x
asl                                    ; 0x15121 $9111 0A                      ;
tax                                    ; 0x15122 $9112 AA                      ;
lda      bank5_pointer_table1,x        ; 0x15123 $9113 BD B6 90                ;
sta      L0000                         ; 0x15126 $9116 85 00                   ;
lda      bank5_pointer_table1+$01,x    ; 0x15128 $9118 BD B7 90                ;
sta      $01                           ; 0x1512b $911B 85 01                   ;
lda      #$3F                          ; 0x1512d $911D A9 3F                   ; A = 3F
sta      L0302                         ; 0x1512f $911F 8D 02 03                ;; Used when writing text to screen
lda      $54                           ; 0x15132 $9122 A5 54                   ;;projectile x		54,55,56,57,58,59	54,y	? only 56,59confirmed
and      #$01                          ; 0x15134 $9124 29 01                   ; keep bits .... ...x
tax                                    ; 0x15136 $9126 AA                      ;
lda      L90FA,x                       ; 0x15137 $9127 BD FA 90                ;
sta      $0303                         ; 0x1513a $912A 8D 03 03                ;; Letter position when writing to screen
lda      #$04                          ; 0x1513d $912D A9 04                   ; A = 04
sta      $0304                         ; 0x1513f $912F 8D 04 03                ;; Text memory offset?
lda      $55                           ; 0x15142 $9132 A5 55                   ;
asl                                    ; 0x15144 $9134 0A                      ;
asl                                    ; 0x15145 $9135 0A                      ;
tay                                    ; 0x15146 $9136 A8                      ;
ldx      #$00                          ; 0x15147 $9137 A2 00                   ; X = 00
L9139                                                                          ;
lda      (L0000),y                     ; 0x15149 $9139 B1 00                   ;
sta      $0305,x                       ; 0x1514b $913B 9D 05 03                ;
iny                                    ; 0x1514e $913E C8                      ;
inx                                    ; 0x1514f $913F E8                      ;
cpx      #$04                          ; 0x15150 $9140 E0 04                   ;
bne      L9139                         ; 0x15152 $9142 D0 F5                   ;
lda      #$FF                          ; 0x15154 $9144 A9 FF                   ; A = FF
sta      $0309                         ; 0x15156 $9146 8D 09 03                ;
inc      $55                           ; 0x15159 $9149 E6 55                   ;
ldy      $55                           ; 0x1515b $914B A4 55                   ;
lda      bank5_table8,y                ; 0x1515d $914D B9 AE 90                ;
sta      $37                           ; 0x15160 $9150 85 37                   ;
cpy      #$04                          ; 0x15162 $9152 C0 04                   ;
bne      L9167                         ; 0x15164 $9154 D0 11                   ;
inc      $54                           ; 0x15166 $9156 E6 54                   ;;projectile x		54,55,56,57,58,59	54,y	? only 56,59confirmed
lda      $54                           ; 0x15168 $9158 A5 54                   ;;projectile x		54,55,56,57,58,59	54,y	? only 56,59confirmed
and      #$01                          ; 0x1516a $915A 29 01                   ; keep bits .... ...x
tay                                    ; 0x1516c $915C A8                      ;
lda      bank5_table7,y                ; 0x1516d $915D B9 56 90                ;
sta      $33                           ; 0x15170 $9160 85 33                   ;
lda      L90FC,y                       ; 0x15172 $9162 B9 FC 90                ;
sta      $55                           ; 0x15175 $9165 85 55                   ;
L9167                                                                          ;
rts                                    ; 0x15177 $9167 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table9                                                                   ;
.byt    $64,$74,$74                    ; 0x15178 $9168 64 74 74                ;
L916B                                                                          ;
.byt    $78,$70,$80                    ; 0x1517b $916B 78 70 80                ;
bank5_ppu_macro4                                                               ;
.byt    $21,$CB,$45,$F4,$FF            ; 0x1517e $916E 21 CB 45 F4 FF          ;
; ---------------------------------------------------------------------------- ;
bank5_code15                                                                   ;
lda      $54                           ; 0x15183 $9173 A5 54                   ;;projectile x		54,55,56,57,58,59	54,y	? only 56,59confirmed
cmp      #$12                          ; 0x15185 $9175 C9 12                   ;
bne      L9194                         ; 0x15187 $9177 D0 1B                   ;
lda      #$00                          ; 0x15189 $9179 A9 00                   ; A = 00
sta      $3F                           ; 0x1518b $917B 85 3F                   ;
sta      $32                           ; 0x1518d $917D 85 32                   ;
sta      $33                           ; 0x1518f $917F 85 33                   ;
ldx      #$02                          ; 0x15191 $9181 A2 02                   ; X = 02
L9183                                                                          ;
lda      bank5_table9,x                ; 0x15193 $9183 BD 68 91                ;
sta      $38,x                         ; 0x15196 $9186 95 38                   ;
lda      L916B,x                       ; 0x15198 $9188 BD 6B 91                ;
sta      $3B,x                         ; 0x1519b $918B 95 3B                   ;
dex                                    ; 0x1519d $918D CA                      ;
bpl      L9183                         ; 0x1519e $918E 10 F3                   ;
inc      $0761                         ; 0x151a0 $9190 EE 61 07                ;
rts                                    ; 0x151a3 $9193 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9194                                                                          ;
lda      $54                           ; 0x151a4 $9194 A5 54                   ;;projectile x		54,55,56,57,58,59	54,y	? only 56,59confirmed
cmp      #$10                          ; 0x151a6 $9196 C9 10                   ;
bne      L91A5                         ; 0x151a8 $9198 D0 0B                   ;
ldy      #$04                          ; 0x151aa $919A A0 04                   ; Y = 04
L919C                                                                          ;
lda      bank5_ppu_macro4,y            ; 0x151ac $919C B9 6E 91                ;
sta      L0302,y                       ; 0x151af $919F 99 02 03                ;
dey                                    ; 0x151b2 $91A2 88                      ;
bpl      L919C                         ; 0x151b3 $91A3 10 F7                   ;
L91A5                                                                          ;
inc      $33                           ; 0x151b5 $91A5 E6 33                   ;
rts                                    ; 0x151b7 $91A7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L91A8                                                                          ;
lda      $37                           ; 0x151b8 $91A8 A5 37                   ;
bne      L91B3                         ; 0x151ba $91AA D0 07                   ;
ldy      $55                           ; 0x151bc $91AC A4 55                   ;
lda      bank5_table8,y                ; 0x151be $91AE B9 AE 90                ;
sta      $37                           ; 0x151c1 $91B1 85 37                   ;
L91B3                                                                          ;
dec      $37                           ; 0x151c3 $91B3 C6 37                   ;
bne      L921B                         ; 0x151c5 $91B5 D0 64                   ;
lda      bank5_pointer_table1          ; 0x151c7 $91B7 AD B6 90                ;
sta      L0000                         ; 0x151ca $91BA 85 00                   ;
lda      bank5_pointer_table1+$01      ; 0x151cc $91BC AD B7 90                ;
sta      $01                           ; 0x151cf $91BF 85 01                   ;
lda      #$3F                          ; 0x151d1 $91C1 A9 3F                   ; A = 3F
sta      L0302                         ; 0x151d3 $91C3 8D 02 03                ;; Used when writing text to screen
lda      #$00                          ; 0x151d6 $91C6 A9 00                   ; A = 00
sta      $0303                         ; 0x151d8 $91C8 8D 03 03                ;; Letter position when writing to screen
lda      #$04                          ; 0x151db $91CB A9 04                   ; A = 04
sta      $0304                         ; 0x151dd $91CD 8D 04 03                ;; Text memory offset?
lda      $55                           ; 0x151e0 $91D0 A5 55                   ;
asl                                    ; 0x151e2 $91D2 0A                      ;
asl                                    ; 0x151e3 $91D3 0A                      ;
tay                                    ; 0x151e4 $91D4 A8                      ;
ldx      #$00                          ; 0x151e5 $91D5 A2 00                   ; X = 00
L91D7                                                                          ;
lda      (L0000),y                     ; 0x151e7 $91D7 B1 00                   ;
sta      $0305,x                       ; 0x151e9 $91D9 9D 05 03                ;
iny                                    ; 0x151ec $91DC C8                      ;
inx                                    ; 0x151ed $91DD E8                      ;
cpx      #$04                          ; 0x151ee $91DE E0 04                   ;
bne      L91D7                         ; 0x151f0 $91E0 D0 F5                   ;
lda      #$3F                          ; 0x151f2 $91E2 A9 3F                   ; A = 3F
sta      $0309                         ; 0x151f4 $91E4 8D 09 03                ;
lda      #$08                          ; 0x151f7 $91E7 A9 08                   ; A = 08
sta      $030A                         ; 0x151f9 $91E9 8D 0A 03                ;
lda      #$04                          ; 0x151fc $91EC A9 04                   ; A = 04
sta      $030B                         ; 0x151fe $91EE 8D 0B 03                ;
ldx      #$00                          ; 0x15201 $91F1 A2 00                   ; X = 00
lda      $55                           ; 0x15203 $91F3 A5 55                   ;
asl                                    ; 0x15205 $91F5 0A                      ;
asl                                    ; 0x15206 $91F6 0A                      ;
ora      #$20                          ; 0x15207 $91F7 09 20                   ; set  bits ..x. ....
tay                                    ; 0x15209 $91F9 A8                      ;
L91FA                                                                          ;
lda      (L0000),y                     ; 0x1520a $91FA B1 00                   ;
sta      $030C,x                       ; 0x1520c $91FC 9D 0C 03                ;
iny                                    ; 0x1520f $91FF C8                      ;
inx                                    ; 0x15210 $9200 E8                      ;
cpx      #$04                          ; 0x15211 $9201 E0 04                   ;
bne      L91FA                         ; 0x15213 $9203 D0 F5                   ;
lda      #$FF                          ; 0x15215 $9205 A9 FF                   ; A = FF
sta      $030C,x                       ; 0x15217 $9207 9D 0C 03                ;
inc      $55                           ; 0x1521a $920A E6 55                   ;
lda      $55                           ; 0x1521c $920C A5 55                   ;
cmp      #$08                          ; 0x1521e $920E C9 08                   ;
bne      L921B                         ; 0x15220 $9210 D0 09                   ;
lda      #$00                          ; 0x15222 $9212 A9 00                   ; A = 00
sta      $55                           ; 0x15224 $9214 85 55                   ;
lda      L9057                         ; 0x15226 $9216 AD 57 90                ;
sta      $33                           ; 0x15229 $9219 85 33                   ;
L921B                                                                          ;
rts                                    ; 0x1522b $921B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L921C                                                                          ;
lda      #$01                          ; 0x1522c $921C A9 01                   ; A = 01
sta      $07A0                         ; 0x1522e $921E 8D A0 07                ;; this is a new game+ file?, set it up during the save game load for newgame+ settings
lda      #$00                          ; 0x15231 $9221 A9 00                   ; A = 00
sta      $0775                         ; 0x15233 $9223 8D 75 07                ; Current Experience (high byte)
sta      $0776                         ; 0x15236 $9226 8D 76 07                ; Current Experience (low byte)
ldy      #$69                          ; 0x15239 $9229 A0 69                   ; Y = 69
L922B                                                                          ;
sta      $0700,y                       ; 0x1523b $922B 99 00 07                ;
dey                                    ; 0x1523e $922E 88                      ;
bne      L922B                         ; 0x1523f $922F D0 FA                   ;
ldy      #$C0                          ; 0x15241 $9231 A0 C0                   ; Y = C0
L9233                                                                          ;
sta      $0700,y                       ; 0x15243 $9233 99 00 07                ;
iny                                    ; 0x15246 $9236 C8                      ;
bne      L9233                         ; 0x15247 $9237 D0 FA                   ;
ldy      #$0F                          ; 0x15249 $9239 A0 0F                   ; Y = 0F
L923B                                                                          ;
sta      $E0,y                         ; 0x1524b $923B 99 E0 00                ;
dey                                    ; 0x1524e $923E 88                      ;
bpl      L923B                         ; 0x1524f $923F 10 FA                   ;
jsr      LD293                         ; 0x15251 $9241 20 93 D2                ;
inc      $076C                         ; 0x15254 $9244 EE 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x15257 $9247 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9248                                                                          ;
jsr      L8C8B                         ; 0x15258 $9248 20 8B 8C                ;
lda      $F7                           ; 0x1525b $924B A5 F7                   ; Controller 1 Buttons Held
and      #$10                          ; 0x1525d $924D 29 10                   ; keep bits ...x .... (Start Button)
beq      L9254                         ; 0x1525f $924F F0 03                   ;
inc      $0761                         ; 0x15261 $9251 EE 61 07                ;
L9254                                                                          ;
rts                                    ; 0x15264 $9254 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9255                                                                          ;
inc      $0736                         ; 0x15265 $9255 EE 36 07                ; Game Mode
rts                                    ; 0x15268 $9258 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Pointer_table_for_End_Credits                                            ;
.word    bank5_End_Credits             ; 0x15269 $9259 7D 92                   ;
.word    L9293                         ; 0x1526b $925B 93 92                   ;
.word    L92A1                         ; 0x1526d $925D A1 92                   ;
.word    L92B7                         ; 0x1526f $925F B7 92                   ;
.word    L92C5                         ; 0x15271 $9261 C5 92                   ;
.word    L92D1                         ; 0x15273 $9263 D1 92                   ;
.word    L92E6                         ; 0x15275 $9265 E6 92                   ;
.word    L92F2                         ; 0x15277 $9267 F2 92                   ;
.word    L9307                         ; 0x15279 $9269 07 93                   ;
.word    L9319                         ; 0x1527b $926B 19 93                   ;
.word    L9325                         ; 0x1527d $926D 25 93                   ;
.word    L9337                         ; 0x1527f $926F 37 93                   ;
.word    L9325                         ; 0x15281 $9271 25 93                   ;
.word    L937E                         ; 0x15283 $9273 7E 93                   ;
.word    L9325                         ; 0x15285 $9275 25 93                   ;
.word    L9396                         ; 0x15287 $9277 96 93                   ;
.word    L934F                         ; 0x15289 $9279 4F 93                   ;
.word    L9364                         ; 0x1528b $927B 64 93                   ;
; ---------------------------------------------------------------------------- ;
bank5_End_Credits                                                              ;
.byt    $22,$47,$12,$DE,$F1,$DE,$DC,$EE; 0x1528d $927D 22 47 12 DE F1 DE DC EE ;
.byt    $ED,$E2,$EF,$DE,$F4,$E9,$EB,$E8; 0x15295 $9285 ED E2 EF DE F4 E9 EB E8 ;
.byt    $DD,$EE,$DC,$DE,$EB,$FF        ; 0x1529d $928D DD EE DC DE EB FF       ;
L9293                                                                          ;
.byt    $22,$8B,$0A,$E1,$CF,$F2,$DA,$E6; 0x152a3 $9293 22 8B 0A E1 CF F2 DA E6 ;
.byt    $DA,$EE,$DC,$E1,$E2,$FF        ; 0x152ab $929B DA EE DC E1 E2 FF       ;
L92A1                                                                          ;
.byt    $22,$47,$12,$E9,$EB,$E8,$DD,$EE; 0x152b1 $92A1 22 47 12 E9 EB E8 DD EE ;
.byt    $DC,$DE,$EB,$F4,$F4,$F4,$F4,$F4; 0x152b9 $92A9 DC DE EB F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$FF        ; 0x152c1 $92B1 F4 F4 F4 F4 F4 FF       ;
L92B7                                                                          ;
.byt    $22,$8B,$0A,$E6,$E2,$F2,$DA,$E1; 0x152c7 $92B7 22 8B 0A E6 E2 F2 DA E1 ;
.byt    $E8,$E7,$F4,$F4,$F4,$FF        ; 0x152cf $92BF E8 E7 F4 F4 F4 FF       ;
L92C5                                                                          ;
.byt    $22,$47,$08,$DD,$E2,$EB,$DE,$DC; 0x152d5 $92C5 22 47 08 DD E2 EB DE DC ;
.byt    $ED,$E8,$EB,$FF                ; 0x152dd $92CD ED E8 EB FF             ;
L92D1                                                                          ;
.byt    $22,$8B,$07,$EC,$EE,$E0,$E2,$F2; 0x152e1 $92D1 22 8B 07 EC EE E0 E2 F2 ;
.byt    $DA,$E7,$22,$CB,$07,$F2,$DA,$E6; 0x152e9 $92D9 DA E7 22 CB 07 F2 DA E6 ;
.byt    $DA,$E1,$DE,$E7,$FF            ; 0x152f1 $92E1 DA E1 DE E7 FF          ;
L92E6                                                                          ;
.byt    $22,$47,$08,$DD,$DE,$EC,$E2,$E0; 0x152f6 $92E6 22 47 08 DD DE EC E2 E0 ;
.byt    $E7,$DE,$EB,$FF                ; 0x152fe $92EE E7 DE EB FF             ;
L92F2                                                                          ;
.byt    $22,$8B,$07,$E2,$EC,$EC,$E1,$E2; 0x15302 $92F2 22 8B 07 E2 EC EC E1 E2 ;
.byt    $E7,$F4,$22,$CB,$07,$F4,$F4,$F4; 0x1530a $92FA E7 F4 22 CB 07 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$FF            ; 0x15312 $9302 F4 F4 F4 F4 FF          ;
L9307                                                                          ;
.byt    $22,$47,$0E,$EC,$E8,$EE,$E7,$DD; 0x15317 $9307 22 47 0E EC E8 EE E7 DD ;
.byt    $F4,$DC,$E8,$E6,$E9,$E8,$EC,$DE; 0x1531f $930F F4 DC E8 E6 E9 E8 EC DE ;
.byt    $EB,$FF                        ; 0x15327 $9317 EB FF                   ;
L9319                                                                          ;
.byt    $22,$8B,$08,$ED,$EC,$EE,$E4,$DA; 0x15329 $9319 22 8B 08 ED EC EE E4 DA ;
.byt    $EC,$DA,$E7,$FF                ; 0x15331 $9321 EC DA E7 FF             ;
L9325                                                                          ;
.byt    $22,$47,$0E,$E9,$EB,$E8,$E0,$EB; 0x15335 $9325 22 47 0E E9 EB E8 E0 EB ;
.byt    $DA,$E6,$DE,$EB,$F4,$F4,$F4,$F4; 0x1533d $932D DA E6 DE EB F4 F4 F4 F4 ;
.byt    $F4,$FF                        ; 0x15345 $9335 F4 FF                   ;
L9337                                                                          ;
.byt    $22,$8B,$09,$E6,$E8,$EB,$E2,$E4; 0x15347 $9337 22 8B 09 E6 E8 EB E2 E4 ;
.byt    $DA,$F3,$EE,$F4,$22,$CB,$08,$E6; 0x1534f $933F DA F3 EE F4 22 CB 08 E6 ;
.byt    $DA,$EB,$EE,$E6,$DA,$EB,$EE,$FF; 0x15357 $9347 DA EB EE E6 DA EB EE FF ;
L934F                                                                          ;
.byt    $22,$47,$11,$ED,$E1,$DA,$E7,$E4; 0x1535f $934F 22 47 11 ED E1 DA E7 E4 ;
.byt    $EC,$F4,$DA,$F4,$E6,$E2,$E5,$E5; 0x15367 $9357 EC F4 DA F4 E6 E2 E5 E5 ;
.byt    $E2,$E8,$E7,$CF,$FF            ; 0x1536f $935F E2 E8 E7 CF FF          ;
L9364                                                                          ;
.byt    $22,$8B,$0A,$E9,$EE,$EC,$E1,$F4; 0x15374 $9364 22 8B 0A E9 EE EC E1 F4 ;
.byt    $EC,$ED,$DA,$EB,$ED,$22,$CB,$09; 0x1537c $936C EC ED DA EB ED 22 CB 09 ;
.byt    $ED,$E8,$F4,$EB,$DE,$E9,$E5,$DA; 0x15384 $9374 ED E8 F4 EB DE E9 E5 DA ;
.byt    $F2,$FF                        ; 0x1538c $937C F2 FF                   ;
L937E                                                                          ;
.byt    $22,$8B,$09,$EC,$E1,$E2,$E0,$DE; 0x1538e $937E 22 8B 09 EC E1 E2 E0 DE ;
.byt    $DC,$E1,$DA,$E7,$22,$CB,$08,$E7; 0x15396 $9386 DC E1 DA E7 22 CB 08 E7 ;
.byt    $E2,$EC,$E1,$E2,$F2,$DA,$E7,$FF; 0x1539e $938E E2 EC E1 E2 F2 DA E7 FF ;
L9396                                                                          ;
.byt    $22,$8B,$09,$E7,$DA,$E4,$DA,$F3; 0x153a6 $9396 22 8B 09 E7 DA E4 DA F3 ;
.byt    $E8,$E8,$F4,$F4,$22,$CB,$08,$F4; 0x153ae $939E E8 E8 F4 F4 22 CB 08 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$FF; 0x153b6 $93A6 F4 F4 F4 F4 F4 F4 F4 FF ;
bank5_UNUSED_93AE                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153be $93AE FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153c6 $93B6 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153ce $93BE FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153d6 $93C6 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153de $93CE FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153e6 $93D6 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153ee $93DE FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153f6 $93E6 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x153fe $93EE FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x15406 $93F6 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF                        ; 0x1540e $93FE FF FF                   ;
; ---------------------------------------------------------------------------- ;
bank5_pointer_table2                                                           ;
.word    L9C48                         ; 0x15410 $9400 48 9C                   ;
.word    L9C48                         ; 0x15412 $9402 48 9C                   ;
.word    L9C3D                         ; 0x15414 $9404 3D 9C                   ;
.word    L9BC8                         ; 0x15416 $9406 C8 9B                   ;
.word    L9BD2                         ; 0x15418 $9408 D2 9B                   ;
.word    L0000                         ; 0x1541a $940A 00 00                   ;
.word    L9BE1                         ; 0x1541c $940C E1 9B                   ;
.word    L9BC8                         ; 0x1541e $940E C8 9B                   ;
.word    L0000                         ; 0x15420 $9410 00 00                   ;
.word    L0000                         ; 0x15422 $9412 00 00                   ;
.word    L0000                         ; 0x15424 $9414 00 00                   ;
.word    L9C69                         ; 0x15426 $9416 69 9C                   ;
; ---------------------------------------------------------------------------- ;
bank5_table10                                                                  ;
.byt    $00,$03,$81,$86,$53,$82,$A4,$86; 0x15428 $9418 00 03 81 86 53 82 A4 86 ;
.byt    $86                            ; 0x15430 $9420 86                      ;
bank5_Enemy_Hit_Points                                                         ;
.byt    $00,$00,$00,$18,$30,$FF,$06,$04; 0x15431 $9421 00 00 00 18 30 FF 06 04 ;
.byt    $00,$00,$02,$02,$02,$04,$06,$08; 0x15439 $9429 00 00 02 02 02 04 06 08 ;
.byt    $08,$0C,$0C,$00,$FF,$FF,$60,$FF; 0x15441 $9431 08 0C 0C 00 FF FF 60 FF ;
.byt    $00,$30,$60,$00,$02,$90,$38,$00; 0x15449 $9439 00 30 60 00 02 90 38 00 ;
.byt    $00,$00,$C0,$F8                ; 0x15451 $9441 00 00 C0 F8             ;
; ---------------------------------------------------------------------------- ;
bank5_Pointer_table_for_Enemy_Init_Routines                                    ;
.word    bank5_code_rts                ; 0x15455 $9445 AD 95                   ;Fairy			(00)
.word    bank5_code_rts                ; 0x15457 $9447 AD 95                   ;Palace Item		(01)
.word    bank5_code_rts                ; 0x15459 $9449 AD 95                   ;Locked Door		(02)
.word    bank5_code_rts                ; 0x1545b $944B AD 95                   ;Myu			(03)
.word    bank5_code_rts                ; 0x1545d $944D AD 95                   ;Bot			(04)
.word    bank5_code_rts                ; 0x1545f $944F AD 95                   ;Hidden Red Jar		(05)
.word    bank5_code_rts                ; 0x15461 $9451 AD 95                   ;Moa (free roaming)	(06)
.word    bank5_code_rts                ; 0x15463 $9453 AD 95                   ;Ache			(07)
.word    bank5_code_rts                ; 0x15465 $9455 AD 95                   ;? Mega Glitch		(08)
.word    bank5_code_rts                ; 0x15467 $9457 AD 95                   ;? Fast Glitch		(09)
.word    bank5_code_rts                ; 0x15469 $9459 AD 95                   ;Acheman			(0A)
.word    bank5_code_rts                ; 0x1546b $945B AD 95                   ;Bubbles Generator (uses Energy Ball sprite)	(0B)
.word    bank5_code_rts                ; 0x1546d $945D AD 95                   ;Rocks Generator (uses Energy Ball sprite)	(0C)
.word    bank5_code_rts                ; 0x1546f $945F AD 95                   ;Red Deeler (glitched behavior)		(0D)
.word    bank5_code_rts                ; 0x15471 $9461 AD 95                   ;Blue Deeler (visual glitch only)	(0E)
.word    bank5_Enemy_Init_Routines_Fire_Bago_Bago_Generator; 0x15473 $9463 1D A3;Fire Bago Bago Generator	(0F)
.word    bank5_code_rts                ; 0x15475 $9465 AD 95                   ;Fire Bago Bago		(10)
.word    bank5_code_rts                ; 0x15477 $9467 AD 95                   ;Fire Rope - Jumping	(11)
.word    bank5_code_rts                ; 0x15479 $9469 AD 95                   ;Fire Rope - Moving	(11)
.word    bank5_code_rts                ; 0x1547b $946B AD 95                   ;Elevator		(13)
.word    bank5_Enemy_Init_Routines_Bubble; 0x1547d $946D 27 A1                 ;Bubble - Slow		(14)
.word    bank5_Enemy_Init_Routines_Bubble__Fast; 0x1547f $946F 2B A1           ;Bubble - Fast		(15)
.word    bank5_Enemy_Init_Routines_Ra  ; 0x15481 $9471 3B 96                   ;Ra			(16)
.word    bank5_Enemy_Init_Routines_Bubble; 0x15483 $9473 27 A1                 ;Big Bubble		(17)
.word    bank5_code_rts                ; 0x15485 $9475 AD 95                   ;Fokka - Orange (glitchy)	(18)
.word    bank5_code_rts                ; 0x15487 $9477 AD 95                   ;Fokka - Red		(19)
.word    bank5_code_rts                ; 0x15489 $9479 AD 95                   ;Fokka - Blue		(1A)
.word    bank5_code_rts                ; 0x1548b $947B AD 95                   ;?			(1B)
.word    bank5_code_rts                ; 0x1548d $947D AD 95                   ;??? Crash		(1C)
.word    bank5_code_rts                ; 0x1548f $947F AD 95                   ;Fokkeru			(1D)
.word    bank5_code_rts                ; 0x15491 $9481 AD 95                   ;Giant Bot		(1E)
.word    bank5_code_rts                ; 0x15493 $9483 AD 95                   ;? Crash			(1F)
.word    bank5_code_rts                ; 0x15495 $9485 AD 95                   ;Electric Barrier	(20)
.word    bank5_code_rts                ; 0x15497 $9487 AD 95                   ;? Crash			(21)
.word    bank5_Enemy_Init_Routines_Thunderbird; 0x15499 $9489 3B A3            ;Thunderbird		(22)
.word    bank5_Enemy_Init_Routines_Dark_Link_Battle_Trigger; 0x1549b $948B 96 97;Dark Link Battle Trigger	(23)
bank5_Pointer_table_for_Enemy_Routines1                                        ;
.word    bank7_Enemy_Routines1_Fairy   ; 0x1549d $948D 1E D9                   ;Fairy			(00)
.word    bank7_Enemy_Routines1_Red_Jar ; 0x1549f $948F 59 D9                   ;Palace Item		(01)
.word    bank7_Enemy_Routines1_Locked_Door; 0x154a1 $9491 91 D9                ;Locked Door		(02)
.word    bank7_Enemy_Routines1_Myu     ; 0x154a3 $9493 47 DA                   ;Myu			(03)
.word    bank7_Enemy_Routines1_Bot     ; 0x154a5 $9495 0C DA                   ;Bot			(04)
.word    bank5_Enemy_Routines1_HiddenRedJar; 0x154a7 $9497 21 A5               ;Hidden Red Jar		(05)
.word    bank7_Enemy_Routines1_Moa     ; 0x154a9 $9499 CF DA                   ;Moa (free roaming)	(06)
.word    bank7_Enemy_Routines1_Ache_and_Acheman; 0x154ab $949B 53 DB           ;Ache			(07)
.word    LAB98                         ; 0x154ad $949D 98 AB                   ;? Mega Glitch		(08)
.word    LABE9                         ; 0x154af $949F E9 AB                   ;? Fast Glitch		(09)
.word    bank7_Enemy_Routines1_Ache_and_Acheman; 0x154b1 $94A1 53 DB           ;Acheman			(0A)
.word    bank7_Enemy_Routines1_Raising_Bubbles; 0x154b3 $94A3 15 DC            ;Bubbles Generator (uses Energy Ball sprite)	(0B)
.word    bank7_Desert_Rocks_initialization_routine; 0x154b5 $94A5 4F DC        ;Rocks Generator (uses Energy Ball sprite)	(0C)
.word    bank7_Enemy_Routines1_Deeler  ; 0x154b7 $94A7 DF D6                   ;Red Deeler (glitched behavior)		(0D)
.word    bank7_Enemy_Routines1_Deeler  ; 0x154b9 $94A9 DF D6                   ;Blue Deeler (visual glitch only)	(0E)
.word    bank7_Enemy_Routines1_Bago_Bago_Generator; 0x154bb $94AB 8F D7        ;Fire Bago Bago Generator	(0F)
.word    bank7_Enemy_Routines1_Bago_Bago0; 0x154bd $94AD E1 D7                 ;Fire Bago Bago		(10)
.word    bank7_Enemy_Routines1_Bago_Bago1; 0x154bf $94AF 42 D8                 ;Fire Rope - Jumping	(11)
.word    bank7_Enemy_Routines1_Octorok ; 0x154c1 $94B1 88 D8                   ;Fire Rope - Moving	(11)
.word    bank7_Enemy_Routines1_Elevator; 0x154c3 $94B3 C2 D8                   ;Elevator		(13)
.word    bank5_Enemy_Routines1_Bubbles ; 0x154c5 $94B5 75 A0                   ;Bubble - Slow		(14)
.word    bank5_Enemy_Routines1_Bubbles ; 0x154c7 $94B7 75 A0                   ;Bubble - Fast		(15)
.word    bank5_Enemy_Routines1_Ra      ; 0x154c9 $94B9 67 96                   ;Ra			(16)
.word    bank5_Enemy_Routines1_Bubbles ; 0x154cb $94BB 75 A0                   ;Big Bubble		(17)
.word    bank5_Enemy_Routines1_Fokka   ; 0x154cd $94BD 2C 9D                   ;Fokka - Orange (glitchy)	(18)
.word    bank5_Enemy_Routines1_Fokka   ; 0x154cf $94BF 2C 9D                   ;Fokka - Red		(19)
.word    bank5_Enemy_Routines1_Fokka   ; 0x154d1 $94C1 2C 9D                   ;Fokka - Blue		(1A)
.word    L9E66                         ; 0x154d3 $94C3 66 9E                   ;?			(1B)
.word    L9E67                         ; 0x154d5 $94C5 67 9E                   ;??? Crash		(1C)
.word    bank5_Enemy_Routines1_Fokkeru ; 0x154d7 $94C7 6B 9E                   ;Fokkeru			(1D)
.word    bank5_Enemy_Routines1_Giant_Bot; 0x154d9 $94C9 80 A1                  ;Giant Bot		(1E)
.word    L0000                         ; 0x154db $94CB 00 00                   ;? Crash			(1F)
.word    bank5_Enemy_Routines1_Electric_Barrier; 0x154dd $94CD 34 A2           ;Electric Barrier	(20)
.word    L0000                         ; 0x154df $94CF 00 00                   ;? Crash			(21)
.word    bank5_Enemy_Routines1_Thunderbird; 0x154e1 $94D1 59 A3                ;Thunderbird		(22)
.word    bank5_Enemy_Routines1_Dark_Link_Battle_Trigger; 0x154e3 $94D3 C6 97   ;Dark Link Battle Trigger	(23)                      
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Attributes_Palette_Experience_Code_etc                             ;
;xx.. ....	Palette Code (0-3)                                                  ;
;..x. ....	No Damage from Sword (needs Fire)                                   ;
;...x ....	Steals Experience Points                                            ;
;.... xxxx	Experience Code (0-F)                                               ;
.byt    $40,$40,$40,$C4,$C4,$84,$D3,$C2; 0x154e5 $94D5 40 40 40 C4 C4 84 D3 C2 ;
.byt    $C0,$D0,$80,$00,$00,$82,$C3,$05; 0x154ed $94DD C0 D0 80 00 00 82 C3 05 ;
.byt    $95,$85,$85,$40,$C5,$C5,$55,$C0; 0x154f5 $94E5 95 85 85 40 C5 C5 55 C0 ;
.byt    $48,$88,$C9,$90,$90,$8B,$C0,$02; 0x154fd $94ED 48 88 C9 90 90 8B C0 02 ;
.byt    $02,$02,$CF,$4A                ; 0x15505 $94F5 02 02 CF 4A             ;
bank5_Enemy_Vulnerability_Damage_Codes                                         ;
;xx.. ....	Strength Code (0 = gives no items, 1 = weak, 2 = strong)            ;
;..x. ....	Immune to Flying Blade and Fire                                     ;
;...x ....	?                                                                   ;
;.... xxxx	Damage Code                                                         ;
.byt    $30,$30,$30,$43,$43,$63,$41,$40; 0x15509 $94F9 30 30 30 43 43 63 41 40 ;
.byt    $53,$53,$42,$50,$40,$40,$40,$33; 0x15511 $9501 53 53 42 50 40 40 40 33 ;
.byt    $43,$44,$44,$30,$03,$03,$43,$33; 0x15519 $9509 43 44 44 30 03 03 43 33 ;
.byt    $35,$35,$35,$00,$00,$34,$33,$01; 0x15521 $9511 35 35 35 00 00 34 33 01 ;
.byt    $36,$01,$35,$34                ; 0x15529 $9519 36 01 35 34             ;
bank5_Enemy_Size_Codes                                                         ;
.byt    $0F,$0F,$04                    ; 0x1552d $951D 0F 0F 04                ;
L9520                                                                          ;
.byt    $02,$01,$01,$01,$01,$01,$01,$81; 0x15530 $9520 02 01 01 01 01 01 01 81 ;
.byt    $01,$01,$01,$01,$01,$01,$01,$01; 0x15538 $9528 01 01 01 01 01 01 01 01 ;
.byt    $03,$01,$01,$01,$80,$80,$80,$80; 0x15540 $9530 03 01 01 01 80 80 80 80 ;
.byt    $00,$01,$80,$90,$00,$0D,$00,$00; 0x15548 $9538 00 01 80 90 00 0D 00 00 ;
.byt    $0E                            ; 0x15550 $9540 0E                      ;
bank5_Other_Enemy_Attributes_6E41_in_RAM                                       ;
;x... ....	Immune to Thunder Spell                                             ;
;.x.. ....	Regenerates                                                         ;
;..x. ....	? (never used)                                                      ;
;...x ....	Not hittable with sword                                             ;
;.... xxxx	? (0 or 6)                                                          ;
.byt    $96,$86,$96,$46,$46,$46,$06,$40; 0x15551 $9541 96 86 96 46 46 46 06 40 ;
.byt    $90,$86,$00,$90,$90,$06,$06,$90; 0x15559 $9549 90 86 00 90 90 06 06 90 ;
.byt    $06,$06,$06,$90,$C6,$C6,$C0,$C6; 0x15561 $9551 06 06 06 90 C6 C6 C0 C6 ;
.byt    $00,$00,$00,$00,$00,$00,$80,$06; 0x15569 $9559 00 00 00 00 00 00 80 06 ;
.byt    $96,$06,$26,$86                ; 0x15571 $9561 96 06 26 86             ;
; ---------------------------------------------------------------------------- ;
bank5_Pointer_table_for_Enemy_Routines2                                        ;
.word    bank7_Enemy_Routines2_Fairy   ; 0x15575 $9565 DD F0                   ;Fairy			(00)
.word    bank7_Enemy_Routines2_RedJar  ; 0x15577 $9567 12 F1                   ;Palace Item		(01)
.word    bank7_Enemy_Routines2_LockedDoor; 0x15579 $9569 3A F1                 ;Locked Door		(02)
.word    bank7_Enemy_Routines2_Myu     ; 0x1557b $956B C2 EF                   ;Myu			(03)
.word    bank7_Enemy_Routines2_Bot_and_Bit; 0x1557d $956D 91 EF                ;Bot			(04)
.word    bank5_code_rts                ; 0x1557f $956F AD 95                   ;Hidden Red Jar		(05)
.word    bank7_Enemy_Routines2_Moa     ; 0x15581 $9571 F2 EF                   ;Moa (free roaming)	(06)
.word    bank7_Enemy_Routines2_Ache_and_Acheman; 0x15583 $9573 7E F1           ;Ache			(07)
.word    bank7_Enemy_Routines2_unknown ; 0x15585 $9575 D2 EF                   ;? Mega Glitch		(08)
.word    bank7_Enemy_Routines2_unknown ; 0x15587 $9577 D2 EF                   ;? Fast Glitch		(09)
.word    bank7_Enemy_Routines2_Ache_and_Acheman; 0x15589 $9579 7E F1           ;Acheman			(0A)
.word    L0000                         ; 0x1558b $957B 00 00                   ;Bubbles Generator (uses Energy Ball
.word    L0000                         ; 0x1558d $957D 00 00                   ;Rocks Generator (uses Energy Ball s
.word    bank7_Enemy_Routines2_Deeler  ; 0x1558f $957F 27 F0                   ;Red Deeler (glitched behavior)		
.word    bank7_Enemy_Routines2_Deeler  ; 0x15591 $9581 27 F0                   ;Blue Deeler (visual glitch only)
.word    bank5_code_rts                ; 0x15593 $9583 AD 95                   ;Fire Bago Bago Generator	(0F)
.word    bank7_Enemy_Routines2_BagoBago; 0x15595 $9585 B9 F0                   ;Fire Bago Bago		(10)
.word    bank5_Enemy_Routines2_Fire_Rope__Jumping_or_Moving; 0x15597 $9587 A0 96;Fire Rope - Jumping	(11)
.word    bank5_Enemy_Routines2_Fire_Rope__Jumping_or_Moving; 0x15599 $9589 A0 96;Fire Rope - Moving	(11)
.word    bank7_Enemy_Routines2_Elevator; 0x1559b $958B 47 EF                   ;Elevator		(13)
.word    bank5_Enemy_Routines2_Bubble___Slow_or_Fast; 0x1559d $958D 2C 96      ;Bubble - Slow		(14)
.word    bank5_Enemy_Routines2_Bubble___Slow_or_Fast; 0x1559f $958F 2C 96      ;Bubble - Fast		(15)
.word    bank5_Enemy_Routines2_Ra      ; 0x155a1 $9591 95 96                   ;Ra			(16)
.word    bank5_Enemy_Routines2_Big_Bubble; 0x155a3 $9593 33 A1                 ;Big Bubble		(17)
.word    bank5_Enemy_Routines2_Fokka   ; 0x155a5 $9595 D4 9F                   ;Fokka - Orange (glitchy)	(18)
.word    bank5_Enemy_Routines2_Fokka   ; 0x155a7 $9597 D4 9F                   ;Fokka - Red		(19)
.word    bank5_Enemy_Routines2_Fokka   ; 0x155a9 $9599 D4 9F                   ;Fokka - Blue		(1A)
.word    L0000                         ; 0x155ab $959B 00 00                   ;?			(1B)
.word    bank5_code_rts                ; 0x155ad $959D AD 95                   ;??? Crash		(1C)
.word    bank5_Enemy_Routines2_Fokkeru ; 0x155af $959F 5B A0                   ;Fokkeru			(1D)
.word    bank5_Enemy_Routines2_Giant_Bot; 0x155b1 $95A1 A5 96                  ;Giant Bot		(1E)
.word    L0000                         ; 0x155b3 $95A3 00 00                   ;? Crash			(1F)
.word    L0000                         ; 0x155b5 $95A5 00 00                   ;Electric Barrier	(20)
.word    L0000                         ; 0x155b7 $95A7 00 00                   ;? Crash			(21)
.word    bank5_Enemy_Routines2_Thunderbird; 0x155b9 $95A9 BF 9E                ;Thunderbird		(22)
.word    bank5_Enemy_Routines2_Dark_Link_Battle_Trigger; 0x155bb $95AB 72 A4   ;Dark Link Battle Trigger	(23)
; ---------------------------------------------------------------------------- ;
bank5_code_rts                                                                 ;
rts                                    ; 0x155bd $95AD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_95AE                                                               ;
.byt    $CE,$CE,$84,$3F,$53,$52,$3F,$3F; 0x155be $95AE CE CE 84 3F 53 52 3F 3F ;
.byt    $00,$03,$00,$01,$01,$00,$01,$01; 0x155c6 $95B6 00 03 00 01 01 00 01 01 ;
.byt    $01,$00,$00,$00,$18,$9D,$FB,$9C; 0x155ce $95BE 01 00 00 00 18 9D FB 9C ;
.byt    $06,$9D,$18,$9D,$FB,$9C,$FB,$9C; 0x155d6 $95C6 06 9D 18 9D FB 9C FB 9C ;
.byt    $CE,$9C,$18,$9D,$AD,$95,$41,$43; 0x155de $95CE CE 9C 18 9D AD 95 41 43 ;
.byt    $49,$4B,$41,$43,$45,$47,$4D,$43; 0x155e6 $95D6 49 4B 41 43 45 47 4D 43 ;
.byt    $51,$4B,$4D,$43,$4F,$47,$41,$43; 0x155ee $95DE 51 4B 4D 43 4F 47 41 43 ;
.byt    $2D,$2F,$57,$59,$53,$55,$F5,$5B; 0x155f6 $95E6 2D 2F 57 59 53 55 F5 5B ;
.byt    $35,$37,$E0,$E2,$E4,$E6,$E0,$E2; 0x155fe $95EE 35 37 E0 E2 E4 E6 E0 E2 ;
.byt    $EC,$EE,$E8,$EA,$E4,$E6,$E8,$EA; 0x15606 $95F6 EC EE E8 EA E4 E6 E8 EA ;
.byt    $EC,$EE,$11,$13,$17,$19,$1D,$1F; 0x1560e $95FE EC EE 11 13 17 19 1D 1F ;
.byt    $21,$23,$25,$27,$71,$73,$75,$77; 0x15616 $9606 21 23 25 27 71 73 75 77 ;
.byt    $3D,$3D,$F2,$F4,$F8,$FA,$07,$07; 0x1561e $960E 3D 3D F2 F4 F8 FA 07 07 ;
.byt    $09,$09,$05,$05,$0B,$0D,$61,$33; 0x15626 $9616 09 09 05 05 0B 0D 61 33 ;
.byt    $35                            ; 0x1562e $961E 35                      ;
L961F                                                                          ;
.byt    $37,$E8,$E8,$F8,$F8            ; 0x1562f $961F 37 E8 E8 F8 F8          ;
L9624                                                                          ;
.byt    $08                            ; 0x15634 $9624 08                      ;
L9625                                                                          ;
.byt    $FF,$FF,$FF,$FF,$00            ; 0x15635 $9625 FF FF FF FF 00          ;
L962A                                                                          ;
.byt    $10,$F0                        ; 0x1563a $962A 10 F0                   ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Bubble___Slow_or_Fast                                    ;
lda      #$02                          ; 0x1563c $962C A9 02                   ;;A = #$02 0000_0010
sta      $02                           ; 0x1563e $962E 85 02                   ;
lda      $12                           ; 0x15640 $9630 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x15642 $9632 29 03                   ;;Keep Bits:0000_0011
sta      $03                           ; 0x15644 $9634 85 03                   ;
ldx      #$5A                          ; 0x15646 $9636 A2 5A                   ;;X = #$5a 0101_1010
jmp      bank7_code49                  ; 0x15648 $9638 4C 03 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Init_Routines_Ra                                                   ;
lda      $29                           ; 0x1564b $963B A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
sbc      #$30                          ; 0x1564d $963D E9 30                   ;
sta      $2A,x                         ; 0x1564f $963F 95 2A                   ;; Enemy Y Position
ldy      $5F                           ; 0x15651 $9641 A4 5F                   ;; Link's facing direction
lda      $072C                         ; 0x15653 $9643 AD 2C 07                ;; Scrolling Offset Low Byte
adc      L965E,y                       ; 0x15656 $9646 79 5E 96                ;
sta      $4E,x                         ; 0x15659 $9649 95 4E                   ;; Enemy X Position (low byte)
lda      $072A                         ; 0x1565b $964B AD 2A 07                ;;link Pagepos SideScroll		; Scrolling Offset High Byte
adc      #$00                          ; 0x1565e $964E 69 00                   ;
sta      $3C,x                         ; 0x15660 $9650 95 3C                   ;; Enemy X Position (high byte)
lda      L9660,y                       ; 0x15662 $9652 B9 60 96                ;
sta      $71,x                         ; 0x15665 $9655 95 71                   ;; Enemy X Velocity
jsr      LDAC7                         ; 0x15667 $9657 20 C7 DA                ;
sta      $AF,x                         ; 0x1566a $965A 95 AF                   ;; Various enemy state variables
L965E     = * + $0002                                                          ;
jmp      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1566c $965C 4C 91 DC;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table11                                                                  ;
.byt    $EF                            ; 0x1566f $965F EF                      ;
L9660                                                                          ;
.byt    $00,$E8,$18                    ; 0x15670 $9660 00 E8 18                ;
L9663                                                                          ;
.byt    $02,$FE                        ; 0x15673 $9663 02 FE                   ;
L9665                                                                          ;
.byt    $38,$C8                        ; 0x15675 $9665 38 C8                   ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines1_Ra                                                       ;
lda      $C9                           ; 0x15677 $9667 A5 C9                   ;
and      #$0C                          ; 0x15679 $9669 29 0C                   ; keep bits xx.. ....
beq      L9670                         ; 0x1567b $966B F0 03                   ;
jsr      bank5_Enemy_Init_Routines_Ra  ; 0x1567d $966D 20 3B 96                ;
L9670                                                                          ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x15680 $9670 20 02 DA                ;
lda      $AF,x                         ; 0x15683 $9673 B5 AF                   ;; Various enemy state variables
and      #$01                          ; 0x15685 $9675 29 01                   ; keep bits .... ...x
tay                                    ; 0x15687 $9677 A8                      ;
lda      $057E,x                       ; 0x15688 $9678 BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
clc                                    ; 0x1568b $967B 18                      ;
adc      L9663,y                       ; 0x1568c $967C 79 63 96                ;
sta      $057E,x                       ; 0x1568f $967F 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
cmp      L9665,y                       ; 0x15692 $9682 D9 65 96                ;
bne      L9689                         ; 0x15695 $9685 D0 02                   ;
inc      $AF,x                         ; 0x15697 $9687 F6 AF                   ;; Various enemy state variables
L9689                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x15699 $9689 20 C8 DE                ;
L968D     = * + $0001                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1569c $968C 20 B8 DE              ;
jsr      LDE40                         ; 0x1569f $968F 20 40 DE                ;
jmp      bank7_Link_Collision_Detection; 0x156a2 $9692 4C C1 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Ra                                                       ;
ldx      #$4A                          ; 0x156a5 $9695 A2 4A                   ; X = 4A
lda      $02                           ; 0x156a7 $9697 A5 02                   ;
eor      #$03                          ; 0x156a9 $9699 49 03                   ; flip bits .... ..xx
sta      $02                           ; 0x156ab $969B 85 02                   ;
jmp      LF0D7                         ; 0x156ad $969D 4C D7 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Fire_Rope__Jumping_or_Moving                             ;
lda      #$46                          ; 0x156b0 $96A0 A9 46                   ;;A = #$46 0100_0110
jmp      LF0CC                         ; 0x156b2 $96A2 4C CC F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Giant_Bot                                                ;
ldy      #$50                          ; 0x156b5 $96A5 A0 50                   ;;Y = #$50 0101_0000
.byt    $A9                            ; 0x156b7 $96A7 A9                      ;
L96A8                                                                          ;
.byt    $02                            ; 0x156b8 $96A8 02                      ;
sta      $02                           ; 0x156b9 $96A9 85 02                   ;
ldx      #$3C                          ; 0x156bb $96AB A2 3C                   ;;X = #$3c 0011_1100
jsr      LF1F4                         ; 0x156bd $96AD 20 F4 F1                ;
jsr      LF0D7                         ; 0x156c0 $96B0 20 D7 F0                ;
lda      $C9                           ; 0x156c3 $96B3 A5 C9                   ;
pha                                    ; 0x156c5 $96B5 48                      ;
asl                                    ; 0x156c6 $96B6 0A                      ;
asl                                    ; 0x156c7 $96B7 0A                      ;
and      #$0F                          ; 0x156c8 $96B8 29 0F                   ;;Keep Bits:0000_1111
sta      $C9                           ; 0x156ca $96BA 85 C9                   ;
lda      $2A,x                         ; 0x156cc $96BC B5 2A                   ;; Enemy Y Position
sta      L0000                         ; 0x156ce $96BE 85 00                   ;
lda      $01                           ; 0x156d0 $96C0 A5 01                   ;
clc                                    ; 0x156d2 $96C2 18                      ;
adc      #$10                          ; 0x156d3 $96C3 69 10                   ;
sta      $01                           ; 0x156d5 $96C5 85 01                   ;
dec      $02                           ; 0x156d7 $96C7 C6 02                   ;
ldx      #$3C                          ; 0x156d9 $96C9 A2 3C                   ;;X = #$3c 0011_1100
jsr      LF1F4                         ; 0x156db $96CB 20 F4 F1                ;
lda      L0000                         ; 0x156de $96CE A5 00                   ;
sec                                    ; 0x156e0 $96D0 38                      ;
sbc      $D9                           ; 0x156e1 $96D1 E5 D9                   ;; Thunder Spell modifier ?
jsr      LF0D7                         ; 0x156e3 $96D3 20 D7 F0                ;
lda      $2A,x                         ; 0x156e6 $96D6 B5 2A                   ;; Enemy Y Position
sta      $0270                         ; 0x156e8 $96D8 8D 70 02                ;
sta      $0278                         ; 0x156eb $96DB 8D 78 02                ;
adc      #$10                          ; 0x156ee $96DE 69 10                   ;
sta      $0274                         ; 0x156f0 $96E0 8D 74 02                ;
sta      $027C                         ; 0x156f3 $96E3 8D 7C 02                ;
lda      $12                           ; 0x156f6 $96E6 A5 12                   ;; Frame Counter (ascending)
and      #$10                          ; 0x156f8 $96E8 29 10                   ;;Keep Bits:0001_0000
lsr                                    ; 0x156fa $96EA 4A                      ;
lsr                                    ; 0x156fb $96EB 4A                      ;
lsr                                    ; 0x156fc $96EC 4A                      ;
lsr                                    ; 0x156fd $96ED 4A                      ;
sta      $05                           ; 0x156fe $96EE 85 05                   ;
adc      $CD                           ; 0x15700 $96F0 65 CD                   ;
sec                                    ; 0x15702 $96F2 38                      ;
sbc      #$08                          ; 0x15703 $96F3 E9 08                   ;
sta      $0273                         ; 0x15705 $96F5 8D 73 02                ;
sta      $0277                         ; 0x15708 $96F8 8D 77 02                ;
lda      $CD                           ; 0x1570b $96FB A5 CD                   ;
clc                                    ; 0x1570d $96FD 18                      ;
adc      #$20                          ; 0x1570e $96FE 69 20                   ;
sec                                    ; 0x15710 $9700 38                      ;
sbc      $05                           ; 0x15711 $9701 E5 05                   ;
sta      $027B                         ; 0x15713 $9703 8D 7B 02                ;
sta      $027F                         ; 0x15716 $9706 8D 7F 02                ;
lda      #$F0                          ; 0x15719 $9709 A9 F0                   ;;A = #$f0 1111_0000
sta      $0271                         ; 0x1571b $970B 8D 71 02                ;
sta      $0279                         ; 0x1571e $970E 8D 79 02                ;
lda      #$F6                          ; 0x15721 $9711 A9 F6                   ;;A = #$f6 1111_0110
sta      $0275                         ; 0x15723 $9713 8D 75 02                ;
sta      $027D                         ; 0x15726 $9716 8D 7D 02                ;
lda      $0252                         ; 0x15729 $9719 AD 52 02                ;
sta      $0272                         ; 0x1572c $971C 8D 72 02                ;
sta      $0276                         ; 0x1572f $971F 8D 76 02                ;
ora      #$40                          ; 0x15732 $9722 09 40                   ;;Set Bits:0100_0000
sta      $027A                         ; 0x15734 $9724 8D 7A 02                ;
sta      $027E                         ; 0x15737 $9727 8D 7E 02                ;
lda      $4E,x                         ; 0x1573a $972A B5 4E                   ;; Enemy X Position (low byte)
pha                                    ; 0x1573c $972C 48                      ;
sec                                    ; 0x1573d $972D 38                      ;
sbc      #$08                          ; 0x1573e $972E E9 08                   ;
sta      $4E,x                         ; 0x15740 $9730 95 4E                   ;; Enemy X Position (low byte)
lda      $3C,x                         ; 0x15742 $9732 B5 3C                   ;; Enemy X Position (high byte)
pha                                    ; 0x15744 $9734 48                      ;
sbc      #$00                          ; 0x15745 $9735 E9 00                   ;
sta      $3C,x                         ; 0x15747 $9737 95 3C                   ;; Enemy X Position (high byte)
inx                                    ; 0x15749 $9739 E8                      ;
ldy      #$01                          ; 0x1574a $973A A0 01                   ;;Y = #$01 0000_0001
jsr      LF2D3                         ; 0x1574c $973C 20 D3 F2                ;
ldx      $10                           ; 0x1574f $973F A6 10                   ;; used as monster x register ;draw boss hp bar
and      #$84                          ; 0x15751 $9741 29 84                   ;;Keep Bits:1000_0100
beq      L975A                         ; 0x15753 $9743 F0 15                   ;
bpl      L974F                         ; 0x15755 $9745 10 08                   ;
ldy      #$F8                          ; 0x15757 $9747 A0 F8                   ;;Y = #$f8 1111_1000
sty      $0270                         ; 0x15759 $9749 8C 70 02                ;
sty      $0274                         ; 0x1575c $974C 8C 74 02                ;
L974F                                                                          ;
asl                                    ; 0x1575f $974F 0A                      ;
beq      L975A                         ; 0x15760 $9750 F0 08                   ;
ldy      #$F8                          ; 0x15762 $9752 A0 F8                   ;;Y = #$f8 1111_1000
sty      $0278                         ; 0x15764 $9754 8C 78 02                ;
sty      $027C                         ; 0x15767 $9757 8C 7C 02                ;
L975A                                                                          ;
pla                                    ; 0x1576a $975A 68                      ;
sta      $3C,x                         ; 0x1576b $975B 95 3C                   ;; Enemy X Position (high byte)
pla                                    ; 0x1576d $975D 68                      ;
sta      $4E,x                         ; 0x1576e $975E 95 4E                   ;; Enemy X Position (low byte)
pla                                    ; 0x15770 $9760 68                      ;
sta      $C9                           ; 0x15771 $9761 85 C9                   ;
rts                                    ; 0x15773 $9763 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9764                                                                          ;
lda      $12                           ; 0x15774 $9764 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x15776 $9766 4A                      ;
bcs      L9795                         ; 0x15777 $9767 B0 2C                   ;
jsr      bank7_Spawn_New_Projectile    ; 0x15779 $9769 20 CE DB                ;
bcs      L9795                         ; 0x1577c $976C B0 27                   ;
lda      #$0C                          ; 0x1577e $976E A9 0C                   ;;A = #$0c 0000_1100
sta      $87,y                         ; 0x15780 $9770 99 87 00                ;
lda      $051B,x                       ; 0x15783 $9773 BD 1B 05                ;; Randomizer
and      #$1F                          ; 0x15786 $9776 29 1F                   ;;Keep Bits:0001_1111
adc      $2A,x                         ; 0x15788 $9778 75 2A                   ;; Enemy Y Position
sbc      #$06                          ; 0x1578a $977A E9 06                   ;
sta      $30,y                         ; 0x1578c $977C 99 30 00                ;
lda      $051C,x                       ; 0x1578f $977F BD 1C 05                ;
and      #$0F                          ; 0x15792 $9782 29 0F                   ;;Keep Bits:0000_1111
sbc      #$08                          ; 0x15794 $9784 E9 08                   ;
adc      $4E,x                         ; 0x15796 $9786 75 4E                   ;; Enemy X Position (low byte)
sta      $54,y                         ; 0x15798 $9788 99 54 00                ;
lda      $3C,x                         ; 0x1579b $978B B5 3C                   ;; Enemy X Position (high byte)
sta      $42,y                         ; 0x1579d $978D 99 42 00                ;
lda      #$10                          ; 0x157a0 $9790 A9 10                   ;;A = #$10 0001_0000
sta      $77,y                         ; 0x157a2 $9792 99 77 00                ;
L9795                                                                          ;
rts                                    ; 0x157a5 $9795 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Init_Routines_Dark_Link_Battle_Trigger                             ;
lda      #$23                          ; 0x157a6 $9796 A9 23                   ;;A = #$23 0010_0011
sta      $A1                           ; 0x157a8 $9798 85 A1                   ;;monster monID		a1,a2,a3,a4,a5,a6	1=item,?15=teacher(when combined with something else)
lda      #$08                          ; 0x157aa $979A A9 08                   ;;A = #$08 0000_1000
sta      $C2                           ; 0x157ac $979C 85 C2                   ;;monster monHP		c2,c3,c4,c5,c6,c7
lda      $4E,x                         ; 0x157ae $979E B5 4E                   ;; Enemy X Position (low byte)
sta      $4E                           ; 0x157b0 $97A0 85 4E                   ;;monster x	4e,4f,50,51,52,53
lda      $2A,x                         ; 0x157b2 $97A2 B5 2A                   ;; Enemy Y Position
sta      $2A                           ; 0x157b4 $97A4 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
lda      $3C,x                         ; 0x157b6 $97A6 B5 3C                   ;; Enemy X Position (high byte)
sta      $3C                           ; 0x157b8 $97A8 85 3C                   ;;monster x*255	3c,3d,3e,3f,40,41
lda      #$02                          ; 0x157ba $97AA A9 02                   ;;A = #$02 0000_0010
sta      $0753                         ; 0x157bc $97AC 8D 53 07                ;
lsr                                    ; 0x157bf $97AF 4A                      ;
sta      $1A                           ; 0x157c0 $97B0 85 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
sta      $B6                           ; 0x157c2 $97B2 85 B6                   ;;monster exists		b6,b7,b8,b9,ba,bb	exists:0=no,1=yes,2=kill/give exp;set to 10 will make link fall down 
lsr                                    ; 0x157c4 $97B4 4A                      ;
sta      $B6,x                         ; 0x157c5 $97B5 95 B6                   ;; Generated Enemy Slot
sta      $61                           ; 0x157c7 $97B7 85 61                   ;
sta      $62                           ; 0x157c9 $97B9 85 62                   ;
sta      $63                           ; 0x157cb $97BB 85 63                   ;
sta      $64                           ; 0x157cd $97BD 85 64                   ;
lda      $BC,x                         ; 0x157cf $97BF B5 BC                   ;; Generated Enemy Y Position ?
sta      $BC                           ; 0x157d1 $97C1 85 BC                   ;;monster sram pointer?	bc,bd,be,bf,c0,c1	LDY bc,x  ; then LDA ($D6),Y   if bit7 is set it means monster killed?
rts                                    ; 0x157d3 $97C3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
.byt    $03                            ; 0x157d4 $97C4 03                      ;
.byt    $FD                            ; 0x157d5 $97C5 FD                      ;
bank5_Enemy_Routines1_Dark_Link_Battle_Trigger                                 ;
jsr      LA4C4                         ; 0x157d6 $97C6 20 C4 A4                ;
lda      $63                           ; 0x157d9 $97C9 A5 63                   ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x157db $97CB 20 85 D3;
bank5_pointer_table_dark_link                                                  ;
.word    L97DE                         ; 0x157de $97CE DE 97                   ;00 setup/init?
.word    L980D                         ; 0x157e0 $97D0 0D 98                   ;01 display triforce and fadeout
.word    L983E                         ; 0x157e2 $97D2 3E 98                   ;02 flash screen and palette change (to black/purple)
.word    L987B                         ; 0x157e4 $97D4 7B 98                   ;03 spawn the dark link
.word    L9B3A                         ; 0x157e6 $97D6 3A 9B                   ;
.word    L9B53                         ; 0x157e8 $97D8 53 9B                   ;
.word    L9B91                         ; 0x157ea $97DA 91 9B                   ;
.word    L9BA8                         ; 0x157ec $97DC A8 9B                   ;
; ---------------------------------------------------------------------------- ;
L97DE                                                                          ;
inc      $AF                           ; 0x157ee $97DE E6 AF                   ;;monster itemID/ai?	af,b0,b1,b2,b3,b4
jsr      bank7_Display                 ; 0x157f0 $97E0 20 11 EF                ;
lda      $072A                         ; 0x157f3 $97E3 AD 2A 07                ;;link Pagepos SideScroll		; Scrolling Offset High Byte
beq      L980C                         ; 0x157f6 $97E6 F0 24                   ;
inc      $0728                         ; 0x157f8 $97E8 EE 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
lda      #$00                          ; 0x157fb $97EB A9 00                   ;;A = #$00 0000_0000
sta      $70                           ; 0x157fd $97ED 85 70                   ;;hspeed (Link's horizontal velocity); Link's X Velocity	; Player X Delta (E8-00, 00-18)
lda      $A7                           ; 0x157ff $97EF A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$04                          ; 0x15801 $97F1 29 04                   ;;Keep Bits:0000_0100
beq      L980C                         ; 0x15803 $97F3 F0 17                   ;
lda      #$A0                          ; 0x15805 $97F5 A9 A0                   ;;A = #$a0 1010_0000
sta      $29                           ; 0x15807 $97F7 85 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
lda      #$03                          ; 0x15809 $97F9 A9 03                   ;;A = #$03 0000_0011
sta      $80                           ; 0x1580b $97FB 85 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
lsr                                    ; 0x1580d $97FD 4A                      ;
sta      $9F                           ; 0x1580e $97FE 85 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
asl                                    ; 0x15810 $9800 0A                      ;
sta      $A0                           ; 0x15811 $9801 85 A0                   ;
lda      #$FF                          ; 0x15813 $9803 A9 FF                   ;;A = #$ff 1111_1111
L9805                                                                          ;
inc      $DE                           ; 0x15815 $9805 E6 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
L9807                                                                          ;
sta      $0504                         ; 0x15817 $9807 8D 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
L980A                                                                          ;
inc      $63                           ; 0x1581a $980A E6 63                   ;
L980C                                                                          ;
rts                                    ; 0x1581c $980C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L980D                                                                          ;
lda      $0504                         ; 0x1581d $980D AD 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
bne      L982C                         ; 0x15820 $9810 D0 1A                   ;
lda      #$C0                          ; 0x15822 $9812 A9 C0                   ;;A = #$c0 1100_0000
sta      $074B                         ; 0x15824 $9814 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      #$04                          ; 0x15827 $9817 A9 04                   ;;A = #$04 0000_0100
sta      $EC                           ; 0x15829 $9819 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$14                          ; 0x1582b $981B A9 14                   ;;A = #$14 0001_0100
sta      $0751                         ; 0x1582d $981D 8D 51 07                ;
lda      $4D                           ; 0x15830 $9820 A5 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
sta      $4E                           ; 0x15832 $9822 85 4E                   ;;monster x	4e,4f,50,51,52,53
lda      $29                           ; 0x15834 $9824 A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
sta      $2A                           ; 0x15836 $9826 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
lda      #$FF                          ; 0x15838 $9828 A9 FF                   ;;A = #$ff 1111_1111
bne      L9807                         ; 0x1583a $982A D0 DB                   ;
L982C                                                                          ;
cmp      #$50                          ; 0x1583c $982C C9 50                   ;
bcc      L980C                         ; 0x1583e $982E 90 DC                   ;
cmp      #$C0                          ; 0x15840 $9830 C9 C0                   ;
bcs      L9839                         ; 0x15842 $9832 B0 05                   ;
lsr                                    ; 0x15844 $9834 4A                      ;
bcc      L980C                         ; 0x15845 $9835 90 D5                   ;
bcs      L983B                         ; 0x15847 $9837 B0 02                   ;
L9839                                                                          ;
inc      $AF,x                         ; 0x15849 $9839 F6 AF                   ;; Various enemy state variables
L983B                                                                          ;
jmp      bank7_Display                 ; 0x1584b $983B 4C 11 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L983E                                                                          ;
lda      $074B                         ; 0x1584e $983E AD 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
cmp      #$81                          ; 0x15851 $9841 C9 81                   ;
bne      L9852                         ; 0x15853 $9843 D0 0D                   ;
lda      #$0D                          ; 0x15855 $9845 A9 0D                   ;;A = #$0d 0000_1101
L9847                                                                          ;
sta      $0725                         ; 0x15857 $9847 8D 25 07                ;; PPU Macro Selector	
lda      #$80                          ; 0x1585a $984A A9 80                   ;;A = #$80 1000_0000
sta      $EB                           ; 0x1585c $984C 85 EB                   ;; Music; Music
lda      #$04                          ; 0x1585e $984E A9 04                   ;;A = #$04 0000_0100
sta      $EC                           ; 0x15860 $9850 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
L9852                                                                          ;
lda      $0504                         ; 0x15862 $9852 AD 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
cmp      #$80                          ; 0x15865 $9855 C9 80                   ;
bcc      L9864                         ; 0x15867 $9857 90 0B                   ;
bne      L980C                         ; 0x15869 $9859 D0 B1                   ;
lda      #$FC                          ; 0x1586b $985B A9 FC                   ;;A = #$fc 1111_1100
sta      $057E                         ; 0x1586d $985D 8D 7E 05                ;;y velocity	57e,57f,580,581,582,583		57d=link
lda      #$13                          ; 0x15870 $9860 A9 13                   ;;A = #$13 0001_0011
sta      $71                           ; 0x15872 $9862 85 71                   ;;mon x velocity	71,72,73,74,75,76
L9864                                                                          ;
jsr      L9A0F                         ; 0x15874 $9864 20 0F 9A                ;
lda      $2A                           ; 0x15877 $9867 A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
cmp      #$A0                          ; 0x15879 $9869 C9 A0                   ;
bcc      L9874                         ; 0x1587b $986B 90 07                   ;
inc      $63                           ; 0x1587d $986D E6 63                   ;
lda      #$70                          ; 0x1587f $986F A9 70                   ;;A = #$70 0111_0000
sta      $0505                         ; 0x15881 $9871 8D 05 05                ;
L9874                                                                          ;
lda      #$0A                          ; 0x15884 $9874 A9 0A                   ;;A = #$0a 0000_1010
sta      $81                           ; 0x15886 $9876 85 81                   ;
jmp      L9A77                         ; 0x15888 $9878 4C 77 9A                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L987B                                                                          ;
ldy      $0505                         ; 0x1588b $987B AC 05 05                ;
beq      L988E                         ; 0x1588e $987E F0 0E                   ;
dey                                    ; 0x15890 $9880 88                      ;
bne      L9887                         ; 0x15891 $9881 D0 04                   ;
lda      #$40                          ; 0x15893 $9883 A9 40                   ;;A = #$40 0100_0000
sta      $EB                           ; 0x15895 $9885 85 EB                   ;; Music; Music
L9887                                                                          ;
lda      #$06                          ; 0x15897 $9887 A9 06                   ;;A = #$06 0000_0110
sta      $81                           ; 0x15899 $9889 85 81                   ;
jmp      L9A77                         ; 0x1589b $988B 4C 77 9A                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L988E                                                                          ;
lda      $07FB                         ; 0x1589e $988E AD FB 07                ;
bne      L9897                         ; 0x158a1 $9891 D0 04                   ;
lda      #$40                          ; 0x158a3 $9893 A9 40                   ;;A = #$40 0100_0000
sta      $EB                           ; 0x158a5 $9895 85 EB                   ;; Music; Music
L9897                                                                          ;
sty      $DE                           ; 0x158a7 $9897 84 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
lda      #$01                          ; 0x158a9 $9899 A9 01                   ;;A = #$01 0000_0001
jsr      LA4E9                         ; 0x158ab $989B 20 E9 A4                ;
lda      $050D                         ; 0x158ae $989E AD 0D 05                ;
beq      L98D3                         ; 0x158b1 $98A1 F0 30                   ;
bpl      L98AD                         ; 0x158b3 $98A3 10 08                   ;
and      #$0F                          ; 0x158b5 $98A5 29 0F                   ;;Keep Bits:0000_1111
bne      L98AD                         ; 0x158b7 $98A7 D0 04                   ;
lda      #$01                          ; 0x158b9 $98A9 A9 01                   ;;A = #$01 0000_0001
sta      $E9                           ; 0x158bb $98AB 85 E9                   ;
L98AD                                                                          ;
lda      #$0A                          ; 0x158bd $98AD A9 0A                   ;;A = #$0a 0000_1010
sta      $81                           ; 0x158bf $98AF 85 81                   ;
jsr      L9A0F                         ; 0x158c1 $98B1 20 0F 9A                ;
lda      $2A                           ; 0x158c4 $98B4 A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
cmp      #$F0                          ; 0x158c6 $98B6 C9 F0                   ;
bcc      L98D0                         ; 0x158c8 $98B8 90 16                   ;
lda      #$B0                          ; 0x158ca $98BA A9 B0                   ;;A = #$b0 1011_0000
sta      $074B                         ; 0x158cc $98BC 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      #$04                          ; 0x158cf $98BF A9 04                   ;;A = #$04 0000_0100
sta      $EC                           ; 0x158d1 $98C1 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$0F                          ; 0x158d3 $98C3 A9 0F                   ;;A = #$0f 0000_1111
sta      $0751                         ; 0x158d5 $98C5 8D 51 07                ;
lda      #$80                          ; 0x158d8 $98C8 A9 80                   ;;A = #$80 1000_0000
sta      $EB                           ; 0x158da $98CA 85 EB                   ;; Music; Music
lsr                                    ; 0x158dc $98CC 4A                      ;
jsr      L9807                         ; 0x158dd $98CD 20 07 98                ;
L98D0                                                                          ;
jmp      L9A77                         ; 0x158e0 $98D0 4C 77 9A                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L98D3                                                                          ;
jsr      bank5_dark_link_AI_movement_maybe0; 0x158e3 $98D3 20 EB 98            ;
jsr      L99A4                         ; 0x158e6 $98D6 20 A4 99                ;load from timer variable and set $71 (movementX speed) for darklink
jsr      L99B8                         ; 0x158e9 $98D9 20 B8 99                ;make $71's effect happen now among many other things
jsr      L9A50                         ; 0x158ec $98DC 20 50 9A                ;
jsr      L9A77                         ; 0x158ef $98DF 20 77 9A                ;show/draw dark link
jsr      L9A8D                         ; 0x158f2 $98E2 20 8D 9A                ;collision detection of link vs dark link, to detect damage (for both) for sword
jsr      LE4D9                         ; 0x158f5 $98E5 20 D9 E4                ;collision detection of link vs dark link, to detect damage when link steps into dark link
jmp      bank7_Link_Collision_Detection; 0x158f8 $98E8 4C C1 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_dark_link_AI_movement_maybe0                                             ;
lda      $4E                           ; 0x158fb $98EB A5 4E                   ;;monster x	4e,4f,50,51,52,53
sbc      $4D                           ; 0x158fd $98ED E5 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
bpl      L98F3                         ; 0x158ff $98EF 10 02                   ;
eor      #$FF                          ; 0x15901 $98F1 49 FF                   ;;Flip Bits:1111_1111
L98F3                                                                          ;
adc      #$03                          ; 0x15903 $98F3 69 03                   ;
lsr                                    ; 0x15905 $98F5 4A                      ;
lsr                                    ; 0x15906 $98F6 4A                      ;
lsr                                    ; 0x15907 $98F7 4A                      ;
lsr                                    ; 0x15908 $98F8 4A                      ;
cmp      #$06                          ; 0x15909 $98F9 C9 06                   ;
bcs      bank5_dark_link_AI_movement_maybe1; 0x1590b $98FB B0 0F               ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1590d $98FD 20 85 D3;
bank5_dark_link_AI_movement_maybe__table                                       ;
.word    L9911                         ; 0x15910 $9900 11 99                   ;
.word    L9911                         ; 0x15912 $9902 11 99                   ;
.word    L9989                         ; 0x15914 $9904 89 99                   ;
.word    L9989                         ; 0x15916 $9906 89 99                   ;
.word    L9989                         ; 0x15918 $9908 89 99                   ;
.word    L9989                         ; 0x1591a $990A 89 99                   ;
; ---------------------------------------------------------------------------- ;
bank5_dark_link_AI_movement_maybe1                                             ;
lda      #$01                          ; 0x1591c $990C A9 01                   ;;A = #$01 0000_0001
sta      $18                           ; 0x1591e $990E 85 18                   ;;dark link:	$18	0=duck,1=stand
rts                                    ; 0x15920 $9910 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9911                                                                          ;
lda      $62                           ; 0x15921 $9911 A5 62                   ;
bne      L994E                         ; 0x15923 $9913 D0 39                   ;
lda      $F5                           ; 0x15925 $9915 A5 F5                   ;; Controller 1 Buttons Pressed
and      #$40                          ; 0x15927 $9917 29 40                   ;;Keep Bits:0100_0000
beq      L994F                         ; 0x15929 $9919 F0 34                   ;
lda      $17                           ; 0x1592b $991B A5 17                   ;; Link's Shield Position; Link's Shield Position (0 = Link ducked)
sta      $18                           ; 0x1592d $991D 85 18                   ;;dark link:	$18	0=duck,1=stand
lda      $051B                         ; 0x1592f $991F AD 1B 05                ;
and      #$07                          ; 0x15932 $9922 29 07                   ;;Keep Bits:0000_0111
.byt    $D0                            ; 0x15934 $9924 D0                      ;
L9925                                                                          ;
and      #$8D                          ; 0x15935 $9925 29 8D                   ;;Keep Bits:1000_1101
.byt    $E7                            ; 0x15937 $9927 E7                      ;
.byt    $03                            ; 0x15938 $9928 03                      ;
sta      $0401                         ; 0x15939 $9929 8D 01 04                ;
L992C                                                                          ;
ldy      #$00                          ; 0x1593c $992C A0 00                   ;;Y = #$00 0000_0000
lda      $CD                           ; 0x1593e $992E A5 CD                   ;
adc      #$0C                          ; 0x15940 $9930 69 0C                   ;
bpl      L9935                         ; 0x15942 $9932 10 01                   ;
iny                                    ; 0x15944 $9934 C8                      ;
L9935                                                                          ;
lda      $051C                         ; 0x15945 $9935 AD 1C 05                ;
and      #$03                          ; 0x15948 $9938 29 03                   ;;Keep Bits:0000_0011
bne      L993E                         ; 0x1594a $993A D0 02                   ;
iny                                    ; 0x1594c $993C C8                      ;
iny                                    ; 0x1594d $993D C8                      ;
L993E                                                                          ;
lda      L999E,y                       ; 0x1594e $993E B9 9E 99                ;
sta      $71                           ; 0x15951 $9941 85 71                   ;;mon x velocity	71,72,73,74,75,76
lda      #$FC                          ; 0x15953 $9943 A9 FC                   ;;A = #$fc 1111_1100
sta      $057E                         ; 0x15955 $9945 8D 7E 05                ;;y velocity	57e,57f,580,581,582,583		57d=link
lda      #$01                          ; 0x15958 $9948 A9 01                   ;;A = #$01 0000_0001
sta      $62                           ; 0x1595a $994A 85 62                   ;
sta      $18                           ; 0x1595c $994C 85 18                   ;;dark link:	$18	0=duck,1=stand
L994E                                                                          ;
rts                                    ; 0x1595e $994E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L994F                                                                          ;
lda      $051D                         ; 0x1595f $994F AD 1D 05                ;
and      #$03                          ; 0x15962 $9952 29 03                   ;;Keep Bits:0000_0011
bne      L9964                         ; 0x15964 $9954 D0 0E                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x15966 $9956 20 91 DC;
tya                                    ; 0x15969 $9959 98                      ;
eor      #$01                          ; 0x1596a $995A 49 01                   ;;Flip Bits:0000_0001
sta      $61                           ; 0x1596c $995C 85 61                   ;
lda      #$10                          ; 0x1596e $995E A9 10                   ;;A = #$10 0001_0000
sta      $0506                         ; 0x15970 $9960 8D 06 05                ;
rts                                    ; 0x15973 $9963 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9964                                                                          ;
ldy      $0401                         ; 0x15974 $9964 AC 01 04                ;
dey                                    ; 0x15977 $9967 88                      ;
cpy      #$02                          ; 0x15978 $9968 C0 02                   ;
bcc      L9988                         ; 0x1597a $996A 90 1C                   ;
lda      $2A                           ; 0x1597c $996C A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
cmp      $29                           ; 0x1597e $996E C5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
bcc      L9988                         ; 0x15980 $9970 90 16                   ;
lda      $17                           ; 0x15982 $9972 A5 17                   ;; Link's Shield Position; Link's Shield Position (0 = Link ducked)
eor      #$01                          ; 0x15984 $9974 49 01                   ;;Flip Bits:0000_0001
sta      $18                           ; 0x15986 $9976 85 18                   ;;dark link:	$18	0=duck,1=stand
lda      #$01                          ; 0x15988 $9978 A9 01                   ;;A = #$01 0000_0001
sta      $0401                         ; 0x1598a $997A 8D 01 04                ;
lsr                                    ; 0x1598d $997D 4A                      ;
sta      $71                           ; 0x1598e $997E 85 71                   ;;mon x velocity	71,72,73,74,75,76
lda      #$20                          ; 0x15990 $9980 A9 20                   ;;A = #$20 0010_0000
sta      $ED                           ; 0x15992 $9982 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
lsr                                    ; 0x15994 $9984 4A                      ;
sta      $0504                         ; 0x15995 $9985 8D 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
L9988                                                                          ;
rts                                    ; 0x15998 $9988 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9989                                                                          ;
lda      $62                           ; 0x15999 $9989 A5 62                   ;
bne      L999D                         ; 0x1599b $998B D0 10                   ;
lda      $12                           ; 0x1599d $998D A5 12                   ;; Frame Counter (ascending)
and      #$C0                          ; 0x1599f $998F 29 C0                   ;;Keep Bits:1100_0000
beq      L999D                         ; 0x159a1 $9991 F0 0A                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x159a3 $9993 20 91 DC;
sty      $61                           ; 0x159a6 $9996 84 61                   ;
lda      #$02                          ; 0x159a8 $9998 A9 02                   ;;A = #$02 0000_0010
sta      $0506                         ; 0x159aa $999A 8D 06 05                ;
L999D                                                                          ;
rts                                    ; 0x159ad $999D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L999E                                                                          ;
clc                                    ; 0x159ae $999E 18                      ;
inx                                    ; 0x159af $999F E8                      ;
brk                                    ; 0x159b0 $99A0 00                      ;
brk                                    ; 0x159b1 $99A1 00                      ;
L99A2                                                                          ;
.byt    $14                            ; 0x159b2 $99A2 14                      ;
.byt    $EC                            ; 0x159b3 $99A3 EC                      ;
L99A4                                                                          ;
lda      $0506                         ; 0x159b4 $99A4 AD 06 05                ;
beq      L99B1                         ; 0x159b7 $99A7 F0 08                   ;
ldy      $61                           ; 0x159b9 $99A9 A4 61                   ;
lda      L99A2,y                       ; 0x159bb $99AB B9 A2 99                ;
sta      $71                           ; 0x159be $99AE 85 71                   ;;mon x velocity	71,72,73,74,75,76
rts                                    ; 0x159c0 $99B0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L99B1                                                                          ;
lda      $62                           ; 0x159c1 $99B1 A5 62                   ;
bne      L99B7                         ; 0x159c3 $99B3 D0 02                   ;
sta      $71                           ; 0x159c5 $99B5 85 71                   ;;mon x velocity	71,72,73,74,75,76
L99B7                                                                          ;
rts                                    ; 0x159c7 $99B7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L99B8                                                                          ;
jsr      L9A0F                         ; 0x159c8 $99B8 20 0F 9A                ;
lda      $2A                           ; 0x159cb $99BB A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
cmp      #$A0                          ; 0x159cd $99BD C9 A0                   ;
bcc      L99CC                         ; 0x159cf $99BF 90 0B                   ;
jsr      bank7_Floor_Y_Position        ; 0x159d1 $99C1 20 C1 DA                ;
sta      $62                           ; 0x159d4 $99C4 85 62                   ;
lda      #$A0                          ; 0x159d6 $99C6 A9 A0                   ;;A = #$a0 1010_0000
sta      $2A                           ; 0x159d8 $99C8 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
bne      L99E2                         ; 0x159da $99CA D0 16                   ;
L99CC                                                                          ;
lda      $17                           ; 0x159dc $99CC A5 17                   ;; Link's Shield Position; Link's Shield Position (0 = Link ducked)
sta      $18                           ; 0x159de $99CE 85 18                   ;;dark link:	$18	0=duck,1=stand
lda      #$06                          ; 0x159e0 $99D0 A9 06                   ;;A = #$06 0000_0110
ldy      $057E                         ; 0x159e2 $99D2 AC 7E 05                ;;y velocity	57e,57f,580,581,582,583		57d=link
bmi      L99D9                         ; 0x159e5 $99D5 30 02                   ;
lda      #$02                          ; 0x159e7 $99D7 A9 02                   ;;A = #$02 0000_0010
L99D9                                                                          ;
sta      $81                           ; 0x159e9 $99D9 85 81                   ;
rts                                    ; 0x159eb $99DB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_99DC                                                               ;
.byt    $00,$01,$02,$02,$01,$00        ; 0x159ec $99DC 00 01 02 02 01 00       ;
; ---------------------------------------------------------------------------- ;
L99E2                                                                          ;
lda      $71                           ; 0x159f2 $99E2 A5 71                   ;;mon x velocity	71,72,73,74,75,76
beq      L9A05                         ; 0x159f4 $99E4 F0 1F                   ;
L99E6                                                                          ;
ldy      $64                           ; 0x159f6 $99E6 A4 64                   ;
lda      $12                           ; 0x159f8 $99E8 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x159fa $99EA 29 03                   ;;Keep Bits:0000_0011
bne      L99F6                         ; 0x159fc $99EC D0 08                   ;
inc      $64                           ; 0x159fe $99EE E6 64                   ;
cpy      #$02                          ; 0x15a00 $99F0 C0 02                   ;
bne      L99F6                         ; 0x15a02 $99F2 D0 02                   ;
sta      $64                           ; 0x15a04 $99F4 85 64                   ;
L99F6                                                                          ;
lda      $60                           ; 0x15a06 $99F6 A5 60                   ;;monster facing dir	60,61,62,63,64,65
cmp      $A0                           ; 0x15a08 $99F8 C5 A0                   ;
beq      L99FF                         ; 0x15a0a $99FA F0 03                   ;
iny                                    ; 0x15a0c $99FC C8                      ;
iny                                    ; 0x15a0d $99FD C8                      ;
iny                                    ; 0x15a0e $99FE C8                      ;
L99FF                                                                          ;
lda      bank5_table_99DC,y            ; 0x15a0f $99FF B9 DC 99                ;
sta      $81                           ; 0x15a12 $9A02 85 81                   ;
L9A04                                                                          ;
rts                                    ; 0x15a14 $9A04 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A05                                                                          ;
lda      #$03                          ; 0x15a15 $9A05 A9 03                   ;;A = #$03 0000_0011
ldy      $18                           ; 0x15a17 $9A07 A4 18                   ;;dark link:	$18	0=duck,1=stand
bne      L9A0C                         ; 0x15a19 $9A09 D0 01                   ;
asl                                    ; 0x15a1b $9A0B 0A                      ;
L9A0C                                                                          ;
sta      $81                           ; 0x15a1c $9A0C 85 81                   ;
rts                                    ; 0x15a1e $9A0E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A0F                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x15a1f $9A0F 20 91 DC;
lda      $60                           ; 0x15a22 $9A12 A5 60                   ;;monster facing dir	60,61,62,63,64,65
sta      $A0                           ; 0x15a24 $9A14 85 A0                   ;
ldy      #$01                          ; 0x15a26 $9A16 A0 01                   ;;Y = #$01 0000_0001
lda      $71                           ; 0x15a28 $9A18 A5 71                   ;;mon x velocity	71,72,73,74,75,76
bpl      L9A1D                         ; 0x15a2a $9A1A 10 01                   ;
iny                                    ; 0x15a2c $9A1C C8                      ;
L9A1D                                                                          ;
sty      $60                           ; 0x15a2d $9A1D 84 60                   ;;monster facing dir	60,61,62,63,64,65
lda      $C9                           ; 0x15a2f $9A1F A5 C9                   ;
and      #$09                          ; 0x15a31 $9A21 29 09                   ;;Keep Bits:0000_1001
beq      L9A3C                         ; 0x15a33 $9A23 F0 17                   ;
ldy      $62                           ; 0x15a35 $9A25 A4 62                   ;
bne      L9A33                         ; 0x15a37 $9A27 D0 0A                   ;
pha                                    ; 0x15a39 $9A29 48                      ;
lda      #$03                          ; 0x15a3a $9A2A A9 03                   ;;A = #$03 0000_0011
sta      $051C                         ; 0x15a3c $9A2C 8D 1C 05                ;
jsr      L992C                         ; 0x15a3f $9A2F 20 2C 99                ;
pla                                    ; 0x15a42 $9A32 68                      ;
L9A33                                                                          ;
lsr                                    ; 0x15a43 $9A33 4A                      ;
lsr                                    ; 0x15a44 $9A34 4A                      ;
lsr                                    ; 0x15a45 $9A35 4A                      ;
tay                                    ; 0x15a46 $9A36 A8                      ;
iny                                    ; 0x15a47 $9A37 C8                      ;
cpy      $60                           ; 0x15a48 $9A38 C4 60                   ;;monster facing dir	60,61,62,63,64,65
beq      L9A3F                         ; 0x15a4a $9A3A F0 03                   ;
L9A3C                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x15a4c $9A3C 20 B8 DE              ;
L9A3F                                                                          ;
lda      #$3C                          ; 0x15a4f $9A3F A9 3C                   ;;A = #$3c 0011_1100
sta      L0000                         ; 0x15a51 $9A41 85 00                   ;
lda      #$04                          ; 0x15a53 $9A43 A9 04                   ;;A = #$04 0000_0100
bank5_table_9A45                                                               ;
.byt    $85                            ; 0x15a55 $9A45 85                      ;
L9A46                                                                          ;
.byt    $02,$4C,$CE                    ; 0x15a56 $9A46 02 4C CE                ;
L9A49                                                                          ;
.byt    $DE,$04,$05,$04,$06,$07,$06    ; 0x15a59 $9A49 DE 04 05 04 06 07 06    ;
; ---------------------------------------------------------------------------- ;
L9A50                                                                          ;
ldy      $0401                         ; 0x15a60 $9A50 AC 01 04                ;
beq      L9A76                         ; 0x15a63 $9A53 F0 21                   ;
lda      $0504                         ; 0x15a65 $9A55 AD 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
bne      L9A6A                         ; 0x15a68 $9A58 D0 10                   ;
inc      $0401                         ; 0x15a6a $9A5A EE 01 04                ;
cpy      #$03                          ; 0x15a6d $9A5D C0 03                   ;
bne      L9A65                         ; 0x15a6f $9A5F D0 04                   ;
sta      $0401                         ; 0x15a71 $9A61 8D 01 04                ;
rts                                    ; 0x15a74 $9A64 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A65                                                                          ;
lda      #$08                          ; 0x15a75 $9A65 A9 08                   ;;A = #$08 0000_1000
sta      $0504                         ; 0x15a77 $9A67 8D 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
L9A6A                                                                          ;
lda      $18                           ; 0x15a7a $9A6A A5 18                   ;;dark link:	$18	0=duck,1=stand
bne      L9A71                         ; 0x15a7c $9A6C D0 03                   ;
iny                                    ; 0x15a7e $9A6E C8                      ;
iny                                    ; 0x15a7f $9A6F C8                      ;
iny                                    ; 0x15a80 $9A70 C8                      ;
L9A71                                                                          ;
lda      L9A49,y                       ; 0x15a81 $9A71 B9 49 9A                ;
sta      $81                           ; 0x15a84 $9A74 85 81                   ;
L9A76                                                                          ;
rts                                    ; 0x15a86 $9A76 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9A77                                                                          ;
ldy      #$01                          ; 0x15a87 $9A77 A0 01                   ;;Y = #$01 0000_0001
sty      $11                           ; 0x15a89 $9A79 84 11                   ;
lda      #$50                          ; 0x15a8b $9A7B A9 50                   ;;A = #$50 0101_0000
sta      $91                           ; 0x15a8d $9A7D 85 91                   ;
jsr      LEC02                         ; 0x15a8f $9A7F 20 02 EC                ;
ldx      $10                           ; 0x15a92 $9A82 A6 10                   ;; used as monster x register ;draw boss hp bar
L9A84                                                                          ;
rts                                    ; 0x15a94 $9A84 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_9A85                                                               ;
.byt    $10,$FF                        ; 0x15a95 $9A85 10 FF                   ;
L9A87                                                                          ;
.byt    $11,$04                        ; 0x15a97 $9A87 11 04                   ;
L9A89                                                                          ;
.byt    $F8,$02                        ; 0x15a99 $9A89 F8 02                   ;
L9A8B                                                                          ;
.byt    $F6,$0A                        ; 0x15a9b $9A8B F6 0A                   ;
; ---------------------------------------------------------------------------- ;
L9A8D                                                                          ;
lda      $62                           ; 0x15a9d $9A8D A5 62                   ;
ora      $0479                         ; 0x15a9f $9A8F 0D 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
ora      $0509                         ; 0x15aa2 $9A92 0D 09 05                ;
bne      L9AF4                         ; 0x15aa5 $9A95 D0 5D                   ;
jsr      bank7_code44                  ; 0x15aa7 $9A97 20 A2 E9                ;
ldy      $A0                           ; 0x15aaa $9A9A A4 A0                   ;
lda      $CD                           ; 0x15aac $9A9C A5 CD                   ;
adc      #$08                          ; 0x15aae $9A9E 69 08                   ;
adc      L9A84,y                       ; 0x15ab0 $9AA0 79 84 9A                ;
sta      $04                           ; 0x15ab3 $9AA3 85 04                   ;
lda      #$06                          ; 0x15ab5 $9AA5 A9 06                   ;;A = #$06 0000_0110
sta      $06                           ; 0x15ab7 $9AA7 85 06                   ;
ldy      $18                           ; 0x15ab9 $9AA9 A4 18                   ;;dark link:	$18	0=duck,1=stand
lda      $2A                           ; 0x15abb $9AAB A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
adc      L9A87,y                       ; 0x15abd $9AAD 79 87 9A                ;
sta      $05                           ; 0x15ac0 $9AB0 85 05                   ;
lda      #$09                          ; 0x15ac2 $9AB2 A9 09                   ;;A = #$09 0000_1001
sta      $07                           ; 0x15ac4 $9AB4 85 07                   ;
jsr      bank7_idem__maybe             ; 0x15ac6 $9AB6 20 F9 E9                ;
bcs      L9AF5                         ; 0x15ac9 $9AB9 B0 3A                   ;
jsr      LE942                         ; 0x15acb $9ABB 20 42 E9                ;
ldy      $18                           ; 0x15ace $9ABE A4 18                   ;;dark link:	$18	0=duck,1=stand
lda      $2A                           ; 0x15ad0 $9AC0 A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
sta      $05                           ; 0x15ad2 $9AC2 85 05                   ;
lda      #$1D                          ; 0x15ad4 $9AC4 A9 1D                   ;;A = #$1d 0001_1101
sta      $07                           ; 0x15ad6 $9AC6 85 07                   ;
jsr      bank7_idem__maybe             ; 0x15ad8 $9AC8 20 F9 E9                ;
bcc      L9B07                         ; 0x15adb $9ACB 90 3A                   ;
ldy      #$00                          ; 0x15add $9ACD A0 00                   ;;Y = #$00 0000_0000
sty      $0401                         ; 0x15adf $9ACF 8C 01 04                ;
dey                                    ; 0x15ae2 $9AD2 88                      ;
dec      $C2                           ; 0x15ae3 $9AD3 C6 C2                   ;;monster monHP		c2,c3,c4,c5,c6,c7
beq      L9ADE                         ; 0x15ae5 $9AD5 F0 07                   ;if dead, fall off screen from the hurt animation timer being set to #$FF
lda      #$38                          ; 0x15ae7 $9AD7 A9 38                   ;otherwise, hurt?
sta      $0509                         ; 0x15ae9 $9AD9 8D 09 05                ;
ldy      #$18                          ; 0x15aec $9ADC A0 18                   ;;Y = #$18 0001_1000
L9ADE                                                                          ;
sty      $050D                         ; 0x15aee $9ADE 8C 0D 05                ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x15af1 $9AE1 20 91 DC;
lda      L9A8B,y                       ; 0x15af4 $9AE4 B9 8B 9A                ;
sta      $71                           ; 0x15af7 $9AE7 85 71                   ;;mon x velocity	71,72,73,74,75,76
lda      #$FD                          ; 0x15af9 $9AE9 A9 FD                   ;;A = #$fd 1111_1101
sta      $057E                         ; 0x15afb $9AEB 8D 7E 05                ;;y velocity	57e,57f,580,581,582,583		57d=link
lda      #$01                          ; 0x15afe $9AEE A9 01                   ;;A = #$01 0000_0001
sta      $E9                           ; 0x15b00 $9AF0 85 E9                   ;
sta      $62                           ; 0x15b02 $9AF2 85 62                   ;
L9AF4                                                                          ;
rts                                    ; 0x15b04 $9AF4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9AF5                                                                          ;
lda      #$00                          ; 0x15b05 $9AF5 A9 00                   ;;A = #$00 0000_0000
sta      $0B                           ; 0x15b07 $9AF7 85 0B                   ;
jsr      bank7_code37                  ; 0x15b09 $9AF9 20 71 E3                ;
lda      $70                           ; 0x15b0c $9AFC A5 70                   ;;hspeed (Link's horizontal velocity); Link's X Velocity	; Player X Delta (E8-00, 00-18)
eor      #$FF                          ; 0x15b0e $9AFE 49 FF                   ;;Flip Bits:1111_1111
sta      $71                           ; 0x15b10 $9B00 85 71                   ;;mon x velocity	71,72,73,74,75,76
lda      #$02                          ; 0x15b12 $9B02 A9 02                   ;;A = #$02 0000_0010
sta      $EC                           ; 0x15b14 $9B04 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
L9B06                                                                          ;
rts                                    ; 0x15b16 $9B06 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B07                                                                          ;
jsr      bank7_code45                  ; 0x15b17 $9B07 20 D8 E9                ;
ldy      #$00                          ; 0x15b1a $9B0A A0 00                   ;;Y = #$00 0000_0000
lda      $047F                         ; 0x15b1c $9B0C AD 7F 04                ;
pha                                    ; 0x15b1f $9B0F 48                      ;
cmp      $CD                           ; 0x15b20 $9B10 C5 CD                   ;
bcs      L9B15                         ; 0x15b22 $9B12 B0 01                   ;
iny                                    ; 0x15b24 $9B14 C8                      ;
L9B15                                                                          ;
pla                                    ; 0x15b25 $9B15 68                      ;
adc      L9A89,y                       ; 0x15b26 $9B16 79 89 9A                ;
sta      $04                           ; 0x15b29 $9B19 85 04                   ;
lda      #$0E                          ; 0x15b2b $9B1B A9 0E                   ;;A = #$0e 0000_1110
sta      $06                           ; 0x15b2d $9B1D 85 06                   ;
lda      $0481                         ; 0x15b2f $9B1F AD 81 04                ;
adc      #$03                          ; 0x15b32 $9B22 69 03                   ;
sta      $05                           ; 0x15b34 $9B24 85 05                   ;
lda      #$02                          ; 0x15b36 $9B26 A9 02                   ;;A = #$02 0000_0010
sta      $07                           ; 0x15b38 $9B28 85 07                   ;
jsr      bank7_idem__maybe             ; 0x15b3a $9B2A 20 F9 E9                ;
bcs      L9AF5                         ; 0x15b3d $9B2D B0 C6                   ;
jsr      bank7_code43                  ; 0x15b3f $9B2F 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x15b42 $9B32 20 F9 E9                ;
bcc      L9B06                         ; 0x15b45 $9B35 90 CF                   ;
jmp      bank7_Link_Hit_Routine        ; 0x15b47 $9B37 4C EF E2                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B3A                                                                          ;
lda      $074B                         ; 0x15b4a $9B3A AD 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
cmp      #$81                          ; 0x15b4d $9B3D C9 81                   ;
bne      L9B46                         ; 0x15b4f $9B3F D0 05                   ;
lda      #$0E                          ; 0x15b51 $9B41 A9 0E                   ;;A = #$0e 0000_1110
sta      $0725                         ; 0x15b53 $9B43 8D 25 07                ;; PPU Macro Selector	
L9B46                                                                          ;
lda      $0479                         ; 0x15b56 $9B46 AD 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
ora      $0504                         ; 0x15b59 $9B49 0D 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
bne      L9B73                         ; 0x15b5c $9B4C D0 25                   ;
lda      #$80                          ; 0x15b5e $9B4E A9 80                   ;;A = #$80 1000_0000
jmp      L9805                         ; 0x15b60 $9B50 4C 05 98                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B53                                                                          ;
lda      #$03                          ; 0x15b63 $9B53 A9 03                   ;;A = #$03 0000_0011
sta      $80                           ; 0x15b65 $9B55 85 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
ldy      $0504                         ; 0x15b67 $9B57 AC 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
bne      L9B73                         ; 0x15b6a $9B5A D0 17                   ;
lsr                                    ; 0x15b6c $9B5C 4A                      ;
sta      $9F                           ; 0x15b6d $9B5D 85 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
sta      $3B                           ; 0x15b6f $9B5F 85 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
sta      $3C                           ; 0x15b71 $9B61 85 3C                   ;;monster x*255	3c,3d,3e,3f,40,41
lda      $4D                           ; 0x15b73 $9B63 A5 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
adc      #$0B                          ; 0x15b75 $9B65 69 0B                   ;
cmp      #$6C                          ; 0x15b77 $9B67 C9 6C                   ;
beq      L9B81                         ; 0x15b79 $9B69 F0 16                   ;
dec      $4D                           ; 0x15b7b $9B6B C6 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
bcs      L9B73                         ; 0x15b7d $9B6D B0 04                   ;
inc      $4D                           ; 0x15b7f $9B6F E6 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
inc      $4D                           ; 0x15b81 $9B71 E6 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
L9B73                                                                          ;
rts                                    ; 0x15b83 $9B73 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B74                                                                          ;
lda      #$C0                          ; 0x15b84 $9B74 A9 C0                   ;;A = #$c0 1100_0000
sta      $074B                         ; 0x15b86 $9B76 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      #$20                          ; 0x15b89 $9B79 A9 20                   ;;A = #$20 0010_0000
sta      $EB                           ; 0x15b8b $9B7B 85 EB                   ;; Music; Music
lda      #$15                          ; 0x15b8d $9B7D A9 15                   ;;A = #$15 0001_0101
bne      L9B83                         ; 0x15b8f $9B7F D0 02                   ;
L9B81                                                                          ;
lda      #$0D                          ; 0x15b91 $9B81 A9 0D                   ;;A = #$0d 0000_1101
L9B83                                                                          ;
sta      $0512                         ; 0x15b93 $9B83 8D 12 05                ;
L9B86                                                                          ;
lda      #$7C                          ; 0x15b96 $9B86 A9 7C                   ;;A = #$7c 0111_1100
sta      $4E                           ; 0x15b98 $9B88 85 4E                   ;;monster x	4e,4f,50,51,52,53
lda      #$B0                          ; 0x15b9a $9B8A A9 B0                   ;;A = #$b0 1011_0000
sta      $2A                           ; 0x15b9c $9B8C 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
jmp      L980A                         ; 0x15b9e $9B8E 4C 0A 98                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9B91                                                                          ;
lda      $0512                         ; 0x15ba1 $9B91 AD 12 05                ;
cmp      #$02                          ; 0x15ba4 $9B94 C9 02                   ;
beq      L9B74                         ; 0x15ba6 $9B96 F0 DC                   ;
cmp      #$09                          ; 0x15ba8 $9B98 C9 09                   ;
bcs      L9B73                         ; 0x15baa $9B9A B0 D7                   ;
cmp      #$06                          ; 0x15bac $9B9C C9 06                   ;
bcc      L9BA5                         ; 0x15bae $9B9E 90 05                   ;
lda      $12                           ; 0x15bb0 $9BA0 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x15bb2 $9BA2 4A                      ;
bcc      L9B73                         ; 0x15bb3 $9BA3 90 CE                   ;
L9BA5                                                                          ;
jmp      bank7_Display                 ; 0x15bb5 $9BA5 4C 11 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BA8                                                                          ;
lda      #$02                          ; 0x15bb8 $9BA8 A9 02                   ;;A = #$02 0000_0010
sta      $9F                           ; 0x15bba $9BAA 85 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
ldy      $0512                         ; 0x15bbc $9BAC AC 12 05                ;
beq      L9BBA                         ; 0x15bbf $9BAF F0 09                   ;
lda      #$0B                          ; 0x15bc1 $9BB1 A9 0B                   ;;A = #$0b 0000_1011
sta      $80                           ; 0x15bc3 $9BB3 85 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
inc      $AF                           ; 0x15bc5 $9BB5 E6 AF                   ;;monster itemID/ai?	af,b0,b1,b2,b3,b4
jmp      bank7_Display                 ; 0x15bc7 $9BB7 4C 11 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BBA                                                                          ;
lda      #$03                          ; 0x15bca $9BBA A9 03                   ;;A = #$03 0000_0011
sta      $076C                         ; 0x15bcc $9BBC 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
lda      #$00                          ; 0x15bcf $9BBF A9 00                   ;;A = #$00 0000_0000
sta      $2001                         ; 0x15bd1 $9BC1 8D 01 20                ;
inc      $0726                         ; 0x15bd4 $9BC4 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
rts                                    ; 0x15bd7 $9BC7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BC8                                                                          ;
jsr      LEA1C                         ; 0x15bd8 $9BC8 20 1C EA                ;
L9BCB                                                                          ;
bcc      L9C45                         ; 0x15bdb $9BCB 90 78                   ;
lda      #$F4                          ; 0x15bdd $9BCD A9 F4                   ;;A = #$f4 1111_0100
sta      $87,x                         ; 0x15bdf $9BCF 95 87                   ;; Projectile Type
rts                                    ; 0x15be1 $9BD1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BD2                                                                          ;
ldy      #$02                          ; 0x15be2 $9BD2 A0 02                   ;;Y = #$02 0000_0010
lda      $77,x                         ; 0x15be4 $9BD4 B5 77                   ;; Projectile X Velocity
bmi      L9BD9                         ; 0x15be6 $9BD6 30 01                   ;
dey                                    ; 0x15be8 $9BD8 88                      ;
L9BD9                                                                          ;
tya                                    ; 0x15be9 $9BD9 98                      ;
cmp      $66,x                         ; 0x15bea $9BDA D5 66                   ;; Projectile facing direction
bne      L9C42                         ; 0x15bec $9BDC D0 64                   ;
jmp      L9C3D                         ; 0x15bee $9BDE 4C 3D 9C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9BE1                                                                          ;
jsr      LEA18                         ; 0x15bf1 $9BE1 20 18 EA                ;
bcc      L9C45                         ; 0x15bf4 $9BE4 90 5F                   ;
lda      $ED                           ; 0x15bf6 $9BE6 A5 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
ora      #$40                          ; 0x15bf8 $9BE8 09 40                   ;;Set Bits:0100_0000
sta      $ED                           ; 0x15bfa $9BEA 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
lda      $30,x                         ; 0x15bfc $9BEC B5 30                   ;; Projectile Y Position
and      #$F0                          ; 0x15bfe $9BEE 29 F0                   ;;Keep Bits:1111_0000
sta      $30,x                         ; 0x15c00 $9BF0 95 30                   ;; Projectile Y Position
lda      $045E,x                       ; 0x15c02 $9BF2 BD 5E 04                ;
bne      L9C23                         ; 0x15c05 $9BF5 D0 2C                   ;
sta      $77,x                         ; 0x15c07 $9BF7 95 77                   ;; Projectile X Velocity
ldy      #$30                          ; 0x15c09 $9BF9 A0 30                   ;;Y = #$30 0011_0000
lda      $051B,x                       ; 0x15c0b $9BFB BD 1B 05                ;; Randomizer
and      #$03                          ; 0x15c0e $9BFE 29 03                   ;;Keep Bits:0000_0011
bne      L9C15                         ; 0x15c10 $9C00 D0 13                   ;
ldy      #$F0                          ; 0x15c12 $9C02 A0 F0                   ;;Y = #$f0 1111_0000
lda      $CE                           ; 0x15c14 $9C04 A5 CE                   ;
cmp      $CC                           ; 0x15c16 $9C06 C5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
lda      #$02                          ; 0x15c18 $9C08 A9 02                   ;;A = #$02 0000_0010
bcs      L9C0F                         ; 0x15c1a $9C0A B0 03                   ;
lsr                                    ; 0x15c1c $9C0C 4A                      ;
ldy      #$10                          ; 0x15c1d $9C0D A0 10                   ;;Y = #$10 0001_0000
L9C0F                                                                          ;
sta      $66,x                         ; 0x15c1f $9C0F 95 66                   ;; Projectile facing direction
sty      $77,x                         ; 0x15c21 $9C11 94 77                   ;; Projectile X Velocity
ldy      #$FF                          ; 0x15c23 $9C13 A0 FF                   ;;Y = #$ff 1111_1111
L9C15                                                                          ;
tya                                    ; 0x15c25 $9C15 98                      ;
sta      $044C,x                       ; 0x15c26 $9C16 9D 4C 04                ;
inc      $045E,x                       ; 0x15c29 $9C19 FE 5E 04                ;
lda      #$F0                          ; 0x15c2c $9C1C A9 F0                   ;;A = #$f0 1111_0000
sta      $0584,x                       ; 0x15c2e $9C1E 9D 84 05                ;; Projectile Y Velocity; Projectile Y Velocity
bne      L9C45                         ; 0x15c31 $9C21 D0 22                   ;
L9C23                                                                          ;
lda      $044C,x                       ; 0x15c33 $9C23 BD 4C 04                ;
beq      L9C5B                         ; 0x15c36 $9C26 F0 33                   ;
dec      $044C,x                       ; 0x15c38 $9C28 DE 4C 04                ;
beq      L9C5B                         ; 0x15c3b $9C2B F0 2E                   ;
and      #$07                          ; 0x15c3d $9C2D 29 07                   ;;Keep Bits:0000_0111
bne      L9C3D                         ; 0x15c3f $9C2F D0 0C                   ;
lda      $77,x                         ; 0x15c41 $9C31 B5 77                   ;; Projectile X Velocity
beq      L9C3D                         ; 0x15c43 $9C33 F0 08                   ;
bpl      L9C3B                         ; 0x15c45 $9C35 10 04                   ;
inc      $77,x                         ; 0x15c47 $9C37 F6 77                   ;; Projectile X Velocity
inc      $77,x                         ; 0x15c49 $9C39 F6 77                   ;; Projectile X Velocity
L9C3B                                                                          ;
dec      $77,x                         ; 0x15c4b $9C3B D6 77                   ;; Projectile X Velocity
L9C3D                                                                          ;
lda      #$FE                          ; 0x15c4d $9C3D A9 FE                   ;;A = #$fe 1111_1110
sta      $0584,x                       ; 0x15c4f $9C3F 9D 84 05                ;; Projectile Y Velocity; Projectile Y Velocity
L9C42                                                                          ;
inc      $0584,x                       ; 0x15c52 $9C42 FE 84 05                ;; Projectile Y Velocity; Projectile Y Velocity
L9C45                                                                          ;
inc      $0584,x                       ; 0x15c55 $9C45 FE 84 05                ;; Projectile Y Velocity; Projectile Y Velocity
L9C48                                                                          ;
jsr      LDED4                         ; 0x15c58 $9C48 20 D4 DE                ;
lda      $CA                           ; 0x15c5b $9C4B A5 CA                   ;
and      #$FC                          ; 0x15c5d $9C4D 29 FC                   ;;Keep Bits:1111_1100
beq      L9C60                         ; 0x15c5f $9C4F F0 0F                   ;
and      #$F0                          ; 0x15c61 $9C51 29 F0                   ;;Keep Bits:1111_0000
bne      L9C5B                         ; 0x15c63 $9C53 D0 06                   ;
lda      $87,x                         ; 0x15c65 $9C55 B5 87                   ;; Projectile Type
cmp      #$07                          ; 0x15c67 $9C57 C9 07                   ;
beq      L9C5F                         ; 0x15c69 $9C59 F0 04                   ;
L9C5B                                                                          ;
lda      #$00                          ; 0x15c6b $9C5B A9 00                   ;;A = #$00 0000_0000
sta      $87,x                         ; 0x15c6d $9C5D 95 87                   ;; Projectile Type
L9C5F                                                                          ;
rts                                    ; 0x15c6f $9C5F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C60                                                                          ;
jsr      L9C99                         ; 0x15c70 $9C60 20 99 9C                ;
jsr      LE48A                         ; 0x15c73 $9C63 20 8A E4                ;
jmp      LE3B9                         ; 0x15c76 $9C66 4C B9 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9C69                                                                          ;
dec      $77,x                         ; 0x15c79 $9C69 D6 77                   ;; Projectile X Velocity
beq      L9C5B                         ; 0x15c7b $9C6B F0 EE                   ;
ldy      $97,x                         ; 0x15c7d $9C6D B4 97                   ;
lda      $30,x                         ; 0x15c7f $9C6F B5 30                   ;; Projectile Y Position
sta      L0000                         ; 0x15c81 $9C71 85 00                   ;
lda      #$02                          ; 0x15c83 $9C73 A9 02                   ;;A = #$02 0000_0010
sta      $02                           ; 0x15c85 $9C75 85 02                   ;
lsr                                    ; 0x15c87 $9C77 4A                      ;
sta      $03                           ; 0x15c88 $9C78 85 03                   ;
lsr                                    ; 0x15c8a $9C7A 4A                      ;
sta      $C9                           ; 0x15c8b $9C7B 85 C9                   ;
lda      $54,x                         ; 0x15c8d $9C7D B5 54                   ;; Projectile X Position (low byte)
sbc      $072C                         ; 0x15c8f $9C7F ED 2C 07                ;; Scrolling Offset Low Byte
sta      $01                           ; 0x15c92 $9C82 85 01                   ;
lda      $77,x                         ; 0x15c94 $9C84 B5 77                   ;; Projectile X Velocity
ldx      #$00                          ; 0x15c96 $9C86 A2 00                   ;;X = #$00 0000_0000
cmp      #$08                          ; 0x15c98 $9C88 C9 08                   ;
bcs      L9C8E                         ; 0x15c9a $9C8A B0 02                   ;
ldx      #$02                          ; 0x15c9c $9C8C A2 02                   ;;X = #$02 0000_0010
L9C8E                                                                          ;
jsr      LF0C6                         ; 0x15c9e $9C8E 20 C6 F0                ;
lda      #$41                          ; 0x15ca1 $9C91 A9 41                   ;;A = #$41 0100_0001
sta      $01FE,y                       ; 0x15ca3 $9C93 99 FE 01                ;
L9C96                                                                          ;
rts                                    ; 0x15ca6 $9C96 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
rti                                    ; 0x15ca7 $9C97 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
brk                                    ; 0x15ca8 $9C98 00                      ;
L9C99                                                                          ;
lda      $87,x                         ; 0x15ca9 $9C99 B5 87                   ;; Projectile Type
pha                                    ; 0x15cab $9C9B 48                      ;
asl                                    ; 0x15cac $9C9C 0A                      ;
tay                                    ; 0x15cad $9C9D A8                      ;
lda      $6EC0,y                       ; 0x15cae $9C9E B9 C0 6E                ;
sta      L000E                         ; 0x15cb1 $9CA1 85 0E                   ;
lda      $6EC1,y                       ; 0x15cb3 $9CA3 B9 C1 6E                ;
sta      $0F                           ; 0x15cb6 $9CA6 85 0F                   ;
ldy      $97,x                         ; 0x15cb8 $9CA8 B4 97                   ;
lda      $30,x                         ; 0x15cba $9CAA B5 30                   ;; Projectile Y Position
sta      $0200,y                       ; 0x15cbc $9CAC 99 00 02                ;
lda      $CE                           ; 0x15cbf $9CAF A5 CE                   ;
sta      $0203,y                       ; 0x15cc1 $9CB1 99 03 02                ;
pla                                    ; 0x15cc4 $9CB4 68                      ;
tay                                    ; 0x15cc5 $9CB5 A8                      ;
lda      $6EAD,y                       ; 0x15cc6 $9CB6 B9 AD 6E                ;
pha                                    ; 0x15cc9 $9CB9 48                      ;
lda      $6EB6,y                       ; 0x15cca $9CBA B9 B6 6E                ;
ldy      $66,x                         ; 0x15ccd $9CBD B4 66                   ;; Projectile facing direction
ora      L9C96,y                       ; 0x15ccf $9CBF 19 96 9C                ;
ldy      $97,x                         ; 0x15cd2 $9CC2 B4 97                   ;
sta      $0202,y                       ; 0x15cd4 $9CC4 99 02 02                ;
pla                                    ; 0x15cd7 $9CC7 68                      ;
sta      $0201,y                       ; 0x15cd8 $9CC8 99 01 02                ;
jmp      (L000E)                       ; 0x15cdb $9CCB 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      L9D18                         ; 0x15cde $9CCE 20 18 9D                ;
lda      $045E,x                       ; 0x15ce1 $9CD1 BD 5E 04                ;
beq      L9CFA                         ; 0x15ce4 $9CD4 F0 24                   ;
ldy      $044C,x                       ; 0x15ce6 $9CD6 BC 4C 04                ;
cpy      #$20                          ; 0x15ce9 $9CD9 C0 20                   ;
bcs      L9CEB                         ; 0x15ceb $9CDB B0 0E                   ;
lda      $12                           ; 0x15ced $9CDD A5 12                   ;; Frame Counter (ascending)
and      #$02                          ; 0x15cef $9CDF 29 02                   ;;Keep Bits:0000_0010
beq      L9CEB                         ; 0x15cf1 $9CE1 F0 08                   ;
ldy      $97,x                         ; 0x15cf3 $9CE3 B4 97                   ;
lda      #$F8                          ; 0x15cf5 $9CE5 A9 F8                   ;;A = #$f8 1111_1000
sta      $0200,y                       ; 0x15cf7 $9CE7 99 00 02                ;
rts                                    ; 0x15cfa $9CEA 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9CEB                                                                          ;
ldy      $97,x                         ; 0x15cfb $9CEB B4 97                   ;
lda      $0202,y                       ; 0x15cfd $9CED B9 02 02                ;
and      #$43                          ; 0x15d00 $9CF0 29 43                   ;;Keep Bits:0100_0011
sta      $0202,y                       ; 0x15d02 $9CF2 99 02 02                ;
lda      #$52                          ; 0x15d05 $9CF5 A9 52                   ;;A = #$52 0101_0010
sta      $0201,y                       ; 0x15d07 $9CF7 99 01 02                ;
L9CFA                                                                          ;
rts                                    ; 0x15d0a $9CFA 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $12                           ; 0x15d0b $9CFB A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x15d0d $9CFD 29 03                   ;;Keep Bits:0000_0011
ora      $0202,y                       ; 0x15d0f $9CFF 19 02 02                ;
sta      $0202,y                       ; 0x15d12 $9D02 99 02 02                ;
rts                                    ; 0x15d15 $9D05 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $66,x                         ; 0x15d16 $9D06 B5 66                   ;; Projectile facing direction
lsr                                    ; 0x15d18 $9D08 4A                      ;
lda      #$00                          ; 0x15d19 $9D09 A9 00                   ;;A = #$00 0000_0000
ror                                    ; 0x15d1b $9D0B 6A                      ;
pha                                    ; 0x15d1c $9D0C 48                      ;
lda      $12                           ; 0x15d1d $9D0D A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x15d1f $9D0F 4A                      ;
lsr                                    ; 0x15d20 $9D10 4A                      ;
L9D11                                                                          ;
lsr                                    ; 0x15d21 $9D11 4A                      ;
pla                                    ; 0x15d22 $9D12 68                      ;
ror                                    ; 0x15d23 $9D13 6A                      ;
ora      #$01                          ; 0x15d24 $9D14 09 01                   ;;Set Bits:0000_0001
bne      L9D22                         ; 0x15d26 $9D16 D0 0A                   ;
L9D18                                                                          ;
lda      $12                           ; 0x15d28 $9D18 A5 12                   ;; Frame Counter (ascending)
asl                                    ; 0x15d2a $9D1A 0A                      ;
asl                                    ; 0x15d2b $9D1B 0A                      ;
asl                                    ; 0x15d2c $9D1C 0A                      ;
sec                                    ; 0x15d2d $9D1D 38                      ;
rol                                    ; 0x15d2e $9D1E 2A                      ;
asl                                    ; 0x15d2f $9D1F 0A                      ;
and      #$C3                          ; 0x15d30 $9D20 29 C3                   ;;Keep Bits:1100_0011
L9D22                                                                          ;
sta      $0202,y                       ; 0x15d32 $9D22 99 02 02                ;
rts                                    ; 0x15d35 $9D25 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9D26                                                                          ;
.byt    $0C                            ; 0x15d36 $9D26 0C                      ;
.byt    $F4                            ; 0x15d37 $9D27 F4                      ;
L9D28                                                                          ;
asl                                    ; 0x15d38 $9D28 0A                      ;
brk                                    ; 0x15d39 $9D29 00                      ;
.byt    $3F                            ; 0x15d3a $9D2A 3F                      ;
.byt    $1F                            ; 0x15d3b $9D2B 1F                      ;
bank5_Enemy_Routines1_Fokka                                                    ;
jsr      bank7_Display                 ; 0x15d3c $9D2C 20 11 EF                ;
lda      $81,x                         ; 0x15d3f $9D2F B5 81                   ;; Current Animation Frame for Enemys
beq      L9D77                         ; 0x15d41 $9D31 F0 44                   ;
and      #$01                          ; 0x15d43 $9D33 29 01                   ;;Keep Bits:0000_0001
bne      L9D5A                         ; 0x15d45 $9D35 D0 23                   ;
jsr      bank7_Spawn_New_Projectile    ; 0x15d47 $9D37 20 CE DB                ;
tya                                    ; 0x15d4a $9D3A 98                      ;
bmi      L9D57                         ; 0x15d4b $9D3B 30 1A                   ;
lda      #$05                          ; 0x15d4d $9D3D A9 05                   ;;A = #$05 0000_0101
sta      $87,y                         ; 0x15d4f $9D3F 99 87 00                ;
lda      $81,x                         ; 0x15d52 $9D42 B5 81                   ;; Current Animation Frame for Enemys
lsr                                    ; 0x15d54 $9D44 4A                      ;
and      #$01                          ; 0x15d55 $9D45 29 01                   ;;Keep Bits:0000_0001
tax                                    ; 0x15d57 $9D47 AA                      ;
lda      L9D28,x                       ; 0x15d58 $9D48 BD 28 9D                ;
ldx      $10                           ; 0x15d5b $9D4B A6 10                   ;; used as monster x register ;draw boss hp bar
clc                                    ; 0x15d5d $9D4D 18                      ;
adc      $2A,x                         ; 0x15d5e $9D4E 75 2A                   ;; Enemy Y Position
sta      $30,y                         ; 0x15d60 $9D50 99 30 00                ;
.byt    $A9                            ; 0x15d63 $9D53 A9                      ;
L9D54                                                                          ;
brk                                    ; 0x15d64 $9D54 00                      ;
sta      $81,x                         ; 0x15d65 $9D55 95 81                   ;; Current Animation Frame for Enemys
L9D57                                                                          ;
jsr      LE563                         ; 0x15d67 $9D57 20 63 E5                ;
L9D5A                                                                          ;
lda      $0504,x                       ; 0x15d6a $9D5A BD 04 05                ;; Timer for Enemy
bne      L9D70                         ; 0x15d6d $9D5D D0 11                   ;
inc      $81,x                         ; 0x15d6f $9D5F F6 81                   ;; Current Animation Frame for Enemys
lda      $81,x                         ; 0x15d71 $9D61 B5 81                   ;; Current Animation Frame for Enemys
cmp      #$03                          ; 0x15d73 $9D63 C9 03                   ;
beq      L9D73                         ; 0x15d75 $9D65 F0 0C                   ;
cmp      #$05                          ; 0x15d77 $9D67 C9 05                   ;
bcs      L9D73                         ; 0x15d79 $9D69 B0 08                   ;
lda      #$10                          ; 0x15d7b $9D6B A9 10                   ;;A = #$10 0001_0000
sta      $0504,x                       ; 0x15d7d $9D6D 9D 04 05                ;; Timer for Enemy
L9D70                                                                          ;
jmp      L9D77                         ; 0x15d80 $9D70 4C 77 9D                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9D73                                                                          ;
lda      #$00                          ; 0x15d83 $9D73 A9 00                   ;;A = #$00 0000_0000
sta      $81,x                         ; 0x15d85 $9D75 95 81                   ;; Current Animation Frame for Enemys
L9D77                                                                          ;
jsr      LE617                         ; 0x15d87 $9D77 20 17 E6                ;
jsr      LEA32                         ; 0x15d8a $9D7A 20 32 EA                ;
ldy      #$01                          ; 0x15d8d $9D7D A0 01                   ;;Y = #$01 0000_0001
inx                                    ; 0x15d8f $9D7F E8                      ;
jsr      bank7_code51                  ; 0x15d90 $9D80 20 7D F2                ;
ldx      $10                           ; 0x15d93 $9D83 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $1A,x                         ; 0x15d95 $9D85 B5 1A                   ;
cmp      #$02                          ; 0x15d97 $9D87 C9 02                   ;
bcc      L9D8E                         ; 0x15d99 $9D89 90 03                   ;
jmp      LDD3D                         ; 0x15d9b $9D8B 4C 3D DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9D8E                                                                          ;
lda      $C9                           ; 0x15d9e $9D8E A5 C9                   ;
.byt    $29                            ; 0x15da0 $9D90 29                      ;
L9D91                                                                          ;
.byt    $FC                            ; 0x15da1 $9D91 FC                      ;
beq      L9DA0                         ; 0x15da2 $9D92 F0 0C                   ;
lda      $A8,x                         ; 0x15da4 $9D94 B5 A8                   ;; Enemy State
and      #$0F                          ; 0x15da6 $9D96 29 0F                   ;;Keep Bits:0000_1111
sta      $A8,x                         ; 0x15da8 $9D98 95 A8                   ;; Enemy State
jsr      LDE6C                         ; 0x15daa $9D9A 20 6C DE                ;
jmp      L9DA9                         ; 0x15dad $9D9D 4C A9 9D                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9DA0                                                                          ;
jsr      LE48B                         ; 0x15db0 $9DA0 20 8B E4                ;
jsr      bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least; 0x15db3 $9DA3 20 77 E6;
jsr      LE4D9                         ; 0x15db6 $9DA6 20 D9 E4                ;
L9DA9                                                                          ;
jsr      bank7_Link_Collision_Detection; 0x15db9 $9DA9 20 C1 D6                ;
jsr      bank7_Gravity                 ; 0x15dbc $9DAC 20 BE DE                ;
lda      $A8,x                         ; 0x15dbf $9DAF B5 A8                   ;; Enemy State
and      #$08                          ; 0x15dc1 $9DB1 29 08                   ;;Keep Bits:0000_1000
beq      L9DBA                         ; 0x15dc3 $9DB3 F0 05                   ;
lda      #$10                          ; 0x15dc5 $9DB5 A9 10                   ;;A = #$10 0001_0000
sta      $057E,x                       ; 0x15dc7 $9DB7 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
L9DBA                                                                          ;
lda      $A8,x                         ; 0x15dca $9DBA B5 A8                   ;; Enemy State
and      #$04                          ; 0x15dcc $9DBC 29 04                   ;;Keep Bits:0000_0100
beq      L9DC3                         ; 0x15dce $9DBE F0 03                   ;
jsr      bank7_Floor_Y_Position        ; 0x15dd0 $9DC0 20 C1 DA                ;
L9DC3                                                                          ;
jsr      L9E42                         ; 0x15dd3 $9DC3 20 42 9E                ;
lda       !$F5                         ; 0x15dd6 $9DC6 AD F5 00                ;
and      #$40                          ; 0x15dd9 $9DC9 29 40                   ;;Keep Bits:0100_0000
beq      L9DD2                         ; 0x15ddb $9DCB F0 05                   ;
lda      $17                           ; 0x15ddd $9DCD A5 17                   ;; Link's Shield Position; Link's Shield Position (0 = Link ducked)
sta      $0444,x                       ; 0x15ddf $9DCF 9D 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
L9DD2                                                                          ;
lda      $0479                         ; 0x15de2 $9DD2 AD 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
beq      L9DE6                         ; 0x15de5 $9DD5 F0 0F                   ;
ldy      #$01                          ; 0x15de7 $9DD7 A0 01                   ;;Y = #$01 0000_0001
lda      $29                           ; 0x15de9 $9DD9 A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
adc      #$05                          ; 0x15deb $9DDB 69 05                   ;
cmp      $2A,x                         ; 0x15ded $9DDD D5 2A                   ;; Enemy Y Position
bcc      L9DE2                         ; 0x15def $9DDF 90 01                   ;
dey                                    ; 0x15df1 $9DE1 88                      ;
L9DE2                                                                          ;
tya                                    ; 0x15df2 $9DE2 98                      ;
sta      $0444,x                       ; 0x15df3 $9DE3 9D 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
L9DE6                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x15df6 $9DE6 20 91 DC;
lda      $A8,x                         ; 0x15df9 $9DE9 B5 A8                   ;; Enemy State
and      #$04                          ; 0x15dfb $9DEB 29 04                   ;;Keep Bits:0000_0100
bne      L9DF1                         ; 0x15dfd $9DED D0 02                   ;
beq      L9E1E                         ; 0x15dff $9DEF F0 2D                   ;
L9DF1                                                                          ;
lda      $051B,x                       ; 0x15e01 $9DF1 BD 1B 05                ;; Randomizer
and      #$1F                          ; 0x15e04 $9DF4 29 1F                   ;;Keep Bits:0001_1111
bne      L9E06                         ; 0x15e06 $9DF6 D0 0E                   ;
lda      #$C8                          ; 0x15e08 $9DF8 A9 C8                   ;;A = #$c8 1100_1000
sta      $057E,x                       ; 0x15e0a $9DFA 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
dec      $2A,x                         ; 0x15e0d $9DFD D6 2A                   ;; Enemy Y Position
lda      L9D26,y                       ; 0x15e0f $9DFF B9 26 9D                ;
asl                                    ; 0x15e12 $9E02 0A                      ;
sta      $71,x                         ; 0x15e13 $9E03 95 71                   ;; Enemy X Velocity
rts                                    ; 0x15e15 $9E05 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E06                                                                          ;
lda      $70                           ; 0x15e16 $9E06 A5 70                   ;;hspeed (Link's horizontal velocity); Link's X Velocity	; Player X Delta (E8-00, 00-18)
bne      L9E15                         ; 0x15e18 $9E08 D0 0B                   ;
ldy      #$08                          ; 0x15e1a $9E0A A0 08                   ;;Y = #$08 0000_1000
lda      $12                           ; 0x15e1c $9E0C A5 12                   ;; Frame Counter (ascending)
and      #$40                          ; 0x15e1e $9E0E 29 40                   ;;Keep Bits:0100_0000
bne      L9E14                         ; 0x15e20 $9E10 D0 02                   ;
ldy      #$F8                          ; 0x15e22 $9E12 A0 F8                   ;;Y = #$f8 1111_1000
L9E14                                                                          ;
tya                                    ; 0x15e24 $9E14 98                      ;
L9E15                                                                          ;
sta      $71,x                         ; 0x15e25 $9E15 95 71                   ;; Enemy X Velocity
asl                                    ; 0x15e27 $9E17 0A                      ;
ror      $71,x                         ; 0x15e28 $9E18 76 71                   ;; Enemy X Velocity
lda      $81,x                         ; 0x15e2a $9E1A B5 81                   ;; Current Animation Frame for Enemys
bne      L9E37                         ; 0x15e2c $9E1C D0 19                   ;
L9E1E                                                                          ;
ldy      $A1,x                         ; 0x15e2e $9E1E B4 A1                   ;; Enemy Code
lda      L9D11,y                       ; 0x15e30 $9E20 B9 11 9D                ;
inc      $AF,x                         ; 0x15e33 $9E23 F6 AF                   ;; Various enemy state variables
and      $AF,x                         ; 0x15e35 $9E25 35 AF                   ;; Various enemy state variables
bne      L9E37                         ; 0x15e37 $9E27 D0 0E                   ;
lda      $051B,x                       ; 0x15e39 $9E29 BD 1B 05                ;; Randomizer
and      #$02                          ; 0x15e3c $9E2C 29 02                   ;;Keep Bits:0000_0010
tay                                    ; 0x15e3e $9E2E A8                      ;
iny                                    ; 0x15e3f $9E2F C8                      ;
sty      $81,x                         ; 0x15e40 $9E30 94 81                   ;; Current Animation Frame for Enemys
lda      #$18                          ; 0x15e42 $9E32 A9 18                   ;;A = #$18 0001_1000
sta      $0504,x                       ; 0x15e44 $9E34 9D 04 05                ;; Timer for Enemy
L9E37                                                                          ;
rts                                    ; 0x15e47 $9E37 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E38                                                                          ;
lda      $A8,x                         ; 0x15e48 $9E38 B5 A8                   ;; Enemy State
and      #$03                          ; 0x15e4a $9E3A 29 03                   ;;Keep Bits:0000_0011
bne      L9E41                         ; 0x15e4c $9E3C D0 03                   ;
jmp      bank7_Simple_Horizontal_Movement; 0x15e4e $9E3E 4C B8 DE              ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E41                                                                          ;
rts                                    ; 0x15e51 $9E41 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E42                                                                          ;
ldy      $043E,x                       ; 0x15e52 $9E42 BC 3E 04                ;
beq      L9E63                         ; 0x15e55 $9E45 F0 1C                   ;
lda      $A1,x                         ; 0x15e57 $9E47 B5 A1                   ;; Enemy Code
cmp      #$1D                          ; 0x15e59 $9E49 C9 1D                   ;
beq      L9E53                         ; 0x15e5b $9E4B F0 06                   ;
lda      $A8,x                         ; 0x15e5d $9E4D B5 A8                   ;; Enemy State
and      #$04                          ; 0x15e5f $9E4F 29 04                   ;;Keep Bits:0000_0100
beq      L9E5E                         ; 0x15e61 $9E51 F0 0B                   ;
L9E53                                                                          ;
dec      $043E,x                       ; 0x15e63 $9E53 DE 3E 04                ;
bpl      L9E5E                         ; 0x15e66 $9E56 10 06                   ;
inc      $043E,x                       ; 0x15e68 $9E58 FE 3E 04                ;
inc      $043E,x                       ; 0x15e6b $9E5B FE 3E 04                ;
L9E5E                                                                          ;
sty      $71,x                         ; 0x15e6e $9E5E 94 71                   ;; Enemy X Velocity
jsr      LEA32                         ; 0x15e70 $9E60 20 32 EA                ;
L9E63                                                                          ;
jmp      L9E38                         ; 0x15e73 $9E63 4C 38 9E                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E66                                                                          ;
rts                                    ; 0x15e76 $9E66 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
L9E67                                                                          ;
.byt    $04                            ; 0x15e77 $9E67 04                      ;
L9E68                                                                          ;
.byt    $FC                            ; 0x15e78 $9E68 FC                      ;
php                                    ; 0x15e79 $9E69 08                      ;
sed                                    ; 0x15e7a $9E6A F8                      ;
bank5_Enemy_Routines1_Fokkeru                                                  ;
jsr      L9E42                         ; 0x15e7b $9E6B 20 42 9E                ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x15e7e $9E6E 20 91 DC;
inc      $AF,x                         ; 0x15e81 $9E71 F6 AF                   ;; Various enemy state variables
lda      $AF,x                         ; 0x15e83 $9E73 B5 AF                   ;; Various enemy state variables
and      #$3F                          ; 0x15e85 $9E75 29 3F                   ;;Keep Bits:0011_1111
bne      L9E98                         ; 0x15e87 $9E77 D0 1F                   ;
jsr      bank7_Spawn_New_Projectile    ; 0x15e89 $9E79 20 CE DB                ;
bcs      L9E98                         ; 0x15e8c $9E7C B0 1A                   ;
lda      #$07                          ; 0x15e8e $9E7E A9 07                   ;;A = #$07 0000_0111
sta      $87,y                         ; 0x15e90 $9E80 99 87 00                ;
lda      #$E0                          ; 0x15e93 $9E83 A9 E0                   ;;A = #$e0 1110_0000
sta      $0584,y                       ; 0x15e95 $9E85 99 84 05                ;
ldx      $66,y                         ; 0x15e98 $9E88 B6 66                   ;
lda      L9E68,x                       ; 0x15e9a $9E8A BD 68 9E                ;
asl                                    ; 0x15e9d $9E8D 0A                      ;
sta      $77,y                         ; 0x15e9e $9E8E 99 77 00                ;
lda      #$00                          ; 0x15ea1 $9E91 A9 00                   ;;A = #$00 0000_0000
sta      $045E,y                       ; 0x15ea3 $9E93 99 5E 04                ;
ldx      $10                           ; 0x15ea6 $9E96 A6 10                   ;; used as monster x register ;draw boss hp bar
L9E98                                                                          ;
jsr      bank7_Gravity                 ; 0x15ea8 $9E98 20 BE DE                ;
jsr      LDE3D                         ; 0x15eab $9E9B 20 3D DE                ;
jsr      bank7_Link_Collision_Detection; 0x15eae $9E9E 20 C1 D6                ;
lda      $A8,x                         ; 0x15eb1 $9EA1 B5 A8                   ;; Enemy State
and      #$04                          ; 0x15eb3 $9EA3 29 04                   ;;Keep Bits:0000_0100
beq      L9EBE                         ; 0x15eb5 $9EA5 F0 17                   ;
jsr      bank7_Floor_Y_Position        ; 0x15eb7 $9EA7 20 C1 DA                ;
lda      $051B,x                       ; 0x15eba $9EAA BD 1B 05                ;; Randomizer
lsr                                    ; 0x15ebd $9EAD 4A                      ;
and      #$03                          ; 0x15ebe $9EAE 29 03                   ;;Keep Bits:0000_0011
tay                                    ; 0x15ec0 $9EB0 A8                      ;
lda      L9E67,y                       ; 0x15ec1 $9EB1 B9 67 9E                ;
sta      $71,x                         ; 0x15ec4 $9EB4 95 71                   ;; Enemy X Velocity
lda      #$F0                          ; 0x15ec6 $9EB6 A9 F0                   ;;A = #$f0 1111_0000
bcc      L9EBB                         ; 0x15ec8 $9EB8 90 01                   ;
asl                                    ; 0x15eca $9EBA 0A                      ;
L9EBB                                                                          ;
sta      $057E,x                       ; 0x15ecb $9EBB 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
L9EBE                                                                          ;
rts                                    ; 0x15ece $9EBE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Thunderbird                                              ;
lda      $C2,x                         ; 0x15ecf $9EBF B5 C2                   ;; Enemy Current HP
ldx      #$29                          ; 0x15ed1 $9EC1 A2 29                   ;;X = #$29 0010_1001
ldy      #$02                          ; 0x15ed3 $9EC3 A0 02                   ;;Y = #$02 0000_0010
cmp      #$C0                          ; 0x15ed5 $9EC5 C9 C0                   ;
beq      L9ED7                         ; 0x15ed7 $9EC7 F0 0E                   ;
bcs      L9ED3                         ; 0x15ed9 $9EC9 B0 08                   ;
ldx      #$2B                          ; 0x15edb $9ECB A2 2B                   ;;X = #$2b 0010_1011
lda      $12                           ; 0x15edd $9ECD A5 12                   ;; Frame Counter (ascending)
and      #$18                          ; 0x15edf $9ECF 29 18                   ;;Keep Bits:0001_1000
beq      L9ED5                         ; 0x15ee1 $9ED1 F0 02                   ;
L9ED3                                                                          ;
ldx      #$19                          ; 0x15ee3 $9ED3 A2 19                   ;;X = #$19 0001_1001
L9ED5                                                                          ;
ldy      #$03                          ; 0x15ee5 $9ED5 A0 03                   ;;Y = #$03 0000_0011
L9ED7                                                                          ;
sty      $03                           ; 0x15ee7 $9ED7 84 03                   ;
stx      $6F03                         ; 0x15ee9 $9ED9 8E 03 6F                ;
ldy      #$50                          ; 0x15eec $9EDC A0 50                   ;;Y = #$50 0101_0000
lda      #$02                          ; 0x15eee $9EDE A9 02                   ;;A = #$02 0000_0010
sta      $02                           ; 0x15ef0 $9EE0 85 02                   ;
ldx      #$2C                          ; 0x15ef2 $9EE2 A2 2C                   ;;X = #$2c 0010_1100
jsr      LF1F4                         ; 0x15ef4 $9EE4 20 F4 F1                ;
jsr      LF1F4                         ; 0x15ef7 $9EE7 20 F4 F1                ;
jsr      LF1F4                         ; 0x15efa $9EEA 20 F4 F1                ;
jsr      LF1F4                         ; 0x15efd $9EED 20 F4 F1                ;
jsr      LF0D7                         ; 0x15f00 $9EF0 20 D7 F0                ;
lda      $C9                           ; 0x15f03 $9EF3 A5 C9                   ;
pha                                    ; 0x15f05 $9EF5 48                      ;
asl                                    ; 0x15f06 $9EF6 0A                      ;
asl                                    ; 0x15f07 $9EF7 0A                      ;
and      #$0F                          ; 0x15f08 $9EF8 29 0F                   ;;Keep Bits:0000_1111
sta      $C9                           ; 0x15f0a $9EFA 85 C9                   ;
lda      $2A,x                         ; 0x15f0c $9EFC B5 2A                   ;; Enemy Y Position
sta      L0000                         ; 0x15f0e $9EFE 85 00                   ;
lda      $01                           ; 0x15f10 $9F00 A5 01                   ;
clc                                    ; 0x15f12 $9F02 18                      ;
adc      #$10                          ; 0x15f13 $9F03 69 10                   ;
sta      $01                           ; 0x15f15 $9F05 85 01                   ;
dec      $02                           ; 0x15f17 $9F07 C6 02                   ;
ldx      #$2C                          ; 0x15f19 $9F09 A2 2C                   ;;X = #$2c 0010_1100
jsr      LF1F4                         ; 0x15f1b $9F0B 20 F4 F1                ;
jsr      LF1F4                         ; 0x15f1e $9F0E 20 F4 F1                ;
jsr      LF1F4                         ; 0x15f21 $9F11 20 F4 F1                ;
jsr      LF1F4                         ; 0x15f24 $9F14 20 F4 F1                ;
jsr      LF0D7                         ; 0x15f27 $9F17 20 D7 F0                ;
lda      $12                           ; 0x15f2a $9F1A A5 12                   ;; Frame Counter (ascending)
and      #$06                          ; 0x15f2c $9F1C 29 06                   ;;Keep Bits:0000_0110
lsr                                    ; 0x15f2e $9F1E 4A                      ;
adc      #$0C                          ; 0x15f2f $9F1F 69 0C                   ;
sta      L0000                         ; 0x15f31 $9F21 85 00                   ;
lda      $2A,x                         ; 0x15f33 $9F23 B5 2A                   ;; Enemy Y Position
sta      $02A0                         ; 0x15f35 $9F25 8D A0 02                ;
sta      $02AC                         ; 0x15f38 $9F28 8D AC 02                ;
adc      L0000                         ; 0x15f3b $9F2B 65 00                   ;
sta      $02A4                         ; 0x15f3d $9F2D 8D A4 02                ;
sta      $02B0                         ; 0x15f40 $9F30 8D B0 02                ;
adc      L0000                         ; 0x15f43 $9F33 65 00                   ;
sta      $02A8                         ; 0x15f45 $9F35 8D A8 02                ;
sta      $02B4                         ; 0x15f48 $9F38 8D B4 02                ;
lda      $CD                           ; 0x15f4b $9F3B A5 CD                   ;
sec                                    ; 0x15f4d $9F3D 38                      ;
sbc      #$08                          ; 0x15f4e $9F3E E9 08                   ;
sta      $02A3                         ; 0x15f50 $9F40 8D A3 02                ;
sta      $02A7                         ; 0x15f53 $9F43 8D A7 02                ;
sta      $02AB                         ; 0x15f56 $9F46 8D AB 02                ;
clc                                    ; 0x15f59 $9F49 18                      ;
adc      #$28                          ; 0x15f5a $9F4A 69 28                   ;
sta      $02AF                         ; 0x15f5c $9F4C 8D AF 02                ;
sta      $02B3                         ; 0x15f5f $9F4F 8D B3 02                ;
sta      $02B7                         ; 0x15f62 $9F52 8D B7 02                ;
lda      #$0F                          ; 0x15f65 $9F55 A9 0F                   ;;A = #$0f 0000_1111
sta      $02A1                         ; 0x15f67 $9F57 8D A1 02                ;
sta      L02AD                         ; 0x15f6a $9F5A 8D AD 02                ;
lda      #$15                          ; 0x15f6d $9F5D A9 15                   ;;A = #$15 0001_0101
sta      $02A5                         ; 0x15f6f $9F5F 8D A5 02                ;
sta      $02B1                         ; 0x15f72 $9F62 8D B1 02                ;
lda      #$1B                          ; 0x15f75 $9F65 A9 1B                   ;;A = #$1b 0001_1011
sta      $02A9                         ; 0x15f77 $9F67 8D A9 02                ;
sta      $02B5                         ; 0x15f7a $9F6A 8D B5 02                ;
lda      $0252                         ; 0x15f7d $9F6D AD 52 02                ;
sta      $02A2                         ; 0x15f80 $9F70 8D A2 02                ;
sta      $02A6                         ; 0x15f83 $9F73 8D A6 02                ;
sta      $02AA                         ; 0x15f86 $9F76 8D AA 02                ;
ora      #$40                          ; 0x15f89 $9F79 09 40                   ;;Set Bits:0100_0000
sta      $02AE                         ; 0x15f8b $9F7B 8D AE 02                ;
sta      $02B2                         ; 0x15f8e $9F7E 8D B2 02                ;
sta      $02B6                         ; 0x15f91 $9F81 8D B6 02                ;
lda      $4E,x                         ; 0x15f94 $9F84 B5 4E                   ;; Enemy X Position (low byte)
pha                                    ; 0x15f96 $9F86 48                      ;
sec                                    ; 0x15f97 $9F87 38                      ;
sbc      #$08                          ; 0x15f98 $9F88 E9 08                   ;
sta      $4E,x                         ; 0x15f9a $9F8A 95 4E                   ;; Enemy X Position (low byte)
lda      $3C,x                         ; 0x15f9c $9F8C B5 3C                   ;; Enemy X Position (high byte)
pha                                    ; 0x15f9e $9F8E 48                      ;
sbc      #$00                          ; 0x15f9f $9F8F E9 00                   ;
sta      $3C,x                         ; 0x15fa1 $9F91 95 3C                   ;; Enemy X Position (high byte)
inx                                    ; 0x15fa3 $9F93 E8                      ;
ldy      #$01                          ; 0x15fa4 $9F94 A0 01                   ;;Y = #$01 0000_0001
jsr      LF2D3                         ; 0x15fa6 $9F96 20 D3 F2                ;
ldx      $10                           ; 0x15fa9 $9F99 A6 10                   ;; used as monster x register ;draw boss hp bar
and      #$84                          ; 0x15fab $9F9B 29 84                   ;;Keep Bits:1000_0100
beq      L9FBA                         ; 0x15fad $9F9D F0 1B                   ;
bpl      L9FAC                         ; 0x15faf $9F9F 10 0B                   ;
ldy      #$F8                          ; 0x15fb1 $9FA1 A0 F8                   ;;Y = #$f8 1111_1000
sty      $02A0                         ; 0x15fb3 $9FA3 8C A0 02                ;
sty      $02A4                         ; 0x15fb6 $9FA6 8C A4 02                ;
sty      $02A8                         ; 0x15fb9 $9FA9 8C A8 02                ;
L9FAC                                                                          ;
asl                                    ; 0x15fbc $9FAC 0A                      ;
beq      L9FBA                         ; 0x15fbd $9FAD F0 0B                   ;
ldy      #$F8                          ; 0x15fbf $9FAF A0 F8                   ;;Y = #$f8 1111_1000
sty      $02AC                         ; 0x15fc1 $9FB1 8C AC 02                ;
sty      $02B0                         ; 0x15fc4 $9FB4 8C B0 02                ;
sty      $02B4                         ; 0x15fc7 $9FB7 8C B4 02                ;
L9FBA                                                                          ;
pla                                    ; 0x15fca $9FBA 68                      ;
sta      $3C,x                         ; 0x15fcb $9FBB 95 3C                   ;; Enemy X Position (high byte)
pla                                    ; 0x15fcd $9FBD 68                      ;
sta      $4E,x                         ; 0x15fce $9FBE 95 4E                   ;; Enemy X Position (low byte)
pla                                    ; 0x15fd0 $9FC0 68                      ;
sta      $C9                           ; 0x15fd1 $9FC1 85 C9                   ;
L9FC3                                                                          ;
rts                                    ; 0x15fd3 $9FC3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_9FC4                                                               ;
.byt    $14,$16,$18                    ; 0x15fd4 $9FC4 14 16 18                ;
L9FC7                                                                          ;
.byt    $16,$05,$F8,$04,$F8,$FB,$08,$FC; 0x15fd7 $9FC7 16 05 F8 04 F8 FB 08 FC ;
L9FCF                                                                          ;
.byt    $08,$E0,$E0,$F0,$F0            ; 0x15fdf $9FCF 08 E0 E0 F0 F0          ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Fokka                                                    ;
lda      $0444,x                       ; 0x15fe4 $9FD4 BD 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
ldy      #$00                          ; 0x15fe7 $9FD7 A0 00                   ;;Y = #$00 0000_0000
cmp      #$00                          ; 0x15fe9 $9FD9 C9 00                   ;
bne      L9FDF                         ; 0x15feb $9FDB D0 02                   ;
ldy      #$08                          ; 0x15fed $9FDD A0 08                   ;;Y = #$08 0000_1000
L9FDF                                                                          ;
lda      $A8,x                         ; 0x15fef $9FDF B5 A8                   ;; Enemy State
and      #$04                          ; 0x15ff1 $9FE1 29 04                   ;;Keep Bits:0000_0100
bne      L9FEE                         ; 0x15ff3 $9FE3 D0 09                   ;
lda      $057E,x                       ; 0x15ff5 $9FE5 BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
bpl      LA008                         ; 0x15ff8 $9FE8 10 1E                   ;
ldy      #$10                          ; 0x15ffa $9FEA A0 10                   ;;Y = #$10 0001_0000
bne      LA008                         ; 0x15ffc $9FEC D0 1A                   ;
L9FEE                                                                          ;
lda      $71,x                         ; 0x15ffe $9FEE B5 71                   ;; Enemy X Velocity
beq      LA008                         ; 0x16000 $9FF0 F0 16                   ;
bpl      L9FF9                         ; 0x16002 $9FF2 10 05                   ;
eor      #$FF                          ; 0x16004 $9FF4 49 FF                   ;;Flip Bits:1111_1111
clc                                    ; 0x16006 $9FF6 18                      ;
adc      #$01                          ; 0x16007 $9FF7 69 01                   ;
L9FF9                                                                          ;
cmp      #$10                          ; 0x16009 $9FF9 C9 10                   ;
lda      #$08                          ; 0x1600b $9FFB A9 08                   ;;A = #$08 0000_1000
bcc      LA000                         ; 0x1600d $9FFD 90 01                   ;
lsr                                    ; 0x1600f $9FFF 4A                      ;
LA000                                                                          ;
and      $12                           ; 0x16010 $A000 25 12                   ;; Frame Counter (ascending)
bne      LA008                         ; 0x16012 $A002 D0 04                   ;
iny                                    ; 0x16014 $A004 C8                      ;
iny                                    ; 0x16015 $A005 C8                      ;
iny                                    ; 0x16016 $A006 C8                      ;
iny                                    ; 0x16017 $A007 C8                      ;
LA008                                                                          ;
tya                                    ; 0x16018 $A008 98                      ;
ldy      $91,x                         ; 0x16019 $A009 B4 91                   ;
tax                                    ; 0x1601b $A00B AA                      ;
jsr      LF1F4                         ; 0x1601c $A00C 20 F4 F1                ;
jsr      LF0D7                         ; 0x1601f $A00F 20 D7 F0                ;
lda      $81,x                         ; 0x16022 $A012 B5 81                   ;; Current Animation Frame for Enemys
beq      LA058                         ; 0x16024 $A014 F0 42                   ;
sta      $06                           ; 0x16026 $A016 85 06                   ;
tax                                    ; 0x16028 $A018 AA                      ;
lda      L0000                         ; 0x16029 $A019 A5 00                   ;
clc                                    ; 0x1602b $A01B 18                      ;
adc      L9FCF,x                       ; 0x1602c $A01C 7D CF 9F                ;
sta      L0000                         ; 0x1602f $A01F 85 00                   ;
lda      $02                           ; 0x16031 $A021 A5 02                   ;
cmp      #$01                          ; 0x16033 $A023 C9 01                   ;
bne      LA02B                         ; 0x16035 $A025 D0 04                   ;
inx                                    ; 0x16037 $A027 E8                      ;
inx                                    ; 0x16038 $A028 E8                      ;
inx                                    ; 0x16039 $A029 E8                      ;
inx                                    ; 0x1603a $A02A E8                      ;
LA02B                                                                          ;
lda      L9FC7,x                       ; 0x1603b $A02B BD C7 9F                ;
ldx      $10                           ; 0x1603e $A02E A6 10                   ;; used as monster x register ;draw boss hp bar
sty      $07                           ; 0x16040 $A030 84 07                   ;
ldy      $0504,x                       ; 0x16042 $A032 BC 04 05                ;; Timer for Enemy
cpy      #$03                          ; 0x16045 $A035 C0 03                   ;
bcc      LA03E                         ; 0x16047 $A037 90 05                   ;
cpy      #$0D                          ; 0x16049 $A039 C0 0D                   ;
bcs      LA03E                         ; 0x1604b $A03B B0 01                   ;
asl                                    ; 0x1604d $A03D 0A                      ;
LA03E                                                                          ;
clc                                    ; 0x1604e $A03E 18                      ;
adc      $01                           ; 0x1604f $A03F 65 01                   ;
sta      $01                           ; 0x16051 $A041 85 01                   ;
ldy      $07                           ; 0x16053 $A043 A4 07                   ;
ldx      $06                           ; 0x16055 $A045 A6 06                   ;
cpx      #$04                          ; 0x16057 $A047 E0 04                   ;
bne      LA051                         ; 0x16059 $A049 D0 06                   ;
lda      $03                           ; 0x1605b $A04B A5 03                   ;
ora      #$80                          ; 0x1605d $A04D 09 80                   ;;Set Bits:1000_0000
sta      $03                           ; 0x1605f $A04F 85 03                   ;
LA051                                                                          ;
lda      L9FC3,x                       ; 0x16061 $A051 BD C3 9F                ;
tax                                    ; 0x16064 $A054 AA                      ;
jmp      LF0D7                         ; 0x16065 $A055 4C D7 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA058                                                                          ;
ldx      $10                           ; 0x16068 $A058 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1606a $A05A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Fokkeru                                                  ;
lda      $AF,x                         ; 0x1606b $A05B B5 AF                   ;; Various enemy state variables
pha                                    ; 0x1606d $A05D 48                      ;
ldx      #$1C                          ; 0x1606e $A05E A2 1C                   ;;X = #$1c 0001_1100
and      #$10                          ; 0x16070 $A060 29 10                   ;;Keep Bits:0001_0000
beq      LA066                         ; 0x16072 $A062 F0 02                   ;
ldx      #$24                          ; 0x16074 $A064 A2 24                   ;;X = #$24 0010_0100
LA066                                                                          ;
pla                                    ; 0x16076 $A066 68                      ;
and      #$08                          ; 0x16077 $A067 29 08                   ;;Keep Bits:0000_1000
bne      LA06F                         ; 0x16079 $A069 D0 04                   ;
inx                                    ; 0x1607b $A06B E8                      ;
inx                                    ; 0x1607c $A06C E8                      ;
inx                                    ; 0x1607d $A06D E8                      ;
inx                                    ; 0x1607e $A06E E8                      ;
LA06F                                                                          ;
jsr      LF1F4                         ; 0x1607f $A06F 20 F4 F1                ;
jmp      LF0D7                         ; 0x16082 $A072 4C D7 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines1_Bubbles                                                  ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x16085 $A075 20 02 DA                ;
jsr      bank7_Simple_Horizontal_Movement; 0x16088 $A078 20 B8 DE              ;
jsr      bank7_Simple_Vertical_Movement; 0x1608b $A07B 20 C8 DE                ;
LA07E                                                                          ;
jsr      LDE3D                         ; 0x1608e $A07E 20 3D DE                ;
lda      $A8,x                         ; 0x16091 $A081 B5 A8                   ;; Enemy State
and      #$10                          ; 0x16093 $A083 29 10                   ;;Keep Bits:0001_0000
beq      LA094                         ; 0x16095 $A085 F0 0D                   ;
lda      $0773                         ; 0x16097 $A087 AD 73 07                ;; Magic Points; Current Magic left in meter
sec                                    ; 0x1609a $A08A 38                      ;
sbc      #$01                          ; 0x1609b $A08B E9 01                   ;
bcs      LA091                         ; 0x1609d $A08D B0 02                   ;
lda      #$00                          ; 0x1609f $A08F A9 00                   ;;A = #$00 0000_0000
LA091                                                                          ;
sta      $0773                         ; 0x160a1 $A091 8D 73 07                ;; Magic Points; Current Magic left in meter
LA094                                                                          ;
lda      $074F                         ; 0x160a4 $A094 AD 4F 07                ;; Related to Pause Pane
ora      #$80                          ; 0x160a7 $A097 09 80                   ;;Set Bits:1000_0000
sta      $074F                         ; 0x160a9 $A099 8D 4F 07                ;; Related to Pause Pane
jsr      bank7_Link_Collision_Detection; 0x160ac $A09C 20 C1 D6                ;
lda      $A1,x                         ; 0x160af $A09F B5 A1                   ;; Enemy Code
cmp      #$17                          ; 0x160b1 $A0A1 C9 17                   ;
bne      LA0FB                         ; 0x160b3 $A0A3 D0 56                   ;
lda      $C2,x                         ; 0x160b5 $A0A5 B5 C2                   ;; Enemy Current HP
cmp      #$C0                          ; 0x160b7 $A0A7 C9 C0                   ;
bcs      LA0FB                         ; 0x160b9 $A0A9 B0 50                   ;
asl      $71,x                         ; 0x160bb $A0AB 16 71                   ;; Enemy X Velocity
asl      $057E,x                       ; 0x160bd $A0AD 1E 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
lda      #$15                          ; 0x160c0 $A0B0 A9 15                   ;;A = #$15 0001_0101
sta      $A1,x                         ; 0x160c2 $A0B2 95 A1                   ;; Enemy Code
ldy      #$05                          ; 0x160c4 $A0B4 A0 05                   ;;Y = #$05 0000_0101
LA0B6                                                                          ;
lda      $B6,y                         ; 0x160c6 $A0B6 B9 B6 00                ;
beq      LA0C0                         ; 0x160c9 $A0B9 F0 05                   ;
dey                                    ; 0x160cb $A0BB 88                      ;
bpl      LA0B6                         ; 0x160cc $A0BC 10 F8                   ;
bmi      LA0FB                         ; 0x160ce $A0BE 30 3B                   ;
LA0C0                                                                          ;
lda      #$01                          ; 0x160d0 $A0C0 A9 01                   ;;A = #$01 0000_0001
sta      $B6,y                         ; 0x160d2 $A0C2 99 B6 00                ;
sta      $1A,y                         ; 0x160d5 $A0C5 99 1A 00                ;
lda      $C2,x                         ; 0x160d8 $A0C8 B5 C2                   ;; Enemy Current HP
sta      $C2,y                         ; 0x160da $A0CA 99 C2 00                ;
lda      #$15                          ; 0x160dd $A0CD A9 15                   ;;A = #$15 0001_0101
sta      $A1,y                         ; 0x160df $A0CF 99 A1 00                ;
lda      $71,x                         ; 0x160e2 $A0D2 B5 71                   ;; Enemy X Velocity
sta      $71,y                         ; 0x160e4 $A0D4 99 71 00                ;
lda      $057E,x                       ; 0x160e7 $A0D7 BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
eor      #$FF                          ; 0x160ea $A0DA 49 FF                   ;;Flip Bits:1111_1111
sta      $057E,y                       ; 0x160ec $A0DC 99 7E 05                ;
lda      $2A,x                         ; 0x160ef $A0DF B5 2A                   ;; Enemy Y Position
adc      #$10                          ; 0x160f1 $A0E1 69 10                   ;
sta      $2A,y                         ; 0x160f3 $A0E3 99 2A 00                ;
lda      $4E,x                         ; 0x160f6 $A0E6 B5 4E                   ;; Enemy X Position (low byte)
adc      #$10                          ; 0x160f8 $A0E8 69 10                   ;
sta      $4E,y                         ; 0x160fa $A0EA 99 4E 00                ;
lda      $3C,x                         ; 0x160fd $A0ED B5 3C                   ;; Enemy X Position (high byte)
adc      #$00                          ; 0x160ff $A0EF 69 00                   ;
sta      $3C,y                         ; 0x16101 $A0F1 99 3C 00                ;
lda      #$FF                          ; 0x16104 $A0F4 A9 FF                   ;;A = #$ff 1111_1111
sta      $C2,y                         ; 0x16106 $A0F6 99 C2 00                ;
sta      $C2,x                         ; 0x16109 $A0F9 95 C2                   ;; Enemy Current HP
LA0FB                                                                          ;
.byt    $A5                            ; 0x1610b $A0FB A5                      ;
LA0FC                                                                          ;
cmp      #$29                          ; 0x1610c $A0FC C9 29                   ;
.byt    $0F                            ; 0x1610e $A0FE 0F                      ;
bne      LA107                         ; 0x1610f $A0FF D0 06                   ;
lda      $A8,x                         ; 0x16111 $A101 B5 A8                   ;; Enemy State
and      #$03                          ; 0x16113 $A103 29 03                   ;;Keep Bits:0000_0011
beq      LA10D                         ; 0x16115 $A105 F0 06                   ;
LA107                                                                          ;
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0x16117 $A107 20 EB E8;
jsr      bank7_Simple_Horizontal_Movement; 0x1611a $A10A 20 B8 DE              ;
LA10D                                                                          ;
lda      $C9                           ; 0x1611d $A10D A5 C9                   ;
and      #$F0                          ; 0x1611f $A10F 29 F0                   ;;Keep Bits:1111_0000
bne      LA119                         ; 0x16121 $A111 D0 06                   ;
lda      $A8,x                         ; 0x16123 $A113 B5 A8                   ;; Enemy State
and      #$0C                          ; 0x16125 $A115 29 0C                   ;;Keep Bits:0000_1100
beq      LA132                         ; 0x16127 $A117 F0 19                   ;
LA119                                                                          ;
lda      $057E,x                       ; 0x16129 $A119 BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
eor      #$FF                          ; 0x1612c $A11C 49 FF                   ;;Flip Bits:1111_1111
clc                                    ; 0x1612e $A11E 18                      ;
adc      #$01                          ; 0x1612f $A11F 69 01                   ;
sta      $057E,x                       ; 0x16131 $A121 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jmp      bank7_Simple_Vertical_Movement; 0x16134 $A124 4C C8 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Init_Routines_Bubble                                               ;
lda      #$F0                          ; 0x16137 $A127 A9 F0                   ; A = F0
bne      LA12D                         ; 0x16139 $A129 D0 02                   ;
bank5_Enemy_Init_Routines_Bubble__Fast                                         ;
lda      #$E0                          ; 0x1613b $A12B A9 E0                   ; A = E0
LA12D                                                                          ;
sta      $71,x                         ; 0x1613d $A12D 95 71                   ;; Enemy X Velocity
sta      $057E,x                       ; 0x1613f $A12F 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
LA132                                                                          ;
rts                                    ; 0x16142 $A132 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines2_Big_Bubble                                               ;
lda      #$02                          ; 0x16143 $A133 A9 02                   ;;A = #$02 0000_0010
sta      $02                           ; 0x16145 $A135 85 02                   ;
lda      $12                           ; 0x16147 $A137 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x16149 $A139 4A                      ;
and      #$03                          ; 0x1614a $A13A 29 03                   ;;Keep Bits:0000_0011
sta      $03                           ; 0x1614c $A13C 85 03                   ;
ldx      #$40                          ; 0x1614e $A13E A2 40                   ;;X = #$40 0100_0000
lda      $C9                           ; 0x16150 $A140 A5 C9                   ;
pha                                    ; 0x16152 $A142 48                      ;
asl      $C9                           ; 0x16153 $A143 06 C9                   ;
lda      $01                           ; 0x16155 $A145 A5 01                   ;
adc      #$08                          ; 0x16157 $A147 69 08                   ;
sta      $01                           ; 0x16159 $A149 85 01                   ;
jsr      LF1F4                         ; 0x1615b $A14B 20 F4 F1                ;
jsr      LEF08                         ; 0x1615e $A14E 20 08 EF                ;
jsr      LF1F4                         ; 0x16161 $A151 20 F4 F1                ;
jsr      LEF08                         ; 0x16164 $A154 20 08 EF                ;
pla                                    ; 0x16167 $A157 68                      ;
and      #$09                          ; 0x16168 $A158 29 09                   ;;Keep Bits:0000_1001
bne      LA178                         ; 0x1616a $A15A D0 1C                   ;
lda      L0000                         ; 0x1616c $A15C A5 00                   ;
sec                                    ; 0x1616e $A15E 38                      ;
sbc      #$18                          ; 0x1616f $A15F E9 18                   ;
sta      L0000                         ; 0x16171 $A161 85 00                   ;
lda      $01                           ; 0x16173 $A163 A5 01                   ;
sbc      #$08                          ; 0x16175 $A165 E9 08                   ;
sta      $01                           ; 0x16177 $A167 85 01                   ;
jsr      LF0D7                         ; 0x16179 $A169 20 D7 F0                ;
jsr      LEF08                         ; 0x1617c $A16C 20 08 EF                ;
lda      $01FF,y                       ; 0x1617f $A16F B9 FF 01                ;
clc                                    ; 0x16182 $A172 18                      ;
adc      #$10                          ; 0x16183 $A173 69 10                   ;
sta      $01FF,y                       ; 0x16185 $A175 99 FF 01                ;
LA178                                                                          ;
ldx      $10                           ; 0x16188 $A178 A6 10                   ;; used as monster x register ;draw boss hp bar
LA17A                                                                          ;
rts                                    ; 0x1618a $A17A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_A17B                                                               ;
.byt    $04,$08,$00,$08,$04            ; 0x1618b $A17B 04 08 00 08 04          ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines1_Giant_Bot                                                ;
lda      $C2,x                         ; 0x16190 $A180 B5 C2                   ;; Enemy Current HP
cmp      #$30                          ; 0x16192 $A182 C9 30                   ;
bcs      LA1CA                         ; 0x16194 $A184 B0 44                   ;
ldy      #$05                          ; 0x16196 $A186 A0 05                   ;;Y = #$05 0000_0101
LA188                                                                          ;
lda      #$04                          ; 0x16198 $A188 A9 04                   ;;A = #$04 0000_0100
sta      $A1,y                         ; 0x1619a $A18A 99 A1 00                ;
lda      #$01                          ; 0x1619d $A18D A9 01                   ;;A = #$01 0000_0001
sta      $B6,y                         ; 0x1619f $A18F 99 B6 00                ;
sta      $040E,y                       ; 0x161a2 $A192 99 0E 04                ;
sta      $1A,y                         ; 0x161a5 $A195 99 1A 00                ;
lsr                                    ; 0x161a8 $A198 4A                      ;
LA199                                                                          ;
sta      $A8,y                         ; 0x161a9 $A199 99 A8 00                ;
LA19C                                                                          ;
lda      $4E,x                         ; 0x161ac $A19C B5 4E                   ;; Enemy X Position (low byte)
adc      L961F,y                       ; 0x161ae $A19E 79 1F 96                ;
sta      $4E,y                         ; 0x161b1 $A1A1 99 4E 00                ;
lda      $3C,x                         ; 0x161b4 $A1A4 B5 3C                   ;; Enemy X Position (high byte)
adc      L9624,y                       ; 0x161b6 $A1A6 79 24 96                ;
sta      $3C,y                         ; 0x161b9 $A1A9 99 3C 00                ;
lda      $2A,x                         ; 0x161bc $A1AC B5 2A                   ;; Enemy Y Position
adc      LA17A,y                       ; 0x161be $A1AE 79 7A A1                ;
sta      $2A,y                         ; 0x161c1 $A1B1 99 2A 00                ;
lda      #$D0                          ; 0x161c4 $A1B4 A9 D0                   ;;A = #$d0 1101_0000
sta      $057E,y                       ; 0x161c6 $A1B6 99 7E 05                ;
sta      $C2,y                         ; 0x161c9 $A1B9 99 C2 00                ;
lda      $051C,y                       ; 0x161cc $A1BC B9 1C 05                ;
and      #$1F                          ; 0x161cf $A1BF 29 1F                   ;;Keep Bits:0001_1111
adc      #$F0                          ; 0x161d1 $A1C1 69 F0                   ;
sta      $71,y                         ; 0x161d3 $A1C3 99 71 00                ;
dey                                    ; 0x161d6 $A1C6 88                      ;
bne      LA188                         ; 0x161d7 $A1C7 D0 BF                   ;
LA1C9                                                                          ;
rts                                    ; 0x161d9 $A1C9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA1CA                                                                          ;
lda      $81,x                         ; 0x161da $A1CA B5 81                   ;; Current Animation Frame for Enemys
bne      LA1DF                         ; 0x161dc $A1CC D0 11                   ;
lda      $C9                           ; 0x161de $A1CE A5 C9                   ;
bne      LA1C9                         ; 0x161e0 $A1D0 D0 F7                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x161e2 $A1D2 20 91 DC;
lda      $0F                           ; 0x161e5 $A1D5 A5 0F                   ;
adc      #$30                          ; 0x161e7 $A1D7 69 30                   ;
cmp      #$60                          ; 0x161e9 $A1D9 C9 60                   ;
bcs      LA1C9                         ; 0x161eb $A1DB B0 EC                   ;
inc      $81,x                         ; 0x161ed $A1DD F6 81                   ;; Current Animation Frame for Enemys
LA1DF                                                                          ;
lda      $A8,x                         ; 0x161ef $A1DF B5 A8                   ;; Enemy State
and      #$04                          ; 0x161f1 $A1E1 29 04                   ;;Keep Bits:0000_0100
beq      LA1EB                         ; 0x161f3 $A1E3 F0 06                   ;
jsr      bank7_Floor_Y_Position        ; 0x161f5 $A1E5 20 C1 DA                ;
LA1E8                                                                          ;
sta      $057E,x                       ; 0x161f8 $A1E8 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
LA1EB                                                                          ;
jsr      bank7_Gravity                 ; 0x161fb $A1EB 20 BE DE                ;
jsr      LDE3D                         ; 0x161fe $A1EE 20 3D DE                ;
lda      $A8,x                         ; 0x16201 $A1F1 B5 A8                   ;; Enemy State
and      #$04                          ; 0x16203 $A1F3 29 04                   ;;Keep Bits:0000_0100
beq      LA20A                         ; 0x16205 $A1F5 F0 13                   ;
lda      $051B,x                       ; 0x16207 $A1F7 BD 1B 05                ;; Randomizer
and      #$07                          ; 0x1620a $A1FA 29 07                   ;;Keep Bits:0000_0111
bne      LA20D                         ; 0x1620c $A1FC D0 0F                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1620e $A1FE 20 91 DC;
lda      L962A,y                       ; 0x16211 $A201 B9 2A 96                ;
sta      $71,x                         ; 0x16214 $A204 95 71                   ;; Enemy X Velocity
lda      #$E8                          ; 0x16216 $A206 A9 E8                   ;;A = #$e8 1110_1000
bne      LA1E8                         ; 0x16218 $A208 D0 DE                   ;
LA20A                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1621a $A20A 20 B8 DE              ;
LA20D                                                                          ;
jmp      bank7_Link_Collision_Detection; 0x1621d $A20D 4C C1 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_A210                                                               ;
.byt    $3F,$08,$04,$0F,$17,$16,$22,$FF; 0x16220 $A210 3F 08 04 0F 17 16 22 FF ;
.byt    $3F,$08,$04,$0F,$17,$0F,$0F,$FF; 0x16228 $A218 3F 08 04 0F 17 0F 0F FF ;
.byt    $3F,$08,$04,$0F,$17,$22,$16,$FF; 0x16230 $A220 3F 08 04 0F 17 22 16 FF ;
.byt    $3F,$08,$04,$0F,$17,$0F,$0F,$FF; 0x16238 $A228 3F 08 04 0F 17 0F 0F FF ;
.byt    $04,$05,$06,$04                ; 0x16240 $A230 04 05 06 04             ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines1_Electric_Barrier                                         ;
lda      $AF,x                         ; 0x16244 $A234 B5 AF                   ;; Various enemy state variables
bne      LA2A7                         ; 0x16246 $A236 D0 6F                   ;
lda      $0794                         ; 0x16248 $A238 AD 94 07                ;; Number of Crystals left
ora      $C9                           ; 0x1624b $A23B 05 C9                   ;
bne      LA25F                         ; 0x1624d $A23D D0 20                   ;
lda      $3B                           ; 0x1624f $A23F A5 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
bne      LA25F                         ; 0x16251 $A241 D0 1C                   ;
lda      $4D                           ; 0x16253 $A243 A5 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
cmp      #$C0                          ; 0x16255 $A245 C9 C0                   ;
bcc      LA25F                         ; 0x16257 $A247 90 16                   ;
rol      $DE                           ; 0x16259 $A249 26 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
lda      #$00                          ; 0x1625b $A24B A9 00                   ;;A = #$00 0000_0000
sta      $71,x                         ; 0x1625d $A24D 95 71                   ;; Enemy X Velocity
sta      $3F                           ; 0x1625f $A24F 85 3F                   ;
sta      $51                           ; 0x16261 $A251 85 51                   ;
sta      $84                           ; 0x16263 $A253 85 84                   ;
.byt    $A9                            ; 0x16265 $A255 A9                      ;
LA256                                                                          ;
rti                                    ; 0x16266 $A256 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
sta      $EC                           ; 0x16267 $A257 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$03                          ; 0x16269 $A259 A9 03                   ;;A = #$03 0000_0011
sta      $AF,x                         ; 0x1626b $A25B 95 AF                   ;; Various enemy state variables
sta      $80                           ; 0x1626d $A25D 85 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
LA25F                                                                          ;
lda      $C9                           ; 0x1626f $A25F A5 C9                   ;
ora      $0494                         ; 0x16271 $A261 0D 94 04                ;; INC $0494 TO KILL LINK
bne      LA27C                         ; 0x16274 $A264 D0 16                   ;
sta      $0518                         ; 0x16276 $A266 8D 18 05                ;; Invulnerable Timeout (01-02 - Blinking, 03+ - Not Blinking); Timer for Link being immune from attacks
jsr      LE4D9                         ; 0x16279 $A269 20 D9 E4                ;
jsr      bank7_Link_Collision_Detection; 0x1627c $A26C 20 C1 D6                ;
lda      $A8,x                         ; 0x1627f $A26F B5 A8                   ;; Enemy State
and      #$10                          ; 0x16281 $A271 29 10                   ;;Keep Bits:0001_0000
beq      LA27C                         ; 0x16283 $A273 F0 07                   ;
lda      $13                           ; 0x16285 $A275 A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
beq      LA27C                         ; 0x16287 $A277 F0 03                   ;
inc      $0494                         ; 0x16289 $A279 EE 94 04                ;; INC $0494 TO KILL LINK
LA27C                                                                          ;
lda      #$00                          ; 0x1628c $A27C A9 00                   ;;A = #$00 0000_0000
ldy      $AF,x                         ; 0x1628e $A27E B4 AF                   ;; Various enemy state variables
bne      LA28D                         ; 0x16290 $A280 D0 0B                   ;
lda      $12                           ; 0x16292 $A282 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x16294 $A284 29 03                   ;;Keep Bits:0000_0011
bne      LA2A6                         ; 0x16296 $A286 D0 1E                   ;
lda      $12                           ; 0x16298 $A288 A5 12                   ;; Frame Counter (ascending)
and      #$0C                          ; 0x1629a $A28A 29 0C                   ;;Keep Bits:0000_1100
asl                                    ; 0x1629c $A28C 0A                      ;
LA28D                                                                          ;
tax                                    ; 0x1629d $A28D AA                      ;
ldy      #$00                          ; 0x1629e $A28E A0 00                   ;;Y = #$00 0000_0000
LA290                                                                          ;
lda      bank5_table_A210,x            ; 0x162a0 $A290 BD 10 A2                ;
sta      L0363,y                       ; 0x162a3 $A293 99 63 03                ;
inx                                    ; 0x162a6 $A296 E8                      ;
iny                                    ; 0x162a7 $A297 C8                      ;
cpy      #$08                          ; 0x162a8 $A298 C0 08                   ;
bne      LA290                         ; 0x162aa $A29A D0 F4                   ;
lda      #$07                          ; 0x162ac $A29C A9 07                   ;;A = #$07 0000_0111
sta      $0362                         ; 0x162ae $A29E 8D 62 03                ;; PPU Macro Offset
lda      #$01                          ; 0x162b1 $A2A1 A9 01                   ;;A = #$01 0000_0001
sta      $0725                         ; 0x162b3 $A2A3 8D 25 07                ;; PPU Macro Selector	
LA2A6                                                                          ;
rts                                    ; 0x162b6 $A2A6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA2A7                                                                          ;
lda      $3F                           ; 0x162b7 $A2A7 A5 3F                   ;
bne      LA2B7                         ; 0x162b9 $A2A9 D0 0C                   ;
lda      #$81                          ; 0x162bb $A2AB A9 81                   ;;A = #$81 1000_0001
sta      $84                           ; 0x162bd $A2AD 85 84                   ;
lda      #$A2                          ; 0x162bf $A2AF A9 A2                   ;;A = #$a2 1010_0010
sta      $51                           ; 0x162c1 $A2B1 85 51                   ;
lda      #$26                          ; 0x162c3 $A2B3 A9 26                   ;;A = #$26 0010_0110
sta      $3F                           ; 0x162c5 $A2B5 85 3F                   ;
LA2B7                                                                          ;
cmp      #$24                          ; 0x162c7 $A2B7 C9 24                   ;
bne      LA2C4                         ; 0x162c9 $A2B9 D0 09                   ;
lda      $51                           ; 0x162cb $A2BB A5 51                   ;
cmp      #$E2                          ; 0x162cd $A2BD C9 E2                   ;
bne      LA2C4                         ; 0x162cf $A2BF D0 03                   ;
lsr      $DE                           ; 0x162d1 $A2C1 46 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
LA2C3                                                                          ;
rts                                    ; 0x162d3 $A2C3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA2C4                                                                          ;
inc      $71,x                         ; 0x162d4 $A2C4 F6 71                   ;; Enemy X Velocity
lda      $71,x                         ; 0x162d6 $A2C6 B5 71                   ;; Enemy X Velocity
and      #$03                          ; 0x162d8 $A2C8 29 03                   ;;Keep Bits:0000_0011
bne      LA2C3                         ; 0x162da $A2CA D0 F7                   ;
lda      $71,x                         ; 0x162dc $A2CC B5 71                   ;; Enemy X Velocity
and      #$04                          ; 0x162de $A2CE 29 04                   ;;Keep Bits:0000_0100
beq      LA2E6                         ; 0x162e0 $A2D0 F0 14                   ;
ldy      $84                           ; 0x162e2 $A2D2 A4 84                   ;
ldx      #$06                          ; 0x162e4 $A2D4 A2 06                   ;;X = #$06 0000_0110
lda      #$40                          ; 0x162e6 $A2D6 A9 40                   ;;A = #$40 0100_0000
LA2D8                                                                          ;
sta      $60D0,y                       ; 0x162e8 $A2D8 99 D0 60                ;
iny                                    ; 0x162eb $A2DB C8                      ;
dex                                    ; 0x162ec $A2DC CA                      ;
bpl      LA2D8                         ; 0x162ed $A2DD 10 F9                   ;
lda      $84                           ; 0x162ef $A2DF A5 84                   ;
sec                                    ; 0x162f1 $A2E1 38                      ;
sbc      #$10                          ; 0x162f2 $A2E2 E9 10                   ;
sta      $84                           ; 0x162f4 $A2E4 85 84                   ;
LA2E6                                                                          ;
lda      $3F                           ; 0x162f6 $A2E6 A5 3F                   ;
sta      L0363                         ; 0x162f8 $A2E8 8D 63 03                ;
lda      $51                           ; 0x162fb $A2EB A5 51                   ;
sta      $0364                         ; 0x162fd $A2ED 8D 64 03                ;
ldx      #$0C                          ; 0x16300 $A2F0 A2 0C                   ;;X = #$0c 0000_1100
stx      $0365                         ; 0x16302 $A2F2 8E 65 03                ;
lda      #$FF                          ; 0x16305 $A2F5 A9 FF                   ;;A = #$ff 1111_1111
sta      $0372                         ; 0x16307 $A2F7 8D 72 03                ;
dex                                    ; 0x1630a $A2FA CA                      ;
LA2FB                                                                          ;
lda      #$F4                          ; 0x1630b $A2FB A9 F4                   ;;A = #$f4 1111_0100
sta      $0366,x                       ; 0x1630d $A2FD 9D 66 03                ;
dex                                    ; 0x16310 $A300 CA                      ;
bpl      LA2FB                         ; 0x16311 $A301 10 F8                   ;
lda      $51                           ; 0x16313 $A303 A5 51                   ;
sec                                    ; 0x16315 $A305 38                      ;
sbc      #$20                          ; 0x16316 $A306 E9 20                   ;
sta      $51                           ; 0x16318 $A308 85 51                   ;
lda      $3F                           ; 0x1631a $A30A A5 3F                   ;
sbc      #$00                          ; 0x1631c $A30C E9 00                   ;
.byt    $85                            ; 0x1631e $A30E 85                      ;
LA30F                                                                          ;
.byt    $3F                            ; 0x1631f $A30F 3F                      ;
lda      #$0F                          ; 0x16320 $A310 A9 0F                   ;;A = #$0f 0000_1111
sta      $0362                         ; 0x16322 $A312 8D 62 03                ;; PPU Macro Offset
LA315                                                                          ;
lda      #$01                          ; 0x16325 $A315 A9 01                   ;;A = #$01 0000_0001
sta      $0725                         ; 0x16327 $A317 8D 25 07                ;; PPU Macro Selector	
ldx      $10                           ; 0x1632a $A31A A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1632c $A31C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Init_Routines_Fire_Bago_Bago_Generator                             ;
ldy      #$05                          ; 0x1632d $A31D A0 05                   ; Y = 05
LA31F                                                                          ;
cpy      $10                           ; 0x1632f $A31F C4 10                   ;; used as monster x register ;draw boss hp bar
beq      LA32F                         ; 0x16331 $A321 F0 0C                   ;
lda      $B6,y                         ; 0x16333 $A323 B9 B6 00                ;
beq      LA32F                         ; 0x16336 $A326 F0 07                   ;
LA329     = * + $0001                                                          ;
lda      $A1,y                         ; 0x16338 $A328 B9 A1 00                ;
cmp      $A1,x                         ; 0x1633b $A32B D5 A1                   ;; Enemy Code
beq      LA333                         ; 0x1633d $A32D F0 04                   ;
LA32F                                                                          ;
dey                                    ; 0x1633f $A32F 88                      ;
bpl      LA31F                         ; 0x16340 $A330 10 ED                   ;
rts                                    ; 0x16342 $A332 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA333                                                                          ;
tya                                    ; 0x16343 $A333 98                      ;
LA334                                                                          ;
tax                                    ; 0x16344 $A334 AA                      ;
jsr      LDD3D                         ; 0x16345 $A335 20 3D DD                ;
LA338                                                                          ;
ldx      $10                           ; 0x16348 $A338 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1634a $A33A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Init_Routines_Thunderbird                                          ;
ldx      #$01                          ; 0x1634b $A33B A2 01                   ; X = 01
jsr      LC2A6                         ; 0x1634d $A33D 20 A6 C2                ;
ldx      $10                           ; 0x16350 $A340 A6 10                   ;; used as monster x register ;draw boss hp bar
cmp      #$00                          ; 0x16352 $A342 C9 00                   ;
bne      LA349                         ; 0x16354 $A344 D0 03                   ;
sta      $B6,x                         ; 0x16356 $A346 95 B6                   ;; Generated Enemy Slot
rts                                    ; 0x16358 $A348 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA349                                                                          ;
lda      #$08                          ; 0x16359 $A349 A9 08                   ; A = 08
sta      $057E,x                       ; 0x1635b $A34B 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
rts                                    ; 0x1635e $A34E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_Thunderbird                                                        ;
.byt    $10,$F0                        ; 0x1635f $A34F 10 F0                   ;
LA351                                                                          ;
.byt    $02,$04,$08,$10,$FE,$FC,$F8,$F0; 0x16361 $A351 02 04 08 10 FE FC F8 F0 ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines1_Thunderbird                                              ;
lda      $0728                         ; 0x16369 $A359 AD 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
bne      LA36B                         ; 0x1636c $A35C D0 0D                   ;
lda      $072A                         ; 0x1636e $A35E AD 2A 07                ;;link Pagepos SideScroll		; Scrolling Offset High Byte
beq      LA3BD                         ; 0x16371 $A361 F0 5A                   ;
inc      $0728                         ; 0x16373 $A363 EE 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
lda      #$90                          ; 0x16376 $A366 A9 90                   ;;A = #$90 1001_0000
sta      $0504,x                       ; 0x16378 $A368 9D 04 05                ;; Timer for Enemy
LA36B                                                                          ;
lda      $6E3F                         ; 0x1637b $A36B AD 3F 6E                ;
bpl      LA3C2                         ; 0x1637e $A36E 10 52                   ;
ldy      $040E,x                       ; 0x16380 $A370 BC 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
bne      LA3BD                         ; 0x16383 $A373 D0 48                   ;
inc      $B6,x                         ; 0x16385 $A375 F6 B6                   ;; Generated Enemy Slot
lda      #$0A                          ; 0x16387 $A377 A9 0A                   ;;A = #$0a 0000_1010
sta      $D9                           ; 0x16389 $A379 85 D9                   ;; Thunder Spell modifier ?
lda      $10                           ; 0x1638b $A37B A5 10                   ;; used as monster x register ;draw boss hp bar
pha                                    ; 0x1638d $A37D 48                      ;
ldx      #$05                          ; 0x1638e $A37E A2 05                   ;;X = #$05 0000_0101
LA380                                                                          ;
stx      $10                           ; 0x16390 $A380 86 10                   ;; used as monster x register ;draw boss hp bar
lda      #$00                          ; 0x16392 $A382 A9 00                   ;;A = #$00 0000_0000
sta      $87,x                         ; 0x16394 $A384 95 87                   ;; Projectile Type
lda      $B6,x                         ; 0x16396 $A386 B5 B6                   ;; Generated Enemy Slot
beq      LA3B2                         ; 0x16398 $A388 F0 28                   ;
cmp      #$01                          ; 0x1639a $A38A C9 01                   ;
bne      LA3B2                         ; 0x1639c $A38C D0 24                   ;
inx                                    ; 0x1639e $A38E E8                      ;
ldy      #$01                          ; 0x1639f $A38F A0 01                   ;;Y = #$01 0000_0001
jsr      bank7_code51                  ; 0x163a1 $A391 20 7D F2                ;
ldx      $10                           ; 0x163a4 $A394 A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      $D9                           ; 0x163a6 $A396 A4 D9                   ;; Thunder Spell modifier ?
bne      LA3AF                         ; 0x163a8 $A398 D0 15                   ;
lda      $C9                           ; 0x163aa $A39A A5 C9                   ;
and      #$88                          ; 0x163ac $A39C 29 88                   ;;Keep Bits:1000_1000
bne      LA3B2                         ; 0x163ae $A39E D0 12                   ;
ldy      $A1,x                         ; 0x163b0 $A3A0 B4 A1                   ;; Enemy Code
lda      $6E41,y                       ; 0x163b2 $A3A2 B9 41 6E                ;
ldy      #$09                          ; 0x163b5 $A3A5 A0 09                   ;;Y = #$09 0000_1001
and      #$A0                          ; 0x163b7 $A3A7 29 A0                   ;;Keep Bits:1010_0000
bmi      LA3B2                         ; 0x163b9 $A3A9 30 07                   ;
beq      LA3AF                         ; 0x163bb $A3AB F0 02                   ;
ldy      #$01                          ; 0x163bd $A3AD A0 01                   ;;Y = #$01 0000_0001
LA3AF                                                                          ;
jsr      LE726                         ; 0x163bf $A3AF 20 26 E7                ;
LA3B2                                                                          ;
dex                                    ; 0x163c2 $A3B2 CA                      ;
bpl      LA380                         ; 0x163c3 $A3B3 10 CB                   ;
pla                                    ; 0x163c5 $A3B5 68                      ;
sta      $10                           ; 0x163c6 $A3B6 85 10                   ;; used as monster x register ;draw boss hp bar
tax                                    ; 0x163c8 $A3B8 AA                      ;
lda      #$80                          ; 0x163c9 $A3B9 A9 80                   ;;A = #$80 1000_0000
sta      $EB                           ; 0x163cb $A3BB 85 EB                   ;; Music; Music
LA3BD                                                                          ;
pla                                    ; 0x163cd $A3BD 68                      ;
pla                                    ; 0x163ce $A3BE 68                      ;
jmp      bank7_Display                 ; 0x163cf $A3BF 4C 11 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA3C2                                                                          ;
lda      $0400                         ; 0x163d2 $A3C2 AD 00 04                ;;sword_slash_frame (animation frame); Sword slash frame code
bne      LA3CC                         ; 0x163d5 $A3C5 D0 05                   ;
lda      #$F8                          ; 0x163d7 $A3C7 A9 F8                   ;;A = #$f8 1111_1000
sta      $0480                         ; 0x163d9 $A3C9 8D 80 04                ;
LA3CC                                                                          ;
lda      $C2,x                         ; 0x163dc $A3CC B5 C2                   ;; Enemy Current HP
cmp      #$C0                          ; 0x163de $A3CE C9 C0                   ;
bcc      LA3D8                         ; 0x163e0 $A3D0 90 06                   ;
jsr      bank7_Display                 ; 0x163e2 $A3D2 20 11 EF                ;
jmp      LA3DB                         ; 0x163e5 $A3D5 4C DB A3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA3D8                                                                          ;
jsr      LDE40                         ; 0x163e8 $A3D8 20 40 DE                ;
LA3DB                                                                          ;
lda      #$01                          ; 0x163eb $A3DB A9 01                   ;;A = #$01 0000_0001
cmp      $B6,x                         ; 0x163ed $A3DD D5 B6                   ;; Generated Enemy Slot
beq      LA3EF                         ; 0x163ef $A3DF F0 0E                   ;
sta      $B6,x                         ; 0x163f1 $A3E1 95 B6                   ;; Generated Enemy Slot
lda      #$FF                          ; 0x163f3 $A3E3 A9 FF                   ;;A = #$ff 1111_1111
sta      $6E3F                         ; 0x163f5 $A3E5 8D 3F 6E                ;
sta      $0504,x                       ; 0x163f8 $A3E8 9D 04 05                ;; Timer for Enemy
lsr                                    ; 0x163fb $A3EB 4A                      ;
sta      $040E,x                       ; 0x163fc $A3EC 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
LA3EF                                                                          ;
lda      $0504,x                       ; 0x163ff $A3EF BD 04 05                ;; Timer for Enemy
beq      LA3F5                         ; 0x16402 $A3F2 F0 01                   ;
rts                                    ; 0x16404 $A3F4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA3F5                                                                          ;
lda      #$18                          ; 0x16405 $A3F5 A9 18                   ;;A = #$18 0001_1000
jsr      LA4E9                         ; 0x16407 $A3F7 20 E9 A4                ;
lda      $12                           ; 0x1640a $A3FA A5 12                   ;; Frame Counter (ascending)
bne      LA3FE                         ; 0x1640c $A3FC D0 00                   ;
LA3FE                                                                          ;
lda      #$1F                          ; 0x1640e $A3FE A9 1F                   ;;A = #$1f 0001_1111
ldy      $C2,x                         ; 0x16410 $A400 B4 C2                   ;; Enemy Current HP
cpy      #$60                          ; 0x16412 $A402 C0 60                   ;
bcs      LA407                         ; 0x16414 $A404 B0 01                   ;
lsr                                    ; 0x16416 $A406 4A                      ;
LA407                                                                          ;
and      $12                           ; 0x16417 $A407 25 12                   ;; Frame Counter (ascending)
bne      LA436                         ; 0x16419 $A409 D0 2B                   ;
jsr      bank7_Spawn_New_Projectile    ; 0x1641b $A40B 20 CE DB                ;
bcs      LA436                         ; 0x1641e $A40E B0 26                   ;
lda      #$08                          ; 0x16420 $A410 A9 08                   ;;A = #$08 0000_1000
sta      $87,y                         ; 0x16422 $A412 99 87 00                ;
lda      $4E,x                         ; 0x16425 $A415 B5 4E                   ;; Enemy X Position (low byte)
adc      #$0C                          ; 0x16427 $A417 69 0C                   ;
sta      $54,y                         ; 0x16429 $A419 99 54 00                ;
lda      $3C,x                         ; 0x1642c $A41C B5 3C                   ;; Enemy X Position (high byte)
adc      #$00                          ; 0x1642e $A41E 69 00                   ;
sta      $42,y                         ; 0x16430 $A420 99 42 00                ;
lda      $051C                         ; 0x16433 $A423 AD 1C 05                ;
and      #$07                          ; 0x16436 $A426 29 07                   ;;Keep Bits:0000_0111
tax                                    ; 0x16438 $A428 AA                      ;
lda      LA351,x                       ; 0x16439 $A429 BD 51 A3                ;
sta      $77,y                         ; 0x1643c $A42C 99 77 00                ;
lda      #$F0                          ; 0x1643f $A42F A9 F0                   ;;A = #$f0 1111_0000
sta      $0584,y                       ; 0x16441 $A431 99 84 05                ;
ldx      $10                           ; 0x16444 $A434 A6 10                   ;; used as monster x register ;draw boss hp bar
LA436                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x16446 $A436 20 B8 DE              ;
jsr      bank7_Simple_Vertical_Movement; 0x16449 $A439 20 C8 DE                ;
lda      $12                           ; 0x1644c $A43C A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x1644e $A43E 29 03                   ;;Keep Bits:0000_0011
bne      LA45D                         ; 0x16450 $A440 D0 1B                   ;
lda      $057E,x                       ; 0x16452 $A442 BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
cmp      #$10                          ; 0x16455 $A445 C9 10                   ;
beq      LA44D                         ; 0x16457 $A447 F0 04                   ;
cmp      #$F0                          ; 0x16459 $A449 C9 F0                   ;
bne      LA44F                         ; 0x1645b $A44B D0 02                   ;
LA44D                                                                          ;
inc      $AF,x                         ; 0x1645d $A44D F6 AF                   ;; Various enemy state variables
LA44F                                                                          ;
lda      $AF,x                         ; 0x1645f $A44F B5 AF                   ;; Various enemy state variables
lsr                                    ; 0x16461 $A451 4A                      ;
inc      $057E,x                       ; 0x16462 $A452 FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
bcs      LA45D                         ; 0x16465 $A455 B0 06                   ;
dec      $057E,x                       ; 0x16467 $A457 DE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
dec      $057E,x                       ; 0x1646a $A45A DE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
LA45D                                                                          ;
lda      $12                           ; 0x1646d $A45D A5 12                   ;; Frame Counter (ascending)
and      #$1F                          ; 0x1646f $A45F 29 1F                   ;;Keep Bits:0001_1111
bne      LA46B                         ; 0x16471 $A461 D0 08                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x16473 $A463 20 91 DC;
lda      bank5_table_Thunderbird,y     ; 0x16476 $A466 B9 4F A3                ;
sta      $71,x                         ; 0x16479 $A469 95 71                   ;; Enemy X Velocity
LA46B                                                                          ;
rts                                    ; 0x1647b $A46B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA46C                                                                          ;
bpl      LA46E                         ; 0x1647c $A46C 10 00                   ;
LA46E                                                                          ;
.byt    $EC                            ; 0x1647e $A46E EC                      ;
LA46F                                                                          ;
brk                                    ; 0x1647f $A46F 00                      ;
beq      $A452                         ; 0x16480 $A470 F0 E0                   ;
bank5_Enemy_Routines2_Dark_Link_Battle_Trigger                                 ;
lda      #$02                          ; 0x16482 $A472 A9 02                   ;;A = #$02 0000_0010
sta      $02                           ; 0x16484 $A474 85 02                   ;
ldx      #$36                          ; 0x16486 $A476 A2 36                   ;;X = #$36 0011_0110
lda      $AF                           ; 0x16488 $A478 A5 AF                   ;;monster itemID/ai?	af,b0,b1,b2,b3,b4
and      #$18                          ; 0x1648a $A47A 29 18                   ;;Keep Bits:0001_1000
bne      LA480                         ; 0x1648c $A47C D0 02                   ;
inx                                    ; 0x1648e $A47E E8                      ;
inx                                    ; 0x1648f $A47F E8                      ;
LA480                                                                          ;
jsr      LF0D7                         ; 0x16490 $A480 20 D7 F0                ;
ldx      #$00                          ; 0x16493 $A483 A2 00                   ;;X = #$00 0000_0000
lda      $63                           ; 0x16495 $A485 A5 63                   ;
cmp      #$06                          ; 0x16497 $A487 C9 06                   ;
bcc      LA491                         ; 0x16499 $A489 90 06                   ;
inx                                    ; 0x1649b $A48B E8                      ;
cmp      #$07                          ; 0x1649c $A48C C9 07                   ;
bne      LA491                         ; 0x1649e $A48E D0 01                   ;
inx                                    ; 0x164a0 $A490 E8                      ;
LA491                                                                          ;
lda      $2A                           ; 0x164a1 $A491 A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
clc                                    ; 0x164a3 $A493 18                      ;
adc      LA46F,x                       ; 0x164a4 $A494 7D 6F A4                ;
sta      L0000                         ; 0x164a7 $A497 85 00                   ;
lda      $CD                           ; 0x164a9 $A499 A5 CD                   ;
clc                                    ; 0x164ab $A49B 18                      ;
adc      LA46C,x                       ; 0x164ac $A49C 7D 6C A4                ;
sta      $01                           ; 0x164af $A49F 85 01                   ;
lda      $C9                           ; 0x164b1 $A4A1 A5 C9                   ;
asl                                    ; 0x164b3 $A4A3 0A                      ;
asl                                    ; 0x164b4 $A4A4 0A                      ;
and      #$0F                          ; 0x164b5 $A4A5 29 0F                   ;;Keep Bits:0000_1111
sta      $C9                           ; 0x164b7 $A4A7 85 C9                   ;
lda      #$03                          ; 0x164b9 $A4A9 A9 03                   ;;A = #$03 0000_0011
sta      $03                           ; 0x164bb $A4AB 85 03                   ;
ldx      #$3A                          ; 0x164bd $A4AD A2 3A                   ;;X = #$3a 0011_1010
jsr      LF0D7                         ; 0x164bf $A4AF 20 D7 F0                ;
lda      #$43                          ; 0x164c2 $A4B2 A9 43                   ;;A = #$43 0100_0011
sta      $01FE,y                       ; 0x164c4 $A4B4 99 FE 01                ;
rts                                    ; 0x164c7 $A4B7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA4B8                                                                          ;
.byt    $3F                            ; 0x164c8 $A4B8 3F                      ;
.byt    $1C                            ; 0x164c9 $A4B9 1C                      ;
.byt    $04                            ; 0x164ca $A4BA 04                      ;
.byt    $0F                            ; 0x164cb $A4BB 0F                      ;
bmi      LA4EE                         ; 0x164cc $A4BC 30 30                   ;
.byt    $30                            ; 0x164ce $A4BE 30                      ;
LA4BF                                                                          ;
.byt    $FF                            ; 0x164cf $A4BF FF                      ;
LA4C0                                                                          ;
.byt    $17                            ; 0x164d0 $A4C0 17                      ;
.byt    $27                            ; 0x164d1 $A4C1 27                      ;
.byt    $37                            ; 0x164d2 $A4C2 37                      ;
.byt    $37                            ; 0x164d3 $A4C3 37                      ;
LA4C4                                                                          ;
ldx      $0301                         ; 0x164d4 $A4C4 AE 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
ldy      #$00                          ; 0x164d7 $A4C7 A0 00                   ;;Y = #$00 0000_0000
LA4C9                                                                          ;
lda      LA4B8,y                       ; 0x164d9 $A4C9 B9 B8 A4                ;
sta      L0302,x                       ; 0x164dc $A4CC 9D 02 03                ;
inx                                    ; 0x164df $A4CF E8                      ;
iny                                    ; 0x164e0 $A4D0 C8                      ;
cpy      #$08                          ; 0x164e1 $A4D1 C0 08                   ;
bcc      LA4C9                         ; 0x164e3 $A4D3 90 F4                   ;
lda      $12                           ; 0x164e5 $A4D5 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x164e7 $A4D7 4A                      ;
lsr                                    ; 0x164e8 $A4D8 4A                      ;
and      #$03                          ; 0x164e9 $A4D9 29 03                   ;;Keep Bits:0000_0011
tay                                    ; 0x164eb $A4DB A8                      ;
lda      LA4C0,y                       ; 0x164ec $A4DC B9 C0 A4                ;
sta      $02FF,x                       ; 0x164ef $A4DF 9D FF 02                ;
dex                                    ; 0x164f2 $A4E2 CA                      ;
stx      $0301                         ; 0x164f3 $A4E3 8E 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
ldx      $10                           ; 0x164f6 $A4E6 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x164f8 $A4E8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA4E9                                                                          ;
sta      L0000                         ; 0x164f9 $A4E9 85 00                   ;
ldy      #$00                          ; 0x164fb $A4EB A0 00                   ;;Y = #$00 0000_0000
.byt    $B5                            ; 0x164fd $A4ED B5                      ;
LA4EE                                                                          ;
.byt    $C2                            ; 0x164fe $A4EE C2                      ;
clc                                    ; 0x164ff $A4EF 18                      ;
LA4F0                                                                          ;
sbc      L0000                         ; 0x16500 $A4F0 E5 00                   ;
iny                                    ; 0x16502 $A4F2 C8                      ;
bcs      LA4F0                         ; 0x16503 $A4F3 B0 FB                   ;
ldx      #$1C                          ; 0x16505 $A4F5 A2 1C                   ;;X = #$1c 0001_1100
lda      #$70                          ; 0x16507 $A4F7 A9 70                   ;;A = #$70 0111_0000
sta      L0000                         ; 0x16509 $A4F9 85 00                   ;
LA4FB                                                                          ;
lda      #$70                          ; 0x1650b $A4FB A9 70                   ;;A = #$70 0111_0000
dey                                    ; 0x1650d $A4FD 88                      ;
bmi      LA502                         ; 0x1650e $A4FE 30 02                   ;
lda      #$6E                          ; 0x16510 $A500 A9 6E                   ;;A = #$6e 0110_1110
LA502                                                                          ;
sta      $02C1,x                       ; 0x16512 $A502 9D C1 02                ;
lda      #$01                          ; 0x16515 $A505 A9 01                   ;;A = #$01 0000_0001
sta      $02C2,x                       ; 0x16517 $A507 9D C2 02                ;
lda      #$10                          ; 0x1651a $A50A A9 10                   ;;A = #$10 0001_0000
sta      $02C3,x                       ; 0x1651c $A50C 9D C3 02                ;
lda      L0000                         ; 0x1651f $A50F A5 00                   ;
sta      $02C0,x                       ; 0x16521 $A511 9D C0 02                ;
adc      #$F8                          ; 0x16524 $A514 69 F8                   ;
sta      L0000                         ; 0x16526 $A516 85 00                   ;
dex                                    ; 0x16528 $A518 CA                      ;
dex                                    ; 0x16529 $A519 CA                      ;
dex                                    ; 0x1652a $A51A CA                      ;
dex                                    ; 0x1652b $A51B CA                      ;
bpl      LA4FB                         ; 0x1652c $A51C 10 DD                   ;
ldx      $10                           ; 0x1652e $A51E A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x16530 $A520 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Enemy_Routines1_HiddenRedJar                                             ;
lda      $C9                           ; 0x16531 $A521 A5 C9                   ;
bne      LA54E                         ; 0x16533 $A523 D0 29                   ;
jsr      bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least; 0x16535 $A525 20 77 E6;
lda      $A8,x                         ; 0x16538 $A528 B5 A8                   ;; Enemy State
and      #$20                          ; 0x1653a $A52A 29 20                   ;;Keep Bits:0010_0000
beq      LA54E                         ; 0x1653c $A52C F0 20                   ;
lda      #$11                          ; 0x1653e $A52E A9 11                   ;;A = #$11 0001_0001
sta      $AF,x                         ; 0x16540 $A530 95 AF                   ;; Various enemy state variables
ldy      #$01                          ; 0x16542 $A532 A0 01                   ;;Y = #$01 0000_0001
sty      $C2,x                         ; 0x16544 $A534 94 C2                   ;; Enemy Current HP
lda      $051B,x                       ; 0x16546 $A536 BD 1B 05                ;; Randomizer
bpl      LA541                         ; 0x16549 $A539 10 06                   ;
lda      #$30                          ; 0x1654b $A53B A9 30                   ;;A = #$30 0011_0000
sta      $C2,x                         ; 0x1654d $A53D 95 C2                   ;; Enemy Current HP
ldy      #$19                          ; 0x1654f $A53F A0 19                   ;;Y = #$19 0001_1001
LA541                                                                          ;
sty      $A1,x                         ; 0x16551 $A541 94 A1                   ;; Enemy Code
lda      #$08                          ; 0x16553 $A543 A9 08                   ;;A = #$08 0000_1000
sta      $040E,x                       ; 0x16555 $A545 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
lda      $4E,x                         ; 0x16558 $A548 B5 4E                   ;; Enemy X Position (low byte)
adc      #$03                          ; 0x1655a $A54A 69 03                   ;
sta      $4E,x                         ; 0x1655c $A54C 95 4E                   ;; Enemy X Position (low byte)
LA54E                                                                          ;
rts                                    ; 0x1655e $A54E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_UNUSED_A54F                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1655f $A54F FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x16567 $A557 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1656f $A55F FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x16577 $A567 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1657f $A56F FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x16587 $A577 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1658f $A57F FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x16597 $A587 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1659f $A58F FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165a7 $A597 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165af $A59F FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165b7 $A5A7 FF FF FF FF FF FF FF FF ;
LA5AF                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165bf $A5AF FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165c7 $A5B7 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165cf $A5BF FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165d7 $A5C7 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165df $A5CF FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165e7 $A5D7 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165ef $A5DF FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165f7 $A5E7 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x165ff $A5EF FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x16607 $A5F7 FF FF FF FF FF FF FF FF ;
.byt    $FF                            ; 0x1660f $A5FF FF                      ;
bank5_table_A600                                                               ;
.byt    $02                            ; 0x16610 $A600 02                      ;
LA601                                                                          ;
.byt    $03,$3D,$AF,$F5,$BB,$BD,$D0,$61; 0x16611 $A601 03 3D AF F5 BB BD D0 61 ;
.byt    $AF,$00,$7F,$BF,$BC,$55,$BD    ; 0x16619 $A609 AF 00 7F BF BC 55 BD    ;
; ---------------------------------------------------------------------------- ;
LA610                                                                          ;
lda      $FF                           ; 0x16620 $A610 A5 FF                   ;; Sprite Bank ?
and      #$7C                          ; 0x16622 $A612 29 7C                   ;;Keep Bits:0111_1100
ora      $0747                         ; 0x16624 $A614 0D 47 07                ;
sta      $FF                           ; 0x16627 $A617 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x16629 $A619 8D 00 20                ;
lda      $FE                           ; 0x1662c $A61C A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
and      #$E0                          ; 0x1662e $A61E 29 E0                   ;;Keep Bits:1110_0000
sta      $2001                         ; 0x16630 $A620 8D 01 20                ;
ldy      $0726                         ; 0x16633 $A623 AC 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
bne      LA62C                         ; 0x16636 $A626 D0 04                   ;
lda      $FE                           ; 0x16638 $A628 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
ora      #$1E                          ; 0x1663a $A62A 09 1E                   ;;Set Bits:0001_1110
LA62C                                                                          ;
sta      $FE                           ; 0x1663c $A62C 85 FE                   ;;does interesting effects when changed, perhaps involves palette? 
ldx      $2002                         ; 0x1663e $A62E AE 02 20                ;
lda      #$00                          ; 0x16641 $A631 A9 00                   ;;A = #$00 0000_0000
sta      $2005                         ; 0x16643 $A633 8D 05 20                ;
sta      $2005                         ; 0x16646 $A636 8D 05 20                ;
sta      $2003                         ; 0x16649 $A639 8D 03 20                ;
lda      #$02                          ; 0x1664c $A63C A9 02                   ;;A = #$02 0000_0010
sta      $4014                         ; 0x1664e $A63E 8D 14 40                ;
lda      $0725                         ; 0x16651 $A641 AD 25 07                ;; PPU Macro Selector	
asl                                    ; 0x16654 $A644 0A                      ;
tax                                    ; 0x16655 $A645 AA                      ;
lda      bank5_table_A600,x            ; 0x16656 $A646 BD 00 A6                ;
sta      L0000                         ; 0x16659 $A649 85 00                   ;
lda      LA601,x                       ; 0x1665b $A64B BD 01 A6                ;
sta      $01                           ; 0x1665e $A64E 85 01                   ;
jsr      LD2EC                         ; 0x16660 $A650 20 EC D2                ;
lda      #$3F                          ; 0x16663 $A653 A9 3F                   ;;A = #$3f 0011_1111
sta      $2006                         ; 0x16665 $A655 8D 06 20                ;
ldy      #$00                          ; 0x16668 $A658 A0 00                   ;;Y = #$00 0000_0000
sty      $2006                         ; 0x1666a $A65A 8C 06 20                ;
sty      $2006                         ; 0x1666d $A65D 8C 06 20                ;
sty      $2006                         ; 0x16670 $A660 8C 06 20                ;
lda      $FF                           ; 0x16673 $A663 A5 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x16675 $A665 8D 00 20                ;
lda      $2002                         ; 0x16678 $A668 AD 02 20                ;
lda      $FC                           ; 0x1667b $A66B A5 FC                   ;
sty      $2005                         ; 0x1667d $A66D 8C 05 20                ;
sta      $2005                         ; 0x16680 $A670 8D 05 20                ;
lda      $FE                           ; 0x16683 $A673 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
sta      $2001                         ; 0x16685 $A675 8D 01 20                ;
sty      $0301                         ; 0x16688 $A678 8C 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
sty      $0725                         ; 0x1668b $A67B 8C 25 07                ;; PPU Macro Selector	
dey                                    ; 0x1668e $A67E 88                      ;
sty      L0302                         ; 0x1668f $A67F 8C 02 03                ;; Used when writing text to screen
jsr      LC032                         ; 0x16692 $A682 20 32 C0                ;
lda      $F7                           ; 0x16695 $A685 A5 F7                   ;; Controller 1 Buttons Held
LA687                                                                          ;
sta      $0744                         ; 0x16697 $A687 8D 44 07                ;; Controller 1 Input; Controller 1 Buttons Held
jsr      bank7_Controllers_Input       ; 0x1669a $A68A 20 46 D3                ;
inc       !$12                         ; 0x1669d $A68D EE 12 00                ;
jsr      LA6D9                         ; 0x166a0 $A690 20 D9 A6                ;
lda      $2002                         ; 0x166a3 $A693 AD 02 20                ;
lda      $FF                           ; 0x166a6 $A696 A5 FF                   ;; Sprite Bank ?
ora      #$80                          ; 0x166a8 $A698 09 80                   ;;Set Bits:1000_0000
sta      $FF                           ; 0x166aa $A69A 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x166ac $A69C 8D 00 20                ;
rti                                    ; 0x166af $A69F 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_PowerON__Reset_Memory                                                    ;
jsr      bank5_code27                  ; 0x166b0 $A6A0 20 60 B9                ;
jsr      bank7_Reset_Memory_Ranges     ; 0x166b3 $A6A3 20 81 D2                ;
ldy      #$1F                          ; 0x166b6 $A6A6 A0 1F                   ;;Y = #$1f 0001_1111
LA6A8                                                                          ;
sta      $E0,y                         ; 0x166b8 $A6A8 99 E0 00                ;
dey                                    ; 0x166bb $A6AB 88                      ;
bpl      LA6A8                         ; 0x166bc $A6AC 10 FA                   ;
sta      $4011                         ; 0x166be $A6AE 8D 11 40                ;
lda      #$0F                          ; 0x166c1 $A6B1 A9 0F                   ;;A = #$0f 0000_1111
sta      $4015                         ; 0x166c3 $A6B3 8D 15 40                ;; Sound Channel Switch
sta      $076B                         ; 0x166c6 $A6B6 8D 6B 07                ;
lda      #$00                          ; 0x166c9 $A6B9 A9 00                   ;;A = #$00 0000_0000
sta      $2001                         ; 0x166cb $A6BB 8D 01 20                ;
jsr      bank7_Remove_All_Sprites      ; 0x166ce $A6BE 20 4C D2                ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x166d1 $A6C1 20 66 D2;
inc      $0726                         ; 0x166d4 $A6C4 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
lda      #$06                          ; 0x166d7 $A6C7 A9 06                   ;;A = #$06 0000_0110
sta      $0768                         ; 0x166d9 $A6C9 8D 68 07                ;;makes weird ppu effect
lda      #$80                          ; 0x166dc $A6CC A9 80                   ;;A = #$80 1000_0000
sta      $0100                         ; 0x166de $A6CE 8D 00 01                ;
.byt    $A9                            ; 0x166e1 $A6D1 A9                      ;
LA6D2                                                                          ;
bcs      $A659                         ; 0x166e2 $A6D2 B0 85                   ;
.byt    $FF                            ; 0x166e4 $A6D4 FF                      ;
sta      $2000                         ; 0x166e5 $A6D5 8D 00 20                ;
rts                                    ; 0x166e8 $A6D8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA6D9                                                                          ;
jsr      LD174                         ; 0x166e9 $A6D9 20 74 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x166ec $A6DC 20 85 D3;
beq      LA687                         ; 0x166ef $A6DF F0 A6                   ;
and      LE5B2                         ; 0x166f1 $A6E1 2D B2 E5                ;
ldx      $A9                           ; 0x166f4 $A6E4 A6 A9                   ;
cpy      #$8D                          ; 0x166f6 $A6E6 C0 8D                   ;
brk                                    ; 0x166f8 $A6E8 00                      ;
ora      ($A9,x)                       ; 0x166f9 $A6E9 01 A9                   ;
brk                                    ; 0x166fb $A6EB 00                      ;
sta      $076C                         ; 0x166fc $A6EC 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x166ff $A6EF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_code19                                                                   ;
lda      $0736                         ; 0x16700 $A6F0 AD 36 07                ; Game Mode
cmp      #$03                          ; 0x16703 $A6F3 C9 03                   ;
bcc      LA6FF                         ; 0x16705 $A6F5 90 08                   ;
jsr      bank5_Animation_of_Stars_in_the_Sky; 0x16707 $A6F7 20 CF A8           ; Animation of Stars in the Sky
jsr      bank5_Animation_of_Glints_in_Water; 0x1670a $A6FA 20 18 A9            ; Animation of Glints in Water
lda      #$00                          ; 0x1670d $A6FD A9 00                   ; A = 00
LA6FF                                                                          ;
jsr      LD168                         ; 0x1670f $A6FF 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x16712 $A702 20 85 D3;
bank5_pointer_table3                                                           ;
.word    bank5_code20                  ; 0x16715 $A705 0F A7                   ;
.word    LAF1F                         ; 0x16717 $A707 1F AF                   ;
.word    LA72E                         ; 0x16719 $A709 2E A7                   ;
.word    LA737                         ; 0x1671b $A70B 37 A7                   ;
.word    LAB6D                         ; 0x1671d $A70D 6D AB                   ;
; ---------------------------------------------------------------------------- ;
bank5_code20                                                                   ;
jsr      bank7_Set_Memory_200_4FF_and_00_DF_to_Zero; 0x1671f $A70F 20 9C D2    ;
lda      #$0F                          ; 0x16722 $A712 A9 0F                   ; A = 0F
jsr      LBF9D                         ; 0x16724 $A714 20 9D BF                ;
lda      $0568                         ; 0x16727 $A717 AD 68 05                ;; Related to Flute in Overworld
bne      LA723                         ; 0x1672a $A71A D0 07                   ;
lda      #$01                          ; 0x1672c $A71C A9 01                   ; A = 01
sta      $EA                           ; 0x1672e $A71E 85 EA                   ;;Global Sound Switch (0 = Sound On)
inc      $0568                         ; 0x16730 $A720 EE 68 05                ;; Related to Flute in Overworld
LA723                                                                          ;
jsr      bank5_code_ADE0               ; 0x16733 $A723 20 E0 AD                ;
lda      #$00                          ; 0x16736 $A726 A9 00                   ; A = 00
jsr      LBFB1                         ; 0x16738 $A728 20 B1 BF                ;
jmp      LC722                         ; 0x1673b $A72B 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA72E                                                                          ;
jsr      bank5_code21                  ; 0x1673e $A72E 20 C1 A8                ;
inc      $0727                         ; 0x16741 $A731 EE 27 07                ;
jmp      LC72D                         ; 0x16744 $A734 4C 2D C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA737                                                                          ;
ldy      #$00                          ; 0x16747 $A737 A0 00                   ;;Y = #$00 0000_0000
LA739                                                                          ;
nop                                    ; 0x16749 $A739 EA                      ;
dey                                    ; 0x1674a $A73A 88                      ;
bne      LA739                         ; 0x1674b $A73B D0 FC                   ;
LA73D                                                                          ;
bit      $2002                         ; 0x1674d $A73D 2C 02 20                ;
bvc      LA73D                         ; 0x16750 $A740 50 FB                   ;
ldy      #$00                          ; 0x16752 $A742 A0 00                   ;;Y = #$00 0000_0000
LA744                                                                          ;
dey                                    ; 0x16754 $A744 88                      ;
bne      LA744                         ; 0x16755 $A745 D0 FD                   ;
ldy      #$4A                          ; 0x16757 $A747 A0 4A                   ;;Y = #$4a 0100_1010
LA749                                                                          ;
dey                                    ; 0x16759 $A749 88                      ;
bne      LA749                         ; 0x1675a $A74A D0 FD                   ;
lda      $FF                           ; 0x1675c $A74C A5 FF                   ;; Sprite Bank ?
and      #$FC                          ; 0x1675e $A74E 29 FC                   ;;Keep Bits:1111_1100
ora      $36                           ; 0x16760 $A750 05 36                   ;; Sword Projectile Y On Screen
sta      $FF                           ; 0x16762 $A752 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x16764 $A754 8D 00 20                ;
lda      $27                           ; 0x16767 $A757 A5 27                   ;
ldy      $28                           ; 0x16769 $A759 A4 28                   ;
sta      $2006                         ; 0x1676b $A75B 8D 06 20                ;
sty      $2006                         ; 0x1676e $A75E 8C 06 20                ;
lda      $2007                         ; 0x16771 $A761 AD 07 20                ;
lda      $2007                         ; 0x16774 $A764 AD 07 20                ;
lda      $2002                         ; 0x16777 $A767 AD 02 20                ;
lda      $FC                           ; 0x1677a $A76A A5 FC                   ;
cmp      #$60                          ; 0x1677c $A76C C9 60                   ;
bne      LA787                         ; 0x1677e $A76E D0 17                   ;
lda      #$80                          ; 0x16780 $A770 A9 80                   ;;A = #$80 1000_0000
sta      $0504                         ; 0x16782 $A772 8D 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
jsr      LA795                         ; 0x16785 $A775 20 95 A7                ;
lda      $E8                           ; 0x16788 $A778 A5 E8                   ;; Music Note Pitch
cmp      #$08                          ; 0x1678a $A77A C9 08                   ;
beq      LA781                         ; 0x1678c $A77C F0 03                   ;
jmp      bank5_code_ABF7               ; 0x1678e $A77E 4C F7 AB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA781                                                                          ;
inc      $0736                         ; 0x16791 $A781 EE 36 07                ;; Game Mode ; screen intro type
jmp      LA795                         ; 0x16794 $A784 4C 95 A7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LA787                                                                          ;
lda      $E8                           ; 0x16797 $A787 A5 E8                   ;; Music Note Pitch
cmp      #$02                          ; 0x16799 $A789 C9 02                   ;
bne      LA795                         ; 0x1679b $A78B D0 08                   ;
lda      $12                           ; 0x1679d $A78D A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x1679f $A78F 29 03                   ;;Keep Bits:0000_0011
bne      LA795                         ; 0x167a1 $A791 D0 02                   ;
inc      $FC                           ; 0x167a3 $A793 E6 FC                   ;
LA795                                                                          ;
lda      $F7                           ; 0x167a5 $A795 A5 F7                   ;; Controller 1 Buttons Held
cmp      $0744                         ; 0x167a7 $A797 CD 44 07                ;; Controller 1 Input; Controller 1 Buttons Held
beq      LA7C0                         ; 0x167aa $A79A F0 24                   ;
and      #$10                          ; 0x167ac $A79C 29 10                   ;;Keep Bits:0001_0000
beq      LA7C0                         ; 0x167ae $A79E F0 20                   ;
lda      #$00                          ; 0x167b0 $A7A0 A9 00                   ;;A = #$00 0000_0000
sta      $0727                         ; 0x167b2 $A7A2 8D 27 07                ;
sta      $0761                         ; 0x167b5 $A7A5 8D 61 07                ;
jsr      bank7_Remove_All_Sprites_except_Sprite0; 0x167b8 $A7A8 20 50 D2       ;
LA7AB                                                                          ;
lda      #$80                          ; 0x167bb $A7AB A9 80                   ;;A = #$80 1000_0000
sta      $EA                           ; 0x167bd $A7AD 85 EA                   ;;Global Sound Switch (0 = Sound On)
lda      #$00                          ; 0x167bf $A7AF A9 00                   ;;A = #$00 0000_0000
sta      $0747                         ; 0x167c1 $A7B1 8D 47 07                ;
sta      $0568                         ; 0x167c4 $A7B4 8D 68 05                ;; Related to Flute in Overworld
sta      $073E                         ; 0x167c7 $A7B7 8D 3E 07                ;
inc      $0726                         ; 0x167ca $A7BA EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
inc      $076C                         ; 0x167cd $A7BD EE 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
LA7C0                                                                          ;
rts                                    ; 0x167d0 $A7C0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Intro_Sprites                                                            ;
.byt    $7F,$F0,$01,$F8,$3F,$EE,$01,$F8; 0x167d1 $A7C1 7F F0 01 F8 3F EE 01 F8 ;
.byt    $4F,$F6,$01,$F0,$4F,$F4,$01,$F8; 0x167d9 $A7C9 4F F6 01 F0 4F F4 01 F8 ;
.byt    $5F,$EE,$01,$E8,$5F,$F0,$01,$F0; 0x167e1 $A7D1 5F EE 01 E8 5F F0 01 F0 ;
.byt    $5F,$F0,$01,$F8,$6F,$F8,$02,$78; 0x167e9 $A7D9 5F F0 01 F8 6F F8 02 78 ;
.byt    $6F,$FA,$02,$80,$6F,$EE,$01,$D0; 0x167f1 $A7E1 6F FA 02 80 6F EE 01 D0 ;
.byt    $6F,$F0,$01,$D8,$6F,$F4,$01,$E0; 0x167f9 $A7E9 6F F0 01 D8 6F F4 01 E0 ;
.byt    $6F,$F2,$01,$E8,$6F,$F6,$01,$F0; 0x16801 $A7F1 6F F2 01 E8 6F F6 01 F0 ;
.byt    $6F,$F0,$01,$F8,$7F,$FC,$02,$78; 0x16809 $A7F9 6F F0 01 F8 7F FC 02 78 ;
.byt    $7F,$FE,$02,$80,$7F,$F0,$01,$D0; 0x16811 $A801 7F FE 02 80 7F F0 01 D0 ;
.byt    $7F,$F2,$01,$D8,$7F,$F4,$01,$E0; 0x16819 $A809 7F F2 01 D8 7F F4 01 E0 ;
.byt    $7F,$F0,$01,$E8,$7F,$F2,$01,$F0; 0x16821 $A811 7F F0 01 E8 7F F2 01 F0 ;
.byt    $8F,$EA,$02,$78,$8F,$EC,$02,$80; 0x16829 $A819 8F EA 02 78 8F EC 02 80 ;
.byt    $9F,$EA,$02,$78,$9F,$EC,$02,$80; 0x16831 $A821 9F EA 02 78 9F EC 02 80 ;
.byt    $FF                            ; 0x16839 $A829 FF                      ;
LA82A                                                                          ;
.byt    $E8,$21,$70,$07,$E8,$22,$28,$07; 0x1683a $A82A E8 21 70 07 E8 22 28 07 ;
.byt    $E8,$23,$50,$07                ; 0x16842 $A832 E8 23 50 07             ;
LA836                                                                          ;
.byt    $E8,$20,$A0,$0F,$E8,$21,$20,$0F; 0x16846 $A836 E8 20 A0 0F E8 21 20 0F ;
.byt    $E8,$22,$78,$5F,$E8,$23,$40,$17; 0x1684e $A83E E8 22 78 5F E8 23 40 17 ;
.byt    $E8,$20,$E0,$1F,$E8,$21,$10,$1F; 0x16856 $A846 E8 20 E0 1F E8 21 10 1F ;
.byt    $E8,$22,$28,$5F,$E8,$23,$60,$1F; 0x1685e $A84E E8 22 28 5F E8 23 60 1F ;
.byt    $E8,$20,$A0,$4F,$E8,$21,$80,$1F; 0x16866 $A856 E8 20 A0 4F E8 21 80 1F ;
.byt    $E8,$22,$E0,$1F,$E8,$23,$E8,$27; 0x1686e $A85E E8 22 E0 1F E8 23 E8 27 ;
.byt    $E8,$20,$78,$27,$E8,$21,$C8,$27; 0x16876 $A866 E8 20 78 27 E8 21 C8 27 ;
.byt    $E8,$22,$E8,$2F,$E8,$23,$28,$2F; 0x1687e $A86E E8 22 E8 2F E8 23 28 2F ;
.byt    $E8,$20,$D8,$37,$E8,$21,$10,$37; 0x16886 $A876 E8 20 D8 37 E8 21 10 37 ;
.byt    $E8,$22,$C8,$3F,$E8,$23,$A8,$3F; 0x1688e $A87E E8 22 C8 3F E8 23 A8 3F ;
.byt    $E8,$20,$18,$47,$E8,$21,$08,$47; 0x16896 $A886 E8 20 18 47 E8 21 08 47 ;
.byt    $E8,$22,$48,$4F,$E8,$23,$E0,$AF; 0x1689e $A88E E8 22 48 4F E8 23 E0 AF ;
.byt    $E8,$01,$40,$B4,$E8,$02,$20,$9F; 0x168a6 $A896 E8 01 40 B4 E8 02 20 9F ;
.byt    $E8,$03,$58,$AD,$E8,$00,$48,$92; 0x168ae $A89E E8 03 58 AD E8 00 48 92 ;
.byt    $E8,$01,$70,$95,$E8,$02,$88,$8F; 0x168b6 $A8A6 E8 01 70 95 E8 02 88 8F ;
.byt    $E8,$03,$90,$95,$E8,$00,$B0,$98; 0x168be $A8AE E8 03 90 95 E8 00 B0 98 ;
.byt    $E8,$01,$8A,$78,$E8,$02,$95,$93; 0x168c6 $A8B6 E8 01 8A 78 E8 02 95 93 ;
.byt    $E8,$03,$8E                    ; 0x168ce $A8BE E8 03 8E                ;
; ---------------------------------------------------------------------------- ;
bank5_code21                                                                   ;
ldy      #$FF                          ; 0x168d1 $A8C1 A0 FF                   ; Y = FF
LA8C3                                                                          ;
lda      bank5_Intro_Sprites,y         ; 0x168d3 $A8C3 B9 C1 A7                ; Intro Sprites Table
sta      $0200,y                       ; 0x168d6 $A8C6 99 00 02                ;
dey                                    ; 0x168d9 $A8C9 88                      ;
cpy      #$FF                          ; 0x168da $A8CA C0 FF                   ;
bne      LA8C3                         ; 0x168dc $A8CC D0 F5                   ;
rts                                    ; 0x168de $A8CE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Animation_of_Stars_in_the_Sky                                            ;
ldx      #$6B                          ; 0x168df $A8CF A2 6B                   ; X = 6B
lda      $12                           ; 0x168e1 $A8D1 A5 12                   ; Permanent Frame Counter
and      #$0F                          ; 0x168e3 $A8D3 29 0F                   ; keep bits .... xxxx
bne      LA8E8                         ; 0x168e5 $A8D5 D0 11                   ;
LA8D7                                                                          ;
inc      $0267,x                       ; 0x168e7 $A8D7 FE 67 02                ;
lda      $0267,x                       ; 0x168ea $A8DA BD 67 02                ;
and      #$23                          ; 0x168ed $A8DD 29 23                   ; keep bits ..x. ..xx
sta      $0267,x                       ; 0x168ef $A8DF 9D 67 02                ;
dex                                    ; 0x168f2 $A8E2 CA                      ;
dex                                    ; 0x168f3 $A8E3 CA                      ;
dex                                    ; 0x168f4 $A8E4 CA                      ;
dex                                    ; 0x168f5 $A8E5 CA                      ;
bpl      LA8D7                         ; 0x168f6 $A8E6 10 EF                   ;
LA8E8                                                                          ;
lda      $12                           ; 0x168f8 $A8E8 A5 12                   ; Permanent Frame Counter
bne      LA8EE                         ; 0x168fa $A8EA D0 02                   ;
inc      $26                           ; 0x168fc $A8EC E6 26                   ;; Movement Tally - Increases as you walk in overworld.		; Shooting Star presence in Intro
LA8EE                                                                          ;
lda      $026C                         ; 0x168fe $A8EE AD 6C 02                ;
cmp      #$37                          ; 0x16901 $A8F1 C9 37                   ; Vertical limit for shooting star
bcc      LA8FE                         ; 0x16903 $A8F3 90 09                   ;
lda      #$00                          ; 0x16905 $A8F5 A9 00                   ; A = 00
sta      $26                           ; 0x16907 $A8F7 85 26                   ;; Movement Tally - Increases as you walk in overworld.		; Shooting Star presence in Intro
lda      #$F8                          ; 0x16909 $A8F9 A9 F8                   ; A = F8
sta      $026C                         ; 0x1690b $A8FB 8D 6C 02                ;
LA8FE                                                                          ;
lda      $26                           ; 0x1690e $A8FE A5 26                   ;; Movement Tally - Increases as you walk in overworld.		; Shooting Star presence in Intro
beq      LA917                         ; 0x16910 $A900 F0 15                   ;
lda      $12                           ; 0x16912 $A902 A5 12                   ; Permanent Frame Counter
and      #$03                          ; 0x16914 $A904 29 03                   ; keep bits .... ..xx (speed of shooting star)
bne      LA917                         ; 0x16916 $A906 D0 0F                   ;
inc      $026C                         ; 0x16918 $A908 EE 6C 02                ;
inc      $026C                         ; 0x1691b $A90B EE 6C 02                ;
inc      $026F                         ; 0x1691e $A90E EE 6F 02                ;
inc      $026F                         ; 0x16921 $A911 EE 6F 02                ;
inc      $026F                         ; 0x16924 $A914 EE 6F 02                ;
LA917                                                                          ;
rts                                    ; 0x16927 $A917 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Animation_of_Glints_in_Water                                             ;
ldx      #$2B                          ; 0x16928 $A918 A2 2B                   ; X = 2B
lda      $12                           ; 0x1692a $A91A A5 12                   ; Permanent Frame Counter
and      #$07                          ; 0x1692c $A91C 29 07                   ; keep bits .... .xxx
bne      LA931                         ; 0x1692e $A91E D0 11                   ;
LA920                                                                          ;
inc      $02D3,x                       ; 0x16930 $A920 FE D3 02                ;
lda      $02D3,x                       ; 0x16933 $A923 BD D3 02                ;
and      #$03                          ; 0x16936 $A926 29 03                   ; keep bits .... ..xx
sta      $02D3,x                       ; 0x16938 $A928 9D D3 02                ;
dex                                    ; 0x1693b $A92B CA                      ;
dex                                    ; 0x1693c $A92C CA                      ;
dex                                    ; 0x1693d $A92D CA                      ;
dex                                    ; 0x1693e $A92E CA                      ;
bpl      LA920                         ; 0x1693f $A92F 10 EF                   ;
LA931                                                                          ;
rts                                    ; 0x16941 $A931 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_intro_screen_text                                                  ;
.byt    $DA,$DF,$ED,$DE,$EB,$F4,$E0,$DA; 0x16942 $A932 DA DF ED DE EB F4 E0 DA ;
.byt    $E7,$E8,$E7,$F4,$F0,$DA,$EC,$F4; 0x1694a $A93A E7 E8 E7 F4 F0 DA EC F4 ;
.byt    $DD,$DE,$EC,$ED,$EB,$E8,$F2,$DE; 0x16952 $A942 DD DE EC ED EB E8 F2 DE ;
.byt    $DD,$9C,$F4,$F4,$FD,$E2,$E6,$E9; 0x1695a $A94A DD 9C F4 F4 FD E2 E6 E9 ;
.byt    $DA,$F4,$ED,$E8,$E5,$DD,$F4,$E5; 0x16962 $A952 DA F4 ED E8 E5 DD F4 E5 ;
.byt    $E2,$E7,$E4,$F4,$DA,$F4,$EC,$E5; 0x1696a $A95A E2 E7 E4 F4 DA F4 EC E5 ;
.byt    $DE,$DE,$E9,$E2,$E7,$E0,$F4,$F4; 0x16972 $A962 DE DE E9 E2 E7 E0 F4 F4 ;
.byt    $F4,$FD,$EC,$E9,$DE,$E5,$E5,$F4; 0x1697a $A96A F4 FD EC E9 DE E5 E5 F4 ;
.byt    $F0,$DA,$EC,$F4,$DC,$DA,$EC,$ED; 0x16982 $A972 F0 DA EC F4 DC DA EC ED ;
.byt    $F4,$E8,$E7,$F4,$E9,$EB,$E2,$E7; 0x1698a $A97A F4 E8 E7 F4 E9 EB E2 E7 ;
.byt    $DC,$DE,$EC,$EC,$F4,$F4,$FD,$F3; 0x16992 $A982 DC DE EC EC F4 F4 FD F3 ;
.byt    $DE,$E5,$DD,$DA,$CF,$F4,$EC,$E1; 0x1699a $A98A DE E5 DD DA CF F4 EC E1 ;
.byt    $DE,$F4,$F0,$E2,$E5,$E5,$F4,$F0; 0x169a2 $A992 DE F4 F0 E2 E5 E5 F4 F0 ;
.byt    $DA,$E4,$DE,$F4,$E8,$E7,$E5,$F2; 0x169aa $A99A DA E4 DE F4 E8 E7 E5 F2 ;
.byt    $F4,$F4,$F4,$FD,$F0,$E2,$ED,$E1; 0x169b2 $A9A2 F4 F4 F4 FD F0 E2 ED E1 ;
.byt    $F4,$ED,$E1,$DE,$F4,$E9,$E8,$F0; 0x169ba $A9AA F4 ED E1 DE F4 E9 E8 F0 ;
.byt    $DE,$EB,$F4,$E8,$DF,$F4,$E7,$E8; 0x169c2 $A9B2 DE EB F4 E8 DF F4 E7 E8 ;
.byt    $CF,$D3,$F4,$F4,$F4,$F4,$F4,$F4; 0x169ca $A9BA CF D3 F4 F4 F4 F4 F4 F4 ;
.byt    $FD,$ED,$EB,$E2,$DF,$E8,$EB,$DC; 0x169d2 $A9C2 FD ED EB E2 DF E8 EB DC ;
.byt    $DE,$F4,$EC,$DE,$DA,$E5,$DE,$DD; 0x169da $A9CA DE F4 EC DE DA E5 DE DD ;
.byt    $F4,$E2,$E7,$F4,$DA,$F4,$E9,$DA; 0x169e2 $A9D2 F4 E2 E7 F4 DA F4 E9 DA ;
.byt    $E5,$DA,$DC,$DE,$F4,$FD,$E2,$E7; 0x169ea $A9DA E5 DA DC DE F4 FD E2 E7 ;
.byt    $F4,$E1,$F2,$EB,$EE,$E5,$DE,$CF; 0x169f2 $A9E2 F4 E1 F2 EB EE E5 DE CF ;
.byt    $F4,$ED,$E8,$F4,$DB,$EB,$DE,$DA; 0x169fa $A9EA F4 ED E8 F4 DB EB DE DA ;
.byt    $E4,$F4,$ED,$E1,$DE,$F4,$F4,$F4; 0x16a02 $A9F2 E4 F4 ED E1 DE F4 F4 F4 ;
.byt    $F4,$F4,$FD,$EC,$DE,$DA,$E5,$9C; 0x16a0a $A9FA F4 F4 FD EC DE DA E5 9C ;
.byt    $DC,$EB,$F2,$EC,$ED,$DA        ; 0x16a12 $AA02 DC EB F2 EC ED DA       ;
LAA08                                                                          ;
.byt    $E5,$EC,$F4,$E6,$EE,$EC,$ED,$F4; 0x16a18 $AA08 E5 EC F4 E6 EE EC ED F4 ;
.byt    $DB,$DE,$F4,$F4,$F4,$F4,$F4,$F4; 0x16a20 $AA10 DB DE F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$FD,$E9,$E5,$DA,$DC,$DE,$DD; 0x16a28 $AA18 F4 FD E9 E5 DA DC DE DD ;
.byt    $F4,$E2,$E7,$F4,$EC,$ED,$DA,$ED; 0x16a30 $AA20 F4 E2 E7 F4 EC ED DA ED ;
.byt    $EE,$DE,$EC,$F4,$E2,$E7,$F4,$D6; 0x16a38 $AA28 EE DE EC F4 E2 E7 F4 D6 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$FD,$F0; 0x16a40 $AA30 F4 F4 F4 F4 F4 F4 FD F0 ;
.byt    $DE,$E5,$E5,$F4,$E0,$EE,$DA,$EB; 0x16a48 $AA38 DE E5 E5 F4 E0 EE DA EB ;
.byt    $DD,$DE,$DD,$F4,$E9,$DA,$E5,$DA; 0x16a50 $AA40 DD DE DD F4 E9 DA E5 DA ;
.byt    $DC,$DE,$EC,$CF,$F4,$F4,$F4,$F4; 0x16a58 $AA48 DC DE EC CF F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$FD,$E5,$E2,$E7,$E4; 0x16a60 $AA50 F4 F4 F4 FD E5 E2 E7 E4 ;
.byt    $F4,$EC,$DE,$ED,$F4,$E8,$EE,$ED; 0x16a68 $AA58 F4 EC DE ED F4 E8 EE ED ;
.byt    $F4,$E8,$E7,$F4,$E1,$E2,$EC,$F4; 0x16a70 $AA60 F4 E8 E7 F4 E1 E2 EC F4 ;
.byt    $E6,$E8,$EC,$ED,$F4,$F4,$F4,$F4; 0x16a78 $AA68 E6 E8 EC ED F4 F4 F4 F4 ;
.byt    $FD,$DA,$DD,$EF,$DE,$E7,$ED,$EE; 0x16a80 $AA70 FD DA DD EF DE E7 ED EE ;
.byt    $EB,$DE,$EC,$E8,$E6,$DE,$F4,$EA; 0x16a88 $AA78 EB DE EC E8 E6 DE F4 EA ;
.byt    $EE,$DE,$EC,$ED,$F4,$F2,$DE,$ED; 0x16a90 $AA80 EE DE EC ED F4 F2 DE ED ;
.byt    $CF,$CF,$CF,$F4,$F4,$FD,$F4,$F4; 0x16a98 $AA88 CF CF CF F4 F4 FD F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$0E,$D1,$D9; 0x16aa0 $AA90 F4 F4 F4 F4 F4 0E D1 D9 ;
.byt    $D8,$D7,$F4,$E7,$E2,$E7,$ED,$DE; 0x16aa8 $AA98 D8 D7 F4 E7 E2 E7 ED DE ;
.byt    $E7,$DD,$E8,$F4,$F4,$F4,$F4,$F4; 0x16ab0 $AAA0 E7 DD E8 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$FD,$F4,$F4,$F4,$F4,$F4; 0x16ab8 $AAA8 F4 F4 FD F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16ac0 $AAB0 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16ac8 $AAB8 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$FD; 0x16ad0 $AAC0 F4 F4 F4 F4 F4 F4 F4 FD ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16ad8 $AAC8 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16ae0 $AAD0 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16ae8 $AAD8 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$FD            ; 0x16af0 $AAE0 F4 F4 F4 F4 FD          ;
LAAE5                                                                          ;
.byt    $32,$4F,$6C,$89,$A6,$C3,$E0,$FD; 0x16af5 $AAE5 32 4F 6C 89 A6 C3 E0 FD ;
.byt    $1A,$37,$54,$71,$8E,$AB,$C8    ; 0x16afd $AAED 1A 37 54 71 8E AB C8    ;
LAAF4                                                                          ;
.byt    $A9,$A9,$A9,$A9,$A9,$A9,$A9,$A9; 0x16b04 $AAF4 A9 A9 A9 A9 A9 A9 A9 A9 ;
.byt    $AA,$AA,$AA,$AA,$AA,$AA,$AA,$00; 0x16b0c $AAFC AA AA AA AA AA AA AA 00 ;
.byt    $00,$00,$00,$00,$00,$00,$CC,$05; 0x16b14 $AB04 00 00 00 00 00 00 CC 05 ;
.byt    $05,$05,$05,$05,$05,$05,$CC    ; 0x16b1c $AB0C 05 05 05 05 05 05 CC    ;nametable attributes: intro screen "copyright" green color palette selection
LAB13                                                                          ;
.byt    $03,$03,$03,$03,$03,$03,$0B,$03; 0x16b23 $AB13 03 03 03 03 03 03 0B 03 ;
LAB1B                                                                          ;
.byt    $AB,$AB,$AB,$AB,$AB,$AB,$AB,$AB; 0x16b2b $AB1B AB AB AB AB AB AB AB AB ;
LAB23                                                                          ;
.byt    $4D,$70,$93,$B6,$D9,$FC,$1F,$42; 0x16b33 $AB23 4D 70 93 B6 D9 FC 1F 42 ;
.byt    $65,$88,$AB,$CE,$F1,$F1,$F1,$F1; 0x16b3b $AB2B 65 88 AB CE F1 F1 F1 F1 ;
.byt    $4D,$70,$93,$B6,$D9,$FC,$1F,$42; 0x16b43 $AB33 4D 70 93 B6 D9 FC 1F 42 ;
.byt    $65,$88,$AB,$CE,$F1,$F1        ; 0x16b4b $AB3B 65 88 AB CE F1 F1       ;
LAB41                                                                          ;
.byt    $B0,$B0,$B0,$B0,$B0,$B0,$B1,$B1; 0x16b51 $AB41 B0 B0 B0 B0 B0 B0 B1 B1 ;
.byt    $B1,$B1,$B1,$B1,$B1,$B1,$B1,$B1; 0x16b59 $AB49 B1 B1 B1 B1 B1 B1 B1 B1 ;
.byt    $B0,$B0,$B0,$B0,$B0,$B0,$B1,$B1; 0x16b61 $AB51 B0 B0 B0 B0 B0 B0 B1 B1 ;
.byt    $B1,$B1,$B1,$B1,$B1,$B1        ; 0x16b69 $AB59 B1 B1 B1 B1 B1 B1       ;
LAB5F                                                                          ;
.byt    $69                            ; 0x16b6f $AB5F 69                      ;
LAB60                                                                          ;
.byt    $AF,$84,$AF,$AA,$AF,$C6,$AF,$DB; 0x16b70 $AB60 AF 84 AF AA AF C6 AF DB ;
.byt    $AF,$EF,$AF,$14,$B0            ; 0x16b78 $AB68 AF EF AF 14 B0          ;
; ---------------------------------------------------------------------------- ;
LAB6D                                                                          ;
ldy      #$00                          ; 0x16b7d $AB6D A0 00                   ;;Y = #$00 0000_0000
LAB6F                                                                          ;
nop                                    ; 0x16b7f $AB6F EA                      ;
dey                                    ; 0x16b80 $AB70 88                      ;
bne      LAB6F                         ; 0x16b81 $AB71 D0 FC                   ;
LAB73                                                                          ;
bit      $2002                         ; 0x16b83 $AB73 2C 02 20                ;
bvc      LAB73                         ; 0x16b86 $AB76 50 FB                   ;
ldy      #$00                          ; 0x16b88 $AB78 A0 00                   ;;Y = #$00 0000_0000
LAB7A                                                                          ;
dey                                    ; 0x16b8a $AB7A 88                      ;
bne      LAB7A                         ; 0x16b8b $AB7B D0 FD                   ;
ldy      #$4A                          ; 0x16b8d $AB7D A0 4A                   ;;Y = #$4a 0100_1010
LAB7F                                                                          ;
dey                                    ; 0x16b8f $AB7F 88                      ;
bne      LAB7F                         ; 0x16b90 $AB80 D0 FD                   ;
lda      $FF                           ; 0x16b92 $AB82 A5 FF                   ;; Sprite Bank ?
and      #$FC                          ; 0x16b94 $AB84 29 FC                   ;;Keep Bits:1111_1100
ora      $36                           ; 0x16b96 $AB86 05 36                   ;; Sword Projectile Y On Screen
sta      $FF                           ; 0x16b98 $AB88 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x16b9a $AB8A 8D 00 20                ;
lda      $27                           ; 0x16b9d $AB8D A5 27                   ;
ldy      $28                           ; 0x16b9f $AB8F A4 28                   ;
sta      $2006                         ; 0x16ba1 $AB91 8D 06 20                ;
sty      $2006                         ; 0x16ba4 $AB94 8C 06 20                ;
.byt    $AD                            ; 0x16ba7 $AB97 AD                      ;
LAB98                                                                          ;
.byt    $07                            ; 0x16ba8 $AB98 07                      ;
jsr      L07AD                         ; 0x16ba9 $AB99 20 AD 07                ;; * related to Raft Animation *
jsr      L02AD                         ; 0x16bac $AB9C 20 AD 02                ;
jsr      L9520                         ; 0x16baf $AB9F 20 20 95                ;
.byt    $A7                            ; 0x16bb2 $ABA2 A7                      ;
lda      $0726                         ; 0x16bb3 $ABA3 AD 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
bne      LAC06                         ; 0x16bb6 $ABA6 D0 5E                   ;
lda      $0504                         ; 0x16bb8 $ABA8 AD 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
bne      bank5_code_ABF7               ; 0x16bbb $ABAB D0 4A                   ;
lda      $3F                           ; 0x16bbd $ABAD A5 3F                   ;
bne      LABE5                         ; 0x16bbf $ABAF D0 34                   ;
lda      $12                           ; 0x16bc1 $ABB1 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x16bc3 $ABB3 29 03                   ;;Keep Bits:0000_0011
bne      LAC06                         ; 0x16bc5 $ABB5 D0 4F                   ;
inc      $FC                           ; 0x16bc7 $ABB7 E6 FC                   ;
lda      $FC                           ; 0x16bc9 $ABB9 A5 FC                   ;
cmp      #$F0                          ; 0x16bcb $ABBB C9 F0                   ;
bne      LABCB                         ; 0x16bcd $ABBD D0 0C                   ;
lda      #$00                          ; 0x16bcf $ABBF A9 00                   ;;A = #$00 0000_0000
sta      $FC                           ; 0x16bd1 $ABC1 85 FC                   ;
lda      $0747                         ; 0x16bd3 $ABC3 AD 47 07                ;
eor      #$02                          ; 0x16bd6 $ABC6 49 02                   ;;Flip Bits:0000_0010
sta      $0747                         ; 0x16bd8 $ABC8 8D 47 07                ;
LABCB                                                                          ;
lda      $0761                         ; 0x16bdb $ABCB AD 61 07                ;
bne      LABE5                         ; 0x16bde $ABCE D0 15                   ;
lda      $31                           ; 0x16be0 $ABD0 A5 31                   ;
bne      LABDF                         ; 0x16be2 $ABD2 D0 0B                   ;
lda      $FC                           ; 0x16be4 $ABD4 A5 FC                   ;
cmp      #$60                          ; 0x16be6 $ABD6 C9 60                   ;
bne      LABDF                         ; 0x16be8 $ABD8 D0 05                   ;
lda      #$05                          ; 0x16bea $ABDA A9 05                   ;;A = #$05 0000_0101
sta      $0761                         ; 0x16bec $ABDC 8D 61 07                ;
LABDF                                                                          ;
lda      $FC                           ; 0x16bef $ABDF A5 FC                   ;
and      #$07                          ; 0x16bf1 $ABE1 29 07                   ;;Keep Bits:0000_0111
bne      LAC06                         ; 0x16bf3 $ABE3 D0 21                   ;
LABE5                                                                          ;
lda      $0761                         ; 0x16bf5 $ABE5 AD 61 07                ;
.byt    $20                            ; 0x16bf8 $ABE8 20                      ;
LABE9                                                                          ;
sta      $D3                           ; 0x16bf9 $ABE9 85 D3                   ;
and      ($AC),y                       ; 0x16bfb $ABEB 31 AC                   ;
.byt    $73                            ; 0x16bfd $ABED 73                      ;
ldy      LACA8                         ; 0x16bfe $ABEE AC A8 AC                ;
.byt    $FA                            ; 0x16c01 $ABF1 FA                      ;
ldy      bank5_code_AD7C               ; 0x16c02 $ABF2 AC 7C AD                ;
ora      $AE,x                         ; 0x16c05 $ABF5 15 AE                   ;
bank5_code_ABF7                                                                ;
jsr      LAC07                         ; 0x16c07 $ABF7 20 07 AC                ;
lda      $33                           ; 0x16c0a $ABFA A5 33                   ;
beq      LABE5                         ; 0x16c0c $ABFC F0 E7                   ;
lda      $0761                         ; 0x16c0e $ABFE AD 61 07                ;
beq      LAC06                         ; 0x16c11 $AC01 F0 03                   ;
jmp      LABE5                         ; 0x16c13 $AC03 4C E5 AB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAC06                                                                          ;
rts                                    ; 0x16c16 $AC06 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAC07                                                                          ;
lda      $12                           ; 0x16c17 $AC07 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x16c19 $AC09 29 03                   ;;Keep Bits:0000_0011
bne      LAC10                         ; 0x16c1b $AC0B D0 03                   ;
dec      $0504                         ; 0x16c1d $AC0D CE 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
LAC10                                                                          ;
rts                                    ; 0x16c20 $AC10 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_AC11                                                               ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16c21 $AC11 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16c29 $AC19 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x16c31 $AC21 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4    ; 0x16c39 $AC29 F4 F4 F4 F4 F4 F4 F4    ;
; ---------------------------------------------------------------------------- ;
bank5_code_AC30                                                                ;
sbc      LFCA5,x                       ; 0x16c40 $AC30 FD A5 FC                ;
and      #$0F                          ; 0x16c43 $AC33 29 0F                   ;;Keep Bits:0000_1111
beq      LAC3D                         ; 0x16c45 $AC35 F0 06                   ;
lda      #$03                          ; 0x16c47 $AC37 A9 03                   ;;A = #$03 0000_0011
sta      $0761                         ; 0x16c49 $AC39 8D 61 07                ;
rts                                    ; 0x16c4c $AC3C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAC3D                                                                          ;
lda      $2B                           ; 0x16c4d $AC3D A5 2B                   ;
sta      L0302                         ; 0x16c4f $AC3F 8D 02 03                ;; Used when writing text to screen
lda      $2C                           ; 0x16c52 $AC42 A5 2C                   ;
sta      $0303                         ; 0x16c54 $AC44 8D 03 03                ;; Letter position when writing to screen
jsr      LAEC1                         ; 0x16c57 $AC47 20 C1 AE                ;
lda      $2B                           ; 0x16c5a $AC4A A5 2B                   ;
sta      $0325                         ; 0x16c5c $AC4C 8D 25 03                ;
lda      $2C                           ; 0x16c5f $AC4F A5 2C                   ;
sta      $0326                         ; 0x16c61 $AC51 8D 26 03                ;
lda      #$20                          ; 0x16c64 $AC54 A9 20                   ;;A = #$20 0010_0000
sta      $0304                         ; 0x16c66 $AC56 8D 04 03                ;; Text memory offset?
sta      $0327                         ; 0x16c69 $AC59 8D 27 03                ;
ldy      #$1F                          ; 0x16c6c $AC5C A0 1F                   ;;Y = #$1f 0001_1111
LAC5E                                                                          ;
lda      bank5_table_AC11,y            ; 0x16c6e $AC5E B9 11 AC                ;
sta      $0305,y                       ; 0x16c71 $AC61 99 05 03                ;
sta      $0328,y                       ; 0x16c74 $AC64 99 28 03                ;
dey                                    ; 0x16c77 $AC67 88                      ;
bpl      LAC5E                         ; 0x16c78 $AC68 10 F4                   ;
lda      #$FF                          ; 0x16c7a $AC6A A9 FF                   ;;A = #$ff 1111_1111
sta      $0348                         ; 0x16c7c $AC6C 8D 48 03                ;
inc      $0761                         ; 0x16c7f $AC6F EE 61 07                ;
rts                                    ; 0x16c82 $AC72 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ldx      $33                           ; 0x16c83 $AC73 A6 33                   ;
lda      LAAE5,x                       ; 0x16c85 $AC75 BD E5 AA                ;
sta      L0000                         ; 0x16c88 $AC78 85 00                   ;
lda      LAAF4,x                       ; 0x16c8a $AC7A BD F4 AA                ;
sta      $01                           ; 0x16c8d $AC7D 85 01                   ;
ldy      #$1D                          ; 0x16c8f $AC7F A0 1D                   ;;Y = #$1d 0001_1101
lda      $2B                           ; 0x16c91 $AC81 A5 2B                   ;
sta      L0302                         ; 0x16c93 $AC83 8D 02 03                ;; Used when writing text to screen
lda      $2C                           ; 0x16c96 $AC86 A5 2C                   ;
clc                                    ; 0x16c98 $AC88 18                      ;
adc      #$03                          ; 0x16c99 $AC89 69 03                   ;
sta      $0303                         ; 0x16c9b $AC8B 8D 03 03                ;; Letter position when writing to screen
sty      $0304                         ; 0x16c9e $AC8E 8C 04 03                ;; Text memory offset?
lda      #$FF                          ; 0x16ca1 $AC91 A9 FF                   ;;A = #$ff 1111_1111
sta      $0305,y                       ; 0x16ca3 $AC93 99 05 03                ;
dey                                    ; 0x16ca6 $AC96 88                      ;
LAC97                                                                          ;
lda      (L0000),y                     ; 0x16ca7 $AC97 B1 00                   ;
sta      $0305,y                       ; 0x16ca9 $AC99 99 05 03                ;
dey                                    ; 0x16cac $AC9C 88                      ;
bpl      LAC97                         ; 0x16cad $AC9D 10 F8                   ;
jsr      LAEC1                         ; 0x16caf $AC9F 20 C1 AE                ;
inc      $33                           ; 0x16cb2 $ACA2 E6 33                   ;
inc      $0761                         ; 0x16cb4 $ACA4 EE 61 07                ;
rts                                    ; 0x16cb7 $ACA7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LACA8                                                                          ;
lda      $33                           ; 0x16cb8 $ACA8 A5 33                   ;
and      #$01                          ; 0x16cba $ACAA 29 01                   ;;Keep Bits:0000_0001
beq      LACF6                         ; 0x16cbc $ACAC F0 48                   ;
lda      $33                           ; 0x16cbe $ACAE A5 33                   ;
cmp      #$0F                          ; 0x16cc0 $ACB0 C9 0F                   ;
bne      LACB8                         ; 0x16cc2 $ACB2 D0 04                   ;
lda      #$00                          ; 0x16cc4 $ACB4 A9 00                   ;;A = #$00 0000_0000
sta      $33                           ; 0x16cc6 $ACB6 85 33                   ;
LACB8                                                                          ;
ldx      $32                           ; 0x16cc8 $ACB8 A6 32                   ;
lda      LAB13,x                       ; 0x16cca $ACBA BD 13 AB                ;
sta      $02                           ; 0x16ccd $ACBD 85 02                   ;
lda      LAB1B,x                       ; 0x16ccf $ACBF BD 1B AB                ;
sta      $03                           ; 0x16cd2 $ACC2 85 03                   ;
ldy      #$08                          ; 0x16cd4 $ACC4 A0 08                   ;;Y = #$08 0000_1000
lda      $2D                           ; 0x16cd6 $ACC6 A5 2D                   ;
sta      L0302                         ; 0x16cd8 $ACC8 8D 02 03                ;; Used when writing text to screen
lda      $2E                           ; 0x16cdb $ACCB A5 2E                   ;
sta      $0303                         ; 0x16cdd $ACCD 8D 03 03                ;; Letter position when writing to screen
sty      $0304                         ; 0x16ce0 $ACD0 8C 04 03                ;; Text memory offset?
lda      #$FF                          ; 0x16ce3 $ACD3 A9 FF                   ;;A = #$ff 1111_1111
sta      $0305,y                       ; 0x16ce5 $ACD5 99 05 03                ;
dey                                    ; 0x16ce8 $ACD8 88                      ;
LACD9                                                                          ;
lda      ($02),y                       ; 0x16ce9 $ACD9 B1 02                   ;
sta      $0305,y                       ; 0x16ceb $ACDB 99 05 03                ;
dey                                    ; 0x16cee $ACDE 88                      ;
bpl      LACD9                         ; 0x16cef $ACDF 10 F8                   ;
lda      $2E                           ; 0x16cf1 $ACE1 A5 2E                   ;
clc                                    ; 0x16cf3 $ACE3 18                      ;
adc      #$08                          ; 0x16cf4 $ACE4 69 08                   ;
sta      $2E                           ; 0x16cf6 $ACE6 85 2E                   ;
bne      LACEE                         ; 0x16cf8 $ACE8 D0 04                   ;
lda      #$C0                          ; 0x16cfa $ACEA A9 C0                   ;;A = #$c0 1100_0000
sta      $2E                           ; 0x16cfc $ACEC 85 2E                   ;
LACEE                                                                          ;
inc      $32                           ; 0x16cfe $ACEE E6 32                   ;
lda      $32                           ; 0x16d00 $ACF0 A5 32                   ;
and      #$07                          ; 0x16d02 $ACF2 29 07                   ;;Keep Bits:0000_0111
sta      $32                           ; 0x16d04 $ACF4 85 32                   ;
LACF6                                                                          ;
inc      $0761                         ; 0x16d06 $ACF6 EE 61 07                ;
rts                                    ; 0x16d09 $ACF9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LACFA                                                                          ;
ldx      $31                           ; 0x16d0a $ACFA A6 31                   ;
lda      LAB23,x                       ; 0x16d0c $ACFC BD 23 AB                ;
sta      L0000                         ; 0x16d0f $ACFF 85 00                   ;
lda      LAB41,x                       ; 0x16d11 $AD01 BD 41 AB                ;
sta      $01                           ; 0x16d14 $AD04 85 01                   ;
ldy      #$20                          ; 0x16d16 $AD06 A0 20                   ;;Y = #$20 0010_0000
lda      $29                           ; 0x16d18 $AD08 A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
sta      L0302                         ; 0x16d1a $AD0A 8D 02 03                ;; Used when writing text to screen
lda      $2A                           ; 0x16d1d $AD0D A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
sta      $0303                         ; 0x16d1f $AD0F 8D 03 03                ;; Letter position when writing to screen
sty      $0304                         ; 0x16d22 $AD12 8C 04 03                ;; Text memory offset?
lda      #$FF                          ; 0x16d25 $AD15 A9 FF                   ;;A = #$ff 1111_1111
sta      $0305,y                       ; 0x16d27 $AD17 99 05 03                ;
dey                                    ; 0x16d2a $AD1A 88                      ;
LAD1B                                                                          ;
lda      (L0000),y                     ; 0x16d2b $AD1B B1 00                   ;
sta      $0305,y                       ; 0x16d2d $AD1D 99 05 03                ;
dey                                    ; 0x16d30 $AD20 88                      ;
bpl      LAD1B                         ; 0x16d31 $AD21 10 F8                   ;
lda      $2A                           ; 0x16d33 $AD23 A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
clc                                    ; 0x16d35 $AD25 18                      ;
adc      #$20                          ; 0x16d36 $AD26 69 20                   ;
sta      $2A                           ; 0x16d38 $AD28 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
lda      $29                           ; 0x16d3a $AD2A A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
adc      #$00                          ; 0x16d3c $AD2C 69 00                   ;
sta      $29                           ; 0x16d3e $AD2E 85 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
inc      $31                           ; 0x16d40 $AD30 E6 31                   ;
lda      $31                           ; 0x16d42 $AD32 A5 31                   ;
cmp      #$10                          ; 0x16d44 $AD34 C9 10                   ;
beq      LAD40                         ; 0x16d46 $AD36 F0 08                   ;
cmp      #$1E                          ; 0x16d48 $AD38 C9 1E                   ;
bne      LAD5E                         ; 0x16d4a $AD3A D0 22                   ;
lda      #$00                          ; 0x16d4c $AD3C A9 00                   ;;A = #$00 0000_0000
sta      $31                           ; 0x16d4e $AD3E 85 31                   ;
LAD40                                                                          ;
lda      $2A                           ; 0x16d50 $AD40 A5 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
cmp      #$C0                          ; 0x16d52 $AD42 C9 C0                   ;
bne      LAD5A                         ; 0x16d54 $AD44 D0 14                   ;
lda      $29                           ; 0x16d56 $AD46 A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
and      #$23                          ; 0x16d58 $AD48 29 23                   ;;Keep Bits:0010_0011
cmp      #$23                          ; 0x16d5a $AD4A C9 23                   ;
bne      LAD5A                         ; 0x16d5c $AD4C D0 0C                   ;
lda      #$00                          ; 0x16d5e $AD4E A9 00                   ;;A = #$00 0000_0000
sta      $2A                           ; 0x16d60 $AD50 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
lda      $29                           ; 0x16d62 $AD52 A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
and      #$28                          ; 0x16d64 $AD54 29 28                   ;;Keep Bits:0010_1000
eor      #$08                          ; 0x16d66 $AD56 49 08                   ;;Flip Bits:0000_1000
sta      $29                           ; 0x16d68 $AD58 85 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
LAD5A                                                                          ;
inc      $0761                         ; 0x16d6a $AD5A EE 61 07                ;
rts                                    ; 0x16d6d $AD5D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAD5E                                                                          ;
lda      #$00                          ; 0x16d6e $AD5E A9 00                   ;;A = #$00 0000_0000
sta      $0761                         ; 0x16d70 $AD60 8D 61 07                ;
rts                                    ; 0x16d73 $AD63 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_AD64                                                               ;
.byt    $00,$00,$00,$00,$00,$00,$00,$CC; 0x16d74 $AD64 00 00 00 00 00 00 00 CC ;
.byt    $00,$00,$00,$00,$00,$00,$00,$CC; 0x16d7c $AD6C 00 00 00 00 00 00 00 CC ;
.byt    $00,$00,$00,$00,$00,$00,$00,$CC; 0x16d84 $AD74 00 00 00 00 00 00 00 CC ;
; ---------------------------------------------------------------------------- ;
bank5_code_AD7C                                                                ;
lda      #$14                          ; 0x16d8c $AD7C A9 14                   ;;A = #$14 0001_0100
sta      $02                           ; 0x16d8e $AD7E 85 02                   ;
lda      #$B2                          ; 0x16d90 $AD80 A9 B2                   ;;A = #$b2 1011_0010
sta      $03                           ; 0x16d92 $AD82 85 03                   ;
ldy      #$18                          ; 0x16d94 $AD84 A0 18                   ;;Y = #$18 0001_1000
lda      $2F                           ; 0x16d96 $AD86 A5 2F                   ;
sta      L0302                         ; 0x16d98 $AD88 8D 02 03                ;; Used when writing text to screen
sta      $031D                         ; 0x16d9b $AD8B 8D 1D 03                ;
lda      $30                           ; 0x16d9e $AD8E A5 30                   ;;projectile y		30,31,32,33,34,35	30,y
sta      $0303                         ; 0x16da0 $AD90 8D 03 03                ;; Letter position when writing to screen
eor      #$20                          ; 0x16da3 $AD93 49 20                   ;;Flip Bits:0010_0000
sta      $031E                         ; 0x16da5 $AD95 8D 1E 03                ;
sty      $0304                         ; 0x16da8 $AD98 8C 04 03                ;; Text memory offset?
sty      $031F                         ; 0x16dab $AD9B 8C 1F 03                ;
lda      #$FF                          ; 0x16dae $AD9E A9 FF                   ;;A = #$ff 1111_1111
sta      $0320,y                       ; 0x16db0 $ADA0 99 20 03                ;
dey                                    ; 0x16db3 $ADA3 88                      ;
LADA4                                                                          ;
lda      ($02),y                       ; 0x16db4 $ADA4 B1 02                   ;
sta      $0305,y                       ; 0x16db6 $ADA6 99 05 03                ;
lda      bank5_table_AD64,y            ; 0x16db9 $ADA9 B9 64 AD                ;
sta      $0320,y                       ; 0x16dbc $ADAC 99 20 03                ;
dey                                    ; 0x16dbf $ADAF 88                      ;
bpl      LADA4                         ; 0x16dc0 $ADB0 10 F2                   ;
lda      $30                           ; 0x16dc2 $ADB2 A5 30                   ;;projectile y		30,31,32,33,34,35	30,y
clc                                    ; 0x16dc4 $ADB4 18                      ;
adc      #$20                          ; 0x16dc5 $ADB5 69 20                   ;
sta      $30                           ; 0x16dc7 $ADB7 85 30                   ;;projectile y		30,31,32,33,34,35	30,y
bne      LADC5                         ; 0x16dc9 $ADB9 D0 0A                   ;
lda      $2F                           ; 0x16dcb $ADBB A5 2F                   ;
eor      #$08                          ; 0x16dcd $ADBD 49 08                   ;;Flip Bits:0000_1000
sta      $2F                           ; 0x16dcf $ADBF 85 2F                   ;
lda      #$C0                          ; 0x16dd1 $ADC1 A9 C0                   ;;A = #$c0 1100_0000
sta      $30                           ; 0x16dd3 $ADC3 85 30                   ;;projectile y		30,31,32,33,34,35	30,y
LADC5                                                                          ;
inc      $27                           ; 0x16dd5 $ADC5 E6 27                   ;
inc      $27                           ; 0x16dd7 $ADC7 E6 27                   ;
lda      $27                           ; 0x16dd9 $ADC9 A5 27                   ;
and      #$04                          ; 0x16ddb $ADCB 29 04                   ;;Keep Bits:0000_0100
beq      LADDD                         ; 0x16ddd $ADCD F0 0E                   ;
lda      $36                           ; 0x16ddf $ADCF A5 36                   ;; Sword Projectile Y On Screen
eor      #$02                          ; 0x16de1 $ADD1 49 02                   ;;Flip Bits:0000_0010
sta      $36                           ; 0x16de3 $ADD3 85 36                   ;; Sword Projectile Y On Screen
lda      $27                           ; 0x16de5 $ADD5 A5 27                   ;
and      #$28                          ; 0x16de7 $ADD7 29 28                   ;;Keep Bits:0010_1000
eor      #$08                          ; 0x16de9 $ADD9 49 08                   ;;Flip Bits:0000_1000
sta      $27                           ; 0x16deb $ADDB 85 27                   ;
LADDD                                                                          ;
jmp      LAD5E                         ; 0x16ded $ADDD 4C 5E AD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_code_ADE0                                                                ;
lda      #$2A                          ; 0x16df0 $ADE0 A9 2A                   ;;A = #$2a 0010_1010
sta      $27                           ; 0x16df2 $ADE2 85 27                   ;
lda      #$20                          ; 0x16df4 $ADE4 A9 20                   ;;A = #$20 0010_0000
sta      $29                           ; 0x16df6 $ADE6 85 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
lda      #$28                          ; 0x16df8 $ADE8 A9 28                   ;;A = #$28 0010_1000
sta      $2B                           ; 0x16dfa $ADEA 85 2B                   ;
lda      #$2B                          ; 0x16dfc $ADEC A9 2B                   ;;A = #$2b 0010_1011
sta      $2D                           ; 0x16dfe $ADEE 85 2D                   ;
lda      #$23                          ; 0x16e00 $ADF0 A9 23                   ;;A = #$23 0010_0011
sta      $2F                           ; 0x16e02 $ADF2 85 2F                   ;
lda      #$00                          ; 0x16e04 $ADF4 A9 00                   ;;A = #$00 0000_0000
sta      $28                           ; 0x16e06 $ADF6 85 28                   ;
sta      $2A                           ; 0x16e08 $ADF8 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
sta      $2C                           ; 0x16e0a $ADFA 85 2C                   ;
sta      $31                           ; 0x16e0c $ADFC 85 31                   ;
sta      $32                           ; 0x16e0e $ADFE 85 32                   ;
sta      $33                           ; 0x16e10 $AE00 85 33                   ;
sta      $0761                         ; 0x16e12 $AE02 8D 61 07                ;
sta      $0747                         ; 0x16e15 $AE05 8D 47 07                ;
sta      $FC                           ; 0x16e18 $AE08 85 FC                   ;
lda      #$C0                          ; 0x16e1a $AE0A A9 C0                   ;;A = #$c0 1100_0000
sta      $2E                           ; 0x16e1c $AE0C 85 2E                   ;
sta      $30                           ; 0x16e1e $AE0E 85 30                   ;;projectile y		30,31,32,33,34,35	30,y
lda      #$02                          ; 0x16e20 $AE10 A9 02                   ;;A = #$02 0000_0010
sta      $36                           ; 0x16e22 $AE12 85 36                   ;; Sword Projectile Y On Screen
LAE14                                                                          ;
rts                                    ; 0x16e24 $AE14 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $0747                         ; 0x16e25 $AE15 AD 47 07                ;
bne      LAE4A                         ; 0x16e28 $AE18 D0 30                   ;
lda      $0504                         ; 0x16e2a $AE1A AD 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
beq      LAE30                         ; 0x16e2d $AE1D F0 11                   ;
jsr      LAC07                         ; 0x16e2f $AE1F 20 07 AC                ;
lda      #$01                          ; 0x16e32 $AE22 A9 01                   ;;A = #$01 0000_0001
sta      $3F                           ; 0x16e34 $AE24 85 3F                   ;
lda      $E8                           ; 0x16e36 $AE26 A5 E8                   ;; Music Note Pitch
cmp      #$02                          ; 0x16e38 $AE28 C9 02                   ;
bne      LAE49                         ; 0x16e3a $AE2A D0 1D                   ;
lda      #$00                          ; 0x16e3c $AE2C A9 00                   ;;A = #$00 0000_0000
sta      $3F                           ; 0x16e3e $AE2E 85 3F                   ;
LAE30                                                                          ;
lda      $31                           ; 0x16e40 $AE30 A5 31                   ;
bne      LAE4A                         ; 0x16e42 $AE32 D0 16                   ;
lda      $35                           ; 0x16e44 $AE34 A5 35                   ;
bne      LAE4A                         ; 0x16e46 $AE36 D0 12                   ;
lda      #$00                          ; 0x16e48 $AE38 A9 00                   ;;A = #$00 0000_0000
sta      $0761                         ; 0x16e4a $AE3A 8D 61 07                ;
sta      $35                           ; 0x16e4d $AE3D 85 35                   ;
sta      $34                           ; 0x16e4f $AE3F 85 34                   ;
jsr      bank5_code21                  ; 0x16e51 $AE41 20 C1 A8                ;
lda      #$03                          ; 0x16e54 $AE44 A9 03                   ;;A = #$03 0000_0011
sta      $0736                         ; 0x16e56 $AE46 8D 36 07                ;; Game Mode ; screen intro type
LAE49                                                                          ;
rts                                    ; 0x16e59 $AE49 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAE4A                                                                          ;
lda      $35                           ; 0x16e5a $AE4A A5 35                   ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x16e5c $AE4C 20 85 D3;
eor      $AE,x                         ; 0x16e5f $AE4F 55 AE                   ;
.byt    $02                            ; 0x16e61 $AE51 02                      ;
.byt    $AF                            ; 0x16e62 $AE52 AF                      ;
ora      LA5AF,y                       ; 0x16e63 $AE53 19 AF A5                ;
.byt    $FC                            ; 0x16e66 $AE56 FC                      ;
and      #$07                          ; 0x16e67 $AE57 29 07                   ;;Keep Bits:0000_0111
bne      LAE14                         ; 0x16e69 $AE59 D0 B9                   ;
lda      $FC                           ; 0x16e6b $AE5B A5 FC                   ;
cmp      #$F0                          ; 0x16e6d $AE5D C9 F0                   ;
bne      LAE72                         ; 0x16e6f $AE5F D0 11                   ;
lda      #$00                          ; 0x16e71 $AE61 A9 00                   ;;A = #$00 0000_0000
sta      $FC                           ; 0x16e73 $AE63 85 FC                   ;
lda      $0747                         ; 0x16e75 $AE65 AD 47 07                ;
eor      #$02                          ; 0x16e78 $AE68 49 02                   ;;Flip Bits:0000_0010
sta      $0747                         ; 0x16e7a $AE6A 8D 47 07                ;
lda      #$90                          ; 0x16e7d $AE6D A9 90                   ;;A = #$90 1001_0000
sta      $0504                         ; 0x16e7f $AE6F 8D 04 05                ;; Timer for Link graphic to change when walking (OW)	;Timer for Sword in middle swing (SS)
LAE72                                                                          ;
lda      $34                           ; 0x16e82 $AE72 A5 34                   ;
asl                                    ; 0x16e84 $AE74 0A                      ;
tax                                    ; 0x16e85 $AE75 AA                      ;
lda      LAB5F,x                       ; 0x16e86 $AE76 BD 5F AB                ;
sta      L0000                         ; 0x16e89 $AE79 85 00                   ;
lda      LAB60,x                       ; 0x16e8b $AE7B BD 60 AB                ;
sta      $01                           ; 0x16e8e $AE7E 85 01                   ;
lda      $2B                           ; 0x16e90 $AE80 A5 2B                   ;
sta      L0302                         ; 0x16e92 $AE82 8D 02 03                ;; Used when writing text to screen
lda      $2C                           ; 0x16e95 $AE85 A5 2C                   ;
sta      $0303                         ; 0x16e97 $AE87 8D 03 03                ;; Letter position when writing to screen
lda      #$20                          ; 0x16e9a $AE8A A9 20                   ;;A = #$20 0010_0000
sta      $0304                         ; 0x16e9c $AE8C 8D 04 03                ;; Text memory offset?
lda      #$FF                          ; 0x16e9f $AE8F A9 FF                   ;;A = #$ff 1111_1111
ldy      #$1F                          ; 0x16ea1 $AE91 A0 1F                   ;;Y = #$1f 0001_1111
sta      $0306,y                       ; 0x16ea3 $AE93 99 06 03                ;
LAE96                                                                          ;
lda      bank5_table_AC11,y            ; 0x16ea6 $AE96 B9 11 AC                ;
sta      $0305,y                       ; 0x16ea9 $AE99 99 05 03                ;
dey                                    ; 0x16eac $AE9C 88                      ;
bpl      LAE96                         ; 0x16ead $AE9D 10 F7                   ;
lda      $34                           ; 0x16eaf $AE9F A5 34                   ;
cmp      #$07                          ; 0x16eb1 $AEA1 C9 07                   ;
beq      LAEBB                         ; 0x16eb3 $AEA3 F0 16                   ;
ldy      #$00                          ; 0x16eb5 $AEA5 A0 00                   ;;Y = #$00 0000_0000
lda      (L0000),y                     ; 0x16eb7 $AEA7 B1 00                   ;
cmp      $2B                           ; 0x16eb9 $AEA9 C5 2B                   ;
bne      LAEBB                         ; 0x16ebb $AEAB D0 0E                   ;
iny                                    ; 0x16ebd $AEAD C8                      ;
lda      (L0000),y                     ; 0x16ebe $AEAE B1 00                   ;
and      #$F0                          ; 0x16ec0 $AEB0 29 F0                   ;;Keep Bits:1111_0000
cmp      $2C                           ; 0x16ec2 $AEB2 C5 2C                   ;
bne      LAEBB                         ; 0x16ec4 $AEB4 D0 05                   ;
jsr      LAEEE                         ; 0x16ec6 $AEB6 20 EE AE                ;
inc      $34                           ; 0x16ec9 $AEB9 E6 34                   ;
LAEBB                                                                          ;
jsr      LAEC1                         ; 0x16ecb $AEBB 20 C1 AE                ;
inc      $35                           ; 0x16ece $AEBE E6 35                   ;
rts                                    ; 0x16ed0 $AEC0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAEC1                                                                          ;
lda      $2C                           ; 0x16ed1 $AEC1 A5 2C                   ;
clc                                    ; 0x16ed3 $AEC3 18                      ;
adc      #$20                          ; 0x16ed4 $AEC4 69 20                   ;
sta      $2C                           ; 0x16ed6 $AEC6 85 2C                   ;
lda      $2B                           ; 0x16ed8 $AEC8 A5 2B                   ;
adc      #$00                          ; 0x16eda $AECA 69 00                   ;
sta      $2B                           ; 0x16edc $AECC 85 2B                   ;
and      #$03                          ; 0x16ede $AECE 29 03                   ;;Keep Bits:0000_0011
cmp      #$03                          ; 0x16ee0 $AED0 C9 03                   ;
bne      LAEE6                         ; 0x16ee2 $AED2 D0 12                   ;
lda      $2C                           ; 0x16ee4 $AED4 A5 2C                   ;
cmp      #$C0                          ; 0x16ee6 $AED6 C9 C0                   ;
bne      LAEE6                         ; 0x16ee8 $AED8 D0 0C                   ;
lda      #$00                          ; 0x16eea $AEDA A9 00                   ;;A = #$00 0000_0000
sta      $2C                           ; 0x16eec $AEDC 85 2C                   ;
lda      $2B                           ; 0x16eee $AEDE A5 2B                   ;
and      #$28                          ; 0x16ef0 $AEE0 29 28                   ;;Keep Bits:0010_1000
eor      #$08                          ; 0x16ef2 $AEE2 49 08                   ;;Flip Bits:0000_1000
sta      $2B                           ; 0x16ef4 $AEE4 85 2B                   ;
LAEE6                                                                          ;
rts                                    ; 0x16ef6 $AEE6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAEE7                                                                          ;
.byt    $1B                            ; 0x16ef7 $AEE7 1B                      ;
rol      $1C                           ; 0x16ef8 $AEE8 26 1C                   ;
ora      $14,x                         ; 0x16efa $AEEA 15 14                   ;
and      $1A                           ; 0x16efc $AEEC 25 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
LAEEE                                                                          ;
ldx      $34                           ; 0x16efe $AEEE A6 34                   ;
ldy      LAEE7,x                       ; 0x16f00 $AEF0 BC E7 AE                ;
lda      #$FF                          ; 0x16f03 $AEF3 A9 FF                   ;;A = #$ff 1111_1111
sta      $0325,y                       ; 0x16f05 $AEF5 99 25 03                ;
dey                                    ; 0x16f08 $AEF8 88                      ;
LAEF9                                                                          ;
lda      (L0000),y                     ; 0x16f09 $AEF9 B1 00                   ;
sta      $0325,y                       ; 0x16f0b $AEFB 99 25 03                ;
dey                                    ; 0x16f0e $AEFE 88                      ;
bpl      LAEF9                         ; 0x16f0f $AEFF 10 F8                   ;
rts                                    ; 0x16f11 $AF01 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      LACFA                         ; 0x16f12 $AF02 20 FA AC                ;
lda      $0761                         ; 0x16f15 $AF05 AD 61 07                ;
beq      LAF0F                         ; 0x16f18 $AF08 F0 05                   ;
inc      $35                           ; 0x16f1a $AF0A E6 35                   ;
jmp      LAF13                         ; 0x16f1c $AF0C 4C 13 AF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAF0F                                                                          ;
lda      #$00                          ; 0x16f1f $AF0F A9 00                   ;;A = #$00 0000_0000
sta      $35                           ; 0x16f21 $AF11 85 35                   ;
LAF13                                                                          ;
lda      #$05                          ; 0x16f23 $AF13 A9 05                   ;;A = #$05 0000_0101
sta      $0761                         ; 0x16f25 $AF15 8D 61 07                ;
rts                                    ; 0x16f28 $AF18 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank5_code_AD7C               ; 0x16f29 $AF19 20 7C AD                ;
jmp      LAF0F                         ; 0x16f2c $AF1C 4C 0F AF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LAF1F                                                                          ;
lda      $073D                         ; 0x16f2f $AF1F AD 3D 07                ;; Routine Index
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x16f32 $AF22 20 85 D3;
ror      $D2                           ; 0x16f35 $AF25 66 D2                   ;
.byt    $2B                            ; 0x16f37 $AF27 2B                      ;
.byt    $AF                            ; 0x16f38 $AF28 AF                      ;
.byt    $34                            ; 0x16f39 $AF29 34                      ;
.byt    $AF                            ; 0x16f3a $AF2A AF                      ;
lda      #$01                          ; 0x16f3b $AF2B A9 01                   ;;A = #$01 0000_0001
sta      $0725                         ; 0x16f3d $AF2D 8D 25 07                ;; PPU Macro Selector	
inc      $073D                         ; 0x16f40 $AF30 EE 3D 07                ;; Routine Index
rts                                    ; 0x16f43 $AF33 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$04                          ; 0x16f44 $AF34 A9 04                   ;;A = #$04 0000_0100
sta      $0725                         ; 0x16f46 $AF36 8D 25 07                ;; PPU Macro Selector	
inc      $0736                         ; 0x16f49 $AF39 EE 36 07                ;; Game Mode ; screen intro type
rts                                    ; 0x16f4c $AF3C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table_AF3D_PPU_maybe                                                     ;
.byt    $3F,$00,$20,$0F,$30,$1C,$15,$0F; 0x16f4d $AF3D 3F 00 20 0F 30 1C 15 0F ;
.byt    $2B,$0F,$00,$0F,$01,$12,$21,$0F; 0x16f55 $AF45 2B 0F 00 0F 01 12 21 0F ;
.byt    $0F,$0A,$12,$0F,$30,$12,$02,$0F; 0x16f5d $AF4D 0F 0A 12 0F 30 12 02 0F ;
.byt    $2B,$0F,$00,$0F,$16,$26,$30,$0F; 0x16f65 $AF55 2B 0F 00 0F 16 26 30 0F ;
.byt    $0F,$19,$21,$FF,$20,$1F,$DE,$FD; 0x16f6d $AF5D 0F 19 21 FF 20 1F DE FD ;
.byt    $28,$1F,$DE,$FD,$22,$6B,$09,$0F; 0x16f75 $AF65 28 1F DE FD 22 6B 09 0F ;
.byt    $10,$11,$12,$13,$14,$15,$16,$17; 0x16f7d $AF6D 10 11 12 13 14 15 16 17 ;
.byt    $22,$7F,$01,$FD,$23,$E0,$08,$00; 0x16f85 $AF75 22 7F 01 FD 23 E0 08 00 ;
.byt    $00,$00,$00,$00,$00,$00,$CC,$22; 0x16f8d $AF7D 00 00 00 00 00 00 CC 22 ;
.byt    $88,$18,$1C,$1E,$20,$22,$24,$26; 0x16f95 $AF85 88 18 1C 1E 20 22 24 26 ;
.byt    $28,$2A,$2C,$2E,$30,$32,$34,$36; 0x16f9d $AF8D 28 2A 2C 2E 30 32 34 36 ;
.byt    $38,$3A,$3C,$F4,$F4,$F4,$F4,$F4; 0x16fa5 $AF95 38 3A 3C F4 F4 F4 F4 F4 ;
.byt    $F4,$FD,$23,$E8,$08,$00,$00,$00; 0x16fad $AF9D F4 FD 23 E8 08 00 00 00 ;
.byt    $00,$00,$00,$00,$CC,$22,$A7,$19; 0x16fb5 $AFA5 00 00 00 00 CC 22 A7 19 ;
.byt    $1B,$1D,$1F,$21,$23,$25,$27,$29; 0x16fbd $AFAD 1B 1D 1F 21 23 25 27 29 ;
.byt    $2B,$2D,$2F,$31,$33,$35,$37,$39; 0x16fc5 $AFB5 2B 2D 2F 31 33 35 37 39 ;
.byt    $3B,$3D,$F4,$F4,$F4,$F4,$F4,$F4; 0x16fcd $AFBD 3B 3D F4 F4 F4 F4 F4 F4 ;
.byt    $FD,$22,$CA,$0E,$3E,$40,$42,$F4; 0x16fd5 $AFC5 FD 22 CA 0E 3E 40 42 F4 ;
.byt    $4B,$4D,$51,$53,$58,$5A,$5F,$61; 0x16fdd $AFCD 4B 4D 51 53 58 5A 5F 61 ;
.byt    $08,$18,$22,$DF,$01,$FD,$22,$EA; 0x16fe5 $AFD5 08 18 22 DF 01 FD 22 EA ;
.byt    $0D,$3F,$41,$43,$F4,$4C,$4E,$52; 0x16fed $AFDD 0D 3F 41 43 F4 4C 4E 52 ;
.byt    $54,$59,$5B,$60,$62,$09,$22,$FF; 0x16ff5 $AFE5 54 59 5B 60 62 09 22 FF ;
.byt    $01,$FD,$23,$09,$17,$44,$46,$48; 0x16ffd $AFED 01 FD 23 09 17 44 46 48 ;
.byt    $4A,$1A,$FD,$4F,$55,$56,$FD,$5C; 0x17005 $AFF5 4A 1A FD 4F 55 56 FD 5C ;
.byt    $63,$65,$0A,$0C,$F4,$F4,$F4,$F4; 0x1700d $AFFD 63 65 0A 0C F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$FD,$23,$F0,$08,$00; 0x17015 $B005 F4 F4 F4 FD 23 F0 08 00 ;
.byt    $00,$00,$00,$00,$00,$00,$CC,$23; 0x1701d $B00D 00 00 00 00 00 00 CC 23 ;
.byt    $29,$17,$45,$47,$49,$49,$67,$47; 0x17025 $B015 29 17 45 47 49 49 67 47 ;
.byt    $50,$47,$57,$5D,$5E,$64,$66,$0B; 0x1702d $B01D 50 47 57 5D 5E 64 66 0B ;
.byt    $0D,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x17035 $B025 0D F4 F4 F4 F4 F4 F4 F4 ;
.byt    $FD,$23,$C7,$01,$CC,$23,$CF,$01; 0x1703d $B02D FD 23 C7 01 CC 23 CF 01 ;
.byt    $CC,$23,$D7,$01,$CC,$23,$DF,$01; 0x17045 $B035 CC 23 D7 01 CC 23 DF 01 ;
.byt    $CC,$23,$E7,$01,$CC,$23,$EF,$01; 0x1704d $B03D CC 23 E7 01 CC 23 EF 01 ;
.byt    $CC,$23,$FF,$01,$CC,$2A,$00,$20; 0x17055 $B045 CC 23 FF 01 CC 2A 00 20 ;
.byt    $68,$68,$68,$68,$68,$68,$68,$68; 0x1705d $B04D 68 68 68 68 68 68 68 68 ;
.byt    $68,$68,$68,$68,$69,$69,$69,$69; 0x17065 $B055 68 68 68 68 69 69 69 69 ;
.byt    $69,$69,$69,$69,$68,$68,$68,$68; 0x1706d $B05D 69 69 69 69 68 68 68 68 ;
.byt    $68,$68,$71,$7A,$78,$75,$7A,$F4; 0x17075 $B065 68 68 71 7A 78 75 7A F4 ;
.byt    $2A,$20,$20,$68,$68,$6A,$6A,$68; 0x1707d $B06D 2A 20 20 68 68 6A 6A 68 ;
.byt    $68,$68,$68,$68,$68,$68,$6A,$6A; 0x17085 $B075 68 68 68 68 68 68 6A 6A ;
.byt    $6A,$6A,$6A,$6A,$6A            ; 0x1708d $B07D 6A 6A 6A 6A 6A          ;
LB082                                                                          ;
.byt    $6A,$68,$68,$68,$68,$68,$68,$6A; 0x17092 $B082 6A 68 68 68 68 68 68 6A ;
.byt    $77,$76,$79,$78,$F4,$F4,$2A,$40; 0x1709a $B08A 77 76 79 78 F4 F4 2A 40 ;
.byt    $20,$73,$73,$76,$7B,$6A,$68,$68; 0x170a2 $B092 20 73 73 76 7B 6A 68 68 ;
.byt    $68,$68,$68,$6A,$6A,$70,$6F,$6D; 0x170aa $B09A 68 68 68 6A 6A 70 6F 6D ;
.byt    $6D,$6D,$6D,$6D,$6D,$6D,$6E,$70; 0x170b2 $B0A2 6D 6D 6D 6D 6D 6D 6E 70 ;
.byt    $6F,$6D,$6D,$78,$79,$7A,$F4,$F4; 0x170ba $B0AA 6F 6D 6D 78 79 7A F4 F4 ;
.byt    $F4,$2A,$60,$20,$73,$7A,$75,$76; 0x170c2 $B0B2 F4 2A 60 20 73 7A 75 76 ;
.byt    $68,$68,$68,$68,$6A,$6A,$6A,$6A; 0x170ca $B0BA 68 68 68 68 6A 6A 6A 6A ;
.byt    $6D,$6B,$6B,$6B,$6B,$6B,$6B,$6B; 0x170d2 $B0C2 6D 6B 6B 6B 6B 6B 6B 6B ;
.byt    $6B,$6B,$6D,$6B,$6C,$6C,$79,$7A; 0x170da $B0CA 6B 6B 6D 6B 6C 6C 79 7A ;
.byt    $F4,$F4,$F4,$F4,$2A,$80,$20,$73; 0x170e2 $B0D2 F4 F4 F4 F4 2A 80 20 73 ;
.byt    $7A,$77,$78,$68,$6A,$6A,$6A,$6A; 0x170ea $B0DA 7A 77 78 68 6A 6A 6A 6A ;
.byt    $6A,$70,$6D,$6D,$6B,$71,$73,$73; 0x170f2 $B0E2 6A 70 6D 6D 6B 71 73 73 ;
.byt    $73,$75,$73,$75,$73,$73,$73,$76; 0x170fa $B0EA 73 75 73 75 73 73 73 76 ;
.byt    $71,$72,$72,$73,$73,$73,$75,$2A; 0x17102 $B0F2 71 72 72 73 73 73 75 2A ;
.byt    $A0,$20,$73,$77,$76,$77,$6A,$6A; 0x1710a $B0FA A0 20 73 77 76 77 6A 6A ;
.byt    $6A,$6A,$6A,$6A,$6F,$6D,$6C,$6B; 0x17112 $B102 6A 6A 6A 6A 6F 6D 6C 6B ;
.byt    $71,$74,$77,$74,$73,$71,$75,$74; 0x1711a $B10A 71 74 77 74 73 71 75 74 ;
.byt    $75,$76,$72,$75,$71,$75,$75,$72; 0x17122 $B112 75 76 72 75 71 75 75 72 ;
.byt    $72,$75,$2A,$C0,$20,$71,$78,$7A; 0x1712a $B11A 72 75 2A C0 20 71 78 7A ;
.byt    $78,$70,$70,$6F,$6D,$6D,$6D,$6B; 0x17132 $B122 78 70 70 6F 6D 6D 6D 6B ;
.byt    $6B,$6B,$6B,$78,$7A,$79,$79,$F4; 0x1713a $B12A 6B 6B 6B 78 7A 79 79 F4 ;
.byt    $79,$74,$79,$79,$79,$78,$77,$72; 0x17142 $B132 79 74 79 79 79 78 77 72 ;
.byt    $73,$F4,$79,$73,$75,$2A,$E0,$20; 0x1714a $B13A 73 F4 79 73 75 2A E0 20 ;
.byt    $73,$77,$7A,$77,$6D,$6D,$6C,$6B; 0x17152 $B142 73 77 7A 77 6D 6D 6C 6B ;
.byt    $6B,$6B,$6B,$6B,$6B,$6B,$79,$76; 0x1715a $B14A 6B 6B 6B 6B 6B 6B 79 76 ;
.byt    $73,$75,$77,$75,$77,$75,$76,$79; 0x17162 $B152 73 75 77 75 77 75 76 79 ;
.byt    $7A,$78,$77,$75,$78,$78,$75,$78; 0x1716a $B15A 7A 78 77 75 78 78 75 78 ;
.byt    $2B,$00,$20,$73,$78,$77,$78,$6C; 0x17172 $B162 2B 00 20 73 78 77 78 6C ;
.byt    $6B,$6B,$6C,$6B,$6B,$6B,$6B,$6B; 0x1717a $B16A 6B 6B 6C 6B 6B 6B 6B 6B ;
.byt    $6B,$6B,$6C,$74,$77,$72,$77,$76; 0x17182 $B172 6B 6B 6C 74 77 72 77 76 ;
.byt    $F4,$7A,$78,$F4,$79,$7A,$7A,$72; 0x1718a $B17A F4 7A 78 F4 79 7A 7A 72 ;
.byt    $75,$78,$73,$2B,$20,$20,$71,$78; 0x17192 $B182 75 78 73 2B 20 20 71 78 ;
.byt    $7A,$77,$6C,$6C,$6C,$6C,$6C,$6C; 0x1719a $B18A 7A 77 6C 6C 6C 6C 6C 6C ;
.byt    $6B,$6B,$6B,$6B,$6B,$6B,$79,$79; 0x171a2 $B192 6B 6B 6B 6B 6B 6B 79 79 ;
.byt    $73,$79,$79,$79,$F4,$77,$76,$F4; 0x171aa $B19A 73 79 79 79 F4 77 76 F4 ;
.byt    $77,$78,$74,$78,$72,$75,$2B,$40; 0x171b2 $B1A2 77 78 74 78 72 75 2B 40 ;
.byt    $20,$73,$77,$7A,$79,$7A,$77,$6C; 0x171ba $B1AA 20 73 77 7A 79 7A 77 6C ;
.byt    $6C,$6C,$6C,$6C,$6C,$6C,$6B,$6B; 0x171c2 $B1B2 6C 6C 6C 6C 6C 6C 6B 6B ;
.byt    $6B,$6B,$6C,$79,$78,$72,$76,$F4; 0x171ca $B1BA 6B 6B 6C 79 78 72 76 F4 ;
.byt    $79,$F4,$77,$F4,$7A,$F4,$7A,$72; 0x171d2 $B1C2 79 F4 77 F4 7A F4 7A 72 ;
.byt    $75,$2B,$60,$20,$71,$78,$7A,$74; 0x171da $B1CA 75 2B 60 20 71 78 7A 74 ;
.byt    $73,$76,$6C,$6C,$6C,$6C,$6C,$6C; 0x171e2 $B1D2 73 76 6C 6C 6C 6C 6C 6C ;
.byt    $6C,$6C,$6C,$6B,$6B,$6C,$7A,$78; 0x171ea $B1DA 6C 6C 6C 6B 6B 6C 7A 78 ;
.byt    $79,$77,$F4,$79,$7A,$7A,$F4,$79; 0x171f2 $B1E2 79 77 F4 79 7A 7A F4 79 ;
.byt    $F4,$73,$73,$75,$2B,$80,$20,$F4; 0x171fa $B1EA F4 73 73 75 2B 80 20 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x17202 $B1F2 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x1720a $B1FA F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x17212 $B202 F4 F4 F4 F4 F4 F4 F4 F4 ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$2B; 0x1721a $B20A F4 F4 F4 F4 F4 F4 F4 2B ;
.byt    $E0,$18,$5A,$AA,$AA,$FA,$FA,$FA; 0x17222 $B212 E0 18 5A AA AA FA FA FA ;
.byt    $76,$15,$55,$FA,$FE,$77,$55,$55; 0x1722a $B21A 76 15 55 FA FE 77 55 55 ;
.byt    $55,$55,$55,$DF,$FF,$FF,$75,$55; 0x17232 $B222 55 55 55 DF FF FF 75 55 ;
.byt    $55,$55,$FF                    ; 0x1723a $B22A 55 55 FF                ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Remove_All_Sprites      ; 0x1723d $B22D 20 4C D2                ;
jsr      LD168                         ; 0x17240 $B230 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x17243 $B233 20 85 D3;
bank5_table_B236                                                               ;
.byt    $42,$B2,$CF,$B3,$FA,$B3        ; 0x17246 $B236 42 B2 CF B3 FA B3       ;
LB23C                                                                          ;
.byt    $2C                            ; 0x1724c $B23C 2C                      ;
LB23D                                                                          ;
.byt    $60,$5E,$60,$90,$60,$AD,$3B,$07; 0x1724d $B23D 60 5E 60 90 60 AD 3B 07 ;
.byt    $20,$85,$D3,$0A,$B4,$4E,$B2,$61; 0x17255 $B245 20 85 D3 0A B4 4E B2 61 ;
.byt    $B2                            ; 0x1725d $B24D B2                      ;
; ---------------------------------------------------------------------------- ;
bank5_code22                                                                   ;
ldy      #$00                          ; 0x1725e $B24E A0 00                   ; Y = 00
LB250                                                                          ;
lda      bank5_Tables_for_Selection_Screen_Text_,y; 0x17260 $B250 B9 19 BC     ;
sta      $7F00,y                       ; 0x17263 $B253 99 00 7F                ;
iny                                    ; 0x17266 $B256 C8                      ;
cpy      #$A6                          ; 0x17267 $B257 C0 A6                   ;
bcc      LB250                         ; 0x17269 $B259 90 F5                   ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1726b $B25B 20 66 D2; Erase Name Tables 0-1, set scroll to 0,0
jmp      bank5__073B__plus__equal__1__and_RTS; 0x1726e $B25E 4C 1D B4          ; $073B += 1, and RTS
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Load_Saved_Games_Data                                                    ;
jsr      bank5_Related_to_AttackMagicLife_Levels__and_convert_numbers_to_Tile_Mappings____Load_Attack_Magic_Life_Levels; 0x17271 $B261 20 D8 B5; Load Attack/Magic/Life Levels
jsr      bank5_Load_Number_of_Saves    ; 0x17274 $B264 20 03 B6                ; Load Number of Saves
jsr      LB63C                         ; 0x17277 $B267 20 3C B6                ;
jsr      LB5B5                         ; 0x1727a $B26A 20 B5 B5                ;
ldy      $073E                         ; 0x1727d $B26D AC 3E 07                ;
bne      LB27B                         ; 0x17280 $B270 D0 09                   ;
lda      #$02                          ; 0x17282 $B272 A9 02                   ; A = 02
sta      $0725                         ; 0x17284 $B274 8D 25 07                ;; PPU Macro Selector	
inc      $073E                         ; 0x17287 $B277 EE 3E 07                ;
rts                                    ; 0x1728a $B27A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB27B                                                                          ;
dey                                    ; 0x1728b $B27B 88                      ;
bne      LB28B                         ; 0x1728c $B27C D0 0D                   ;
inc      $073E                         ; 0x1728e $B27E EE 3E 07                ;
lda      #$05                          ; 0x17291 $B281 A9 05                   ; A = 05
sta      $0725                         ; 0x17293 $B283 8D 25 07                ;; PPU Macro Selector	
lda      #$00                          ; 0x17296 $B286 A9 00                   ; A = 00
sta      $19                           ; 0x17298 $B288 85 19                   ; Position Code for Fairy Cursor
rts                                    ; 0x1729a $B28A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB28B                                                                          ;
lda      #$00                          ; 0x1729b $B28B A9 00                   ; A = 00
sta      $0726                         ; 0x1729d $B28D 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
lda      $F5                           ; 0x172a0 $B290 A5 F5                   ; Controller 1 buttons pressed
and      #$10                          ; 0x172a2 $B292 29 10                   ; keep bits ...x .... (Start button)
beq      LB303                         ; 0x172a4 $B294 F0 6D                   ;
lda      #$00                          ; 0x172a6 $B296 A9 00                   ; A = 00
sta      $073E                         ; 0x172a8 $B298 8D 3E 07                ;
sta      $073B                         ; 0x172ab $B29B 8D 3B 07                ;
lda      $19                           ; 0x172ae $B29E A5 19                   ; Position Code for Fairy Cursor
cmp      #$03                          ; 0x172b0 $B2A0 C9 03                   ;
bne      LB2AA                         ; 0x172b2 $B2A2 D0 06                   ;
lda      #$01                          ; 0x172b4 $B2A4 A9 01                   ; A = 01
sta      $0736                         ; 0x172b6 $B2A6 8D 36 07                ; Game Mode (01 = Register Your Name)
rts                                    ; 0x172b9 $B2A9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB2AA                                                                          ;
cmp      #$04                          ; 0x172ba $B2AA C9 04                   ;
bne      LB2B4                         ; 0x172bc $B2AC D0 06                   ;
lda      #$02                          ; 0x172be $B2AE A9 02                   ; A = 02
sta      $0736                         ; 0x172c0 $B2B0 8D 36 07                ; Game Mode (02 = Elimination Mode)
rts                                    ; 0x172c3 $B2B3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB2B4                                                                          ;
lda      $19                           ; 0x172c4 $B2B4 A5 19                   ; Position Code for Fairy Cursor
sta      $0772                         ; 0x172c6 $B2B6 8D 72 07                ; Current Game Slot
jsr      LB911                         ; 0x172c9 $B2B9 20 11 B9                ;
lda      $07A0                         ; 0x172cc $B2BC AD A0 07                ;; this is a new game+ file?, set it up during the save game load for newgame+ settings
cmp      #$01                          ; 0x172cf $B2BF C9 01                   ;
bne      LB2EE                         ; 0x172d1 $B2C1 D0 2B                   ;
lda      $0796                         ; 0x172d3 $B2C3 AD 96 07                ; Down/Up Techs
and      #$14                          ; 0x172d6 $B2C6 29 14                   ; keep bits ...x .x..
sta      L0000                         ; 0x172d8 $B2C8 85 00                   ;
function_reset_link_stats_to_beginning_values                                  ;
ldy      #$29                          ; 0x172da $B2CA A0 29                   ; Y = 29
LB2CC                                                                          ;
lda      bank5_Beginning_Values,y      ; 0x172dc $B2CC B9 E3 BA                ; Load Initial Player Stats
sta      $0777,y                       ; 0x172df $B2CF 99 77 07                ; AML, Magic, Items, etc.
dey                                    ; 0x172e2 $B2D2 88                      ;
cpy      #$0C                          ; 0x172e3 $B2D3 C0 0C                   ;
bcs      LB2CC                         ; 0x172e5 $B2D5 B0 F5                   ;
bank5_Load_Initial_Item_Presence_Bits                                          ;
ldy      #$DF                          ; 0x172e7 $B2D7 A0 DF                   ; Y = DF
LB2D9                                                                          ;
lda      bank5_Initial_Item_Presence_Bits_600_61F__West_Hyrule,y; 0x172e9 $B2D9 B9 15 BB;
sta      L0600,y                       ; 0x172ec $B2DC 99 00 06                ;
dey                                    ; 0x172ef $B2DF 88                      ;
cpy      #$FF                          ; 0x172f0 $B2E0 C0 FF                   ;
bne      LB2D9                         ; 0x172f2 $B2E2 D0 F5                   ;
lda      L0000                         ; 0x172f4 $B2E4 A5 00                   ;
sta      $0796                         ; 0x172f6 $B2E6 8D 96 07                ; Down/Up Techs
lda      #$02                          ; 0x172f9 $B2E9 A9 02                   ; A = 02
sta      $07A0                         ; 0x172fb $B2EB 8D A0 07                ;; this is a new game+ file?, set it up during the save game load for newgame+ settings
LB2EE                                                                          ;
ldx      #$0F                          ; 0x172fe $B2EE A2 0F                   ; X = 0F
lda      #$00                          ; 0x17300 $B2F0 A9 00                   ; A = 00
LB2F2                                                                          ;
sta      $E0,x                         ; 0x17302 $B2F2 95 E0                   ;
dex                                    ; 0x17304 $B2F4 CA                      ;
bpl      LB2F2                         ; 0x17305 $B2F5 10 FB                   ;
ldy      #$DA                          ; 0x17307 $B2F7 A0 DA                   ; Y = DA
LB2F9                                                                          ;
sta      $0700,y                       ; 0x17309 $B2F9 99 00 07                ;
iny                                    ; 0x1730c $B2FC C8                      ;
bne      LB2F9                         ; 0x1730d $B2FD D0 FA                   ;
inc      $076C                         ; 0x1730f $B2FF EE 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x17312 $B302 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB303                                                                          ;
lda      $F5                           ; 0x17313 $B303 A5 F5                   ; Controller 1 buttons pressed
;                                                                              ;intro screen	save game selection screen
;                                                                              ;it picks the screenY position based on $19
;                                                                              ;then jumps to $B384, which sets screenX position
and      #$20                          ; 0x17315 $B305 29 20                   ; keep bits ..x. .... (Select button)
beq      LB319                         ; 0x17317 $B307 F0 10                   ;
lda      #$04                          ; 0x17319 $B309 A9 04                   ; A = 04 (sound when moving Fairy cursor)
sta      $EB                           ; 0x1731b $B30B 85 EB                   ; Music
inc      $19                           ; 0x1731d $B30D E6 19                   ;only occurs during save game selection main screen; Position Code for Fairy Cursor
lda      $19                           ; 0x1731f $B30F A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$05                          ; 0x17321 $B311 C9 05                   ; if Cursor Position > 4, wrap around to 0
bne      LB319                         ; 0x17323 $B313 D0 04                   ;
lda      #$00                          ; 0x17325 $B315 A9 00                   ; A = 00
sta      $19                           ; 0x17327 $B317 85 19                   ; Position Code for Fairy Cursor
LB319                                                                          ;
lda      $19                           ; 0x17329 $B319 A5 19                   ; Position Code for Fairy Cursor
bne      LB32F                         ; 0x1732b $B31B D0 12                   ;
lda      $1A                           ; 0x1732d $B31D A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
and      #$01                          ; 0x1732f $B31F 29 01                   ; keep bits .... ...x
beq      LB328                         ; 0x17331 $B321 F0 05                   ;
inc      $19                           ; 0x17333 $B323 E6 19                   ; Position Code for Fairy Cursor
jmp      LB32F                         ; 0x17335 $B325 4C 2F B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB328                                                                          ;
lda      #$40                          ; 0x17338 $B328 A9 40                   ; A = 40 (Y Position for Game Slot 1)
sta      $1B                           ; 0x1733a $B32A 85 1B                   ; Y Position of Fairy cursor
jmp      LB384                         ; 0x1733c $B32C 4C 84 B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB32F                                                                          ;
lda      $19                           ; 0x1733f $B32F A5 19                   ; Position Code for Fairy Cursor
cmp      #$01                          ; 0x17341 $B331 C9 01                   ;
bne      LB347                         ; 0x17343 $B333 D0 12                   ;
lda      $1A                           ; 0x17345 $B335 A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
and      #$02                          ; 0x17347 $B337 29 02                   ; keep bits .... ..x.
beq      LB340                         ; 0x17349 $B339 F0 05                   ;
inc      $19                           ; 0x1734b $B33B E6 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
jmp      LB347                         ; 0x1734d $B33D 4C 47 B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB340                                                                          ;
lda      #$58                          ; 0x17350 $B340 A9 58                   ; A = 58 (Position for Game Slot 2)
sta      $1B                           ; 0x17352 $B342 85 1B                   ; Y Position of Fairy cursor
jmp      LB384                         ; 0x17354 $B344 4C 84 B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB347                                                                          ;
lda      $19                           ; 0x17357 $B347 A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$02                          ; 0x17359 $B349 C9 02                   ;
bne      LB35F                         ; 0x1735b $B34B D0 12                   ;
lda      $1A                           ; 0x1735d $B34D A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
and      #$04                          ; 0x1735f $B34F 29 04                   ; keep bits .... .x..
beq      LB358                         ; 0x17361 $B351 F0 05                   ;
inc      $19                           ; 0x17363 $B353 E6 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
jmp      LB35F                         ; 0x17365 $B355 4C 5F B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB358                                                                          ;
lda      #$70                          ; 0x17368 $B358 A9 70                   ; A = 70 (Position for Game Slot 3)
sta      $1B                           ; 0x1736a $B35A 85 1B                   ; Y Position of Fairy cursor
jmp      LB384                         ; 0x1736c $B35C 4C 84 B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB35F                                                                          ;
lda      $19                           ; 0x1736f $B35F A5 19                   ; Position Code for Fairy Cursor
cmp      #$03                          ; 0x17371 $B361 C9 03                   ;
bne      LB375                         ; 0x17373 $B363 D0 10                   ;
lda      $1A                           ; 0x17375 $B365 A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
bne      LB36E                         ; 0x17377 $B367 D0 05                   ;
inc      $19                           ; 0x17379 $B369 E6 19                   ; Position Code for Fairy Cursor
jmp      LB375                         ; 0x1737b $B36B 4C 75 B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB36E                                                                          ;
lda      #$90                          ; 0x1737e $B36E A9 90                   ; A = 90 (Position for Register Mode)
sta      $1B                           ; 0x17380 $B370 85 1B                   ; Y Position of Fairy cursor
jmp      LB384                         ; 0x17382 $B372 4C 84 B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB375                                                                          ;
lda      $1A                           ; 0x17385 $B375 A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
cmp      #$07                          ; 0x17387 $B377 C9 07                   ;
bne      LB380                         ; 0x17389 $B379 D0 05                   ;
dec      $19                           ; 0x1738b $B37B C6 19                   ; Position Code for Fairy Cursor
jmp      LB35F                         ; 0x1738d $B37D 4C 5F B3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB380                                                                          ;
lda      #$A8                          ; 0x17390 $B380 A9 A8                   ; A = A8 (Position for Elimination Mode)
sta      $1B                           ; 0x17392 $B382 85 1B                   ; Y Position of Fairy cursor
LB384                                                                          ;
lda      #$1C                          ; 0x17394 $B384 A9 1C                   ; A = 1C
sta       !$4D                         ; 0x17396 $B386 8D 4D 00                ; X Position of Fairy cursor
ldy      $1B                           ; 0x17399 $B389 A4 1B                   ; Y Position of Fairy cursor
jsr      LB574                         ; 0x1739b $B38B 20 74 B5                ;
lda      #$40                          ; 0x1739e $B38E A9 40                   ; A = 40 (Y Position of Link tiles)
ldy      #$28                          ; 0x173a0 $B390 A0 28                   ; Y = 28 (X Position of Link tiles)
jsr      LB596                         ; 0x173a2 $B392 20 96 B5                ;
jsr      LB5B5                         ; 0x173a5 $B395 20 B5 B5                ;
ldx      #$08                          ; 0x173a8 $B398 A2 08                   ; X = 08
lda      #$43                          ; 0x173aa $B39A A9 43                   ; A = 43
sta      L0000                         ; 0x173ac $B39C 85 00                   ;
LB39E                                                                          ;
lsr      $02                           ; 0x173ae $B39E 46 02                   ; check if Game was finished
bcc      LB3B6                         ; 0x173b0 $B3A0 90 14                   ; 1 bit for each Game Slot (Slot 3 = bit 0)
lda      L0000                         ; 0x173b2 $B3A2 A5 00                   ;
sta      $0218,x                       ; 0x173b4 $B3A4 9D 18 02                ;
lda      #$D2                          ; 0x173b7 $B3A7 A9 D2                   ; A = D2 (Triforce Tile Code)
sta      $0219,x                       ; 0x173b9 $B3A9 9D 19 02                ;
lda      #$01                          ; 0x173bc $B3AC A9 01                   ; A = 01 (Triforce Attributes Code)
sta      $021A,x                       ; 0x173be $B3AE 9D 1A 02                ;
lda      #$30                          ; 0x173c1 $B3B1 A9 30                   ; A = 30
sta      $021B,x                       ; 0x173c3 $B3B3 9D 1B 02                ;
LB3B6                                                                          ;
lda      L0000                         ; 0x173c6 $B3B6 A5 00                   ;
clc                                    ; 0x173c8 $B3B8 18                      ;
adc      #$18                          ; 0x173c9 $B3B9 69 18                   ;
sta      L0000                         ; 0x173cb $B3BB 85 00                   ;
dex                                    ; 0x173cd $B3BD CA                      ;
dex                                    ; 0x173ce $B3BE CA                      ;
dex                                    ; 0x173cf $B3BF CA                      ;
dex                                    ; 0x173d0 $B3C0 CA                      ;
bpl      LB39E                         ; 0x173d1 $B3C1 10 DB                   ;
lda      #$21                          ; 0x173d3 $B3C3 A9 21                   ; A = 21
sta      L0000                         ; 0x173d5 $B3C5 85 00                   ;
lda      #$07                          ; 0x173d7 $B3C7 A9 07                   ; A = 07
sta      $01                           ; 0x173d9 $B3C9 85 01                   ;
jsr      bank5_Display_Saved_Games_Names; 0x173db $B3CB 20 29 B5               ;
rts                                    ; 0x173de $B3CE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $073B                         ; 0x173df $B3CF AD 3B 07                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x173e2 $B3D2 20 85 D3;
bank5_pointer_table4                                                           ;
.word    LB412                         ; 0x173e5 $B3D5 12 B4                   ;
.word    bank5_code22                  ; 0x173e7 $B3D7 4E B2                   ;
.word    LB678                         ; 0x173e9 $B3D9 78 B6                   ;
.word    bank5_code23                  ; 0x173eb $B3DB DF B3                   ;
.word    LB3F4                         ; 0x173ed $B3DD F4 B3                   ;
; ---------------------------------------------------------------------------- ;
bank5_code23                                                                   ;
ldx      #$02                          ; 0x173ef $B3DF A2 02                   ; X = 02
LB3E1                                                                          ;
txa                                    ; 0x173f1 $B3E1 8A                      ;
pha                                    ; 0x173f2 $B3E2 48                      ;
jsr      LBA18                         ; 0x173f3 $B3E3 20 18 BA                ;
pla                                    ; 0x173f6 $B3E6 68                      ;
tax                                    ; 0x173f7 $B3E7 AA                      ;
dex                                    ; 0x173f8 $B3E8 CA                      ;
bpl      LB3E1                         ; 0x173f9 $B3E9 10 F6                   ;
lda      #$00                          ; 0x173fb $B3EB A9 00                   ; A = 00
sta      $4015                         ; 0x173fd $B3ED 8D 15 40                ;; Sound Channel Switch
inc      $073B                         ; 0x17400 $B3F0 EE 3B 07                ;
rts                                    ; 0x17403 $B3F3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB3F4                                                                          ;
lda      #$00                          ; 0x17404 $B3F4 A9 00                   ; A = 00
sta      $0736                         ; 0x17406 $B3F6 8D 36 07                ;; Game Mode ; screen intro type
rts                                    ; 0x17409 $B3F9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $073B                         ; 0x1740a $B3FA AD 3B 07                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1740d $B3FD 20 85 D3;
bank5_pointer_table5                                                           ;
.word    LB412                         ; 0x17410 $B400 12 B4                   ;
.word    bank5_code22                  ; 0x17412 $B402 4E B2                   ;
.word    bank5_code25                  ; 0x17414 $B404 25 B4                   ;
.word    bank5_code23                  ; 0x17416 $B406 DF B3                   ;
.word    LB3F4                         ; 0x17418 $B408 F4 B3                   ;
; ---------------------------------------------------------------------------- ;
bank5_code24                                                                   ;
ldx      #$02                          ; 0x1741a $B40A A2 02                   ; X = 02
LB40C                                                                          ;
jsr      LBA40                         ; 0x1741c $B40C 20 40 BA                ;
dex                                    ; 0x1741f $B40F CA                      ;
bpl      LB40C                         ; 0x17420 $B410 10 FA                   ;
LB412                                                                          ;
inc      $0726                         ; 0x17422 $B412 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      bank5__073B__plus__equal__1__and_RTS; 0x17425 $B415 4C 1D B4          ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$00                          ; 0x17428 $B418 A9 00                   ; A = 00
sta      $0726                         ; 0x1742a $B41A 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
bank5__073B__plus__equal__1__and_RTS                                           ;
inc      $073B                         ; 0x1742d $B41D EE 3B 07                ;
rts                                    ; 0x17430 $B420 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table12                                                                  ;
.byt    $30,$48,$60,$78                ; 0x17431 $B421 30 48 60 78             ;
; ---------------------------------------------------------------------------- ;
bank5_code25                                                                   ;
ldy      $073E                         ; 0x17435 $B425 AC 3E 07                ;
bne      LB433                         ; 0x17438 $B428 D0 09                   ;
lda      #$06                          ; 0x1743a $B42A A9 06                   ; A = 06
sta      $0725                         ; 0x1743c $B42C 8D 25 07                ;; PPU Macro Selector	
inc      $073E                         ; 0x1743f $B42F EE 3E 07                ;
rts                                    ; 0x17442 $B432 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB433                                                                          ;
dey                                    ; 0x17443 $B433 88                      ;
bne      LB443                         ; 0x17444 $B434 D0 0D                   ;
lda      #$07                          ; 0x17446 $B436 A9 07                   ; A = 07
sta      $0725                         ; 0x17448 $B438 8D 25 07                ;; PPU Macro Selector	
inc      $073E                         ; 0x1744b $B43B EE 3E 07                ;
lda      #$00                          ; 0x1744e $B43E A9 00                   ; A = 00
sta      $19                           ; 0x17450 $B440 85 19                   ; Position Code for Fairy Cursor
rts                                    ; 0x17452 $B442 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB443                                                                          ;
lda      #$00                          ; 0x17453 $B443 A9 00                   ; A = 00
sta      $0726                         ; 0x17455 $B445 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
lda      $F5                           ; 0x17458 $B448 A5 F5                   ; Controller 1 buttons pressed
and      #$10                          ; 0x1745a $B44A 29 10                   ; keep bits ...x .... (Start button)
beq      LB4A6                         ; 0x1745c $B44C F0 58                   ;
lda      $19                           ; 0x1745e $B44E A5 19                   ; Position Code for Fairy Cursor
cmp      #$03                          ; 0x17460 $B450 C9 03                   ;
bne      bank5_elimination_mode        ; 0x17462 $B452 D0 0E                   ;
lda      #$00                          ; 0x17464 $B454 A9 00                   ; A = 00
sta      $073E                         ; 0x17466 $B456 8D 3E 07                ;
sta      $073B                         ; 0x17469 $B459 8D 3B 07                ;
lda      #$01                          ; 0x1746c $B45C A9 01                   ; A = 01
sta      $0736                         ; 0x1746e $B45E 8D 36 07                ;; Game Mode ; screen intro type
rts                                    ; 0x17471 $B461 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_elimination_mode                                                         ;
lda      $19                           ; 0x17472 $B462 A5 19                   ; Position Code for Fairy Cursor
asl                                    ; 0x17474 $B464 0A                      ;
tax                                    ; 0x17475 $B465 AA                      ;
lda      bank5_pointer_table7+$0C,x    ; 0x17476 $B466 BD D1 BA                ;
sta      L0000                         ; 0x17479 $B469 85 00                   ;
lda      bank5_pointer_table7+$0C+$01,x; 0x1747b $B46B BD D2 BA                ;
sta      $01                           ; 0x1747e $B46E 85 01                   ;
ldy      #$31                          ; 0x17480 $B470 A0 31                   ; Y = 31
LB472                                                                          ;
lda      bank5_Beginning_Values,y      ; 0x17482 $B472 B9 E3 BA                ; Table for Beginning Values (17AE3)
sta      (L0000),y                     ; 0x17485 $B475 91 00                   ;
dey                                    ; 0x17487 $B477 88                      ;
bpl      LB472                         ; 0x17488 $B478 10 F8                   ;
lda      #$08                          ; 0x1748a $B47A A9 08                   ; A = 08 (sound of Deleted Game Slot)
sta      $EB                           ; 0x1748c $B47C 85 EB                   ; Music
iny                                    ; 0x1748e $B47E C8                      ;
lda      bank5_Pointer_for_Item_Presence_Bits_Table; 0x1748f $B47F AD 5E B9    ;
sta      L0000                         ; 0x17492 $B482 85 00                   ;
lda      bank5_Pointer_for_Item_Presence_Bits_Table+$01; 0x17494 $B484 AD 5F B9;
sta      $01                           ; 0x17497 $B487 85 01                   ;
lda      bank5_pointer_table7+$0C+$01+$05,x; 0x17499 $B489 BD D7 BA            ;
sta      $02                           ; 0x1749c $B48C 85 02                   ;
lda      bank5_pointer_table7+$0C+$01+$05+$01,x; 0x1749e $B48E BD D8 BA        ;
sta      $03                           ; 0x174a1 $B491 85 03                   ;
LB493                                                                          ;
lda      (L0000),y                     ; 0x174a3 $B493 B1 00                   ;
sta      ($02),y                       ; 0x174a5 $B495 91 02                   ;
jsr      LBAB8                         ; 0x174a7 $B497 20 B8 BA                ;
lda      L0000                         ; 0x174aa $B49A A5 00                   ;
cmp      #$F5                          ; 0x174ac $B49C C9 F5                   ;
bne      LB493                         ; 0x174ae $B49E D0 F3                   ;
lda      $01                           ; 0x174b0 $B4A0 A5 01                   ;
cmp      #$BB                          ; 0x174b2 $B4A2 C9 BB                   ;
bne      LB493                         ; 0x174b4 $B4A4 D0 ED                   ;
LB4A6                                                                          ;
lda      $F5                           ; 0x174b6 $B4A6 A5 F5                   ; Controller 1 buttons pressed
and      #$20                          ; 0x174b8 $B4A8 29 20                   ; keep bits ..x. .... (Select button)
beq      LB4BC                         ; 0x174ba $B4AA F0 10                   ;
lda      #$04                          ; 0x174bc $B4AC A9 04                   ; A = 04
sta      $EB                           ; 0x174be $B4AE 85 EB                   ; Music
inc      $19                           ; 0x174c0 $B4B0 E6 19                   ; Position Code for Fairy Cursor
lda      $19                           ; 0x174c2 $B4B2 A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$04                          ; 0x174c4 $B4B4 C9 04                   ;
bne      LB4BC                         ; 0x174c6 $B4B6 D0 04                   ;
lda      #$00                          ; 0x174c8 $B4B8 A9 00                   ; A = 00
sta      $19                           ; 0x174ca $B4BA 85 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
LB4BC                                                                          ;
jsr      bank5_code26                  ; 0x174cc $B4BC 20 02 B5                ;
lda      $19                           ; 0x174cf $B4BF A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$03                          ; 0x174d1 $B4C1 C9 03                   ;
beq      LB4D5                         ; 0x174d3 $B4C3 F0 10                   ;
asl                                    ; 0x174d5 $B4C5 0A                      ;
bne      LB4CB                         ; 0x174d6 $B4C6 D0 03                   ;
clc                                    ; 0x174d8 $B4C8 18                      ;
adc      #$01                          ; 0x174d9 $B4C9 69 01                   ;
LB4CB                                                                          ;
and      $1A                           ; 0x174db $B4CB 25 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
beq      LB4D5                         ; 0x174dd $B4CD F0 06                   ;
inc      $19                           ; 0x174df $B4CF E6 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
asl                                    ; 0x174e1 $B4D1 0A                      ;
jmp      LB4CB                         ; 0x174e2 $B4D2 4C CB B4                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB4D5                                                                          ;
ldx      $19                           ; 0x174e5 $B4D5 A6 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
lda      bank5_table12,x               ; 0x174e7 $B4D7 BD 21 B4                ;
sta      $1B                           ; 0x174ea $B4DA 85 1B                   ;
lda      #$4C                          ; 0x174ec $B4DC A9 4C                   ; A = 4C
sta       !$4D                         ; 0x174ee $B4DE 8D 4D 00                ;
ldy      $1B                           ; 0x174f1 $B4E1 A4 1B                   ;
dey                                    ; 0x174f3 $B4E3 88                      ;
dey                                    ; 0x174f4 $B4E4 88                      ;
dey                                    ; 0x174f5 $B4E5 88                      ;
dey                                    ; 0x174f6 $B4E6 88                      ;
jsr      LB574                         ; 0x174f7 $B4E7 20 74 B5                ;
lda      #$2C                          ; 0x174fa $B4EA A9 2C                   ; A = 2C
ldy      #$58                          ; 0x174fc $B4EC A0 58                   ; Y = 58
jsr      LB596                         ; 0x174fe $B4EE 20 96 B5                ;
lda      #$20                          ; 0x17501 $B4F1 A9 20                   ; A = 20
sta      L0000                         ; 0x17503 $B4F3 85 00                   ;
lda      #$CD                          ; 0x17505 $B4F5 A9 CD                   ; A = CD
sta      $01                           ; 0x17507 $B4F7 85 01                   ;
jsr      bank5_Display_Saved_Games_Names; 0x17509 $B4F9 20 29 B5               ;
rts                                    ; 0x1750c $B4FC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_table13                                                                  ;
.byt    $01,$01,$02,$02,$04            ; 0x1750d $B4FD 01 01 02 02 04          ;
; ---------------------------------------------------------------------------- ;
bank5_code26                                                                   ;
lda      #$00                          ; 0x17512 $B502 A9 00                   ; A = 00
sta      $1A                           ; 0x17514 $B504 85 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
ldx      #$04                          ; 0x17516 $B506 A2 04                   ; X = 04
LB508                                                                          ;
lda      LB23C,x                       ; 0x17518 $B508 BD 3C B2                ;
sta      L0000                         ; 0x1751b $B50B 85 00                   ;
lda      LB23D,x                       ; 0x1751d $B50D BD 3D B2                ;
sta      $01                           ; 0x17520 $B510 85 01                   ;
ldy      #$07                          ; 0x17522 $B512 A0 07                   ; Y = 07
LB514                                                                          ;
lda      (L0000),y                     ; 0x17524 $B514 B1 00                   ;
cmp      #$F4                          ; 0x17526 $B516 C9 F4                   ;
bne      LB524                         ; 0x17528 $B518 D0 0A                   ;
dey                                    ; 0x1752a $B51A 88                      ;
bpl      LB514                         ; 0x1752b $B51B 10 F7                   ;
lda      bank5_table13,x               ; 0x1752d $B51D BD FD B4                ;
ora      $1A                           ; 0x17530 $B520 05 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
sta      $1A                           ; 0x17532 $B522 85 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
LB524                                                                          ;
dex                                    ; 0x17534 $B524 CA                      ;
dex                                    ; 0x17535 $B525 CA                      ;
bpl      LB508                         ; 0x17536 $B526 10 E0                   ;
rts                                    ; 0x17538 $B528 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Display_Saved_Games_Names                                                ;
lda      #$00                          ; 0x17539 $B529 A9 00                   ; A = 00
ldx      #$00                          ; 0x1753b $B52B A2 00                   ; X = 00
LB52D                                                                          ;
pha                                    ; 0x1753d $B52D 48                      ;
asl                                    ; 0x1753e $B52E 0A                      ;
tay                                    ; 0x1753f $B52F A8                      ;
lda      LB23C,y                       ; 0x17540 $B530 B9 3C B2                ;
sta      $02                           ; 0x17543 $B533 85 02                   ;
lda      LB23D,y                       ; 0x17545 $B535 B9 3D B2                ;
sta      $03                           ; 0x17548 $B538 85 03                   ;
lda      L0000                         ; 0x1754a $B53A A5 00                   ;
sta      L0302,x                       ; 0x1754c $B53C 9D 02 03                ;
lda      $01                           ; 0x1754f $B53F A5 01                   ;
sta      $0303,x                       ; 0x17551 $B541 9D 03 03                ;
lda      #$08                          ; 0x17554 $B544 A9 08                   ; A = 08
sta      $0304,x                       ; 0x17556 $B546 9D 04 03                ;
ldy      #$00                          ; 0x17559 $B549 A0 00                   ; Y = 00
LB54B                                                                          ;
lda      ($02),y                       ; 0x1755b $B54B B1 02                   ;
sta      $0305,x                       ; 0x1755d $B54D 9D 05 03                ;
inx                                    ; 0x17560 $B550 E8                      ;
iny                                    ; 0x17561 $B551 C8                      ;
cpy      #$08                          ; 0x17562 $B552 C0 08                   ;
bne      LB54B                         ; 0x17564 $B554 D0 F5                   ;
lda      $01                           ; 0x17566 $B556 A5 01                   ;
clc                                    ; 0x17568 $B558 18                      ;
adc      #$60                          ; 0x17569 $B559 69 60                   ;
sta      $01                           ; 0x1756b $B55B 85 01                   ;
lda      L0000                         ; 0x1756d $B55D A5 00                   ;
adc      #$00                          ; 0x1756f $B55F 69 00                   ;
sta      L0000                         ; 0x17571 $B561 85 00                   ;
pla                                    ; 0x17573 $B563 68                      ;
clc                                    ; 0x17574 $B564 18                      ;
adc      #$01                          ; 0x17575 $B565 69 01                   ;
inx                                    ; 0x17577 $B567 E8                      ;
inx                                    ; 0x17578 $B568 E8                      ;
inx                                    ; 0x17579 $B569 E8                      ;
cpx      #$21                          ; 0x1757a $B56A E0 21                   ;
bne      LB52D                         ; 0x1757c $B56C D0 BF                   ;
lda      #$FF                          ; 0x1757e $B56E A9 FF                   ; A = FF
sta      L0302,x                       ; 0x17580 $B570 9D 02 03                ;
rts                                    ; 0x17583 $B573 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB574                                                                          ;
inc      $1D                           ; 0x17584 $B574 E6 1D                   ;
ldx      #$68                          ; 0x17586 $B576 A2 68                   ; X = 68 (Fairy Cursor Tile Mapping)
lda      $1D                           ; 0x17588 $B578 A5 1D                   ;
and      #$04                          ; 0x1758a $B57A 29 04                   ; keep bits .... .x..
beq      LB580                         ; 0x1758c $B57C F0 02                   ;
inx                                    ; 0x1758e $B57E E8                      ;
inx                                    ; 0x1758f $B57F E8                      ;
LB580                                                                          ;
stx      $1C                           ; 0x17590 $B580 86 1C                   ;
sty      $0200                         ; 0x17592 $B582 8C 00 02                ;; Animation frame for Link's OW sprite (part 1)
lda      #$01                          ; 0x17595 $B585 A9 01                   ; A = 01
sta      $0202                         ; 0x17597 $B587 8D 02 02                ;
lda       !$4D                         ; 0x1759a $B58A AD 4D 00                ;
sta      $0203                         ; 0x1759d $B58D 8D 03 02                ;
lda      $1C                           ; 0x175a0 $B590 A5 1C                   ;
sta      $0201                         ; 0x175a2 $B592 8D 01 02                ;; Animation frame for Link's OW sprite (part 2)
rts                                    ; 0x175a5 $B595 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB596                                                                          ;
ldx      #$08                          ; 0x175a6 $B596 A2 08                   ; X = 08
LB598                                                                          ;
pha                                    ; 0x175a8 $B598 48                      ;
sta      $020C,x                       ; 0x175a9 $B599 9D 0C 02                ;
tya                                    ; 0x175ac $B59C 98                      ;
sta      $020F,x                       ; 0x175ad $B59D 9D 0F 02                ;
lda      #$D0                          ; 0x175b0 $B5A0 A9 D0                   ; A = D0 (Link Tile Code)
sta      $020D,x                       ; 0x175b2 $B5A2 9D 0D 02                ;
lda      #$00                          ; 0x175b5 $B5A5 A9 00                   ; A = 00 (Link Palette Code)
sta      $020E,x                       ; 0x175b7 $B5A7 9D 0E 02                ;
pla                                    ; 0x175ba $B5AA 68                      ;
clc                                    ; 0x175bb $B5AB 18                      ;
adc      #$18                          ; 0x175bc $B5AC 69 18                   ;
dex                                    ; 0x175be $B5AE CA                      ;
dex                                    ; 0x175bf $B5AF CA                      ;
dex                                    ; 0x175c0 $B5B0 CA                      ;
dex                                    ; 0x175c1 $B5B1 CA                      ;
bpl      LB598                         ; 0x175c2 $B5B2 10 E4                   ;
rts                                    ; 0x175c4 $B5B4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB5B5                                                                          ;
lda      #$00                          ; 0x175c5 $B5B5 A9 00                   ; A = 00
sta      $02                           ; 0x175c7 $B5B7 85 02                   ;
ldy      #$29                          ; 0x175c9 $B5B9 A0 29                   ; Y = 29
ldx      #$04                          ; 0x175cb $B5BB A2 04                   ; X = 04
LB5BD                                                                          ;
lda      bank5_pointer_table7,x        ; 0x175cd $B5BD BD C5 BA                ;
sta      L0000                         ; 0x175d0 $B5C0 85 00                   ;
lda      bank5_pointer_table7+$01,x    ; 0x175d2 $B5C2 BD C6 BA                ;
sta      $01                           ; 0x175d5 $B5C5 85 01                   ;
asl      $02                           ; 0x175d7 $B5C7 06 02                   ;
lda      (L0000),y                     ; 0x175d9 $B5C9 B1 00                   ;
beq      LB5D3                         ; 0x175db $B5CB F0 06                   ;
lda      $02                           ; 0x175dd $B5CD A5 02                   ;
ora      #$01                          ; 0x175df $B5CF 09 01                   ; set  bits .... ...x
sta      $02                           ; 0x175e1 $B5D1 85 02                   ;
LB5D3                                                                          ;
dex                                    ; 0x175e3 $B5D3 CA                      ;
dex                                    ; 0x175e4 $B5D4 CA                      ;
bpl      LB5BD                         ; 0x175e5 $B5D5 10 E6                   ;
rts                                    ; 0x175e7 $B5D7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Related_to_AttackMagicLife_Levels__and_convert_numbers_to_Tile_Mappings____Load_Attack_Magic_Life_Levels ;
ldx      #$00                          ; 0x175e8 $B5D8 A2 00                   ; X = 00
ldy      #$00                          ; 0x175ea $B5DA A0 00                   ; Y = 00
jsr      LB5EA                         ; 0x175ec $B5DC 20 EA B5                ;
ldx      #$32                          ; 0x175ef $B5DF A2 32                   ; X = 32
ldy      #$0E                          ; 0x175f1 $B5E1 A0 0E                   ; Y = 0E
jsr      LB5EA                         ; 0x175f3 $B5E3 20 EA B5                ;
ldx      #$64                          ; 0x175f6 $B5E6 A2 64                   ; X = 64
ldy      #$1C                          ; 0x175f8 $B5E8 A0 1C                   ; Y = 1C
LB5EA                                                                          ;
lda      L6002,x                       ; 0x175fa $B5EA BD 02 60                ;
ora      #$D0                          ; 0x175fd $B5ED 09 D0                   ; set  bits xx.x ....
sta      $7F3A,y                       ; 0x175ff $B5EF 99 3A 7F                ;
lda      $6003,x                       ; 0x17602 $B5F2 BD 03 60                ;
ora      #$D0                          ; 0x17605 $B5F5 09 D0                   ; set  bits xx.x ....
sta      $7F3E,y                       ; 0x17607 $B5F7 99 3E 7F                ;
lda      $6004,x                       ; 0x1760a $B5FA BD 04 60                ;
ora      #$D0                          ; 0x1760d $B5FD 09 D0                   ; set  bits xx.x ....
sta      $7F42,y                       ; 0x1760f $B5FF 99 42 7F                ;
rts                                    ; 0x17612 $B602 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_Load_Number_of_Saves                                                     ;
ldx      #$28                          ; 0x17613 $B603 A2 28                   ; X = 28
lda      #$00                          ; 0x17615 $B605 A9 00                   ; A = 00
sta      $02                           ; 0x17617 $B607 85 02                   ;
jsr      LB623                         ; 0x17619 $B609 20 23 B6                ;
lda      #$28                          ; 0x1761c $B60C A9 28                   ; A = 28
clc                                    ; 0x1761e $B60E 18                      ;
adc      #$32                          ; 0x1761f $B60F 69 32                   ;
tax                                    ; 0x17621 $B611 AA                      ;
lda      #$06                          ; 0x17622 $B612 A9 06                   ; A = 06
sta      $02                           ; 0x17624 $B614 85 02                   ;
jsr      LB623                         ; 0x17626 $B616 20 23 B6                ;
lda      #$28                          ; 0x17629 $B619 A9 28                   ; A = 28
clc                                    ; 0x1762b $B61B 18                      ;
adc      #$64                          ; 0x1762c $B61C 69 64                   ;
tax                                    ; 0x1762e $B61E AA                      ;
lda      #$0C                          ; 0x1762f $B61F A9 0C                   ; A = 0C
sta      $02                           ; 0x17631 $B621 85 02                   ;
LB623                                                                          ;
lda      #$00                          ; 0x17633 $B623 A9 00                   ; A = 00
sta      L0000                         ; 0x17635 $B625 85 00                   ;
lda      L6002,x                       ; 0x17637 $B627 BD 02 60                ;
jsr      LB8D2                         ; 0x1763a $B62A 20 D2 B8                ;
ldx      $02                           ; 0x1763d $B62D A6 02                   ;
sta      $7F79,x                       ; 0x1763f $B62F 9D 79 7F                ;
tya                                    ; 0x17642 $B632 98                      ;
sta      $7F78,x                       ; 0x17643 $B633 9D 78 7F                ;
lda      L0000                         ; 0x17646 $B636 A5 00                   ;
sta      $7F77,x                       ; 0x17648 $B638 9D 77 7F                ;
rts                                    ; 0x1764b $B63B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB63C                                                                          ;
jsr      bank5_code26                  ; 0x1764c $B63C 20 02 B5                ;
lda      $1A                           ; 0x1764f $B63F A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
and      #$01                          ; 0x17651 $B641 29 01                   ; keep bits .... ...x
beq      LB64C                         ; 0x17653 $B643 F0 07                   ;
ldx      #$00                          ; 0x17655 $B645 A2 00                   ; X = 00
ldy      #$00                          ; 0x17657 $B647 A0 00                   ; Y = 00
jsr      LB663                         ; 0x17659 $B649 20 63 B6                ;
LB64C                                                                          ;
lda      $1A                           ; 0x1765c $B64C A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
and      #$02                          ; 0x1765e $B64E 29 02                   ; keep bits .... ..x.
beq      LB659                         ; 0x17660 $B650 F0 07                   ;
ldx      #$0E                          ; 0x17662 $B652 A2 0E                   ; X = 0E
ldy      #$06                          ; 0x17664 $B654 A0 06                   ; Y = 06
jsr      LB663                         ; 0x17666 $B656 20 63 B6                ;
LB659                                                                          ;
lda      $1A                           ; 0x17669 $B659 A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
and      #$04                          ; 0x1766b $B65B 29 04                   ; keep bits .... .x..
beq      LB677                         ; 0x1766d $B65D F0 18                   ;
ldx      #$1C                          ; 0x1766f $B65F A2 1C                   ; X = 1C
ldy      #$0C                          ; 0x17671 $B661 A0 0C                   ; Y = 0C
LB663                                                                          ;
lda      #$F4                          ; 0x17673 $B663 A9 F4                   ; A = F4
sta      $7F3A,x                       ; 0x17675 $B665 9D 3A 7F                ;
sta      $7F3E,x                       ; 0x17678 $B668 9D 3E 7F                ;
sta      $7F42,x                       ; 0x1767b $B66B 9D 42 7F                ;
sta      $7F77,y                       ; 0x1767e $B66E 99 77 7F                ;
sta      $7F78,y                       ; 0x17681 $B671 99 78 7F                ;
sta      $7F79,y                       ; 0x17684 $B674 99 79 7F                ;
LB677                                                                          ;
rts                                    ; 0x17687 $B677 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB678                                                                          ;
ldy      $073E                         ; 0x17688 $B678 AC 3E 07                ;
bne      LB692                         ; 0x1768b $B67B D0 15                   ;
lda      #$06                          ; 0x1768d $B67D A9 06                   ; A = 06
sta      $0725                         ; 0x1768f $B67F 8D 25 07                ;; PPU Macro Selector	
inc      $073E                         ; 0x17692 $B682 EE 3E 07                ;
lda      #$00                          ; 0x17695 $B685 A9 00                   ; A = 00
sta      $19                           ; 0x17697 $B687 85 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
sta      $1E                           ; 0x17699 $B689 85 1E                   ;; Cursor position in Name Input Screen
sta      $1F                           ; 0x1769b $B68B 85 1F                   ;
sta      $20                           ; 0x1769d $B68D 85 20                   ;
jmp      bank5_code26                  ; 0x1769f $B68F 4C 02 B5                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB692                                                                          ;
lda      #$00                          ; 0x176a2 $B692 A9 00                   ; A = 00
sta      $0726                         ; 0x176a4 $B694 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
lda      $F5                           ; 0x176a7 $B697 A5 F5                   ; Controller 1 buttons pressed
and      #$10                          ; 0x176a9 $B699 29 10                   ; keep bits ...x .... (Start button)
beq      LB6AC                         ; 0x176ab $B69B F0 0F                   ;
lda      $19                           ; 0x176ad $B69D A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$03                          ; 0x176af $B69F C9 03                   ;
bne      LB6AC                         ; 0x176b1 $B6A1 D0 09                   ;
lda      #$00                          ; 0x176b3 $B6A3 A9 00                   ; A = 00
sta      $073E                         ; 0x176b5 $B6A5 8D 3E 07                ;
inc      $073B                         ; 0x176b8 $B6A8 EE 3B 07                ;
rts                                    ; 0x176bb $B6AB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB6AC                                                                          ;
;register your name, increase fairy position when you press select button      ;
lda      $F5                           ; 0x176bc $B6AC A5 F5                   ; Controller 1 buttons pressed
and      #$20                          ; 0x176be $B6AE 29 20                   ; keep bits ..x. .... (Select button)
beq      LB6C6                         ; 0x176c0 $B6B0 F0 14                   ;
lda      #$04                          ; 0x176c2 $B6B2 A9 04                   ; A = 04
sta      $EB                           ; 0x176c4 $B6B4 85 EB                   ; Music
inc      $19                           ; 0x176c6 $B6B6 E6 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
lda      $19                           ; 0x176c8 $B6B8 A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$04                          ; 0x176ca $B6BA C9 04                   ;
bne      LB6C2                         ; 0x176cc $B6BC D0 04                   ;
lda      #$00                          ; 0x176ce $B6BE A9 00                   ; A = 00
sta      $19                           ; 0x176d0 $B6C0 85 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
LB6C2                                                                          ;
lda      #$00                          ; 0x176d2 $B6C2 A9 00                   ; A = 00
sta      $1E                           ; 0x176d4 $B6C4 85 1E                   ;; Cursor position in Name Input Screen
LB6C6                                                                          ;
lda      $1A                           ; 0x176d6 $B6C6 A5 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
ora      #$08                          ; 0x176d8 $B6C8 09 08                   ; set  bits .... x...
sta      $1A                           ; 0x176da $B6CA 85 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
lda      $19                           ; 0x176dc $B6CC A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$03                          ; 0x176de $B6CE C9 03                   ;
beq      LB6E4                         ; 0x176e0 $B6D0 F0 12                   ;
asl                                    ; 0x176e2 $B6D2 0A                      ;
bne      LB6D8                         ; 0x176e3 $B6D3 D0 03                   ;
clc                                    ; 0x176e5 $B6D5 18                      ;
adc      #$01                          ; 0x176e6 $B6D6 69 01                   ;
LB6D8                                                                          ;
tay                                    ; 0x176e8 $B6D8 A8                      ;
and      $1A                           ; 0x176e9 $B6D9 25 1A                   ;;draw sprite ?	1a,1b,1c,1d,1e,1f; Saved Game Presence in Slot (1 bit per slot) ?
bne      LB6E4                         ; 0x176eb $B6DB D0 07                   ;check if save slot at fairy cursor has a save, otherwise skip pass this entry
;increment fairy position if the first position already has been registered with a name;
inc      $19                           ; 0x176ed $B6DD E6 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
tya                                    ; 0x176ef $B6DF 98                      ;
asl                                    ; 0x176f0 $B6E0 0A                      ;
jmp      LB6D8                         ; 0x176f1 $B6E1 4C D8 B6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB6E4                                                                          ;
ldx      $19                           ; 0x176f4 $B6E4 A6 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
lda      bank5_table12,x               ; 0x176f6 $B6E6 BD 21 B4                ;
sta      $1B                           ; 0x176f9 $B6E9 85 1B                   ;
lda      #$4C                          ; 0x176fb $B6EB A9 4C                   ; A = 4C
sta       !$4D                         ; 0x176fd $B6ED 8D 4D 00                ;
ldy      $1B                           ; 0x17700 $B6F0 A4 1B                   ;
dey                                    ; 0x17702 $B6F2 88                      ;
dey                                    ; 0x17703 $B6F3 88                      ;
dey                                    ; 0x17704 $B6F4 88                      ;
dey                                    ; 0x17705 $B6F5 88                      ;
jsr      LB574                         ; 0x17706 $B6F6 20 74 B5                ;
lda      #$2C                          ; 0x17709 $B6F9 A9 2C                   ; A = 2C
ldy      #$58                          ; 0x1770b $B6FB A0 58                   ; Y = 58
jsr      LB596                         ; 0x1770d $B6FD 20 96 B5                ;
lda      $1B                           ; 0x17710 $B700 A5 1B                   ;
cmp      #$78                          ; 0x17712 $B702 C9 78                   ;
bne      LB711                         ; 0x17714 $B704 D0 0B                   ;
lda      #$F8                          ; 0x17716 $B706 A9 F8                   ; A = F8
sta      $0204                         ; 0x17718 $B708 8D 04 02                ;
sta      $0208                         ; 0x1771b $B70B 8D 08 02                ;
jmp      LB8C4                         ; 0x1771e $B70E 4C C4 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB711                                                                          ;
lda      $F5                           ; 0x17721 $B711 A5 F5                   ; Controller 1 buttons pressed
and      #$C0                          ; 0x17723 $B713 29 C0                   ; keep bits xx.. .... (A/B buttons)
beq      LB727                         ; 0x17725 $B715 F0 10                   ;
lda      #$01                          ; 0x17727 $B717 A9 01                   ; A = 01
sta      $EB                           ; 0x17729 $B719 85 EB                   ; Music
inc      $1E                           ; 0x1772b $B71B E6 1E                   ;; Cursor position in Name Input Screen
lda      $1E                           ; 0x1772d $B71D A5 1E                   ;; Cursor position in Name Input Screen
cmp      #$08                          ; 0x1772f $B71F C9 08                   ;
bne      LB727                         ; 0x17731 $B721 D0 04                   ;
lda      #$00                          ; 0x17733 $B723 A9 00                   ; A = 00
sta      $1E                           ; 0x17735 $B725 85 1E                   ;; Cursor position in Name Input Screen
LB727                                                                          ;
lda      #$68                          ; 0x17737 $B727 A9 68                   ; A = 68
ldx      $1E                           ; 0x17739 $B729 A6 1E                   ;; Cursor position in Name Input Screen
LB72B                                                                          ;
beq      LB734                         ; 0x1773b $B72B F0 07                   ;
clc                                    ; 0x1773d $B72D 18                      ;
adc      #$08                          ; 0x1773e $B72E 69 08                   ;
dex                                    ; 0x17740 $B730 CA                      ;
jmp      LB72B                         ; 0x17741 $B731 4C 2B B7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB734                                                                          ;
sta      $03D6                         ; 0x17744 $B734 8D D6 03                ;
lda      $1B                           ; 0x17747 $B737 A5 1B                   ;
cmp      #$78                          ; 0x17749 $B739 C9 78                   ;
bne      LB73F                         ; 0x1774b $B73B D0 02                   ;
lda      #$F8                          ; 0x1774d $B73D A9 F8                   ; A = F8
LB73F                                                                          ;
sta      $24                           ; 0x1774f $B73F 85 24                   ;
lda      $1D                           ; 0x17751 $B741 A5 1D                   ;
and      #$08                          ; 0x17753 $B743 29 08                   ; keep bits .... x...
beq      LB74B                         ; 0x17755 $B745 F0 04                   ;
lda      #$F8                          ; 0x17757 $B747 A9 F8                   ; A = F8
sta      $24                           ; 0x17759 $B749 85 24                   ;
LB74B                                                                          ;
lda      $24                           ; 0x1775b $B74B A5 24                   ;
sta      $0204                         ; 0x1775d $B74D 8D 04 02                ;
dec      $0204                         ; 0x17760 $B750 CE 04 02                ;
lda      $03D6                         ; 0x17763 $B753 AD D6 03                ;
sta      $0207                         ; 0x17766 $B756 8D 07 02                ;
lda      #$FF                          ; 0x17769 $B759 A9 FF                   ; A = FF
sta      $0205                         ; 0x1776b $B75B 8D 05 02                ;
lda      #$03                          ; 0x1776e $B75E A9 03                   ; A = 03
sta      $0206                         ; 0x17770 $B760 8D 06 02                ;
lda      $F7                           ; 0x17773 $B763 A5 F7                   ; Controller 1 buttons held
and      #$0F                          ; 0x17775 $B765 29 0F                   ; keep bits .... xxxx (All Arrows)
bne      LB772                         ; 0x17777 $B767 D0 09                   ;
lda      #$00                          ; 0x17779 $B769 A9 00                   ; A = 00
sta      $21                           ; 0x1777b $B76B 85 21                   ;
sta      $22                           ; 0x1777d $B76D 85 22                   ;
jmp      LB831                         ; 0x1777f $B76F 4C 31 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB772                                                                          ;
lda      $21                           ; 0x17782 $B772 A5 21                   ;
beq      LB78E                         ; 0x17784 $B774 F0 18                   ;
inc      $22                           ; 0x17786 $B776 E6 22                   ;
lda      $22                           ; 0x17788 $B778 A5 22                   ;
cmp      #$1F                          ; 0x1778a $B77A C9 1F                   ; delay before auto-repeat cursor movement
bmi      LB78B                         ; 0x1778c $B77C 30 0D                   ;
and      #$07                          ; 0x1778e $B77E 29 07                   ; keep bits .... .xxx
bne      LB78B                         ; 0x17790 $B780 D0 09                   ;
lda      #$20                          ; 0x17792 $B782 A9 20                   ; A = 20
sta      $22                           ; 0x17794 $B784 85 22                   ;
jmp      LB78E                         ; 0x17796 $B786 4C 8E B7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
beq      LB78E                         ; 0x17799 $B789 F0 03                   ;
LB78B                                                                          ;
jmp      LB831                         ; 0x1779b $B78B 4C 31 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB78E                                                                          ;
lda      #$01                          ; 0x1779e $B78E A9 01                   ; A = 01
sta      $21                           ; 0x177a0 $B790 85 21                   ;
lda      #$02                          ; 0x177a2 $B792 A9 02                   ; A = 02
sta      $EB                           ; 0x177a4 $B794 85 EB                   ; Music
lda      $F7                           ; 0x177a6 $B796 A5 F7                   ; Controller 1 buttons held
and      #$03                          ; 0x177a8 $B798 29 03                   ; keep bits .... ..xx (Left/Right Arrows)
beq      LB7F2                         ; 0x177aa $B79A F0 56                   ;
cmp      #$01                          ; 0x177ac $B79C C9 01                   ;
bne      LB7CF                         ; 0x177ae $B79E D0 2F                   ;
inc      $1F                           ; 0x177b0 $B7A0 E6 1F                   ;
lda      $1F                           ; 0x177b2 $B7A2 A5 1F                   ;
cmp      #$0B                          ; 0x177b4 $B7A4 C9 0B                   ;
bne      LB7AE                         ; 0x177b6 $B7A6 D0 06                   ;
inc      $20                           ; 0x177b8 $B7A8 E6 20                   ;
lda      #$00                          ; 0x177ba $B7AA A9 00                   ; A = 00
sta      $1F                           ; 0x177bc $B7AC 85 1F                   ;
LB7AE                                                                          ;
lda      $20                           ; 0x177be $B7AE A5 20                   ;
cmp      #$04                          ; 0x177c0 $B7B0 C9 04                   ;
bne      LB7BA                         ; 0x177c2 $B7B2 D0 06                   ;
lda      #$00                          ; 0x177c4 $B7B4 A9 00                   ; A = 00
sta      $1F                           ; 0x177c6 $B7B6 85 1F                   ;
sta      $20                           ; 0x177c8 $B7B8 85 20                   ;
LB7BA                                                                          ;
lda      $20                           ; 0x177ca $B7BA A5 20                   ;
cmp      #$02                          ; 0x177cc $B7BC C9 02                   ;
bne      LB7CC                         ; 0x177ce $B7BE D0 0C                   ;
lda      $1F                           ; 0x177d0 $B7C0 A5 1F                   ;
cmp      #$06                          ; 0x177d2 $B7C2 C9 06                   ;
bne      LB7CC                         ; 0x177d4 $B7C4 D0 06                   ;
lda      #$00                          ; 0x177d6 $B7C6 A9 00                   ; A = 00
sta      $1F                           ; 0x177d8 $B7C8 85 1F                   ;
inc      $20                           ; 0x177da $B7CA E6 20                   ;
LB7CC                                                                          ;
jmp      LB831                         ; 0x177dc $B7CC 4C 31 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB7CF                                                                          ;
dec      $1F                           ; 0x177df $B7CF C6 1F                   ;
bpl      LB7E3                         ; 0x177e1 $B7D1 10 10                   ;
dec      $20                           ; 0x177e3 $B7D3 C6 20                   ;
lda      #$0A                          ; 0x177e5 $B7D5 A9 0A                   ; A = 0A
sta      $1F                           ; 0x177e7 $B7D7 85 1F                   ;
lda      $20                           ; 0x177e9 $B7D9 A5 20                   ;
cmp      #$02                          ; 0x177eb $B7DB C9 02                   ;
bne      LB7E3                         ; 0x177ed $B7DD D0 04                   ;
lda      #$05                          ; 0x177ef $B7DF A9 05                   ; A = 05
sta      $1F                           ; 0x177f1 $B7E1 85 1F                   ;
LB7E3                                                                          ;
lda      $20                           ; 0x177f3 $B7E3 A5 20                   ;
bpl      LB7EF                         ; 0x177f5 $B7E5 10 08                   ;
lda      #$03                          ; 0x177f7 $B7E7 A9 03                   ; A = 03
sta      $20                           ; 0x177f9 $B7E9 85 20                   ;
lda      #$0A                          ; 0x177fb $B7EB A9 0A                   ; A = 0A
sta      $1F                           ; 0x177fd $B7ED 85 1F                   ;
LB7EF                                                                          ;
jmp      LB831                         ; 0x177ff $B7EF 4C 31 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB7F2                                                                          ;
lda      $F7                           ; 0x17802 $B7F2 A5 F7                   ; Controller 1 buttons held
and      #$08                          ; 0x17804 $B7F4 29 08                   ; keep bits .... x... (Up Arrow)
beq      LB814                         ; 0x17806 $B7F6 F0 1C                   ;
dec      $20                           ; 0x17808 $B7F8 C6 20                   ;
bpl      LB803                         ; 0x1780a $B7FA 10 07                   ;
lda      #$03                          ; 0x1780c $B7FC A9 03                   ; A = 03
sta      $20                           ; 0x1780e $B7FE 85 20                   ;
jmp      LB811                         ; 0x17810 $B800 4C 11 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB803                                                                          ;
lda      $1F                           ; 0x17813 $B803 A5 1F                   ;
cmp      #$06                          ; 0x17815 $B805 C9 06                   ;
bmi      LB811                         ; 0x17817 $B807 30 08                   ;
lda      $20                           ; 0x17819 $B809 A5 20                   ;
cmp      #$02                          ; 0x1781b $B80B C9 02                   ;
bne      LB811                         ; 0x1781d $B80D D0 02                   ;
dec      $20                           ; 0x1781f $B80F C6 20                   ;
LB811                                                                          ;
jmp      LB831                         ; 0x17821 $B811 4C 31 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB814                                                                          ;
inc      $20                           ; 0x17824 $B814 E6 20                   ;
lda      $20                           ; 0x17826 $B816 A5 20                   ;
cmp      #$04                          ; 0x17828 $B818 C9 04                   ;
bne      LB823                         ; 0x1782a $B81A D0 07                   ;
lda      #$00                          ; 0x1782c $B81C A9 00                   ; A = 00
sta      $20                           ; 0x1782e $B81E 85 20                   ;
jmp      LB831                         ; 0x17830 $B820 4C 31 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB823                                                                          ;
lda      $1F                           ; 0x17833 $B823 A5 1F                   ;
cmp      #$06                          ; 0x17835 $B825 C9 06                   ;
bmi      LB831                         ; 0x17837 $B827 30 08                   ;
lda      $20                           ; 0x17839 $B829 A5 20                   ;
cmp      #$02                          ; 0x1783b $B82B C9 02                   ;
bne      LB831                         ; 0x1783d $B82D D0 02                   ;
inc      $20                           ; 0x1783f $B82F E6 20                   ;
LB831                                                                          ;
lda      #$30                          ; 0x17841 $B831 A9 30                   ; A = 30
ldx      $1F                           ; 0x17843 $B833 A6 1F                   ;
LB835                                                                          ;
beq      LB83E                         ; 0x17845 $B835 F0 07                   ;
clc                                    ; 0x17847 $B837 18                      ;
adc      #$10                          ; 0x17848 $B838 69 10                   ;
dex                                    ; 0x1784a $B83A CA                      ;
jmp      LB835                         ; 0x1784b $B83B 4C 35 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB83E                                                                          ;
sta      $23                           ; 0x1784e $B83E 85 23                   ;
lda      #$90                          ; 0x17850 $B840 A9 90                   ; A = 90
ldx      $20                           ; 0x17852 $B842 A6 20                   ;
LB844                                                                          ;
beq      LB84D                         ; 0x17854 $B844 F0 07                   ;
clc                                    ; 0x17856 $B846 18                      ;
adc      #$10                          ; 0x17857 $B847 69 10                   ;
dex                                    ; 0x17859 $B849 CA                      ;
jmp      LB844                         ; 0x1785a $B84A 4C 44 B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB84D                                                                          ;
sta      $25                           ; 0x1785d $B84D 85 25                   ;
lda      $22                           ; 0x1785f $B84F A5 22                   ;
cmp      #$1F                          ; 0x17861 $B851 C9 1F                   ;
bpl      LB85F                         ; 0x17863 $B853 10 0A                   ;
lda      $1D                           ; 0x17865 $B855 A5 1D                   ;
and      #$08                          ; 0x17867 $B857 29 08                   ; keep bits .... x...
beq      LB85F                         ; 0x17869 $B859 F0 04                   ;
lda      #$F8                          ; 0x1786b $B85B A9 F8                   ; A = F8
sta      $25                           ; 0x1786d $B85D 85 25                   ;
LB85F                                                                          ;
lda      $25                           ; 0x1786f $B85F A5 25                   ;
sta      $0244                         ; 0x17871 $B861 8D 44 02                ;
dec      $0244                         ; 0x17874 $B864 CE 44 02                ;
lda      $23                           ; 0x17877 $B867 A5 23                   ;
sta      $0247                         ; 0x17879 $B869 8D 47 02                ;
lda      #$FF                          ; 0x1787c $B86C A9 FF                   ; A = FF
sta      $0245                         ; 0x1787e $B86E 8D 45 02                ;
lda      #$03                          ; 0x17881 $B871 A9 03                   ; A = 03
sta      $0246                         ; 0x17883 $B873 8D 46 02                ;
ldx      #$1C                          ; 0x17886 $B876 A2 1C                   ; X = 1C
LB878                                                                          ;
lda      #$C7                          ; 0x17888 $B878 A9 C7                   ; A = C7
sta      $0224,x                       ; 0x1788a $B87A 9D 24 02                ;
lda      #$F5                          ; 0x1788d $B87D A9 F5                   ; A = F5
sta      $0225,x                       ; 0x1788f $B87F 9D 25 02                ;
lda      #$00                          ; 0x17892 $B882 A9 00                   ; A = 00
sta      $0226,x                       ; 0x17894 $B884 9D 26 02                ;
lda      #$10                          ; 0x17897 $B887 A9 10                   ; A = 10
sta      $0227,x                       ; 0x17899 $B889 9D 27 02                ;
dex                                    ; 0x1789c $B88C CA                      ;
dex                                    ; 0x1789d $B88D CA                      ;
dex                                    ; 0x1789e $B88E CA                      ;
dex                                    ; 0x1789f $B88F CA                      ;
bpl      LB878                         ; 0x178a0 $B890 10 E6                   ;
lda      $F5                           ; 0x178a2 $B892 A5 F5                   ;only occurs during Register Your Name ; Controller 1 buttons pressed
and      #$80                          ; 0x178a4 $B894 29 80                   ; keep bits x... .... (A button)
beq      LB8C4                         ; 0x178a6 $B896 F0 2C                   ;
ldx      $20                           ; 0x178a8 $B898 A6 20                   ;
lda      $1F                           ; 0x178aa $B89A A5 1F                   ;
LB89C                                                                          ;
cpx      #$00                          ; 0x178ac $B89C E0 00                   ;
beq      LB8A7                         ; 0x178ae $B89E F0 07                   ;
clc                                    ; 0x178b0 $B8A0 18                      ;
adc      #$0B                          ; 0x178b1 $B8A1 69 0B                   ;
dex                                    ; 0x178b3 $B8A3 CA                      ;
jmp      LB89C                         ; 0x178b4 $B8A4 4C 9C B8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB8A7                                                                          ;
pha                                    ; 0x178b7 $B8A7 48                      ;
ldy      $1E                           ; 0x178b8 $B8A8 A4 1E                   ;; Cursor position in Name Input Screen
bne      LB8AE                         ; 0x178ba $B8AA D0 02                   ;
ldy      #$08                          ; 0x178bc $B8AC A0 08                   ; Y = 08
LB8AE                                                                          ;
dey                                    ; 0x178be $B8AE 88                      ;
lda      $19                           ; 0x178bf $B8AF A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
asl                                    ; 0x178c1 $B8B1 0A                      ;
tax                                    ; 0x178c2 $B8B2 AA                      ;
lda      LB23C,x                       ; 0x178c3 $B8B3 BD 3C B2                ;
sta      L0000                         ; 0x178c6 $B8B6 85 00                   ;
lda      LB23D,x                       ; 0x178c8 $B8B8 BD 3D B2                ;
sta      $01                           ; 0x178cb $B8BB 85 01                   ;
pla                                    ; 0x178cd $B8BD 68                      ;
tax                                    ; 0x178ce $B8BE AA                      ;
lda      bank5_Table_for_Letters_Tile_Mappings,x; 0x178cf $B8BF BD 75 BD       ;
sta      (L0000),y                     ; 0x178d2 $B8C2 91 00                   ;
LB8C4                                                                          ;
lda      #$20                          ; 0x178d4 $B8C4 A9 20                   ; A = 20
sta      L0000                         ; 0x178d6 $B8C6 85 00                   ;
lda      #$CD                          ; 0x178d8 $B8C8 A9 CD                   ; A = CD
sta      $01                           ; 0x178da $B8CA 85 01                   ;
jmp      bank5_Display_Saved_Games_Names; 0x178dc $B8CC 4C 29 B5               ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jmp      LCF05                         ; 0x178df $B8CF 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB8D2                                                                          ;
ldy      #$D0                          ; 0x178e2 $B8D2 A0 D0                   ; Y = D0
LB8D4                                                                          ;
iny                                    ; 0x178e4 $B8D4 C8                      ;
sec                                    ; 0x178e5 $B8D5 38                      ;
sbc      #$E8                          ; 0x178e6 $B8D6 E9 E8                   ;
bcs      LB8DC                         ; 0x178e8 $B8D8 B0 02                   ;
dec      L0000                         ; 0x178ea $B8DA C6 00                   ;
LB8DC                                                                          ;
dec      L0000                         ; 0x178ec $B8DC C6 00                   ;
dec      L0000                         ; 0x178ee $B8DE C6 00                   ;
dec      L0000                         ; 0x178f0 $B8E0 C6 00                   ;
bpl      LB8D4                         ; 0x178f2 $B8E2 10 F0                   ;
clc                                    ; 0x178f4 $B8E4 18                      ;
adc      #$E8                          ; 0x178f5 $B8E5 69 E8                   ;
bcc      LB8EB                         ; 0x178f7 $B8E7 90 02                   ;
inc      L0000                         ; 0x178f9 $B8E9 E6 00                   ;
LB8EB                                                                          ;
inc      L0000                         ; 0x178fb $B8EB E6 00                   ;
inc      L0000                         ; 0x178fd $B8ED E6 00                   ;
inc      L0000                         ; 0x178ff $B8EF E6 00                   ;
dey                                    ; 0x17901 $B8F1 88                      ;
sty      $01                           ; 0x17902 $B8F2 84 01                   ;
ldy      #$D0                          ; 0x17904 $B8F4 A0 D0                   ; Y = D0
LB8F6                                                                          ;
iny                                    ; 0x17906 $B8F6 C8                      ;
sec                                    ; 0x17907 $B8F7 38                      ;
sbc      #$64                          ; 0x17908 $B8F8 E9 64                   ;
bcs      LB8F6                         ; 0x1790a $B8FA B0 FA                   ;
dec      L0000                         ; 0x1790c $B8FC C6 00                   ;
bpl      LB8F6                         ; 0x1790e $B8FE 10 F6                   ;
adc      #$64                          ; 0x17910 $B900 69 64                   ;
dey                                    ; 0x17912 $B902 88                      ;
sty      L0000                         ; 0x17913 $B903 84 00                   ;
ldy      #$D0                          ; 0x17915 $B905 A0 D0                   ; Y = D0
LB907                                                                          ;
iny                                    ; 0x17917 $B907 C8                      ;
sec                                    ; 0x17918 $B908 38                      ;
sbc      #$0A                          ; 0x17919 $B909 E9 0A                   ;
bcs      LB907                         ; 0x1791b $B90B B0 FA                   ;
adc      #$DA                          ; 0x1791d $B90D 69 DA                   ;
dey                                    ; 0x1791f $B90F 88                      ;
rts                                    ; 0x17920 $B910 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB911                                                                          ;
jsr      LBA6C                         ; 0x17921 $B911 20 6C BA                ;
LB914                                                                          ;
lda      (L0000),y                     ; 0x17924 $B914 B1 00                   ;
sta      $0777,y                       ; 0x17926 $B916 99 77 07                ; Attack Level (1-8)
dey                                    ; 0x17929 $B919 88                      ;
bpl      LB914                         ; 0x1792a $B91A 10 F8                   ;
iny                                    ; 0x1792c $B91C C8                      ;
LB91D                                                                          ;
lda      ($02),y                       ; 0x1792d $B91D B1 02                   ;
sta      ($04),y                       ; 0x1792f $B91F 91 04                   ;
jsr      LBAB8                         ; 0x17931 $B921 20 B8 BA                ;
lda      $06                           ; 0x17934 $B924 A5 06                   ;
cmp      #$F5                          ; 0x17936 $B926 C9 F5                   ;
bne      LB91D                         ; 0x17938 $B928 D0 F3                   ;
lda      $07                           ; 0x1793a $B92A A5 07                   ;
cmp      #$BB                          ; 0x1793c $B92C C9 BB                   ;
bne      LB91D                         ; 0x1793e $B92E D0 ED                   ;
rts                                    ; 0x17940 $B930 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      LBA6C                         ; 0x17941 $B931 20 6C BA                ;
ldy      #$00                          ; 0x17944 $B934 A0 00                   ; Y = 00
lda      #$5A                          ; 0x17946 $B936 A9 5A                   ; A = 5A
sta      ($0C),y                       ; 0x17948 $B938 91 0C                   ;
ldy      #$31                          ; 0x1794a $B93A A0 31                   ; Y = 31
LB93C                                                                          ;
lda      (L0000),y                     ; 0x1794c $B93C B1 00                   ;
sta      ($08),y                       ; 0x1794e $B93E 91 08                   ;
dey                                    ; 0x17950 $B940 88                      ;
bpl      LB93C                         ; 0x17951 $B941 10 F9                   ;
iny                                    ; 0x17953 $B943 C8                      ;
LB944                                                                          ;
lda      ($02),y                       ; 0x17954 $B944 B1 02                   ;
sta      ($0A),y                       ; 0x17956 $B946 91 0A                   ;
jsr      LBAB8                         ; 0x17958 $B948 20 B8 BA                ;
lda      $06                           ; 0x1795b $B94B A5 06                   ;
cmp      #$F5                          ; 0x1795d $B94D C9 F5                   ;
bne      LB944                         ; 0x1795f $B94F D0 F3                   ;
lda      $07                           ; 0x17961 $B951 A5 07                   ;
cmp      #$BB                          ; 0x17963 $B953 C9 BB                   ;
bne      LB944                         ; 0x17965 $B955 D0 ED                   ;
rts                                    ; 0x17967 $B957 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_pointer_table6                                                           ;
.word    L749A                         ; 0x17968 $B958 9A 74                   ;
.word    L757A                         ; 0x1796a $B95A 7A 75                   ;
.word    L765A                         ; 0x1796c $B95C 5A 76                   ;
bank5_Pointer_for_Item_Presence_Bits_Table                                     ;
.word    bank5_Initial_Item_Presence_Bits_600_61F__West_Hyrule; 0x1796e $B95E 15 BB;
; ---------------------------------------------------------------------------- ;
bank5_code27                                                                   ;
ldx      #$02                          ; 0x17970 $B960 A2 02                   ; X = 02
LB962                                                                          ;
txa                                    ; 0x17972 $B962 8A                      ;
jsr      LBA6F                         ; 0x17973 $B963 20 6F BA                ;
ldy      #$00                          ; 0x17976 $B966 A0 00                   ; Y = 00
lda      ($0C),y                       ; 0x17978 $B968 B1 0C                   ;
cmp      #$A5                          ; 0x1797a $B96A C9 A5                   ;
beq      LB9A3                         ; 0x1797c $B96C F0 35                   ;
cmp      #$5A                          ; 0x1797e $B96E C9 5A                   ;
beq      LB99D                         ; 0x17980 $B970 F0 2B                   ;
cmp      #$69                          ; 0x17982 $B972 C9 69                   ;
beq      LB9A7                         ; 0x17984 $B974 F0 31                   ;
ldy      #$31                          ; 0x17986 $B976 A0 31                   ; Y = 31
LB978                                                                          ;
lda      bank5_Beginning_Values,y      ; 0x17988 $B978 B9 E3 BA                ; Table for Beginning Values (17AE3)
sta      (L0000),y                     ; 0x1798b $B97B 91 00                   ;
dey                                    ; 0x1798d $B97D 88                      ;
bpl      LB978                         ; 0x1798e $B97E 10 F8                   ;
iny                                    ; 0x17990 $B980 C8                      ;
LB981                                                                          ;
lda      ($06),y                       ; 0x17991 $B981 B1 06                   ;
sta      ($02),y                       ; 0x17993 $B983 91 02                   ;
inc      $06                           ; 0x17995 $B985 E6 06                   ;
bne      LB98B                         ; 0x17997 $B987 D0 02                   ;
inc      $07                           ; 0x17999 $B989 E6 07                   ;
LB98B                                                                          ;
inc      $02                           ; 0x1799b $B98B E6 02                   ;
bne      LB991                         ; 0x1799d $B98D D0 02                   ;
inc      $03                           ; 0x1799f $B98F E6 03                   ;
LB991                                                                          ;
lda      $06                           ; 0x179a1 $B991 A5 06                   ;
cmp      #$F5                          ; 0x179a3 $B993 C9 F5                   ;
bne      LB981                         ; 0x179a5 $B995 D0 EA                   ;
lda      $07                           ; 0x179a7 $B997 A5 07                   ;
cmp      #$BB                          ; 0x179a9 $B999 C9 BB                   ;
bne      LB981                         ; 0x179ab $B99B D0 E4                   ;
LB99D                                                                          ;
ldy      #$00                          ; 0x179ad $B99D A0 00                   ; Y = 00
lda      #$A5                          ; 0x179af $B99F A9 A5                   ; A = A5
sta      ($0C),y                       ; 0x179b1 $B9A1 91 0C                   ;
LB9A3                                                                          ;
dex                                    ; 0x179b3 $B9A3 CA                      ;
bpl      LB962                         ; 0x179b4 $B9A4 10 BC                   ;
rts                                    ; 0x179b6 $B9A6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LB9A7                                                                          ;
ldy      #$31                          ; 0x179b7 $B9A7 A0 31                   ; Y = 31
LB9A9                                                                          ;
lda      ($08),y                       ; 0x179b9 $B9A9 B1 08                   ;
sta      (L0000),y                     ; 0x179bb $B9AB 91 00                   ;
dey                                    ; 0x179bd $B9AD 88                      ;
bpl      LB9A9                         ; 0x179be $B9AE 10 F9                   ;
iny                                    ; 0x179c0 $B9B0 C8                      ;
LB9B1                                                                          ;
lda      ($0A),y                       ; 0x179c1 $B9B1 B1 0A                   ;
sta      ($02),y                       ; 0x179c3 $B9B3 91 02                   ;
txa                                    ; 0x179c5 $B9B5 8A                      ;
pha                                    ; 0x179c6 $B9B6 48                      ;
jsr      LBAB8                         ; 0x179c7 $B9B7 20 B8 BA                ;
pla                                    ; 0x179ca $B9BA 68                      ;
tax                                    ; 0x179cb $B9BB AA                      ;
lda      $06                           ; 0x179cc $B9BC A5 06                   ;
cmp      #$F5                          ; 0x179ce $B9BE C9 F5                   ;
bne      LB9B1                         ; 0x179d0 $B9C0 D0 EF                   ;
lda      $07                           ; 0x179d2 $B9C2 A5 07                   ;
cmp      #$BB                          ; 0x179d4 $B9C4 C9 BB                   ;
beq      LB99D                         ; 0x179d6 $B9C6 F0 D5                   ;
bne      LB9B1                         ; 0x179d8 $B9C8 D0 E7                   ;
LB9CA                                                                          ;
jsr      LBA6C                         ; 0x179da $B9CA 20 6C BA                ;
ldy      #$00                          ; 0x179dd $B9CD A0 00                   ; Y = 00
lda      #$5A                          ; 0x179df $B9CF A9 5A                   ; A = 5A
sta      ($0C),y                       ; 0x179e1 $B9D1 91 0C                   ;
ldy      #$31                          ; 0x179e3 $B9D3 A0 31                   ; Y = 31
LB9D5                                                                          ;
lda      $0777,y                       ; 0x179e5 $B9D5 B9 77 07                ;
sta      ($08),y                       ; 0x179e8 $B9D8 91 08                   ;
dey                                    ; 0x179ea $B9DA 88                      ;
bpl      LB9D5                         ; 0x179eb $B9DB 10 F8                   ;
iny                                    ; 0x179ed $B9DD C8                      ;
LB9DE                                                                          ;
lda      ($04),y                       ; 0x179ee $B9DE B1 04                   ;
sta      ($0A),y                       ; 0x179f0 $B9E0 91 0A                   ;
jsr      LBAB8                         ; 0x179f2 $B9E2 20 B8 BA                ;
lda      $06                           ; 0x179f5 $B9E5 A5 06                   ;
cmp      #$F5                          ; 0x179f7 $B9E7 C9 F5                   ;
bne      LB9DE                         ; 0x179f9 $B9E9 D0 F3                   ;
lda      $07                           ; 0x179fb $B9EB A5 07                   ;
cmp      #$BB                          ; 0x179fd $B9ED C9 BB                   ;
bne      LB9DE                         ; 0x179ff $B9EF D0 ED                   ;
lda      #$69                          ; 0x17a01 $B9F1 A9 69                   ; A = 69
sta      ($0C),y                       ; 0x17a03 $B9F3 91 0C                   ;
jsr      LBA6C                         ; 0x17a05 $B9F5 20 6C BA                ;
LB9F8                                                                          ;
lda      ($08),y                       ; 0x17a08 $B9F8 B1 08                   ;this is where save game is saved to sram
sta      (L0000),y                     ; 0x17a0a $B9FA 91 00                   ;
dey                                    ; 0x17a0c $B9FC 88                      ;
bpl      LB9F8                         ; 0x17a0d $B9FD 10 F9                   ;
iny                                    ; 0x17a0f $B9FF C8                      ;
LBA00                                                                          ;
lda      ($0A),y                       ; 0x17a10 $BA00 B1 0A                   ;
sta      ($02),y                       ; 0x17a12 $BA02 91 02                   ;
jsr      LBAB8                         ; 0x17a14 $BA04 20 B8 BA                ;
lda      $06                           ; 0x17a17 $BA07 A5 06                   ;
cmp      #$F5                          ; 0x17a19 $BA09 C9 F5                   ;
bne      LBA00                         ; 0x17a1b $BA0B D0 F3                   ;
lda      $07                           ; 0x17a1d $BA0D A5 07                   ;
cmp      #$BB                          ; 0x17a1f $BA0F C9 BB                   ;
bne      LBA00                         ; 0x17a21 $BA11 D0 ED                   ;
LBA13                                                                          ;
lda      #$A5                          ; 0x17a23 $BA13 A9 A5                   ; A = A5
sta      ($0C),y                       ; 0x17a25 $BA15 91 0C                   ;
rts                                    ; 0x17a27 $BA17 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBA18                                                                          ;
jsr      LBA6F                         ; 0x17a28 $BA18 20 6F BA                ;
ldy      #$00                          ; 0x17a2b $BA1B A0 00                   ; Y = 00
lda      #$69                          ; 0x17a2d $BA1D A9 69                   ; A = 69
sta      ($0C),y                       ; 0x17a2f $BA1F 91 0C                   ;
ldy      #$31                          ; 0x17a31 $BA21 A0 31                   ; Y = 31
LBA23                                                                          ;
lda      ($08),y                       ; 0x17a33 $BA23 B1 08                   ;
sta      (L0000),y                     ; 0x17a35 $BA25 91 00                   ;
dey                                    ; 0x17a37 $BA27 88                      ;
bpl      LBA23                         ; 0x17a38 $BA28 10 F9                   ;
iny                                    ; 0x17a3a $BA2A C8                      ;
LBA2B                                                                          ;
lda      ($0A),y                       ; 0x17a3b $BA2B B1 0A                   ;
sta      ($02),y                       ; 0x17a3d $BA2D 91 02                   ;
jsr      LBAB8                         ; 0x17a3f $BA2F 20 B8 BA                ;
lda      $06                           ; 0x17a42 $BA32 A5 06                   ;
cmp      #$F5                          ; 0x17a44 $BA34 C9 F5                   ;
bne      LBA2B                         ; 0x17a46 $BA36 D0 F3                   ;
lda      $07                           ; 0x17a48 $BA38 A5 07                   ;
cmp      #$BB                          ; 0x17a4a $BA3A C9 BB                   ;
beq      LBA13                         ; 0x17a4c $BA3C F0 D5                   ;
bne      LBA2B                         ; 0x17a4e $BA3E D0 EB                   ;
LBA40                                                                          ;
txa                                    ; 0x17a50 $BA40 8A                      ;
jsr      LBA6F                         ; 0x17a51 $BA41 20 6F BA                ;
ldy      #$00                          ; 0x17a54 $BA44 A0 00                   ; Y = 00
lda      #$5A                          ; 0x17a56 $BA46 A9 5A                   ; A = 5A
sta      ($0C),y                       ; 0x17a58 $BA48 91 0C                   ;
ldy      #$31                          ; 0x17a5a $BA4A A0 31                   ; Y = 31
LBA4C                                                                          ;
lda      (L0000),y                     ; 0x17a5c $BA4C B1 00                   ;
sta      ($08),y                       ; 0x17a5e $BA4E 91 08                   ;
dey                                    ; 0x17a60 $BA50 88                      ;
bpl      LBA4C                         ; 0x17a61 $BA51 10 F9                   ;
iny                                    ; 0x17a63 $BA53 C8                      ;
LBA54                                                                          ;
lda      ($02),y                       ; 0x17a64 $BA54 B1 02                   ;
sta      ($0A),y                       ; 0x17a66 $BA56 91 0A                   ;
txa                                    ; 0x17a68 $BA58 8A                      ;
pha                                    ; 0x17a69 $BA59 48                      ;
jsr      LBAB8                         ; 0x17a6a $BA5A 20 B8 BA                ;
pla                                    ; 0x17a6d $BA5D 68                      ;
tax                                    ; 0x17a6e $BA5E AA                      ;
lda      $06                           ; 0x17a6f $BA5F A5 06                   ;
cmp      #$F5                          ; 0x17a71 $BA61 C9 F5                   ;
bne      LBA54                         ; 0x17a73 $BA63 D0 EF                   ;
lda      $07                           ; 0x17a75 $BA65 A5 07                   ;
cmp      #$BB                          ; 0x17a77 $BA67 C9 BB                   ;
bne      LBA54                         ; 0x17a79 $BA69 D0 E9                   ;
rts                                    ; 0x17a7b $BA6B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBA6C                                                                          ;
lda      $0772                         ; 0x17a7c $BA6C AD 72 07                ; Current Game Slot
LBA6F                                                                          ;
asl                                    ; 0x17a7f $BA6F 0A                      ;
tay                                    ; 0x17a80 $BA70 A8                      ;
lda      bank5_pointer_table7,y        ; 0x17a81 $BA71 B9 C5 BA                ;
sta      L0000                         ; 0x17a84 $BA74 85 00                   ;
lda      bank5_pointer_table7+$01,y    ; 0x17a86 $BA76 B9 C6 BA                ;
sta      $01                           ; 0x17a89 $BA79 85 01                   ;
lda      bank5_pointer_table7+$01+$05,y; 0x17a8b $BA7B B9 CB BA                ;
sta      $02                           ; 0x17a8e $BA7E 85 02                   ;
lda      bank5_pointer_table7+$01+$05+$01,y; 0x17a90 $BA80 B9 CC BA            ;
sta      $03                           ; 0x17a93 $BA83 85 03                   ;
lda      #$00                          ; 0x17a95 $BA85 A9 00                   ; A = 00
sta      $04                           ; 0x17a97 $BA87 85 04                   ;
lda      #$06                          ; 0x17a99 $BA89 A9 06                   ; A = 06
sta      $05                           ; 0x17a9b $BA8B 85 05                   ;
lda      bank5_Pointer_for_Item_Presence_Bits_Table; 0x17a9d $BA8D AD 5E B9    ;
sta      $06                           ; 0x17aa0 $BA90 85 06                   ;
lda      bank5_Pointer_for_Item_Presence_Bits_Table+$01; 0x17aa2 $BA92 AD 5F B9;
sta      $07                           ; 0x17aa5 $BA95 85 07                   ;
lda      bank5_pointer_table7+$0C,y    ; 0x17aa7 $BA97 B9 D1 BA                ;
sta      $08                           ; 0x17aaa $BA9A 85 08                   ;
lda      bank5_pointer_table7+$0C+$01,y; 0x17aac $BA9C B9 D2 BA                ;
sta      $09                           ; 0x17aaf $BA9F 85 09                   ;
lda      bank5_pointer_table7+$0C+$01+$05,y; 0x17ab1 $BAA1 B9 D7 BA            ;
sta      $0A                           ; 0x17ab4 $BAA4 85 0A                   ;
lda      bank5_pointer_table7+$0C+$01+$05+$01,y; 0x17ab6 $BAA6 B9 D8 BA        ;
sta      $0B                           ; 0x17ab9 $BAA9 85 0B                   ;
lda      bank5_pointer_table7+$0C+$01+$05+$01+$05,y; 0x17abb $BAAB B9 DD BA    ;
sta      $0C                           ; 0x17abe $BAAE 85 0C                   ;
lda      bank5_pointer_table7+$0C+$01+$05+$01+$05+$01,y; 0x17ac0 $BAB0 B9 DE BA;
sta      $0D                           ; 0x17ac3 $BAB3 85 0D                   ;
ldy      #$31                          ; 0x17ac5 $BAB5 A0 31                   ; Y = 31
rts                                    ; 0x17ac7 $BAB7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBAB8                                                                          ;
ldx      #$0A                          ; 0x17ac8 $BAB8 A2 0A                   ; X = 0A
LBABA                                                                          ;
inc      L0000,x                       ; 0x17aca $BABA F6 00                   ;
bne      LBAC0                         ; 0x17acc $BABC D0 02                   ;
inc      $01,x                         ; 0x17ace $BABE F6 01                   ;
LBAC0                                                                          ;
dex                                    ; 0x17ad0 $BAC0 CA                      ;
dex                                    ; 0x17ad1 $BAC1 CA                      ;
bpl      LBABA                         ; 0x17ad2 $BAC2 10 F6                   ;
rts                                    ; 0x17ad4 $BAC4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_pointer_table7                                                           ;
.word    L7402                         ; 0x17ad5 $BAC5 02 74                   ;
.word    L7434                         ; 0x17ad7 $BAC7 34 74                   ;
.word    L7466                         ; 0x17ad9 $BAC9 66 74                   ;
.word    L749A                         ; 0x17adb $BACB 9A 74                   ;
.word    L757A                         ; 0x17add $BACD 7A 75                   ;
.word    L765A                         ; 0x17adf $BACF 5A 76                   ;
.word    L6002                         ; 0x17ae1 $BAD1 02 60                   ;
.word    L6034                         ; 0x17ae3 $BAD3 34 60                   ;
.word    L6066                         ; 0x17ae5 $BAD5 66 60                   ;
.word    L6098                         ; 0x17ae7 $BAD7 98 60                   ;
.word    L6178                         ; 0x17ae9 $BAD9 78 61                   ;
.word    L6258                         ; 0x17aeb $BADB 58 62                   ;
.word    L7400                         ; 0x17aed $BADD 00 74                   ;
.word    L7498                         ; 0x17aef $BADF 98 74                   ;
.word    L773A                         ; 0x17af1 $BAE1 3A 77                   ;
; ---------------------------------------------------------------------------- ;
bank5_Beginning_Values                                                         ;
;stored to 777, ending with last 8 bytes being the name                        ;
.byt    $01                            ; 0x17af3 $BAE3 01                      ;777	atk
                                                                               ;
.byt    $01                            ; 0x17af4 $BAE4 01                      ;778	magic
                                                                               ;
.byt    $01                            ; 0x17af5 $BAE5 01                      ;779	life
                                                                               ;
.byt    $00                            ; 0x17af6 $BAE6 00                      ;77A	
                                                                               ;
.byt    $00                            ; 0x17af7 $BAE7 00                      ;77B	17AF7 - Begin with Shield Magic
                                                                               ;
.byt    $00                            ; 0x17af8 $BAE8 00                      ;77C	17AF8 - Begin with Jump Magic
                                                                               ;
.byt    $00                            ; 0x17af9 $BAE9 00                      ;77D	17AF9 - Begin with Life Magic
                                                                               ;
.byt    $00                            ; 0x17afa $BAEA 00                      ;77E	17AFA - Begin with Fairy Magic
                                                                               ;
.byt    $00                            ; 0x17afb $BAEB 00                      ;77F	17AFB - Begin with Fire Magic
                                                                               ;
.byt    $00                            ; 0x17afc $BAEC 00                      ;780	17AFC - Begin with Reflect Magic
                                                                               ;
.byt    $00                            ; 0x17afd $BAED 00                      ;781	17AFD - Begin with Spell Magic
                                                                               ;
.byt    $00                            ; 0x17afe $BAEE 00                      ;782	17AFE - Begin with Thunder Magic
                                                                               ;
.byt    $04                            ; 0x17aff $BAEF 04                      ;783	17AFF - Number of Magic Containers to begin game
                                                                               ;
.byt    $04                            ; 0x17b00 $BAF0 04                      ;784	17B00 - Number of Heart Containers to begin game
                                                                               ;
.byt    $00                            ; 0x17b01 $BAF1 00                      ;785	17B01 - Begin with Candle
                                                                               ;
.byt    $00                            ; 0x17b02 $BAF2 00                      ;786	17B02 - Begin with Power Glove
                                                                               ;
.byt    $00                            ; 0x17b03 $BAF3 00                      ;787	17B03 - Begin with Raft
                                                                               ;
.byt    $00                            ; 0x17b04 $BAF4 00                      ;788	17B04 - Begin with Boots
                                                                               ;
.byt    $00                            ; 0x17b05 $BAF5 00                      ;789	17B05 - Begin with Flute
                                                                               ;
.byt    $00                            ; 0x17b06 $BAF6 00                      ;78A	17B06 - Begin with Cross
                                                                               ;
.byt    $00                            ; 0x17b07 $BAF7 00                      ;78B	17B07 - Begin with Hammer
                                                                               ;
.byt    $00                            ; 0x17b08 $BAF8 00                      ;78C	17B08 - Begin with Magic Key
                                                                               ;
.byt    $00                            ; 0x17b09 $BAF9 00                      ;78D,X 	; Crystals Placed (1 = crystal placed) 02 03 04 05 06
                                                                               ;
.byt    $00                            ; 0x17b0a $BAFA 00                      ;78D,X 	; Crystals Placed (1 = crystal placed) 02 03 04 05 06
                                                                               ;
.byt    $00                            ; 0x17b0b $BAFB 00                      ;78D,X 	; Crystals Placed (1 = crystal placed) 02 03 04 05 06
                                                                               ;
.byt    $00                            ; 0x17b0c $BAFC 00                      ;78D,X 	; Crystals Placed (1 = crystal placed) 02 03 04 05 06
                                                                               ;
.byt    $00                            ; 0x17b0d $BAFD 00                      ;78D,X 	; Crystals Placed (1 = crystal placed) 02 03 04 05 06
                                                                               ;
.byt    $00                            ; 0x17b0e $BAFE 00                      ;78D,X 	; Crystals Placed (1 = crystal placed) 02 03 04 05 06
                                                                               ;
.byt    $00                            ; 0x17b0f $BAFF 00                      ;793 	; Current number of Keys
                                                                               ;
.byt    $06                            ; 0x17b10 $BB00 06                      ;794 	17B10 - Number of Crystals to begin game
                                                                               ;
.byt    $00                            ; 0x17b11 $BB01 00                      ;795
                                                                               ;
.byt    $00                            ; 0x17b12 $BB02 00                      ;796 	17B12 - Techs (Downward Thrust 10) (Upward Thrust 04) (Both 14)
                                                                               ;
.byt    $00                            ; 0x17b13 $BB03 00                      ;797
                                                                               ;
.byt    $00                            ; 0x17b14 $BB04 00                      ;798 	; Have collected Trophy (10)
                                                                               ;
.byt    $00                            ; 0x17b15 $BB05 00                      ;799 	; Have collected Mirror (01)
                                                                               ;
.byt    $00                            ; 0x17b16 $BB06 00                      ;79A 	; Have collected note from Bagu (08) Medicine (40)
                                                                               ;
.byt    $00                            ; 0x17b17 $BB07 00                      ;79B 	; Have collected some Water (01)
                                                                               ;
.byt    $00                            ; 0x17b18 $BB08 00                      ;79C 	; Have collected Lost Child (20)
                                                                               ;
.byt    $00                            ; 0x17b19 $BB09 00                      ;79D 	; Have 7 Magic Containers (08)
                                                                               ;
.byt    $00                            ; 0x17b1a $BB0A 00                      ;79F 	; Number of Continues used
                                                                               ;
.byt    $00                            ; 0x17b1b $BB0B 00                      ;7A0 	; this is a new game+ file?, set it up during the save game load for newgame+ settings
                                                                               ;
.byt    $00                            ; 0x17b1c $BB0C 00                      ;
bank5_table_for_blanking_out_name                                              ;
.byt    $F4,$F4,$F4,$F4,$F4,$F4,$F4,$F4; 0x17b1d $BB0D F4 F4 F4 F4 F4 F4 F4 F4 ;table for blanking out name
bank5_Initial_Item_Presence_Bits_600_61F__West_Hyrule                          ;
;Each byte represents two ($561) maps, high and low byte.  Each bit represents a map page (4 bits/map pages per $561/map). ;
;                                                                              ;
;ROM Bank 	Overworld 	World 	Description 	Base Address                         ;
;1 	0 	0 	West Hyrule 	$600                                                    ;
;1 & 2 	1 	0 	Death Mt. / Maze Is. 	$620                                       ;
;2 	2 	0 	East Hyrule 	$640                                                    ;
;3 	x 	1, 2 	Towns 	$660                                                       ;
;4 	x 	3 	Palaces 1, 2, 5 	$680                                                ;
;4 	x 	4 	Palaces 3, 4, 6 	$6a0                                                ;
;5 	x 	5 	Great Palace 	$6c0                                                   ;
;                                                                              ;
;To calculate which bit represents which screen:                               ;
;                                                                              ;
;addr = lookup_base_address(overworld, world) + (sidescroll_area / 2)          ;
;bit = 7 - (screen_num + 4 * (sidescroll_area & 1))                            ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b25 $BB15 FF FF FF FF FF FF FF FF ;600-61F	;West Hyrule
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b2d $BB1D FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b35 $BB25 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b3d $BB2D FF FF FF FF FF FF FF FF ;
bank5_Initial_Item_Presence_Bits_620_63F__DM__MI                               ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b45 $BB35 FF FF FF FF FF FF FF FF ;620-63F	;DM / MI
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b4d $BB3D FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b55 $BB45 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b5d $BB4D FF FF FF FF FF FF FF FF ;
bank5_Initial_Item_Presence_Bits_640_65F__East_Hyrule                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b65 $BB55 FF FF FF FF FF FF FF FF ;640-65F	;East Hyrule
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b6d $BB5D FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b75 $BB65 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b7d $BB6D FF FF FF FF FF FF FF FF ;
bank5_Initial_Item_Presence_Bits_660_67F__Towns                                ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b85 $BB75 FF FF FF FF FF FF FF FF ;660-67F	;Towns
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b8d $BB7D FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b95 $BB85 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17b9d $BB8D FF FF FF FF FF FF FF FF ;
bank5_Initial_Item_Presence_Bits_680_69F__Palaces_Type_A_1_2_5                 ;
.byt    $FB,$FF,$FF,$9B,$FD,$9F,$FF,$FA; 0x17ba5 $BB95 FB FF FF 9B FD 9F FF FA ;680-69F	;Palaces Type A (1,2,5)
.byt    $FF,$FB,$FD,$FF,$BF,$F9,$FF,$FF; 0x17bad $BB9D FF FB FD FF BF F9 FF FF ;
.byt    $FF,$FF,$FF,$BF,$EF,$AB,$FE,$EF; 0x17bb5 $BBA5 FF FF FF BF EF AB FE EF ;
.byt    $FF,$FD,$FD,$FF,$F9,$97,$9F,$BF; 0x17bbd $BBAD FF FD FD FF F9 97 9F BF ;
bank5_Initial_Item_Presence_Bits_6A0_6BF__Palaces_Type_B_3_4_6                 ;
.byt    $F5,$9F,$FB,$F5,$EF,$FF,$FB,$FF; 0x17bc5 $BBB5 F5 9F FB F5 EF FF FB FF ;6A0-6BF	;Palaces Type B (3,4,6)
.byt    $7F,$FF,$FF,$FF,$FF,$FF,$FF,$DF; 0x17bcd $BBBD 7F FF FF FF FF FF FF DF ;
.byt    $DF,$DF,$FB,$FD,$FB,$FF,$FF,$DF; 0x17bd5 $BBC5 DF DF FB FD FB FF FF DF ;
.byt    $F9,$FF,$EF,$FD,$FF,$F3,$FF,$DF; 0x17bdd $BBCD F9 FF EF FD FF F3 FF DF ;
bank5_Initial_Item_Presence_Bits_6C0_6DF__Great_Palace                         ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17be5 $BBD5 FF FF FF FF FF FF FF FF ;6C0-6DF	;Great Palace
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17bed $BBDD FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17bf5 $BBE5 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17bfd $BBED FF FF FF FF FF FF FF FF ;
bank5_Table_for_some_palettes                                                  ;
.byt    $3F,$00,$20,$0F,$30,$12,$16,$0F; 0x17c05 $BBF5 3F 00 20 0F 30 12 16 0F ;
.byt    $30,$30,$30,$0F,$30,$30,$30,$0F; 0x17c0d $BBFD 30 30 30 0F 30 30 30 0F ;
.byt    $30,$30,$30,$0F,$18,$36,$2A,$0F; 0x17c15 $BC05 30 30 30 0F 18 36 2A 0F ;
.byt    $16,$27,$30,$0F,$30,$30,$30,$0F; 0x17c1d $BC0D 16 27 30 0F 30 30 30 0F ;
.byt    $27,$27,$0F,$FF                ; 0x17c25 $BC15 27 27 0F FF             ;
bank5_Tables_for_Selection_Screen_Text_                                        ;
.byt    $20,$6A,$0B                    ; 0x17c29 $BC19 20 6A 0B                ;PPU Address 206A, transfer B bytes
                                                                               ;
.byt    $EC,$F4,$DE,$F4,$E5,$F4,$DE,$F4; 0x17c2c $BC1C EC F4 DE F4 E5 F4 DE F4 ;S E L E C T
.byt    $DC,$F4,$ED                    ; 0x17c34 $BC24 DC F4 ED                ;
                                                                               ;
.byt    $20,$82,$01,$CA                ; 0x17c37 $BC27 20 82 01 CA             ;Top-Left Corner of Frame
                                                                               ;
.byt    $20,$83,$5A,$CB                ; 0x17c3b $BC2B 20 83 5A CB             ;Repeat CB x 1A Horizontally - Top of Frame
                                                                               ;
.byt    $20,$9D,$01,$CA                ; 0x17c3f $BC2F 20 9D 01 CA             ;Top-Right Corner of Frame
                                                                               ;
.byt    $20,$A2,$D2,$CC                ; 0x17c43 $BC33 20 A2 D2 CC             ;Repeat CC x 12 Vertically - Left Side of Frame
                                                                               ;
.byt    $20,$BD,$D2,$CC                ; 0x17c47 $BC37 20 BD D2 CC             ;Repeat CC x 12 Vertically - Right Side of Frame
                                                                               ;
.byt    $20,$C7,$06,$F6,$E7,$DA,$E6,$DE; 0x17c4b $BC3B 20 C7 06 F6 E7 DA E6 DE ;-NAME-
.byt    $F6                            ; 0x17c53 $BC43 F6                      ;
                                                                               ;
.byt    $20,$D2,$07,$F6,$E5,$DE,$EF,$DE; 0x17c54 $BC44 20 D2 07 F6 E5 DE EF DE ;-LEVEL-
.byt    $E5,$F6                        ; 0x17c5c $BC4C E5 F6                   ;
                                                                               ;
.byt    $21,$10,$0B,$C9,$F6,$D0,$F4,$FA; 0x17c5e $BC4E 21 10 0B C9 F6 D0 F4 FA ;/-0.x.0.y.0 (Power/Magic/Life)
.byt    $F6,$D0,$F4,$F8,$F6,$D0        ; 0x17c66 $BC56 F6 D0 F4 F8 F6 D0       ;
                                                                               ;
.byt    $21,$70,$0B,$C9,$F6,$D0,$F4,$FA; 0x17c6c $BC5C 21 70 0B C9 F6 D0 F4 FA ;/-0.x.0.y.0 (Power/Magic/Life)
.byt    $F6,$D0,$F4,$F8,$F6,$D0        ; 0x17c74 $BC64 F6 D0 F4 F8 F6 D0       ;
                                                                               ;
.byt    $21,$D0,$0B,$C9,$F6,$D0,$F4,$FA; 0x17c7a $BC6A 21 D0 0B C9 F6 D0 F4 FA ;/-0.x.0.y.0 (Power/Magic/Life)
.byt    $F6,$D0,$F4,$F8,$F6,$D0        ; 0x17c82 $BC72 F6 D0 F4 F8 F6 D0       ;
                                                                               ;
.byt    $22,$46,$12,$EB,$DE,$E0,$E2,$EC; 0x17c88 $BC78 22 46 12 EB DE E0 E2 EC ;REGISTER YOUR NAME
.byt    $ED,$DE,$EB,$F4,$F2,$E8,$EE,$EB; 0x17c90 $BC80 ED DE EB F4 F2 E8 EE EB ;
.byt    $F4,$E7,$DA,$E6,$DE            ; 0x17c98 $BC88 F4 E7 DA E6 DE          ;
                                                                               ;
.byt    $21,$29,$03,$00,$00,$00        ; 0x17c9d $BC8D 21 29 03 00 00 00       ;
                                                                               ;
.byt    $21,$89,$03,$00,$00,$00        ; 0x17ca3 $BC93 21 89 03 00 00 00       ;
                                                                               ;
.byt    $21,$E9,$03,$00,$00,$00        ; 0x17ca9 $BC99 21 E9 03 00 00 00       ;
                                                                               ;
.byt    $22,$A6,$10                    ; 0x17caf $BC9F 22 A6 10                ;PPU address 22A6, transfer 10 bytes
                                                                               ;
.byt    $DE,$E5,$E2,$E6,$E2,$E7,$DA,$ED; 0x17cb2 $BCA2 DE E5 E2 E6 E2 E7 DA ED ;ELIMINATION MODE
.byt    $E2,$E8,$E7,$F4,$E6,$E8,$DD,$DE; 0x17cba $BCAA E2 E8 E7 F4 E6 E8 DD DE ;
                                                                               ;
.byt    $22,$E2,$01,$CA                ; 0x17cc2 $BCB2 22 E2 01 CA             ;Bottom-Left Corner of Frame
                                                                               ;
.byt    $22,$E3,$5A,$CB                ; 0x17cc6 $BCB6 22 E3 5A CB             ;Bottom of Frame
                                                                               ;
.byt    $22,$FD,$01,$CA                ; 0x17cca $BCBA 22 FD 01 CA             ;Bottom-Right Corner of Frame
                                                                               ;
.byt    $FF                            ; 0x17cce $BCBE FF                      ;
                                                                               ;
.byt    $20,$64,$58,$CB                ; 0x17ccf $BCBF 20 64 58 CB             ;
                                                                               ;
.byt    $20,$66,$14,$F4                ; 0x17cd3 $BCC3 20 66 14 F4             ;
                                                                               ;
.byt    $EB,$DE,$E0,$E2,$EC,$ED,$DE,$EB; 0x17cd7 $BCC7 EB DE E0 E2 EC ED DE EB ;REGISTER YOUR NAME 
.byt    $F4,$F2,$E8,$EE,$EB,$F4,$E7,$DA; 0x17cdf $BCCF F4 F2 E8 EE EB F4 E7 DA ;
.byt    $E6,$DE,$F4                    ; 0x17ce7 $BCD7 E6 DE F4                ;
                                                                               ;
.byt    $21,$ED,$03                    ; 0x17cea $BCDA 21 ED 03                ;
                                                                               ;
.byt    $DE,$E7,$DD                    ; 0x17ced $BCDD DE E7 DD                ;END
                                                                               ;
.byt    $22,$24,$01,$CA                ; 0x17cf0 $BCE0 22 24 01 CA             ;
                                                                               ;
.byt    $22,$25,$57,$CB                ; 0x17cf4 $BCE4 22 25 57 CB             ;
                                                                               ;
.byt    $22,$3C,$01,$CA                ; 0x17cf8 $BCE8 22 3C 01 CA             ;
                                                                               ;
.byt    $22,$44,$C7,$CC                ; 0x17cfc $BCEC 22 44 C7 CC             ;
                                                                               ;
.byt    $22,$5C,$C7,$CC                ; 0x17d00 $BCF0 22 5C C7 CC             ;
                                                                               ;
.byt    $23,$24,$01,$CA                ; 0x17d04 $BCF4 23 24 01 CA             ;
                                                                               ;
.byt    $23,$25,$57,$CB                ; 0x17d08 $BCF8 23 25 57 CB             ;
                                                                               ;
.byt    $23,$3C,$01,$CA                ; 0x17d0c $BCFC 23 3C 01 CA             ;
                                                                               ;
.byt    $22,$46,$15                    ; 0x17d10 $BD00 22 46 15                ;
                                                                               ;
.byt    $DA,$F4,$DB,$F4,$DC,$F4,$DD,$F4; 0x17d13 $BD03 DA F4 DB F4 DC F4 DD F4 ;A B C D E F G H I J K
.byt    $DE,$F4,$DF,$F4,$E0,$F4,$E1,$F4; 0x17d1b $BD0B DE F4 DF F4 E0 F4 E1 F4 ;
.byt    $E2,$F4,$E3,$F4,$E4            ; 0x17d23 $BD13 E2 F4 E3 F4 E4          ;
                                                                               ;
.byt    $22,$86,$15                    ; 0x17d28 $BD18 22 86 15                ;
                                                                               ;
.byt    $E5,$F4,$E6,$F4,$E7,$F4,$E8,$F4; 0x17d2b $BD1B E5 F4 E6 F4 E7 F4 E8 F4 ;L M N O P Q R S T U V
.byt    $E9,$F4,$EA,$F4,$EB,$F4,$EC,$F4; 0x17d33 $BD23 E9 F4 EA F4 EB F4 EC F4 ;
.byt    $ED,$F4,$EE,$F4,$EF            ; 0x17d3b $BD2B ED F4 EE F4 EF          ;
                                                                               ;
.byt    $22,$C6,$0B                    ; 0x17d40 $BD30 22 C6 0B                ;
                                                                               ;
.byt    $F0,$F4,$F1,$F4,$F2,$F4,$F3,$F4; 0x17d43 $BD33 F0 F4 F1 F4 F2 F4 F3 F4 ;W X Y Z - .
.byt    $F6,$F4,$CF                    ; 0x17d4b $BD3B F6 F4 CF                ;
                                                                               ;
.byt    $23,$06,$13                    ; 0x17d4e $BD3E 23 06 13                ;
                                                                               ;
.byt    $D0,$F4,$D1,$F4,$D2,$F4,$D3,$F4; 0x17d51 $BD41 D0 F4 D1 F4 D2 F4 D3 F4 ;0 1 2 3 4 5 6 7 8 9
.byt    $D4,$F4,$D5,$F4,$D6,$F4,$D7,$F4; 0x17d59 $BD49 D4 F4 D5 F4 D6 F4 D7 F4 ;
.byt    $D8,$F4,$D9                    ; 0x17d61 $BD51 D8 F4 D9                ;
                                                                               ;
.byt    $FF                            ; 0x17d64 $BD54 FF                      ;
                                                                               ;
.byt    $20,$64,$58,$CB                ; 0x17d65 $BD55 20 64 58 CB             ;
                                                                               ;
.byt    $20,$67,$12                    ; 0x17d69 $BD59 20 67 12                ;
                                                                               ;
.byt    $F4,$DE,$E5,$E2,$E6,$E2,$E7,$DA; 0x17d6c $BD5C F4 DE E5 E2 E6 E2 E7 DA ;ELIMINATION MODE 
.byt    $ED,$E2,$E8,$E7,$F4,$E6,$E8,$DD; 0x17d74 $BD64 ED E2 E8 E7 F4 E6 E8 DD ;
.byt    $DE,$F4                        ; 0x17d7c $BD6C DE F4                   ;
                                                                               ;
.byt    $21,$ED,$03                    ; 0x17d7e $BD6E 21 ED 03                ;
                                                                               ;
.byt    $DE,$E7,$DD                    ; 0x17d81 $BD71 DE E7 DD                ;
                                                                               ;
.byt    $FF                            ; 0x17d84 $BD74 FF                      ;
bank5_Table_for_Letters_Tile_Mappings                                          ;
.byt    $DA,$DB,$DC,$DD,$DE,$DF,$E0,$E1; 0x17d85 $BD75 DA DB DC DD DE DF E0 E1 ;ABCDEFGHIJK
.byt    $E2,$E3,$E4                    ; 0x17d8d $BD7D E2 E3 E4                ;
                                                                               ;
.byt    $E5,$E6,$E7,$E8,$E9,$EA,$EB,$EC; 0x17d90 $BD80 E5 E6 E7 E8 E9 EA EB EC ;LMNOPQRSTUV
.byt    $ED,$EE,$EF                    ; 0x17d98 $BD88 ED EE EF                ;
                                                                               ;
.byt    $F0,$F1,$F2,$F3,$F6,$CF,$00,$00; 0x17d9b $BD8B F0 F1 F2 F3 F6 CF 00 00 ;WXYZ-.     
.byt    $00,$00,$00                    ; 0x17da3 $BD93 00 00 00                ;
                                                                               ;
.byt    $D0,$D1,$D2,$D3,$D4,$D5,$D6,$D7; 0x17da6 $BD96 D0 D1 D2 D3 D4 D5 D6 D7 ;0123456789 
.byt    $D8,$D9,$F4                    ; 0x17dae $BD9E D8 D9 F4                ;
bank5_UNUSED_BDA1                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17db1 $BDA1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17db9 $BDA9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17dc1 $BDB1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17dc9 $BDB9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17dd1 $BDC1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17dd9 $BDC9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17de1 $BDD1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17de9 $BDD9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17df1 $BDE1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17df9 $BDE9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e01 $BDF1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e09 $BDF9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e11 $BE01 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e19 $BE09 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e21 $BE11 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e29 $BE19 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e31 $BE21 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e39 $BE29 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e41 $BE31 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e49 $BE39 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e51 $BE41 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e59 $BE49 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e61 $BE51 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e69 $BE59 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e71 $BE61 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e79 $BE69 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e81 $BE71 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e89 $BE79 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e91 $BE81 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17e99 $BE89 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ea1 $BE91 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ea9 $BE99 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17eb1 $BEA1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17eb9 $BEA9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ec1 $BEB1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ec9 $BEB9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ed1 $BEC1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ed9 $BEC9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ee1 $BED1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ee9 $BED9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ef1 $BEE1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ef9 $BEE9 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f01 $BEF1 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF    ; 0x17f09 $BEF9 FF FF FF FF FF FF FF    ;
LBF00                                                                          ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f10 $BF00 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f18 $BF08 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f20 $BF10 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f28 $BF18 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f30 $BF20 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f38 $BF28 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f40 $BF30 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f48 $BF38 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f50 $BF40 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f58 $BF48 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f60 $BF50 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17f68 $BF58 FF FF FF FF FF FF FF FF ;
bank5_table_Some_palettes                                                      ;
.byt    $0F,$30,$12,$16,$0F,$08,$28,$38; 0x17f70 $BF60 0F 30 12 16 0F 08 28 38 ;
.byt    $0F,$08,$16,$30,$0F,$3C,$1C,$0C; 0x17f78 $BF68 0F 08 16 30 0F 3C 1C 0C ;
; ---------------------------------------------------------------------------- ;
bank5_codeEND                                                                  ;
sei                                    ; 0x17f80 $BF70 78                      ;
cld                                    ; 0x17f81 $BF71 D8                      ;
ldx      #$00                          ; 0x17f82 $BF72 A2 00                   ; X = 00
stx      $2000                         ; 0x17f84 $BF74 8E 00 20                ;
inx                                    ; 0x17f87 $BF77 E8                      ;
LBF78                                                                          ;
lda      $2002                         ; 0x17f88 $BF78 AD 02 20                ;
bpl      LBF78                         ; 0x17f8b $BF7B 10 FB                   ;
dex                                    ; 0x17f8d $BF7D CA                      ;
beq      LBF78                         ; 0x17f8e $BF7E F0 F8                   ;
txs                                    ; 0x17f90 $BF80 9A                      ;
stx      bank5_nothing                 ; 0x17f91 $BF81 8E 00 80                ;
stx      LA000                         ; 0x17f94 $BF84 8E 00 A0                ;
stx      bank7_PowerON_code            ; 0x17f97 $BF87 8E 00 C0                ;
stx      LE000                         ; 0x17f9a $BF8A 8E 00 E0                ;
lda      #$0F                          ; 0x17f9d $BF8D A9 0F                   ; A = 0F
jsr      LBF9D                         ; 0x17f9f $BF8F 20 9D BF                ;
jsr      LBFB1                         ; 0x17fa2 $BF92 20 B1 BF                ;
lda      #$07                          ; 0x17fa5 $BF95 A9 07                   ; A = 07
jsr      LBFCC                         ; 0x17fa7 $BF97 20 CC BF                ;
jmp      bank7_PowerON_code            ; 0x17faa $BF9A 4C 00 C0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBF9D                                                                          ;
sta      bank5_nothing                 ; 0x17fad $BF9D 8D 00 80                ;
lsr                                    ; 0x17fb0 $BFA0 4A                      ;
sta      bank5_nothing                 ; 0x17fb1 $BFA1 8D 00 80                ;
lsr                                    ; 0x17fb4 $BFA4 4A                      ;
sta      bank5_nothing                 ; 0x17fb5 $BFA5 8D 00 80                ;
lsr                                    ; 0x17fb8 $BFA8 4A                      ;
sta      bank5_nothing                 ; 0x17fb9 $BFA9 8D 00 80                ;
lsr                                    ; 0x17fbc $BFAC 4A                      ;
sta      bank5_nothing                 ; 0x17fbd $BFAD 8D 00 80                ;
rts                                    ; 0x17fc0 $BFB0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LBFB1                                                                          ;
sta      LA000                         ; 0x17fc1 $BFB1 8D 00 A0                ;
lsr                                    ; 0x17fc4 $BFB4 4A                      ;
sta      LA000                         ; 0x17fc5 $BFB5 8D 00 A0                ;
lsr                                    ; 0x17fc8 $BFB8 4A                      ;
sta      LA000                         ; 0x17fc9 $BFB9 8D 00 A0                ;
lsr                                    ; 0x17fcc $BFBC 4A                      ;
sta      LA000                         ; 0x17fcd $BFBD 8D 00 A0                ;
lsr                                    ; 0x17fd0 $BFC0 4A                      ;
sta      LA000                         ; 0x17fd1 $BFC1 8D 00 A0                ;
rts                                    ; 0x17fd4 $BFC4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      #$00                          ; 0x17fd5 $BFC5 A9 00                   ; A = 00
beq      LBFCC                         ; 0x17fd7 $BFC7 F0 03                   ;
lda      $0769                         ; 0x17fd9 $BFC9 AD 69 07                ;; Bank to switch to (other than 0 or 7)
LBFCC                                                                          ;
sta      LE000                         ; 0x17fdc $BFCC 8D 00 E0                ;
lsr                                    ; 0x17fdf $BFCF 4A                      ;
sta      LE000                         ; 0x17fe0 $BFD0 8D 00 E0                ;
lsr                                    ; 0x17fe3 $BFD3 4A                      ;
sta      LE000                         ; 0x17fe4 $BFD4 8D 00 E0                ;
lsr                                    ; 0x17fe7 $BFD7 4A                      ;
sta      LE000                         ; 0x17fe8 $BFD8 8D 00 E0                ;
lsr                                    ; 0x17feb $BFDB 4A                      ;
sta      LE000                         ; 0x17fec $BFDC 8D 00 E0                ;
rts                                    ; 0x17fef $BFDF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank5_UNUSED_BFE0                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ff0 $BFE0 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x17ff8 $BFE8 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x18000 $BFF0 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF                        ; 0x18008 $BFF8 FF FF                   ;
bank5_NMI_Reset_and_Break_Vectors                                              ;
.byt    $7B,$C0,$70,$BF,$F0,$FF        ; 0x1800a $BFFA 7B C0 70 BF F0 FF       ;
; ---------------------------------------------------------------------------- ;
bank7_PowerON_code                                                             ;
lda      #$00                          ; 0x1c010 $C000 A9 00                   ; A = 00
sta      $2001                         ; 0x1c012 $C002 8D 01 20                ;
sta      $2000                         ; 0x1c015 $C005 8D 00 20                ;
lda      #$05                          ; 0x1c018 $C008 A9 05                   ;;A = #$05 0000_0101
jsr      LFFCC                         ; 0x1c01a $C00A 20 CC FF                ; Load Bank 5
jsr      bank5_PowerON__Reset_Memory   ; 0x1c01d $C00D 20 A0 A6                ;
LC010                                                                          ;
lda      $0736                         ; 0x1c020 $C010 AD 36 07                ; Game Mode
cmp      #$08                          ; 0x1c023 $C013 C9 08                   ;
beq      LC01B                         ; 0x1c025 $C015 F0 04                   ;
cmp      #$14                          ; 0x1c027 $C017 C9 14                   ;
bne      LC010                         ; 0x1c029 $C019 D0 F5                   ;
LC01B                                                                          ;
lda      $076C                         ; 0x1c02b $C01B AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
cmp      #$01                          ; 0x1c02e $C01E C9 01                   ;
bne      LC010                         ; 0x1c030 $C020 D0 EE                   ;
lda      #$40                          ; 0x1c032 $C022 A9 40                   ;;A = #$40 0100_0000
sta      $0100                         ; 0x1c034 $C024 8D 00 01                ;
jsr      bank7_code13                  ; 0x1c037 $C027 20 CB C4                ;
lda      #$C0                          ; 0x1c03a $C02A A9 C0                   ;;A = #$c0 1100_0000
sta      $0100                         ; 0x1c03c $C02C 8D 00 01                ;
jmp      LC010                         ; 0x1c03f $C02F 4C 10 C0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC032                                                                          ;
lda      #$06                          ; 0x1c042 $C032 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c044 $C034 20 CC FF                ;
jsr      bank5_nothing                 ; 0x1c047 $C037 20 00 80                ;
jmp      LC388                         ; 0x1c04a $C03A 4C 88 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_PPU_Adresses_according_to_725_as_index                                   ;
.word    L0302                         ; 0x1c04d $C03D 02 03                   ;; Used when writing text to screen
.word    L0363                         ; 0x1c04f $C03F 63 03                   ;
.word    L03A4                         ; 0x1c051 $C041 A4 03                   ;
.word    bank7_Table_for_some_Palettes ; 0x1c053 $C043 BD D0                   ;Some Palettes
.word    L696C                         ; 0x1c055 $C045 6C 69                   ;
.word    L80C9                         ; 0x1c057 $C047 C9 80                   ;Game Over Palettes
.word    LA836                         ; 0x1c059 $C049 36 A8                   ;Some Palettes
.word    bank7_Tables_for_some_PPU_Command_Data; 0x1c05b $C04B D1 D0           ;Some PPU Commands			;status bar text at top of screen ATTACK MAGIC LIFE ETC			;1C05B	is D1D0 ($D0D1)
.word    bank7_Continue_Save_Screen_Tile_Mappings; 0x1c05d $C04D CB FD         ;
.word    bank5_nothing                 ; 0x1c05f $C04F 00 80                   ;Game Over PPU Macros
.word    bank7_Table_for_Overworld_Palettes; 0x1c061 $C051 58 C4               ;Overworld Palettes
.word    bank7_PPU_Macros_for_Hidden_Palace; 0x1c063 $C053 6A DF               ;
.word    bank7_table9                  ; 0x1c065 $C055 49 C4                   ;
.word    bank7_table10                 ; 0x1c067 $C057 7C C4                   ;
.word    LC490                         ; 0x1c069 $C059 90 C4                   ;
.word    LDCD3                         ; 0x1c06b $C05B D3 DC                   ;
; ---------------------------------------------------------------------------- ;
bank7_table0                                                                   ;
.byt    $00,$61,$A2                    ; 0x1c06d $C05D 00 61 A2                ;Memory Addresses Offsets (from 301) for PPU Macro Commands ?
; ---------------------------------------------------------------------------- ;
bank7_code1                                                                    ;
pha                                    ; 0x1c070 $C060 48                      ;
txa                                    ; 0x1c071 $C061 8A                      ;
pha                                    ; 0x1c072 $C062 48                      ;
tya                                    ; 0x1c073 $C063 98                      ;
pha                                    ; 0x1c074 $C064 48                      ;
lda      #$06                          ; 0x1c075 $C065 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c077 $C067 20 CC FF                ; Load Bank 6
jsr      L9000                         ; 0x1c07a $C06A 20 00 90                ; Play Sounds
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c07d $C06D 20 C9 FF                ; Load Bank X at 0x8000 (X = $0769)
pla                                    ; 0x1c080 $C070 68                      ;
tay                                    ; 0x1c081 $C071 A8                      ;
pla                                    ; 0x1c082 $C072 68                      ;
tax                                    ; 0x1c083 $C073 AA                      ;
pla                                    ; 0x1c084 $C074 68                      ;
plp                                    ; 0x1c085 $C075 28                      ;
rti                                    ; 0x1c086 $C076 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC077                                                                          ;
plp                                    ; 0x1c087 $C077 28                      ;
jmp      LA610                         ; 0x1c088 $C078 4C 10 A6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_NMI_Entry_Point                                                          ;
php                                    ; 0x1c08b $C07B 08                      ;
bit      $0100                         ; 0x1c08c $C07C 2C 00 01                ;
bpl      bank7_code1                   ; 0x1c08f $C07F 10 DF                   ; Switch to Bank 6, Play Sounds
bvc      LC077                         ; 0x1c091 $C081 50 F4                   ;
plp                                    ; 0x1c093 $C083 28                      ;
pha                                    ; 0x1c094 $C084 48                      ;
lda      $FF                           ; 0x1c095 $C085 A5 FF                   ;; Sprite Bank ?
and      #$7C                          ; 0x1c097 $C087 29 7C                   ; keep bits .xxx xx..
ora      $0747                         ; 0x1c099 $C089 0D 47 07                ;
sta      $FF                           ; 0x1c09c $C08C 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c09e $C08E 8D 00 20                ; PPU Control Register 1
lda      $0727                         ; 0x1c0a1 $C091 AD 27 07                ;
beq      LC096                         ; 0x1c0a4 $C094 F0 00                   ; useless branching
LC096                                                                          ;
ldy      #$00                          ; 0x1c0a6 $C096 A0 00                   ; Y = 00
lda      $FE                           ; 0x1c0a8 $C098 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
and      #$E0                          ; 0x1c0aa $C09A 29 E0                   ; keep bits xxx. ....
ldy      $0726                         ; 0x1c0ac $C09C AC 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
bne      LC0A8                         ; 0x1c0af $C09F D0 07                   ;
lda      $FE                           ; 0x1c0b1 $C0A1 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
ora      #$18                          ; 0x1c0b3 $C0A3 09 18                   ; set bits  ...x x...
ora      $0768                         ; 0x1c0b5 $C0A5 0D 68 07                ;;makes weird ppu effect
LC0A8                                                                          ;
sta      $FE                           ; 0x1c0b8 $C0A8 85 FE                   ;;does interesting effects when changed, perhaps involves palette? 
and      #$E1                          ; 0x1c0ba $C0AA 29 E1                   ; keep bits xxx. ...x
sta      $2001                         ; 0x1c0bc $C0AC 8D 01 20                ; PPU Control Register 2
ldx      $2002                         ; 0x1c0bf $C0AF AE 02 20                ; PPU Status Register
lda      #$00                          ; 0x1c0c2 $C0B2 A9 00                   ; A = 00
sta      $2005                         ; 0x1c0c4 $C0B4 8D 05 20                ; Screen Scroll Offsets
sta      $2005                         ; 0x1c0c7 $C0B7 8D 05 20                ;
sta      $2003                         ; 0x1c0ca $C0BA 8D 03 20                ; Sprite Memory Address
lda      #$02                          ; 0x1c0cd $C0BD A9 02                   ; A = 02
sta      $4014                         ; 0x1c0cf $C0BF 8D 14 40                ; DMA Sprite Memory ($100 * 02)
lda      $07AE                         ; 0x1c0d2 $C0C2 AD AE 07                ;
beq      LC0CA                         ; 0x1c0d5 $C0C5 F0 03                   ;
jsr      bank7_code52                  ; 0x1c0d7 $C0C7 20 82 FD                ; related to palette loading (side view)
LC0CA                                                                          ;
lda      $0725                         ; 0x1c0da $C0CA AD 25 07                ;; PPU Macro Selector	
asl                                    ; 0x1c0dd $C0CD 0A                      ;
tax                                    ; 0x1c0de $C0CE AA                      ;
lda      bank7_PPU_Adresses_according_to_725_as_index,x; 0x1c0df $C0CF BD 3D C0; refer to table at $1C03D
sta      L0000                         ; 0x1c0e2 $C0D2 85 00                   ;
lda      bank7_PPU_Adresses_according_to_725_as_index+$01,x; 0x1c0e4 $C0D4 BD 3E C0; refer to table at $1C03D
sta      $01                           ; 0x1c0e7 $C0D7 85 01                   ;
jsr      LD2EC                         ; 0x1c0e9 $C0D9 20 EC D2                ;
lda      #$3F                          ; 0x1c0ec $C0DC A9 3F                   ; A = 3F
sta      $2006                         ; 0x1c0ee $C0DE 8D 06 20                ; PPU Memory Address
ldy      #$00                          ; 0x1c0f1 $C0E1 A0 00                   ; Y = 00
sty      $2006                         ; 0x1c0f3 $C0E3 8C 06 20                ; PPU Memory Address
sty      $2006                         ; 0x1c0f6 $C0E6 8C 06 20                ; PPU Memory Address
sty      $2006                         ; 0x1c0f9 $C0E9 8C 06 20                ; PPU Memory Address
lda      $0768                         ; 0x1c0fc $C0EC AD 68 07                ;;makes weird ppu effect
bne      LC103                         ; 0x1c0ff $C0EF D0 12                   ;
lda      $FF                           ; 0x1c101 $C0F1 A5 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c103 $C0F3 8D 00 20                ; PPU Control Register 1
ldx      $2002                         ; 0x1c106 $C0F6 AE 02 20                ; PPU Status Register
lda      $FD                           ; 0x1c109 $C0F9 A5 FD                   ;
sta      $2005                         ; 0x1c10b $C0FB 8D 05 20                ; Screen Scroll Offsets
lda      $FC                           ; 0x1c10e $C0FE A5 FC                   ;
sta      $2005                         ; 0x1c110 $C100 8D 05 20                ; Screen Scroll Offsets
LC103                                                                          ;
lda      $FE                           ; 0x1c113 $C103 A5 FE                   ;;does interesting effects when changed, perhaps involves palette? 
sta      $2001                         ; 0x1c115 $C105 8D 01 20                ; PPU Control Register 2
ldx      $0725                         ; 0x1c118 $C108 AE 25 07                ;; PPU Macro Selector	
beq      LC11C                         ; 0x1c11b $C10B F0 0F                   ;
iny                                    ; 0x1c11d $C10D C8                      ;
cpx      #$01                          ; 0x1c11e $C10E E0 01                   ;
beq      LC119                         ; 0x1c120 $C110 F0 07                   ;
iny                                    ; 0x1c122 $C112 C8                      ;
lda      #$00                          ; 0x1c123 $C113 A9 00                   ; A = 00
cpx      #$02                          ; 0x1c125 $C115 E0 02                   ;
bne      LC12C                         ; 0x1c127 $C117 D0 13                   ;
LC119                                                                          ;
dec      $0725                         ; 0x1c129 $C119 CE 25 07                ;; PPU Macro Selector	
LC11C                                                                          ;
ldx      bank7_table0,y                ; 0x1c12c $C11C BE 5D C0                ;
lda      #$00                          ; 0x1c12f $C11F A9 00                   ; A = 00
sta      $0301,x                       ; 0x1c131 $C121 9D 01 03                ;
lda      #$FF                          ; 0x1c134 $C124 A9 FF                   ; A = FF
sta      L0302,x                       ; 0x1c136 $C126 9D 02 03                ;
lda      $0725                         ; 0x1c139 $C129 AD 25 07                ;; PPU Macro Selector	
LC12C                                                                          ;
sta      $0725                         ; 0x1c13c $C12C 8D 25 07                ;; PPU Macro Selector	
jsr      bank7_related_to_sound        ; 0x1c13f $C12F 20 C1 C1                ; related to sound
lda      $F7                           ; 0x1c142 $C132 A5 F7                   ; Controller 1 Buttons Held
sta      $0744                         ; 0x1c144 $C134 8D 44 07                ;; Controller 1 Input; Controller 1 Buttons Held
jsr      bank7_Controllers_Input       ; 0x1c147 $C137 20 46 D3                ; Controllers Input
lda      $DE                           ; 0x1c14a $C13A A5 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
beq      LC146                         ; 0x1c14c $C13C F0 08                   ;
lda      $0763                         ; 0x1c14e $C13E AD 63 07                ;; Counter for Big Door in Hidden Kasuto
ora      $0764                         ; 0x1c151 $C141 0D 64 07                ;; Counter for Big Door in Hidden Kasuto
bne      LC14E                         ; 0x1c154 $C144 D0 08                   ;
LC146                                                                          ;
lda      $0729                         ; 0x1c156 $C146 AD 29 07                ;
beq      LC14E                         ; 0x1c159 $C149 F0 03                   ;
jsr      bank7_related_to_Pause_Pane_routine; 0x1c15b $C14B 20 CD C1           ; related to Pause Pane routine
LC14E                                                                          ;
lda      $074C                         ; 0x1c15e $C14E AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
beq      LC164                         ; 0x1c161 $C151 F0 11                   ;
cmp      #$02                          ; 0x1c163 $C153 C9 02                   ;
bcc      LC1A8                         ; 0x1c165 $C155 90 51                   ;
lda      $0524                         ; 0x1c167 $C157 AD 24 05                ; Routine Index
cmp      #$03                          ; 0x1c16a $C15A C9 03                   ;
bcc      LC169                         ; 0x1c16c $C15C 90 0B                   ;
cmp      #$07                          ; 0x1c16e $C15E C9 07                   ;
bcs      LC169                         ; 0x1c170 $C160 B0 07                   ;
bcc      LC1A8                         ; 0x1c172 $C162 90 44                   ;
LC164                                                                          ;
lda      $0524                         ; 0x1c174 $C164 AD 24 05                ; Routine Index
bne      LC1A8                         ; 0x1c177 $C167 D0 3F                   ;
LC169                                                                          ;
ldx      #$0C                          ; 0x1c179 $C169 A2 0C                   ; X = 0C
dec      $0500                         ; 0x1c17b $C16B CE 00 05                ;; Timer frequency		;?Invincibility after stun counter (counts down, nonzero = invincible)
bpl      LC177                         ; 0x1c17e $C16E 10 07                   ;
lda      #$14                          ; 0x1c180 $C170 A9 14                   ; A = 14
sta      $0500                         ; 0x1c182 $C172 8D 00 05                ;; Timer frequency		;?Invincibility after stun counter (counts down, nonzero = invincible)
ldx      #$18                          ; 0x1c185 $C175 A2 18                   ; X = 18
LC177                                                                          ;
lda      $0501,x                       ; 0x1c187 $C177 BD 01 05                ;
beq      LC17F                         ; 0x1c18a $C17A F0 03                   ;
dec      $0501,x                       ; 0x1c18c $C17C DE 01 05                ; decrease all 5xx timers (if > 0)
LC17F                                                                          ;
dex                                    ; 0x1c18f $C17F CA                      ;
bpl      LC177                         ; 0x1c190 $C180 10 F5                   ;
inc       !$12                         ; 0x1c192 $C182 EE 12 00                ;
ldx      #$00                          ; 0x1c195 $C185 A2 00                   ; X = 00
ldy      #$09                          ; 0x1c197 $C187 A0 09                   ; Y = 09
lda      $051A                         ; 0x1c199 $C189 AD 1A 05                ;
and      #$02                          ; 0x1c19c $C18C 29 02                   ; keep bits .... ..x.
sta      L0000                         ; 0x1c19e $C18E 85 00                   ;
lda      $051B                         ; 0x1c1a0 $C190 AD 1B 05                ;
and      #$02                          ; 0x1c1a3 $C193 29 02                   ; keep bits .... ..x.
eor      L0000                         ; 0x1c1a5 $C195 45 00                   ;
clc                                    ; 0x1c1a7 $C197 18                      ;
beq      LC19B                         ; 0x1c1a8 $C198 F0 01                   ;
sec                                    ; 0x1c1aa $C19A 38                      ;
LC19B                                                                          ;
ror      $051A,x                       ; 0x1c1ab $C19B 7E 1A 05                ;
inx                                    ; 0x1c1ae $C19E E8                      ;
dey                                    ; 0x1c1af $C19F 88                      ;
bne      LC19B                         ; 0x1c1b0 $C1A0 D0 F9                   ;
jsr      bank7_Remove_All_Sprites_except_Sprite0; 0x1c1b2 $C1A2 20 50 D2       ; Remove All Sprites, except Sprite 0
jsr      LC2CA                         ; 0x1c1b5 $C1A5 20 CA C2                ;
LC1A8                                                                          ;
lda      $2002                         ; 0x1c1b8 $C1A8 AD 02 20                ; PPU Status Register
lda      $FF                           ; 0x1c1bb $C1AB A5 FF                   ;; Sprite Bank ?
ora      #$80                          ; 0x1c1bd $C1AD 09 80                   ; set bits  x... ....
sta      $FF                           ; 0x1c1bf $C1AF 85 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c1c1 $C1B1 8D 00 20                ; PPU Status Register
pla                                    ; 0x1c1c4 $C1B4 68                      ;
rti                                    ; 0x1c1c5 $C1B5 40                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_code2                                                                    ;
lda      $07AB                         ; 0x1c1c6 $C1B6 AD AB 07                ;
clc                                    ; 0x1c1c9 $C1B9 18                      ;
adc      #$D8                          ; 0x1c1ca $C1BA 69 D8                   ;
sta      $07AB                         ; 0x1c1cc $C1BC 8D AB 07                ;
bcc      LC1CC                         ; 0x1c1cf $C1BF 90 0B                   ;
bank7_related_to_sound                                                         ;
lda      #$06                          ; 0x1c1d1 $C1C1 A9 06                   ; A = 06
jsr      LFFCC                         ; 0x1c1d3 $C1C3 20 CC FF                ; bank switch routine
jsr      L9000                         ; 0x1c1d6 $C1C6 20 00 90                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1c1d9 $C1C9 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1CC                                                                          ;
rts                                    ; 0x1c1dc $C1CC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_related_to_Pause_Pane_routine                                            ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c1dd $C1CD 20 C5 FF                ; Load Bank 0
lda      $0736                         ; 0x1c1e0 $C1D0 AD 36 07                ; Game Mode
cmp      #$0B                          ; 0x1c1e3 $C1D3 C9 0B                   ; 0B = sidescroll mode
bne      LC220                         ; 0x1c1e5 $C1D5 D0 49                   ;
jsr      LC1DD                         ; 0x1c1e7 $C1D7 20 DD C1                ;
jmp      bank7_Load_Bank_769_at_0x8000 ; 0x1c1ea $C1DA 4C C9 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC1DD                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1c1ed $C1DD 20 30 CF; Region Code * 5 + World Code
cmp      #$01                          ; 0x1c1f0 $C1E0 C9 01                   ;
bne      LC206                         ; 0x1c1f2 $C1E2 D0 22                   ;
lda      $056B                         ; 0x1c1f4 $C1E4 AD 6B 05                ; Town Code
cmp      #$02                          ; 0x1c1f7 $C1E7 C9 02                   ;
bne      LC206                         ; 0x1c1f9 $C1E9 D0 1B                   ;
lda      $0561                         ; 0x1c1fb $C1EB AD 61 05                ; Area Code
cmp      #$06                          ; 0x1c1fe $C1EE C9 06                   ;
bne      LC206                         ; 0x1c200 $C1F0 D0 14                   ;
lda      $3B                           ; 0x1c202 $C1F2 A5 3B                   ; Link's X Position (high byte)
cmp      #$02                          ; 0x1c204 $C1F4 C9 02                   ;
bcc      LC206                         ; 0x1c206 $C1F6 90 0E                   ;
lda      $0796                         ; 0x1c208 $C1F8 AD 96 07                ; Down/Up Techs (and other things)
lsr                                    ; 0x1c20b $C1FB 4A                      ;
bcc      LC206                         ; 0x1c20c $C1FC 90 08                   ;
lda      #$01                          ; 0x1c20e $C1FE A9 01                   ; A = 01
sta      $0524                         ; 0x1c210 $C200 8D 24 05                ; Routine Index
jmp      LA7AB                         ; 0x1c213 $C203 4C AB A7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC206                                                                          ;
lda      $0524                         ; 0x1c216 $C206 AD 24 05                ; Routine Index
beq      LC218                         ; 0x1c219 $C209 F0 0D                   ;
lda      $074C                         ; 0x1c21b $C20B AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cmp      #$02                          ; 0x1c21e $C20E C9 02                   ;
bcs      LC218                         ; 0x1c220 $C210 B0 06                   ;
jsr      bank7_Remove_All_Sprites_except_Sprite0; 0x1c222 $C212 20 50 D2       ; Remove All Sprites, except Sprite 0
jsr      L968D                         ; 0x1c225 $C215 20 8D 96                ;
LC218                                                                          ;
lda      $074C                         ; 0x1c228 $C218 AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
bne      bank7_code3                   ; 0x1c22b $C21B D0 16                   ;
jmp      L9D91                         ; 0x1c22d $C21D 4C 91 9D                ;jump from bank 7 to bank 0 for controller input, but this only occurs for side scroll mode
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC220                                                                          ;
lda      $0524                         ; 0x1c230 $C220 AD 24 05                ; Routine Index
ldy      $0567                         ; 0x1c233 $C223 AC 67 05                ; Related to Flute in Overworld
bne      LC23A                         ; 0x1c236 $C226 D0 12                   ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c238 $C228 20 85 D3;
bank7_pointer_table0                                                           ;
.word    LA256                         ; 0x1c23b $C22B 56 A2                   ;
.word    LA30F                         ; 0x1c23d $C22D 0F A3                   ;
.word    LA19C                         ; 0x1c23f $C22F 9C A1                   ;
.word    LA334                         ; 0x1c241 $C231 34 A3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code3                                                                    ;
cmp      #$02                          ; 0x1c243 $C233 C9 02                   ;
bcs      bank7_pointer_table1+$08      ; 0x1c245 $C235 B0 0E                   ;
jmp      L9D54                         ; 0x1c247 $C237 4C 54 9D                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC23A                                                                          ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c24a $C23A 20 85 D3;
bank7_pointer_table1                                                           ;
.word    LA199                         ; 0x1c24d $C23D 99 A1                   ;
.word    LA315                         ; 0x1c24f $C23F 15 A3                   ;
.word    LA329                         ; 0x1c251 $C241 29 A3                   ;
.word    LA338                         ; 0x1c253 $C243 38 A3                   ;
.word    L05C9                         ; 0x1c255 $C245 C9 05                   ;
.word    LD7B0                         ; 0x1c257 $C247 B0 D7                   ;
; ---------------------------------------------------------------------------- ;
bank7_code4                                                                    ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c259 $C249 20 C9 FF                ; Load Bank $0769
jmp      LB082                         ; 0x1c25c $C24C 4C 82 B0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c25f $C24F 20 C9 FF                ; Load Bank $0769
jsr      LC258                         ; 0x1c262 $C252 20 58 C2                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1c265 $C255 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC258                                                                          ;
lda      (L000E),y                     ; 0x1c268 $C258 B1 0E                   ;
sta      $053E,x                       ; 0x1c26a $C25A 9D 3E 05                ;; Tiles for Dialog Box Rows
iny                                    ; 0x1c26d $C25D C8                      ;
lda      (L000E),y                     ; 0x1c26e $C25E B1 0E                   ;
sta      $054C,x                       ; 0x1c270 $C260 9D 4C 05                ;; Tiles for Dialog Box Rows
inx                                    ; 0x1c273 $C263 E8                      ;
rts                                    ; 0x1c274 $C264 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Pointer_table_for_Item_Presence                                          ;
.word    L0600                         ; 0x1c275 $C265 00 06                   ;West Hyrule
.word    L0660                         ; 0x1c277 $C267 60 06                   ;Towns in West Hyrule
.word    L0660                         ; 0x1c279 $C269 60 06                   ;
.word    L0680                         ; 0x1c27b $C26B 80 06                   ;Palace 1 / Palace 2
.word    L06A0                         ; 0x1c27d $C26D A0 06                   ;Palace 3
.word    L0620                         ; 0x1c27f $C26F 20 06                   ;Death Mountain / Maze Island
.word    L0660                         ; 0x1c281 $C271 60 06                   ;
.word    L0660                         ; 0x1c283 $C273 60 06                   ;
.word    L0680                         ; 0x1c285 $C275 80 06                   ;
.word    L06A0                         ; 0x1c287 $C277 A0 06                   ;Palace 4
.word    L0640                         ; 0x1c289 $C279 40 06                   ;East Hyrule
.word    L0660                         ; 0x1c28b $C27B 60 06                   ;
.word    L0660                         ; 0x1c28d $C27D 60 06                   ;Towns in East Hyrule
.word    L0680                         ; 0x1c28f $C27F 80 06                   ;Palace 5
.word    L06A0                         ; 0x1c291 $C281 A0 06                   ;Palace 6
.word    L06C0                         ; 0x1c293 $C283 C0 06                   ;Palace 7
; ---------------------------------------------------------------------------- ;
bank7_Tables_for_Various_Bitmasks1                                             ;
.byt    $F7,$FB,$FD,$FE                ; 0x1c295 $C285 F7 FB FD FE             ;
LC289                                                                          ;
.byt    $7F,$BF,$DF,$EF                ; 0x1c299 $C289 7F BF DF EF             ;
LC28D                                                                          ;
.byt    $08,$04,$02,$01                ; 0x1c29d $C28D 08 04 02 01             ;
LC291                                                                          ;
.byt    $80,$40,$20,$10                ; 0x1c2a1 $C291 80 40 20 10             ;
; ---------------------------------------------------------------------------- ;
Set_Item_RAM_bit_to_0__Bits_0_3                                                ;
jsr      LC2B3                         ; 0x1c2a5 $C295 20 B3 C2                ;
bcc      Set_Item_RAM_bit_to_0__Bits_4_7; 0x1c2a8 $C298 90 06                  ;
and      bank7_Tables_for_Various_Bitmasks1,x; 0x1c2aa $C29A 3D 85 C2          ;
sta      (L0000),y                     ; 0x1c2ad $C29D 91 00                   ;
rts                                    ; 0x1c2af $C29F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
Set_Item_RAM_bit_to_0__Bits_4_7                                                ;
and      LC289,x                       ; 0x1c2b0 $C2A0 3D 89 C2                ;
sta      (L0000),y                     ; 0x1c2b3 $C2A3 91 00                   ;
rts                                    ; 0x1c2b5 $C2A5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2A6                                                                          ;
jsr      LC2B3                         ; 0x1c2b6 $C2A6 20 B3 C2                ;
bcc      LC2AF                         ; 0x1c2b9 $C2A9 90 04                   ;
and      LC28D,x                       ; 0x1c2bb $C2AB 3D 8D C2                ;
rts                                    ; 0x1c2be $C2AE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2AF                                                                          ;
and      LC291,x                       ; 0x1c2bf $C2AF 3D 91 C2                ;
rts                                    ; 0x1c2c2 $C2B2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2B3                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1c2c3 $C2B3 20 30 CF; Region Code * 5 + World Code
asl                                    ; 0x1c2c6 $C2B6 0A                      ;
tay                                    ; 0x1c2c7 $C2B7 A8                      ;
lda      bank7_Pointer_table_for_Item_Presence,y; 0x1c2c8 $C2B8 B9 65 C2       ;
sta      L0000                         ; 0x1c2cb $C2BB 85 00                   ;
lda      bank7_Pointer_table_for_Item_Presence+$01,y; 0x1c2cd $C2BD B9 66 C2   ;
sta      $01                           ; 0x1c2d0 $C2C0 85 01                   ;
lda      $0561                         ; 0x1c2d2 $C2C2 AD 61 05                ; Area Code
lsr                                    ; 0x1c2d5 $C2C5 4A                      ; 4 bits per Area for Items
tay                                    ; 0x1c2d6 $C2C6 A8                      ;
lda      (L0000),y                     ; 0x1c2d7 $C2C7 B1 00                   ;
rts                                    ; 0x1c2d9 $C2C9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC2CA                                                                          ;
ldy      #$00                          ; 0x1c2da $C2CA A0 00                   ; Y = 00
sty      $0727                         ; 0x1c2dc $C2CC 8C 27 07                ;
sty      $0729                         ; 0x1c2df $C2CF 8C 29 07                ;
jsr      LD174                         ; 0x1c2e2 $C2D2 20 74 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c2e5 $C2D5 20 85 D3;
bank7_pointer_table2                                                           ;
.word    LC34F                         ; 0x1c2e8 $C2D8 4F C3                   ;
.word    bank7_code5                   ; 0x1c2ea $C2DA E6 C2                   ;
.word    bank7_code6                   ; 0x1c2ec $C2DC 1E C3                   ;
.word    LCB27                         ; 0x1c2ee $C2DE 27 CB                   ;
.word    LC364                         ; 0x1c2f0 $C2E0 64 C3                   ;
.word    LC38D                         ; 0x1c2f2 $C2E2 8D C3                   ;
.word    LC410                         ; 0x1c2f4 $C2E4 10 C4                   ;
; ---------------------------------------------------------------------------- ;
bank7_code5                                                                    ;
jsr      LD168                         ; 0x1c2f6 $C2E6 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c2f9 $C2E9 20 85 D3;
bank7_pointer_table__game_mode                                                 ;
;Probably Bank 0 for addresses in the 8000-BFFF range                          ;
.word    bank7_code18                  ; 0x1c2fc $C2EC 40 CD                   ; 00	Load ROM bank, Overworld data, enemy data, etc.  
.word    bank7_go_outside              ; 0x1c2fe $C2EE B3 CC                   ; 01	Overworld Out of Area ?
.word    L8149                         ; 0x1c300 $C2F0 49 81                   ; 02	Overworld Init
.word    L87F3                         ; 0x1c302 $C2F2 F3 87                   ; 03	Overworld Load Map Tiles
.word    LC72D                         ; 0x1c304 $C2F4 2D C7                   ; 04	Set $0726 to 0 and Increment Game Mode
.word    L8558                         ; 0x1c306 $C2F6 58 85                   ; 05	Overworld Main
.word    bank7_code17                  ; 0x1c308 $C2F8 35 CB                   ; 06	Load Side View Area
.word    bank7_code12                  ; 0x1c30a $C2FA A4 C4                   ; 07	Set Routine Index to 0 and Increment Game Mode
.word    LC6EE                         ; 0x1c30c $C2FC EE C6                   ; 08	RTS
.word    LCF3C                         ; 0x1c30e $C2FE 3C CF                   ; 09	Side View Area Drawing Init
.word    LC62F                         ; 0x1c310 $C300 2F C6                   ; 0A	Switch Graphics Bank, Load Bank 0, Side View Init
.word    bank7_check_if_link_died_0494__linkdeath; 0x1c312 $C302 CC D3         ; 0B	Side View Main
.word    LC68A                         ; 0x1c314 $C304 8A C6                   ; 0C	Fall in Hole Init
.word    LA82A                         ; 0x1c316 $C306 2A A8                   ; 0D	Fall in Hole Tile Setup
.word    bank7_Related_to_Link_falling ; 0x1c318 $C308 EF C6                   ; 0E	Fall in Hole Setup
.word    L8FB7                         ; 0x1c31a $C30A B7 8F                   ; 0F	Fall in Hole Main
.word    bank7_take_side_exit          ; 0x1c31c $C30C 4C CF                   ; 10
.word    bank7_code9                   ; 0x1c31e $C30E 97 C3                   ; 11
.word    LC63E                         ; 0x1c320 $C310 3E C6                   ; 12	Increment Game Mode and execute Game Mode 0C
.word    bank7_take_elevator_exit      ; 0x1c322 $C312 44 C6                   ; 13
.word    LC6EE                         ; 0x1c324 $C314 EE C6                   ; 14	RTS
.word    LC70C                         ; 0x1c326 $C316 0C C7                   ; 15
.word    bank7_take_door_exit          ; 0x1c328 $C318 FC CF                   ; 16	Enter Door in Town
.word    L81B1                         ; 0x1c32a $C31A B1 81                   ; 17	Raft Travel Init
.word    L8207                         ; 0x1c32c $C31C 07 82                   ; 18	Raft Travel
; ---------------------------------------------------------------------------- ;
bank7_code6                                                                    ;
jsr      LD168                         ; 0x1c32e $C31E 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c331 $C321 20 85 D3;
bank7_pointer_table4                                                           ;
.word    LC722                         ; 0x1c334 $C324 22 C7                   ;
.word    LD042                         ; 0x1c336 $C326 42 D0                   ;
.word    flashing_effect__length__when_link_dies; 0x1c338 $C328 1A C7          ;
.word    LC9EE                         ; 0x1c33a $C32A EE C9                   ;
.word    LCA1B                         ; 0x1c33c $C32C 1B CA                   ;
.word    LC722                         ; 0x1c33e $C32E 22 C7                   ;
.word    LD04D                         ; 0x1c340 $C330 4D D0                   ;
.word    LC72D                         ; 0x1c342 $C332 2D C7                   ;
.word    LCF05                         ; 0x1c344 $C334 05 CF                   ; Increment Game Mode by 1
.word    LCA85                         ; 0x1c346 $C336 85 CA                   ;
.word    bank7_code53                  ; 0x1c348 $C338 76 FE                   ;
.word    bank7_code7                   ; 0x1c34a $C33A 3C C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code7                                                                    ;
lda      #$05                          ; 0x1c34c $C33C A9 05                   ; A = 05
jsr      LFFCC                         ; 0x1c34e $C33E 20 CC FF                ;
jsr      bank7_chr_bank_switch__load_A ; 0x1c351 $C341 20 B1 FF                ;
lda      #$80                          ; 0x1c354 $C344 A9 80                   ; A = 80
sta      $0100                         ; 0x1c356 $C346 8D 00 01                ;
lda      #$00                          ; 0x1c359 $C349 A9 00                   ; A = 00
sta      $076C                         ; 0x1c35b $C34B 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x1c35e $C34E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC34F                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c35f $C34F 20 C5 FF                ;
jsr      LD293                         ; 0x1c362 $C352 20 93 D2                ;
jsr      LAA08                         ; 0x1c365 $C355 20 08 AA                ;
bank7_Reset_Number_of_Lives__to_3_                                             ;
lda      #$03                          ; 0x1c368 $C358 A9 03                   ; A = 03
sta      $0700                         ; 0x1c36a $C35A 8D 00 07                ; Current number of lives
inc      $0760                         ; 0x1c36d $C35D EE 60 07                ;
LC360                                                                          ;
inc      $076C                         ; 0x1c370 $C360 EE 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
rts                                    ; 0x1c373 $C363 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC364                                                                          ;
jsr      LD168                         ; 0x1c374 $C364 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c377 $C367 20 85 D3;
bank7_pointer_table5                                                           ;
.word    bank7_code8                   ; 0x1c37a $C36A 76 C3                   ;
.word    bank7_code13                  ; 0x1c37c $C36C CB C4                   ;
.word    LCF3C                         ; 0x1c37e $C36E 3C CF                   ;
.word    LC37C                         ; 0x1c380 $C370 7C C3                   ;
.word    LC62F                         ; 0x1c382 $C372 2F C6                   ;
.word    LC382                         ; 0x1c384 $C374 82 C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code8                                                                    ;
jsr      LC388                         ; 0x1c386 $C376 20 88 C3                ;
jmp      bank5_routines_related_to_Ending_sequence; 0x1c389 $C379 4C 50 8B     ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC37C                                                                          ;
jsr      LC388                         ; 0x1c38c $C37C 20 88 C3                ;
jmp      L8B69                         ; 0x1c38f $C37F 4C 69 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC382                                                                          ;
jsr      LC388                         ; 0x1c392 $C382 20 88 C3                ;
jmp      bank5_code4                   ; 0x1c395 $C385 4C BF 8B                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC388                                                                          ;
lda      #$05                          ; 0x1c398 $C388 A9 05                   ; A = 05
jmp      LFFCC                         ; 0x1c39a $C38A 4C CC FF                ; Switch to Bank 5
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC38D                                                                          ;
jsr      LD168                         ; 0x1c39d $C38D 20 68 D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c3a0 $C390 20 85 D3;
bank7_pointer_table6                                                           ;
.word    LCD19                         ; 0x1c3a3 $C393 19 CD                   ;
.word    bank7_code7                   ; 0x1c3a5 $C395 3C C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code9                                                                    ;
jsr      LD15C                         ; 0x1c3a7 $C397 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c3aa $C39A 20 85 D3;
; Pointer table for "Ready..." Screen Routines (4 * 2 = 8 bytes)               ;
; Uses Routine Index $0738                                                     ;
bank7_pointer_table7                                                           ;
.word    bank7_code10                  ; 0x1c3ad $C39D A5 C3                   ;
.word    bank7_Load_Lives_Remaining_Screen; 0x1c3af $C39F B5 C3                ;
.word    LC3E6                         ; 0x1c3b1 $C3A1 E6 C3                   ;
.word    LC3ED                         ; 0x1c3b3 $C3A3 ED C3                   ;
; ---------------------------------------------------------------------------- ;
bank7_code10                                                                   ;
lda      #$0C                          ; 0x1c3b5 $C3A5 A9 0C                   ; A = 0C
sta      $0725                         ; 0x1c3b7 $C3A7 8D 25 07                ;; PPU Macro Selector	
lda      #$00                          ; 0x1c3ba $C3AA A9 00                   ; A = 00
sta      $0760                         ; 0x1c3bc $C3AC 8D 60 07                ;
inc      $0726                         ; 0x1c3bf $C3AF EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LC3E2                         ; 0x1c3c2 $C3B2 4C E2 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Load_Lives_Remaining_Screen                                              ;
lda      $076E                         ; 0x1c3c5 $C3B5 AD 6E 07                ; Graphics bank to use
jsr      bank7_chr_bank_switch__load_A ; 0x1c3c8 $C3B8 20 B1 FF                ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1c3cb $C3BB 20 66 D2;
ldy      #$13                          ; 0x1c3ce $C3BE A0 13                   ; Y = 13
LC3C0                                                                          ;
lda      $6958,y                       ; 0x1c3d0 $C3C0 B9 58 69                ;
sta      L0302,y                       ; 0x1c3d3 $C3C3 99 02 03                ;
dey                                    ; 0x1c3d6 $C3C6 88                      ;
bpl      LC3C0                         ; 0x1c3d7 $C3C7 10 F7                   ;
ldy      #$07                          ; 0x1c3d9 $C3C9 A0 07                   ; Y = 07
LC3CB                                                                          ;
lda      $07A1,y                       ; 0x1c3db $C3CB B9 A1 07                ;
sta      $0305,y                       ; 0x1c3de $C3CE 99 05 03                ;
dey                                    ; 0x1c3e1 $C3D1 88                      ;
bpl      LC3CB                         ; 0x1c3e2 $C3D2 10 F7                   ;
lda      $0700                         ; 0x1c3e4 $C3D4 AD 00 07                ; Current number of lives
clc                                    ; 0x1c3e7 $C3D7 18                      ;
adc      #$D0                          ; 0x1c3e8 $C3D8 69 D0                   ;
sta      $0314                         ; 0x1c3ea $C3DA 8D 14 03                ;
lda      #$70                          ; 0x1c3ed $C3DD A9 70                   ; A = 70
sta      $0501                         ; 0x1c3ef $C3DF 8D 01 05                ; delay for screen showing up
LC3E2                                                                          ;
inc      $0738                         ; 0x1c3f2 $C3E2 EE 38 07                ;
rts                                    ; 0x1c3f5 $C3E5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC3E6                                                                          ;
lda      #$00                          ; 0x1c3f6 $C3E6 A9 00                   ; A = 00
sta      $0726                         ; 0x1c3f8 $C3E8 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
beq      LC3E2                         ; 0x1c3fb $C3EB F0 F5                   ;
LC3ED                                                                          ;
lda      $0501                         ; 0x1c3fd $C3ED AD 01 05                ;; Timer
bne      LC3F5                         ; 0x1c400 $C3F0 D0 03                   ;while timer continues, display screen, otherwise increment game mode to resume gameplay
inc      $0736                         ; 0x1c402 $C3F2 EE 36 07                ;; Game Mode ; screen intro type
LC3F5                                                                          ;
lda      #$50                          ; 0x1c405 $C3F5 A9 50                   ; A = 50
sta      $29                           ; 0x1c407 $C3F7 85 29                   ; Link's Y Position (on "Get Ready" screen)
lda      #$78                          ; 0x1c409 $C3F9 A9 78                   ; A = 78
sta      $CC                           ; 0x1c40b $C3FB 85 CC                   ; Link's X Position on Screen
lda      #$03                          ; 0x1c40d $C3FD A9 03                   ; A = 03
sta      $80                           ; 0x1c40f $C3FF 85 80                   ; Current Animation Frame for Link
lsr                                    ; 0x1c411 $C401 4A                      ;
sta      $9F                           ; 0x1c412 $C402 85 9F                   ; Direction arrow pressed (1 = right, 2 = left)
lsr                                    ; 0x1c414 $C404 4A                      ;
sta      $C8                           ; 0x1c415 $C405 85 C8                   ;; go outside: set $c8 to 3
sta      $13                           ; 0x1c417 $C407 85 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      $11                           ; 0x1c419 $C409 85 11                   ;
sta      $90                           ; 0x1c41b $C40B 85 90                   ;
jmp      LEC02                         ; 0x1c41d $C40D 4C 02 EC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC410                                                                          ;
jsr      LD15C                         ; 0x1c420 $C410 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c423 $C413 20 85 D3;
bank7_pointer_table8                                                           ;
.word    bank7_code10                  ; 0x1c426 $C416 A5 C3                   ;
.word    bank7_Load_Lives_Remaining_Screen; 0x1c428 $C418 B5 C3                ;
.word    LC3E6                         ; 0x1c42a $C41A E6 C3                   ;
.word    bank7_code11                  ; 0x1c42c $C41C 1E C4                   ;
; ---------------------------------------------------------------------------- ;
bank7_code11                                                                   ;
lda      $0501                         ; 0x1c42e $C41E AD 01 05                ;; Timer
bne      LC446                         ; 0x1c431 $C421 D0 23                   ;
lda      #$02                          ; 0x1c433 $C423 A9 02                   ; A = 02
ldy      $0707                         ; 0x1c435 $C425 AC 07 07                ; Current World
beq      LC435                         ; 0x1c438 $C428 F0 0B                   ;
cpy      #$03                          ; 0x1c43a $C42A C0 03                   ;
bcs      LC436                         ; 0x1c43c $C42C B0 08                   ;
ldy      $056B                         ; 0x1c43e $C42E AC 6B 05                ;; Town Code	;used by wise man to pick magic to give?
cpy      #$07                          ; 0x1c441 $C431 C0 07                   ;
bne      LC436                         ; 0x1c443 $C433 D0 01                   ;
LC435                                                                          ;
asl                                    ; 0x1c445 $C435 0A                      ;
LC436                                                                          ;
sta      $075F                         ; 0x1c446 $C436 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
lda      #$01                          ; 0x1c449 $C439 A9 01                   ; A = 01
sta      $076C                         ; 0x1c44b $C43B 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
sta      $076D                         ; 0x1c44e $C43E 8D 6D 07                ;
lda      #$07                          ; 0x1c451 $C441 A9 07                   ; A = 07
sta      $0736                         ; 0x1c453 $C443 8D 36 07                ; Game Mode
LC446                                                                          ;
jmp      LC3F5                         ; 0x1c456 $C446 4C F5 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table9                                                                   ;
.byt    $3F,$00,$04,$0F,$30,$12,$16    ; 0x1c459 $C449 3F 00 04 0F 30 12 16    ;PPU Address 3F00, transfer 4 bytes
                                                                               ;
.byt    $3F,$10,$04,$0F,$18,$36,$2A    ; 0x1c460 $C450 3F 10 04 0F 18 36 2A    ;PPU Address 3F10, transfer 4 bytes
                                                                               ;
.byt    $FF                            ; 0x1c467 $C457 FF                      ;
bank7_Table_for_Overworld_Palettes                                             ;
.byt    $3F,$00,$20                    ; 0x1c468 $C458 3F 00 20                ;PPU Address 3F00, transfer 20 bytes
                                                                               ;
.byt    $0F,$30,$29,$19                ; 0x1c46b $C45B 0F 30 29 19             ;Overworld Palette Code 0
                                                                               ;
.byt    $0F,$30,$28,$17                ; 0x1c46f $C45F 0F 30 28 17             ;Overworld Palette Code 1
                                                                               ;
.byt    $0F,$30,$28,$00                ; 0x1c473 $C463 0F 30 28 00             ;Overworld Palette Code 2
                                                                               ;
.byt    $0F,$30,$36,$21                ; 0x1c477 $C467 0F 30 36 21             ;Overworld Palette Code 3
                                                                               ;
.byt    $0F,$18,$36,$2A                ; 0x1c47b $C46B 0F 18 36 2A             ;Overworld Sprites Code 0 (black color of tiles + left border)
                                                                               ;
.byt    $0F,$0F,$0F,$0F                ; 0x1c47f $C46F 0F 0F 0F 0F             ;Overworld Sprites Code 1 (right border of the screen)
                                                                               ;
.byt    $0F,$30,$16,$0F                ; 0x1c483 $C473 0F 30 16 0F             ;Overworld Sprites Code 2 (Demons)
                                                                               ;
.byt    $0F,$16,$27,$30                ; 0x1c487 $C477 0F 16 27 30             ;Overworld Sprites Code 3 (Fairy)                               
                                                                               ;
.byt    $FF                            ; 0x1c48b $C47B FF                      ;
bank7_table10                                                                  ;
.byt    $3F,$00,$10                    ; 0x1c48c $C47C 3F 00 10                ;PPU Address 3F00, transfer 10 bytes	Maybe for Last Boss, Link's Shadow ?
                                                                               ;
.byt    $14,$30,$12,$16,$14,$0F,$0F,$0F; 0x1c48f $C47F 14 30 12 16 14 0F 0F 0F ;
.byt    $14,$0F,$0F,$0F,$14,$0F,$0F,$0F; 0x1c497 $C487 14 0F 0F 0F 14 0F 0F 0F ;
.byt    $FF                            ; 0x1c49f $C48F FF                      ;
LC490                                                                          ;
.byt    $3F,$00,$10,$0F,$30,$12,$16,$0F; 0x1c4a0 $C490 3F 00 10 0F 30 12 16 0F ;
.byt    $07,$27,$37,$0F,$07,$16,$30,$0F; 0x1c4a8 $C498 07 27 37 0F 07 16 30 0F ;
.byt    $3C,$1C,$0C,$FF                ; 0x1c4b0 $C4A0 3C 1C 0C FF             ;
; ---------------------------------------------------------------------------- ;
bank7_code12                                                                   ;
jmp      LC722                         ; 0x1c4b4 $C4A4 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Extra_Background_Layers__Bushes__Grass__etc                              ;
.byt    $40,$83,$84,$4C,$40,$40,$40,$40; 0x1c4b7 $C4A7 40 83 84 4C 40 40 40 40 ;Layer Tile Codes (8 bytes)
LC4AF                                                                          ;
.byt    $00,$90,$A0,$20,$00,$00,$00,$00; 0x1c4bf $C4AF 00 90 A0 20 00 00 00 00 ;Layer Row Heights (8 bytes)
LC4B7                                                                          ;
.byt    $01,$03,$03,$04,$04,$05        ; 0x1c4c7 $C4B7 01 03 03 04 04 05       ;Table related to Bank Switch (6 bytes)
LC4BD                                                                          ;
.byt    $00,$00,$00,$00,$02,$00        ; 0x1c4cd $C4BD 00 00 00 00 02 00       ;Area and Enemy Pointer Offsets (6 bytes)
; ---------------------------------------------------------------------------- ;
bank7_Pointer_table_for_Area_and_Enemy_Pointers                                ;
.word    bank5_Area_Pointers_Great_Palace; 0x1c4d3 $C4C3 23 85                 ;West Hyrule - Area Pointers
.word    LA000                         ; 0x1c4d5 $C4C5 00 A0                   ;Death Mountain - Area Pointers
.word    bank5_Enemy_Pointers_Great_Palace; 0x1c4d7 $C4C7 A1 85                ;West Hyrule - Enemy Pointers
.word    LA07E                         ; 0x1c4d9 $C4C9 7E A0                   ;Death Moutain - Enemy Pointers
; ---------------------------------------------------------------------------- ;
bank7_code13                                                                   ;
lda      #$30                          ; 0x1c4db $C4CB A9 30                   ; A = 30
sta      $2000                         ; 0x1c4dd $C4CD 8D 00 20                ;
lda      #$0E                          ; 0x1c4e0 $C4D0 A9 0E                   ; A = 0E
jsr      bank7_Config_Register         ; 0x1c4e2 $C4D2 20 9D FF                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c4e5 $C4D5 20 C9 FF                ;
lda      $FF                           ; 0x1c4e8 $C4D8 A5 FF                   ;; Sprite Bank ?
sta      $2000                         ; 0x1c4ea $C4DA 8D 00 20                ;
jsr      bank7_Set_Memory_200_4FF_and_00_DF_to_Zero; 0x1c4ed $C4DD 20 9C D2    ; Set Memory 200-4FF and 00-DF to Zero
sta       !$FD                         ; 0x1c4f0 $C4E0 8D FD 00                ;
sta      $0747                         ; 0x1c4f3 $C4E3 8D 47 07                ;
sta      $072A                         ; 0x1c4f6 $C4E6 8D 2A 07                ; Scrolling Offset High Byte
sta      $072B                         ; 0x1c4f9 $C4E9 8D 2B 07                ;
sta      $0732                         ; 0x1c4fc $C4EC 8D 32 07                ;
sta      $0734                         ; 0x1c4ff $C4EF 8D 34 07                ;
sta      $0733                         ; 0x1c502 $C4F2 8D 33 07                ;
sta      $0735                         ; 0x1c505 $C4F5 8D 35 07                ;
sta      $0763                         ; 0x1c508 $C4F8 8D 63 07                ; Counter for Big Door in Hidden Kasuto
sta      $0764                         ; 0x1c50b $C4FB 8D 64 07                ; Counter for Big Door in Hidden Kasuto
;Get Area Data Pointer Address (00-01)                                         ;
;And Enemy Data Pointer Address (02-03)                                        ;
ldy      $0707                         ; 0x1c50e $C4FE AC 07 07                ; Current World
bne      LC50C                         ; 0x1c511 $C501 D0 09                   ;
lda      $0706                         ; 0x1c513 $C503 AD 06 07                ; Current Region
cmp      #$01                          ; 0x1c516 $C506 C9 01                   ;
bne      LC50C                         ; 0x1c518 $C508 D0 02                   ;
ldy      #$04                          ; 0x1c51a $C50A A0 04                   ; Y = 04
LC50C                                                                          ;
lda      LC4BD,y                       ; 0x1c51c $C50C B9 BD C4                ;
tay                                    ; 0x1c51f $C50F A8                      ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers,y; 0x1c520 $C510 B9 C3 C4;
sta      L0000                         ; 0x1c523 $C513 85 00                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01,y; 0x1c525 $C515 B9 C4 C4;
sta      $01                           ; 0x1c528 $C518 85 01                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01+$03,y; 0x1c52a $C51A B9 C7 C4;
sta      $02                           ; 0x1c52d $C51D 85 02                   ;
lda      bank7_Pointer_table_for_Area_and_Enemy_Pointers+$01+$03+$01,y; 0x1c52f $C51F B9 C8 C4;
sta      $03                           ; 0x1c532 $C522 85 03                   ;
;Get Area Data Address (D4-D5)                                                 ;
;And Enemy Data Address (D6-D7)                                                ;
lda      $0561                         ; 0x1c534 $C524 AD 61 05                ; Area Code
asl                                    ; 0x1c537 $C527 0A                      ;
tay                                    ; 0x1c538 $C528 A8                      ;
lda      (L0000),y                     ; 0x1c539 $C529 B1 00                   ;
sta      $D4                           ; 0x1c53b $C52B 85 D4                   ;
lda      ($02),y                       ; 0x1c53d $C52D B1 02                   ;
sta      $D6                           ; 0x1c53f $C52F 85 D6                   ;
iny                                    ; 0x1c541 $C531 C8                      ;
lda      (L0000),y                     ; 0x1c542 $C532 B1 00                   ;
sta      $D5                           ; 0x1c544 $C534 85 D5                   ;
lda      ($02),y                       ; 0x1c546 $C536 B1 02                   ;
sta      $D7                           ; 0x1c548 $C538 85 D7                   ;
lda      $075A                         ; 0x1c54a $C53A AD 5A 07                ;
pha                                    ; 0x1c54d $C53D 48                      ;
cmp      #$02                          ; 0x1c54e $C53E C9 02                   ;
bcc      LC551                         ; 0x1c550 $C540 90 0F                   ;
;If $75A >= 2, advance Enemy Data Address to next area		                       ;007
;Probably related to Demon hit on the Overworld                                ;
ldy      #$00                          ; 0x1c552 $C542 A0 00                   ; Y = 00
lda      $D6                           ; 0x1c554 $C544 A5 D6                   ;
clc                                    ; 0x1c556 $C546 18                      ;
adc      ($D6),y                       ; 0x1c557 $C547 71 D6                   ;
sta      $D6                           ; 0x1c559 $C549 85 D6                   ;
lda      $D7                           ; 0x1c55b $C54B A5 D7                   ;
adc      #$00                          ; 0x1c55d $C54D 69 00                   ;
sta      $D7                           ; 0x1c55f $C54F 85 D7                   ;
LC551                                                                          ;
pla                                    ; 0x1c561 $C551 68                      ;
beq      bank7_Initial_Fill_of_Background_Tiles__Side_View; 0x1c562 $C552 F0 14;
;If $75A == 1, do the following...                                             ;
ldy      #$01                          ; 0x1c564 $C554 A0 01                   ; Y = 01
LC556                                                                          ;
tya                                    ; 0x1c566 $C556 98                      ;
ldy      #$00                          ; 0x1c567 $C557 A0 00                   ; Y = 00
cmp      ($D6),y                       ; 0x1c569 $C559 D1 D6                   ;
bcs      bank7_Initial_Fill_of_Background_Tiles__Side_View; 0x1c56b $C55B B0 0B;
tay                                    ; 0x1c56d $C55D A8                      ;
lda      ($D6),y                       ; 0x1c56e $C55E B1 D6                   ;
and      #$7F                          ; 0x1c570 $C560 29 7F                   ; keep bits .xxx xxxx
sta      ($D6),y                       ; 0x1c572 $C562 91 D6                   ;
iny                                    ; 0x1c574 $C564 C8                      ;
iny                                    ; 0x1c575 $C565 C8                      ;
bne      LC556                         ; 0x1c576 $C566 D0 EE                   ;
bank7_Initial_Fill_of_Background_Tiles__Side_View                              ;
;If Ground Type (Header Byte 2 & 0x70) is 0, use Tile Code 42                  ;
;Else use Tile Code 40                                                         ;
ldx      #$40                          ; 0x1c578 $C568 A2 40                   ; X = 40
ldy      #$02                          ; 0x1c57a $C56A A0 02                   ; Y = 02
lda      ($D4),y                       ; 0x1c57c $C56C B1 D4                   ; Area Header Byte 2
and      #$70                          ; 0x1c57e $C56E 29 70                   ; keep bits .xxx ....
bne      LC574                         ; 0x1c580 $C570 D0 02                   ;
ldx      #$42                          ; 0x1c582 $C572 A2 42                   ; X = 42
LC574                                                                          ;
ldy      #$D0                          ; 0x1c584 $C574 A0 D0                   ; Y = D0
sty      L0000                         ; 0x1c586 $C576 84 00                   ;
txa                                    ; 0x1c588 $C578 8A                      ;
LC579                                                                          ;
ldy      L0000                         ; 0x1c589 $C579 A4 00                   ;
sta      $5FFF,y                       ; 0x1c58b $C57B 99 FF 5F                ;
sta      $60CF,y                       ; 0x1c58e $C57E 99 CF 60                ;
sta      $619F,y                       ; 0x1c591 $C581 99 9F 61                ;
sta      $626F,y                       ; 0x1c594 $C584 99 6F 62                ;
dec      L0000                         ; 0x1c597 $C587 C6 00                   ;
bne      LC579                         ; 0x1c599 $C589 D0 EE                   ;
ldy      #$03                          ; 0x1c59b $C58B A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1c59d $C58D B1 D4                   ; Area Header Byte 3; Area Header Byte 3
sta      $07AF                         ; 0x1c59f $C58F 8D AF 07                ;
lda      #$00                          ; 0x1c5a2 $C592 A9 00                   ; A = 00
sta      $072F                         ; 0x1c5a4 $C594 8D 2F 07                ; Area Data Reading Offset
sta      $010A                         ; 0x1c5a7 $C597 8D 0A 01                ;
ldy      #$03                          ; 0x1c5aa $C59A A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1c5ac $C59C B1 D4                   ; Area Header Byte 3; Area Header Byte 3
and      #$07                          ; 0x1c5ae $C59E 29 07                   ; keep bits .... .xxx (BG Map)
beq      LC5C2                         ; 0x1c5b0 $C5A0 F0 20                   ;
;If Background Map Code > 0, get pointer and process Map Data                  ;
asl                                    ; 0x1c5b2 $C5A2 0A                      ;
tax                                    ; 0x1c5b3 $C5A3 AA                      ;
dex                                    ; 0x1c5b4 $C5A4 CA                      ;
dex                                    ; 0x1c5b5 $C5A5 CA                      ;
lda      $D4                           ; 0x1c5b6 $C5A6 A5 D4                   ;
pha                                    ; 0x1c5b8 $C5A8 48                      ;
lda      $D5                           ; 0x1c5b9 $C5A9 A5 D5                   ;
pha                                    ; 0x1c5bb $C5AB 48                      ;
lda      bank5_nothing,x               ; 0x1c5bc $C5AC BD 00 80                ; Background Map Data Pointer Byte 1
sta      $D4                           ; 0x1c5bf $C5AF 85 D4                   ;
lda      L8001,x                       ; 0x1c5c1 $C5B1 BD 01 80                ; Background Map Data Pointer Byte 1
sta      $D5                           ; 0x1c5c4 $C5B4 85 D5                   ;
jsr      bank7_process_map_data        ; 0x1c5c6 $C5B6 20 55 C7                ; Process Map Data
jsr      LC89D                         ; 0x1c5c9 $C5B9 20 9D C8                ;this jsr function call draws the map data, nop nop nop it out for header-commands-only drawing of the map data
pla                                    ; 0x1c5cc $C5BC 68                      ;
sta      $D5                           ; 0x1c5cd $C5BD 85 D5                   ;
pla                                    ; 0x1c5cf $C5BF 68                      ;
sta      $D4                           ; 0x1c5d0 $C5C0 85 D4                   ;
LC5C2                                                                          ;
jsr      bank7_process_map_data        ; 0x1c5d2 $C5C2 20 55 C7                ; Process Map Data
;Extra Layer                                                                   ;
ldy      #$01                          ; 0x1c5d5 $C5C5 A0 01                   ; Y = 01
lda      ($D4),y                       ; 0x1c5d7 $C5C7 B1 D4                   ; Area Data Byte 1; Area Data Byte 1
and      #$1C                          ; 0x1c5d9 $C5C9 29 1C                   ; keep bits ...x xx.. (Layers bits)
lsr                                    ; 0x1c5db $C5CB 4A                      ;
lsr                                    ; 0x1c5dc $C5CC 4A                      ;
tax                                    ; 0x1c5dd $C5CD AA                      ;
dey                                    ; 0x1c5de $C5CE 88                      ;
sty      $0717                         ; 0x1c5df $C5CF 8C 17 07                ; Screen Number for Objects (0-3)
lda      LC4AF,x                       ; 0x1c5e2 $C5D2 BD AF C4                ;
sta      $010A                         ; 0x1c5e5 $C5D5 8D 0A 01                ;
beq      LC5F9                         ; 0x1c5e8 $C5D8 F0 1F                   ;
LC5DA                                                                          ;
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x1c5ea $C5DA 20 47 C9          ; Set RAM Address for Object (0E-0F)
ldy      $010A                         ; 0x1c5ed $C5DD AC 0A 01                ;
LC5E0                                                                          ;
lda      L0000                         ; 0x1c5f0 $C5E0 A5 00                   ;
lda      bank7_Extra_Background_Layers__Bushes__Grass__etc,x; 0x1c5f2 $C5E2 BD A7 C4;
sta      (L000E),y                     ; 0x1c5f5 $C5E5 91 0E                   ;
lda      L0000                         ; 0x1c5f7 $C5E7 A5 00                   ;
iny                                    ; 0x1c5f9 $C5E9 C8                      ;
tya                                    ; 0x1c5fa $C5EA 98                      ;
and      #$0F                          ; 0x1c5fb $C5EB 29 0F                   ; keep bits .... xxxx
bne      LC5E0                         ; 0x1c5fd $C5ED D0 F1                   ;
inc      $0717                         ; 0x1c5ff $C5EF EE 17 07                ; Screen Number for Objects (0-3)
lda      $0717                         ; 0x1c602 $C5F2 AD 17 07                ;; Screen Number for Objects (0-3)
cmp      #$04                          ; 0x1c605 $C5F5 C9 04                   ;
bne      LC5DA                         ; 0x1c607 $C5F7 D0 E1                   ;
LC5F9                                                                          ;
jsr      LC89D                         ; 0x1c609 $C5F9 20 9D C8                ;
lda      #$03                          ; 0x1c60c $C5FC A9 03                   ; A = 03
sta      $071B                         ; 0x1c60e $C5FE 8D 1B 07                ;
lsr                                    ; 0x1c611 $C601 4A                      ;
sta      $071F                         ; 0x1c612 $C602 8D 1F 07                ;; ???
sta      $0720                         ; 0x1c615 $C605 8D 20 07                ;
lsr                                    ; 0x1c618 $C608 4A                      ;
sta      $071C                         ; 0x1c619 $C609 8D 1C 07                ;
sta      $0721                         ; 0x1c61c $C60C 8D 21 07                ;
sta      $0740                         ; 0x1c61f $C60F 8D 40 07                ;
ldy      $075C                         ; 0x1c622 $C612 AC 5C 07                ; Position code when entering area (0-3)
lda      #$0F                          ; 0x1c625 $C615 A9 0F                   ; A = 0F
sta      $0722                         ; 0x1c627 $C617 8D 22 07                ;
lda      $697B,y                       ; 0x1c62a $C61A B9 7B 69                ;
sta      $0732                         ; 0x1c62d $C61D 8D 32 07                ;
sta      $0733                         ; 0x1c630 $C620 8D 33 07                ;
lda      $6982,y                       ; 0x1c633 $C623 B9 82 69                ;
sta      $0734                         ; 0x1c636 $C626 8D 34 07                ;
sta      $0735                         ; 0x1c639 $C629 8D 35 07                ;
jmp      LC722                         ; 0x1c63c $C62C 4C 22 C7                ;this jump is the last chance to change sidescreen tile data(?), when we jump to $C62C we are done processing map data
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC62F                                                                          ;
lda      $076E                         ; 0x1c63f $C62F AD 6E 07                ; Graphics bank to use
jsr      bank7_chr_bank_switch__load_A ; 0x1c642 $C632 20 B1 FF                ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c645 $C635 20 C5 FF                ;
jmp      L8CE1                         ; 0x1c648 $C638 4C E1 8C                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jmp      bank7_Load_Bank_769_at_0x8000 ; 0x1c64b $C63B 4C C9 FF                ; Load Bank $0769
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC63E                                                                          ;
inc      $0736                         ; 0x1c64e $C63E EE 36 07                ; Game Mode
jmp      LC68A                         ; 0x1c651 $C641 4C 8A C6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_take_elevator_exit                                                       ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1c654 $C644 20 C9 FF                ; Load Bank $0769
lda      $0561                         ; 0x1c657 $C647 AD 61 05                ; Area Code
asl                                    ; 0x1c65a $C64A 0A                      ;
asl                                    ; 0x1c65b $C64B 0A                      ;
adc      #$01                          ; 0x1c65c $C64C 69 01                   ;
ldy      $0743                         ; 0x1c65e $C64E AC 43 07                ; Up/Down Buttons Held
cpy      #$08                          ; 0x1c661 $C651 C0 08                   ; Check for Up
bne      LC657                         ; 0x1c663 $C653 D0 02                   ;
adc      #$00                          ; 0x1c665 $C655 69 00                   ;
LC657                                                                          ;
tay                                    ; 0x1c667 $C657 A8                      ;
lda      $6AFC,y                       ; 0x1c668 $C658 B9 FC 6A                ;
lsr                                    ; 0x1c66b $C65B 4A                      ;
lsr                                    ; 0x1c66c $C65C 4A                      ;
sta      $0561                         ; 0x1c66d $C65D 8D 61 05                ; Area Code
lda      $6AFC,y                       ; 0x1c670 $C660 B9 FC 6A                ; Area Room Connectivity
and      #$03                          ; 0x1c673 $C663 29 03                   ; keep bits .... ..xx
sta      $3B                           ; 0x1c675 $C665 85 3B                   ; Link's X Position (high byte)
sta      $072A                         ; 0x1c677 $C667 8D 2A 07                ; Scrolling Offset High Byte
clc                                    ; 0x1c67a $C66A 18                      ;
adc      #$01                          ; 0x1c67b $C66B 69 01                   ;
sta      $0733                         ; 0x1c67d $C66D 8D 33 07                ;
sec                                    ; 0x1c680 $C670 38                      ;
sbc      #$02                          ; 0x1c681 $C671 E9 02                   ;
cmp      #$FF                          ; 0x1c683 $C673 C9 FF                   ;
bne      LC679                         ; 0x1c685 $C675 D0 02                   ;
lda      #$03                          ; 0x1c687 $C677 A9 03                   ; A = 03
LC679                                                                          ;
sta      $0732                         ; 0x1c689 $C679 8D 32 07                ;
LC67C                                                                          ;
ldx      #$04                          ; 0x1c68c $C67C A2 04                   ; X = 04
stx      $075C                         ; 0x1c68e $C67E 8E 5C 07                ; Position code when entering area (0-3)
jsr      LC690                         ; 0x1c691 $C681 20 90 C6                ;
inc      $0705                         ; 0x1c694 $C684 EE 05 07                ;; Related to how Link entered the room (walking, falling, elevator...)
jmp      LC722                         ; 0x1c697 $C687 4C 22 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC68A                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1c69a $C68A 20 C5 FF                ;
jmp      LC67C                         ; 0x1c69d $C68D 4C 7C C6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC690                                                                          ;
lda      $FD                           ; 0x1c6a0 $C690 A5 FD                   ;
and      #$F0                          ; 0x1c6a2 $C692 29 F0                   ; keep bits xxxx ....
sta      $69B3,x                       ; 0x1c6a4 $C694 9D B3 69                ;
lda      $071F                         ; 0x1c6a7 $C697 AD 1F 07                ;; ???
sta      $69BA,x                       ; 0x1c6aa $C69A 9D BA 69                ;This is where healer glitch writes 69C4 at 1, triggering scroll lock 	X=A
lda      $072C                         ; 0x1c6ad $C69D AD 2C 07                ; Scrolling Offset Low Byte
and      #$F0                          ; 0x1c6b0 $C6A0 29 F0                   ; keep bits xxxx ....
sta      $69AC,x                       ; 0x1c6b2 $C6A2 9D AC 69                ;
pha                                    ; 0x1c6b5 $C6A5 48                      ;
sec                                    ; 0x1c6b6 $C6A6 38                      ;
sbc      #$60                          ; 0x1c6b7 $C6A7 E9 60                   ;
php                                    ; 0x1c6b9 $C6A9 08                      ;
ora      #$10                          ; 0x1c6ba $C6AA 09 10                   ; set  bits ...x ....
lsr                                    ; 0x1c6bc $C6AC 4A                      ;
lsr                                    ; 0x1c6bd $C6AD 4A                      ;
lsr                                    ; 0x1c6be $C6AE 4A                      ;
lsr                                    ; 0x1c6bf $C6AF 4A                      ;
sta      $6997,x                       ; 0x1c6c0 $C6B0 9D 97 69                ;
and      #$0E                          ; 0x1c6c3 $C6B3 29 0E                   ; keep bits .... xxx.
sta      $6982,x                       ; 0x1c6c5 $C6B5 9D 82 69                ;
lda      $072A                         ; 0x1c6c8 $C6B8 AD 2A 07                ; Scrolling Offset High Byte
sta      $69A5,x                       ; 0x1c6cb $C6BB 9D A5 69                ;
plp                                    ; 0x1c6ce $C6BE 28                      ;
sbc      #$00                          ; 0x1c6cf $C6BF E9 00                   ;
and      #$03                          ; 0x1c6d1 $C6C1 29 03                   ; keep bits .... ..xx
sta      $6989,x                       ; 0x1c6d3 $C6C3 9D 89 69                ;
sta      $697B,x                       ; 0x1c6d6 $C6C6 9D 7B 69                ;
pla                                    ; 0x1c6d9 $C6C9 68                      ;
clc                                    ; 0x1c6da $C6CA 18                      ;
adc      #$60                          ; 0x1c6db $C6CB 69 60                   ;
php                                    ; 0x1c6dd $C6CD 08                      ;
and      #$E0                          ; 0x1c6de $C6CE 29 E0                   ; keep bits xxx. ....
lsr                                    ; 0x1c6e0 $C6D0 4A                      ;
lsr                                    ; 0x1c6e1 $C6D1 4A                      ;
lsr                                    ; 0x1c6e2 $C6D2 4A                      ;
lsr                                    ; 0x1c6e3 $C6D3 4A                      ;
sta      $699E,x                       ; 0x1c6e4 $C6D4 9D 9E 69                ;
lda      $072A                         ; 0x1c6e7 $C6D7 AD 2A 07                ; Scrolling Offset High Byte
plp                                    ; 0x1c6ea $C6DA 28                      ;
adc      #$01                          ; 0x1c6eb $C6DB 69 01                   ;
and      #$03                          ; 0x1c6ed $C6DD 29 03                   ; keep bits .... ..xx
sta      $6990,x                       ; 0x1c6ef $C6DF 9D 90 69                ;
lda      $3B                           ; 0x1c6f2 $C6E2 A5 3B                   ; Link's X Position (high byte)
sta      $05CC,x                       ; 0x1c6f4 $C6E4 9D CC 05                ;
lda      $4D                           ; 0x1c6f7 $C6E7 A5 4D                   ; Link's X Position (low byte)
and      #$F0                          ; 0x1c6f9 $C6E9 29 F0                   ; keep bits xxxx ....
sta      $05D3,x                       ; 0x1c6fb $C6EB 9D D3 05                ;
LC6EE                                                                          ;
rts                                    ; 0x1c6fe $C6EE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Link_falling                                                  ;
inc      $0704                         ; 0x1c6ff $C6EF EE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
lda      #$01                          ; 0x1c702 $C6F2 A9 01                   ; A = 01
sta      $19                           ; 0x1c704 $C6F4 85 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
lda      #$10                          ; 0x1c706 $C6F6 A9 10                   ; A = 10
sta      $29                           ; 0x1c708 $C6F8 85 29                   ; Link's Y Position
lda      #$02                          ; 0x1c70a $C6FA A9 02                   ; A = 02
ldy      $0707                         ; 0x1c70c $C6FC AC 07 07                ; Current World
bne      LC702                         ; 0x1c70f $C6FF D0 01                   ;
asl                                    ; 0x1c711 $C701 0A                      ;
LC702                                                                          ;
sta      $075F                         ; 0x1c712 $C702 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
lda      #$01                          ; 0x1c715 $C705 A9 01                   ; A = 01 (sound of Link falling)
sta      $EE                           ; 0x1c717 $C707 85 EE                   ; Sound Effects Type 3
jmp      LC72D                         ; 0x1c719 $C709 4C 2D C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC70C                                                                          ;
lda      $071F                         ; 0x1c71c $C70C AD 1F 07                ;; ???
sta      $0720                         ; 0x1c71f $C70F 8D 20 07                ;
lda      #$09                          ; 0x1c722 $C712 A9 09                   ; A = 09
sta      $0736                         ; 0x1c724 $C714 8D 36 07                ; Game Mode
jmp      bank7_code33                  ; 0x1c727 $C717 4C 30 E0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
flashing_effect__length__when_link_dies                                        ;
lda      #$07                          ; 0x1c72a $C71A A9 07                   ; A = 07
sta      $050E                         ; 0x1c72c $C71C 8D 0E 05                ;
jmp      LC72D                         ; 0x1c72f $C71F 4C 2D C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC722                                                                          ;
lda      #$00                          ; 0x1c732 $C722 A9 00                   ; A = 00
sta      $073D                         ; 0x1c734 $C724 8D 3D 07                ; Routine Index
inc      $0726                         ; 0x1c737 $C727 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LCF05                         ; 0x1c73a $C72A 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC72D                                                                          ;
lda      #$00                          ; 0x1c73d $C72D A9 00                   ; A = 00
sta      $0726                         ; 0x1c73f $C72F 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
jmp      LCF05                         ; 0x1c742 $C732 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_Masks_for_Floor_Ceiling_Tile_Mappings                              ;
.byt    $C1,$83,$C1,$87,$C1,$8F,$C1,$9F; 0x1c745 $C735 C1 83 C1 87 C1 8F C1 9F ;
.byt    $C1,$BF,$C1,$7F,$C3,$FF,$C7,$FF; 0x1c74d $C73D C1 BF C1 7F C3 FF C7 FF ;
.byt    $E0,$03,$F0,$03,$F8,$03,$FC,$03; 0x1c755 $C745 E0 03 F0 03 F8 03 FC 03 ;
.byt    $FE,$83,$FF,$C3,$FF,$E3,$FF,$FF; 0x1c75d $C74D FE 83 FF C3 FF E3 FF FF ;
; ---------------------------------------------------------------------------- ;
bank7_process_map_data                                                         ;
lda      #$00                          ; 0x1c765 $C755 A9 00                   ; A = 00
sta      $010A                         ; 0x1c767 $C757 8D 0A 01                ;
sta      $010B                         ; 0x1c76a $C75A 8D 0B 01                ;
sta      $0717                         ; 0x1c76d $C75D 8D 17 07                ; Screen Number for Objects (0-3)
ldy      #$02                          ; 0x1c770 $C760 A0 02                   ; Y = 02
lda      ($D4),y                       ; 0x1c772 $C762 B1 D4                   ; HEADER byte 2
and      #$0F                          ; 0x1c774 $C764 29 0F                   ; keep bits .... xxxx (Initial CF Code)
sta      $0731                         ; 0x1c776 $C766 8D 31 07                ; Level Object Type and Size
lda      ($D4),y                       ; 0x1c779 $C769 B1 D4                   ; HEADER byte 2
and      #$80                          ; 0x1c77b $C76B 29 80                   ; keep bits x... ....
sta      $0486                         ; 0x1c77d $C76D 8D 86 04                ; Level "No Ceiling" flag
lda      ($D4),y                       ; 0x1c780 $C770 B1 D4                   ; HEADER byte 2
and      #$70                          ; 0x1c782 $C772 29 70                   ; keep bits .xxx ....
lsr                                    ; 0x1c784 $C774 4A                      ;
lsr                                    ; 0x1c785 $C775 4A                      ;
lsr                                    ; 0x1c786 $C776 4A                      ;
lsr                                    ; 0x1c787 $C777 4A                      ;
sta      $010C                         ; 0x1c788 $C778 8D 0C 01                ; Area Ground Type (0-7)
lda      #$04                          ; 0x1c78b $C77B A9 04                   ; A = 04
sta      $072F                         ; 0x1c78d $C77D 8D 2F 07                ; Area Data Reading Offset
jsr      bank7_Set_Addy_for_Area_Layer_Tiles__using_10C; 0x1c790 $C780 20 19 C8; Set Address for Area Layer Tiles (using 10C)
ldy      #$00                          ; 0x1c793 $C783 A0 00                   ; Y = 00
lda      ($D4),y                       ; 0x1c795 $C785 B1 D4                   ; HEADER byte 0 	SIZE
sta      $072E                         ; 0x1c797 $C787 8D 2E 07                ; Area Data Length
LC78A                                                                          ;
ldy      $072F                         ; 0x1c79a $C78A AC 2F 07                ; Area Data Reading Offset
keep_loading_the_map_data                                                      ;
lda      ($D4),y                       ; 0x1c79d $C78D B1 D4                   ;map data first byte/cmd ?
sta      $0730                         ; 0x1c79f $C78F 8D 30 07                ; Position of Object Placement
jsr      LC95C                         ; 0x1c7a2 $C792 20 5C C9                ;
LC795                                                                          ;
lda      $010B                         ; 0x1c7a5 $C795 AD 0B 01                ;
lsr                                    ; 0x1c7a8 $C798 4A                      ;
lsr                                    ; 0x1c7a9 $C799 4A                      ;
lsr                                    ; 0x1c7aa $C79A 4A                      ;
lsr                                    ; 0x1c7ab $C79B 4A                      ;
sta      $0717                         ; 0x1c7ac $C79C 8D 17 07                ; Screen Number for Objects (0-3)
jsr      bank7_Set_Ram_Addy_for_Object__0E_0F; 0x1c7af $C79F 20 47 C9          ;
lda      $010A                         ; 0x1c7b2 $C7A2 AD 0A 01                ;
cmp      $010B                         ; 0x1c7b5 $C7A5 CD 0B 01                ;
beq      LC7C6                         ; 0x1c7b8 $C7A8 F0 1C                   ;
bpl      LC7F0                         ; 0x1c7ba $C7AA 10 44                   ;
iny                                    ; 0x1c7bc $C7AC C8                      ;
lda      ($D4),y                       ; 0x1c7bd $C7AD B1 D4                   ;
cmp      #$0F                          ; 0x1c7bf $C7AF C9 0F                   ;
bne      LC7B4                         ; 0x1c7c1 $C7B1 D0 01                   ;
iny                                    ; 0x1c7c3 $C7B3 C8                      ;
LC7B4                                                                          ;
iny                                    ; 0x1c7c4 $C7B4 C8                      ;
cpy      $072E                         ; 0x1c7c5 $C7B5 CC 2E 07                ; Area Data Length
bcc      keep_loading_the_map_data     ; 0x1c7c8 $C7B8 90 D3                   ;
dey                                    ; 0x1c7ca $C7BA 88                      ;
lda      ($D4),y                       ; 0x1c7cb $C7BB B1 D4                   ;
cmp      #$0F                          ; 0x1c7cd $C7BD C9 0F                   ;
bne      LC7C2                         ; 0x1c7cf $C7BF D0 01                   ;
dey                                    ; 0x1c7d1 $C7C1 88                      ;
LC7C2                                                                          ;
dey                                    ; 0x1c7d2 $C7C2 88                      ;
jmp      LC7F0                         ; 0x1c7d3 $C7C3 4C F0 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC7C6                                                                          ;
lda      $0730                         ; 0x1c7d6 $C7C6 AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c7d9 $C7C9 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x1c7db $C7CB C9 D0                   ;
bne      LC7E2                         ; 0x1c7dd $C7CD D0 13                   ;
;Change Default Ceiling/Floor                                                  ;
iny                                    ; 0x1c7df $C7CF C8                      ;
lda      ($D4),y                       ; 0x1c7e0 $C7D0 B1 D4                   ;
pha                                    ; 0x1c7e2 $C7D2 48                      ;
and      #$0F                          ; 0x1c7e3 $C7D3 29 0F                   ; keep bits .... xxxx
sta      $0731                         ; 0x1c7e5 $C7D5 8D 31 07                ; Level Object Type and Size
pla                                    ; 0x1c7e8 $C7D8 68                      ;
and      #$80                          ; 0x1c7e9 $C7D9 29 80                   ; keep bits x... ....
sta      $0486                         ; 0x1c7eb $C7DB 8D 86 04                ; Area "No Ceiling" flag
iny                                    ; 0x1c7ee $C7DE C8                      ;
jmp      LC7F0                         ; 0x1c7ef $C7DF 4C F0 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC7E2                                                                          ;
cpy      $072E                         ; 0x1c7f2 $C7E2 CC 2E 07                ; Area Data Length
bcs      LC7F0                         ; 0x1c7f5 $C7E5 B0 09                   ;
iny                                    ; 0x1c7f7 $C7E7 C8                      ;
lda      ($D4),y                       ; 0x1c7f8 $C7E8 B1 D4                   ;map data second byte/cmd param? 
cmp      #$0F                          ; 0x1c7fa $C7EA C9 0F                   ;
bne      LC7EF                         ; 0x1c7fc $C7EC D0 01                   ;
iny                                    ; 0x1c7fe $C7EE C8                      ;
LC7EF                                                                          ;
iny                                    ; 0x1c7ff $C7EF C8                      ;
LC7F0                                                                          ;
sty      $072F                         ; 0x1c800 $C7F0 8C 2F 07                ; Area Data Reading Offset
lda      $010B                         ; 0x1c803 $C7F3 AD 0B 01                ;
and      #$0F                          ; 0x1c806 $C7F6 29 0F                   ; keep bits .... xxxx
sta      $0A                           ; 0x1c808 $C7F8 85 0A                   ;
jsr      bank7_code14                  ; 0x1c80a $C7FA 20 2B C8                ;
inc      $010B                         ; 0x1c80d $C7FD EE 0B 01                ;
lda      $010B                         ; 0x1c810 $C800 AD 0B 01                ;
cmp      #$40                          ; 0x1c813 $C803 C9 40                   ;
beq      LC818                         ; 0x1c815 $C805 F0 11                   ;
lda      $010A                         ; 0x1c817 $C807 AD 0A 01                ;
cmp      $010B                         ; 0x1c81a $C80A CD 0B 01                ;
bpl      LC812                         ; 0x1c81d $C80D 10 03                   ;
jmp      LC78A                         ; 0x1c81f $C80F 4C 8A C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC812                                                                          ;
ldy      $072F                         ; 0x1c822 $C812 AC 2F 07                ; Area Data Reading Offset
jmp      LC795                         ; 0x1c825 $C815 4C 95 C7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC818                                                                          ;
rts                                    ; 0x1c828 $C818 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_Addy_for_Area_Layer_Tiles__using_10C                                 ;
lda      $0707                         ; 0x1c829 $C819 AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c82c $C81C 20 85 D3;
bank7_pointer_table9                                                           ;
.word    bank5_Tile_Codes_for_Objects_Set_0_False_Bricks_pass_through_0A; 0x1c82f $C81F A3 81; World 0 - Bank 1 and 2
.word    L8647                         ; 0x1c831 $C821 47 86                   ; World 1 - Bank 3
.word    L8647                         ; 0x1c833 $C823 47 86                   ; World 2 - Bank 3
.word    L8167                         ; 0x1c835 $C825 67 81                   ; World 3 - Bank 4
.word    L8167                         ; 0x1c837 $C827 67 81                   ; World 4 - Bank 4
.word    bank5_Build_a_pointer_with_81_and_a_value_from_14177; 0x1c839 $C829 7B 81; World 5 - Bank 5
; ---------------------------------------------------------------------------- ;
bank7_code14                                                                   ;
;$0A = Memory Offset of the tile to process                                    ;
lda      $0731                         ; 0x1c83b $C82B AD 31 07                ; Level Object Type and Size
asl                                    ; 0x1c83e $C82E 0A                      ;
tay                                    ; 0x1c83f $C82F A8                      ;
ldx      #$05                          ; 0x1c840 $C830 A2 05                   ; X = 05
lda      $0486                         ; 0x1c842 $C832 AD 86 04                ; Area "No Ceiling" flag
beq      LC844                         ; 0x1c845 $C835 F0 0D                   ;
;If No Ceiling flag == 1, start at Row 2                                       ;
lda      $0A                           ; 0x1c847 $C837 A5 0A                   ;
ora      #$20                          ; 0x1c849 $C839 09 20                   ; set  bits ..x. ....
sta      $0A                           ; 0x1c84b $C83B 85 0A                   ;
lda      #$38                          ; 0x1c84d $C83D A9 38                   ; A = 38
ldx      #$03                          ; 0x1c84f $C83F A2 03                   ; X = 03
jmp      LC846                         ; 0x1c851 $C841 4C 46 C8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC844                                                                          ;
lda      #$E0                          ; 0x1c854 $C844 A9 E0                   ; A = E0
LC846                                                                          ;
sta      $010E                         ; 0x1c856 $C846 8D 0E 01                ;
stx      $010F                         ; 0x1c859 $C849 8E 0F 01                ;
LC84C                                                                          ;
sty      $08                           ; 0x1c85c $C84C 84 08                   ;
ldx      $010F                         ; 0x1c85e $C84E AE 0F 01                ;
lda      bank7_table_Masks_for_Floor_Ceiling_Tile_Mappings,y; 0x1c861 $C851 B9 35 C7;
and      $010E                         ; 0x1c864 $C854 2D 0E 01                ;
cpx      #$00                          ; 0x1c867 $C857 E0 00                   ;
beq      LC85F                         ; 0x1c869 $C859 F0 04                   ;
LC85B                                                                          ;
lsr                                    ; 0x1c86b $C85B 4A                      ;
dex                                    ; 0x1c86c $C85C CA                      ;
bne      LC85B                         ; 0x1c86d $C85D D0 FC                   ;
LC85F                                                                          ;
tay                                    ; 0x1c86f $C85F A8                      ;
lda      ($0C),y                       ; 0x1c870 $C860 B1 0C                   ;
sta      $0B                           ; 0x1c872 $C862 85 0B                   ;
ldy      $0A                           ; 0x1c874 $C864 A4 0A                   ;
cmp      #$40                          ; 0x1c876 $C866 C9 40                   ; 40 = Background for All Except Type 0
beq      LC878                         ; 0x1c878 $C868 F0 0E                   ;
cmp      #$42                          ; 0x1c87a $C86A C9 42                   ; 42 = Background for Grotto (Type 0)
bne      LC874                         ; 0x1c87c $C86C D0 06                   ;
lda      (L000E),y                     ; 0x1c87e $C86E B1 0E                   ;
cmp      #$40                          ; 0x1c880 $C870 C9 40                   ;
bne      LC878                         ; 0x1c882 $C872 D0 04                   ;
LC874                                                                          ;
lda      $0B                           ; 0x1c884 $C874 A5 0B                   ;
sta      (L000E),y                     ; 0x1c886 $C876 91 0E                   ;
LC878                                                                          ;
tya                                    ; 0x1c888 $C878 98                      ;
clc                                    ; 0x1c889 $C879 18                      ;
adc      #$10                          ; 0x1c88a $C87A 69 10                   ;
sta      $0A                           ; 0x1c88c $C87C 85 0A                   ;
ldy      $08                           ; 0x1c88e $C87E A4 08                   ;
lsr      $010E                         ; 0x1c890 $C880 4E 0E 01                ;
dec      $010F                         ; 0x1c893 $C883 CE 0F 01                ;
bpl      LC84C                         ; 0x1c896 $C886 10 C4                   ;
ldx      #$05                          ; 0x1c898 $C888 A2 05                   ; X = 05
iny                                    ; 0x1c89a $C88A C8                      ;
tya                                    ; 0x1c89b $C88B 98                      ;
and      #$01                          ; 0x1c89c $C88C 29 01                   ; keep bits .... ...x
bne      LC844                         ; 0x1c89e $C88E D0 B4                   ;
ldy      $0A                           ; 0x1c8a0 $C890 A4 0A                   ;
lda      $010D                         ; 0x1c8a2 $C892 AD 0D 01                ;; Area Bottom Row Tile Code
sta      (L000E),y                     ; 0x1c8a5 $C895 91 0E                   ;
tya                                    ; 0x1c8a7 $C897 98                      ;
and      #$0F                          ; 0x1c8a8 $C898 29 0F                   ; keep bits .... xxxx
sta      $0A                           ; 0x1c8aa $C89A 85 0A                   ;
rts                                    ; 0x1c8ac $C89C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC89D                                                                          ;
lda      #$00                          ; 0x1c8ad $C89D A9 00                   ; A = 00
sta      $0717                         ; 0x1c8af $C89F 8D 17 07                ; Screen Number for Objects (0-3)
sta      $010A                         ; 0x1c8b2 $C8A2 8D 0A 01                ;
sta      $0757                         ; 0x1c8b5 $C8A5 8D 57 07                ; Elevator Generated by Objects Construction
sta      $0758                         ; 0x1c8b8 $C8A8 8D 58 07                ; Locked Door Generated by Objects Construction
tay                                    ; 0x1c8bb $C8AB A8                      ;
lda      ($D4),y                       ; 0x1c8bc $C8AC B1 D4                   ; HEADER byte 0 ; get byte 0 of Area Data
sta      $072E                         ; 0x1c8be $C8AE 8D 2E 07                ; Area Data Length
iny                                    ; 0x1c8c1 $C8B1 C8                      ;
lda      ($D4),y                       ; 0x1c8c2 $C8B2 B1 D4                   ; HEADER byte 1; get byte 1 of Area Data
and      #$60                          ; 0x1c8c4 $C8B4 29 60                   ; keep bits .xx. .... (Area Width)
lsr                                    ; 0x1c8c6 $C8B6 4A                      ;
lsr                                    ; 0x1c8c7 $C8B7 4A                      ;
lsr                                    ; 0x1c8c8 $C8B8 4A                      ;
lsr                                    ; 0x1c8c9 $C8B9 4A                      ;
lsr                                    ; 0x1c8ca $C8BA 4A                      ;
sta      $D1                           ; 0x1c8cb $C8BB 85 D1                   ; Area Width
lda      #$04                          ; 0x1c8cd $C8BD A9 04                   ; A = 04
sta      $072F                         ; 0x1c8cf $C8BF 8D 2F 07                ; Area Data Reading Offset
ldy      $072F                         ; 0x1c8d2 $C8C2 AC 2F 07                ;rts here to only do the header's draw commands(?) <---i dont  think so, check 0x1c5c9 
LC8C5                                                                          ;
lda      ($D4),y                       ; 0x1c8d5 $C8C5 B1 D4                   ; first byte of MAPDATA data
sta      $0730                         ; 0x1c8d7 $C8C7 8D 30 07                ; Position of Object Placement
jsr      bank7_Check_for_Skip_Object__E0_; 0x1c8da $C8CA 20 88 C9              ;
iny                                    ; 0x1c8dd $C8CD C8                      ;
lda      ($D4),y                       ; 0x1c8de $C8CE B1 D4                   ;
sta      $0731                         ; 0x1c8e0 $C8D0 8D 31 07                ; Level Object Type and Size
iny                                    ; 0x1c8e3 $C8D3 C8                      ;
sty      $072F                         ; 0x1c8e4 $C8D4 8C 2F 07                ; Area Data Reading Offset
jsr      LC95F                         ; 0x1c8e7 $C8D7 20 5F C9                ;
lda      $0730                         ; 0x1c8ea $C8DA AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c8ed $C8DD 29 F0                   ; keep bits xxxx ....
cmp      #$D0                          ; 0x1c8ef $C8DF C9 D0                   ;
bne      LC8E9                         ; 0x1c8f1 $C8E1 D0 06                   ;
cpy      $072E                         ; 0x1c8f3 $C8E3 CC 2E 07                ; Area Data Length
bne      LC8C5                         ; 0x1c8f6 $C8E6 D0 DD                   ;
rts                                    ; 0x1c8f8 $C8E8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8E9                                                                          ;
lda      $0731                         ; 0x1c8f9 $C8E9 AD 31 07                ; Level Object Type and Size
and      #$F0                          ; 0x1c8fc $C8EC 29 F0                   ; keep bits xxxx ....
beq      LC8F6                         ; 0x1c8fe $C8EE F0 06                   ;
jsr      LC912                         ; 0x1c900 $C8F0 20 12 C9                ;
jmp      LC909                         ; 0x1c903 $C8F3 4C 09 C9                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC8F6                                                                          ;
lda      $0731                         ; 0x1c906 $C8F6 AD 31 07                ; Level Object Type and Size
cmp      #$0F                          ; 0x1c909 $C8F9 C9 0F                   ; 0F = Collectable Object
bne      LC906                         ; 0x1c90b $C8FB D0 09                   ;
jsr      LC9A5                         ; 0x1c90d $C8FD 20 A5 C9                ;
inc      $072F                         ; 0x1c910 $C900 EE 2F 07                ; Area Data Reading Offset
jmp      LC909                         ; 0x1c913 $C903 4C 09 C9                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC906                                                                          ;
jsr      bank7_Set_Address_for_Small_Object; 0x1c916 $C906 20 27 C9            ; Set Address for Background Object
LC909                                                                          ;
ldy      $072F                         ; 0x1c919 $C909 AC 2F 07                ; Area Data Reading Offset
cpy      $072E                         ; 0x1c91c $C90C CC 2E 07                ; Area Data Length
bne      LC8C5                         ; 0x1c91f $C90F D0 B4                   ;
rts                                    ; 0x1c921 $C911 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC912                                                                          ;
ldx      $0731                         ; 0x1c922 $C912 AE 31 07                ; Level Object Type and Size
lda      $0707                         ; 0x1c925 $C915 AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c928 $C918 20 85 D3; Set Object Construction Address
bank7_Pointer_table_for_Objects_Construction_Address                           ;
.word    bank5_code0                   ; 0x1c92b $C91B EE 80                   ;Overworld Areas (WH DM EH MI)
.word    L9B86                         ; 0x1c92d $C91D 86 9B                   ;Towns in West Hyrule
.word    L9B86                         ; 0x1c92f $C91F 86 9B                   ;Towns in East Hyrule
.word    bank5_code0                   ; 0x1c931 $C921 EE 80                   ;Palaces Type A
.word    bank5_code0                   ; 0x1c933 $C923 EE 80                   ;Palaces Type B
.word    bank5_code0                   ; 0x1c935 $C925 EE 80                   ;Great Palace                  
; ---------------------------------------------------------------------------- ;
bank7_Set_Address_for_Small_Object                                             ;
ldx      $0731                         ; 0x1c937 $C927 AE 31 07                ; Level Object Type and Size
lda      $0707                         ; 0x1c93a $C92A AD 07 07                ; Current World
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1c93d $C92D 20 85 D3; Set Object Construction Address
bank7_Pointer_table_for_Small_Objects_Construction_Address                     ;
.word    bank5_code1                   ; 0x1c940 $C930 2F 81                   ;Overworld Areas (WH DM EH MI)
.word    L9BCB                         ; 0x1c942 $C932 CB 9B                   ;Towns in West Hyrule
.word    L9BCB                         ; 0x1c944 $C934 CB 9B                   ;Towns in East Hyrule
.word    bank5_code1                   ; 0x1c946 $C936 2F 81                   ;Palaces Type A
.word    bank5_code1                   ; 0x1c948 $C938 2F 81                   ;Palaces Type B
.word    bank5_code1                   ; 0x1c94a $C93A 2F 81                   ;Great Palace
bank7_Pointer_table_for_location_of_the_4_screens_in_RAM                       ;
.word    LD000                         ; 0x1c94c $C93C 00 D0                   ;
.word    L70A0                         ; 0x1c94e $C93E A0 70                   ;
.word    L6060                         ; 0x1c950 $C940 60 60                   ;
.word    L6261                         ; 0x1c952 $C942 61 62                   ;
; ---------------------------------------------------------------------------- ;
bank7_Set_RAM_Address_for_Object0E0F                                           ;
ldy      $0730                         ; 0x1c954 $C944 AC 30 07                ; Position of Object Placement
bank7_Set_Ram_Addy_for_Object__0E_0F                                           ;
tya                                    ; 0x1c957 $C947 98                      ;
pha                                    ; 0x1c958 $C948 48                      ;
lda      $0717                         ; 0x1c959 $C949 AD 17 07                ; Screen Number for Objects (0-3)
and      #$03                          ; 0x1c95c $C94C 29 03                   ; keep bits .... ..xx
tay                                    ; 0x1c95e $C94E A8                      ;
lda      bank7_Pointer_table_for_location_of_the_4_screens_in_RAM,y; 0x1c95f $C94F B9 3C C9;
sta      L000E                         ; 0x1c962 $C952 85 0E                   ;
lda      bank7_Pointer_table_for_location_of_the_4_screens_in_RAM+$04,y; 0x1c964 $C954 B9 40 C9;
sta      $0F                           ; 0x1c967 $C957 85 0F                   ;
pla                                    ; 0x1c969 $C959 68                      ;
tay                                    ; 0x1c96a $C95A A8                      ;
rts                                    ; 0x1c96b $C95B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC95C                                                                          ;
jsr      bank7_Check_for_Skip_Object__E0_; 0x1c96c $C95C 20 88 C9              ; Check for Skip Object (E0)
LC95F                                                                          ;
lda      $0730                         ; 0x1c96f $C95F AD 30 07                ; Position of Object Placement
and      #$0F                          ; 0x1c972 $C962 29 0F                   ; keep bits .... xxxx
clc                                    ; 0x1c974 $C964 18                      ;
adc      $010A                         ; 0x1c975 $C965 6D 0A 01                ;
sta      $010A                         ; 0x1c978 $C968 8D 0A 01                ;
and      #$0F                          ; 0x1c97b $C96B 29 0F                   ; keep bits .... xxxx
pha                                    ; 0x1c97d $C96D 48                      ;
lda      $0730                         ; 0x1c97e $C96E AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c981 $C971 29 F0                   ; keep bits xxxx ....
sta      $0730                         ; 0x1c983 $C973 8D 30 07                ;; Position of Object Placement
pla                                    ; 0x1c986 $C976 68                      ;
ora      $0730                         ; 0x1c987 $C977 0D 30 07                ; Position of Object Placement
sta      $0730                         ; 0x1c98a $C97A 8D 30 07                ;; Position of Object Placement
lda      $010A                         ; 0x1c98d $C97D AD 0A 01                ;
lsr                                    ; 0x1c990 $C980 4A                      ;
lsr                                    ; 0x1c991 $C981 4A                      ;
lsr                                    ; 0x1c992 $C982 4A                      ;
lsr                                    ; 0x1c993 $C983 4A                      ;
sta      $0717                         ; 0x1c994 $C984 8D 17 07                ; Screen Number for Objects (0-3)
rts                                    ; 0x1c997 $C987 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Check_for_Skip_Object__E0_                                               ;
lda      $0730                         ; 0x1c998 $C988 AD 30 07                ; Position of Object Placement
and      #$F0                          ; 0x1c99b $C98B 29 F0                   ; keep bits xxxx ....
cmp      #$E0                          ; 0x1c99d $C98D C9 E0                   ;
bne      LC9A4                         ; 0x1c99f $C98F D0 13                   ;
lda      $0730                         ; 0x1c9a1 $C991 AD 30 07                ; Position of Object Placement
and      #$03                          ; 0x1c9a4 $C994 29 03                   ; keep bits .... ..xx
asl                                    ; 0x1c9a6 $C996 0A                      ;
asl                                    ; 0x1c9a7 $C997 0A                      ;
asl                                    ; 0x1c9a8 $C998 0A                      ;
asl                                    ; 0x1c9a9 $C999 0A                      ;
sta      $010A                         ; 0x1c9aa $C99A 8D 0A 01                ;
iny                                    ; 0x1c9ad $C99D C8                      ;
iny                                    ; 0x1c9ae $C99E C8                      ;
lda      ($D4),y                       ; 0x1c9af $C99F B1 D4                   ;
sta      $0730                         ; 0x1c9b1 $C9A1 8D 30 07                ; Position of Object Placement
LC9A4                                                                          ;
rts                                    ; 0x1c9b4 $C9A4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LC9A5                                                                          ;
ldx      #$05                          ; 0x1c9b5 $C9A5 A2 05                   ; X = 05
LC9A7                                                                          ;
lda      $B6,x                         ; 0x1c9b7 $C9A7 B5 B6                   ; Generated Enemy Slot
beq      LC9AF                         ; 0x1c9b9 $C9A9 F0 04                   ;
dex                                    ; 0x1c9bb $C9AB CA                      ;
bpl      LC9A7                         ; 0x1c9bc $C9AC 10 F9                   ;
inx                                    ; 0x1c9be $C9AE E8                      ;
LC9AF                                                                          ;
stx      $10                           ; 0x1c9bf $C9AF 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $0717                         ; 0x1c9c1 $C9B1 AD 17 07                ; Screen Number for Objects (0-3)
sta      $3C,x                         ; 0x1c9c4 $C9B4 95 3C                   ; Enemy X position (high byte)
tax                                    ; 0x1c9c6 $C9B6 AA                      ;
jsr      LC2A6                         ; 0x1c9c7 $C9B7 20 A6 C2                ;
ldx      $10                           ; 0x1c9ca $C9BA A6 10                   ;; used as monster x register ;draw boss hp bar
cmp      #$00                          ; 0x1c9cc $C9BC C9 00                   ;
beq      LC9E9                         ; 0x1c9ce $C9BE F0 29                   ;
ror      $BC,x                         ; 0x1c9d0 $C9C0 76 BC                   ;; Generated Enemy Y Position ?
lda      $0730                         ; 0x1c9d2 $C9C2 AD 30 07                ; Position of Object Placement
pha                                    ; 0x1c9d5 $C9C5 48                      ;
asl                                    ; 0x1c9d6 $C9C6 0A                      ;
asl                                    ; 0x1c9d7 $C9C7 0A                      ;
asl                                    ; 0x1c9d8 $C9C8 0A                      ;
asl                                    ; 0x1c9d9 $C9C9 0A                      ;
clc                                    ; 0x1c9da $C9CA 18                      ;
adc      #$03                          ; 0x1c9db $C9CB 69 03                   ;
sta      $4E,x                         ; 0x1c9dd $C9CD 95 4E                   ; Enemy X position (low byte)
pla                                    ; 0x1c9df $C9CF 68                      ;
and      #$F0                          ; 0x1c9e0 $C9D0 29 F0                   ; keep bits xxxx ....
clc                                    ; 0x1c9e2 $C9D2 18                      ;
adc      #$20                          ; 0x1c9e3 $C9D3 69 20                   ;
sta      $2A,x                         ; 0x1c9e5 $C9D5 95 2A                   ; Enemy Y Position
lda      #$01                          ; 0x1c9e7 $C9D7 A9 01                   ; A = 01
sta      $1A,x                         ; 0x1c9e9 $C9D9 95 1A                   ;
sta      $B6,x                         ; 0x1c9eb $C9DB 95 B6                   ; Generated Enemy Slot
sta      $A1,x                         ; 0x1c9ed $C9DD 95 A1                   ; Enemy Code
sta      $057E,x                       ; 0x1c9ef $C9DF 9D 7E 05                ; Enemy Y Velocity
ldy      $072F                         ; 0x1c9f2 $C9E2 AC 2F 07                ; Area Data Reading Offset
lda      ($D4),y                       ; 0x1c9f5 $C9E5 B1 D4                   ;
sta      $AF,x                         ; 0x1c9f7 $C9E7 95 AF                   ; Item Code
LC9E9                                                                          ;
rts                                    ; 0x1c9f9 $C9E9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table11                                                                  ;
.byt    $12,$16,$2A,$16                ; 0x1c9fa $C9EA 12 16 2A 16             ;
LC9EE                                                                          ;
.byt    $20,$C5,$FF                    ; 0x1c9fe $C9EE 20 C5 FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code15                                                                   ;
lda      #$0A                          ; 0x1ca01 $C9F1 A9 0A                   ; A = 0A
sta      $80                           ; 0x1ca03 $C9F3 85 80                   ; Current Animation Frame for Link (OW and SS)
jsr      bank7_Links_Display_Routine   ; 0x1ca05 $C9F5 20 F0 EB                ;
lda      $12                           ; 0x1ca08 $C9F8 A5 12                   ;; Frame Counter (ascending)
and      #$03                          ; 0x1ca0a $C9FA 29 03                   ; keep bits .... ..xx
tax                                    ; 0x1ca0c $C9FC AA                      ;
lda      bank7_table11,x               ; 0x1ca0d $C9FD BD EA C9                ;
sta      $696F                         ; 0x1ca10 $CA00 8D 6F 69                ;
lda      $050E                         ; 0x1ca13 $CA03 AD 0E 05                ;
bne      LCA15                         ; 0x1ca16 $CA06 D0 0D                   ;
lda      #$0F                          ; 0x1ca18 $CA08 A9 0F                   ; A = 0F
sta      $696F                         ; 0x1ca1a $CA0A 8D 6F 69                ;
lda      #$10                          ; 0x1ca1d $CA0D A9 10                   ; A = 10
jsr      bank7_chr_bank_switch__load_A ; 0x1ca1f $CA0F 20 B1 FF                ;
inc      $0736                         ; 0x1ca22 $CA12 EE 36 07                ; Game Mode
LCA15                                                                          ;
lda      #$04                          ; 0x1ca25 $CA15 A9 04                   ; A = 04
LCA17                                                                          ;
sta      $0725                         ; 0x1ca27 $CA17 8D 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1ca2a $CA1A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA1B                                                                          ;
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1ca2b $CA1B 20 82 D3;
bank7_pointer_table11                                                          ;
.word    L8140                         ; 0x1ca2e $CA1E 40 81                   ;
.word    bank7_code16                  ; 0x1ca30 $CA20 24 CA                   ;
.word    LCA72                         ; 0x1ca32 $CA22 72 CA                   ;
; ---------------------------------------------------------------------------- ;
bank7_code16                                                                   ;
ldx      #$01                          ; 0x1ca34 $CA24 A2 01                   ; X = 01
LCA26                                                                          ;
jsr      LCB18_fill_hp_or_mp_to_full__provide_x_register__maybe; 0x1ca36 $CA26 20 18 CB;
dex                                    ; 0x1ca39 $CA29 CA                      ;
bpl      LCA26                         ; 0x1ca3a $CA2A 10 FA                   ;
lda      #$00                          ; 0x1ca3c $CA2C A9 00                   ; A = 00
sta      $074C                         ; 0x1ca3e $CA2E 8D 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
sta      $0524                         ; 0x1ca41 $CA31 8D 24 05                ; Routine Index
sta      $0525                         ; 0x1ca44 $CA34 8D 25 05                ; Routine Delay
sta      $DE                           ; 0x1ca47 $CA37 85 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
sta      $048D                         ; 0x1ca49 $CA39 8D 8D 04                ; Related to Link's flicker after being hit ?
ldy      #$05                          ; 0x1ca4c $CA3C A0 05                   ; Y = 05
LCA3E                                                                          ;
sta      $05C3,y                       ; 0x1ca4e $CA3E 99 C3 05                ;
dey                                    ; 0x1ca51 $CA41 88                      ;
bpl      LCA3E                         ; 0x1ca52 $CA42 10 FA                   ;
dec      $0700                         ; 0x1ca54 $CA44 CE 00 07                ; Current number of lives
bne      LCA6C                         ; 0x1ca57 $CA47 D0 23                   ;
;Game Over                                                                     ;
lda      #$02                          ; 0x1ca59 $CA49 A9 02                   ; A = 02
sta      $E9                           ; 0x1ca5b $CA4B 85 E9                   ;
lda      #$F0                          ; 0x1ca5d $CA4D A9 F0                   ; A = F0 (delay to show Ganon's Return)
sta      $0501                         ; 0x1ca5f $CA4F 8D 01 05                ;; Timer
inc      $0726                         ; 0x1ca62 $CA52 EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
inc      $073D                         ; 0x1ca65 $CA55 EE 3D 07                ;; Routine Index
lda      #$09                          ; 0x1ca68 $CA58 A9 09                   ; A = 09
jsr      LCA17                         ; 0x1ca6a $CA5A 20 17 CA                ;
lda      #$00                          ; 0x1ca6d $CA5D A9 00                   ; A = 00
sta      $0775                         ; 0x1ca6f $CA5F 8D 75 07                ; Current Experience (high byte)
sta      $0776                         ; 0x1ca72 $CA62 8D 76 07                ; Current Experience (low byte)
sta      $0756                         ; 0x1ca75 $CA65 8D 56 07                ; Experience to be added (low byte)
sta      $0755                         ; 0x1ca78 $CA68 8D 55 07                ; Experience to be added (high byte)
rts                                    ; 0x1ca7b $CA6B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA6C                                                                          ;
lda      #$06                          ; 0x1ca7c $CA6C A9 06                   ; A = 06
sta      $076C                         ; 0x1ca7e $CA6E 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
LCA71                                                                          ;
rts                                    ; 0x1ca81 $CA71 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA72                                                                          ;
lda      #$00                          ; 0x1ca82 $CA72 A9 00                   ; A = 00
sta      $0726                         ; 0x1ca84 $CA74 8D 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
lda      $F7                           ; 0x1ca87 $CA77 A5 F7                   ; Controller 1 Buttons Held
and      #$10                          ; 0x1ca89 $CA79 29 10                   ; keep bits ...x .... (Start button)
bne      LCA82                         ; 0x1ca8b $CA7B D0 05                   ;
lda      $0501                         ; 0x1ca8d $CA7D AD 01 05                ;; Timer
bne      LCA71                         ; 0x1ca90 $CA80 D0 EF                   ;
LCA82                                                                          ;
jmp      LCF05                         ; 0x1ca92 $CA82 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCA85                                                                          ;
lda      $F7                           ; 0x1ca95 $CA85 A5 F7                   ; Controller 1 Buttons Held
and      #$30                          ; 0x1ca97 $CA87 29 30                   ; keep bits ..xx .... (Start/Select buttons)
asl                                    ; 0x1ca99 $CA89 0A                      ;
asl                                    ; 0x1ca9a $CA8A 0A                      ;
sta      L0000                         ; 0x1ca9b $CA8B 85 00                   ;
lda      $0744                         ; 0x1ca9d $CA8D AD 44 07                ; Controller 1 Buttons Held
and      #$30                          ; 0x1caa0 $CA90 29 30                   ; keep bits ..xx ....
asl                                    ; 0x1caa2 $CA92 0A                      ;
asl                                    ; 0x1caa3 $CA93 0A                      ;
cmp      L0000                         ; 0x1caa4 $CA94 C5 00                   ;
beq      LCAF6                         ; 0x1caa6 $CA96 F0 5E                   ;
bit      L0000                         ; 0x1caa8 $CA98 24 00                   ;
bvc      LCAF7_gameoverscreen_select_button_pressed; 0x1caaa $CA9A 50 5B       ;
lda      $079F                         ; 0x1caac $CA9C AD 9F 07                ; Number of Continues used
cmp      #$FF                          ; 0x1caaf $CA9F C9 FF                   ;
beq      LCAA6                         ; 0x1cab1 $CAA1 F0 03                   ;
inc      $079F                         ; 0x1cab3 $CAA3 EE 9F 07                ; Number of Continues + 1
;Reset Memory Ranges                                                           ;
LCAA6                                                                          ;
ldx      #$0F                          ; 0x1cab6 $CAA6 A2 0F                   ; X = 0F
lda      #$00                          ; 0x1cab8 $CAA8 A9 00                   ; A = 00
LCAAA                                                                          ;
sta      $E0,x                         ; 0x1caba $CAAA 95 E0                   ;
dex                                    ; 0x1cabc $CAAC CA                      ;
bpl      LCAAA                         ; 0x1cabd $CAAD 10 FB                   ;
ldy      #$C0                          ; 0x1cabf $CAAF A0 C0                   ; Y = C0
LCAB1                                                                          ;
sta      $0700,y                       ; 0x1cac1 $CAB1 99 00 07                ;
iny                                    ; 0x1cac4 $CAB4 C8                      ;
bne      LCAB1                         ; 0x1cac5 $CAB5 D0 FA                   ;
lda      $0488                         ; 0x1cac7 $CAB7 AD 88 04                ;
beq      LCAC4                         ; 0x1caca $CABA F0 08                   ;
lda      #$40                          ; 0x1cacc $CABC A9 40                   ; A = 40
sta      $07B0                         ; 0x1cace $CABE 8D B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
jmp      LCF05                         ; 0x1cad1 $CAC1 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCAC4                                                                          ;
sta      $0775                         ; 0x1cad4 $CAC4 8D 75 07                ; Current Experience (high byte)
sta      $0776                         ; 0x1cad7 $CAC7 8D 76 07                ; Current Experience (low byte)
sta      $0756                         ; 0x1cada $CACA 8D 56 07                ; Experience to be added (low byte)
sta      $0755                         ; 0x1cadd $CACD 8D 55 07                ; Experience to be added (high byte)
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1cae0 $CAD0 20 30 CF; Region Code * 5 + World Code
cmp      #$0F                          ; 0x1cae3 $CAD3 C9 0F                   ; Check if in Great Palace
beq      bank7_restore_in_grand_palace_restore_restart_in_gp; 0x1cae5 $CAD5 F0 07;
lda      #$00                          ; 0x1cae7 $CAD7 A9 00                   ; A = 00
ldy      #$01                          ; 0x1cae9 $CAD9 A0 01                   ; Y = 01
jmp      LCAF0                         ; 0x1caeb $CADB 4C F0 CA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_restore_in_grand_palace_restore_restart_in_gp                            ;
jsr      bank7_Reset_Number_of_Lives__to_3_; 0x1caee $CADE 20 58 C3            ; Reset Number of Lives (to 3)
lda      #$00                          ; 0x1caf1 $CAE1 A9 00                   ; A = 00
sta      $0561                         ; 0x1caf3 $CAE3 8D 61 05                ; Area Code
sta      $0701                         ; 0x1caf6 $CAE6 8D 01 07                ; Facing direction when entering area
sta      $075C                         ; 0x1caf9 $CAE9 8D 5C 07                ; Position code when entering area (0-3)
lda      #$01                          ; 0x1cafc $CAEC A9 01                   ; A = 01 (if 0, restart in North Castle)
ldy      #$02                          ; 0x1cafe $CAEE A0 02                   ; Y = 02
LCAF0                                                                          ;
sta      $076C                         ; 0x1cb00 $CAF0 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
sty      $075F                         ; 0x1cb03 $CAF3 8C 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCAF6                                                                          ;
rts                                    ; 0x1cb06 $CAF6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCAF7_gameoverscreen_select_button_pressed                                     ;
bpl      LCAF6                         ; 0x1cb07 $CAF7 10 FD                   ;
lda      #$10                          ; 0x1cb09 $CAF9 A9 10                   ; A = 10
sta      $EF                           ; 0x1cb0b $CAFB 85 EF                   ; Sound Effects Type 4
ldy      #$06                          ; 0x1cb0d $CAFD A0 06                   ; Y = 06
LCAFF                                                                          ;
lda      $6974,y                       ; 0x1cb0f $CAFF B9 74 69                ;
sta      L0302,y                       ; 0x1cb12 $CB02 99 02 03                ;
dey                                    ; 0x1cb15 $CB05 88                      ;
bpl      LCAFF                         ; 0x1cb16 $CB06 10 F7                   ;
lda      $0488                         ; 0x1cb18 $CB08 AD 88 04                ;
eor      #$01                          ; 0x1cb1b $CB0B 49 01                   ; flip bits .... ...x
sta      $0488                         ; 0x1cb1d $CB0D 8D 88 04                ;
asl                                    ; 0x1cb20 $CB10 0A                      ;
tay                                    ; 0x1cb21 $CB11 A8                      ;
lda      #$FA                          ; 0x1cb22 $CB12 A9 FA                   ; A = FA
sta      $0305,y                       ; 0x1cb24 $CB14 99 05 03                ;
rts                                    ; 0x1cb27 $CB17 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB18_fill_hp_or_mp_to_full__provide_x_register__maybe                         ;
;Magic Containers to Magic Units in Meter                                      ;
;Heart Containers to Life Units in Meter                                       ;
;                                                                              ;
;X = 0 -> Magic                                                                ;
;X = 1 -> Life                                                                 ;
;                                                                              ;
;Units Left = Number of Containers * 20 - 1                                    ;
lda      $0783,x                       ; 0x1cb28 $CB18 BD 83 07                ; Current number of Magic/Heart Containers
asl                                    ; 0x1cb2b $CB1B 0A                      ;
asl                                    ; 0x1cb2c $CB1C 0A                      ;
asl                                    ; 0x1cb2d $CB1D 0A                      ;
asl                                    ; 0x1cb2e $CB1E 0A                      ;
asl                                    ; 0x1cb2f $CB1F 0A                      ;
sec                                    ; 0x1cb30 $CB20 38                      ;
sbc      #$01                          ; 0x1cb31 $CB21 E9 01                   ;
sta      $0773,x                       ; 0x1cb33 $CB23 9D 73 07                ; Current Magic/Life left in meter
rts                                    ; 0x1cb36 $CB26 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB27                                                                          ;
lda      #$0E                          ; 0x1cb37 $CB27 A9 0E                   ; A = 0E
sta      $076E                         ; 0x1cb39 $CB29 8D 6E 07                ; Graphics bank to use
jsr      LC388                         ; 0x1cb3c $CB2C 20 88 C3                ;
jmp      LC360                         ; 0x1cb3f $CB2F 4C 60 C3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Height_of_frontier_between_North_and_South                               ;
;3C	Region 0	West Hyrule                                                       ;
;4B	Region 1	Death Mountain, Maze Island                                       ;
;4C	Region 2	East Hyrule                                                       ;
.byt    $3C,$4B,$4C                    ; 0x1cb42 $CB32 3C 4B 4C                ;
; ---------------------------------------------------------------------------- ;
bank7_code17                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cb45 $CB35 20 C9 FF                ; Load Bank in $0769
ldy      $0748                         ; 0x1cb48 $CB38 AC 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
cpy      #$FF                          ; 0x1cb4b $CB3B C0 FF                   ;
bne      LCB42                         ; 0x1cb4d $CB3D D0 03                   ;
jmp      bank7_Determine_the_Random_Battle_according_to_Links_position_in_OW; 0x1cb4f $CB3F 4C 0F CC;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCB42                                                                          ;
lda      $0706                         ; 0x1cb52 $CB42 AD 06 07                ; Current Region
bne      LCB4B                         ; 0x1cb55 $CB45 D0 04                   ;
cpy      #$00                          ; 0x1cb57 $CB47 C0 00                   ;
beq      LCB59                         ; 0x1cb59 $CB49 F0 0E                   ;
;On exit, appear at the location of area index minus this value (0-3)          ;
LCB4B                                                                          ;
lda      $07AC                         ; 0x1cb5b $CB4B AD AC 07                ;
ora      $07AA                         ; 0x1cb5e $CB4E 0D AA 07                ;
ora      L07AD                         ; 0x1cb61 $CB51 0D AD 07                ;; * related to Raft Animation *
bne      LCB59                         ; 0x1cb64 $CB54 D0 03                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cb66 $CB56 20 3D D0   ; Mute Music
LCB59                                                                          ;
lda      $6A3F,y                       ; 0x1cb69 $CB59 B9 3F 6A                ; Area Byte 1 (X Position)
and      #$C0                          ; 0x1cb6c $CB5C 29 C0                   ; keep bits xx.. ....
asl                                    ; 0x1cb6e $CB5E 0A                      ;
rol                                    ; 0x1cb6f $CB5F 2A                      ;
rol                                    ; 0x1cb70 $CB60 2A                      ;
sta      L0000                         ; 0x1cb71 $CB61 85 00                   ;
tya                                    ; 0x1cb73 $CB63 98                      ;
sec                                    ; 0x1cb74 $CB64 38                      ;
sbc      L0000                         ; 0x1cb75 $CB65 E5 00                   ;
sta      $0748                         ; 0x1cb77 $CB67 8D 48 07                ; Overworld Area out of Side View
lda      $6A00,y                       ; 0x1cb7a $CB6A B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1cb7d $CB6D 0A                      ;
bcc      LCBB8                         ; 0x1cb7e $CB6E 90 48                   ;
lda      #$00                          ; 0x1cb80 $CB70 A9 00                   ; A = 00
sta      $07DB                         ; 0x1cb82 $CB72 8D DB 07                ;; Something for Palaces ?
jsr      bank7_Get_Area_Code__Enter_Code_and_Direction; 0x1cb85 $CB75 20 97 CC ; Get Area Code, Enter Code and Direction
lda      $0748                         ; 0x1cb88 $CB78 AD 48 07                ; Overworld Area out of Side View
sec                                    ; 0x1cb8b $CB7B 38                      ;
sbc      #$2C                          ; 0x1cb8c $CB7C E9 2C                   ;
lsr                                    ; 0x1cb8e $CB7E 4A                      ;
sta      $056B                         ; 0x1cb8f $CB7F 8D 6B 05                ; Town Code
;$056B = ($0748 - #$2C) / 2 (no remainder)                                     ;
lda      $0748                         ; 0x1cb92 $CB82 AD 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
sec                                    ; 0x1cb95 $CB85 38                      ;
sbc      #$34                          ; 0x1cb96 $CB86 E9 34                   ;
sta      $056C                         ; 0x1cb98 $CB88 8D 6C 05                ; Palace Code
;$056C = $0748 - #$34                                                          ;
lda      $0706                         ; 0x1cb9b $CB8B AD 06 07                ; Current Region
sta      $070A                         ; 0x1cb9e $CB8E 8D 0A 07                ;; Previous Region ?
lda      $6ABD,y                       ; 0x1cba1 $CB91 B9 BD 6A                ; Area Byte 3 (World Number)
pha                                    ; 0x1cba4 $CB94 48                      ;
and      #$03                          ; 0x1cba5 $CB95 29 03                   ; keep bits .... ..xx
sta      $0706                         ; 0x1cba7 $CB97 8D 06 07                ; Current Region
beq      LCBA5                         ; 0x1cbaa $CB9A F0 09                   ;
;If Region != 0, Town Code + 4                                                 ;
lda      $056B                         ; 0x1cbac $CB9C AD 6B 05                ; Town Code
clc                                    ; 0x1cbaf $CB9F 18                      ;
adc      #$04                          ; 0x1cbb0 $CBA0 69 04                   ;
sta      $056B                         ; 0x1cbb2 $CBA2 8D 6B 05                ;; Town Code	;used by wise man to pick magic to give?
LCBA5                                                                          ;
pla                                    ; 0x1cbb5 $CBA5 68                      ;
lsr                                    ; 0x1cbb6 $CBA6 4A                      ;
lsr                                    ; 0x1cbb7 $CBA7 4A                      ;
and      #$07                          ; 0x1cbb8 $CBA8 29 07                   ; keep bits .... .xxx
sta      $0707                         ; 0x1cbba $CBAA 8D 07 07                ; Current World
bne      LCBB2                         ; 0x1cbbd $CBAD D0 03                   ;
inc      $0709                         ; 0x1cbbf $CBAF EE 09 07                ;; used for going outside??
LCBB2                                                                          ;
lda      #$00                          ; 0x1cbc2 $CBB2 A9 00                   ; A = 00
sta      $0736                         ; 0x1cbc4 $CBB4 8D 36 07                ; Game Mode
rts                                    ; 0x1cbc7 $CBB7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBB8                                                                          ;
lda      $0706                         ; 0x1cbc8 $CBB8 AD 06 07                ; Current Region
ora      $0707                         ; 0x1cbcb $CBBB 0D 07 07                ; Current World
ora      $0748                         ; 0x1cbce $CBBE 0D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
beq      LCBCD                         ; 0x1cbd1 $CBC1 F0 0A                   ;
lda      $07AC                         ; 0x1cbd3 $CBC3 AD AC 07                ;
bne      LCBCD                         ; 0x1cbd6 $CBC6 D0 05                   ;
lda      #$04                          ; 0x1cbd8 $CBC8 A9 04                   ; A = 04
sta      $075F                         ; 0x1cbda $CBCA 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCBCD                                                                          ;
jsr      bank7_Get_Area_Code__Enter_Code_and_Direction; 0x1cbdd $CBCD 20 97 CC ;
;Related to the side Link enters from in a pass-through area                   ;
lda      $6ABD,y                       ; 0x1cbe0 $CBD0 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$60                          ; 0x1cbe3 $CBD3 29 60                   ; keep bits .xx. ....
beq      LCBF2                         ; 0x1cbe5 $CBD5 F0 1B                   ;
and      #$20                          ; 0x1cbe7 $CBD7 29 20                   ; keep bits ..x. ....
bne      LCBF8                         ; 0x1cbe9 $CBD9 D0 1D                   ;
lda      $0562                         ; 0x1cbeb $CBDB AD 62 05                ; Link's facing direction in OW
cmp      #$04                          ; 0x1cbee $CBDE C9 04                   ; check if Link is facing left or right
bcc      LCBE4                         ; 0x1cbf0 $CBE0 90 02                   ;
lsr                                    ; 0x1cbf2 $CBE2 4A                      ;
lsr                                    ; 0x1cbf3 $CBE3 4A                      ;
LCBE4                                                                          ;
and      #$01                          ; 0x1cbf4 $CBE4 29 01                   ; keep bits .... ...x
eor      #$01                          ; 0x1cbf6 $CBE6 49 01                   ; flip bits .... ...x
sta      $0701                         ; 0x1cbf8 $CBE8 8D 01 07                ; Facing direction when entering area
beq      LCBEF                         ; 0x1cbfb $CBEB F0 02                   ;
lda      #$03                          ; 0x1cbfd $CBED A9 03                   ; A = 03
LCBEF                                                                          ;
sta      $075C                         ; 0x1cbff $CBEF 8D 5C 07                ; Position code when entering area (0-3)
LCBF2                                                                          ;
inc      $0736                         ; 0x1cc02 $CBF2 EE 36 07                ; Game Mode
jmp      LCC40                         ; 0x1cc05 $CBF5 4C 40 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCBF8                                                                          ;
lda      #$01                          ; 0x1cc08 $CBF8 A9 01                   ; A = 01
sta      $0701                         ; 0x1cc0a $CBFA 8D 01 07                ; Facing direction when entering area
lda      $075F                         ; 0x1cc0d $CBFD AD 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
cmp      #$01                          ; 0x1cc10 $CC00 C9 01                   ;
bne      LCBF2                         ; 0x1cc12 $CC02 D0 EE                   ;
sta      $075C                         ; 0x1cc14 $CC04 8D 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
jsr      LCC50                         ; 0x1cc17 $CC07 20 50 CC                ;
lda      #$11                          ; 0x1cc1a $CC0A A9 11                   ; A = 11
jmp      LCC85                         ; 0x1cc1c $CC0C 4C 85 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Determine_the_Random_Battle_according_to_Links_position_in_OW            ;
ldy      $0706                         ; 0x1cc1f $CC0F AC 06 07                ; Current Region
lda      $73                           ; 0x1cc22 $CC12 A5 73                   ; Y Position on OW (square unit)
cmp      bank7_Height_of_frontier_between_North_and_South,y; 0x1cc24 $CC14 D9 32 CB; Height of frontier between North and South
lda      #$00                          ; 0x1cc27 $CC17 A9 00                   ; A = 00
rol                                    ; 0x1cc29 $CC19 2A                      ;
sta      L0000                         ; 0x1cc2a $CC1A 85 00                   ;
lda      $0563                         ; 0x1cc2c $CC1C AD 63 05                ; Type of terrain Link is facing in OW
sec                                    ; 0x1cc2f $CC1F 38                      ;
sbc      #$04                          ; 0x1cc30 $CC20 E9 04                   ;
asl                                    ; 0x1cc32 $CC22 0A                      ;
adc      L0000                         ; 0x1cc33 $CC23 65 00                   ;
tay                                    ; 0x1cc35 $CC25 A8                      ;
lda      L8409,y                       ; 0x1cc36 $CC26 B9 09 84                ;
ldy      #$3E                          ; 0x1cc39 $CC29 A0 3E                   ; Y = 3E
sta      $6A7E,y                       ; 0x1cc3b $CC2B 99 7E 6A                ; Area Byte 2 (Map Number)
lda      $73                           ; 0x1cc3e $CC2E A5 73                   ;; Overworld Y; Y Position on OW (square unit)
sta      $6A00,y                       ; 0x1cc40 $CC30 99 00 6A                ; Area Byte 0 (Y Position)
lda      $74                           ; 0x1cc43 $CC33 A5 74                   ;; Overworld X; X Position on OW (square unit)
sta      $6A3F,y                       ; 0x1cc45 $CC35 99 3F 6A                ; Area Byte 1 (X Position)
jsr      LCB59                         ; 0x1cc48 $CC38 20 59 CB                ;
lda      #$00                          ; 0x1cc4b $CC3B A9 00                   ; A = 00
sta      $075F                         ; 0x1cc4d $CC3D 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCC40                                                                          ;
lda      $6ABD,y                       ; 0x1cc50 $CC40 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$20                          ; 0x1cc53 $CC43 29 20                   ; keep bits ..x. .... (enter from right)
bne      LCC89                         ; 0x1cc55 $CC45 D0 42                   ;
lda      $075C                         ; 0x1cc57 $CC47 AD 5C 07                ; Position code when entering area
beq      LCC89                         ; 0x1cc5a $CC4A F0 3D                   ;
cmp      #$03                          ; 0x1cc5c $CC4C C9 03                   ;
beq      LCC89                         ; 0x1cc5e $CC4E F0 39                   ;
LCC50                                                                          ;
and      #$01                          ; 0x1cc60 $CC50 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1cc62 $CC52 8D 01 07                ; Facing direction when entering area
lda      #$70                          ; 0x1cc65 $CC55 A9 70                   ; A = 70
sta      $4D                           ; 0x1cc67 $CC57 85 4D                   ; Link's X Position (low byte)
ldx      #$0B                          ; 0x1cc69 $CC59 A2 0B                   ; X = 0B
stx      $0734                         ; 0x1cc6b $CC5B 8E 34 07                ;
ldx      #$06                          ; 0x1cc6e $CC5E A2 06                   ; X = 06
stx      $0735                         ; 0x1cc70 $CC60 8E 35 07                ;
ldx      #$00                          ; 0x1cc73 $CC63 A2 00                   ; X = 00
stx      $FD                           ; 0x1cc75 $CC65 86 FD                   ;
stx      $072C                         ; 0x1cc77 $CC67 8E 2C 07                ; Scrolling Offset Low Byte
ldx      $075C                         ; 0x1cc7a $CC6A AE 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
stx      $3B                           ; 0x1cc7d $CC6D 86 3B                   ; Link's X Position (high byte)
stx      $072A                         ; 0x1cc7f $CC6F 8E 2A 07                ; Scrolling Offset High Byte
dex                                    ; 0x1cc82 $CC72 CA                      ;
stx      $0732                         ; 0x1cc83 $CC73 8E 32 07                ;
inx                                    ; 0x1cc86 $CC76 E8                      ;
inx                                    ; 0x1cc87 $CC77 E8                      ;
stx      $0733                         ; 0x1cc88 $CC78 8E 33 07                ;
lda      $6ABD,y                       ; 0x1cc8b $CC7B B9 BD 6A                ; Area Byte 3 (World Number)
asl                                    ; 0x1cc8e $CC7E 0A                      ;
lda      #$12                          ; 0x1cc8f $CC7F A9 12                   ; A = 12
bcc      LCC85                         ; 0x1cc91 $CC81 90 02                   ;
lda      #$0C                          ; 0x1cc93 $CC83 A9 0C                   ; A = 0C
LCC85                                                                          ;
sta      $0736                         ; 0x1cc95 $CC85 8D 36 07                ; Game Mode
LCC88                                                                          ;
rts                                    ; 0x1cc98 $CC88 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCC89                                                                          ;
lda      $6ABD,y                       ; 0x1cc99 $CC89 B9 BD 6A                ; Area Byte 3 (World Number)
asl                                    ; 0x1cc9c $CC8C 0A                      ;
bcc      LCC88                         ; 0x1cc9d $CC8D 90 F9                   ;
lda      #$01                          ; 0x1cc9f $CC8F A9 01                   ; A = 01
sta      $075C                         ; 0x1cca1 $CC91 8D 5C 07                ;;start this map page		; start this many 'pages' into the scene	0	1	2	3		;4 = middle?	; Position code when entering area (0-3) (can be 4)
jmp      LCC50                         ; 0x1cca4 $CC94 4C 50 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Get_Area_Code__Enter_Code_and_Direction                                  ;
lda      $6A7E,y                       ; 0x1cca7 $CC97 B9 7E 6A                ; Area Byte 2 (Map Number)
pha                                    ; 0x1ccaa $CC9A 48                      ;
and      #$3F                          ; 0x1ccab $CC9B 29 3F                   ; keep bits ..xx xxxx
sta      $0561                         ; 0x1ccad $CC9D 8D 61 05                ; Area Code
pla                                    ; 0x1ccb0 $CCA0 68                      ;
asl                                    ; 0x1ccb1 $CCA1 0A                      ;
rol                                    ; 0x1ccb2 $CCA2 2A                      ;
rol                                    ; 0x1ccb3 $CCA3 2A                      ;
and      #$03                          ; 0x1ccb4 $CCA4 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1ccb6 $CCA6 8D 5C 07                ; Position code when entering area
and      #$01                          ; 0x1ccb9 $CCA9 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1ccbb $CCAB 8D 01 07                ; Facing direction when entering area
rts                                    ; 0x1ccbe $CCAE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCAF                                                                          ;
lda      #$66                          ; 0x1ccbf $CCAF A9 66                   ; A = 66
bne      LCCCC                         ; 0x1ccc1 $CCB1 D0 19                   ;
bank7_go_outside                                                               ;
lda      #$00                          ; 0x1ccc3 $CCB3 A9 00                   ; A = 00
sta      $0709                         ; 0x1ccc5 $CCB5 8D 09 07                ;; used for going outside??
sta      $075B                         ; 0x1ccc8 $CCB8 8D 5B 07                ;
ldy      $0748                         ; 0x1cccb $CCBB AC 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
lda      $6A00,y                       ; 0x1ccce $CCBE B9 00 6A                ; Area Byte 0 (Y Position)
bne      LCCCC                         ; 0x1ccd1 $CCC1 D0 09                   ;
lda      #$3D                          ; 0x1ccd3 $CCC3 A9 3D                   ; A = 3D
cmp      $6A3F,y                       ; 0x1ccd5 $CCC5 D9 3F 6A                ; Area Byte 1 (X Position)
bne      LCCAF                         ; 0x1ccd8 $CCC8 D0 E5                   ;
lda      #$51                          ; 0x1ccda $CCCA A9 51                   ; A = 51
LCCCC                                                                          ;
and      #$7F                          ; 0x1ccdc $CCCC 29 7F                   ; keep bits .xxx xxxx
sta      $73                           ; 0x1ccde $CCCE 85 73                   ; Y Position on OW (square unit)
lda      $6A3F,y                       ; 0x1cce0 $CCD0 B9 3F 6A                ; Area Byte 1 (X Position)
and      #$3F                          ; 0x1cce3 $CCD3 29 3F                   ; keep bits ..xx xxxx
sta      $74                           ; 0x1cce5 $CCD5 85 74                   ; X Position on OW (square unit)
lda      $6ABD,y                       ; 0x1cce7 $CCD7 B9 BD 6A                ; Area Byte 3 (World Number)
and      #$40                          ; 0x1ccea $CCDA 29 40                   ; keep bits .x.. .... (unknown bit)
beq      LCCF9                         ; 0x1ccec $CCDC F0 1B                   ;
ldx      $0562                         ; 0x1ccee $CCDE AE 62 05                ; Link's facing direction in OW
cpx      #$04                          ; 0x1ccf1 $CCE1 E0 04                   ; check if Link is facing down
bcs      LCCFF                         ; 0x1ccf3 $CCE3 B0 1A                   ;
inc      $74                           ; 0x1ccf5 $CCE5 E6 74                   ; X Position on OW (square unit)
ldx      $5F                           ; 0x1ccf7 $CCE7 A6 5F                   ;; Link's facing direction
lda      $6A00,y                       ; 0x1ccf9 $CCE9 B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1ccfc $CCEC 0A                      ; check for "External" bit
bcc      LCCF2                         ; 0x1ccfd $CCED 90 03                   ;
ldx      $0562                         ; 0x1ccff $CCEF AE 62 05                ; Link's facing direction in OW
LCCF2                                                                          ;
dex                                    ; 0x1cd02 $CCF2 CA                      ;
beq      LCCF9                         ; 0x1cd03 $CCF3 F0 04                   ;
dec      $74                           ; 0x1cd05 $CCF5 C6 74                   ; X Position on OW (square unit)
dec      $74                           ; 0x1cd07 $CCF7 C6 74                   ;; Overworld X; X Position on OW (square unit)
LCCF9                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1cd09 $CCF9 20 C5 FF                ; Load Bank 0
jmp      LCF05                         ; 0x1cd0c $CCFC 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCCFF                                                                          ;
inc      $73                           ; 0x1cd0f $CCFF E6 73                   ; Y Position on OW (square unit)
ldx      $5F                           ; 0x1cd11 $CD01 A6 5F                   ;; Link's facing direction
lda      $6A00,y                       ; 0x1cd13 $CD03 B9 00 6A                ; Area Byte 0 (Y Position)
asl                                    ; 0x1cd16 $CD06 0A                      ; check for "External" bit
bcc      LCD0F                         ; 0x1cd17 $CD07 90 06                   ;
lda      $0562                         ; 0x1cd19 $CD09 AD 62 05                ; Link's facing direction in OW
lsr                                    ; 0x1cd1c $CD0C 4A                      ;
lsr                                    ; 0x1cd1d $CD0D 4A                      ;
tax                                    ; 0x1cd1e $CD0E AA                      ;
LCD0F                                                                          ;
dex                                    ; 0x1cd1f $CD0F CA                      ;
beq      LCCF9                         ; 0x1cd20 $CD10 F0 E7                   ;
dec      $73                           ; 0x1cd22 $CD12 C6 73                   ; Y Position on OW (square unit)
dec      $73                           ; 0x1cd24 $CD14 C6 73                   ;; Overworld Y; Y Position on OW (square unit)
jmp      LCCF9                         ; 0x1cd26 $CD16 4C F9 CC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCD19                                                                          ;
jsr      LD15C                         ; 0x1cd29 $CD19 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1cd2c $CD1C 20 85 D3;
bank7_pointer_table12                                                          ;
.word    LCF21_SaveGameWhenChooseSAVEwhenDead__maybe; 0x1cd2f $CD1F 21 CF      ;
.word    LCF05                         ; 0x1cd31 $CD21 05 CF                   ;
bank7_Pointer_table_for_Key_Areas_Data                                         ;
.word    bank5_Area_Data_Great_Palace1 ; 0x1cd33 $CD23 1F 86                   ;West Hyrule - Key Areas (Y Pos, X Pos, Map, World)
.word    LA0FC                         ; 0x1cd35 $CD25 FC A0                   ;Death Mountain - Key Areas (Y Pos, X Pos, Map, World)
; ---------------------------------------------------------------------------- ;
bank7_Region_Overworld_Map_Pointer_Offset_Selector                             ;
.byt    $00,$02,$00                    ; 0x1cd37 $CD27 00 02 00                ;Region Overworld Map Pointer Offset Selector (3 bytes) for $706?
bank7_Graphics_Bank_for_Palaces_Palace_1                                       ;
;Index = Region (706) * 4 + Palace Code (56C)                                  ;
.byt    $04                            ; 0x1cd3a $CD2A 04                      ;04	Palace 1
bank7_Graphics_Bank_for_Palaces_Palace_2                                       ;
.byt    $05                            ; 0x1cd3b $CD2B 05                      ;05	Palace 2
bank7_Graphics_Bank_for_Palaces_Palace_3                                       ;
.byt    $09                            ; 0x1cd3c $CD2C 09                      ;09	Palace 3
bank7_Graphics_Bank_for_Palaces_Hypothetical_Palace_in_Region_0                ;
.byt    $09                            ; 0x1cd3d $CD2D 09                      ;09	Hypothetical Palace in Region 0
bank7_Graphics_Bank_for_Palaces_Palace_4                                       ;
.byt    $0A                            ; 0x1cd3e $CD2E 0A                      ;0A	Palace 4
bank7_Graphics_Bank_for_Palaces_Hypothetical_Palace_in_Region_1                ;
.byt    $0A                            ; 0x1cd3f $CD2F 0A                      ;0A	Hypothetical Palace in Region 1
                                                                               ;
.byt    $0A                            ; 0x1cd40 $CD30 0A                      ;0A	Hypothetical Palace in Region 1
                                                                               ;
.byt    $0A                            ; 0x1cd41 $CD31 0A                      ;0A	Hypothetical Palace in Region 1
bank7_Graphics_Bank_for_Palaces_Palace_5                                       ;
.byt    $0B                            ; 0x1cd42 $CD32 0B                      ;0B	Palace 5
bank7_Graphics_Bank_for_Palaces_Palace_6                                       ;
.byt    $0C                            ; 0x1cd43 $CD33 0C                      ;0C	Palace 6
bank7_Graphics_Bank_for_Palaces_Palace_7                                       ;
.byt    $06                            ; 0x1cd44 $CD34 06                      ;06	Palace 7                       
bank7_Table_for_Palace_Entrance_Palettes_Offset                                ;
;Index = Region (706) * 4 + Palace Code (56C)                                  ;
.byt    $00,$10,$20,$20,$30,$30,$30,$30; 0x1cd45 $CD35 00 10 20 20 30 30 30 30 ;
.byt    $40,$50,$60                    ; 0x1cd4d $CD3D 40 50 60                ;
; ---------------------------------------------------------------------------- ;
bank7_code18                                                                   ;
ldy      $0707                         ; 0x1cd50 $CD40 AC 07 07                ; Current World;cd40 ;Normalized world number into Y
lda      LC4B7,y                       ; 0x1cd53 $CD43 B9 B7 C4                ;cd43 ;Load bank number from table 
cmp      #$01                          ; 0x1cd56 $CD46 C9 01                   ;cd46 ;Bank 1 represents overworlds
bne      LCD59                         ; 0x1cd58 $CD48 D0 0F                   ;cd48 ;if not overworld, then done
; Determine if we really want bank 1 or 2                                      ;
ldy      $0706                         ; 0x1cd5a $CD4A AC 06 07                ; Current Region;cd4a ;Get the overworld index
beq      LCD59                         ; 0x1cd5d $CD4D F0 0A                   ;cd4d ;If index==0 then WestHy (bank1).  done.
dey                                    ; 0x1cd5f $CD4F 88                      ;cd4f ;Decrement index
bne      LCD57                         ; 0x1cd60 $CD50 D0 05                   ;cd50 ;If index!=0 then EastHy (bank2).
ldy      $070A                         ; 0x1cd62 $CD52 AC 0A 07                ;cd52 ;index was 1, so its either DM or MZ.
; Use the previous overworld ($070a) to                                        ;
; determin if bank 1 or bank 2.                                                ;
beq      LCD59                         ; 0x1cd65 $CD55 F0 02                   ;cd55 ;If Y==0, then bank 1.
LCD57                                                                          ;
lda      #$02                          ; 0x1cd67 $CD57 A9 02                   ; A = 02;cd57 ;Load bank 2
LCD59                                                                          ;
sta      $0769                         ; 0x1cd69 $CD59 8D 69 07                ; Bank to switch to;cd59 ;Store desired bank number                 
jsr      LFFCC                         ; 0x1cd6c $CD5C 20 CC FF                ; Bank Switch
lda      $0769                         ; 0x1cd6f $CD5F AD 69 07                ; Bank to switch to
ldy      $0707                         ; 0x1cd72 $CD62 AC 07 07                ; Current World
cpy      #$03                          ; 0x1cd75 $CD65 C0 03                   ;
bcc      LCD78                         ; 0x1cd77 $CD67 90 0F                   ;
lda      $0706                         ; 0x1cd79 $CD69 AD 06 07                ; Current Region
asl                                    ; 0x1cd7c $CD6C 0A                      ;
asl                                    ; 0x1cd7d $CD6D 0A                      ;
adc      $056C                         ; 0x1cd7e $CD6E 6D 6C 05                ; Palace Code
tay                                    ; 0x1cd81 $CD71 A8                      ;
lda      bank7_Graphics_Bank_for_Palaces_Palace_1,y; 0x1cd82 $CD72 B9 2A CD    ;
sta      $070B                         ; 0x1cd85 $CD75 8D 0B 07                ;Graphics Bank for Palaces
LCD78                                                                          ;
asl                                    ; 0x1cd88 $CD78 0A                      ;
sta      $076E                         ; 0x1cd89 $CD79 8D 6E 07                ; Graphics bank to use
ldy      $0707                         ; 0x1cd8c $CD7C AC 07 07                ; Current World
bne      LCD8A                         ; 0x1cd8f $CD7F D0 09                   ;
lda      $0706                         ; 0x1cd91 $CD81 AD 06 07                ; Current Region
cmp      #$01                          ; 0x1cd94 $CD84 C9 01                   ;
bne      LCD8A                         ; 0x1cd96 $CD86 D0 02                   ;
ldy      #$04                          ; 0x1cd98 $CD88 A0 04                   ; Y = 04
LCD8A                                                                          ;
lda      LC4BD,y                       ; 0x1cd9a $CD8A B9 BD C4                ;
tay                                    ; 0x1cd9d $CD8D A8                      ;
lda      bank7_Pointer_table_for_Key_Areas_Data,y; 0x1cd9e $CD8E B9 23 CD      ; Pointer to Area Pointers (low byte)
sta      L0000                         ; 0x1cda1 $CD91 85 00                   ;
lda      bank7_Pointer_table_for_Key_Areas_Data+$01,y; 0x1cda3 $CD93 B9 24 CD  ; Pointer to Area Pointers (high byte)
sta      $01                           ; 0x1cda6 $CD96 85 01                   ;
ldy      #$00                          ; 0x1cda8 $CD98 A0 00                   ; Y = 00
LOOP_load_enemy_data_to_ram7000_7CFF                                           ;
lda      bank5_Enemy_Data_Great_Palace,y; 0x1cdaa $CD9A B9 A0 88               ; Enemy Data Table
sta      L7000,y                       ; 0x1cdad $CD9D 99 00 70                ; load into 7000-70FF
iny                                    ; 0x1cdb0 $CDA0 C8                      ;
bne      LOOP_load_enemy_data_to_ram7000_7CFF; 0x1cdb1 $CDA1 D0 F7             ;
LCDA3                                                                          ;
lda      L89A0,y                       ; 0x1cdb3 $CDA3 B9 A0 89                ; Enemy Data Table
sta      $7100,y                       ; 0x1cdb6 $CDA6 99 00 71                ; load into 7100-71FF
iny                                    ; 0x1cdb9 $CDA9 C8                      ;
bne      LCDA3                         ; 0x1cdba $CDAA D0 F7                   ;
LCDAC                                                                          ;
lda      L8AA0,y                       ; 0x1cdbc $CDAC B9 A0 8A                ; Enemy Data Table
sta      $7200,y                       ; 0x1cdbf $CDAF 99 00 72                ; load into 7200-72FF
iny                                    ; 0x1cdc2 $CDB2 C8                      ;
bne      LCDAC                         ; 0x1cdc3 $CDB3 D0 F7                   ;
LCDB5                                                                          ;
lda      L8BA0,y                       ; 0x1cdc5 $CDB5 B9 A0 8B                ; Enemy Data Table
sta      $7300,y                       ; 0x1cdc8 $CDB8 99 00 73                ; load into 7300-73FF
iny                                    ; 0x1cdcb $CDBB C8                      ;
bne      LCDB5                         ; 0x1cdcc $CDBC D0 F7                   ;
ldx      $0706                         ; 0x1cdce $CDBE AE 06 07                ; Current Region
lda      bank7_Region_Overworld_Map_Pointer_Offset_Selector,x; 0x1cdd1 $CDC1 BD 27 CD;
tax                                    ; 0x1cdd4 $CDC4 AA                      ;
lda      bank5_table_unused,x          ; 0x1cdd5 $CDC5 BD 08 85                ; Overworld Map Data Pointer Low Byte
sta      $02                           ; 0x1cdd8 $CDC8 85 02                   ;
lda      L8509,x                       ; 0x1cdda $CDCA BD 09 85                ; Overworld Map Data Pointer High Byte
sta      $03                           ; 0x1cddd $CDCD 85 03                   ;
LCDCF                                                                          ;
lda      ($02),y                       ; 0x1cddf $CDCF B1 02                   ; Overworld Data
sta      $7C00,y                       ; 0x1cde1 $CDD1 99 00 7C                ; load into 7C00-7CFF
iny                                    ; 0x1cde4 $CDD4 C8                      ;
bne      LCDCF                         ; 0x1cde5 $CDD5 D0 F8                   ;
inc      $03                           ; 0x1cde7 $CDD7 E6 03                   ;
LCDD9                                                                          ;
lda      ($02),y                       ; 0x1cde9 $CDD9 B1 02                   ; Overworld Data
sta      $7D00,y                       ; 0x1cdeb $CDDB 99 00 7D                ; load into 7D00-7DFF
iny                                    ; 0x1cdee $CDDE C8                      ;
bne      LCDD9                         ; 0x1cdef $CDDF D0 F8                   ;
inc      $03                           ; 0x1cdf1 $CDE1 E6 03                   ;
LCDE3                                                                          ;
lda      ($02),y                       ; 0x1cdf3 $CDE3 B1 02                   ; Overworld Data
sta      $7E00,y                       ; 0x1cdf5 $CDE5 99 00 7E                ; load into 7E00-7EFF
iny                                    ; 0x1cdf8 $CDE8 C8                      ;
bne      LCDE3                         ; 0x1cdf9 $CDE9 D0 F8                   ;
inc      $03                           ; 0x1cdfb $CDEB E6 03                   ;
LCDED                                                                          ;
lda      ($02),y                       ; 0x1cdfd $CDED B1 02                   ; Overworld Data
sta      $7F00,y                       ; 0x1cdff $CDEF 99 00 7F                ; load into 7F00-7FFF
iny                                    ; 0x1ce02 $CDF2 C8                      ;
bpl      LCDED                         ; 0x1ce03 $CDF3 10 F8                   ;
ldy      #$00                          ; 0x1ce05 $CDF5 A0 00                   ; Y = 00
LCDF7                                                                          ;
lda      (L0000),y                     ; 0x1ce07 $CDF7 B1 00                   ; Area Data
sta      $6A00,y                       ; 0x1ce09 $CDF9 99 00 6A                ; load into 6A00-6AFF
iny                                    ; 0x1ce0c $CDFC C8                      ;
bne      LCDF7                         ; 0x1ce0d $CDFD D0 F8                   ;
inc      $01                           ; 0x1ce0f $CDFF E6 01                   ;
LCE01                                                                          ;
lda      (L0000),y                     ; 0x1ce11 $CE01 B1 00                   ; Area Data
sta      $6B00,y                       ; 0x1ce13 $CE03 99 00 6B                ; load into 6B00-6BFF
iny                                    ; 0x1ce16 $CE06 C8                      ;
bne      LCE01                         ; 0x1ce17 $CE07 D0 F8                   ;
inc      $01                           ; 0x1ce19 $CE09 E6 01                   ;
LCE0B                                                                          ;
lda      (L0000),y                     ; 0x1ce1b $CE0B B1 00                   ; Area Data
sta      $6C00,y                       ; 0x1ce1d $CE0D 99 00 6C                ; load into 6C00-6CF5
iny                                    ; 0x1ce20 $CE10 C8                      ;
cpy      #$58                          ; 0x1ce21 $CE11 C0 58                   ;
bne      LCE0B                         ; 0x1ce23 $CE13 D0 F6                   ;
;Load All Palettes for Palaces into 7919-79F8 (E0 bytes)                       ;
ldy      #$00                          ; 0x1ce25 $CE15 A0 00                   ; Y = 00
LCE17                                                                          ;
lda      bank5_Palettes_for_Great_Palace0,y; 0x1ce27 $CE17 B9 0E 80            ; Palettes Table
sta      $7919,y                       ; 0x1ce2a $CE1A 99 19 79                ;
iny                                    ; 0x1ce2d $CE1D C8                      ;
cpy      #$E0                          ; 0x1ce2e $CE1E C0 E0                   ;
bcc      LCE17                         ; 0x1ce30 $CE20 90 F5                   ;
lda      $0707                         ; 0x1ce32 $CE22 AD 07 07                ; Current World
cmp      #$03                          ; 0x1ce35 $CE25 C9 03                   ;
bcc      bank7_Transfer_2A1_bytes_from_9400_or_A900_if_World_4_to_6D00; 0x1ce37 $CE27 90 4E;
lda      $0706                         ; 0x1ce39 $CE29 AD 06 07                ; Current Region
asl                                    ; 0x1ce3c $CE2C 0A                      ;
asl                                    ; 0x1ce3d $CE2D 0A                      ;
adc      $056C                         ; 0x1ce3e $CE2E 6D 6C 05                ; Palace Code
tay                                    ; 0x1ce41 $CE31 A8                      ;
lda      bank7_Table_for_Palace_Entrance_Palettes_Offset,y; 0x1ce42 $CE32 B9 35 CD;
tay                                    ; 0x1ce45 $CE35 A8                      ;
cmp      #$60                          ; 0x1ce46 $CE36 C9 60                   ; 60 is index A, Great Palace (R2 P2)
beq      LCE63                         ; 0x1ce48 $CE38 F0 29                   ;
pha                                    ; 0x1ce4a $CE3A 48                      ;
pha                                    ; 0x1ce4b $CE3B 48                      ;
ldx      #$00                          ; 0x1ce4c $CE3C A2 00                   ; X = 00
bank7_Load_Palace_Entrance_Palettes_into_7919_7928_10_bytes                    ;
lda      L8470,y                       ; 0x1ce4e $CE3E B9 70 84                ;
sta      $7919,x                       ; 0x1ce51 $CE41 9D 19 79                ;
iny                                    ; 0x1ce54 $CE44 C8                      ;
inx                                    ; 0x1ce55 $CE45 E8                      ;
cpx      #$10                          ; 0x1ce56 $CE46 E0 10                   ;
bcc      bank7_Load_Palace_Entrance_Palettes_into_7919_7928_10_bytes; 0x1ce58 $CE48 90 F4;
pla                                    ; 0x1ce5a $CE4A 68                      ;
tay                                    ; 0x1ce5b $CE4B A8                      ;
bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998                    ;
lda      LBF00,y                       ; 0x1ce5c $CE4C B9 00 BF                ;
sta      $7919,x                       ; 0x1ce5f $CE4F 9D 19 79                ;
iny                                    ; 0x1ce62 $CE52 C8                      ;
inx                                    ; 0x1ce63 $CE53 E8                      ;
tya                                    ; 0x1ce64 $CE54 98                      ;
and      #$0F                          ; 0x1ce65 $CE55 29 0F                   ; keep bits .... xxxx
bne      bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998; 0x1ce67 $CE57 D0 F3;
tya                                    ; 0x1ce69 $CE59 98                      ;
sec                                    ; 0x1ce6a $CE5A 38                      ;
sbc      #$10                          ; 0x1ce6b $CE5B E9 10                   ;
tay                                    ; 0x1ce6d $CE5D A8                      ;
cpx      #$80                          ; 0x1ce6e $CE5E E0 80                   ;
bcc      bank7_Recopy_the_same_set_of_Palace_Palettes_into_7929_7998; 0x1ce70 $CE60 90 EA;
pla                                    ; 0x1ce72 $CE62 68                      ;
LCE63                                                                          ;
lsr                                    ; 0x1ce73 $CE63 4A                      ;
lsr                                    ; 0x1ce74 $CE64 4A                      ;
tay                                    ; 0x1ce75 $CE65 A8                      ;
ldx      #$00                          ; 0x1ce76 $CE66 A2 00                   ; X = 00
LCE68                                                                          ;
lda      L84D8,y                       ; 0x1ce78 $CE68 B9 D8 84                ;
sta      $79C5,x                       ; 0x1ce7b $CE6B 9D C5 79                ;
sta      $79D5,x                       ; 0x1ce7e $CE6E 9D D5 79                ;
iny                                    ; 0x1ce81 $CE71 C8                      ;
inx                                    ; 0x1ce82 $CE72 E8                      ;
cpx      #$04                          ; 0x1ce83 $CE73 E0 04                   ;
bcc      LCE68                         ; 0x1ce85 $CE75 90 F1                   ;
bank7_Transfer_2A1_bytes_from_9400_or_A900_if_World_4_to_6D00                  ;
lda      #$00                          ; 0x1ce87 $CE77 A9 00                   ; A = 00
sta      L0000                         ; 0x1ce89 $CE79 85 00                   ;
lda      #$94                          ; 0x1ce8b $CE7B A9 94                   ; A = 94
sta      $01                           ; 0x1ce8d $CE7D 85 01                   ;
lda      $0707                         ; 0x1ce8f $CE7F AD 07 07                ; Current World
cmp      #$04                          ; 0x1ce92 $CE82 C9 04                   ; World 4 = Palaces Type B
bne      LCE8E                         ; 0x1ce94 $CE84 D0 08                   ;
lda      #$00                          ; 0x1ce96 $CE86 A9 00                   ; A = 00
sta      L0000                         ; 0x1ce98 $CE88 85 00                   ;
lda      #$A9                          ; 0x1ce9a $CE8A A9 A9                   ; A = A9
sta      $01                           ; 0x1ce9c $CE8C 85 01                   ;
LCE8E                                                                          ;
lda      #$00                          ; 0x1ce9e $CE8E A9 00                   ; A = 00
sta      $02                           ; 0x1cea0 $CE90 85 02                   ;
lda      #$6D                          ; 0x1cea2 $CE92 A9 6D                   ; A = 6D
sta      $03                           ; 0x1cea4 $CE94 85 03                   ;
lda      #$A1                          ; 0x1cea6 $CE96 A9 A1                   ; A = A1
sta      $04                           ; 0x1cea8 $CE98 85 04                   ;
lda      #$02                          ; 0x1ceaa $CE9A A9 02                   ; A = 02
sta      $05                           ; 0x1ceac $CE9C 85 05                   ;
ldy      #$00                          ; 0x1ceae $CE9E A0 00                   ; A = 00
LCEA0                                                                          ;
lda      (L0000),y                     ; 0x1ceb0 $CEA0 B1 00                   ;
sta      ($02),y                       ; 0x1ceb2 $CEA2 91 02                   ;
lda      L0000                         ; 0x1ceb4 $CEA4 A5 00                   ;
clc                                    ; 0x1ceb6 $CEA6 18                      ;
adc      #$01                          ; 0x1ceb7 $CEA7 69 01                   ;
sta      L0000                         ; 0x1ceb9 $CEA9 85 00                   ;
lda      $01                           ; 0x1cebb $CEAB A5 01                   ;
adc      #$00                          ; 0x1cebd $CEAD 69 00                   ;
sta      $01                           ; 0x1cebf $CEAF 85 01                   ;
lda      $02                           ; 0x1cec1 $CEB1 A5 02                   ;
clc                                    ; 0x1cec3 $CEB3 18                      ;
adc      #$01                          ; 0x1cec4 $CEB4 69 01                   ;
sta      $02                           ; 0x1cec6 $CEB6 85 02                   ;
lda      $03                           ; 0x1cec8 $CEB8 A5 03                   ;
adc      #$00                          ; 0x1ceca $CEBA 69 00                   ;
sta      $03                           ; 0x1cecc $CEBC 85 03                   ;
lda      $04                           ; 0x1cece $CEBE A5 04                   ;
sec                                    ; 0x1ced0 $CEC0 38                      ;
sbc      #$01                          ; 0x1ced1 $CEC1 E9 01                   ;
sta      $04                           ; 0x1ced3 $CEC3 85 04                   ;
lda      $05                           ; 0x1ced5 $CEC5 A5 05                   ;
sbc      #$00                          ; 0x1ced7 $CEC7 E9 00                   ;
sta      $05                           ; 0x1ced9 $CEC9 85 05                   ;
ora      $04                           ; 0x1cedb $CECB 05 04                   ;
bne      LCEA0                         ; 0x1cedd $CECD D0 D1                   ;
ldy      $0707                         ; 0x1cedf $CECF AC 07 07                ; Current World
dey                                    ; 0x1cee2 $CED2 88                      ;
cpy      #$02                          ; 0x1cee3 $CED3 C0 02                   ;
bcs      LCEF6                         ; 0x1cee5 $CED5 B0 1F                   ;
ldy      $056B                         ; 0x1cee7 $CED7 AC 6B 05                ; Town Code
dey                                    ; 0x1ceea $CEDA 88                      ;
cpy      #$06                          ; 0x1ceeb $CEDB C0 06                   ;
bcs      LCEF6                         ; 0x1ceed $CEDD B0 17                   ;
;If Town Code is < 6                                                           ;
;Transfer 14 bytes from a table to 6DE2                                        ;
;Related to Enemy Velocities                                                   ;
tya                                    ; 0x1ceef $CEDF 98                      ;
asl                                    ; 0x1cef0 $CEE0 0A                      ;
tay                                    ; 0x1cef1 $CEE1 A8                      ;
lda      L9624,y                       ; 0x1cef2 $CEE2 B9 24 96                ;
sta      L0000                         ; 0x1cef5 $CEE5 85 00                   ;
lda      L9625,y                       ; 0x1cef7 $CEE7 B9 25 96                ;
sta      $01                           ; 0x1cefa $CEEA 85 01                   ;
ldy      #$13                          ; 0x1cefc $CEEC A0 13                   ; Y = 13
LCEEE                                                                          ;
lda      (L0000),y                     ; 0x1cefe $CEEE B1 00                   ;
sta      $6DE2,y                       ; 0x1cf00 $CEF0 99 E2 6D                ;
dey                                    ; 0x1cf03 $CEF3 88                      ;
bpl      LCEEE                         ; 0x1cf04 $CEF4 10 F8                   ;
LCEF6                                                                          ;
ldy      $0707                         ; 0x1cf06 $CEF6 AC 07 07                ; Current World
bne      LCF09                         ; 0x1cf09 $CEF9 D0 0E                   ;
lda      $0709                         ; 0x1cf0b $CEFB AD 09 07                ;; used for going outside??
bne      LCF05                         ; 0x1cf0e $CEFE D0 05                   ;
lda      #$06                          ; 0x1cf10 $CF00 A9 06                   ; A = 06
jmp      LCF0B                         ; 0x1cf12 $CF02 4C 0B CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF05                                                                          ;
inc      $0736                         ; 0x1cf15 $CF05 EE 36 07                ; Game Mode
rts                                    ; 0x1cf18 $CF08 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF09                                                                          ;
lda      #$07                          ; 0x1cf19 $CF09 A9 07                   ; A = 07
LCF0B                                                                          ;
sta      $0736                         ; 0x1cf1b $CF0B 8D 36 07                ; Game Mode
lda      #$01                          ; 0x1cf1e $CF0E A9 01                   ; A = 01
cpy      #$02                          ; 0x1cf20 $CF10 C0 02                   ;
bne      LCF1D                         ; 0x1cf22 $CF12 D0 09                   ;
ldy      $056B                         ; 0x1cf24 $CF14 AC 6B 05                ; Town Code
cpy      #$07                          ; 0x1cf27 $CF17 C0 07                   ;
bne      LCF1D                         ; 0x1cf29 $CF19 D0 02                   ;
lda      #$08                          ; 0x1cf2b $CF1B A9 08                   ; A = 08
LCF1D                                                                          ;
sta      $075F                         ; 0x1cf2d $CF1D 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
rts                                    ; 0x1cf30 $CF20 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF21_SaveGameWhenChooseSAVEwhenDead__maybe                                    ;
lda      #$05                          ; 0x1cf31 $CF21 A9 05                   ; A = 05
jsr      LFFCC                         ; 0x1cf33 $CF23 20 CC FF                ;
jsr      LB9CA                         ; 0x1cf36 $CF26 20 CA B9                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf39 $CF29 20 C9 FF                ; Load Bank $0769
inc      $0738                         ; 0x1cf3c $CF2C EE 38 07                ;
rts                                    ; 0x1cf3f $CF2F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW                                 ;
;Region Code * 5 + World Code                                                  ;
lda      $0706                         ; 0x1cf40 $CF30 AD 06 07                ; Current Region
asl                                    ; 0x1cf43 $CF33 0A                      ;
asl                                    ; 0x1cf44 $CF34 0A                      ;
adc      $0706                         ; 0x1cf45 $CF35 6D 06 07                ;; overworld index (0=west hyrule, 1=death mtn/maze island, 2=east hyrule)
adc      $0707                         ; 0x1cf48 $CF38 6D 07 07                ; Current World
rts                                    ; 0x1cf4b $CF3B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF3C                                                                          ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf4c $CF3C 20 C9 FF                ; Load Bank $0769
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1cf4f $CF3F 20 82 D3;
bank7_pointer_table13                                                          ;
.word    LD25E                         ; 0x1cf52 $CF42 5E D2                   ;
.word    LD269                         ; 0x1cf54 $CF44 69 D2                   ;
.word    bank7_Set_PPU_Macro_for_Palettes; 0x1cf56 $CF46 5B D0                 ;
.word    bank7_code19                  ; 0x1cf58 $CF48 FC D0                   ;
.word    LD120                         ; 0x1cf5a $CF4A 20 D1                   ;
; ---------------------------------------------------------------------------- ;
bank7_take_side_exit                                                           ;
jsr      bank7_Remove_All_Sprites      ; 0x1cf5c $CF4C 20 4C D2                ; Remove All Sprites
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1cf5f $CF4F 20 C9 FF                ; Load Bank $0769
lda      $0561                         ; 0x1cf62 $CF52 AD 61 05                ; Area Code
ldy      $0707                         ; 0x1cf65 $CF55 AC 07 07                ; Current World
bne      LCF60                         ; 0x1cf68 $CF58 D0 06                   ;
cmp      #$1D                          ; 0x1cf6a $CF5A C9 1D                   ;
bcc      LCF60                         ; 0x1cf6c $CF5C 90 02                   ;
lda      #$00                          ; 0x1cf6e $CF5E A9 00                   ; A = 00
LCF60                                                                          ;
asl                                    ; 0x1cf70 $CF60 0A                      ;
asl                                    ; 0x1cf71 $CF61 0A                      ;
adc      $3B                           ; 0x1cf72 $CF62 65 3B                   ; Link's X Position (high byte)
tay                                    ; 0x1cf74 $CF64 A8                      ;
lda      $6AFC,y                       ; 0x1cf75 $CF65 B9 FC 6A                ; Connectivity Data Table
pha                                    ; 0x1cf78 $CF68 48                      ;
and      #$FC                          ; 0x1cf79 $CF69 29 FC                   ; keep bits xxxx xx..
cmp      #$FC                          ; 0x1cf7b $CF6B C9 FC                   ;
bne      LCFB2                         ; 0x1cf7d $CF6D D0 43                   ;
pla                                    ; 0x1cf7f $CF6F 68                      ;
and      #$03                          ; 0x1cf80 $CF70 29 03                   ; keep bits .... ..xx
clc                                    ; 0x1cf82 $CF72 18                      ;
adc      $0748                         ; 0x1cf83 $CF73 6D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
sta      $0748                         ; 0x1cf86 $CF76 8D 48 07                ;; area location index (the index of the spot on the overworld that pulled you into the sideview)	; Overworld Area out of Side View
ldy      #$00                          ; 0x1cf89 $CF79 A0 00                   ; Y = 00
sty      $07FF                         ; 0x1cf8b $CF7B 8C FF 07                ;
sty      $05E9                         ; 0x1cf8e $CF7E 8C E9 05                ; Sound Played Out of Area
ldy      #$90                          ; 0x1cf91 $CF81 A0 90                   ; Y = 90
sty      $4000                         ; 0x1cf93 $CF83 8C 00 40                ;
lda      #$01                          ; 0x1cf96 $CF86 A9 01                   ; A = 01
ldy      $0707                         ; 0x1cf98 $CF88 AC 07 07                ; Current World
beq      LCF9D                         ; 0x1cf9b $CF8B F0 10                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cf9d $CF8D 20 3D D0   ; Mute Music
ldy      #$00                          ; 0x1cfa0 $CF90 A0 00                   ; Y = 00
sty      $0707                         ; 0x1cfa2 $CF92 8C 07 07                ; Current World
inc      $0709                         ; 0x1cfa5 $CF95 EE 09 07                ;; used for going outside??
lda      #$00                          ; 0x1cfa8 $CF98 A9 00                   ; A = 00
LCF9A                                                                          ;
jmp      LCFF8                         ; 0x1cfaa $CF9A 4C F8 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCF9D                                                                          ;
ldy      #$04                          ; 0x1cfad $CF9D A0 04                   ; Y = 04
sty      $05E9                         ; 0x1cfaf $CF9F 8C E9 05                ; Sound Played Out of Area
ldy      $0706                         ; 0x1cfb2 $CFA2 AC 06 07                ; Current Region
bne      LCF9A                         ; 0x1cfb5 $CFA5 D0 F3                   ;
ldy      $0561                         ; 0x1cfb7 $CFA7 AC 61 05                ; Area Code
bne      LCF9A                         ; 0x1cfba $CFAA D0 EE                   ;
sty      $05E9                         ; 0x1cfbc $CFAC 8C E9 05                ; Sound Played Out of Area
jmp      LCFF8                         ; 0x1cfbf $CFAF 4C F8 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LCFB2                                                                          ;
lsr                                    ; 0x1cfc2 $CFB2 4A                      ;
lsr                                    ; 0x1cfc3 $CFB3 4A                      ;
sta      $0561                         ; 0x1cfc4 $CFB4 8D 61 05                ; Area Code
pla                                    ; 0x1cfc7 $CFB7 68                      ;
ldx      $0704                         ; 0x1cfc8 $CFB8 AE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
bne      LCFC2                         ; 0x1cfcb $CFBB D0 05                   ;
and      #$03                          ; 0x1cfcd $CFBD 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1cfcf $CFBF 8D 5C 07                ; Position code when entering area (0-3)
LCFC2                                                                          ;
and      #$01                          ; 0x1cfd2 $CFC2 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1cfd4 $CFC4 8D 01 07                ; Facing direction when entering area
lda      $0561                         ; 0x1cfd7 $CFC7 AD 61 05                ; Area Code
cmp      #$24                          ; 0x1cfda $CFCA C9 24                   ;
bcs      LCFEC                         ; 0x1cfdc $CFCC B0 1E                   ;
lda      $075B                         ; 0x1cfde $CFCE AD 5B 07                ;
beq      LCFEC                         ; 0x1cfe1 $CFD1 F0 19                   ;
clc                                    ; 0x1cfe3 $CFD3 18                      ;
adc      #$04                          ; 0x1cfe4 $CFD4 69 04                   ;
sta      $075C                         ; 0x1cfe6 $CFD6 8D 5C 07                ; Position code when entering area (0-3)
dec      $075B                         ; 0x1cfe9 $CFD9 CE 5B 07                ;
bne      LCFEC                         ; 0x1cfec $CFDC D0 0E                   ;
lda      $056B                         ; 0x1cfee $CFDE AD 6B 05                ; Town Code
cmp      #$07                          ; 0x1cff1 $CFE1 C9 07                   ;
beq      LCFEC                         ; 0x1cff3 $CFE3 F0 07                   ;
jsr      bank7_Mute_music_when_loading_between_areas; 0x1cff5 $CFE5 20 3D D0   ; Mute music when loading between areas
lda      #$02                          ; 0x1cff8 $CFE8 A9 02                   ; A = 02
bne      LCFF3                         ; 0x1cffa $CFEA D0 07                   ;
LCFEC                                                                          ;
ldx      $0704                         ; 0x1cffc $CFEC AE 04 07                ;; 0=start bottom of screen, 1=start at top of screen ; elevator
bne      LCFF6                         ; 0x1cfff $CFEF D0 05                   ;
lda      #$00                          ; 0x1d001 $CFF1 A9 00                   ; A = 00
LCFF3                                                                          ;
sta      $075F                         ; 0x1d003 $CFF3 8D 5F 07                ;;at bank0: 0D64: AD 5F07	LDA $075F	then 	STA $EB		; Music Channel	; something to do with music
LCFF6                                                                          ;
lda      #$07                          ; 0x1d006 $CFF6 A9 07                   ; A = 07
LCFF8                                                                          ;
sta      $0736                         ; 0x1d008 $CFF8 8D 36 07                ;; Game Mode ; screen intro type
rts                                    ; 0x1d00b $CFFB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_take_door_exit                                                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d00c $CFFC 20 C9 FF                ; Load Bank in $0769
LD000     = * + $0001                                                          ;
lda      $0561                         ; 0x1d00f $CFFF AD 61 05                ; Area Code
asl                                    ; 0x1d012 $D002 0A                      ;
asl                                    ; 0x1d013 $D003 0A                      ;
adc      $3B                           ; 0x1d014 $D004 65 3B                   ; Link's X Position (high byte)
tay                                    ; 0x1d016 $D006 A8                      ;
lda      bank5_Area_Data_Great_Palace2,y; 0x1d017 $D007 B9 17 88               ;
and      #$FC                          ; 0x1d01a $D00A 29 FC                   ; keep bits xxxx xx..
lsr                                    ; 0x1d01c $D00C 4A                      ;
lsr                                    ; 0x1d01d $D00D 4A                      ;
sta      $0561                         ; 0x1d01e $D00E 8D 61 05                ; Area Code
lda      bank5_Area_Data_Great_Palace2,y; 0x1d021 $D011 B9 17 88               ;
and      #$03                          ; 0x1d024 $D014 29 03                   ; keep bits .... ..xx
sta      $075C                         ; 0x1d026 $D016 8D 5C 07                ; Position code when entering area (0-3)
and      #$01                          ; 0x1d029 $D019 29 01                   ; keep bits .... ...x
sta      $0701                         ; 0x1d02b $D01B 8D 01 07                ; Facing direction when entering area
lda      $075B                         ; 0x1d02e $D01E AD 5B 07                ;
clc                                    ; 0x1d031 $D021 18                      ;
adc      #$04                          ; 0x1d032 $D022 69 04                   ;
tax                                    ; 0x1d034 $D024 AA                      ;
jsr      LC690                         ; 0x1d035 $D025 20 90 C6                ;
jsr      LCFEC                         ; 0x1d038 $D028 20 EC CF                ;
ldx      $075B                         ; 0x1d03b $D02B AE 5B 07                ;
dex                                    ; 0x1d03e $D02E CA                      ;
bne      LD041                         ; 0x1d03f $D02F D0 10                   ;
lda      $056B                         ; 0x1d041 $D031 AD 6B 05                ;; Town Code	;used by wise man to pick magic to give?
cmp      #$07                          ; 0x1d044 $D034 C9 07                   ;
beq      LD041                         ; 0x1d046 $D036 F0 09                   ;
lda      #$08                          ; 0x1d048 $D038 A9 08                   ; A = 08		;indoor music
sta      $075F                         ; 0x1d04a $D03A 8D 5F 07                ;sets $eb later
bank7_Mute_music_when_loading_between_areas                                    ;
lda      #$80                          ; 0x1d04d $D03D A9 80                   ; A = 80 (80 = no music)
sta      $EB                           ; 0x1d04f $D03F 85 EB                   ; Music Channel
LD041                                                                          ;
rts                                    ; 0x1d051 $D041 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD042                                                                          ;
lda      #$02                          ; 0x1d052 $D042 A9 02                   ; A = 02
jsr      bank7_chr_bank_switch__load_A ; 0x1d054 $D044 20 B1 FF                ;
jsr      bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1d057 $D047 20 66 D2;
jmp      LCF05                         ; 0x1d05a $D04A 4C 05 CF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD04D                                                                          ;
lda      #$06                          ; 0x1d05d $D04D A9 06                   ; A = 06
jsr      bank7_chr_bank_switch__load_A ; 0x1d05f $D04F 20 B1 FF                ;
jsr      bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382; 0x1d062 $D052 20 82 D3;
bank7_pointer_table14                                                          ;
.word    bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0; 0x1d065 $D055 66 D2 ;
.word    LD0B8                         ; 0x1d067 $D057 B8 D0                   ;
.word    LD150                         ; 0x1d069 $D059 50 D1                   ;
; ---------------------------------------------------------------------------- ;
bank7_Set_PPU_Macro_for_Palettes                                               ;
ldy      #$03                          ; 0x1d06b $D05B A0 03                   ; Y = 03
lda      ($D4),y                       ; 0x1d06d $D05D B1 D4                   ; Area Header Byte 3; Area Header Byte 3
lsr                                    ; 0x1d06f $D05F 4A                      ;
lsr                                    ; 0x1d070 $D060 4A                      ;
and      #$30                          ; 0x1d071 $D061 29 30                   ; keep bits ..xx ....
sta      L0000                         ; 0x1d073 $D063 85 00                   ;
lda      ($D4),y                       ; 0x1d075 $D065 B1 D4                   ; Area Header Byte 3
asl                                    ; 0x1d077 $D067 0A                      ;
and      #$70                          ; 0x1d078 $D068 29 70                   ; keep bits .xxx ....
cmp      #$10                          ; 0x1d07a $D06A C9 10                   ;
bne      LD07D                         ; 0x1d07c $D06C D0 0F                   ;
ldx      $0707                         ; 0x1d07e $D06E AE 07 07                ; Current World
bne      LD07D                         ; 0x1d081 $D071 D0 0A                   ;
ldx      $0785                         ; 0x1d083 $D073 AE 85 07                ; Have Candle
bne      LD07D                         ; 0x1d086 $D076 D0 05                   ;
lda      #$40                          ; 0x1d088 $D078 A9 40                   ; A = 40
sta      L0000                         ; 0x1d08a $D07A 85 00                   ;
asl                                    ; 0x1d08c $D07C 0A                      ;
LD07D                                                                          ;
tax                                    ; 0x1d08d $D07D AA                      ;
ldy      #$00                          ; 0x1d08e $D07E A0 00                   ; Y = 00
lda      #$3F                          ; 0x1d090 $D080 A9 3F                   ; A = 3F
sta      L0302                         ; 0x1d092 $D082 8D 02 03                ;; Used when writing text to screen
sty      $0303                         ; 0x1d095 $D085 8C 03 03                ;; Letter position when writing to screen
LD088                                                                          ;
lda      $7919,x                       ; 0x1d098 $D088 BD 19 79                ;
sta      $0305,y                       ; 0x1d09b $D08B 99 05 03                ;
inx                                    ; 0x1d09e $D08E E8                      ;
iny                                    ; 0x1d09f $D08F C8                      ;
cpy      #$10                          ; 0x1d0a0 $D090 C0 10                   ;
bcc      LD088                         ; 0x1d0a2 $D092 90 F4                   ;
ldx      L0000                         ; 0x1d0a4 $D094 A6 00                   ;
LD096                                                                          ;
lda      $79A9,x                       ; 0x1d0a6 $D096 BD A9 79                ;
cmp      #$FF                          ; 0x1d0a9 $D099 C9 FF                   ;
bne      LD0A3                         ; 0x1d0ab $D09B D0 06                   ;
lda      $0305                         ; 0x1d0ad $D09D AD 05 03                ;; Empty Row Space Character
sta      $0751                         ; 0x1d0b0 $D0A0 8D 51 07                ;
LD0A3                                                                          ;
sta      $0305,y                       ; 0x1d0b3 $D0A3 99 05 03                ;
inx                                    ; 0x1d0b6 $D0A6 E8                      ;
iny                                    ; 0x1d0b7 $D0A7 C8                      ;
cpy      #$20                          ; 0x1d0b8 $D0A8 C0 20                   ;
bcc      LD096                         ; 0x1d0ba $D0AA 90 EA                   ;
sty      $0304                         ; 0x1d0bc $D0AC 8C 04 03                ;; Text memory offset?
lda      #$FF                          ; 0x1d0bf $D0AF A9 FF                   ; A = FF
sta      $0305,y                       ; 0x1d0c1 $D0B1 99 05 03                ;
inc      $073D                         ; 0x1d0c4 $D0B4 EE 3D 07                ; Routine Index
rts                                    ; 0x1d0c7 $D0B7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD0B8                                                                          ;
lda      #$03                          ; 0x1d0c8 $D0B8 A9 03                   ; A = 03
jmp      LD11A                         ; 0x1d0ca $D0BA 4C 1A D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_some_Palettes                                                  ;
.byt    $3F,$00,$10,$0F,$30,$12,$16,$0F; 0x1d0cd $D0BD 3F 00 10 0F 30 12 16 0F ;
.byt    $30,$30,$30,$0F,$30,$30,$30,$0F; 0x1d0d5 $D0C5 30 30 30 0F 30 30 30 0F ;
.byt    $26,$0F,$0F,$FF                ; 0x1d0dd $D0CD 26 0F 0F FF             ;
bank7_Tables_for_some_PPU_Command_Data                                         ;
.byt    $20,$44,$06                    ; 0x1d0e1 $D0D1 20 44 06                ;
                                                                               ;
.byt    $E6,$DA,$E0,$E2,$DC,$F6        ; 0x1d0e4 $D0D4 E6 DA E0 E2 DC F6       ;MAGIC-
                                                                               ;
.byt    $20,$4D,$05                    ; 0x1d0ea $D0DA 20 4D 05                ;
                                                                               ;
.byt    $E5,$E2,$DF,$DE,$F6            ; 0x1d0ed $D0DD E5 E2 DF DE F6          ;LIFE-
                                                                               ;
.byt    $20,$5A,$04                    ; 0x1d0f2 $D0E2 20 5A 04                ;
                                                                               ;
.byt    $E7,$DE,$F1,$ED                ; 0x1d0f5 $D0E5 E7 DE F1 ED             ;NEXT
                                                                               ;
.byt    $20,$61,$01                    ; 0x1d0f9 $D0E9 20 61 01                ;
                                                                               ;
.byt    $C9                            ; 0x1d0fc $D0EC C9                      ;
                                                                               ;
.byt    $20,$6D,$01                    ; 0x1d0fd $D0ED 20 6D 01                ;
                                                                               ;
.byt    $F7,$20,$7A,$05,$CE            ; 0x1d100 $D0F0 F7 20 7A 05 CE          ;
                                                                               ;
.byt    $D0,$D0,$D0,$D0                ; 0x1d105 $D0F5 D0 D0 D0 D0             ;
bank7_table12                                                                  ;
.byt    $4C,$02,$03                    ; 0x1d109 $D0F9 4C 02 03                ;
; ---------------------------------------------------------------------------- ;
bank7_code19                                                                   ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d10c $D0FC 20 C5 FF                ; Load Bank 0
lda      #$80                          ; 0x1d10f $D0FF A9 80                   ; A = 80
sta      $074F                         ; 0x1d111 $D101 8D 4F 07                ;; Related to Pause Pane
sta      $0750                         ; 0x1d114 $D104 8D 50 07                ;
ldy      $0301                         ; 0x1d117 $D107 AC 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      L96A8                         ; 0x1d11a $D10A 20 A8 96                ;
lda      #$40                          ; 0x1d11d $D10D A9 40                   ; A = 40
sta      $074F                         ; 0x1d11f $D10F 8D 4F 07                ;; Related to Pause Pane
ldy      $0301                         ; 0x1d122 $D112 AC 01 03                ;;ppu number of bytes following (counts both instructions and tile data values); Used when writing text to screen
jsr      L96A8                         ; 0x1d125 $D115 20 A8 96                ;
lda      #$07                          ; 0x1d128 $D118 A9 07                   ; A = 07
LD11A                                                                          ;
inc      $073D                         ; 0x1d12a $D11A EE 3D 07                ;; Routine Index
jmp      LD158                         ; 0x1d12d $D11D 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD120                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d130 $D120 20 C5 FF                ; Load Bank 0
jsr      L9A04                         ; 0x1d133 $D123 20 04 9A                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d136 $D126 20 C9 FF                ; Load Bank $0769
bank7_function_find_a_free_enemy_slot__maybe                                   ;
ldx      #$05                          ; 0x1d139 $D129 A2 05                   ; X = 05
LD12B                                                                          ;
stx      $10                           ; 0x1d13b $D12B 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $B6,x                         ; 0x1d13d $D12D B5 B6                   ; Generated Enemy Slot
bne      LD135                         ; 0x1d13f $D12F D0 04                   ;
tax                                    ; 0x1d141 $D131 AA                      ;
jsr      LD625                         ; 0x1d142 $D132 20 25 D6                ;
LD135                                                                          ;
dex                                    ; 0x1d145 $D135 CA                      ;
bpl      LD12B                         ; 0x1d146 $D136 10 F3                   ;
lda      $0740                         ; 0x1d148 $D138 AD 40 07                ;
beq      LD143                         ; 0x1d14b $D13B F0 06                   ;
cmp      #$05                          ; 0x1d14d $D13D C9 05                   ;
beq      LD14B                         ; 0x1d14f $D13F F0 0A                   ;
bne      LD120                         ; 0x1d151 $D141 D0 DD                   ;
LD143                                                                          ;
dec      $0722                         ; 0x1d153 $D143 CE 22 07                ;
bpl      LD14B                         ; 0x1d156 $D146 10 03                   ;
inc      $0736                         ; 0x1d158 $D148 EE 36 07                ; Game Mode
LD14B                                                                          ;
lda      #$02                          ; 0x1d15b $D14B A9 02                   ; A = 02
jmp      LD158                         ; 0x1d15d $D14D 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD150                                                                          ;
inc      $0736                         ; 0x1d160 $D150 EE 36 07                ; Game Mode
lda      #$08                          ; 0x1d163 $D153 A9 08                   ; A = 08
jmp      LD158                         ; 0x1d165 $D155 4C 58 D1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD158                                                                          ;
sta      $0725                         ; 0x1d168 $D158 8D 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1d16b $D15B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD15C                                                                          ;
lda      $0738                         ; 0x1d16c $D15C AD 38 07                ;
cmp      $0739                         ; 0x1d16f $D15F CD 39 07                ;
sta      $0739                         ; 0x1d172 $D162 8D 39 07                ;
bne      LD195                         ; 0x1d175 $D165 D0 2E                   ;
rts                                    ; 0x1d177 $D167 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD168                                                                          ;
lda      $0736                         ; 0x1d178 $D168 AD 36 07                ; Game Mode
cmp      $0737                         ; 0x1d17b $D16B CD 37 07                ;
sta      $0737                         ; 0x1d17e $D16E 8D 37 07                ;
bne      LD18D                         ; 0x1d181 $D171 D0 1A                   ;
rts                                    ; 0x1d183 $D173 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD174                                                                          ;
lda      $076C                         ; 0x1d184 $D174 AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
cmp      $076D                         ; 0x1d187 $D177 CD 6D 07                ;
sta      $076D                         ; 0x1d18a $D17A 8D 6D 07                ;
beq      LD19A                         ; 0x1d18d $D17D F0 1B                   ;
jsr      bank7_Remove_All_Sprites      ; 0x1d18f $D17F 20 4C D2                ;
lda      $076C                         ; 0x1d192 $D182 AD 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
ldy      #$00                          ; 0x1d195 $D185 A0 00                   ; Y = 00
sty      $073C                         ; 0x1d197 $D187 8C 3C 07                ;
sty      $0736                         ; 0x1d19a $D18A 8C 36 07                ; Game Mode
LD18D                                                                          ;
ldy      #$00                          ; 0x1d19d $D18D A0 00                   ; Y = 00
sty      $073B                         ; 0x1d19f $D18F 8C 3B 07                ;
sty      $0738                         ; 0x1d1a2 $D192 8C 38 07                ;
LD195                                                                          ;
ldy      #$00                          ; 0x1d1a5 $D195 A0 00                   ; Y = 00
sty      $073D                         ; 0x1d1a7 $D197 8C 3D 07                ; Routine Index
LD19A                                                                          ;
rts                                    ; 0x1d1aa $D19A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_applyGravityMotion                                                       ;
ldy      #$00                          ; 0x1d1ab $D19B A0 00                   ; Y = 00
lda      $057D,x                       ; 0x1d1ad $D19D BD 7D 05                ; Link/Enemy Y Velocity
bpl      LD1A3                         ; 0x1d1b0 $D1A0 10 01                   ;
dey                                    ; 0x1d1b2 $D1A2 88                      ;
LD1A3                                                                          ;
sty      $07                           ; 0x1d1b3 $D1A3 84 07                   ;
clc                                    ; 0x1d1b5 $D1A5 18                      ;
adc      $29,x                         ; 0x1d1b6 $D1A6 75 29                   ;;y_pos (Link's y position in sideview)
sta      $29,x                         ; 0x1d1b8 $D1A8 95 29                   ; Link/Enemy Y position
lda      $19,x                         ; 0x1d1ba $D1AA B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      $07                           ; 0x1d1bc $D1AC 65 07                   ;
sta      $19,x                         ; 0x1d1be $D1AE 95 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
lda      $03E6,x                       ; 0x1d1c0 $D1B0 BD E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
clc                                    ; 0x1d1c3 $D1B3 18                      ;
adc      L0000                         ; 0x1d1c4 $D1B4 65 00                   ;
sta      $03E6,x                       ; 0x1d1c6 $D1B6 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
lda      $057D,x                       ; 0x1d1c9 $D1B9 BD 7D 05                ;;vspeed (Link's vertical velocity, negative is up.)
adc      #$00                          ; 0x1d1cc $D1BC 69 00                   ;
sta      $057D,x                       ; 0x1d1ce $D1BE 9D 7D 05                ; Link/Enemy Y Velocity				triggered when jumping
cmp      $02                           ; 0x1d1d1 $D1C1 C5 02                   ;
bne      LD1CD                         ; 0x1d1d3 $D1C3 D0 08                   ;
sta      $057D,x                       ; 0x1d1d5 $D1C5 9D 7D 05                ;;vspeed (Link's vertical velocity, negative is up.)
lda      #$00                          ; 0x1d1d8 $D1C8 A9 00                   ; A = 00
sta      $03E6,x                       ; 0x1d1da $D1CA 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
LD1CD                                                                          ;
rts                                    ; 0x1d1dd $D1CD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_XY_Movements_Routine                                                     ;
lda      $70,x                         ; 0x1d1de $D1CE B5 70                   ;;hspeed (Link's horizontal velocity)
asl                                    ; 0x1d1e0 $D1D0 0A                      ;
asl                                    ; 0x1d1e1 $D1D1 0A                      ;
asl                                    ; 0x1d1e2 $D1D2 0A                      ;
asl                                    ; 0x1d1e3 $D1D3 0A                      ;
sta      $01                           ; 0x1d1e4 $D1D4 85 01                   ;
lda      $70,x                         ; 0x1d1e6 $D1D6 B5 70                   ;;hspeed (Link's horizontal velocity)
lsr                                    ; 0x1d1e8 $D1D8 4A                      ;
lsr                                    ; 0x1d1e9 $D1D9 4A                      ;
lsr                                    ; 0x1d1ea $D1DA 4A                      ;
lsr                                    ; 0x1d1eb $D1DB 4A                      ;
cmp      #$08                          ; 0x1d1ec $D1DC C9 08                   ;
bcc      LD1E2                         ; 0x1d1ee $D1DE 90 02                   ;
ora      #$F0                          ; 0x1d1f0 $D1E0 09 F0                   ; set bits  xxxx ....
LD1E2                                                                          ;
sta      L0000                         ; 0x1d1f2 $D1E2 85 00                   ;
ldy      #$00                          ; 0x1d1f4 $D1E4 A0 00                   ; Y = 00
cmp      #$00                          ; 0x1d1f6 $D1E6 C9 00                   ;
bpl      LD1EB                         ; 0x1d1f8 $D1E8 10 01                   ;
dey                                    ; 0x1d1fa $D1EA 88                      ;
LD1EB                                                                          ;
sty      $02                           ; 0x1d1fb $D1EB 84 02                   ;
lda      $03D6,x                       ; 0x1d1fd $D1ED BD D6 03                ;
clc                                    ; 0x1d200 $D1F0 18                      ;
adc      $01                           ; 0x1d201 $D1F1 65 01                   ;
sta      $03D6,x                       ; 0x1d203 $D1F3 9D D6 03                ;
lda      #$00                          ; 0x1d206 $D1F6 A9 00                   ; A = 00
rol                                    ; 0x1d208 $D1F8 2A                      ;
pha                                    ; 0x1d209 $D1F9 48                      ;
ror                                    ; 0x1d20a $D1FA 6A                      ;
lda      $4D,x                         ; 0x1d20b $D1FB B5 4D                   ; Link/Enemy X Position (low byte)
adc      L0000                         ; 0x1d20d $D1FD 65 00                   ;
sta      $4D,x                         ; 0x1d20f $D1FF 95 4D                   ;
lda      $3B,x                         ; 0x1d211 $D201 B5 3B                   ; Link/Enemy X position (high byte)
adc      $02                           ; 0x1d213 $D203 65 02                   ;
sta      $3B,x                         ; 0x1d215 $D205 95 3B                   ;
jmp      LD247                         ; 0x1d217 $D207 4C 47 D2                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD20A                                                                          ;
lda      $057D,x                       ; 0x1d21a $D20A BD 7D 05                ; Link/Enemy Y Velocity
asl                                    ; 0x1d21d $D20D 0A                      ;
asl                                    ; 0x1d21e $D20E 0A                      ;
asl                                    ; 0x1d21f $D20F 0A                      ;
asl                                    ; 0x1d220 $D210 0A                      ;
sta      $01                           ; 0x1d221 $D211 85 01                   ;
lda      $057D,x                       ; 0x1d223 $D213 BD 7D 05                ; Link/Enemy Y Velocity
lsr                                    ; 0x1d226 $D216 4A                      ;
lsr                                    ; 0x1d227 $D217 4A                      ;
lsr                                    ; 0x1d228 $D218 4A                      ;
lsr                                    ; 0x1d229 $D219 4A                      ;
cmp      #$08                          ; 0x1d22a $D21A C9 08                   ;
bcc      LD220                         ; 0x1d22c $D21C 90 02                   ;
ora      #$F0                          ; 0x1d22e $D21E 09 F0                   ; set bits  xxxx ....
LD220                                                                          ;
sta      L0000                         ; 0x1d230 $D220 85 00                   ;
ldy      #$00                          ; 0x1d232 $D222 A0 00                   ; Y = 00
cmp      #$00                          ; 0x1d234 $D224 C9 00                   ;
bpl      LD229                         ; 0x1d236 $D226 10 01                   ;
dey                                    ; 0x1d238 $D228 88                      ;
LD229                                                                          ;
sty      $02                           ; 0x1d239 $D229 84 02                   ;
lda      $03E6,x                       ; 0x1d23b $D22B BD E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
clc                                    ; 0x1d23e $D22E 18                      ;
adc      $01                           ; 0x1d23f $D22F 65 01                   ;
sta      $03E6,x                       ; 0x1d241 $D231 9D E6 03                ;;gravity_counter (each time it overflows, vspeed += 1)
lda      #$00                          ; 0x1d244 $D234 A9 00                   ; A = 00
rol                                    ; 0x1d246 $D236 2A                      ;
pha                                    ; 0x1d247 $D237 48                      ;
ror                                    ; 0x1d248 $D238 6A                      ;
lda       !$29,x                       ; 0x1d249 $D239 BD 29 00                ; Link/Enemy Y position
adc      L0000                         ; 0x1d24c $D23C 65 00                   ;
sta       !$29,x                       ; 0x1d24e $D23E 9D 29 00                ; Link/Enemy Y position
lda      $19,x                         ; 0x1d251 $D241 B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      $02                           ; 0x1d253 $D243 65 02                   ;
sta      $19,x                         ; 0x1d255 $D245 95 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
LD247                                                                          ;
pla                                    ; 0x1d257 $D247 68                      ;
clc                                    ; 0x1d258 $D248 18                      ;
adc      L0000                         ; 0x1d259 $D249 65 00                   ;
rts                                    ; 0x1d25b $D24B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Remove_All_Sprites                                                       ;
ldy      #$00                          ; 0x1d25c $D24C A0 00                   ; Y = 00
beq      LD252                         ; 0x1d25e $D24E F0 02                   ;
bank7_Remove_All_Sprites_except_Sprite0                                        ;
ldy      #$04                          ; 0x1d260 $D250 A0 04                   ; Y = 04
LD252                                                                          ;
lda      #$F8                          ; 0x1d262 $D252 A9 F8                   ; A = F8
LD254                                                                          ;
sta      $0200,y                       ; 0x1d264 $D254 99 00 02                ;
iny                                    ; 0x1d267 $D257 C8                      ;
iny                                    ; 0x1d268 $D258 C8                      ;
iny                                    ; 0x1d269 $D259 C8                      ;
iny                                    ; 0x1d26a $D25A C8                      ;
bne      LD254                         ; 0x1d26b $D25B D0 F7                   ;
rts                                    ; 0x1d26d $D25D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD25E                                                                          ;
jsr      LD27D                         ; 0x1d26e $D25E 20 7D D2                ;
bank7_Erase_Name_Table_1                                                       ;
lda      #$24                          ; 0x1d271 $D261 A9 24                   ; A = 24
bank7_Erase_Name_Table_0                                                       ;
jmp      bank7_Fill_Screen_with_Tile_Code_F4_space__Starting_at_PPU_Address_A_mulipliedby_100; 0x1d273 $D263 4C BE D2; Fill Screen with Tile Code F4
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Erase_Name_Tables_0and1__set_scroll_to_0_0                               ;
jsr      bank7_Erase_Name_Table_1      ; 0x1d276 $D266 20 61 D2                ; Erase Name Table 1
LD269                                                                          ;
lda      #$20                          ; 0x1d279 $D269 A9 20                   ; A = 20
jsr      bank7_Erase_Name_Table_0      ; 0x1d27b $D26B 20 63 D2                ; Erase Name Table 0
lda      #$00                          ; 0x1d27e $D26E A9 00                   ; A = 00
sta      $FC                           ; 0x1d280 $D270 85 FC                   ;
sta      $FD                           ; 0x1d282 $D272 85 FD                   ;
sta      $0746                         ; 0x1d284 $D274 8D 46 07                ;
sta      $2005                         ; 0x1d287 $D277 8D 05 20                ; Screen Scroll Register (V)
sta      $2005                         ; 0x1d28a $D27A 8D 05 20                ; Screen Scroll Register (H)
LD27D                                                                          ;
inc      $073D                         ; 0x1d28d $D27D EE 3D 07                ; Routine Index
rts                                    ; 0x1d290 $D280 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Reset_Memory_Ranges                                                      ;
ldx      #$00                          ; 0x1d291 $D281 A2 00                   ; X = 00
txa                                    ; 0x1d293 $D283 8A                      ;
LD284                                                                          ;
sta      $0700,x                       ; 0x1d294 $D284 9D 00 07                ;
dex                                    ; 0x1d297 $D287 CA                      ;
bne      LD284                         ; 0x1d298 $D288 D0 FA                   ;
ldx      #$00                          ; 0x1d29a $D28A A2 00                   ; X = 00
txa                                    ; 0x1d29c $D28C 8A                      ;
LD28D                                                                          ;
sta      L0600,x                       ; 0x1d29d $D28D 9D 00 06                ;
dex                                    ; 0x1d2a0 $D290 CA                      ;
bne      LD28D                         ; 0x1d2a1 $D291 D0 FA                   ;
LD293                                                                          ;
ldx      #$00                          ; 0x1d2a3 $D293 A2 00                   ; X = 00
txa                                    ; 0x1d2a5 $D295 8A                      ;
LD296                                                                          ;
sta      $0500,x                       ; 0x1d2a6 $D296 9D 00 05                ;
dex                                    ; 0x1d2a9 $D299 CA                      ;
bne      LD296                         ; 0x1d2aa $D29A D0 FA                   ;
bank7_Set_Memory_200_4FF_and_00_DF_to_Zero                                     ;
ldx      #$00                          ; 0x1d2ac $D29C A2 00                   ; X = 00
txa                                    ; 0x1d2ae $D29E 8A                      ;
LD29F                                                                          ;
sta      $0400,x                       ; 0x1d2af $D29F 9D 00 04                ;;sword_slash_frame (animation frame)
dex                                    ; 0x1d2b2 $D2A2 CA                      ;
bne      LD29F                         ; 0x1d2b3 $D2A3 D0 FA                   ;
ldx      #$00                          ; 0x1d2b5 $D2A5 A2 00                   ; X = 00
txa                                    ; 0x1d2b7 $D2A7 8A                      ;
LD2A8                                                                          ;
sta      $0300,x                       ; 0x1d2b8 $D2A8 9D 00 03                ;
dex                                    ; 0x1d2bb $D2AB CA                      ;
bne      LD2A8                         ; 0x1d2bc $D2AC D0 FA                   ;
ldx      #$DF                          ; 0x1d2be $D2AE A2 DF                   ; X = DF
LD2B0                                                                          ;
sta      L0000,x                       ; 0x1d2c0 $D2B0 95 00                   ;
dex                                    ; 0x1d2c2 $D2B2 CA                      ;
cpx      #$FF                          ; 0x1d2c3 $D2B3 E0 FF                   ;
bne      LD2B0                         ; 0x1d2c5 $D2B5 D0 F9                   ;
stx      L0302                         ; 0x1d2c7 $D2B7 8E 02 03                ;; Used when writing text to screen
stx      L0363                         ; 0x1d2ca $D2BA 8E 63 03                ;
rts                                    ; 0x1d2cd $D2BD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Fill_Screen_with_Tile_Code_F4_space__Starting_at_PPU_Address_A_mulipliedby_100 ;
ldy      $2002                         ; 0x1d2ce $D2BE AC 02 20                ;
ldy      #$30                          ; 0x1d2d1 $D2C1 A0 30                   ; Y = 30
sty      $2000                         ; 0x1d2d3 $D2C3 8C 00 20                ;
ldy      #$00                          ; 0x1d2d6 $D2C6 A0 00                   ; Y = 00
sta      $2006                         ; 0x1d2d8 $D2C8 8D 06 20                ;
sty      $2006                         ; 0x1d2db $D2CB 8C 06 20                ;
ldx      #$03                          ; 0x1d2de $D2CE A2 03                   ; X = 03
lda      #$F4                          ; 0x1d2e0 $D2D0 A9 F4                   ; A = F4
LD2D2                                                                          ;
sta      $2007                         ; 0x1d2e2 $D2D2 8D 07 20                ;
iny                                    ; 0x1d2e5 $D2D5 C8                      ;
bne      LD2D2                         ; 0x1d2e6 $D2D6 D0 FA                   ;
dex                                    ; 0x1d2e8 $D2D8 CA                      ;
bne      LD2D2                         ; 0x1d2e9 $D2D9 D0 F7                   ;
LD2DB                                                                          ;
sta      $2007                         ; 0x1d2eb $D2DB 8D 07 20                ;
iny                                    ; 0x1d2ee $D2DE C8                      ;
cpy      #$C0                          ; 0x1d2ef $D2DF C0 C0                   ;
bne      LD2DB                         ; 0x1d2f1 $D2E1 D0 F8                   ;
lda      #$00                          ; 0x1d2f3 $D2E3 A9 00                   ; A = 00
LD2E5                                                                          ;
sta      $2007                         ; 0x1d2f5 $D2E5 8D 07 20                ;
iny                                    ; 0x1d2f8 $D2E8 C8                      ;
bne      LD2E5                         ; 0x1d2f9 $D2E9 D0 FA                   ;
LD2EB                                                                          ;
rts                                    ; 0x1d2fb $D2EB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD2EC                                                                          ;
ldy      #$00                          ; 0x1d2fc $D2EC A0 00                   ; Y = 00			;07:D2EC
lda      (L0000),y                     ; 0x1d2fe $D2EE B1 00                   ;
cmp      #$FF                          ; 0x1d300 $D2F0 C9 FF                   ;
beq      LD2EB                         ; 0x1d302 $D2F2 F0 F7                   ;RTS is here
cmp      #$4C                          ; 0x1d304 $D2F4 C9 4C                   ;
bne      LD307                         ; 0x1d306 $D2F6 D0 0F                   ;
iny                                    ; 0x1d308 $D2F8 C8                      ;
lda      (L0000),y                     ; 0x1d309 $D2F9 B1 00                   ;
tax                                    ; 0x1d30b $D2FB AA                      ;
iny                                    ; 0x1d30c $D2FC C8                      ;
lda      (L0000),y                     ; 0x1d30d $D2FD B1 00                   ;
sta      $01                           ; 0x1d30f $D2FF 85 01                   ;
stx      L0000                         ; 0x1d311 $D301 86 00                   ;
ldy      #$00                          ; 0x1d313 $D303 A0 00                   ; Y = 00
lda      (L0000),y                     ; 0x1d315 $D305 B1 00                   ;
LD307                                                                          ;
ldx      $2002                         ; 0x1d317 $D307 AE 02 20                ; PPU Status Register
sta      $2006                         ; 0x1d31a $D30A 8D 06 20                ; PPU Memory Address
iny                                    ; 0x1d31d $D30D C8                      ;
lda      (L0000),y                     ; 0x1d31e $D30E B1 00                   ;
sta      $2006                         ; 0x1d320 $D310 8D 06 20                ; PPU Memory Address
iny                                    ; 0x1d323 $D313 C8                      ;
lda      (L0000),y                     ; 0x1d324 $D314 B1 00                   ;
asl                                    ; 0x1d326 $D316 0A                      ;
pha                                    ; 0x1d327 $D317 48                      ;
lda      $FF                           ; 0x1d328 $D318 A5 FF                   ;; Sprite Bank ?
ora      #$04                          ; 0x1d32a $D31A 09 04                   ; set bits  .... .x..
bcs      LD320                         ; 0x1d32c $D31C B0 02                   ;
and      #$FB                          ; 0x1d32e $D31E 29 FB                   ; keep bits xxxx x.xx
LD320                                                                          ;
sta      $2000                         ; 0x1d330 $D320 8D 00 20                ;
LD323                                                                          ;
pla                                    ; 0x1d333 $D323 68                      ;
asl                                    ; 0x1d334 $D324 0A                      ;
bcc      LD32A                         ; 0x1d335 $D325 90 03                   ;
ora      #$02                          ; 0x1d337 $D327 09 02                   ; set bits  .... ..x.
iny                                    ; 0x1d339 $D329 C8                      ;
LD32A                                                                          ;
lsr                                    ; 0x1d33a $D32A 4A                      ;
lsr                                    ; 0x1d33b $D32B 4A                      ;
tax                                    ; 0x1d33c $D32C AA                      ;
LD32D                                                                          ;
bcs      LD330                         ; 0x1d33d $D32D B0 01                   ;
iny                                    ; 0x1d33f $D32F C8                      ;
LD330                                                                          ;
lda      (L0000),y                     ; 0x1d340 $D330 B1 00                   ;top status bar text "MAGIC" gets read here
sta      $2007                         ; 0x1d342 $D332 8D 07 20                ;
dex                                    ; 0x1d345 $D335 CA                      ;
bne      LD32D                         ; 0x1d346 $D336 D0 F5                   ;
iny                                    ; 0x1d348 $D338 C8                      ;
tya                                    ; 0x1d349 $D339 98                      ;
clc                                    ; 0x1d34a $D33A 18                      ;
adc      L0000                         ; 0x1d34b $D33B 65 00                   ;
sta      L0000                         ; 0x1d34d $D33D 85 00                   ;
bcc      LD2EC                         ; 0x1d34f $D33F 90 AB                   ;
inc      $01                           ; 0x1d351 $D341 E6 01                   ;
jmp      LD2EC                         ; 0x1d353 $D343 4C EC D2                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Controllers_Input                                                        ;
jsr      bank7_Controllers_Input_Capture; 0x1d356 $D346 20 67 D3               ;
lda      $F5                           ; 0x1d359 $D349 A5 F5                   ; Controller 1 buttons pressed
sta      L0000                         ; 0x1d35b $D34B 85 00                   ;
jsr      bank7_Controllers_Input_Capture; 0x1d35d $D34D 20 67 D3               ;
lda      $F5                           ; 0x1d360 $D350 A5 F5                   ; Controller 1 buttons pressed
cmp      L0000                         ; 0x1d362 $D352 C5 00                   ;
bne      bank7_Controllers_Input       ; 0x1d364 $D354 D0 F0                   ;
ldx      #$01                          ; 0x1d366 $D356 A2 01                   ; X = 01
LD358                                                                          ;
lda      $F5,x                         ; 0x1d368 $D358 B5 F5                   ;
tay                                    ; 0x1d36a $D35A A8                      ;
eor      $F7,x                         ; 0x1d36b $D35B 55 F7                   ;
and      $F5,x                         ; 0x1d36d $D35D 35 F5                   ;
sta      $F5,x                         ; 0x1d36f $D35F 95 F5                   ;
sty      $F7,x                         ; 0x1d371 $D361 94 F7                   ;
dex                                    ; 0x1d373 $D363 CA                      ;
bpl      LD358                         ; 0x1d374 $D364 10 F2                   ;
rts                                    ; 0x1d376 $D366 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Controllers_Input_Capture                                                ;
ldx      #$01                          ; 0x1d377 $D367 A2 01                   ;;X = #$01 0000_0001
stx      $4016                         ; 0x1d379 $D369 8E 16 40                ; controllers strobe (01)
dex                                    ; 0x1d37c $D36C CA                      ;
stx      $4016                         ; 0x1d37d $D36D 8E 16 40                ; controllers strobe (00)
ldx      #$08                          ; 0x1d380 $D370 A2 08                   ;;X = #$08 0000_1000
LD372                                                                          ;
lda      $4016                         ; 0x1d382 $D372 AD 16 40                ;
lsr                                    ; 0x1d385 $D375 4A                      ;
rol      $F5                           ; 0x1d386 $D376 26 F5                   ;; Controller 1 Buttons Pressed
lda      $4017                         ; 0x1d388 $D378 AD 17 40                ;
lsr                                    ; 0x1d38b $D37B 4A                      ;
rol      $F6                           ; 0x1d38c $D37C 26 F6                   ;; Controller 2 Buttons Pressed
dex                                    ; 0x1d38e $D37E CA                      ;
bne      LD372                         ; 0x1d38f $D37F D0 F1                   ;
rts                                    ; 0x1d391 $D381 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_JmpToRoutine_at_Index_073D_in_Table_Address_from_the_top_of_the_Stack_The_Pointer_Table_immediately_follows_the_JSR_to_D382 ;
lda      $073D                         ; 0x1d392 $D382 AD 3D 07                ;; Routine Index
bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP                  ;
asl                                    ; 0x1d395 $D385 0A                      ;multiply by 2 because table entry is 2 bytes per entry
tay                                    ; 0x1d396 $D386 A8                      ;transfer A to Y
pla                                    ; 0x1d397 $D387 68                      ;pull the address which we would normally RTS to 
sta      $0C                           ; 0x1d398 $D388 85 0C                   ;store for indirect read later
pla                                    ; 0x1d39a $D38A 68                      ;pull the address which we would normally RTS to 
sta      $0D                           ; 0x1d39b $D38B 85 0D                   ;store for indirect read later
iny                                    ; 0x1d39d $D38D C8                      ;increment Y because jsr makes the RTS point 1 behind?
lda      ($0C),y                       ; 0x1d39e $D38E B1 0C                   ;load address to jmp to (from the table following the JSR's RTS point)
sta      L000E                         ; 0x1d3a0 $D390 85 0E                   ;store for indirect jmp later
iny                                    ; 0x1d3a2 $D392 C8                      ;increment Y
lda      ($0C),y                       ; 0x1d3a3 $D393 B1 0C                   ;load address to jmp to
sta      $0F                           ; 0x1d3a5 $D395 85 0F                   ;store for indirect jmp later
jmp      (L000E)                       ; 0x1d3a7 $D397 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_D39A                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3aa $D39A FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3b2 $D3A2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3ba $D3AA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3c2 $D3B2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3ca $D3BA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1d3d2 $D3C2 FF FF FF FF FF FF FF FF ;
bank7_table13                                                                  ;
.byt    $80,$40                        ; 0x1d3da $D3CA 80 40                   ;
; ---------------------------------------------------------------------------- ;
bank7_check_if_link_died_0494__linkdeath                                       ;
lda      $0494                         ; 0x1d3dc $D3CC AD 94 04                ;; INC $0494 TO KILL LINK
beq      LD3E9                         ; 0x1d3df $D3CF F0 18                   ;
;occurs shortly after INC $0012		?		only in sidescroll with menu closed?       ;
;possibly only when you are allowed control                                    ;
ldx      $050C                         ; 0x1d3e1 $D3D1 AE 0C 05                ; Timer for Link being in injured state
bne      LD3E9                         ; 0x1d3e4 $D3D4 D0 13                   ;
stx      $0494                         ; 0x1d3e6 $D3D6 8E 94 04                ;; INC $0494 TO KILL LINK
inx                                    ; 0x1d3e9 $D3D9 E8                      ;
stx      $EC                           ; 0x1d3ea $D3DA 86 EC                   ; Sound Effects Type 1
lda      #$02                          ; 0x1d3ec $D3DC A9 02                   ; A = 02
sta      $076C                         ; 0x1d3ee $D3DE 8D 6C 07                ;; (00=restart from zelda's castle with 3 lives,  01=no routine, 02=die, 03=wake up zelda, 04=roll credits, 06=show the lives then restart the scene)
lda      #$00                          ; 0x1d3f1 $D3E1 A9 00                   ; A = 00
sta      $2001                         ; 0x1d3f3 $D3E3 8D 01 20                ;
jmp      LE18A                         ; 0x1d3f6 $D3E6 4C 8A E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD3E9                                                                          ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d3f9 $D3E9 20 C5 FF                ; Load Bank 0
jsr      L8DC3                         ; 0x1d3fc $D3EC 20 C3 8D                ; Spell Casting Routine
lda      $12                           ; 0x1d3ff $D3EF A5 12                   ;; Frame Counter (ascending)
and      #$01                          ; 0x1d401 $D3F1 29 01                   ; keep bits .... ...x				
tax                                    ; 0x1d403 $D3F3 AA                      ;
lda      $070C,x                       ; 0x1d404 $D3F4 BD 0C 07                ; Magic/Life to be added to Magic Meter
beq      LD433                         ; 0x1d407 $D3F7 F0 3A                   ;
dec      $070C,x                       ; 0x1d409 $D3F9 DE 0C 07                ; Magic/Life to be added to Magic Meter
lda      $0783,x                       ; 0x1d40c $D3FC BD 83 07                ; Current number of Magic/Life Containers
asl                                    ; 0x1d40f $D3FF 0A                      ;
asl                                    ; 0x1d410 $D400 0A                      ;
asl                                    ; 0x1d411 $D401 0A                      ;
asl                                    ; 0x1d412 $D402 0A                      ;
asl                                    ; 0x1d413 $D403 0A                      ;
sec                                    ; 0x1d414 $D404 38                      ;
sbc      #$01                          ; 0x1d415 $D405 E9 01                   ;
sta      L0000                         ; 0x1d417 $D407 85 00                   ;
lda      $0773,x                       ; 0x1d419 $D409 BD 73 07                ; Current Magic/Life left in meter
clc                                    ; 0x1d41c $D40C 18                      ;
adc      #$02                          ; 0x1d41d $D40D 69 02                   ;
bcs      LD415                         ; 0x1d41f $D40F B0 04                   ;
cmp      L0000                         ; 0x1d421 $D411 C5 00                   ;
bcc      LD41C                         ; 0x1d423 $D413 90 07                   ;
LD415                                                                          ;
lda      #$00                          ; 0x1d425 $D415 A9 00                   ; A = 00
sta      $070C,x                       ; 0x1d427 $D417 9D 0C 07                ; Magic/Life to be added to Magic Meter
lda      L0000                         ; 0x1d42a $D41A A5 00                   ;
LD41C                                                                          ;
sta      $0773,x                       ; 0x1d42c $D41C 9D 73 07                ; Current Magic/Life left in meter
lda      $074F                         ; 0x1d42f $D41F AD 4F 07                ;; Related to Pause Pane
ora      bank7_table13,x               ; 0x1d432 $D422 1D CA D3                ;
sta      $074F                         ; 0x1d435 $D425 8D 4F 07                ;; Related to Pause Pane
lda      $07FB                         ; 0x1d438 $D428 AD FB 07                ;
cmp      #$10                          ; 0x1d43b $D42B C9 10                   ;
beq      LD433                         ; 0x1d43d $D42D F0 04                   ;
lda      #$10                          ; 0x1d43f $D42F A9 10                   ; A = 10 (sound for meters/experience up/down)
sta      $EF                           ; 0x1d441 $D431 85 EF                   ; Sound Effects Type 4
LD433                                                                          ;
lda      $0756                         ; 0x1d443 $D433 AD 56 07                ; Experience to be added (low byte)
ora      $0755                         ; 0x1d446 $D436 0D 55 07                ; Experience to be added (high byte)
beq      LD477                         ; 0x1d449 $D439 F0 3C                   ; check if Exp. to be added is 0
ldy      #$0A                          ; 0x1d44b $D43B A0 0A                   ; Y = 0A
lda      $0756                         ; 0x1d44d $D43D AD 56 07                ; Experience to be added (low byte)
ldx      $0755                         ; 0x1d450 $D440 AE 55 07                ; Experience to be added (high byte)
bne      LD44B                         ; 0x1d453 $D443 D0 06                   ;
cmp      #$0A                          ; 0x1d455 $D445 C9 0A                   ;
bcs      LD44B                         ; 0x1d457 $D447 B0 02                   ;
ldy      #$01                          ; 0x1d459 $D449 A0 01                   ; Y = 01
LD44B                                                                          ;
sty      L0000                         ; 0x1d45b $D44B 84 00                   ;
sec                                    ; 0x1d45d $D44D 38                      ;
sbc      L0000                         ; 0x1d45e $D44E E5 00                   ;
sta      $0756                         ; 0x1d460 $D450 8D 56 07                ; Experience to be added (low byte)
bcs      LD458                         ; 0x1d463 $D453 B0 03                   ;
dec      $0755                         ; 0x1d465 $D455 CE 55 07                ; Experience to be added (high byte)
LD458                                                                          ;
lda      $0776                         ; 0x1d468 $D458 AD 76 07                ; Current Experience (low byte)
clc                                    ; 0x1d46b $D45B 18                      ;
adc      L0000                         ; 0x1d46c $D45C 65 00                   ;
sta      $0776                         ; 0x1d46e $D45E 8D 76 07                ; Current Experience (low byte)
lda      $0775                         ; 0x1d471 $D461 AD 75 07                ; Current Experience (high byte)
adc      #$00                          ; 0x1d474 $D464 69 00                   ;
sta      $0775                         ; 0x1d476 $D466 8D 75 07                ; Current Experience (high byte)
lda      $07FB                         ; 0x1d479 $D469 AD FB 07                ;
cmp      #$10                          ; 0x1d47c $D46C C9 10                   ;
beq      LD474                         ; 0x1d47e $D46E F0 04                   ;
lda      #$10                          ; 0x1d480 $D470 A9 10                   ; A = 10 (sound for meters/experience up/down)
sta      $EF                           ; 0x1d482 $D472 85 EF                   ; Sound Effects Type 4
LD474                                                                          ;
jmp      LD4A3                         ; 0x1d484 $D474 4C A3 D4                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD477                                                                          ;
lda      $05E8                         ; 0x1d487 $D477 AD E8 05                ;
beq      LD4AB                         ; 0x1d48a $D47A F0 2F                   ;
dec      $05E8                         ; 0x1d48c $D47C CE E8 05                ;
lda      $0776                         ; 0x1d48f $D47F AD 76 07                ; Current Experience (low byte)
ora      $0775                         ; 0x1d492 $D482 0D 75 07                ; Current Experience (high byte)
beq      LD4AB                         ; 0x1d495 $D485 F0 24                   ;
lda      $0776                         ; 0x1d497 $D487 AD 76 07                ; Current Experience (low byte)
sec                                    ; 0x1d49a $D48A 38                      ;
sbc      #$01                          ; 0x1d49b $D48B E9 01                   ;
sta      $0776                         ; 0x1d49d $D48D 8D 76 07                ; Current Experience (low byte)
lda      $0775                         ; 0x1d4a0 $D490 AD 75 07                ; Current Experience (high byte)
sbc      #$00                          ; 0x1d4a3 $D493 E9 00                   ;
sta      $0775                         ; 0x1d4a5 $D495 8D 75 07                ; Current Experience (high byte)
lda      $07FB                         ; 0x1d4a8 $D498 AD FB 07                ;
cmp      #$10                          ; 0x1d4ab $D49B C9 10                   ;
beq      LD4A3                         ; 0x1d4ad $D49D F0 04                   ;
lda      #$10                          ; 0x1d4af $D49F A9 10                   ; A = 10
sta      $EF                           ; 0x1d4b1 $D4A1 85 EF                   ; Sound Effects Type 4
LD4A3                                                                          ;
lda      $074F                         ; 0x1d4b3 $D4A3 AD 4F 07                ;; Related to Pause Pane
ora      #$40                          ; 0x1d4b6 $D4A6 09 40                   ; set bits .x.. ....
sta      $074F                         ; 0x1d4b8 $D4A8 8D 4F 07                ;; Related to Pause Pane
LD4AB                                                                          ;
lda      $074C                         ; 0x1d4bb $D4AB AD 4C 07                ;; Dialog Type (00 - None, 01 - Level Up, 02 - Talking); * related to Raft Animation * (and other events, like spell learning)
cmp      #$02                          ; 0x1d4be $D4AE C9 02                   ;
bcs      LD4CE                         ; 0x1d4c0 $D4B0 B0 1C                   ;
LD4B2                                                                          ;
bit      $2002                         ; 0x1d4c2 $D4B2 2C 02 20                ;
bvc      LD4B2                         ; 0x1d4c5 $D4B5 50 FB                   ;
lda      $FF                           ; 0x1d4c7 $D4B7 A5 FF                   ;; Sprite Bank ?
ora      $0746                         ; 0x1d4c9 $D4B9 0D 46 07                ;
sta      $FF                           ; 0x1d4cc $D4BC 85 FF                   ;; Sprite Bank ?
ldx      $FD                           ; 0x1d4ce $D4BE A6 FD                   ;
ldy      #$10                          ; 0x1d4d0 $D4C0 A0 10                   ; Y = 10
LD4C2                                                                          ;
dey                                    ; 0x1d4d2 $D4C2 88                      ;
bne      LD4C2                         ; 0x1d4d3 $D4C3 D0 FD                   ;
sta      $2000                         ; 0x1d4d5 $D4C5 8D 00 20                ;
stx      $2005                         ; 0x1d4d8 $D4C8 8E 05 20                ;
sty      $2005                         ; 0x1d4db $D4CB 8C 05 20                ;
LD4CE                                                                          ;
jsr      L968D                         ; 0x1d4de $D4CE 20 8D 96                ; Hub Update Routine
lda      $0565                         ; 0x1d4e1 $D4D1 AD 65 05                ;; Hit Points - Display
cmp      #$20                          ; 0x1d4e4 $D4D4 C9 20                   ;
bcs      LD4F3                         ; 0x1d4e6 $D4D6 B0 1B                   ;
lda      $07FB                         ; 0x1d4e8 $D4D8 AD FB 07                ;
cmp      #$10                          ; 0x1d4eb $D4DB C9 10                   ;
bcs      LD4F3                         ; 0x1d4ed $D4DD B0 14                   ;
lda      $07FC                         ; 0x1d4ef $D4DF AD FC 07                ;
cmp      #$40                          ; 0x1d4f2 $D4E2 C9 40                   ;
beq      LD4F3                         ; 0x1d4f4 $D4E4 F0 0D                   ;
lda      $07FE                         ; 0x1d4f6 $D4E6 AD FE 07                ;
cmp      #$02                          ; 0x1d4f9 $D4E9 C9 02                   ;
beq      LD4F3                         ; 0x1d4fb $D4EB F0 06                   ;
lda      $EF                           ; 0x1d4fd $D4ED A5 EF                   ; Sound Effects Type 4
ora      #$40                          ; 0x1d4ff $D4EF 09 40                   ; set bits .x.. ....
sta      $EF                           ; 0x1d501 $D4F1 85 EF                   ; sound for Low Health Beeping
LD4F3                                                                          ;
jsr      L903A                         ; 0x1d503 $D4F3 20 3A 90                ;
lda      #$00                          ; 0x1d506 $D4F6 A9 00                   ; A = 00
sta      $0754                         ; 0x1d508 $D4F8 8D 54 07                ;;in_elevator (boolean)
sta      $05E7                         ; 0x1d50b $D4FB 8D E7 05                ;
jsr      L9925                         ; 0x1d50e $D4FE 20 25 99                ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1d511 $D501 20 C9 FF                ; Load Bank $0769
jsr      bank7_code21                  ; 0x1d514 $D504 20 A7 D5                ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1d517 $D507 20 C5 FF                ; Load Bank 0
jsr      L80E5                         ; 0x1d51a $D50A 20 E5 80                ; North Castle Chandeliers
jsr      L9847                         ; 0x1d51d $D50D 20 47 98                ;
jsr      LA6D2                         ; 0x1d520 $D510 20 D2 A6                ;
lda      $0497                         ; 0x1d523 $D513 AD 97 04                ;;crouch_timer (timer for Link crouching after landing); Timer for Link crouching after landing
beq      LD51F                         ; 0x1d526 $D516 F0 07                   ;
dec      $0497                         ; 0x1d528 $D518 CE 97 04                ;;crouch_timer (timer for Link crouching after landing); Timer for Link crouching after landing
lda      #$06                          ; 0x1d52b $D51B A9 06                   ; A = 06
sta      $80                           ; 0x1d52d $D51D 85 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
LD51F                                                                          ;
lda      $0518                         ; 0x1d52f $D51F AD 18 05                ;; Invulnerable Timeout (01-02 - Blinking, 03+ - Not Blinking); Timer for Link being immune from attacks
beq      LD52D                         ; 0x1d532 $D522 F0 09                   ;
cmp      #$03                          ; 0x1d534 $D524 C9 03                   ;
bcs      LD52D                         ; 0x1d536 $D526 B0 05                   ;
lda      $12                           ; 0x1d538 $D528 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1d53a $D52A 4A                      ;
bcs      LD538                         ; 0x1d53b $D52B B0 0B                   ;
LD52D                                                                          ;
jsr      bank7_Links_Display_Routine   ; 0x1d53d $D52D 20 F0 EB                ;
lda      $0503                         ; 0x1d540 $D530 AD 03 05                ;; Timer for moving left or right (when entering area)
bne      LD538                         ; 0x1d543 $D533 D0 03                   ;
jsr      bank7_related_to_breakable_block; 0x1d545 $D535 20 DD E1              ;related to breakable block
LD538                                                                          ;
lda      $0736                         ; 0x1d548 $D538 AD 36 07                ; Game Mode
cmp      #$0B                          ; 0x1d54b $D53B C9 0B                   ;
bne      LD545                         ; 0x1d54d $D53D D0 06                   ;
inc      $0727                         ; 0x1d54f $D53F EE 27 07                ;
inc      $0729                         ; 0x1d552 $D542 EE 29 07                ;
LD545                                                                          ;
jmp      L99E6                         ; 0x1d555 $D545 4C E6 99                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Flying_Blade_Disappearing__maybe                                         ;
ldy      $97,x                         ; 0x1d558 $D548 B4 97                   ;
lda      $CA                           ; 0x1d55a $D54A A5 CA                   ;
and      #$08                          ; 0x1d55c $D54C 29 08                   ; keep bits .... x...
bne      LD55A                         ; 0x1d55e $D54E D0 0A                   ;
lda      $30,x                         ; 0x1d560 $D550 B5 30                   ; Projectile Y Position
sta      $0200,y                       ; 0x1d562 $D552 99 00 02                ;
lda      $CE                           ; 0x1d565 $D555 A5 CE                   ;
sta      $0203,y                       ; 0x1d567 $D557 99 03 02                ;
LD55A                                                                          ;
inc      $87,x                         ; 0x1d56a $D55A F6 87                   ; Projectile Type
lda      $87,x                         ; 0x1d56c $D55C B5 87                   ;; Projectile Type
and      #$08                          ; 0x1d56e $D55E 29 08                   ; keep bits .... x...
lsr                                    ; 0x1d570 $D560 4A                      ;
lsr                                    ; 0x1d571 $D561 4A                      ;
adc      #$78                          ; 0x1d572 $D562 69 78                   ; 78 = Tile Mapping offset
sta      $0201,y                       ; 0x1d574 $D564 99 01 02                ;
lda      #$01                          ; 0x1d577 $D567 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1d579 $D569 99 02 02                ;
LD56C                                                                          ;
rts                                    ; 0x1d57c $D56C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD56D                                                                          ;
txa                                    ; 0x1d57d $D56D 8A                      ;
clc                                    ; 0x1d57e $D56E 18                      ;
adc      #$07                          ; 0x1d57f $D56F 69 07                   ;
tax                                    ; 0x1d581 $D571 AA                      ;
ldy      #$02                          ; 0x1d582 $D572 A0 02                   ; Y = 02
jsr      bank7_code51                  ; 0x1d584 $D574 20 7D F2                ;
ldx      $10                           ; 0x1d587 $D577 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $87,x                         ; 0x1d589 $D579 B5 87                   ; Projectile Type
beq      LD56C                         ; 0x1d58b $D57B F0 EF                   ;
bmi      bank7_Flying_Blade_Disappearing__maybe; 0x1d58d $D57D 30 C9           ;
sec                                    ; 0x1d58f $D57F 38                      ;
sbc      #$01                          ; 0x1d590 $D580 E9 01                   ;
asl                                    ; 0x1d592 $D582 0A                      ;
tay                                    ; 0x1d593 $D583 A8                      ;
lda      $6D00,y                       ; 0x1d594 $D584 B9 00 6D                ;
sta      L000E                         ; 0x1d597 $D587 85 0E                   ;
lda      $6D01,y                       ; 0x1d599 $D589 B9 01 6D                ;
bank7_table14 = * + $0002                                                      ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d59c $D58C 4C D6 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD58F                                                                          ;
.byt    $50,$68,$80,$98,$B0,$C8,$50,$68; 0x1d59f $D58F 50 68 80 98 B0 C8 50 68 ;
.byt    $80,$98,$B0,$C8                ; 0x1d5a7 $D597 80 98 B0 C8             ;
LD59B                                                                          ;
.byt    $20,$28,$30,$E0,$E8,$F0,$20,$28; 0x1d5ab $D59B 20 28 30 E0 E8 F0 20 28 ;
.byt    $30,$E0,$E8,$F0                ; 0x1d5b3 $D5A3 30 E0 E8 F0             ;
; ---------------------------------------------------------------------------- ;
bank7_code21                                                                   ;
lda      $B5                           ; 0x1d5b7 $D5A7 A5 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
beq      LD5D9                         ; 0x1d5b9 $D5A9 F0 2E                   ;
inc      $0485                         ; 0x1d5bb $D5AB EE 85 04                ;
ldx      #$05                          ; 0x1d5be $D5AE A2 05                   ; X = 05
LD5B0                                                                          ;
stx      $10                           ; 0x1d5c0 $D5B0 86 10                   ;; used as monster x register ;draw boss hp bar
lda      $0485                         ; 0x1d5c2 $D5B2 AD 85 04                ;
cmp      #$06                          ; 0x1d5c5 $D5B5 C9 06                   ;
bcc      LD5BE                         ; 0x1d5c7 $D5B7 90 05                   ;
lda      #$00                          ; 0x1d5c9 $D5B9 A9 00                   ; A = 00
sta      $0485                         ; 0x1d5cb $D5BB 8D 85 04                ;
LD5BE                                                                          ;
clc                                    ; 0x1d5ce $D5BE 18                      ;
adc      $10                           ; 0x1d5cf $D5BF 65 10                   ;; used as monster x register ;draw boss hp bar
tay                                    ; 0x1d5d1 $D5C1 A8                      ;
lda      LD58F,y                       ; 0x1d5d2 $D5C2 B9 8F D5                ;
sta      $91,x                         ; 0x1d5d5 $D5C5 95 91                   ;
lda      LD59B,y                       ; 0x1d5d7 $D5C7 B9 9B D5                ;
sta      $97,x                         ; 0x1d5da $D5CA 95 97                   ;
jsr      LD5DA                         ; 0x1d5dc $D5CC 20 DA D5                ;
ldx      $10                           ; 0x1d5df $D5CF A6 10                   ;; used as monster x register ;draw boss hp bar
jsr      LD56D                         ; 0x1d5e1 $D5D1 20 6D D5                ;
ldx      $10                           ; 0x1d5e4 $D5D4 A6 10                   ;; used as monster x register ;draw boss hp bar
dex                                    ; 0x1d5e6 $D5D6 CA                      ;
bpl      LD5B0                         ; 0x1d5e7 $D5D7 10 D7                   ;
LD5D9                                                                          ;
rts                                    ; 0x1d5e9 $D5D9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD5DA                                                                          ;
ldy      #$01                          ; 0x1d5ea $D5DA A0 01                   ; Y = 01
inx                                    ; 0x1d5ec $D5DC E8                      ;
jsr      bank7_code51                  ; 0x1d5ed $D5DD 20 7D F2                ;
ldx      $10                           ; 0x1d5f0 $D5E0 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $B6,x                         ; 0x1d5f2 $D5E2 B5 B6                   ; Generated Enemy Slot
asl                                    ; 0x1d5f4 $D5E4 0A                      ;
tay                                    ; 0x1d5f5 $D5E5 A8                      ;
lda      bank7_pointer_table15,y       ; 0x1d5f6 $D5E6 B9 F1 D5                ;
sta      L000E                         ; 0x1d5f9 $D5E9 85 0E                   ;
lda      bank7_pointer_table15+$01,y   ; 0x1d5fb $D5EB B9 F2 D5                ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d5fe $D5EE 4C D6 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_pointer_table15                                                          ;
.word    bank7_code22                  ; 0x1d601 $D5F1 03 D6                   ;
.word    bank7_enemy_every_frame_routine; 0x1d603 $D5F3 CA D6                  ;
.word    LDCAE                         ; 0x1d605 $D5F5 AE DC                   ;
.word    bank7_code30                  ; 0x1d607 $D5F7 6C DD                   ;
; ---------------------------------------------------------------------------- ;
bank7_table15                                                                  ;
.byt    $08,$F8                        ; 0x1d609 $D5F9 08 F8                   ;
LD5FB                                                                          ;
.byt    $30,$50,$60,$70,$80,$90,$A0,$B0; 0x1d60b $D5FB 30 50 60 70 80 90 A0 B0 ;
; ---------------------------------------------------------------------------- ;
bank7_code22                                                                   ;
lda      $0759                         ; 0x1d613 $D603 AD 59 07                ;; if not 0, cause fairy spawn at next encounter (??)
bne      LD624                         ; 0x1d616 $D606 D0 1C                   ;
lda      $071F                         ; 0x1d618 $D608 AD 1F 07                ;; ???
lsr                                    ; 0x1d61b $D60B 4A                      ;
eor      #$01                          ; 0x1d61c $D60C 49 01                   ; flip bits .... ...x
tax                                    ; 0x1d61e $D60E AA                      ;
lda      $0732                         ; 0x1d61f $D60F AD 32 07                ;
cmp      $0733                         ; 0x1d622 $D612 CD 33 07                ;
bcc      LD625                         ; 0x1d625 $D615 90 0E                   ;
cmp      #$02                          ; 0x1d627 $D617 C9 02                   ;
beq      LD620                         ; 0x1d629 $D619 F0 05                   ;
cpx      #$01                          ; 0x1d62b $D61B E0 01                   ;
beq      LD625                         ; 0x1d62d $D61D F0 06                   ;
rts                                    ; 0x1d62f $D61F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD620                                                                          ;
cpx      #$00                          ; 0x1d630 $D620 E0 00                   ;
beq      LD625                         ; 0x1d632 $D622 F0 01                   ;
LD624                                                                          ;
rts                                    ; 0x1d634 $D624 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD625                                                                          ;
lda      $0732,x                       ; 0x1d635 $D625 BD 32 07                ;
sta      L0000                         ; 0x1d638 $D628 85 00                   ;
lda      $0734,x                       ; 0x1d63a $D62A BD 34 07                ;
sta      $01                           ; 0x1d63d $D62D 85 01                   ;
ldx      $10                           ; 0x1d63f $D62F A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      #$01                          ; 0x1d641 $D631 A0 01                   ; Y = 01
LD633                                                                          ;
tya                                    ; 0x1d643 $D633 98                      ;
ldy      #$00                          ; 0x1d644 $D634 A0 00                   ; Y = 00
cmp      ($D6),y                       ; 0x1d646 $D636 D1 D6                   ;
bcs      LD624                         ; 0x1d648 $D638 B0 EA                   ;
tay                                    ; 0x1d64a $D63A A8                      ;
iny                                    ; 0x1d64b $D63B C8                      ;
lda      ($D6),y                       ; 0x1d64c $D63C B1 D6                   ;
asl                                    ; 0x1d64e $D63E 0A                      ;
rol                                    ; 0x1d64f $D63F 2A                      ;
rol                                    ; 0x1d650 $D640 2A                      ;
and      #$03                          ; 0x1d651 $D641 29 03                   ; keep bits .... ..xx
cmp      L0000                         ; 0x1d653 $D643 C5 00                   ;
beq      LD64B                         ; 0x1d655 $D645 F0 04                   ;
LD647                                                                          ;
iny                                    ; 0x1d657 $D647 C8                      ;
jmp      LD633                         ; 0x1d658 $D648 4C 33 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD64B                                                                          ;
dey                                    ; 0x1d65b $D64B 88                      ;
lda      ($D6),y                       ; 0x1d65c $D64C B1 D6                   ;
and      #$0F                          ; 0x1d65e $D64E 29 0F                   ; keep bits .... xxxx
cmp      $01                           ; 0x1d660 $D650 C5 01                   ;
beq      LD658                         ; 0x1d662 $D652 F0 04                   ;DECIDE IF SPAWN MONSTER FROM MAP DATA
;---- spawn monster ?                                                          ;
;                                                                              ;
;Related to Enemy Generation ?		2 bytes: 	[0-2:Y index for table to get Y position]	[bits0-5:monID];
;                                                                              ; JSR $D685: 		07:D685:B1 D6     LDA ($D6),Y @ $700D = #$1D
;                                                                              ;set D6 to point to 2 bytes of monster data
iny                                    ; 0x1d664 $D654 C8                      ;
jmp      LD647                         ; 0x1d665 $D655 4C 47 D6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD658                                                                          ;
lda      ($D6),y                       ; 0x1d668 $D658 B1 D6                   ;
asl                                    ; 0x1d66a $D65A 0A                      ;
bcs      LD6C0                         ; 0x1d66b $D65B B0 63                   ;
inc      $B6,x                         ; 0x1d66d $D65D F6 B6                   ; Generated Enemy Slot
pha                                    ; 0x1d66f $D65F 48                      ;
sec                                    ; 0x1d670 $D660 38                      ;
ror                                    ; 0x1d671 $D661 6A                      ;
sta      ($D6),y                       ; 0x1d672 $D662 91 D6                   ;
sty      $02                           ; 0x1d674 $D664 84 02                   ;
pla                                    ; 0x1d676 $D666 68                      ;
lsr                                    ; 0x1d677 $D667 4A                      ;
lsr                                    ; 0x1d678 $D668 4A                      ;
lsr                                    ; 0x1d679 $D669 4A                      ;
lsr                                    ; 0x1d67a $D66A 4A                      ;
lsr                                    ; 0x1d67b $D66B 4A                      ;
and      #$07                          ; 0x1d67c $D66C 29 07                   ; keep bits .... .xxx
tay                                    ; 0x1d67e $D66E A8                      ;
lda      LD5FB,y                       ; 0x1d67f $D66F B9 FB D5                ;
sta      $2A,x                         ; 0x1d682 $D672 95 2A                   ; Enemy Y Position
ldy      $02                           ; 0x1d684 $D674 A4 02                   ;
sty      $BC,x                         ; 0x1d686 $D676 94 BC                   ;; Generated Enemy Y Position ?
lda      L0000                         ; 0x1d688 $D678 A5 00                   ;
sta      $3C,x                         ; 0x1d68a $D67A 95 3C                   ; Enemy X Position (high byte)
lda      $01                           ; 0x1d68c $D67C A5 01                   ;
asl                                    ; 0x1d68e $D67E 0A                      ;
asl                                    ; 0x1d68f $D67F 0A                      ;
asl                                    ; 0x1d690 $D680 0A                      ;
asl                                    ; 0x1d691 $D681 0A                      ;
sta      $4E,x                         ; 0x1d692 $D682 95 4E                   ; Enemy X Position (low byte)
iny                                    ; 0x1d694 $D684 C8                      ;
lda      ($D6),y                       ; 0x1d695 $D685 B1 D6                   ;??got called when existing for awhile as a bot <-bug?
and      #$3F                          ; 0x1d697 $D687 29 3F                   ; keep bits ..xx xxxx
sta      $A1,x                         ; 0x1d699 $D689 95 A1                   ; Enemy Code
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d69b $D68B 20 91 DC; Determine Enemy Facing Direction
lda      bank7_table15,y               ; 0x1d69e $D68E B9 F9 D5                ; 08 or F8
sta      $71,x                         ; 0x1d6a1 $D691 95 71                   ; Enemy X Velocity
lda      #$01                          ; 0x1d6a3 $D693 A9 01                   ; A = 01
sta      $1A,x                         ; 0x1d6a5 $D695 95 1A                   ;
lsr                                    ; 0x1d6a7 $D697 4A                      ;
sta      $040E,x                       ; 0x1d6a8 $D698 9D 0E 04                ; Enemy Hit State (0 = not in Hit State)
sta      $AF,x                         ; 0x1d6ab $D69B 95 AF                   ; Various enemy state variables
sta      $81,x                         ; 0x1d6ad $D69D 95 81                   ; Current Animation Frame for Enemy
sta      $043E,x                       ; 0x1d6af $D69F 9D 3E 04                ;
sta      $057E,x                       ; 0x1d6b2 $D6A2 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
sta      $0444,x                       ; 0x1d6b5 $D6A5 9D 44 04                ; Enemy Vulnerability
sta      $04A0,x                       ; 0x1d6b8 $D6A8 9D A0 04                ;
ldy      $A1,x                         ; 0x1d6bb $D6AB B4 A1                   ; Enemy Code
lda      $6D21,y                       ; 0x1d6bd $D6AD B9 21 6D                ;
sta      $C2,x                         ; 0x1d6c0 $D6B0 95 C2                   ; Enemy Current HP
tya                                    ; 0x1d6c2 $D6B2 98                      ;
asl                                    ; 0x1d6c3 $D6B3 0A                      ;
tay                                    ; 0x1d6c4 $D6B4 A8                      ;
lda      $6D45,y                       ; 0x1d6c5 $D6B5 B9 45 6D                ;
sta      L000E                         ; 0x1d6c8 $D6B8 85 0E                   ;
lda      $6D46,y                       ; 0x1d6ca $D6BA B9 46 6D                ;
jmp      bank7_JUMPS_TO___E_           ; 0x1d6cd $D6BD 4C D6 D6                ;<----- JUMPS TO $(E)
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD6C0                                                                          ;
rts                                    ; 0x1d6d0 $D6C0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Link_Collision_Detection                                                 ;
lda      $A8,x                         ; 0x1d6d1 $D6C1 B5 A8                   ; Enemy State ?
and      #$10                          ; 0x1d6d3 $D6C3 29 10                   ; keep bits ...x .... (bit for enemy frozen ?)
beq      LD6C0                         ; 0x1d6d5 $D6C5 F0 F9                   ;
jmp      bank7_Link_Hit_Routine        ; 0x1d6d7 $D6C7 4C EF E2                ; Link Hit Routine
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_enemy_every_frame_routine                                                ;
lda      $A1,x                         ; 0x1d6da $D6CA B5 A1                   ; Enemy Code
asl                                    ; 0x1d6dc $D6CC 0A                      ;
tay                                    ; 0x1d6dd $D6CD A8                      ;
lda      $6D8D,y                       ; 0x1d6de $D6CE B9 8D 6D                ;
sta      L000E                         ; 0x1d6e1 $D6D1 85 0E                   ;
lda      $6D8E,y                       ; 0x1d6e3 $D6D3 B9 8E 6D                ;
bank7_JUMPS_TO___E_                                                            ;
sta      $0F                           ; 0x1d6e6 $D6D6 85 0F                   ;
jmp      (L000E)                       ; 0x1d6e8 $D6D8 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Deeler                                                         ;
.byt    $20,$F0                        ; 0x1d6eb $D6DB 20 F0                   ;20 = Speed when descending	;F0 = Speed when ascending
LD6DD                                                                          ;
.byt    $08,$F8                        ; 0x1d6ed $D6DD 08 F8                   ;08 = Speed going right	;F8 = Speed going left
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Deeler                                                   ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d6ef $D6DF 20 02 DA                ; Enemy Stops when Hit
jsr      bank7_Link_Collision_Detection; 0x1d6f2 $D6E2 20 C1 D6                ; Link Collision Detection
lda      $AF,x                         ; 0x1d6f5 $D6E5 B5 AF                   ;; Various enemy state variables
bpl      LD6EC                         ; 0x1d6f7 $D6E7 10 03                   ;
jmp      LD750                         ; 0x1d6f9 $D6E9 4C 50 D7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD6EC                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d6fc $D6EC 20 91 DC; Determine Enemy Facing Direction
lda      $AF,x                         ; 0x1d6ff $D6EF B5 AF                   ;; Various enemy state variables
bne      LD711                         ; 0x1d701 $D6F1 D0 1E                   ;
lda      $0F                           ; 0x1d703 $D6F3 A5 0F                   ;
adc      #$40                          ; 0x1d705 $D6F5 69 40                   ;
cmp      #$80                          ; 0x1d707 $D6F7 C9 80                   ;
bcc      bank7_Deeler_Red_Blue         ; 0x1d709 $D6F9 90 0B                   ;
LD6FB                                                                          ;
lda      LD6DD,y                       ; 0x1d70b $D6FB B9 DD D6                ;
sta      $71,x                         ; 0x1d70e $D6FE 95 71                   ; Enemy X Velocity
jsr      bank7_Simple_Horizontal_Movement; 0x1d710 $D700 20 B8 DE              ; Simple Horizontal Movement
jmp      LD74D                         ; 0x1d713 $D703 4C 4D D7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Deeler_Red_Blue                                                          ;
lda      $051B,x                       ; 0x1d716 $D706 BD 1B 05                ; Randomizer
and      #$1F                          ; 0x1d719 $D709 29 1F                   ; keep bits ...x xxxx
ora      $C9                           ; 0x1d71b $D70B 05 C9                   ;
bne      LD6FB                         ; 0x1d71d $D70D D0 EC                   ;
LD70F                                                                          ;
inc      $AF,x                         ; 0x1d71f $D70F F6 AF                   ;; Various enemy state variables
LD711                                                                          ;
lda      $AF,x                         ; 0x1d721 $D711 B5 AF                   ;; Various enemy state variables
lsr                                    ; 0x1d723 $D713 4A                      ;
tay                                    ; 0x1d724 $D714 A8                      ;
lda      $2A,x                         ; 0x1d725 $D715 B5 2A                   ; Enemy Y Position
cmp      $05DC,y                       ; 0x1d727 $D717 D9 DC 05                ; Go down that many pixels
bne      LD728                         ; 0x1d72a $D71A D0 0C                   ;
lda      $AF,x                         ; 0x1d72c $D71C B5 AF                   ;; Various enemy state variables
cmp      #$02                          ; 0x1d72e $D71E C9 02                   ;
bne      LD70F                         ; 0x1d730 $D720 D0 ED                   ;
lda      #$00                          ; 0x1d732 $D722 A9 00                   ; A = 00
sta      $AF,x                         ; 0x1d734 $D724 95 AF                   ;; Various enemy state variables
beq      LD74D                         ; 0x1d736 $D726 F0 25                   ;
LD728                                                                          ;
lda      $A1,x                         ; 0x1d738 $D728 B5 A1                   ; Enemy Code
cmp      #$0E                          ; 0x1d73a $D72A C9 0E                   ; 0E = Blue Deeler
bne      LD744                         ; 0x1d73c $D72C D0 16                   ;
lda      $2A,x                         ; 0x1d73e $D72E B5 2A                   ; Enemy Y Position
cmp      #$8E                          ; 0x1d740 $D730 C9 8E                   ; minimum height after first fall
bcc      LD744                         ; 0x1d742 $D732 90 10                   ;
ror      $AF,x                         ; 0x1d744 $D734 76 AF                   ;; Various enemy state variables
lda      #$00                          ; 0x1d746 $D736 A9 00                   ; A = 00
sta      $71,x                         ; 0x1d748 $D738 95 71                   ; Enemy X Velocity
lda      #$20                          ; 0x1d74a $D73A A9 20                   ; A = 20
sta      $057E,x                       ; 0x1d74c $D73C 9D 7E 05                ; Enemy Y Velocity
sta      $0504,x                       ; 0x1d74f $D73F 9D 04 05                ; Timer for Enemy
bne      LD773                         ; 0x1d752 $D742 D0 2F                   ;
LD744                                                                          ;
lda      bank7_Table_for_Deeler,y      ; 0x1d754 $D744 B9 DB D6                ;
sta      $057E,x                       ; 0x1d757 $D747 9D 7E 05                ; Enemy Y Velocity
jsr      bank7_Simple_Vertical_Movement; 0x1d75a $D74A 20 C8 DE                ; Simple Vertical Movement
LD74D                                                                          ;
jmp      LDE40                         ; 0x1d75d $D74D 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD750                                                                          ;
lda      $0504,x                       ; 0x1d760 $D750 BD 04 05                ; Timer for Enemy
bne      LD773                         ; 0x1d763 $D753 D0 1E                   ;
lda      $051B,x                       ; 0x1d765 $D755 BD 1B 05                ; Randomizer
and      #$3F                          ; 0x1d768 $D758 29 3F                   ; keep bits ..xx xxxx
ora      #$40                          ; 0x1d76a $D75A 09 40                   ; set  bits .x.. ....
sta      $0504,x                       ; 0x1d76c $D75C 9D 04 05                ; random 40-7F (delay before next jump)
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d76f $D75F 20 91 DC; Determine Enemy Facing Direction
lda      LD6DD,y                       ; 0x1d772 $D762 B9 DD D6                ;
asl                                    ; 0x1d775 $D765 0A                      ;
asl                                    ; 0x1d776 $D766 0A                      ;
sta      $71,x                         ; 0x1d777 $D767 95 71                   ; Enemy X Velocity
lda      $051B,x                       ; 0x1d779 $D769 BD 1B 05                ; Randomizer
and      #$07                          ; 0x1d77c $D76C 29 07                   ; keep bits .... .xxx
ora      #$E8                          ; 0x1d77e $D76E 09 E8                   ; set  bits xxx. x...
sta      $057E,x                       ; 0x1d780 $D770 9D 7E 05                ; Enemy Y Velocity (random E8-EF) (-18 -11)
LD773                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d783 $D773 20 B8 DE              ; Simple Horizontal Movement
jsr      bank7_Simple_Vertical_Movement; 0x1d786 $D776 20 C8 DE                ; Simple Vertical Movement
inc      $057E,x                       ; 0x1d789 $D779 FE 7E 05                ; Enemy Y Velocity
jsr      LDE3D                         ; 0x1d78c $D77C 20 3D DE                ;
lda      $A8,x                         ; 0x1d78f $D77F B5 A8                   ; Enemy State ?
and      #$04                          ; 0x1d791 $D781 29 04                   ; keep bits .... .x..
beq      LD78A                         ; 0x1d793 $D783 F0 05                   ;
jsr      bank7_Floor_Y_Position        ; 0x1d795 $D785 20 C1 DA                ; Floor Enemy Y Position
sta      $71,x                         ; 0x1d798 $D788 95 71                   ; Enemy X Velocity
LD78A                                                                          ;
rts                                    ; 0x1d79a $D78A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bago_Bago                                                      ;
.byt    $10,$F0                        ; 0x1d79b $D78B 10 F0                   ;10 = Initial X Position, facing right	;F0 = Initial X Position, facing left
LD78D                                                                          ;
.byt    $20,$E0                        ; 0x1d79d $D78D 20 E0                   ;20 = X Velocity while in mid-air, facing right	;E0 = X Velocity while in mid-air, facing left
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bago_Bago_Generator                                      ;
lda      $12                           ; 0x1d79f $D78F A5 12                   ;; Frame Counter (ascending)
and      #$7F                          ; 0x1d7a1 $D791 29 7F                   ; keep bits .xxx xxxx
bne      LD79E                         ; 0x1d7a3 $D793 D0 09                   ; delay before next Bago Bago is spawned
ldx      #$05                          ; 0x1d7a5 $D795 A2 05                   ; X = 05
LD797                                                                          ;
lda      $B6,x                         ; 0x1d7a7 $D797 B5 B6                   ;; Generated Enemy Slot
beq      LD7A1                         ; 0x1d7a9 $D799 F0 06                   ;
dex                                    ; 0x1d7ab $D79B CA                      ;
bpl      LD797                         ; 0x1d7ac $D79C 10 F9                   ;
LD79E                                                                          ;
ldx      $10                           ; 0x1d7ae $D79E A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1d7b0 $D7A0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7A1                                                                          ;
lda      #$01                          ; 0x1d7b1 $D7A1 A9 01                   ; A = 01
sta      $B6,x                         ; 0x1d7b3 $D7A3 95 B6                   ;; Generated Enemy Slot
lda      #$10                          ; 0x1d7b5 $D7A5 A9 10                   ; A = 10
sta      $A1,x                         ; 0x1d7b7 $D7A7 95 A1                   ; Enemy Code (10 = Bago Bago)
lda      $051B,x                       ; 0x1d7b9 $D7A9 BD 1B 05                ; Randomizer
and      #$01                          ; 0x1d7bc $D7AC 29 01                   ; keep bits .... ...x
tay                                    ; 0x1d7be $D7AE A8                      ;
LD7B0     = * + $0001                                                          ;
lda      $072C                         ; 0x1d7bf $D7AF AD 2C 07                ; Scrolling Offset Low Byte
adc      bank7_Table_for_Bago_Bago,y   ; 0x1d7c2 $D7B2 79 8B D7                ;
sta      $4E,x                         ; 0x1d7c5 $D7B5 95 4E                   ; Enemy X position (low byte)
lda      $072A                         ; 0x1d7c7 $D7B7 AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1d7ca $D7BA 69 00                   ;
sta      $3C,x                         ; 0x1d7cc $D7BC 95 3C                   ; Enemy X position (high byte)
lda      LD78D,y                       ; 0x1d7ce $D7BE B9 8D D7                ;
sta      $71,x                         ; 0x1d7d1 $D7C1 95 71                   ; X Velocity for Enemy
lda      #$D0                          ; 0x1d7d3 $D7C3 A9 D0                   ; A = D0
sta      $2A,x                         ; 0x1d7d5 $D7C5 95 2A                   ; Initial Y position for Bago Bago
sta      $BC,x                         ; 0x1d7d7 $D7C7 95 BC                   ;; Generated Enemy Y Position ?
lda      #$C0                          ; 0x1d7d9 $D7C9 A9 C0                   ; A = C0
sta      $057E,x                       ; 0x1d7db $D7CB 9D 7E 05                ; Initial Y Velocity for Bago Bago
lda      #$03                          ; 0x1d7de $D7CE A9 03                   ; A = 03
sta      $C2,x                         ; 0x1d7e0 $D7D0 95 C2                   ; Enemy HP
lsr                                    ; 0x1d7e2 $D7D2 4A                      ;
sta      $1A,x                         ; 0x1d7e3 $D7D3 95 1A                   ;
lsr                                    ; 0x1d7e5 $D7D5 4A                      ;
sta      $040E,x                       ; 0x1d7e6 $D7D6 9D 0E 04                ; Enemy Hit State
iny                                    ; 0x1d7e9 $D7D9 C8                      ;
sty      $60,x                         ; 0x1d7ea $D7DA 94 60                   ;; Enemy facing direction
ldx      $10                           ; 0x1d7ec $D7DC A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1d7ee $D7DE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bago_Bago_X_Velocity_on_ground                                 ;
.byt    $10,$F0                        ; 0x1d7ef $D7DF 10 F0                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bago_Bago0                                               ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d7f1 $D7E1 20 02 DA                ; Enemy Stops when Hit
lda      $C9                           ; 0x1d7f4 $D7E4 A5 C9                   ;
and      #$0C                          ; 0x1d7f6 $D7E6 29 0C                   ; keep bits .... xx..
cmp      #$0C                          ; 0x1d7f8 $D7E8 C9 0C                   ;
bne      LD7F1                         ; 0x1d7fa $D7EA D0 05                   ;
lda      #$00                          ; 0x1d7fc $D7EC A9 00                   ; A = 00
sta      $B6,x                         ; 0x1d7fe $D7EE 95 B6                   ;; Generated Enemy Slot
rts                                    ; 0x1d800 $D7F0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD7F1                                                                          ;
jsr      bank7_Link_Collision_Detection; 0x1d801 $D7F1 20 C1 D6                ; Link Collision Detection
lda      $AF,x                         ; 0x1d804 $D7F4 B5 AF                   ;; Various enemy state variables
bne      bank7_Bago_Bago_and_Octorok   ; 0x1d806 $D7F6 D0 40                   ;
lda      $A8,x                         ; 0x1d808 $D7F8 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d80a $D7FA 29 04                   ;;Keep Bits:0000_0100
beq      LD812                         ; 0x1d80c $D7FC F0 14                   ;
lda      $057E,x                       ; 0x1d80e $D7FE BD 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
bmi      LD812                         ; 0x1d811 $D801 30 0F                   ;
inc      $AF,x                         ; 0x1d813 $D803 F6 AF                   ;; Various enemy state variables
jsr      bank7_Floor_Y_Position        ; 0x1d815 $D805 20 C1 DA                ; Floor Enemy Y Position
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d818 $D808 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_Bago_Bago_X_Velocity_on_ground,y; 0x1d81b $D80B B9 DF D7;
sta      $71,x                         ; 0x1d81e $D80E 95 71                   ;; Enemy X Velocity
bne      bank7_Bago_Bago_and_Octorok   ; 0x1d820 $D810 D0 26                   ;
LD812                                                                          ;
inc      $057E,x                       ; 0x1d822 $D812 FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jsr      bank7_Simple_Vertical_Movement; 0x1d825 $D815 20 C8 DE                ; Simple Vertical Movement
LD818                                                                          ;
lda      $0504,x                       ; 0x1d828 $D818 BD 04 05                ;; Timer for Enemy
bne      LD832                         ; 0x1d82b $D81B D0 15                   ;
lda      $2A,x                         ; 0x1d82d $D81D B5 2A                   ; Enemy Y position
sbc      $29                           ; 0x1d82f $D81F E5 29                   ; Link's Y position
cmp      #$11                          ; 0x1d831 $D821 C9 11                   ;
bcs      LD832                         ; 0x1d833 $D823 B0 0D                   ;
lda      #$70                          ; 0x1d835 $D825 A9 70                   ; A = 70
sta      $0504,x                       ; 0x1d837 $D827 9D 04 05                ; Minimum delay between rocks
lda      $051B,x                       ; 0x1d83a $D82A BD 1B 05                ; Randomizer
bmi      LD832                         ; 0x1d83d $D82D 30 03                   ; 50% chance of shooting rock at right Y pos
jsr      bank7_shoot_rock              ; 0x1d83f $D82F 20 6C D8                ; Shoot Rock
LD832                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d842 $D832 20 B8 DE              ;
jmp      LDE3D                         ; 0x1d845 $D835 4C 3D DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Bago_Bago_and_Octorok                                                    ;
lda      $A8,x                         ; 0x1d848 $D838 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d84a $D83A 29 04                   ; keep bits .... .x..
bne      LD840                         ; 0x1d84c $D83C D0 02                   ;
sta      $AF,x                         ; 0x1d84e $D83E 95 AF                   ;; Various enemy state variables
LD840                                                                          ;
bpl      LD818                         ; 0x1d850 $D840 10 D6                   ;
bank7_Enemy_Routines1_Bago_Bago1                                               ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d852 $D842 20 02 DA                ; Enemy Stops when Hit
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d855 $D845 20 91 DC; Determine Enemy Facing Direction
LD848                                                                          ;
inc      $AF,x                         ; 0x1d858 $D848 F6 AF                   ;; Various enemy state variables
lda      $AF,x                         ; 0x1d85a $D84A B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1d85c $D84C 29 7F                   ; keep bits .xxx xxxx
bne      LD855                         ; 0x1d85e $D84E D0 05                   ; delay before next jump (Octorok)
lda      #$E0                          ; 0x1d860 $D850 A9 E0                   ; A = E0
sta      $057E,x                       ; 0x1d862 $D852 9D 7E 05                ; Y Velocity for Octorok jump
LD855                                                                          ;
jsr      bank7_Gravity                 ; 0x1d865 $D855 20 BE DE                ; Gravity
jsr      LDE3D                         ; 0x1d868 $D858 20 3D DE                ; Display
jsr      bank7_Link_Collision_Detection; 0x1d86b $D85B 20 C1 D6                ; Link Collision Detection
lda      $A8,x                         ; 0x1d86e $D85E B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d870 $D860 29 04                   ; keep bits .... .x..
beq      LD867                         ; 0x1d872 $D862 F0 03                   ;
jmp      bank7_Floor_Y_Position        ; 0x1d874 $D864 4C C1 DA                ; Floor Enemy Y Position
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD867                                                                          ;
lda      $057E,x                       ; 0x1d877 $D867 BD 7E 05                ; Enemy Y Velocity
bne      LD885                         ; 0x1d87a $D86A D0 19                   ;
bank7_shoot_rock                                                               ;
lda      $60,x                         ; 0x1d87c $D86C B5 60                   ;; Enemy facing direction
pha                                    ; 0x1d87e $D86E 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d87f $D86F 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1d882 $D872 68                      ;
sta      $60,x                         ; 0x1d883 $D873 95 60                   ;; Enemy facing direction
iny                                    ; 0x1d885 $D875 C8                      ;
tya                                    ; 0x1d886 $D876 98                      ;
cmp      $60,x                         ; 0x1d887 $D877 D5 60                   ;; Enemy facing direction
bne      LD885                         ; 0x1d889 $D879 D0 0A                   ;
jsr      bank7_Spawn_New_Projectile    ; 0x1d88b $D87B 20 CE DB                ; Spawn New Projectile
bcs      LD885                         ; 0x1d88e $D87E B0 05                   ;
lda      #$03                          ; 0x1d890 $D880 A9 03                   ; A = 03
sta      $87,y                         ; 0x1d892 $D882 99 87 00                ; generate projectile type 3 (Octorok rock)
LD885                                                                          ;
rts                                    ; 0x1d895 $D885 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Octorok_X_Velocity                                             ;
.byt    $08,$F8                        ; 0x1d896 $D886 08 F8                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Octorok                                                  ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1d898 $D888 20 02 DA                ; Enemy Stops when Hit
jsr      LD848                         ; 0x1d89b $D88B 20 48 D8                ;
lda      $A8,x                         ; 0x1d89e $D88E B5 A8                   ;; Enemy State
and      #$03                          ; 0x1d8a0 $D890 29 03                   ; keep bits .... ..xx
beq      LD897                         ; 0x1d8a2 $D892 F0 03                   ;
jsr      bank7_Change_Enemy_Facing_Direction_and_X_Velocity; 0x1d8a4 $D894 20 EB E8; Wall Hit Collision Test
LD897                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1d8a7 $D897 20 B8 DE              ; Simple Horizontal Movement
lda      $AF,x                         ; 0x1d8aa $D89A B5 AF                   ;; Various enemy state variables
asl                                    ; 0x1d8ac $D89C 0A                      ;
cmp      #$80                          ; 0x1d8ad $D89D C9 80                   ;
bne      LD8A9                         ; 0x1d8af $D89F D0 08                   ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d8b1 $D8A1 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_Octorok_X_Velocity,y; 0x1d8b4 $D8A4 B9 86 D8          ;
sta      $71,x                         ; 0x1d8b7 $D8A7 95 71                   ; Enemy X Velocity
LD8A9                                                                          ;
lda      $0504,x                       ; 0x1d8b9 $D8A9 BD 04 05                ;; Timer for Enemy
bne      LD8BE                         ; 0x1d8bc $D8AC D0 10                   ;
lda      $051B,x                       ; 0x1d8be $D8AE BD 1B 05                ; Randomizer
and      #$7F                          ; 0x1d8c1 $D8B1 29 7F                   ; keep bits .xxx xxxx
ora      #$80                          ; 0x1d8c3 $D8B3 09 80                   ; set  bits x... ....
sta      $0504,x                       ; 0x1d8c5 $D8B5 9D 04 05                ; random 80-FF (delay before shooting rock)
lda      $A8,x                         ; 0x1d8c8 $D8B8 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d8ca $D8BA 29 04                   ; keep bits .... .x..
bne      bank7_shoot_rock              ; 0x1d8cc $D8BC D0 AE                   ;
LD8BE                                                                          ;
rts                                    ; 0x1d8ce $D8BE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Elevator_Y_Velocity                                            ;
.byt    $00,$18,$E8                    ; 0x1d8cf $D8BF 00 18 E8                ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Elevator                                                 ;
lda      $A8,x                         ; 0x1d8d2 $D8C2 B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d8d4 $D8C4 29 10                   ; keep bits ...x ....
beq      LD91B                         ; 0x1d8d6 $D8C6 F0 53                   ;
sta      $0754                         ; 0x1d8d8 $D8C8 8D 54 07                ;;in_elevator (boolean)
lda      #$00                          ; 0x1d8db $D8CB A9 00                   ; A = 00
sta      $0479                         ; 0x1d8dd $D8CD 8D 79 04                ; Link is in mid-air ?
sta      $057D                         ; 0x1d8e0 $D8D0 8D 7D 05                ;;vspeed (Link's vertical velocity, negative is up.); Link's Y Velocity; Player Y Delta; Link's Y Velocity
lda      $0743                         ; 0x1d8e3 $D8D3 AD 43 07                ; Up/Down Buttons Held
lsr                                    ; 0x1d8e6 $D8D6 4A                      ;
lsr                                    ; 0x1d8e7 $D8D7 4A                      ;
tay                                    ; 0x1d8e8 $D8D8 A8                      ;
lda      bank7_Table_for_Elevator_Y_Velocity,y; 0x1d8e9 $D8D9 B9 BF D8         ;
sta      $057E,x                       ; 0x1d8ec $D8DC 9D 7E 05                ; Enemy Y Velocity
lda      $0743                         ; 0x1d8ef $D8DF AD 43 07                ;; Controller 1 Input; Up/Down Buttons Held		;elevator was moving up or down: 8=up, 4=down
beq      LD8F4                         ; 0x1d8f2 $D8E2 F0 10                   ;
lda      $A7                           ; 0x1d8f4 $D8E4 A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$0C                          ; 0x1d8f6 $D8E6 29 0C                   ; keep bits .... xx..
eor      $0743                         ; 0x1d8f8 $D8E8 4D 43 07                ; Up/Down Buttons Held
beq      LD8FB                         ; 0x1d8fb $D8EB F0 0E                   ;
lda      #$20                          ; 0x1d8fd $D8ED A9 20                   ; A = 20
sta      $EF                           ; 0x1d8ff $D8EF 85 EF                   ; Sound Effects Type 4
jsr      bank7_Simple_Vertical_Movement; 0x1d901 $D8F1 20 C8 DE                ;
LD8F4                                                                          ;
lda      $2A,x                         ; 0x1d904 $D8F4 B5 2A                   ; Enemy Y position
clc                                    ; 0x1d906 $D8F6 18                      ;
adc      #$08                          ; 0x1d907 $D8F7 69 08                   ;
sta      $29                           ; 0x1d909 $D8F9 85 29                   ; Link's Y position
LD8FB                                                                          ;
lda      $2A,x                         ; 0x1d90b $D8FB B5 2A                   ; Enemy Y position
cmp      #$D8                          ; 0x1d90d $D8FD C9 D8                   ;
;BCS when going down to new floor below while on elevator                      ;
bcc      LD91B                         ; 0x1d90f $D8FF 90 1A                   ;
lda      #$70                          ; 0x1d911 $D901 A9 70                   ; A = 70
sta      $4D                           ; 0x1d913 $D903 85 4D                   ; Link's X position (low byte)
lda      #$06                          ; 0x1d915 $D905 A9 06                   ; A = 06
sta      $0735                         ; 0x1d917 $D907 8D 35 07                ;
lda      #$0B                          ; 0x1d91a $D90A A9 0B                   ; A = 0B
sta      $0734                         ; 0x1d91c $D90C 8D 34 07                ;
lda      #$00                          ; 0x1d91f $D90F A9 00                   ; A = 00
sta      $FD                           ; 0x1d921 $D911 85 FD                   ;
sta      $072C                         ; 0x1d923 $D913 8D 2C 07                ; Scrolling Offset Low Byte
lda      #$13                          ; 0x1d926 $D916 A9 13                   ; A = 13
jmp      LE187                         ; 0x1d928 $D918 4C 87 E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD91B                                                                          ;
jmp      LDE40                         ; 0x1d92b $D91B 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Fairy                                                    ;
lda      $C9                           ; 0x1d92e $D91E A5 C9                   ;
and      #$08                          ; 0x1d930 $D920 29 08                   ; keep bits .... x...
bne      LD931                         ; 0x1d932 $D922 D0 0D                   ;
lda      $81,x                         ; 0x1d934 $D924 B5 81                   ;; Current Animation Frame for Enemys
ora      $07FE                         ; 0x1d936 $D926 0D FE 07                ;
bne      LD931                         ; 0x1d939 $D929 D0 06                   ;
lda      #$C0                          ; 0x1d93b $D92B A9 C0                   ; A = C0
sta      $EC                           ; 0x1d93d $D92D 85 EC                   ; Sound Effects Type 1
inc      $81,x                         ; 0x1d93f $D92F F6 81                   ;; Current Animation Frame for Enemys
LD931                                                                          ;
jsr      LDE40                         ; 0x1d941 $D931 20 40 DE                ;
ldy      $AF,x                         ; 0x1d944 $D934 B4 AF                   ;; Various enemy state variables
bne      LD947                         ; 0x1d946 $D936 D0 0F                   ;
lda      $A8,x                         ; 0x1d948 $D938 B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d94a $D93A 29 10                   ; keep bits ...x ....
beq      LD946                         ; 0x1d94c $D93C F0 08                   ;
inc      $AF,x                         ; 0x1d94e $D93E F6 AF                   ;; Various enemy state variables
inc      $DE                           ; 0x1d950 $D940 E6 DE                   ;;prevent movement/actions, occur when a chat is occuring; Spell Spell modifier (1 = Spell spell active) (and more)	;set to 1 to prevent moving, 0 to allow??
dey                                    ; 0x1d952 $D942 88                      ;
sty      $070D                         ; 0x1d953 $D943 8C 0D 07                ; Life to be added to Life Meter
LD946                                                                          ;
rts                                    ; 0x1d956 $D946 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LD947                                                                          ;
lda      $074B                         ; 0x1d957 $D947 AD 4B 07                ; Spell Flash Counter
ora      #$10                          ; 0x1d95a $D94A 09 10                   ; set bits ...x ....
sta      $074B                         ; 0x1d95c $D94C 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      $070D                         ; 0x1d95f $D94F AD 0D 07                ; Life to be added to Life Meter
bne      LD946                         ; 0x1d962 $D952 D0 F2                   ;
sta      $DE                           ; 0x1d964 $D954 85 DE                   ; Spell Spell modifier
jmp      bank7_remove_enemy_or_item    ; 0x1d966 $D956 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Red_Jar                                                  ;
jsr      LDE3D                         ; 0x1d969 $D959 20 3D DE                ; Display
lda      $A8,x                         ; 0x1d96c $D95C B5 A8                   ;; Enemy State
and      #$04                          ; 0x1d96e $D95E 29 04                   ; keep bits .... .x..
beq      LD98B                         ; 0x1d970 $D960 F0 29                   ;
lda      $2A,x                         ; 0x1d972 $D962 B5 2A                   ; Enemy Y position
and      #$F0                          ; 0x1d974 $D964 29 F0                   ; keep bits xxxx ....
sta      $2A,x                         ; 0x1d976 $D966 95 2A                   ;; Enemy Y Position
lda      $AF,x                         ; 0x1d978 $D968 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1d97a $D96A 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1d97c $D96C A8                      ;
lda      #$FF                          ; 0x1d97d $D96D A9 FF                   ; A = FF
cpy      #$0A                          ; 0x1d97f $D96F C0 0A                   ;
bcc      LD977                         ; 0x1d981 $D971 90 04                   ;
cpy      #$0E                          ; 0x1d983 $D973 C0 0E                   ;
bcc      LD988                         ; 0x1d985 $D975 90 11                   ;
LD977                                                                          ;
ldy      $057E,x                       ; 0x1d987 $D977 BC 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
cpy      #$0E                          ; 0x1d98a $D97A C0 0E                   ;
bcc      LD988                         ; 0x1d98c $D97C 90 0A                   ;
dec      $2A,x                         ; 0x1d98e $D97E D6 2A                   ;; Enemy Y Position
lda      #$F7                          ; 0x1d990 $D980 A9 F7                   ; A = F7
cpy      #$30                          ; 0x1d992 $D982 C0 30                   ;
bcc      LD988                         ; 0x1d994 $D984 90 02                   ;
lda      #$F0                          ; 0x1d996 $D986 A9 F0                   ; A = F0
LD988                                                                          ;
sta      $057E,x                       ; 0x1d998 $D988 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
LD98B                                                                          ;
inc      $057E,x                       ; 0x1d99b $D98B FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jmp      bank7_Simple_Vertical_Movement; 0x1d99e $D98E 4C C8 DE                ; Simple Vertical Movement
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Locked_Door                                              ;
jsr      LDE40                         ; 0x1d9a1 $D991 20 40 DE                ;
ldy      $AF,x                         ; 0x1d9a4 $D994 B4 AF                   ;; Various enemy state variables
beq      bank7_link_door_collision_maybe; 0x1d9a6 $D996 F0 22                  ;
inc      $AF,x                         ; 0x1d9a8 $D998 F6 AF                   ;; Various enemy state variables
cpy      #$11                          ; 0x1d9aa $D99A C0 11                   ;
bne      LD9FD                         ; 0x1d9ac $D99C D0 5F                   ;
lda      #$F0                          ; 0x1d9ae $D99E A9 F0                   ; A = F0
sta      $87                           ; 0x1d9b0 $D9A0 85 87                   ; Projectile Type
lda      $4E,x                         ; 0x1d9b2 $D9A2 B5 4E                   ; Enemy X position (low byte)
sta      $54                           ; 0x1d9b4 $D9A4 85 54                   ; Projectile X Position (low byte)
lda      $3C,x                         ; 0x1d9b6 $D9A6 B5 3C                   ; Enemy X position (high byte)
sta      $42                           ; 0x1d9b8 $D9A8 85 42                   ; Projectile X Position (high byte)
lda      #$AC                          ; 0x1d9ba $D9AA A9 AC                   ; A = AC
sta      $30                           ; 0x1d9bc $D9AC 85 30                   ; Projectile Y Position
lda      #$01                          ; 0x1d9be $D9AE A9 01                   ; A = 01
sta      $20                           ; 0x1d9c0 $D9B0 85 20                   ; Enemy Condition
sta      $EF                           ; 0x1d9c2 $D9B2 85 EF                   ; Sound Effects Type 4
lsr                                    ; 0x1d9c4 $D9B4 4A                      ;
sta      $DE                           ; 0x1d9c5 $D9B5 85 DE                   ; Spell Spell modifier
jmp      bank7_remove_enemy_or_item    ; 0x1d9c7 $D9B7 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_link_door_collision_maybe                                                ;
lda      $A8,x                         ; 0x1d9ca $D9BA B5 A8                   ;; Enemy State
and      #$10                          ; 0x1d9cc $D9BC 29 10                   ; keep bits ...x ....
sta      $05E7                         ; 0x1d9ce $D9BE 8D E7 05                ;
beq      LD9FD                         ; 0x1d9d1 $D9C1 F0 3A                   ;
lda      $13                           ; 0x1d9d3 $D9C3 A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      LD9D0                         ; 0x1d9d5 $D9C5 D0 09                   ;
lda      #$00                          ; 0x1d9d7 $D9C7 A9 00                   ; A = 00
sta      $05                           ; 0x1d9d9 $D9C9 85 05                   ;
sta      $0B                           ; 0x1d9db $D9CB 85 0B                   ;
jsr      bank7_code37                  ; 0x1d9dd $D9CD 20 71 E3                ;
LD9D0                                                                          ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1d9e0 $D9D0 20 91 DC; Determine Enemy Facing Direction
iny                                    ; 0x1d9e3 $D9D3 C8                      ;
tya                                    ; 0x1d9e4 $D9D4 98                      ;
eor      #$03                          ; 0x1d9e5 $D9D5 49 03                   ; flip bits .... ..xx
sta      $05E7                         ; 0x1d9e7 $D9D7 8D E7 05                ;
lda      $078C                         ; 0x1d9ea $D9DA AD 8C 07                ; Have Magic Key
bne      LD9E7                         ; 0x1d9ed $D9DD D0 08                   ;
lda      $0793                         ; 0x1d9ef $D9DF AD 93 07                ; Current number of keys
beq      LD9FD                         ; 0x1d9f2 $D9E2 F0 19                   ;
dec      $0793                         ; 0x1d9f4 $D9E4 CE 93 07                ;; Keys (00-09); Current number of Keys
LD9E7                                                                          ;
lda      $3C,x                         ; 0x1d9f7 $D9E7 B5 3C                   ;; Enemy X Position (high byte)
tax                                    ; 0x1d9f9 $D9E9 AA                      ;
jsr      Set_Item_RAM_bit_to_0__Bits_0_3; 0x1d9fa $D9EA 20 95 C2               ;
ldx      $10                           ; 0x1d9fd $D9ED A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$80                          ; 0x1d9ff $D9EF A9 80                   ; A = 80
sta      $EC                           ; 0x1da01 $D9F1 85 EC                   ; Sound Effects Type 1
sta      $DE                           ; 0x1da03 $D9F3 85 DE                   ; Spell Spell modifier
asl                                    ; 0x1da05 $D9F5 0A                      ; A >> 0
sta      $70                           ; 0x1da06 $D9F6 85 70                   ; Link's X Velocity
sta      $057D                         ; 0x1da08 $D9F8 8D 7D 05                ; Link's Y Velocity
inc      $AF,x                         ; 0x1da0b $D9FB F6 AF                   ;; Various enemy state variables
LD9FD                                                                          ;
rts                                    ; 0x1da0d $D9FD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Bot                                                            ;
.byt    $10,$F0                        ; 0x1da0e $D9FE 10 F0                   ;10 = X velocity while jumping, facing right	;F0 = X velocity while jumping, facing left
LDA00                                                                          ;
.byt    $C0,$40                        ; 0x1da10 $DA00 C0 40                   ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Stops_when_Hit                                                     ;
lda      $040E,x                       ; 0x1da12 $DA02 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LD9FD                         ; 0x1da15 $DA05 F0 F6                   ; if 0, return...
pla                                    ; 0x1da17 $DA07 68                      ;
pla                                    ; 0x1da18 $DA08 68                      ;
jmp      LDE40                         ; 0x1da19 $DA09 4C 40 DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bot                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da1c $DA0C 20 02 DA                ; Enemy Stops when Hit
lda      $A8,x                         ; 0x1da1f $DA0F B5 A8                   ; Enemy state ?
and      #$04                          ; 0x1da21 $DA11 29 04                   ;;Keep Bits:0000_0100
beq      LDA28                         ; 0x1da23 $DA13 F0 13                   ;
lda      $051B,x                       ; 0x1da25 $DA15 BD 1B 05                ; Randomizer
asl                                    ; 0x1da28 $DA18 0A                      ; 1 : 128
bne      LDA28                         ; 0x1da29 $DA19 D0 0D                   ;
lda      #$E5                          ; 0x1da2b $DA1B A9 E5                   ; Bot's initial Y velocity when jumping
sta      $057E,x                       ; 0x1da2d $DA1D 9D 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1da30 $DA20 20 91 DC; Determine Enemy Facing Direction; Determine Enemy Facing Direction
lda      bank7_Table_for_Bot,y         ; 0x1da33 $DA23 B9 FE D9                ; refer to table at $1D9FE
sta      $71,x                         ; 0x1da36 $DA26 95 71                   ;; Enemy X Velocity
LDA28                                                                          ;
jmp      bank7_Enemy_Routines1_Myu     ; 0x1da38 $DA28 4C 47 DA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Bit                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da3b $DA2B 20 02 DA                ; Enemy Stops when Hit
txa                                    ; 0x1da3e $DA2E 8A                      ;
asl                                    ; 0x1da3f $DA2F 0A                      ;
asl                                    ; 0x1da40 $DA30 0A                      ;
asl                                    ; 0x1da41 $DA31 0A                      ;
asl                                    ; 0x1da42 $DA32 0A                      ;
asl                                    ; 0x1da43 $DA33 0A                      ;
ora      $12                           ; 0x1da44 $DA34 05 12                   ;; Frame Counter (ascending)
cmp      #$C0                          ; 0x1da46 $DA36 C9 C0                   ; affects Bit's movement (slow vs fast)
bcc      bank7_Enemy_Routines1_Myu     ; 0x1da48 $DA38 90 0D                   ;
lda      #$40                          ; 0x1da4a $DA3A A9 40                   ; Bit/Bot fast movement, facing right
sta      $05DA                         ; 0x1da4c $DA3C 8D DA 05                ;
lda      #$C0                          ; 0x1da4f $DA3F A9 C0                   ; Bit/Bot fast movement, facing left
sta      $05DB                         ; 0x1da51 $DA41 8D DB 05                ;
jmp      LDA54                         ; 0x1da54 $DA44 4C 54 DA                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Myu                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1da57 $DA47 20 02 DA                ; Enemy Stops when Hit
lda      #$20                          ; 0x1da5a $DA4A A9 20                   ; Bit/Bot slow movement, facing right
sta      $05DA                         ; 0x1da5c $DA4C 8D DA 05                ;
lda      #$E0                          ; 0x1da5f $DA4F A9 E0                   ; Bit/Bot slow movement, facing left
sta      $05DB                         ; 0x1da61 $DA51 8D DB 05                ;
LDA54                                                                          ;
jsr      bank7_Gravity                 ; 0x1da64 $DA54 20 BE DE                ; Gravity
jsr      LDE3D                         ; 0x1da67 $DA57 20 3D DE                ; Display
jsr      bank7_Link_Collision_Detection; 0x1da6a $DA5A 20 C1 D6                ; Link Collision Detection
lda      $2A,x                         ; 0x1da6d $DA5D B5 2A                   ; Enemy Y Position
cmp      #$60                          ; 0x1da6f $DA5F C9 60                   ;
bcc      LDA69                         ; 0x1da71 $DA61 90 06                   ;
lda      $A8,x                         ; 0x1da73 $DA63 B5 A8                   ;; Enemy State
and      #$04                          ; 0x1da75 $DA65 29 04                   ; keep bits .... .x..
bne      LDA72                         ; 0x1da77 $DA67 D0 09                   ;
LDA69                                                                          ;
lda      $A8,x                         ; 0x1da79 $DA69 B5 A8                   ;; Enemy State
and      #$03                          ; 0x1da7b $DA6B 29 03                   ; keep bits .... ..xx
bne      LDAC0                         ; 0x1da7d $DA6D D0 51                   ;
jmp      bank7_Simple_Horizontal_Movement; 0x1da7f $DA6F 4C B8 DE              ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDA72                                                                          ;
jsr      bank7_Floor_Y_Position        ; 0x1da82 $DA72 20 C1 DA                ; Floor Enemy Y Position
lda      $AF,x                         ; 0x1da85 $DA75 B5 AF                   ;; Various enemy state variables
beq      LDA7D                         ; 0x1da87 $DA77 F0 04                   ;
sta      $81,x                         ; 0x1da89 $DA79 95 81                   ;; Current Animation Frame for Enemys
bne      LDAA4                         ; 0x1da8b $DA7B D0 27                   ;
LDA7D                                                                          ;
lda      $0444,x                       ; 0x1da8d $DA7D BD 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
pha                                    ; 0x1da90 $DA80 48                      ;
and      #$0C                          ; 0x1da91 $DA81 29 0C                   ; keep bits ... xx..
sta      $81,x                         ; 0x1da93 $DA83 95 81                   ;; Current Animation Frame for Enemys
inc      $0444,x                       ; 0x1da95 $DA85 FE 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
pla                                    ; 0x1da98 $DA88 68                      ;
and      #$0F                          ; 0x1da99 $DA89 29 0F                   ; keep bits .... xxxx
cmp      #$0F                          ; 0x1da9b $DA8B C9 0F                   ; delay for pause between slides
beq      LDA93                         ; 0x1da9d $DA8D F0 04                   ; (affects Myu also)
cmp      #$03                          ; 0x1da9f $DA8F C9 03                   ;
bne      LDAA4                         ; 0x1daa1 $DA91 D0 11                   ;
LDA93                                                                          ;
ldy      $0401,x                       ; 0x1daa3 $DA93 BC 01 04                ;
lda      $05DA,y                       ; 0x1daa6 $DA96 B9 DA 05                ;
sta      $71,x                         ; 0x1daa9 $DA99 95 71                   ;; Enemy X Velocity
lda      $A8,x                         ; 0x1daab $DA9B B5 A8                   ;; Enemy State
and      #$03                          ; 0x1daad $DA9D 29 03                   ; keep bits .... ..xx
bne      LDAA4                         ; 0x1daaf $DA9F D0 03                   ;
jsr      bank7_Simple_Horizontal_Movement; 0x1dab1 $DAA1 20 B8 DE              ; Simple Horizontal Movement
LDAA4                                                                          ;
lda      $0504,x                       ; 0x1dab4 $DAA4 BD 04 05                ;; Timer for Enemy
bne      LDAC0                         ; 0x1dab7 $DAA7 D0 17                   ;
lda      $AF,x                         ; 0x1dab9 $DAA9 B5 AF                   ;; Various enemy state variables
eor      #$01                          ; 0x1dabb $DAAB 49 01                   ; flip bits .... ...x
sta      $AF,x                         ; 0x1dabd $DAAD 95 AF                   ;; Various enemy state variables
tay                                    ; 0x1dabf $DAAF A8                      ;
lda      $051B,x                       ; 0x1dac0 $DAB0 BD 1B 05                ; Randomizer
and      #$3F                          ; 0x1dac3 $DAB3 29 3F                   ; keep bits ..xx xxxx
ora      LDA00,y                       ; 0x1dac5 $DAB5 19 00 DA                ; refer to table at $1D9FE (offset +2)
sta      $0504,x                       ; 0x1dac8 $DAB8 9D 04 05                ;; Timer for Enemy
and      #$01                          ; 0x1dacb $DABB 29 01                   ; keep bits .... ...x
sta      $0401,x                       ; 0x1dacd $DABD 9D 01 04                ;
LDAC0                                                                          ;
rts                                    ; 0x1dad0 $DAC0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Floor_Y_Position                                                         ;
;Floor Enemy Y Position to multiple of 0x10                                    ;
lda      $2A,x                         ; 0x1dad1 $DAC1 B5 2A                   ; Enemy Y Position
and      #$F0                          ; 0x1dad3 $DAC3 29 F0                   ; keep bits xxxx ....
sta      $2A,x                         ; 0x1dad5 $DAC5 95 2A                   ;; Enemy Y Position
;Set Enemy Y Velocity to 0                                                     ;
LDAC7                                                                          ;
lda      #$00                          ; 0x1dad7 $DAC7 A9 00                   ; A = 00
sta      $057E,x                       ; 0x1dad9 $DAC9 9D 7E 05                ; Enemy Y Velocity
rts                                    ; 0x1dadc $DACC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_for_Moa                                                            ;
.byt    $08,$F8                        ; 0x1dadd $DACD 08 F8                   ;08 = Moa's Y velocity when going down	;F8 = Moa's Y velocity when going up
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Moa                                                      ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1dadf $DACF 20 02 DA                ; Enemy Stops when Hit
jsr      LDE54                         ; 0x1dae2 $DAD2 20 54 DE                ;
lda      $0706                         ; 0x1dae5 $DAD5 AD 06 07                ; Current Region
cmp      #$02                          ; 0x1dae8 $DAD8 C9 02                   ; check if Region is 02 (East Hyrule)
bne      LDAE1                         ; 0x1daea $DADA D0 05                   ;
lda      $078A                         ; 0x1daec $DADC AD 8A 07                ; Have Cross ?
beq      LDAE4                         ; 0x1daef $DADF F0 03                   ; if NOT, skip display routine
LDAE1                                                                          ;
jsr      bank7_Display                 ; 0x1daf1 $DAE1 20 11 EF                ; Display
LDAE4                                                                          ;
jsr      bank7_Link_Collision_Detection; 0x1daf4 $DAE4 20 C1 D6                ; Link Collision Detection
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1daf7 $DAE7 20 91 DC; Determine Enemy Facing Direction
lda      $71,x                         ; 0x1dafa $DAEA B5 71                   ; Enemy X Velocity
pha                                    ; 0x1dafc $DAEC 48                      ;
adc      $70                           ; 0x1dafd $DAED 65 70                   ; Link's X Velocity
adc      bank7_table_for_Moa,y         ; 0x1daff $DAEF 79 CD DA                ;
sta      $71,x                         ; 0x1db02 $DAF2 95 71                   ;; Enemy X Velocity
jsr      bank7_Simple_Horizontal_Movement; 0x1db04 $DAF4 20 B8 DE              ; Simple Horizontal Movement
pla                                    ; 0x1db07 $DAF7 68                      ;
sta      $71,x                         ; 0x1db08 $DAF8 95 71                   ;; Enemy X Velocity
ldy      #$02                          ; 0x1db0a $DAFA A0 02                   ; Y = 02
asl                                    ; 0x1db0c $DAFC 0A                      ;
bcs      LDB00                         ; 0x1db0d $DAFD B0 01                   ;
dey                                    ; 0x1db0f $DAFF 88                      ;
LDB00                                                                          ;
sty      $60,x                         ; 0x1db10 $DB00 94 60                   ;; Enemy facing direction
lda      $AF,x                         ; 0x1db12 $DB02 B5 AF                   ;; Various enemy state variables
bne      LDB2D                         ; 0x1db14 $DB04 D0 27                   ;
lda      $0504,x                       ; 0x1db16 $DB06 BD 04 05                ;; Timer for Enemy
bne      LDB2C                         ; 0x1db19 $DB09 D0 21                   ;
inc      $AF,x                         ; 0x1db1b $DB0B F6 AF                   ;; Various enemy state variables
lda      $051B,x                       ; 0x1db1d $DB0D BD 1B 05                ; Randomizer
and      #$01                          ; 0x1db20 $DB10 29 01                   ; keep bits .... ...x
tay                                    ; 0x1db22 $DB12 A8                      ;
lda      $2A,x                         ; 0x1db23 $DB13 B5 2A                   ; Enemy Y Position
cmp      #$40                          ; 0x1db25 $DB15 C9 40                   ;
bcs      LDB1B                         ; 0x1db27 $DB17 B0 02                   ;
ldy      #$00                          ; 0x1db29 $DB19 A0 00                   ; Y = 00 (Moa going down)
LDB1B                                                                          ;
cmp      #$C0                          ; 0x1db2b $DB1B C9 C0                   ;
bcc      LDB21                         ; 0x1db2d $DB1D 90 02                   ;
ldy      #$01                          ; 0x1db2f $DB1F A0 01                   ; Y = 01 (Moa going up)
LDB21                                                                          ;
lda      bank7_table_for_Moa,y         ; 0x1db31 $DB21 B9 CD DA                ;
sta      $057E,x                       ; 0x1db34 $DB24 9D 7E 05                ; Enemy Y Velocity
lda      $60,x                         ; 0x1db37 $DB27 B5 60                   ; Enemy facing direction
sta      $0401,x                       ; 0x1db39 $DB29 9D 01 04                ;
LDB2C                                                                          ;
rts                                    ; 0x1db3c $DB2C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDB2D                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x1db3d $DB2D 20 C8 DE                ; Simple Vertical Movement
ldy      $0401,x                       ; 0x1db40 $DB30 BC 01 04                ;
dey                                    ; 0x1db43 $DB33 88                      ;
beq      bank7_Related_to_Moa          ; 0x1db44 $DB34 F0 09                   ;
inc      $71,x                         ; 0x1db46 $DB36 F6 71                   ; * double the increase for more speed *
lda      $71,x                         ; 0x1db48 $DB38 B5 71                   ; Enemy X Velocity
cmp      #$20                          ; 0x1db4a $DB3A C9 20                   ; velocity for changing X direction (right)
beq      LDB47                         ; 0x1db4c $DB3C F0 09                   ;
rts                                    ; 0x1db4e $DB3E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Moa                                                           ;
dec      $71,x                         ; 0x1db4f $DB3F D6 71                   ; * double the decrease for more speed *
lda      $71,x                         ; 0x1db51 $DB41 B5 71                   ; Enemy X Velocity
cmp      #$E0                          ; 0x1db53 $DB43 C9 E0                   ; velocity for changing X direction (left)
bne      LDB4E                         ; 0x1db55 $DB45 D0 07                   ;
LDB47                                                                          ;
dec      $AF,x                         ; 0x1db57 $DB47 D6 AF                   ;; Various enemy state variables
lda      #$20                          ; 0x1db59 $DB49 A9 20                   ; A = 20
sta      $0504,x                       ; 0x1db5b $DB4B 9D 04 05                ;; Timer for Enemy
LDB4E                                                                          ;
rts                                    ; 0x1db5e $DB4E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Ache_Acheman_and_many_others                                   ;
;38 C8 = good speed for challenge                                              ;
;                                                                              ;
;F8 = X Velocity, flying left                                                  ;
;08 = X Velocity, flying right                                                 ;
;20 = X Velocity of Flame, facing right                                        ;
;E0 = X Velocity of Flame, facing left                                         ;
.byt    $F8                            ; 0x1db5f $DB4F F8                      ;
LDB50                                                                          ;
.byt    $08,$20,$E0                    ; 0x1db60 $DB50 08 20 E0                ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Ache_and_Acheman                                         ;
jsr      bank7_Enemy_Stops_when_Hit    ; 0x1db63 $DB53 20 02 DA                ; Enemy Stops when Hit
lda      $A1,x                         ; 0x1db66 $DB56 B5 A1                   ; Enemy Code
cmp      #$0A                          ; 0x1db68 $DB58 C9 0A                   ; 0A = Acheman
bne      bank7_Ache                    ; 0x1db6a $DB5A D0 1D                   ;
lda      $AF,x                         ; 0x1db6c $DB5C B5 AF                   ;; Various enemy state variables
beq      bank7_Ache                    ; 0x1db6e $DB5E F0 19                   ;
dec      $AF,x                         ; 0x1db70 $DB60 D6 AF                   ;; Various enemy state variables
cmp      #$18                          ; 0x1db72 $DB62 C9 18                   ; delay before flying back
bne      bank7_Go_on___                ; 0x1db74 $DB64 D0 0D                   ;
bank7_Spawn_Flame                                                              ;
jsr      bank7_Spawn_New_Projectile    ; 0x1db76 $DB66 20 CE DB                ; Spawn New Projectile
bcs      bank7_Go_on___                ; 0x1db79 $DB69 B0 08                   ; Carry Set = max number of projectiles reached
lda      $30,y                         ; 0x1db7b $DB6B B9 30 00                ; Projectile Y Position
adc      #$02                          ; 0x1db7e $DB6E 69 02                   ; 02 = relative Y position of Flame
sta      $30,y                         ; 0x1db80 $DB70 99 30 00                ; ** can be randomized! 02 or 12 **
bank7_Go_on___                                                                 ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1db83 $DB73 20 91 DC; Determine Enemy Facing Direction
jmp      LDBC8                         ; 0x1db86 $DB76 4C C8 DB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Ache                                                                     ;
lda      $81,x                         ; 0x1db89 $DB79 B5 81                   ;; Current Animation Frame for Enemys
bne      LDBA8                         ; 0x1db8b $DB7B D0 2B                   ;
ldy      $3C,x                         ; 0x1db8d $DB7D B4 3C                   ;; Enemy X Position (high byte)
dey                                    ; 0x1db8f $DB7F 88                      ;
cpy      #$02                          ; 0x1db90 $DB80 C0 02                   ;
bcc      bank7_Ache_Acheman1           ; 0x1db92 $DB82 90 07                   ;
tya                                    ; 0x1db94 $DB84 98                      ;
and      #$01                          ; 0x1db95 $DB85 29 01                   ; keep bits .... ...x
tay                                    ; 0x1db97 $DB87 A8                      ;
jmp      LDB9C                         ; 0x1db98 $DB88 4C 9C DB                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Ache_Acheman1                                                            ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1db9b $DB8B 20 91 DC; Determine Enemy Facing Direction
lda      $0F                           ; 0x1db9e $DB8E A5 0F                   ;
adc      #$20                          ; 0x1dba0 $DB90 69 20                   ; 30 and 60 work, reaction distance increased
cmp      #$40                          ; 0x1dba2 $DB92 C9 40                   ; 40 and 80 work, too
bcs      LDBC8                         ; 0x1dba4 $DB94 B0 32                   ;
lda      $051B,x                       ; 0x1dba6 $DB96 BD 1B 05                ; Randomizer
and      #$01                          ; 0x1dba9 $DB99 29 01                   ; keep bits .... ...x
tay                                    ; 0x1dbab $DB9B A8                      ; fly down direction (random 0-1)
LDB9C                                                                          ;
lda      bank7_Table_for_Ache_Acheman_and_many_others,y; 0x1dbac $DB9C B9 4F DB;
sta      $71,x                         ; 0x1dbaf $DB9F 95 71                   ; Enemy X Velocity
inc      $81,x                         ; 0x1dbb1 $DBA1 F6 81                   ; Current Animation Frame for Enemy
lda      #$40                          ; 0x1dbb3 $DBA3 A9 40                   ; A = 40; A = 5C
sta      $057E,x                       ; 0x1dbb5 $DBA5 9D 7E 05                ; initial Y velocity for Ache/Acheman
LDBA8                                                                          ;
jsr      bank7_Simple_Horizontal_Movement; 0x1dbb8 $DBA8 20 B8 DE              ; Simple Horizontal Movement
dec      $057E,x                       ; 0x1dbbb $DBAB DE 7E 05                ; Enemy Y Velocity
bne      LDBB4                         ; 0x1dbbe $DBAE D0 04                   ;
lda      #$30                          ; 0x1dbc0 $DBB0 A9 30                   ; A = 30
sta      $AF,x                         ; 0x1dbc2 $DBB2 95 AF                   ; delay for Acheman in dragon form
LDBB4                                                                          ;
jsr      bank7_Simple_Vertical_Movement; 0x1dbc4 $DBB4 20 C8 DE                ; Simple Vertical Movement
lda      $2A,x                         ; 0x1dbc7 $DBB7 B5 2A                   ; Enemy Y Position
cmp      #$30                          ; 0x1dbc9 $DBB9 C9 30                   ;
bcs      LDBC8                         ; 0x1dbcb $DBBB B0 0B                   ;
lda      #$30                          ; 0x1dbcd $DBBD A9 30                   ; A = 30
sta      $2A,x                         ; 0x1dbcf $DBBF 95 2A                   ; Enemy Y Position
lda      #$00                          ; 0x1dbd1 $DBC1 A9 00                   ; A = 00
sta      $057E,x                       ; 0x1dbd3 $DBC3 9D 7E 05                ; Enemy Y Velocity
sta      $81,x                         ; 0x1dbd6 $DBC6 95 81                   ; Current Animation Frame for Enemy
LDBC8                                                                          ;
jsr      LDE40                         ; 0x1dbd8 $DBC8 20 40 DE                ;
jmp      bank7_Link_Collision_Detection; 0x1dbdb $DBCB 4C C1 D6                ; Link Collision Detection
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Spawn_New_Projectile                                                     ;
ldy      #$05                          ; 0x1dbde $DBCE A0 05                   ; Y = 05
jsr      LDBFD                         ; 0x1dbe0 $DBD0 20 FD DB                ;
bcs      LDBF8                         ; 0x1dbe3 $DBD3 B0 23                   ; Carry Set = No Projectile Slot Available
lda      #$04                          ; 0x1dbe5 $DBD5 A9 04                   ; A = 04
sta      $87,y                         ; 0x1dbe7 $DBD7 99 87 00                ; Projectile Type (04 = Flame)
lda      $4E,x                         ; 0x1dbea $DBDA B5 4E                   ; Enemy X position (low byte)
sta      $54,y                         ; 0x1dbec $DBDC 99 54 00                ; Projectile X Position (low byte)
lda      $3C,x                         ; 0x1dbef $DBDF B5 3C                   ; Enemy X position (high byte)
sta      $42,y                         ; 0x1dbf1 $DBE1 99 42 00                ; Projectile X Position (high byte)
lda      $2A,x                         ; 0x1dbf4 $DBE4 B5 2A                   ; Enemy Y Position
sta      $30,y                         ; 0x1dbf6 $DBE6 99 30 00                ; Projectile Y Position
lda      $60,x                         ; 0x1dbf9 $DBE9 B5 60                   ; Enemy facing direction
sta      $66,y                         ; 0x1dbfb $DBEB 99 66 00                ; Projectile facing direction
tax                                    ; 0x1dbfe $DBEE AA                      ;
lda      LDB50,x                       ; 0x1dbff $DBEF BD 50 DB                ;
sta      $77,y                         ; 0x1dc02 $DBF2 99 77 00                ; Projectile X Velocity
ldx      $10                           ; 0x1dc05 $DBF5 A6 10                   ;; used as monster x register ;draw boss hp bar
clc                                    ; 0x1dc07 $DBF7 18                      ;
LDBF8                                                                          ;
rts                                    ; 0x1dc08 $DBF8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Generated_Rock_X_Velocity                                      ;
.byt    $10,$F0                        ; 0x1dc09 $DBF9 10 F0                   ;
; ---------------------------------------------------------------------------- ;
bank7_spawn_new_bubble_or_rock                                                 ;
ldy      #$03                          ; 0x1dc0b $DBFB A0 03                   ; Y = 03
LDBFD                                                                          ;
lda      $87,y                         ; 0x1dc0d $DBFD B9 87 00                ; Projectile Type
beq      bank7_Related_to_Desert_Rocks__Raising_Bubbles__projectiles__etc; 0x1dc10 $DC00 F0 05;
dey                                    ; 0x1dc12 $DC02 88                      ;
bpl      LDBFD                         ; 0x1dc13 $DC03 10 F8                   ;
sec                                    ; 0x1dc15 $DC05 38                      ;
rts                                    ; 0x1dc16 $DC06 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Desert_Rocks__Raising_Bubbles__projectiles__etc               ;
lda      #$01                          ; 0x1dc17 $DC07 A9 01                   ; A = 01
sta      $20,y                         ; 0x1dc19 $DC09 99 20 00                ;
sta      $66,y                         ; 0x1dc1c $DC0C 99 66 00                ;
lsr                                    ; 0x1dc1f $DC0F 4A                      ; A >> 00
sta      $0584,y                       ; 0x1dc20 $DC10 99 84 05                ;
clc                                    ; 0x1dc23 $DC13 18                      ;
rts                                    ; 0x1dc24 $DC14 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines1_Raising_Bubbles                                          ;
inc      $AF,x                         ; 0x1dc25 $DC15 F6 AF                   ;; Various enemy state variables
lda      $AF,x                         ; 0x1dc27 $DC17 B5 AF                   ;; Various enemy state variables
and      #$1F                          ; 0x1dc29 $DC19 29 1F                   ; 1F = delay before next bubble appears
bne      LDC44                         ; 0x1dc2b $DC1B D0 27                   ;
jsr      bank7_spawn_new_bubble_or_rock; 0x1dc2d $DC1D 20 FB DB                ; spawn new bubble
bcs      LDC44                         ; 0x1dc30 $DC20 B0 22                   ; Carry Set = max number of bubbles reached
lda      #$02                          ; 0x1dc32 $DC22 A9 02                   ; 02 = bubble
sta      $87,y                         ; 0x1dc34 $DC24 99 87 00                ; projectile type
lda      $072C                         ; 0x1dc37 $DC27 AD 2C 07                ; Scrolling Offset Low Byte
adc      $051B,x                       ; 0x1dc3a $DC2A 7D 1B 05                ; Randomizer
and      #$F0                          ; 0x1dc3d $DC2D 29 F0                   ; keep bits xxxx ....
sta      $54,y                         ; 0x1dc3f $DC2F 99 54 00                ;
lda      $072A                         ; 0x1dc42 $DC32 AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1dc45 $DC35 69 00                   ;
sta      $42,y                         ; 0x1dc47 $DC37 99 42 00                ;
lda      #$E0                          ; 0x1dc4a $DC3A A9 E0                   ; A = E0
sta      $30,y                         ; 0x1dc4c $DC3C 99 30 00                ; Initial Y position
lda      #$E4                          ; 0x1dc4f $DC3F A9 E4                   ; A = E4
sta      $0584,y                       ; 0x1dc51 $DC41 99 84 05                ; Initial Y velocity
LDC44                                                                          ;
rts                                    ; 0x1dc54 $DC44 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Rocks_possible_X_Positions_                                    ;
.byt    $0C,$F4                        ; 0x1dc55 $DC45 0C F4                   ;
bank7_Table_for_Rocks_possible_Y_Positions_                                    ;
.byt    $03,$13,$F3,$E3,$D3,$C3,$03,$13; 0x1dc57 $DC47 03 13 F3 E3 D3 C3 03 13 ;
; ---------------------------------------------------------------------------- ;
bank7_Desert_Rocks_initialization_routine                                      ;
lda      $12                           ; 0x1dc5f $DC4F A5 12                   ;; Frame Counter (ascending)
and      #$1F                          ; 0x1dc61 $DC51 29 1F                   ; 1F = delay before next rock appears
bne      LDC90                         ; 0x1dc63 $DC53 D0 3B                   ;
jsr      bank7_spawn_new_bubble_or_rock; 0x1dc65 $DC55 20 FB DB                ; spawn new rock
bcs      LDC90                         ; 0x1dc68 $DC58 B0 36                   ;
lda      $051B,x                       ; 0x1dc6a $DC5A BD 1B 05                ; Randomizer
and      #$07                          ; 0x1dc6d $DC5D 29 07                   ; keep bits .... .xxx
tax                                    ; 0x1dc6f $DC5F AA                      ;
lda      $29                           ; 0x1dc70 $DC60 A5 29                   ; Link's Y Position
adc      bank7_Table_for_Rocks_possible_Y_Positions_,x; 0x1dc72 $DC62 7D 47 DC ;
sta      $30,y                         ; 0x1dc75 $DC65 99 30 00                ;
txa                                    ; 0x1dc78 $DC68 8A                      ;
and      #$01                          ; 0x1dc79 $DC69 29 01                   ; keep bits .... ...x
sta      $044C,y                       ; 0x1dc7b $DC6B 99 4C 04                ;
tax                                    ; 0x1dc7e $DC6E AA                      ;
lda      $072C                         ; 0x1dc7f $DC6F AD 2C 07                ;; Scrolling Offset Low Byte
adc      bank7_Table_for_Rocks_possible_X_Positions_,x; 0x1dc82 $DC72 7D 45 DC ;
sta      $54,y                         ; 0x1dc85 $DC75 99 54 00                ; Rock's X Position (low byte)
lda      $072A                         ; 0x1dc88 $DC78 AD 2A 07                ;;link Pagepos SideScroll		; Scrolling Offset High Byte
adc      #$00                          ; 0x1dc8b $DC7B 69 00                   ;
sta      $42,y                         ; 0x1dc8d $DC7D 99 42 00                ; Rock's X Position (high byte)
lda      bank7_Table_for_Generated_Rock_X_Velocity,x; 0x1dc90 $DC80 BD F9 DB   ;
sta      $77,y                         ; 0x1dc93 $DC83 99 77 00                ; Rock's X Velocity
inx                                    ; 0x1dc96 $DC86 E8                      ;
stx      $66,y                         ; 0x1dc97 $DC87 96 66                   ;
ldx      $10                           ; 0x1dc99 $DC89 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$01                          ; 0x1dc9b $DC8B A9 01                   ; A = 01
sta      $87,y                         ; 0x1dc9d $DC8D 99 87 00                ;
LDC90                                                                          ;
rts                                    ; 0x1dca0 $DC90 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Determine_Enemy_Facing_Direction_relative_to_Link                        ;
ldy      #$01                          ; 0x1dca1 $DC91 A0 01                   ; Y = 01
lda      $4D                           ; 0x1dca3 $DC93 A5 4D                   ; Link's Current X position (low byte)
adc      #$08                          ; 0x1dca5 $DC95 69 08                   ;
pha                                    ; 0x1dca7 $DC97 48                      ;
lda      $3B                           ; 0x1dca8 $DC98 A5 3B                   ; Link's Current X position (high byte)
adc      #$00                          ; 0x1dcaa $DC9A 69 00                   ;
sta      L000E                         ; 0x1dcac $DC9C 85 0E                   ;
pla                                    ; 0x1dcae $DC9E 68                      ;
sbc      $4E,x                         ; 0x1dcaf $DC9F F5 4E                   ; Enemy X position (low byte)
sta      $0F                           ; 0x1dcb1 $DCA1 85 0F                   ;
lda      L000E                         ; 0x1dcb3 $DCA3 A5 0E                   ;
sbc      $3C,x                         ; 0x1dcb5 $DCA5 F5 3C                   ; Enemy X position (high byte)
bpl      LDCAA                         ; 0x1dcb7 $DCA7 10 01                   ;
iny                                    ; 0x1dcb9 $DCA9 C8                      ;
LDCAA                                                                          ;
sty      $60,x                         ; 0x1dcba $DCAA 94 60                   ;facing dir
dey                                    ; 0x1dcbc $DCAC 88                      ;
rts                                    ; 0x1dcbd $DCAD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCAE                                                                          ;
lda      $0504,x                       ; 0x1dcbe $DCAE BD 04 05                ;; Timer for Enemy
bne      LDCC2                         ; 0x1dcc1 $DCB1 D0 0F                   ;
lda      #$20                          ; 0x1dcc3 $DCB3 A9 20                   ; A = 20
ldy      $0414,x                       ; 0x1dcc5 $DCB5 BC 14 04                ;
bpl      LDCBC                         ; 0x1dcc8 $DCB8 10 02                   ;
lda      #$00                          ; 0x1dcca $DCBA A9 00                   ; A = 00
LDCBC                                                                          ;
sta      $0504,x                       ; 0x1dccc $DCBC 9D 04 05                ;; Timer for Enemy
inc      $B6,x                         ; 0x1dccf $DCBF F6 B6                   ; Generated Enemy Slot
rts                                    ; 0x1dcd1 $DCC1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCC2                                                                          ;
ldy      $A1,x                         ; 0x1dcd2 $DCC2 B4 A1                   ; Enemy Code
lda      $6E1D,y                       ; 0x1dcd4 $DCC4 B9 1D 6E                ;
ldy      $0504,x                       ; 0x1dcd7 $DCC7 BC 04 05                ;; Timer for Enemy
cmp      #$FF                          ; 0x1dcda $DCCA C9 FF                   ;
beq      bank7_code29                  ; 0x1dcdc $DCCC F0 0D                   ;
jmp      LEEB2                         ; 0x1dcde $DCCE 4C B2 EE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table17                                                                  ;
.byt    $08,$F8                        ; 0x1dce1 $DCD1 08 F8                   ;
LDCD3                                                                          ;
.byt    $3F,$18,$04,$0F,$0F,$0F,$0F,$FF; 0x1dce3 $DCD3 3F 18 04 0F 0F 0F 0F FF ;
; ---------------------------------------------------------------------------- ;
bank7_code29                                                                   ;
cpy      #$68                          ; 0x1dceb $DCDB C0 68                   ;
bne      LDCED                         ; 0x1dced $DCDD D0 0E                   ;
lda      #$E8                          ; 0x1dcef $DCDF A9 E8                   ; A = E8
sta      $074B                         ; 0x1dcf1 $DCE1 8D 4B 07                ;; Spell Flash Counter (bit 7 set = decor flash)
lda      #$0F                          ; 0x1dcf4 $DCE4 A9 0F                   ; A = 0F
sta      $0725                         ; 0x1dcf6 $DCE6 8D 25 07                ;; PPU Macro Selector	
lda      #$80                          ; 0x1dcf9 $DCE9 A9 80                   ; A = 80
sta      $EC                           ; 0x1dcfb $DCEB 85 EC                   ; Sound Effects Type 1
LDCED                                                                          ;
bcc      LDCF5                         ; 0x1dcfd $DCED 90 06                   ;
jsr      bank7_Display                 ; 0x1dcff $DCEF 20 11 EF                ;
jmp      LDD27                         ; 0x1dd02 $DCF2 4C 27 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDCF5                                                                          ;
lda      $29                           ; 0x1dd05 $DCF5 A5 29                   ; Link's Y Position
sta      $2A                           ; 0x1dd07 $DCF7 85 2A                   ;;monster y	2a,2b,2c,2d,2e,2f
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1dd09 $DCF9 20 91 DC; Determine Enemy Facing Direction
lda      $CC                           ; 0x1dd0c $DCFC A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
adc      bank7_table17,y               ; 0x1dd0e $DCFE 79 D1 DC                ;
sta      $CD                           ; 0x1dd11 $DD01 85 CD                   ;
lda      $80                           ; 0x1dd13 $DD03 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
sta      $81                           ; 0x1dd15 $DD05 85 81                   ;
lda      $9F                           ; 0x1dd17 $DD07 A5 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
sta      $A0                           ; 0x1dd19 $DD09 85 A0                   ;
lda      #$50                          ; 0x1dd1b $DD0B A9 50                   ; A = 50
sta      $91                           ; 0x1dd1d $DD0D 85 91                   ;
lda      #$00                          ; 0x1dd1f $DD0F A9 00                   ; A = 00
sta      $C9                           ; 0x1dd21 $DD11 85 C9                   ;
ldx      #$01                          ; 0x1dd23 $DD13 A2 01                   ; X = 01
stx      $11                           ; 0x1dd25 $DD15 86 11                   ;
inx                                    ; 0x1dd27 $DD17 E8                      ;
stx      $0753                         ; 0x1dd28 $DD18 8E 53 07                ;
jsr      LEC02                         ; 0x1dd2b $DD1B 20 02 EC                ;
ldx      $10                           ; 0x1dd2e $DD1E A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $4E,x                         ; 0x1dd30 $DD20 B5 4E                   ; Enemy X position (low byte)
sbc      $072C                         ; 0x1dd32 $DD22 ED 2C 07                ; Scrolling Offset Low Byte
sta      $CD                           ; 0x1dd35 $DD25 85 CD                   ;
LDD27                                                                          ;
jsr      bank7_FUNCTION_CONVERT_706_and_707_to_Rx5plusW; 0x1dd37 $DD27 20 30 CF; Region Code * 5 + World Code
cmp      #$0F                          ; 0x1dd3a $DD2A C9 0F                   ;
bne      LDD31                         ; 0x1dd3c $DD2C D0 03                   ;
jmp      L9764                         ; 0x1dd3e $DD2E 4C 64 97                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDD31                                                                          ;
jmp      L9A46                         ; 0x1dd41 $DD31 4C 46 9A                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDD34                                                                          ;
ldy      $A1,x                         ; 0x1dd44 $DD34 B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1dd46 $DD36 B9 41 6E                ;
and      #$40                          ; 0x1dd49 $DD39 29 40                   ; keep bits .x.. .... (Regenerate bit)
beq      bank7_remove_enemy_or_item    ; 0x1dd4b $DD3B F0 0A                   ;
LDD3D                                                                          ;
ldy      $BC,x                         ; 0x1dd4d $DD3D B4 BC                   ;; Generated Enemy Y Position ?
bmi      bank7_remove_enemy_or_item    ; 0x1dd4f $DD3F 30 06                   ;
lda      ($D6),y                       ; 0x1dd51 $DD41 B1 D6                   ;
and      #$7F                          ; 0x1dd53 $DD43 29 7F                   ; keep bits .xxx xxxx
sta      ($D6),y                       ; 0x1dd55 $DD45 91 D6                   ;
bank7_remove_enemy_or_item                                                     ;
lda      #$00                          ; 0x1dd57 $DD47 A9 00                   ; A = 00
sta      $B6,x                         ; 0x1dd59 $DD49 95 B6                   ; Generated Enemy Slot
rts                                    ; 0x1dd5b $DD4B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Enemy_Score_Tile_Mapping_Codes                                 ;
;F5 = Nothing                                                                  ;
;A0 = 10                                                                       ;
;A2 = 5                                                                        ;
;A4 = 2                                                                        ;
;A6 = 7                                                                        ;
;60 = 3                                                                        ;
;6C = 15                                                                       ;
;9C = 0                                                                        ;
;9E = 00                                                                       ;
.byt    $F5,$F5,$F5,$F5,$F5,$A4,$60,$A2; 0x1dd5c $DD4C F5 F5 F5 F5 F5 A4 60 A2 ;
.byt    $A6,$A0,$6C,$A4,$60,$A2,$A6,$A0; 0x1dd64 $DD54 A6 A0 6C A4 60 A2 A6 A0 ;
LDD5C                                                                          ;
.byt    $F5,$A4,$60,$A2,$A0,$9C,$9C,$9C; 0x1dd6c $DD5C F5 A4 60 A2 A0 9C 9C 9C ;
.byt    $9C,$9C,$9C,$9E,$9E,$9E,$9E,$9E; 0x1dd74 $DD64 9C 9C 9C 9E 9E 9E 9E 9E ;
; ---------------------------------------------------------------------------- ;
bank7_code30                                                                   ;
lda      $0504,x                       ; 0x1dd7c $DD6C BD 04 05                ;; Timer for Enemy
beq      bank7_monster_death_give_exp  ; 0x1dd7f $DD6F F0 7B                   ;
ldy      $91,x                         ; 0x1dd81 $DD71 B4 91                   ;
lda      $0414,x                       ; 0x1dd83 $DD73 BD 14 04                ;
and      #$0F                          ; 0x1dd86 $DD76 29 0F                   ; keep bits .... xxxx
tax                                    ; 0x1dd88 $DD78 AA                      ;
lda      bank7_Table_for_Enemy_Score_Tile_Mapping_Codes,x; 0x1dd89 $DD79 BD 4C DD;
sta      $0201,y                       ; 0x1dd8c $DD7C 99 01 02                ;
lda      LDD5C,x                       ; 0x1dd8f $DD7F BD 5C DD                ;
ldx      $10                           ; 0x1dd92 $DD82 A6 10                   ;; used as monster x register ;draw boss hp bar
sta      $0205,y                       ; 0x1dd94 $DD84 99 05 02                ;
lda      #$01                          ; 0x1dd97 $DD87 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1dd99 $DD89 99 02 02                ;
sta      $0206,y                       ; 0x1dd9c $DD8C 99 06 02                ;
lda      $12                           ; 0x1dd9f $DD8F A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1dda1 $DD91 4A                      ;
bcc      LDD96                         ; 0x1dda2 $DD92 90 02                   ;
dec      $2A,x                         ; 0x1dda4 $DD94 D6 2A                   ; Enemy Y Position
LDD96                                                                          ;
lda      $2A,x                         ; 0x1dda6 $DD96 B5 2A                   ; Enemy Y Position
sta      $0200,y                       ; 0x1dda8 $DD98 99 00 02                ;
sta      $0204,y                       ; 0x1ddab $DD9B 99 04 02                ;
lda      $CD                           ; 0x1ddae $DD9E A5 CD                   ;
sta      $0203,y                       ; 0x1ddb0 $DDA0 99 03 02                ;
clc                                    ; 0x1ddb3 $DDA3 18                      ;
adc      #$08                          ; 0x1ddb4 $DDA4 69 08                   ;
sta      $0207,y                       ; 0x1ddb6 $DDA6 99 07 02                ;
lda      $C9                           ; 0x1ddb9 $DDA9 A5 C9                   ;
pha                                    ; 0x1ddbb $DDAB 48                      ;
and      #$08                          ; 0x1ddbc $DDAC 29 08                   ; keep bits .... x...
beq      LDDB5                         ; 0x1ddbe $DDAE F0 05                   ;
lda      #$F8                          ; 0x1ddc0 $DDB0 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1ddc2 $DDB2 99 00 02                ;
LDDB5                                                                          ;
pla                                    ; 0x1ddc5 $DDB5 68                      ;
and      #$04                          ; 0x1ddc6 $DDB6 29 04                   ; keep bits .... .x..
beq      LDDBF                         ; 0x1ddc8 $DDB8 F0 05                   ;
lda      #$F8                          ; 0x1ddca $DDBA A9 F8                   ; A = F8
sta      $0204,y                       ; 0x1ddcc $DDBC 99 04 02                ;
LDDBF                                                                          ;
rts                                    ; 0x1ddcf $DDBF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Experience_Table_Low_Byte                                                ;
.byt    $00,$02,$03,$05,$0A,$14,$1E,$32; 0x1ddd0 $DDC0 00 02 03 05 0A 14 1E 32 ;
.byt    $46,$64,$96,$C8,$2D,$F4,$BC,$E8; 0x1ddd8 $DDC8 46 64 96 C8 2D F4 BC E8 ;
bank7_Japanese_version_score_table                                             ;
.byt    $00,$01,$02,$05,$0A,$14,$32,$64; 0x1dde0 $DDD0 00 01 02 05 0A 14 32 64 ;
.byt    $C8,$F4,$E8,$D0                ; 0x1dde8 $DDD8 C8 F4 E8 D0             ;
bank7_Experience_Table_High_Byte                                               ;
.byt    $00,$00,$00,$00,$00,$00,$00,$00; 0x1ddec $DDDC 00 00 00 00 00 00 00 00 ;
.byt    $00,$00,$00,$00,$01,$01,$02,$03; 0x1ddf4 $DDE4 00 00 00 00 01 01 02 03 ;
; ---------------------------------------------------------------------------- ;
bank7_monster_death_give_exp                                                   ;
lda      $0414,x                       ; 0x1ddfc $DDEC BD 14 04                ;
bmi      LDE20                         ; 0x1ddff $DDEF 30 2F                   ;
tay                                    ; 0x1de01 $DDF1 A8                      ;
lda      bank7_Experience_Table_Low_Byte,y; 0x1de02 $DDF2 B9 C0 DD             ;
clc                                    ; 0x1de05 $DDF5 18                      ;
adc      $0756                         ; 0x1de06 $DDF6 6D 56 07                ;; Experience to be added (low byte)
sta      $0756                         ; 0x1de09 $DDF9 8D 56 07                ; Experience to be added (low byte)
lda      bank7_Experience_Table_High_Byte,y; 0x1de0c $DDFC B9 DC DD            ;
adc      $0755                         ; 0x1de0f $DDFF 6D 55 07                ;; Experience to be added (high byte)
sta      $0755                         ; 0x1de12 $DE02 8D 55 07                ; Experience to be added (high byte)
ldy      $A1,x                         ; 0x1de15 $DE05 B4 A1                   ; Enemy Code
lda      $6E1D,y                       ; 0x1de17 $DE07 B9 1D 6E                ;
cmp      #$FF                          ; 0x1de1a $DE0A C9 FF                   ;
bne      LDE1D                         ; 0x1de1c $DE0C D0 0F                   ;
;boss (now dead) turns into a key ?                                            ;
lda      #$80                          ; 0x1de1e $DE0E A9 80                   ; A = 80
sta      $4E,x                         ; 0x1de20 $DE10 95 4E                   ; Enemy X position (low byte)
lsr                                    ; 0x1de22 $DE12 4A                      ;
sta      $2A,x                         ; 0x1de23 $DE13 95 2A                   ; Enemy Y Position
jsr      LDE20                         ; 0x1de25 $DE15 20 20 DE                ;
lda      #$08                          ; 0x1de28 $DE18 A9 08                   ; A = 08					;key ID
sta      $AF,x                         ; 0x1de2a $DE1A 95 AF                   ; Various enemy state variables			;store as item ID
rts                                    ; 0x1de2c $DE1C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE1D                                                                          ;
jmp      LDD34                         ; 0x1de2d $DE1D 4C 34 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE20                                                                          ;
jsr      LDD34                         ; 0x1de30 $DE20 20 34 DD                ;
lda      #$02                          ; 0x1de33 $DE23 A9 02                   ; sound of dropped item
sta      $EF                           ; 0x1de35 $DE25 85 EF                   ;; Sound Effects Type 4; Sound Effects Type 4
lda      $048E,x                       ; 0x1de37 $DE27 BD 8E 04                ; (set to any item ID, anything can be dropped)
sta      $AF,x                         ; 0x1de3a $DE2A 95 AF                   ;; Various enemy state variables
lda      #$FF                          ; 0x1de3c $DE2C A9 FF                   ; A = FF
sta      $BC,x                         ; 0x1de3e $DE2E 95 BC                   ;; Generated Enemy Y Position ?
lda      #$01                          ; 0x1de40 $DE30 A9 01                   ; Code for Red Jar (maybe Blue too)
sta      $B6,x                         ; 0x1de42 $DE32 95 B6                   ;; Generated Enemy Slot
sta      $A1,x                         ; 0x1de44 $DE34 95 A1                   ; Takes the defeated enemy's slot
lsr                                    ; 0x1de46 $DE36 4A                      ;
sta      $057E,x                       ; 0x1de47 $DE37 9D 7E 05                ; Enemy Y Velocity
sta      $C2,x                         ; 0x1de4a $DE3A 95 C2                   ; Enemy Current HP
rts                                    ; 0x1de4c $DE3C 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE3D                                                                          ;
jsr      LEA32                         ; 0x1de4d $DE3D 20 32 EA                ;
LDE40                                                                          ;
ldy      #$01                          ; 0x1de50 $DE40 A0 01                   ; Y = 01
inx                                    ; 0x1de52 $DE42 E8                      ;
jsr      bank7_code51                  ; 0x1de53 $DE43 20 7D F2                ;
ldx      $10                           ; 0x1de56 $DE46 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $1A,x                         ; 0x1de58 $DE48 B5 1A                   ;
cmp      #$02                          ; 0x1de5a $DE4A C9 02                   ;
bcc      LDE51                         ; 0x1de5c $DE4C 90 03                   ;
jmp      LDD3D                         ; 0x1de5e $DE4E 4C 3D DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE51                                                                          ;
jsr      bank7_Display                 ; 0x1de61 $DE51 20 11 EF                ; Display
LDE54                                                                          ;
lda      $C9                           ; 0x1de64 $DE54 A5 C9                   ;
and      #$FC                          ; 0x1de66 $DE56 29 FC                   ; keep bits xxxx xx..
beq      LDE63                         ; 0x1de68 $DE58 F0 09                   ;
lda      $A8,x                         ; 0x1de6a $DE5A B5 A8                   ; Enemy State
and      #$0F                          ; 0x1de6c $DE5C 29 0F                   ; keep bits .... xxxx
sta      $A8,x                         ; 0x1de6e $DE5E 95 A8                   ; Enemy State
jmp      LDE6C                         ; 0x1de70 $DE60 4C 6C DE                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE63                                                                          ;
jsr      LE48B                         ; 0x1de73 $DE63 20 8B E4                ;
jsr      bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least; 0x1de76 $DE66 20 77 E6; Sword Hit Detection
jmp      LE4D9                         ; 0x1de79 $DE69 4C D9 E4                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDE6C                                                                          ;
lda      $A1,x                         ; 0x1de7c $DE6C B5 A1                   ; Enemy Code
cmp      #$13                          ; 0x1de7e $DE6E C9 13                   ; 13 = Elevator
beq      LDEB7                         ; 0x1de80 $DE70 F0 45                   ;
cmp      #$03                          ; 0x1de82 $DE72 C9 03                   ; 03 = Myu
bcc      LDEB7                         ; 0x1de84 $DE74 90 41                   ;
ldy      #$01                          ; 0x1de86 $DE76 A0 01                   ; Y = 01
sty      $0F                           ; 0x1de88 $DE78 84 0F                   ;
lda      $072C                         ; 0x1de8a $DE7A AD 2C 07                ; Scrolling Offset Low Byte
sec                                    ; 0x1de8d $DE7D 38                      ;
sbc      #$60                          ; 0x1de8e $DE7E E9 60                   ;
sta      $01                           ; 0x1de90 $DE80 85 01                   ;
lda      $072A                         ; 0x1de92 $DE82 AD 2A 07                ; Scrolling Offset High Byte
sbc      $0F                           ; 0x1de95 $DE85 E5 0F                   ;
sta      L0000                         ; 0x1de97 $DE87 85 00                   ;
inc      L0000                         ; 0x1de99 $DE89 E6 00                   ;
lda      $072D                         ; 0x1de9b $DE8B AD 2D 07                ;
clc                                    ; 0x1de9e $DE8E 18                      ;
adc      #$60                          ; 0x1de9f $DE8F 69 60                   ;
sta      $03                           ; 0x1dea1 $DE91 85 03                   ;
lda      $072B                         ; 0x1dea3 $DE93 AD 2B 07                ;
adc      $0F                           ; 0x1dea6 $DE96 65 0F                   ;
sta      $02                           ; 0x1dea8 $DE98 85 02                   ;
inc      $02                           ; 0x1deaa $DE9A E6 02                   ;
lda      $4E,x                         ; 0x1deac $DE9C B5 4E                   ; Enemy X position (low byte)
cmp      $01                           ; 0x1deae $DE9E C5 01                   ;
ldy      $3C,x                         ; 0x1deb0 $DEA0 B4 3C                   ; Enemy X position (high byte)
iny                                    ; 0x1deb2 $DEA2 C8                      ;
tya                                    ; 0x1deb3 $DEA3 98                      ;
sbc      L0000                         ; 0x1deb4 $DEA4 E5 00                   ;
bmi      LDEB4                         ; 0x1deb6 $DEA6 30 0C                   ;
lda      $4E,x                         ; 0x1deb8 $DEA8 B5 4E                   ; Enemy X position (low byte)
cmp      $03                           ; 0x1deba $DEAA C5 03                   ;
ldy      $3C,x                         ; 0x1debc $DEAC B4 3C                   ; Enemy X position (high byte)
iny                                    ; 0x1debe $DEAE C8                      ;
tya                                    ; 0x1debf $DEAF 98                      ;
sbc      $02                           ; 0x1dec0 $DEB0 E5 02                   ;
bmi      LDEB7                         ; 0x1dec2 $DEB2 30 03                   ;
LDEB4                                                                          ;
jsr      LDD3D                         ; 0x1dec4 $DEB4 20 3D DD                ;
LDEB7                                                                          ;
rts                                    ; 0x1dec7 $DEB7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Simple_Horizontal_Movement                                               ;
inx                                    ; 0x1dec8 $DEB8 E8                      ;
jsr      bank7_XY_Movements_Routine    ; 0x1dec9 $DEB9 20 CE D1                ;
dex                                    ; 0x1decc $DEBC CA                      ;
rts                                    ; 0x1decd $DEBD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Gravity                                                                  ;
jsr      bank7_Simple_Vertical_Movement; 0x1dece $DEBE 20 C8 DE                ; Simple Vertical Movement
inc      $057E,x                       ; 0x1ded1 $DEC1 FE 7E 05                ; Enemy Y Velocity
inc      $057E,x                       ; 0x1ded4 $DEC4 FE 7E 05                ;; Enemy Y Velocity; Enemy Y Velocity
rts                                    ; 0x1ded7 $DEC7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Simple_Vertical_Movement                                                 ;
inx                                    ; 0x1ded8 $DEC8 E8                      ;
jsr      LD20A                         ; 0x1ded9 $DEC9 20 0A D2                ;
dex                                    ; 0x1dedc $DECC CA                      ;
rts                                    ; 0x1dedd $DECD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
inx                                    ; 0x1dede $DECE E8                      ;
jsr      bank7_applyGravityMotion      ; 0x1dedf $DECF 20 9B D1                ;
dex                                    ; 0x1dee2 $DED2 CA                      ;
rts                                    ; 0x1dee3 $DED3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDED4                                                                          ;
txa                                    ; 0x1dee4 $DED4 8A                      ;
clc                                    ; 0x1dee5 $DED5 18                      ;
adc      #$07                          ; 0x1dee6 $DED6 69 07                   ;
tax                                    ; 0x1dee8 $DED8 AA                      ;
jsr      bank7_XY_Movements_Routine    ; 0x1dee9 $DED9 20 CE D1                ;
jsr      LD20A                         ; 0x1deec $DEDC 20 0A D2                ;
ldy      #$02                          ; 0x1deef $DEDF A0 02                   ; Y = 02
jsr      bank7_code51                  ; 0x1def1 $DEE1 20 7D F2                ;
ldx      $10                           ; 0x1def4 $DEE4 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1def6 $DEE6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_tile_and_move_right_1_column                                         ;
sta      (L000E),y                     ; 0x1def7 $DEE7 91 0E                   ;
iny                                    ; 0x1def9 $DEE9 C8                      ;
tya                                    ; 0x1defa $DEEA 98                      ;
and      #$0F                          ; 0x1defb $DEEB 29 0F                   ; keep bits .... xxxx
bne      LDF00                         ; 0x1defd $DEED D0 11                   ;
lda      L000E                         ; 0x1deff $DEEF A5 0E                   ;
clc                                    ; 0x1df01 $DEF1 18                      ;
adc      #$D0                          ; 0x1df02 $DEF2 69 D0                   ;
sta      L000E                         ; 0x1df04 $DEF4 85 0E                   ;
bcc      LDEFA                         ; 0x1df06 $DEF6 90 02                   ;
inc      $0F                           ; 0x1df08 $DEF8 E6 0F                   ;
LDEFA                                                                          ;
lda      $0730                         ; 0x1df0a $DEFA AD 30 07                ;; Position of Object Placement
and      #$F0                          ; 0x1df0d $DEFD 29 F0                   ; keep bits xxxx ....
tay                                    ; 0x1df0f $DEFF A8                      ;
LDF00                                                                          ;
rts                                    ; 0x1df10 $DF00 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $75                           ; 0x1df11 $DF01 A5 75                   ; X position in OW
jsr      LDF3F                         ; 0x1df13 $DF03 20 3F DF                ;
sta      L0000                         ; 0x1df16 $DF06 85 00                   ;
tya                                    ; 0x1df18 $DF08 98                      ;
asl                                    ; 0x1df19 $DF09 0A                      ;
asl                                    ; 0x1df1a $DF0A 0A                      ;
asl                                    ; 0x1df1b $DF0B 0A                      ;
asl                                    ; 0x1df1c $DF0C 0A                      ;
ora      L0000                         ; 0x1df1d $DF0D 05 00                   ;
sta      $0A                           ; 0x1df1f $DF0F 85 0A                   ;
sta      $77                           ; 0x1df21 $DF11 85 77                   ;;projectile speed	77,78,79,7A,7B,7C	77,Y
lda      #$08                          ; 0x1df23 $DF13 A9 08                   ; A = 08
sta      L0000                         ; 0x1df25 $DF15 85 00                   ;
asl                                    ; 0x1df27 $DF17 0A                      ;
sta      $7D                           ; 0x1df28 $DF18 85 7D                   ;;number of pixels to move? automove? on overworld, only partially, causes bug
lda      $0A                           ; 0x1df2a $DF1A A5 0A                   ;
asl                                    ; 0x1df2c $DF1C 0A                      ;
asl                                    ; 0x1df2d $DF1D 0A                      ;
asl                                    ; 0x1df2e $DF1E 0A                      ;
asl                                    ; 0x1df2f $DF1F 0A                      ;
asl                                    ; 0x1df30 $DF20 0A                      ;
rol      L0000                         ; 0x1df31 $DF21 26 00                   ;
asl                                    ; 0x1df33 $DF23 0A                      ;
rol      L0000                         ; 0x1df34 $DF24 26 00                   ;
sta      $01                           ; 0x1df36 $DF26 85 01                   ;
lda      $76                           ; 0x1df38 $DF28 A5 76                   ; X position on map (Link)
and      #$0F                          ; 0x1df3a $DF2A 29 0F                   ; keep bits .... xxxx
asl                                    ; 0x1df3c $DF2C 0A                      ;
adc      $01                           ; 0x1df3d $DF2D 65 01                   ;
sta      $7A                           ; 0x1df3f $DF2F 85 7A                   ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
lda      $0A                           ; 0x1df41 $DF31 A5 0A                   ;
and      #$10                          ; 0x1df43 $DF33 29 10                   ; keep bits ...x ....
lsr                                    ; 0x1df45 $DF35 4A                      ;
ora      L0000                         ; 0x1df46 $DF36 05 00                   ;
sta      $79                           ; 0x1df48 $DF38 85 79                   ;;are used to draw the Overworld tiles? offset in the Name Table(s) for Overworld redrawing.
lda      #$00                          ; 0x1df4a $DF3A A9 00                   ; A = 00
sta      $7E                           ; 0x1df4c $DF3C 85 7E                   ;
rts                                    ; 0x1df4e $DF3E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDF3F                                                                          ;
ldy      #$FF                          ; 0x1df4f $DF3F A0 FF                   ; Y = FF
LDF41                                                                          ;
iny                                    ; 0x1df51 $DF41 C8                      ;
sec                                    ; 0x1df52 $DF42 38                      ;
sbc      #$0F                          ; 0x1df53 $DF43 E9 0F                   ;
bcs      LDF41                         ; 0x1df55 $DF45 B0 FA                   ;
adc      #$0F                          ; 0x1df57 $DF47 69 0F                   ;
rts                                    ; 0x1df59 $DF49 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_tile_and_go_down_1_row_in_2x2_tiles_units                            ;
sta      (L000E),y                     ; 0x1df5a $DF4A 91 0E                   ;
LDF4C                                                                          ;
lda      $0730                         ; 0x1df5c $DF4C AD 30 07                ; Position of Object Placement
clc                                    ; 0x1df5f $DF4F 18                      ;
adc      #$10                          ; 0x1df60 $DF50 69 10                   ; Go down 1 row
sta      $0730                         ; 0x1df62 $DF52 8D 30 07                ;; Position of Object Placement
rts                                    ; 0x1df65 $DF55 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LDF56                                                                          ;
sta      (L000E),y                     ; 0x1df66 $DF56 91 0E                   ;
tya                                    ; 0x1df68 $DF58 98                      ;
clc                                    ; 0x1df69 $DF59 18                      ;
adc      #$10                          ; 0x1df6a $DF5A 69 10                   ;
tay                                    ; 0x1df6c $DF5C A8                      ;
rts                                    ; 0x1df6d $DF5D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_OW_tiles_that_transform_into_another_type                      ;
;0E -> 04	Rock   -> Desert                                                     ;
;0F -> 04	Spider -> Desert                                                     ;
;04 -> 02	Desert -> Palace                                                     ;
;06 -> 00	Forest -> Town                                                       ;
.byt    $0E,$0F,$04,$06                ; 0x1df6e $DF5E 0E 0F 04 06             ;
bank7_Transform_into_this                                                      ;
.byt    $04,$04,$02,$00                ; 0x1df72 $DF62 04 04 02 00             ;
bank7_table19                                                                  ;
.byt    $35,$31                        ; 0x1df76 $DF66 35 31                   ;
LDF68                                                                          ;
.byt    $E6,$D1                        ; 0x1df78 $DF68 E6 D1                   ;
bank7_PPU_Macros_for_Hidden_Palace                                             ;
.byt    $23,$1A,$02,$60,$62,$23,$3A,$02; 0x1df7a $DF6A 23 1A 02 60 62 23 3A 02 ;
.byt    $61,$63,$23,$F6,$01,$FB,$FF    ; 0x1df82 $DF72 61 63 23 F6 01 FB FF    ;
; ---------------------------------------------------------------------------- ;
bank7_forest_chop_with_hammer                                                  ;
jsr      L83CF                         ; 0x1df89 $DF79 20 CF 83                ;
LDF7C                                                                          ;
lda      (L000E),y                     ; 0x1df8c $DF7C B1 0E                   ;
cmp      bank7_Table_for_OW_tiles_that_transform_into_another_type,x; 0x1df8e $DF7E DD 5E DF;
beq      bank7_Related_to_Hidden_Town_revealed; 0x1df91 $DF81 F0 08            ;
dex                                    ; 0x1df93 $DF83 CA                      ;
bpl      LDF7C                         ; 0x1df94 $DF84 10 F6                   ;
inx                                    ; 0x1df96 $DF86 E8                      ;
stx      $0725                         ; 0x1df97 $DF87 8E 25 07                ;; PPU Macro Selector	
rts                                    ; 0x1df9a $DF8A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Hidden_Town_revealed                                          ;
txa                                    ; 0x1df9b $DF8B 8A                      ;
beq      LDFBD                         ; 0x1df9c $DF8C F0 2F                   ;
lda      $0706                         ; 0x1df9e $DF8E AD 06 07                ; Current Region
cmp      #$02                          ; 0x1dfa1 $DF91 C9 02                   ; Region 02 = East Hyrule
bne      LDFD1                         ; 0x1dfa3 $DF93 D0 3C                   ; if NOT 02, return
cpx      #$03                          ; 0x1dfa5 $DF95 E0 03                   ;
bne      LDFB9                         ; 0x1dfa7 $DF97 D0 20                   ;
lda      $04                           ; 0x1dfa9 $DF99 A5 04                   ; Y Units Offset in Overworld
cmp      #$33                          ; 0x1dfab $DF9B C9 33                   ; Y Coordinate of Hidden Kasuto ???
bne      LDFD1                         ; 0x1dfad $DF9D D0 32                   ;
lda      L0000                         ; 0x1dfaf $DF9F A5 00                   ;
cmp      #$3E                          ; 0x1dfb1 $DFA1 C9 3E                   ; X Coordinate of Hidden Kasuto ???
bne      LDFD1                         ; 0x1dfb3 $DFA3 D0 2C                   ;
lda      #$5C                          ; 0x1dfb5 $DFA5 A9 5C                   ; A = 5C
sta      $0305                         ; 0x1dfb7 $DFA7 8D 05 03                ;; Empty Row Space Character
lda      #$5D                          ; 0x1dfba $DFAA A9 5D                   ; A = 5D
sta      $0306                         ; 0x1dfbc $DFAC 8D 06 03                ;; Letter Written to Screen
lda      #$5E                          ; 0x1dfbf $DFAF A9 5E                   ; A = 5E
sta      $030A                         ; 0x1dfc1 $DFB1 8D 0A 03                ;
lda      #$5F                          ; 0x1dfc4 $DFB4 A9 5F                   ; A = 5F
sta      $030B                         ; 0x1dfc6 $DFB6 8D 0B 03                ;
LDFB9                                                                          ;
lda      #$10                          ; 0x1dfc9 $DFB9 A9 10                   ; A = 10
sta      $EB                           ; 0x1dfcb $DFBB 85 EB                   ; EB = Music
LDFBD                                                                          ;
lda      bank7_Transform_into_this,x   ; 0x1dfcd $DFBD BD 62 DF                ;
sta      (L000E),y                     ; 0x1dfd0 $DFC0 91 0E                   ;
cpx      #$02                          ; 0x1dfd2 $DFC2 E0 02                   ;
bcc      LDFD1                         ; 0x1dfd4 $DFC4 90 0B                   ;
dex                                    ; 0x1dfd6 $DFC6 CA                      ;
dex                                    ; 0x1dfd7 $DFC7 CA                      ;
ldy      bank7_table19,x               ; 0x1dfd8 $DFC8 BC 66 DF                ;
lda      LDF68,x                       ; 0x1dfdb $DFCB BD 68 DF                ;
sta      $6A00,y                       ; 0x1dfde $DFCE 99 00 6A                ;
LDFD1                                                                          ;
rts                                    ; 0x1dfe1 $DFD1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfe2 $DFD2 20 C9 FF                ; Load Bank $0769
jsr      bank7_forest_chop_with_hammer ; 0x1dfe5 $DFD5 20 79 DF                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1dfe8 $DFD8 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfeb $DFDB 20 C9 FF                ; Load Bank $0769
jsr      bank7_Set_0E_0F_pointer_according_to_Object_Group; 0x1dfee $DFDE 20 E4 DF;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1dff1 $DFE1 4C C5 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_0E_0F_pointer_according_to_Object_Group                              ;
;Y is the index, already multiplied by 2                                       ;
lda      bank5_Pointer_table_for_Objects_Tile_Mappings,y; 0x1dff4 $DFE4 B9 00 85;
sta      L000E                         ; 0x1dff7 $DFE7 85 0E                   ;
lda      bank5_Pointer_table_for_Objects_Tile_Mappings+$01,y; 0x1dff9 $DFE9 B9 01 85;
sta      $0F                           ; 0x1dffc $DFEC 85 0F                   ;
rts                                    ; 0x1dffe $DFEE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Overworld_Boundaries__Mountain_or_Water_Bank_1                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1dfff $DFEF 20 C9 FF                ; Load Bank $0769
jsr      L83CF                         ; 0x1e002 $DFF2 20 CF 83                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e005 $DFF5 4C C5 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Check_for_Hidden_Palace_spot_Bank_1                                      ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e008 $DFF8 20 C9 FF                ; Load Bank $0769
jsr      L8368                         ; 0x1e00b $DFFB 20 68 83                ;
LE000     = * + $0002                                                          ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e00e $DFFE 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e011 $E001 20 C9 FF                ; Load Bank $0769
lda      (L000E),y                     ; 0x1e014 $E004 B1 0E                   ;
and      #$0F                          ; 0x1e016 $E006 29 0F                   ; keep bits .... xxxx
sta      $02                           ; 0x1e018 $E008 85 02                   ;
lda      (L000E),y                     ; 0x1e01a $E00A B1 0E                   ;
lsr                                    ; 0x1e01c $E00C 4A                      ;
lsr                                    ; 0x1e01d $E00D 4A                      ;
lsr                                    ; 0x1e01e $E00E 4A                      ;
lsr                                    ; 0x1e01f $E00F 4A                      ;
sec                                    ; 0x1e020 $E010 38                      ;
adc      $03                           ; 0x1e021 $E011 65 03                   ;
sta      $03                           ; 0x1e023 $E013 85 03                   ;
pha                                    ; 0x1e025 $E015 48                      ;
jsr      bank7_Load_Bank_0_at_0x8000   ; 0x1e026 $E016 20 C5 FF                ; Load Bank 0
pla                                    ; 0x1e029 $E019 68                      ;
rts                                    ; 0x1e02a $E01A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Turn_Palaces_into_Stone_Bank_1                                           ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e02b $E01B 20 C9 FF                ; Load Bank $0769
jsr      L879B                         ; 0x1e02e $E01E 20 9B 87                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e031 $E021 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e034 $E024 20 C9 FF                ; Load Bank $0769
jsr      L83A1                         ; 0x1e037 $E027 20 A1 83                ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e03a $E02A 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table20                                                                  ;
.byt    $FF,$FF,$FF                    ; 0x1e03d $E02D FF FF FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code33                                                                   ;
lda      #$AF                          ; 0x1e040 $E030 A9 AF                   ; A = AF
bank7_Links_initial_Y_Position_when_entering_an_area__ground_center_or_side    ;
sta      $29                           ; 0x1e042 $E032 85 29                   ; Link's Y position
ldy      #$00                          ; 0x1e044 $E034 A0 00                   ; Y = 00
ldx      #$00                          ; 0x1e046 $E036 A2 00                   ; X = 00
jsr      bank7_code51                  ; 0x1e048 $E038 20 7D F2                ;
jsr      bank7_code34                  ; 0x1e04b $E03B 20 70 E0                ;
lda      $A7                           ; 0x1e04e $E03E A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
beq      LE04B                         ; 0x1e050 $E040 F0 09                   ;
lda      $29                           ; 0x1e052 $E042 A5 29                   ; Link's Y Position
sec                                    ; 0x1e054 $E044 38                      ;
sbc      #$10                          ; 0x1e055 $E045 E9 10                   ;
cmp      #$10                          ; 0x1e057 $E047 C9 10                   ;
bcs      bank7_Links_initial_Y_Position_when_entering_an_area__ground_center_or_side; 0x1e059 $E049 B0 E7;
LE04B                                                                          ;
inc      $29                           ; 0x1e05b $E04B E6 29                   ; Link's Y position
rts                                    ; 0x1e05d $E04D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table21                                                                  ;
.byt    $01,$02,$01,$02,$04,$04,$08,$08; 0x1e05e $E04E 01 02 01 02 04 04 08 08 ;
.byt    $01,$02,$01,$02,$04,$04,$08,$08; 0x1e066 $E056 01 02 01 02 04 04 08 08 ;
.byt    $01,$02,$01,$02,$04,$08,$01,$02; 0x1e06e $E05E 01 02 01 02 04 08 01 02 ;
.byt    $01,$02,$04,$08,$01,$02,$01,$02; 0x1e076 $E066 01 02 04 08 01 02 01 02 ;
.byt    $04,$08                        ; 0x1e07e $E06E 04 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_code34                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e080 $E070 20 C9 FF                ;
jsr      bank7_Related_to_Link_falling_in_Lava_Water; 0x1e083 $E073 20 79 E0   ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e086 $E076 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Link_falling_in_Lava_Water                                    ;
ldx      #$00                          ; 0x1e089 $E079 A2 00                   ; X = 00
stx      $A7                           ; 0x1e08b $E07B 86 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$07                          ; 0x1e08d $E07D A9 07                   ; A = 07
clc                                    ; 0x1e08f $E07F 18                      ;
adc      $13                           ; 0x1e090 $E080 65 13                   ; Fairy state (0 = Not in Fairy state)
tay                                    ; 0x1e092 $E082 A8                      ;
jsr      LE1B8                         ; 0x1e093 $E083 20 B8 E1                ;
lda      $03                           ; 0x1e096 $E086 A5 03                   ;
sta      $0D                           ; 0x1e098 $E088 85 0D                   ;
lda      #$05                          ; 0x1e09a $E08A A9 05                   ; A = 05
clc                                    ; 0x1e09c $E08C 18                      ;
adc      $13                           ; 0x1e09d $E08D 65 13                   ; Fairy state (0 = Not in Fairy state)
tay                                    ; 0x1e09f $E08F A8                      ;
jsr      LE1B8                         ; 0x1e0a0 $E090 20 B8 E1                ;
ldy      #$1D                          ; 0x1e0a3 $E093 A0 1D                   ; Y = 1D
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e0a5 $E095 20 E8 EA;
lda      #$00                          ; 0x1e0a8 $E098 A9 00                   ; A = 00
sta      $0752                         ; 0x1e0aa $E09A 8D 52 07                ;
lda      $03                           ; 0x1e0ad $E09D A5 03                   ;tile index stepped on?
cmp      L8520                         ; 0x1e0af $E09F CD 20 85                ;
bne      LE0B0                         ; 0x1e0b2 $E0A2 D0 0C                   ;
bank7_Link_touched_Lava_Water                                                  ;
lda      #$01                          ; 0x1e0b4 $E0A4 A9 01                   ; A = 01
sta      $E9                           ; 0x1e0b6 $E0A6 85 E9                   ;
lda      #$10                          ; 0x1e0b8 $E0A8 A9 10                   ; A = 10
sta      $050C                         ; 0x1e0ba $E0AA 8D 0C 05                ; Timer for Link being in injured state
inc      $B5                           ; 0x1e0bd $E0AD E6 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
rts                                    ; 0x1e0bf $E0AF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0B0                                                                          ;
cmp      L8521                         ; 0x1e0c0 $E0B0 CD 21 85                ;
beq      LE0BA                         ; 0x1e0c3 $E0B3 F0 05                   ;
cmp      L8522                         ; 0x1e0c5 $E0B5 CD 22 85                ;
bne      LE0C5                         ; 0x1e0c8 $E0B8 D0 0B                   ;
;at this point:                                                                ;
;$2 is the offset for below foot(10*Y position), add to $E or $F               ;
;$3 is tile below links foot                                                   ;
;$E, $F are the vertical line which contains the tiles link is at              ;
LE0BA                                                                          ;
ldy      $29                           ; 0x1e0ca $E0BA A4 29                   ; Link's Y Position
cpy      #$A5                          ; 0x1e0cc $E0BC C0 A5                   ;
bcc      LE0C5                         ; 0x1e0ce $E0BE 90 05                   ;
ldy      #$20                          ; 0x1e0d0 $E0C0 A0 20                   ; Y = 20
sty      $0752                         ; 0x1e0d2 $E0C2 8C 52 07                ;
LE0C5                                                                          ;
cmp      L851F                         ; 0x1e0d5 $E0C5 CD 1F 85                ;breakable step on break-able step-on
beq      LE0FC                         ; 0x1e0d8 $E0C8 F0 32                   ;
cmp      bank5_table1                  ; 0x1e0da $E0CA CD 1A 85                ;
beq      LE0E6                         ; 0x1e0dd $E0CD F0 17                   ;
cmp      L851C                         ; 0x1e0df $E0CF CD 1C 85                ;
beq      LE0E6                         ; 0x1e0e2 $E0D2 F0 12                   ;
cmp      L851B                         ; 0x1e0e4 $E0D4 CD 1B 85                ;
beq      LE0E6                         ; 0x1e0e7 $E0D7 F0 0D                   ;
bank7_table22                                                                  ;
.byt    $CD,$1D,$85,$D0                ; 0x1e0e9 $E0D9 CD 1D 85 D0             ;
; ---------------------------------------------------------------------------- ;
bank7_code35                                                                   ;
.byt    $1B                            ; 0x1e0ed $E0DD 1B                      ;
lda      $17                           ; 0x1e0ee $E0DE A5 17                   ;; Link's Shield Position; Link's Shield Position (0 = Link ducked)
bne      LE0F9                         ; 0x1e0f0 $E0E0 D0 17                   ;
inc      $070E                         ; 0x1e0f2 $E0E2 EE 0E 07                ;;setting to 1 will make link sink (duck into the chimney)
LE0E5                                                                          ;
rts                                    ; 0x1e0f5 $E0E5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0E6                                                                          ;
lda      $F7                           ; 0x1e0f6 $E0E6 A5 F7                   ;; Controller 1 Buttons Held
and      #$08                          ; 0x1e0f8 $E0E8 29 08                   ;;Keep Bits:0000_1000
beq      LE0F9                         ; 0x1e0fa $E0EA F0 0D                   ;
lda      $0479                         ; 0x1e0fc $E0EC AD 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
bne      LE0E5                         ; 0x1e0ff $E0EF D0 F4                   ;
inc      $075B                         ; 0x1e101 $E0F1 EE 5B 07                ;
lda      #$16                          ; 0x1e104 $E0F4 A9 16                   ;;A = #$16 0001_0110
jmp      LE187                         ; 0x1e106 $E0F6 4C 87 E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0F9                                                                          ;
jmp      LE12B                         ; 0x1e109 $E0F9 4C 2B E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE0FC                                                                          ;
lda      #$8F                          ; 0x1e10c $E0FC A9 8F                   ;;A = #$8f 1000_1111
ldy      $02                           ; 0x1e10e $E0FE A4 02                   ;
sta      (L000E),y                     ; 0x1e110 $E100 91 0E                   ;
jsr      bank7_find_next_free_41A_X_or_something_and_write_to___associated; 0x1e112 $E102 20 92 E2;
lda      #$81                          ; 0x1e115 $E105 A9 81                   ;;A = #$81 1000_0001
sta      $041A,x                       ; 0x1e117 $E107 9D 1A 04                ;;break block by stab/stepon: ?exists/in-use
lda      #$02                          ; 0x1e11a $E10A A9 02                   ;;A = #$02 0000_0010
sta      $ED                           ; 0x1e11c $E10C 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
lda      $29                           ; 0x1e11e $E10E A5 29                   ;;y_pos (Link's y position in sideview);link Y pos SideScroll		; Link's Y Position
clc                                    ; 0x1e120 $E110 18                      ;
adc      #$20                          ; 0x1e121 $E111 69 20                   ;
and      #$F0                          ; 0x1e123 $E113 29 F0                   ;;Keep Bits:1111_0000
sta      $0429,x                       ; 0x1e125 $E115 9D 29 04                ;;break block by stab/stepon: y
lda      $4D                           ; 0x1e128 $E118 A5 4D                   ;;link X pos SideScroll		; Link's X Position (low byte)
clc                                    ; 0x1e12a $E11A 18                      ;
adc      #$0F                          ; 0x1e12b $E11B 69 0F                   ;
and      #$F0                          ; 0x1e12d $E11D 29 F0                   ;;Keep Bits:1111_0000
sta      $0424,x                       ; 0x1e12f $E11F 9D 24 04                ;;break block by stab/stepon: X
lda      $3B                           ; 0x1e132 $E122 A5 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
adc      #$00                          ; 0x1e134 $E124 69 00                   ;
sta      $041F,x                       ; 0x1e136 $E126 9D 1F 04                ;;break block by stab/stepon: map page
ldx      #$00                          ; 0x1e139 $E129 A2 00                   ;;X = #$00 0000_0000
LE12B                                                                          ;
lda      $5F                           ; 0x1e13b $E12B A5 5F                   ;; Link's facing direction
lsr                                    ; 0x1e13d $E12D 4A                      ;
clc                                    ; 0x1e13e $E12E 18                      ;
adc      $13                           ; 0x1e13f $E12F 65 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      L0000                         ; 0x1e141 $E131 85 00                   ;
pha                                    ; 0x1e143 $E133 48                      ;
lda      #$00                          ; 0x1e144 $E134 A9 00                   ;;A = #$00 0000_0000
sta      $01                           ; 0x1e146 $E136 85 01                   ;
jsr      LE1BE                         ; 0x1e148 $E138 20 BE E1                ;
pla                                    ; 0x1e14b $E13B 68                      ;
clc                                    ; 0x1e14c $E13C 18                      ;
adc      #$02                          ; 0x1e14d $E13D 69 02                   ;
adc      $13                           ; 0x1e14f $E13F 65 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      L0000                         ; 0x1e151 $E141 85 00                   ;
lda      #$00                          ; 0x1e153 $E143 A9 00                   ;;A = #$00 0000_0000
sta      $01                           ; 0x1e155 $E145 85 01                   ;
jsr      LE1BE                         ; 0x1e157 $E147 20 BE E1                ;
lda      $B5                           ; 0x1e15a $E14A A5 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
cmp      #$01                          ; 0x1e15c $E14C C9 01                   ;
bne      LE19D                         ; 0x1e15e $E14E D0 4D                   ;
lda      $0503                         ; 0x1e160 $E150 AD 03 05                ;; Timer for moving left or right (when entering area)
bne      LE19E                         ; 0x1e163 $E153 D0 49                   ;
lda      $C8                           ; 0x1e165 $E155 A5 C8                   ;; go outside: set $c8 to 3
ldy      $0728                         ; 0x1e167 $E157 AC 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
beq      LE16F                         ; 0x1e16a $E15A F0 13                   ;
and      #$09                          ; 0x1e16c $E15C 29 09                   ;;Keep Bits:0000_1001
beq      LE16E                         ; 0x1e16e $E15E F0 0E                   ;
lsr                                    ; 0x1e170 $E160 4A                      ;
lsr                                    ; 0x1e171 $E161 4A                      ;
lsr                                    ; 0x1e172 $E162 4A                      ;
tay                                    ; 0x1e173 $E163 A8                      ;
iny                                    ; 0x1e174 $E164 C8                      ;
cpy      $5F                           ; 0x1e175 $E165 C4 5F                   ;; Link's facing direction
bne      LE16E                         ; 0x1e177 $E167 D0 05                   ;
tya                                    ; 0x1e179 $E169 98                      ;
ora      $A7                           ; 0x1e17a $E16A 05 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
sta      $A7                           ; 0x1e17c $E16C 85 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
LE16E                                                                          ;
rts                                    ; 0x1e17e $E16E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE16F                                                                          ;
and      #$06                          ; 0x1e17f $E16F 29 06                   ;;Keep Bits:0000_0110
beq      LE19E                         ; 0x1e181 $E171 F0 2B                   ;
and      #$04                          ; 0x1e183 $E173 29 04                   ;;Keep Bits:0000_0100
beq      LE179                         ; 0x1e185 $E175 F0 02                   ;
inc      $3B                           ; 0x1e187 $E177 E6 3B                   ;;link Pagepos SideScroll		; Link's X Position (high byte)
LE179                                                                          ;
lda      #$00                          ; 0x1e189 $E179 A9 00                   ;;A = #$00 0000_0000
sta      $13                           ; 0x1e18b $E17B 85 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
sta      $0759                         ; 0x1e18d $E17D 8D 59 07                ;; if not 0, cause fairy spawn at next encounter (??)
sta      $075A                         ; 0x1e190 $E180 8D 5A 07                ;
sta      $70                           ; 0x1e193 $E183 85 70                   ;;hspeed (Link's horizontal velocity); Link's X Velocity	; Player X Delta (E8-00, 00-18)
lda      #$10                          ; 0x1e195 $E185 A9 10                   ;;A = #$10 0001_0000
LE187                                                                          ;
sta      $0736                         ; 0x1e197 $E187 8D 36 07                ;; Game Mode ; screen intro type
LE18A                                                                          ;
inc      $0726                         ; 0x1e19a $E18A EE 26 07                ;;?which is the black transition screen when loading a battle scene.  It hides the loading gfx.; Dialog Box Drawing Flag (00-01) Toggles while a dialog box is being drawn.
ldx      #$05                          ; 0x1e19d $E18D A2 05                   ; X = 05
bank7_KillAllMonsters                                                          ;
lda      $B6,x                         ; 0x1e19f $E18F B5 B6                   ;does monster exist?
beq      LE198                         ; 0x1e1a1 $E191 F0 05                   ;if no, skip past 
jsr      LDD3D                         ; 0x1e1a3 $E193 20 3D DD                ;do something  and  kill monster (set B6,x=0)
inc      $B6,x                         ; 0x1e1a6 $E196 F6 B6                   ;
LE198                                                                          ;
dex                                    ; 0x1e1a8 $E198 CA                      ;decrement x
bpl      bank7_KillAllMonsters         ; 0x1e1a9 $E199 10 F4                   ;if x > 0
ldx      $10                           ; 0x1e1ab $E19B A6 10                   ;last current monster x register?
LE19D                                                                          ;
rts                                    ; 0x1e1ad $E19D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE19E                                                                          ;
lda      $13                           ; 0x1e1ae $E19E A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
beq      LE1A8                         ; 0x1e1b0 $E1A0 F0 06                   ;
lda      $29                           ; 0x1e1b2 $E1A2 A5 29                   ; Link's Y Position
cmp      #$E4                          ; 0x1e1b4 $E1A4 C9 E4                   ;
bcs      LE1AE                         ; 0x1e1b6 $E1A6 B0 06                   ;
LE1A8                                                                          ;
lda      $19                           ; 0x1e1b8 $E1A8 A5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole); Position Code for Fairy Cursor (Selection Screen)	(and) ;draw link's sprite =yes/no
cmp      #$02                          ; 0x1e1ba $E1AA C9 02                   ;
bcc      LE19D                         ; 0x1e1bc $E1AC 90 EF                   ;
LE1AE                                                                          ;
lda      #$00                          ; 0x1e1be $E1AE A9 00                   ; A = 00
sta      $13                           ; 0x1e1c0 $E1B0 85 13                   ;fall down hole ?
inc      $0736                         ; 0x1e1c2 $E1B2 EE 36 07                ; Game Mode
jmp      LE18A                         ; 0x1e1c5 $E1B5 4C 8A E1                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE1B8                                                                          ;
sty      L0000                         ; 0x1e1c8 $E1B8 84 00                   ;
lda      #$01                          ; 0x1e1ca $E1BA A9 01                   ; A = 01
sta      $01                           ; 0x1e1cc $E1BC 85 01                   ;
LE1BE                                                                          ;
ldy      L0000                         ; 0x1e1ce $E1BE A4 00                   ;
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e1d0 $E1C0 20 E8 EA;
jsr      bank5_code3                   ; 0x1e1d3 $E1C3 20 0C 85                ; Check for False Wall	while step on?
bcc      LE1D2                         ; 0x1e1d6 $E1C6 90 0A                   ;007 CHANGE THIS AND CAN EXIST IN TILES, COLLIDE WITH SKY?
ldy      L0000                         ; 0x1e1d8 $E1C8 A4 00                   ;
lda      $A7,x                         ; 0x1e1da $E1CA B5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
ora      bank7_table21,y               ; 0x1e1dc $E1CC 19 4E E0                ;
sta      $A7,x                         ; 0x1e1df $E1CF 95 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
rts                                    ; 0x1e1e1 $E1D1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE1D2                                                                          ;
dec      L0000                         ; 0x1e1e2 $E1D2 C6 00                   ;
dec      $01                           ; 0x1e1e4 $E1D4 C6 01                   ;
bpl      LE1BE                         ; 0x1e1e6 $E1D6 10 E6                   ;
rts                                    ; 0x1e1e8 $E1D8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Links_velocities_when_breaking_blocks_or_hitting_walls        ;
.byt    $0C                            ; 0x1e1e9 $E1D9 0C                      ;24 DC 0C F4	Values multiplied by 3
.byt    $F4                            ; 0x1e1ea $E1DA F4                      ;
LE1DB                                                                          ;
.byt    $04                            ; 0x1e1eb $E1DB 04                      ;
.byt    $FC                            ; 0x1e1ec $E1DC FC                      ;
bank7_related_to_breakable_block                                               ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1e1ed $E1DD 20 C9 FF                ; Load Bank $0769
jsr      bank7_Related_to_Breakable_Blocks; 0x1e1f0 $E1E0 20 E6 E1             ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1e1f3 $E1E3 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Breakable_Blocks                                              ;
lda      $0480                         ; 0x1e1f6 $E1E6 AD 80 04                ;
cmp      #$F8                          ; 0x1e1f9 $E1E9 C9 F8                   ;
bcs      LE234                         ; 0x1e1fb $E1EB B0 47                   ;
ldy      $80                           ; 0x1e1fd $E1ED A4 80                   ; Current Animation Frame for Link
cpy      #$08                          ; 0x1e1ff $E1EF C0 08                   ; 08 = Up Stab
beq      LE1F7                         ; 0x1e201 $E1F1 F0 04                   ;
cpy      #$09                          ; 0x1e203 $E1F3 C0 09                   ; 09 = Down Stab
beq      LE1F7                         ; 0x1e205 $E1F5 F0 00                   ;
LE1F7                                                                          ;
clc                                    ; 0x1e207 $E1F7 18                      ;
adc      #$03                          ; 0x1e208 $E1F8 69 03                   ;
sta      $39                           ; 0x1e20a $E1FA 85 39                   ;
lda      $047E                         ; 0x1e20c $E1FC AD 7E 04                ;
cpy      #$08                          ; 0x1e20f $E1FF C0 08                   ;
bne      LE214                         ; 0x1e211 $E201 D0 11                   ;
dec      $39                           ; 0x1e213 $E203 C6 39                   ;
dec      $39                           ; 0x1e215 $E205 C6 39                   ;
dec      $39                           ; 0x1e217 $E207 C6 39                   ;
lda      $CC                           ; 0x1e219 $E209 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e21b $E20B 18                      ;
adc      #$0A                          ; 0x1e21c $E20C 69 0A                   ;
ldy      $5F                           ; 0x1e21e $E20E A4 5F                   ; Link's facing direction
dey                                    ; 0x1e220 $E210 88                      ;
adc      LE1DB,y                       ; 0x1e221 $E211 79 DB E1                ;
LE214                                                                          ;
clc                                    ; 0x1e224 $E214 18                      ;
adc      #$04                          ; 0x1e225 $E215 69 04                   ;
adc      $072C                         ; 0x1e227 $E217 6D 2C 07                ; Scrolling Offset Low Byte
sta      $5D                           ; 0x1e22a $E21A 85 5D                   ;
lda      $072A                         ; 0x1e22c $E21C AD 2A 07                ; Scrolling Offset High Byte
adc      #$00                          ; 0x1e22f $E21F 69 00                   ;
sta      $4B                           ; 0x1e231 $E221 85 4B                   ;
ldx      #$10                          ; 0x1e233 $E223 A2 10                   ; X = 10
ldy      #$1C                          ; 0x1e235 $E225 A0 1C                   ; Y = 1C
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1e237 $E227 20 E8 EA;sets $e $f $2 and $3	, with Y as offset: based on location of link, below his foot	;60D3	Y=B0	54B0
cmp      L851E                         ; 0x1e23a $E22A CD 1E 85                ; check for Breakable Block Tile Code
beq      LE235                         ; 0x1e23d $E22D F0 06                   ;
jsr      bank5_code3                   ; 0x1e23f $E22F 20 0C 85                ; Check for False Wall
bcs      LE26A                         ; 0x1e242 $E232 B0 36                   ;
LE234                                                                          ;
rts                                    ; 0x1e244 $E234 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE235                                                                          ;
lda      $0786                         ; 0x1e245 $E235 AD 86 07                ; Have Glove
beq      LE26A                         ; 0x1e248 $E238 F0 30                   ;
bank7_stab_brick_at_0E_with_A_and_does_draw                                    ;
lda      #$42                          ; 0x1e24a $E23A A9 42                   ; A = 42						;FUNCTION: stab brick at E with A and does draw
ldy      $02                           ; 0x1e24c $E23C A4 02                   ;
sta      (L000E),y                     ; 0x1e24e $E23E 91 0E                   ;store to side screen tile  in ram			;FUNCTION: stab brick at E with A
jsr      bank7_find_next_free_41A_X_or_something_and_write_to___associated; 0x1e250 $E240 20 92 E2;
lda      #$01                          ; 0x1e253 $E243 A9 01                   ; A = 01
sta      $041A,x                       ; 0x1e255 $E245 9D 1A 04                ;;break block by stab/stepon: ?exists/in-use
lda      #$04                          ; 0x1e258 $E248 A9 04                   ; A = 04 (04 = Sound of Block Breaking)
sta      $ED                           ; 0x1e25a $E24A 85 ED                   ; Sound Effects Type 2
lda      $39                           ; 0x1e25c $E24C A5 39                   ;
and      #$F0                          ; 0x1e25e $E24E 29 F0                   ; keep bits xxxx ....
sta      $0429,x                       ; 0x1e260 $E250 9D 29 04                ;;break block by stab/stepon: y
lda      $5D                           ; 0x1e263 $E253 A5 5D                   ;
and      #$F0                          ; 0x1e265 $E255 29 F0                   ; keep bits xxxx ....
sta      $0424,x                       ; 0x1e267 $E257 9D 24 04                ;;break block by stab/stepon: X
lda      $4B                           ; 0x1e26a $E25A A5 4B                   ;
sta      $041F,x                       ; 0x1e26c $E25C 9D 1F 04                ;;break block by stab/stepon: map page
lda      $80                           ; 0x1e26f $E25F A5 80                   ; Current Animation Frame for Link
sec                                    ; 0x1e271 $E261 38                      ;
sbc      #$08                          ; 0x1e272 $E262 E9 08                   ;
cmp      #$02                          ; 0x1e274 $E264 C9 02                   ;
bcc      LE28C                         ; 0x1e276 $E266 90 24                   ;
bcs      LE277                         ; 0x1e278 $E268 B0 0D                   ;
LE26A                                                                          ;
lda      $80                           ; 0x1e27a $E26A A5 80                   ; Current Animation Frame for Link
sec                                    ; 0x1e27c $E26C 38                      ;
sbc      #$08                          ; 0x1e27d $E26D E9 08                   ;
cmp      #$02                          ; 0x1e27f $E26F C9 02                   ;
bcc      LE28B                         ; 0x1e281 $E271 90 18                   ;
lda      #$02                          ; 0x1e283 $E273 A9 02                   ; A = 02 (sound of wall hit by sword)
sta      $EC                           ; 0x1e285 $E275 85 EC                   ; Sound Effects Type 1
LE277                                                                          ;
lda      #$18                          ; 0x1e287 $E277 A9 18                   ; A = 18
sta      $0502                         ; 0x1e289 $E279 8D 02 05                ;; Timer
ldy      #$00                          ; 0x1e28c $E27C A0 00                   ; Y = 00
lda      $047E                         ; 0x1e28e $E27E AD 7E 04                ;
cmp      $CC                           ; 0x1e291 $E281 C5 CC                   ; Link's X Position on Screen
bcc      LE286                         ; 0x1e293 $E283 90 01                   ;
iny                                    ; 0x1e295 $E285 C8                      ;
LE286                                                                          ;
lda      bank7_Related_to_Links_velocities_when_breaking_blocks_or_hitting_walls,y; 0x1e296 $E286 B9 D9 E1;
sta      $70                           ; 0x1e299 $E289 85 70                   ; Link's X Velocity
LE28B                                                                          ;
rts                                    ; 0x1e29b $E28B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE28C                                                                          ;
lda      #$00                          ; 0x1e29c $E28C A9 00                   ; A = 00
sta      $057D                         ; 0x1e29e $E28E 8D 7D 05                ; Link's Y Velocity
rts                                    ; 0x1e2a1 $E291 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_find_next_free_41A_X_or_something_and_write_to___associated              ;
ldx      #$04                          ; 0x1e2a2 $E292 A2 04                   ; X = 04
LE294                                                                          ;
lda      $041A,x                       ; 0x1e2a4 $E294 BD 1A 04                ;;break block by stab/stepon: ?exists/in-use
beq      LE29E                         ; 0x1e2a7 $E297 F0 05                   ;
dex                                    ; 0x1e2a9 $E299 CA                      ;
bpl      LE294                         ; 0x1e2aa $E29A 10 F8                   ;
ldx      #$00                          ; 0x1e2ac $E29C A2 00                   ; X = 00
LE29E                                                                          ;
ldy      $02                           ; 0x1e2ae $E29E A4 02                   ;
tya                                    ; 0x1e2b0 $E2A0 98                      ;
sta      $042E,x                       ; 0x1e2b1 $E2A1 9D 2E 04                ;
lda      L000E                         ; 0x1e2b4 $E2A4 A5 0E                   ;
sta      $0433,x                       ; 0x1e2b6 $E2A6 9D 33 04                ;;break block by stab/stepon: ?addy (low)
lda      $0F                           ; 0x1e2b9 $E2A9 A5 0F                   ;
sta      $0438,x                       ; 0x1e2bb $E2AB 9D 38 04                ;;break block by stab/stepon: ?addy (high)
LE2AE                                                                          ;
rts                                    ; 0x1e2be $E2AE 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Enemy_Damage                                                   ;
.byt    $10,$0C,$0C,$0C,$08,$04,$04,$04; 0x1e2bf $E2AF 10 0C 0C 0C 08 04 04 04 ;Damage Code 0
.byt    $20,$1C,$14,$10,$0C,$0C,$08,$08; 0x1e2c7 $E2B7 20 1C 14 10 0C 0C 08 08 ;Damage Code 1
.byt    $30,$28,$24,$20,$18,$14,$10,$0C; 0x1e2cf $E2BF 30 28 24 20 18 14 10 0C ;Damage Code 2
.byt    $60,$48,$38,$30,$28,$20,$1C,$18; 0x1e2d7 $E2C7 60 48 38 30 28 20 1C 18 ;Damage Code 3
.byt    $90,$78,$60,$48,$38,$30,$28,$20; 0x1e2df $E2CF 90 78 60 48 38 30 28 20 ;Damage Code 4
.byt    $E0,$A0,$80,$70,$60,$50,$40,$30; 0x1e2e7 $E2D7 E0 A0 80 70 60 50 40 30 ;Damage Code 5
.byt    $E0,$C0,$A0,$90,$80,$70,$60,$50; 0x1e2ef $E2DF E0 C0 A0 90 80 70 60 50 ;Damage Code 6
                                                                               ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1e2f7 $E2E7 FF FF FF FF FF FF FF FF ;Damage Code 7
; ---------------------------------------------------------------------------- ;
bank7_Link_Hit_Routine                                                         ;
ldy      $A1,x                         ; 0x1e2ff $E2EF B4 A1                   ; Enemy Code
lda      $0518                         ; 0x1e301 $E2F1 AD 18 05                ; Timer for Link immunity (0 = vulnerable)
bne      LE308                         ; 0x1e304 $E2F4 D0 12                   ; if Link Invulnerable, skip to $1E308
lda      $6DD5,y                       ; 0x1e306 $E2F6 B9 D5 6D                ; load Enemy Bits; load Enemy Bits (from RAM)
and      #$10                          ; 0x1e309 $E2F9 29 10                   ; keep bits ...x .... (Steal Points bit); keep bits .... xxxx (Experience bits)
beq      LE305                         ; 0x1e30b $E2FB F0 08                   ; if 0, skip to $1E305
lda      #$0A                          ; 0x1e30d $E2FD A9 0A                   ; A = 0A (lose 10 exp. when hit)
cpy      #$06                          ; 0x1e30f $E2FF C0 06                   ; if Enemy Code NOT 6 (Moa); restore Y to its original value
bne      LE305                         ; 0x1e311 $E301 D0 02                   ; skip
lda      #$14                          ; 0x1e313 $E303 A9 14                   ; else A = 14 (lose 20 exp. when hit)
LE305                                                                          ;
sta      $05E8                         ; 0x1e315 $E305 8D E8 05                ; amount of exp. to lose
LE308                                                                          ;
lda      $6DF9,y                       ; 0x1e318 $E308 B9 F9 6D                ; Enemy Vulnerability/Damage Code
and      #$0F                          ; 0x1e31b $E30B 29 0F                   ; keep bits .... xxxx
LE30D                                                                          ;
sta      $0C                           ; 0x1e31d $E30D 85 0C                   ;
lda      $0518                         ; 0x1e31f $E30F AD 18 05                ; Timer for Link being immune from attacks
bne      LE368                         ; 0x1e322 $E312 D0 54                   ; if Invulnerable (Not 0), skip to $1E368
lda      #$01                          ; 0x1e324 $E314 A9 01                   ; A = 01					;link hurt sound
sta      $E9                           ; 0x1e326 $E316 85 E9                   ;
sta      L0000                         ; 0x1e328 $E318 85 00                   ;
jsr      bank7_Set_Links_Recoil        ; 0x1e32a $E31A 20 99 E3                ; set Link's recoil
lda      $0C                           ; 0x1e32d $E31D A5 0C                   ; Code for amount of Life to lose (0-7)
asl                                    ; 0x1e32f $E31F 0A                      ;
asl                                    ; 0x1e330 $E320 0A                      ;
asl                                    ; 0x1e331 $E321 0A                      ;
adc      $0779                         ; 0x1e332 $E322 6D 79 07                ; Add Life Power (1-8)
tay                                    ; 0x1e335 $E325 A8                      ;
lda      LE2AE,y                       ; 0x1e336 $E326 B9 AE E2                ; refer to table at 1E2AF (Enemy Damage)
ldy      $070F                         ; 0x1e339 $E329 AC 0F 07                ; Color of Link after Shield Spell
beq      LE32F                         ; 0x1e33c $E32C F0 01                   ;
lsr                                    ; 0x1e33e $E32E 4A                      ; Divide by 2 (if Shield is cast)
LE32F                                                                          ;
sta      $0C                           ; 0x1e33f $E32F 85 0C                   ;
lda      $0774                         ; 0x1e341 $E331 AD 74 07                ; Current Life left in meter
sec                                    ; 0x1e344 $E334 38                      ;
sbc      $0C                           ; 0x1e345 $E335 E5 0C                   ;
sta      $0774                         ; 0x1e347 $E337 8D 74 07                ;; Hit Points; Current Life left in meter
lda      $074F                         ; 0x1e34a $E33A AD 4F 07                ;; Related to Pause Pane
ora      #$40                          ; 0x1e34d $E33D 09 40                   ; set bits  .x.. ....
sta      $074F                         ; 0x1e34f $E33F 8D 4F 07                ;; Related to Pause Pane
bcs      LE34C                         ; 0x1e352 $E342 B0 08                   ;
lda      #$00                          ; 0x1e354 $E344 A9 00                   ; A = 00
sta      $0774                         ; 0x1e356 $E346 8D 74 07                ; Current Life left in meter
inc      $0494                         ; 0x1e359 $E349 EE 94 04                ;kill link
LE34C                                                                          ;
lda      #$20                          ; 0x1e35c $E34C A9 20                   ; A = 20
sta      $050C                         ; 0x1e35e $E34E 8D 0C 05                ; Timer for Link being in injured state
lda      #$04                          ; 0x1e361 $E351 A9 04                   ; A = 04
sta      $0518                         ; 0x1e363 $E353 8D 18 05                ; Timer for Link being immune (0 = vulnerable)
lda      #$00                          ; 0x1e366 $E356 A9 00                   ; A = 00
sta      $0400                         ; 0x1e368 $E358 8D 00 04                ; Sword slash frame code
lda      $A7                           ; 0x1e36b $E35B A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$FB                          ; 0x1e36d $E35D 29 FB                   ; keep bits xxxx x.xx
sta      $A7                           ; 0x1e36f $E35F 85 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$FE                          ; 0x1e371 $E361 A9 FE                   ; A = FE
sta      $057D                         ; 0x1e373 $E363 8D 7D 05                ; Link's Y Velocity when hit
sec                                    ; 0x1e376 $E366 38                      ;
rts                                    ; 0x1e377 $E367 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE368                                                                          ;
clc                                    ; 0x1e378 $E368 18                      ;
LE369                                                                          ;
rts                                    ; 0x1e379 $E369 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_various_recoil_variables                                       ;
;0C = recoil when hit by Flying Blade - Facing left                            ;
;F4 = recoil when hit by Flying Blade - Facing right                           ;
;0C =                                                                          ;
;04 = recoil when Link is hit on shield, when Link hits - Facing left          ;
;FC = recoil when Link is hit on shield, when Link hits - Facing right         ;
;                                                                              ;
;Doesn't apply to all enemies                                                  ;
;Mostly ground enemies with weapons, but also Moa                              ;
;                                                                              ;
;0D = X Velocity when Link is hit - Facing left                                ;
;F3 = X Velocity when Link is hit - Facing right                               ;
;                                                                              ;
;This applies to being hit by the enemy itself, but not its weapon             ;
.byt    $0C,$F4                        ; 0x1e37a $E36A 0C F4                   ;
LE36C                                                                          ;
.byt    $0C,$04,$FC,$0D,$F3            ; 0x1e37c $E36C 0C 04 FC 0D F3          ;
; ---------------------------------------------------------------------------- ;
bank7_code37                                                                   ;
lda      #$00                          ; 0x1e381 $E371 A9 00                   ; A = 00
sta      L0000                         ; 0x1e383 $E373 85 00                   ;
lda      $0B                           ; 0x1e385 $E375 A5 0B                   ;
bne      LE381                         ; 0x1e387 $E377 D0 08                   ;
lda      #$18                          ; 0x1e389 $E379 A9 18                   ; A = 18
sta      $0502                         ; 0x1e38b $E37B 8D 02 05                ;; Timer
jsr      bank7_Set_Links_Recoil        ; 0x1e38e $E37E 20 99 E3                ;
LE381                                                                          ;
lda      $60,x                         ; 0x1e391 $E381 B5 60                   ;; Enemy facing direction
pha                                    ; 0x1e393 $E383 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e394 $E384 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1e397 $E387 68                      ;
sta      $60,x                         ; 0x1e398 $E388 95 60                   ;; Enemy facing direction
iny                                    ; 0x1e39a $E38A C8                      ;
iny                                    ; 0x1e39b $E38B C8                      ;
LE38C                                                                          ;
lda      LE369,y                       ; 0x1e39c $E38C B9 69 E3                ;
ldy      $040E,x                       ; 0x1e39f $E38F BC 0E 04                ; Enemy Hit State (0 = not in Hit State)
beq      LE395                         ; 0x1e3a2 $E392 F0 01                   ;
asl                                    ; 0x1e3a4 $E394 0A                      ;
LE395                                                                          ;
sta      $043E,x                       ; 0x1e3a5 $E395 9D 3E 04                ;
rts                                    ; 0x1e3a8 $E398 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Set_Links_Recoil                                                         ;
lda      $A7                           ; 0x1e3a9 $E399 A5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$03                          ; 0x1e3ab $E39B 29 03                   ; keep bits .... ..xx
sta      $0D                           ; 0x1e3ad $E39D 85 0D                   ;
lda      $60,x                         ; 0x1e3af $E39F B5 60                   ; Enemy facing direction
pha                                    ; 0x1e3b1 $E3A1 48                      ;
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e3b2 $E3A2 20 91 DC; Determine Enemy Facing Direction
pla                                    ; 0x1e3b5 $E3A5 68                      ;
sta      $60,x                         ; 0x1e3b6 $E3A6 95 60                   ; Enemy facing direction
iny                                    ; 0x1e3b8 $E3A8 C8                      ;
cpy      $0D                           ; 0x1e3b9 $E3A9 C4 0D                   ;
beq      LE3B8                         ; 0x1e3bb $E3AB F0 0B                   ;
lda      L0000                         ; 0x1e3bd $E3AD A5 00                   ;
beq      LE3B3                         ; 0x1e3bf $E3AF F0 02                   ;
LE3B1                                                                          ;
iny                                    ; 0x1e3c1 $E3B1 C8                      ;
iny                                    ; 0x1e3c2 $E3B2 C8                      ;
LE3B3                                                                          ;
lda      LE36C,y                       ; 0x1e3c3 $E3B3 B9 6C E3                ;
sta      $70                           ; 0x1e3c6 $E3B6 85 70                   ; Link's X Velocity
LE3B8                                                                          ;
rts                                    ; 0x1e3c8 $E3B8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE3B9                                                                          ;
lda      $12                           ; 0x1e3c9 $E3B9 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1e3cb $E3BB 4A                      ;
txa                                    ; 0x1e3cc $E3BC 8A                      ;
and      #$01                          ; 0x1e3cd $E3BD 29 01                   ; keep bits .... ...x
bne      LE3C7                         ; 0x1e3cf $E3BF D0 06                   ;
php                                    ; 0x1e3d1 $E3C1 08                      ;
pla                                    ; 0x1e3d2 $E3C2 68                      ;
eor      #$01                          ; 0x1e3d3 $E3C3 49 01                   ; flip bits .... ...x
pha                                    ; 0x1e3d5 $E3C5 48                      ;
plp                                    ; 0x1e3d6 $E3C6 28                      ;
LE3C7                                                                          ;
bcs      LE3B8                         ; 0x1e3d7 $E3C7 B0 EF                   ;
jsr      LE469                         ; 0x1e3d9 $E3C9 20 69 E4                ;
ldy      $87,x                         ; 0x1e3dc $E3CC B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e3de $E3CE B9 17 6D                ;
and      #$C0                          ; 0x1e3e1 $E3D1 29 C0                   ; keep bits xx.. ....
cmp      #$80                          ; 0x1e3e3 $E3D3 C9 80                   ;
bne      LE3DD                         ; 0x1e3e5 $E3D5 D0 06                   ;
ldy      $0710                         ; 0x1e3e7 $E3D7 AC 10 07                ; Reflect Spell effect (01 = activated)
beq      LE442                         ; 0x1e3ea $E3DA F0 66                   ;
asl                                    ; 0x1e3ec $E3DC 0A                      ;
LE3DD                                                                          ;
sta      $D9                           ; 0x1e3ed $E3DD 85 D9                   ;; Thunder Spell modifier ?
ldy      #$02                          ; 0x1e3ef $E3DF A0 02                   ; Y = 02
lda      $77,x                         ; 0x1e3f1 $E3E1 B5 77                   ; Projectile X Velocity
beq      LE3ED                         ; 0x1e3f3 $E3E3 F0 08                   ;
bmi      LE3E8                         ; 0x1e3f5 $E3E5 30 01                   ;
dey                                    ; 0x1e3f7 $E3E7 88                      ;
LE3E8                                                                          ;
tya                                    ; 0x1e3f8 $E3E8 98                      ;
cmp      $66,x                         ; 0x1e3f9 $E3E9 D5 66                   ; Projectile facing direction
bne      LE441                         ; 0x1e3fb $E3EB D0 54                   ;
LE3ED                                                                          ;
lda      $13                           ; 0x1e3fd $E3ED A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      LE442                         ; 0x1e3ff $E3EF D0 51                   ;
jsr      bank7_code45                  ; 0x1e401 $E3F1 20 D8 E9                ;
jsr      bank7_idem__maybe             ; 0x1e404 $E3F4 20 F9 E9                ;
bcc      LE442                         ; 0x1e407 $E3F7 90 49                   ;
lda      $D9                           ; 0x1e409 $E3F9 A5 D9                   ;; Thunder Spell modifier ?
beq      LE413                         ; 0x1e40b $E3FB F0 16                   ;
cmp      #$40                          ; 0x1e40d $E3FD C9 40                   ;
beq      bank7_code38                  ; 0x1e40f $E3FF F0 30                   ;
lda      $0710                         ; 0x1e411 $E401 AD 10 07                ; Reflect Spell effect (01 = activated)
beq      LE413                         ; 0x1e414 $E404 F0 0D                   ;
lda      #$00                          ; 0x1e416 $E406 A9 00                   ; A = 00
sta      $044C,x                       ; 0x1e418 $E408 9D 4C 04                ;
jsr      bank7_code38                  ; 0x1e41b $E40B 20 31 E4                ;
asl      $77,x                         ; 0x1e41e $E40E 16 77                   ; Projectile X Velocity
asl      $77,x                         ; 0x1e420 $E410 16 77                   ; Projectile X Velocity
rts                                    ; 0x1e422 $E412 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE413                                                                          ;
ldy      $87,x                         ; 0x1e423 $E413 B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e425 $E415 B9 17 6D                ;
ldy      #$10                          ; 0x1e428 $E418 A0 10                   ; Y = 10 (sound for absorbed projectile)
and      #$10                          ; 0x1e42a $E41A 29 10                   ; keep bits ...x ....
beq      LE424                         ; 0x1e42c $E41C F0 06                   ;
lda      #$02                          ; 0x1e42e $E41E A9 02                   ; A = 02
sta      $EC                           ; 0x1e430 $E420 85 EC                   ; Sound Effects Type 1
ldy      #$00                          ; 0x1e432 $E422 A0 00                   ; Y = 00
LE424                                                                          ;
sty      $EE                           ; 0x1e434 $E424 84 EE                   ; Sound Effects Type 3
dec      $30,x                         ; 0x1e436 $E426 D6 30                   ;; Projectile Y Position
dec      $30,x                         ; 0x1e438 $E428 D6 30                   ;; Projectile Y Position
lda      #$F2                          ; 0x1e43a $E42A A9 F2                   ; A = F2
sta      $87,x                         ; 0x1e43c $E42C 95 87                   ;; Projectile Type
LE42E                                                                          ;
rts                                    ; 0x1e43e $E42E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table23                                                                  ;
.byt    $F8,$08                        ; 0x1e43f $E42F F8 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_code38                                                                   ;
lda      #$10                          ; 0x1e441 $E431 A9 10                   ; A = 10
sta      $EE                           ; 0x1e443 $E433 85 EE                   ; Sound Effects Type 3
ldy      $66,x                         ; 0x1e445 $E435 B4 66                   ; Projectile facing direction
lda      LE42E,y                       ; 0x1e447 $E437 B9 2E E4                ;
sta      $77,x                         ; 0x1e44a $E43A 95 77                   ; Projectile X Velocity
lda      #$F8                          ; 0x1e44c $E43C A9 F8                   ; A = F8 (Y Velocity after shield hit)
sta      $0584,x                       ; 0x1e44e $E43E 9D 84 05                ; Projectile Y Velocity
LE441                                                                          ;
rts                                    ; 0x1e451 $E441 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE442                                                                          ;
jsr      bank7_code43                  ; 0x1e452 $E442 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e455 $E445 20 F9 E9                ;
bcc      LE441                         ; 0x1e458 $E448 90 F7                   ;
ldy      $87,x                         ; 0x1e45a $E44A B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e45c $E44C B9 17 6D                ;
and      #$20                          ; 0x1e45f $E44F 29 20                   ; keep bits ..x. ....
bne      LE457                         ; 0x1e461 $E451 D0 04                   ;
lda      #$00                          ; 0x1e463 $E453 A9 00                   ; A = 00
sta      $87,x                         ; 0x1e465 $E455 95 87                   ;; Projectile Type
LE457                                                                          ;
lda      $0518                         ; 0x1e467 $E457 AD 18 05                ;; Invulnerable Timeout (01-02 - Blinking, 03+ - Not Blinking); Timer for Link being immune from attacks
bne      LE441                         ; 0x1e46a $E45A D0 E5                   ;
lda      $6D17,y                       ; 0x1e46c $E45C B9 17 6D                ;
and      #$07                          ; 0x1e46f $E45F 29 07                   ; keep bits .... .xxx
jsr      LE30D                         ; 0x1e471 $E461 20 0D E3                ;
ldy      $66,x                         ; 0x1e474 $E464 B4 66                   ;; Projectile facing direction
jmp      LE3B1                         ; 0x1e476 $E466 4C B1 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE469                                                                          ;
ldy      $87,x                         ; 0x1e479 $E469 B4 87                   ; Projectile Type
lda      $6D17,y                       ; 0x1e47b $E46B B9 17 6D                ;
ldy      #$03                          ; 0x1e47e $E46E A0 03                   ; Y = 03
and      #$08                          ; 0x1e480 $E470 29 08                   ; keep bits .... x...
beq      LE476                         ; 0x1e482 $E472 F0 02                   ;
ldy      #$0A                          ; 0x1e484 $E474 A0 0A                   ; Y = 0A
LE476                                                                          ;
sty      $06                           ; 0x1e486 $E476 84 06                   ;
lda      $30,x                         ; 0x1e488 $E478 B5 30                   ;; Projectile Y Position
clc                                    ; 0x1e48a $E47A 18                      ;
adc      #$07                          ; 0x1e48b $E47B 69 07                   ;
sta      $05                           ; 0x1e48d $E47D 85 05                   ;
lda      #$02                          ; 0x1e48f $E47F A9 02                   ; A = 02
sta      $07                           ; 0x1e491 $E481 85 07                   ;
lda      $CE                           ; 0x1e493 $E483 A5 CE                   ;
clc                                    ; 0x1e495 $E485 18                      ;
adc      #$03                          ; 0x1e496 $E486 69 03                   ;
sta      $04                           ; 0x1e498 $E488 85 04                   ;
LE48A                                                                          ;
rts                                    ; 0x1e49a $E48A 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE48B                                                                          ;
lda      $B6,x                         ; 0x1e49b $E48B B5 B6                   ; Generated Enemy Slot
cmp      #$01                          ; 0x1e49d $E48D C9 01                   ;
bne      LE4BB                         ; 0x1e49f $E48F D0 2A                   ;
lda      $040E,x                       ; 0x1e4a1 $E491 BD 0E 04                ; Enemy Hit State (0 = not in Hit State)
bne      LE4BB                         ; 0x1e4a4 $E494 D0 25                   ;
ldy      #$01                          ; 0x1e4a6 $E496 A0 01                   ; Y = 01
LE498                                                                          ;
sty      $11                           ; 0x1e4a8 $E498 84 11                   ;
lda      $8D,y                         ; 0x1e4aa $E49A B9 8D 00                ; Flying Blade/Flame slot
beq      LE4B8                         ; 0x1e4ad $E49D F0 19                   ;
bmi      LE4B8                         ; 0x1e4af $E49F 30 17                   ;
jsr      LE4BC                         ; 0x1e4b1 $E4A1 20 BC E4                ;
lda      #$01                          ; 0x1e4b4 $E4A4 A9 01                   ; A = 01
sta      $0B                           ; 0x1e4b6 $E4A6 85 0B                   ;
jsr      LE694                         ; 0x1e4b8 $E4A8 20 94 E6                ;
ldy      $11                           ; 0x1e4bb $E4AB A4 11                   ;
bcc      LE4B8                         ; 0x1e4bd $E4AD 90 09                   ;
lda      $6D,y                         ; 0x1e4bf $E4AF B9 6D 00                ;
tay                                    ; 0x1e4c2 $E4B2 A8                      ;
jmp      LE38C                         ; 0x1e4c3 $E4B3 4C 8C E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ldy      $11                           ; 0x1e4c6 $E4B6 A4 11                   ;
LE4B8                                                                          ;
dey                                    ; 0x1e4c8 $E4B8 88                      ;
bpl      LE498                         ; 0x1e4c9 $E4B9 10 DD                   ;
LE4BB                                                                          ;
rts                                    ; 0x1e4cb $E4BB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE4BC                                                                          ;
lda      $5A,y                         ; 0x1e4cc $E4BC B9 5A 00                ; Flying Blade/Flame X Position (low byte)
sec                                    ; 0x1e4cf $E4BF 38                      ;
sbc      $072C                         ; 0x1e4d0 $E4C0 ED 2C 07                ; Scrolling Offset Low Byte
clc                                    ; 0x1e4d3 $E4C3 18                      ;
adc      #$02                          ; 0x1e4d4 $E4C4 69 02                   ;
sta      L0000                         ; 0x1e4d6 $E4C6 85 00                   ;
lda      #$04                          ; 0x1e4d8 $E4C8 A9 04                   ; A = 04
sta      $02                           ; 0x1e4da $E4CA 85 02                   ;
lda      $36,y                         ; 0x1e4dc $E4CC B9 36 00                ; Flying Blade/Flame Y Position
clc                                    ; 0x1e4df $E4CF 18                      ;
adc      #$04                          ; 0x1e4e0 $E4D0 69 04                   ;
sta      $01                           ; 0x1e4e2 $E4D2 85 01                   ;
lda      #$06                          ; 0x1e4e4 $E4D4 A9 06                   ; A = 06
sta      $03                           ; 0x1e4e6 $E4D6 85 03                   ;
rts                                    ; 0x1e4e8 $E4D8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE4D9                                                                          ;
lda      $A1,x                         ; 0x1e4e9 $E4D9 B5 A1                   ; Enemy Code
cmp      #$13                          ; 0x1e4eb $E4DB C9 13                   ; 13 = Elevator
beq      LE4F7                         ; 0x1e4ed $E4DD F0 18                   ;
ldy      $0707                         ; 0x1e4ef $E4DF AC 07 07                ; Current World
dey                                    ; 0x1e4f2 $E4E2 88                      ;
cpy      #$02                          ; 0x1e4f3 $E4E3 C0 02                   ;
bcc      LE4F7                         ; 0x1e4f5 $E4E5 90 10                   ;
lda      $12                           ; 0x1e4f7 $E4E7 A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1e4f9 $E4E9 4A                      ;
txa                                    ; 0x1e4fa $E4EA 8A                      ;
and      #$01                          ; 0x1e4fb $E4EB 29 01                   ; keep bits .... ...x
bne      LE4F5                         ; 0x1e4fd $E4ED D0 06                   ;
php                                    ; 0x1e4ff $E4EF 08                      ;
pla                                    ; 0x1e500 $E4F0 68                      ;
eor      #$01                          ; 0x1e501 $E4F1 49 01                   ; flip bits .... ...x
pha                                    ; 0x1e503 $E4F3 48                      ;
plp                                    ; 0x1e504 $E4F4 28                      ;
LE4F5                                                                          ;
bcs      LE54F                         ; 0x1e505 $E4F5 B0 58                   ;
LE4F7                                                                          ;
lda      $B6,x                         ; 0x1e507 $E4F7 B5 B6                   ; Generated Enemy Slot
cmp      #$01                          ; 0x1e509 $E4F9 C9 01                   ;
bne      LE54F                         ; 0x1e50b $E4FB D0 52                   ;
lda      $040E,x                       ; 0x1e50d $E4FD BD 0E 04                ; Enemy Hit State (0 = not in Hit State)
bne      LE54F                         ; 0x1e510 $E500 D0 4D                   ;
lda      $C8                           ; 0x1e512 $E502 A5 C8                   ;; go outside: set $c8 to 3
and      #$06                          ; 0x1e514 $E504 29 06                   ; keep bits .... .xx.
asl                                    ; 0x1e516 $E506 0A                      ;
ora      $C9                           ; 0x1e517 $E507 05 C9                   ;
and      #$FC                          ; 0x1e519 $E509 29 FC                   ; keep bits xxxx xx..
bne      LE54F                         ; 0x1e51b $E50B D0 42                   ;
jsr      LE942                         ; 0x1e51d $E50D 20 42 E9                ;
jsr      bank7_code43                  ; 0x1e520 $E510 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e523 $E513 20 F9 E9                ;
bcc      LE54F                         ; 0x1e526 $E516 90 37                   ;
lda      $A8,x                         ; 0x1e528 $E518 B5 A8                   ; Enemy State ?
ora      #$10                          ; 0x1e52a $E51A 09 10                   ; set  bits ...x ....
sta      $A8,x                         ; 0x1e52c $E51C 95 A8                   ;; Enemy State
lda      $A1,x                         ; 0x1e52e $E51E B5 A1                   ; Enemy Code
cmp      #$01                          ; 0x1e530 $E520 C9 01                   ; 01 = Red Jar
bne      LE555                         ; 0x1e532 $E522 D0 31                   ;
lda      $AF,x                         ; 0x1e534 $E524 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e536 $E526 29 7F                   ; keep bits .xxx xxxx
cmp      #$08                          ; 0x1e538 $E528 C9 08                   ;
bcc      LE538                         ; 0x1e53a $E52A 90 0C                   ;
cmp      #$0E                          ; 0x1e53c $E52C C9 0E                   ;
bcc      LE555                         ; 0x1e53e $E52E 90 25                   ;
cmp      #$10                          ; 0x1e540 $E530 C9 10                   ;
beq      LE555                         ; 0x1e542 $E532 F0 21                   ;
cmp      #$11                          ; 0x1e544 $E534 C9 11                   ;
beq      LE555                         ; 0x1e546 $E536 F0 1D                   ;
LE538                                                                          ;
jsr      bank7_get_item                ; 0x1e548 $E538 20 71 E7                ;
lda      #$70                          ; 0x1e54b $E53B A9 70                   ; A = 70
sta      $049C                         ; 0x1e54d $E53D 8D 9C 04                ;;hold item above head: timer
lda      #$00                          ; 0x1e550 $E540 A9 00                   ; A = 00
sta      $057D                         ; 0x1e552 $E542 8D 7D 05                ; Link's Y Velocity
sta      $70                           ; 0x1e555 $E545 85 70                   ; Link's X Velocity
lda      $AF,x                         ; 0x1e557 $E547 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e559 $E549 29 7F                   ; keep bits .xxx xxxx
sta      $049D                         ; 0x1e55b $E54B 8D 9D 04                ; Related to Palace Item
rts                                    ; 0x1e55e $E54E 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE54F                                                                          ;
lda      $A8,x                         ; 0x1e55f $E54F B5 A8                   ; Enemy State ?
and      #$EF                          ; 0x1e561 $E551 29 EF                   ; keep bits xxx. xxxx
sta      $A8,x                         ; 0x1e563 $E553 95 A8                   ;; Enemy State
LE555                                                                          ;
rts                                    ; 0x1e565 $E555 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_X_Velocity_when_Link_is_hit_                                   ;
.byt    $18,$E8                        ; 0x1e566 $E556 18 E8                   ;
; ---------------------------------------------------------------------------- ;
bank7_code39                                                                   ;
lda      $0710                         ; 0x1e568 $E558 AD 10 07                ; Reflect Spell effect
bne      LE563                         ; 0x1e56b $E55B D0 06                   ;
lda      $A1,x                         ; 0x1e56d $E55D B5 A1                   ; Enemy Code
cmp      #$17                          ; 0x1e56f $E55F C9 17                   ; 17 = Orange Daira
bcs      LE579                         ; 0x1e571 $E561 B0 16                   ;
LE563                                                                          ;
jsr      bank7_check_if_shield_protects_from_sword_hit; 0x1e573 $E563 20 F3 E5 ; check if shield protects from sword hit
jsr      bank7_code45                  ; 0x1e576 $E566 20 D8 E9                ; idem ?
jsr      bank7_idem__maybe             ; 0x1e579 $E569 20 F9 E9                ; idem ?
bcc      LE579                         ; 0x1e57c $E56C 90 0B                   ; if Carry set, shield protects
lda      #$02                          ; 0x1e57e $E56E A9 02                   ; A = 02 (sound of enemy sword hit shield)
sta      $EC                           ; 0x1e580 $E570 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$00                          ; 0x1e582 $E572 A9 00                   ; A = 00
sta      $0B                           ; 0x1e584 $E574 85 0B                   ;
jmp      bank7_code37                  ; 0x1e586 $E576 4C 71 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE579                                                                          ;
jsr      bank7_check_if_shield_protects_from_sword_hit; 0x1e589 $E579 20 F3 E5 ;
jsr      bank7_code43                  ; 0x1e58c $E57C 20 75 E9                ;
jsr      bank7_idem__maybe             ; 0x1e58f $E57F 20 F9 E9                ;
bcc      LE5F2                         ; 0x1e592 $E582 90 6E                   ; if Carry set, Link is hit (sword or spike)
jsr      bank7_Link_Hit_Routine        ; 0x1e594 $E584 20 EF E2                ; Link Hit Routine
bcc      LE59B                         ; 0x1e597 $E587 90 12                   ;
lda      $0444,x                       ; 0x1e599 $E589 BD 44 04                ;; Enemy Vulnerability, for example: horsehead and helmethead have =2, which prevents hit-with-sword in body and feet, but not head
cmp      #$02                          ; 0x1e59c $E58C C9 02                   ;
bcc      LE59B                         ; 0x1e59e $E58E 90 0B                   ;
asl      $057D                         ; 0x1e5a0 $E590 0E 7D 05                ; Link's Y Velocity * 2 (hit by strong boss)
jsr      bank7_Determine_Enemy_Facing_Direction_relative_to_Link; 0x1e5a3 $E593 20 91 DC; Determine Enemy Facing Direction
lda      bank7_Table_for_X_Velocity_when_Link_is_hit_,y; 0x1e5a6 $E596 B9 56 E5;
sta      $70                           ; 0x1e5a9 $E599 85 70                   ; Link's X Velocity
LE59B                                                                          ;
rts                                    ; 0x1e5ab $E59B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Related_to_Ironknuckle_Shield_protection                                 ;
.byt    $12,$00,$05,$10,$05,$02,$02    ; 0x1e5ac $E59C 12 00 05 10 05 02 02    ;
LE5A3                                                                          ;
.byt    $08,$0D,$20,$10,$20,$0D,$10    ; 0x1e5b3 $E5A3 08 0D 20 10 20 0D 10    ;
LE5AA                                                                          ;
.byt    $00,$00,$00,$FC,$00,$FF,$02    ; 0x1e5ba $E5AA 00 00 00 FC 00 FF 02    ;
LE5B1                                                                          ;
.byt    $02                            ; 0x1e5c1 $E5B1 02                      ;
LE5B2                                                                          ;
.byt    $02,$10,$18,$0F,$12            ; 0x1e5c2 $E5B2 02 10 18 0F 12          ;
LE5B7                                                                          ;
.byt    $14,$F0,$00                    ; 0x1e5c7 $E5B7 14 F0 00                ;
; ---------------------------------------------------------------------------- ;
bank7_code40                                                                   ;
lda      $2A,x                         ; 0x1e5ca $E5BA B5 2A                   ; Enemy Y Position
ldy      $0444,x                       ; 0x1e5cc $E5BC BC 44 04                ; Enemy Vulnerability
clc                                    ; 0x1e5cf $E5BF 18                      ;
adc      bank7_Related_to_Ironknuckle_Shield_protection,y; 0x1e5d0 $E5C0 79 9C E5;
sta      $05                           ; 0x1e5d3 $E5C3 85 05                   ;
lda      LE5A3,y                       ; 0x1e5d5 $E5C5 B9 A3 E5                ;
sta      $07                           ; 0x1e5d8 $E5C8 85 07                   ;
lda      $CD                           ; 0x1e5da $E5CA A5 CD                   ;
adc      LE5AA,y                       ; 0x1e5dc $E5CC 79 AA E5                ;
sta      $04                           ; 0x1e5df $E5CF 85 04                   ;
lda      LE5B1,y                       ; 0x1e5e1 $E5D1 B9 B1 E5                ;
sta      $06                           ; 0x1e5e4 $E5D4 85 06                   ;
cpy      #$02                          ; 0x1e5e6 $E5D6 C0 02                   ;
bcs      LE5E5                         ; 0x1e5e8 $E5D8 B0 0B                   ;
lda      $60,x                         ; 0x1e5ea $E5DA B5 60                   ;; Enemy facing direction
lsr                                    ; 0x1e5ec $E5DC 4A                      ;
bcc      LE5E5                         ; 0x1e5ed $E5DD 90 06                   ;
lda      $04                           ; 0x1e5ef $E5DF A5 04                   ;
adc      #$0D                          ; 0x1e5f1 $E5E1 69 0D                   ;
sta      $04                           ; 0x1e5f3 $E5E3 85 04                   ;
LE5E5                                                                          ;
cpy      #$04                          ; 0x1e5f5 $E5E5 C0 04                   ;
bne      LE5F2                         ; 0x1e5f7 $E5E7 D0 09                   ;
ldy      $60,x                         ; 0x1e5f9 $E5E9 B4 60                   ;; Enemy facing direction
lda      $04                           ; 0x1e5fb $E5EB A5 04                   ;
adc      LE5B7,y                       ; 0x1e5fd $E5ED 79 B7 E5                ;
sta      $04                           ; 0x1e600 $E5F0 85 04                   ;
LE5F2                                                                          ;
rts                                    ; 0x1e602 $E5F2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_check_if_shield_protects_from_sword_hit                                  ;
ldy      $91,x                         ; 0x1e603 $E5F3 B4 91                   ;
lda      $0210,y                       ; 0x1e605 $E5F5 B9 10 02                ;
clc                                    ; 0x1e608 $E5F8 18                      ;
adc      #$09                          ; 0x1e609 $E5F9 69 09                   ;
sta      $05                           ; 0x1e60b $E5FB 85 05                   ;
lda      #$01                          ; 0x1e60d $E5FD A9 01                   ; A = 01
sta      $07                           ; 0x1e60f $E5FF 85 07                   ;
lda      $0213,y                       ; 0x1e611 $E601 B9 13 02                ;
sta      $04                           ; 0x1e614 $E604 85 04                   ;
lda      #$0E                          ; 0x1e616 $E606 A9 0E                   ; A = 0E
sta      $06                           ; 0x1e618 $E608 85 06                   ;
lda      $04                           ; 0x1e61a $E60A A5 04                   ;
adc      $06                           ; 0x1e61c $E60C 65 06                   ;
bcc      LE616                         ; 0x1e61e $E60E 90 06                   ;
lda      $04                           ; 0x1e620 $E610 A5 04                   ;
eor      #$FF                          ; 0x1e622 $E612 49 FF                   ; flip all bits
sta      $06                           ; 0x1e624 $E614 85 06                   ;
LE616                                                                          ;
rts                                    ; 0x1e626 $E616 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE617                                                                          ;
lda      $C8                           ; 0x1e627 $E617 A5 C8                   ;; go outside: set $c8 to 3
asl                                    ; 0x1e629 $E619 0A                      ;
and      #$0C                          ; 0x1e62a $E61A 29 0C                   ; keep bits .... xx..
ora      $C9                           ; 0x1e62c $E61C 05 C9                   ;
and      #$FC                          ; 0x1e62e $E61E 29 FC                   ; keep bits xxxx xx..
bne      LE616                         ; 0x1e630 $E620 D0 F4                   ;
lda      $2A,x                         ; 0x1e632 $E622 B5 2A                   ; Enemy Y Position
adc      #$10                          ; 0x1e634 $E624 69 10                   ;
cmp      #$30                          ; 0x1e636 $E626 C9 30                   ;
bcc      LE616                         ; 0x1e638 $E628 90 EC                   ;
jsr      bank7_code40                  ; 0x1e63a $E62A 20 BA E5                ;
ldy      #$01                          ; 0x1e63d $E62D A0 01                   ; Y = 01
LE62F                                                                          ;
sty      $11                           ; 0x1e63f $E62F 84 11                   ;
lda      $8D,y                         ; 0x1e641 $E631 B9 8D 00                ; Flying Blade/Flame slot
beq      LE649                         ; 0x1e644 $E634 F0 13                   ;
bmi      LE649                         ; 0x1e646 $E636 30 11                   ;
jsr      LE4BC                         ; 0x1e648 $E638 20 BC E4                ;
jsr      bank7_idem__maybe             ; 0x1e64b $E63B 20 F9 E9                ;
ldy      $11                           ; 0x1e64e $E63E A4 11                   ;
bcc      LE649                         ; 0x1e650 $E640 90 07                   ;
lda      #$02                          ; 0x1e652 $E642 A9 02                   ; 02 = sound of enemy sword hit shield
sta      $EC                           ; 0x1e654 $E644 85 EC                   ;      or Flying Blade/Flame hit shield
jsr      LE6E8                         ; 0x1e656 $E646 20 E8 E6                ;
LE649                                                                          ;
dey                                    ; 0x1e659 $E649 88                      ;
bpl      LE62F                         ; 0x1e65a $E64A 10 E3                   ;
jsr      bank7_code44                  ; 0x1e65c $E64C 20 A2 E9                ;
jsr      bank7_idem__maybe             ; 0x1e65f $E64F 20 F9 E9                ;
bcc      LE616                         ; 0x1e662 $E652 90 C2                   ;
LE654                                                                          ;
lda      #$02                          ; 0x1e664 $E654 A9 02                   ; 02 = sound of enemy sword hit shield
sta      $EC                           ; 0x1e666 $E656 85 EC                   ;; Sound Effects Type 1; Sound Effects Type 1
lda      #$00                          ; 0x1e668 $E658 A9 00                   ; A = 00
sta      $0B                           ; 0x1e66a $E65A 85 0B                   ;
pla                                    ; 0x1e66c $E65C 68                      ;
pla                                    ; 0x1e66d $E65D 68                      ;
lda      $80                           ; 0x1e66e $E65E A5 80                   ; Current Animation Frame for Link
cmp      #$09                          ; 0x1e670 $E660 C9 09                   ; 09 = Down Stab
bne      LE66A                         ; 0x1e672 $E662 D0 06                   ;
lda      #$FE                          ; 0x1e674 $E664 A9 FE                   ; A = FE
sta      $057D                         ; 0x1e676 $E666 8D 7D 05                ; Y Velocity after downstabing an armored enemy
rts                                    ; 0x1e679 $E669 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE66A                                                                          ;
LE66C     = * + $0002                                                          ;
jmp      bank7_code37                  ; 0x1e67a $E66A 4C 71 E3                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Attack_Power_for_8_Levels                                                ;
.byt    $02,$03,$04,$06,$09,$0C,$12,$18; 0x1e67d $E66D 02 03 04 06 09 0C 12 18 ;Attack Power for 8 Levels (8 bytes)
.byt    $32                            ; 0x1e685 $E675 32                      ;Attack Power for Thunder spell
                                                                               ;
.byt    $E0                            ; 0x1e686 $E676 E0                      ;???
; ---------------------------------------------------------------------------- ;
bank7_Sword_Hit_Detection_maybe__probably_part_of_it_at_least                  ;
lda      $0480                         ; 0x1e687 $E677 AD 80 04                ;
cmp      #$F8                          ; 0x1e68a $E67A C9 F8                   ;
beq      LE6A6                         ; 0x1e68c $E67C F0 28                   ;
ldy      $A1,x                         ; 0x1e68e $E67E B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1e690 $E680 B9 41 6E                ; Enemy Data Table in RAM (5541)
and      #$10                          ; 0x1e693 $E683 29 10                   ; keep bits ...x ....
bne      LE6A6                         ; 0x1e695 $E685 D0 1F                   ;
lda      $B6,x                         ; 0x1e697 $E687 B5 B6                   ;; Generated Enemy Slot
cmp      #$01                          ; 0x1e699 $E689 C9 01                   ;
bne      LE6A6                         ; 0x1e69b $E68B D0 19                   ;
jsr      bank7_code44                  ; 0x1e69d $E68D 20 A2 E9                ;
lda      #$00                          ; 0x1e6a0 $E690 A9 00                   ; A = 00
sta      $0B                           ; 0x1e6a2 $E692 85 0B                   ;
LE694                                                                          ;
ldy      $A1,x                         ; 0x1e6a4 $E694 B4 A1                   ; Enemy Code
cpy      #$13                          ; 0x1e6a6 $E696 C0 13                   ; 13 = Elevator
beq      LE6AC                         ; 0x1e6a8 $E698 F0 12                   ;
cpy      #$02                          ; 0x1e6aa $E69A C0 02                   ; 02 = Locked Door
beq      LE6AC                         ; 0x1e6ac $E69C F0 0E                   ;
jsr      LE942                         ; 0x1e6ae $E69E 20 42 E9                ;
LE6A1                                                                          ;
jsr      bank7_idem__maybe             ; 0x1e6b1 $E6A1 20 F9 E9                ;
bcs      LE6AE                         ; 0x1e6b4 $E6A4 B0 08                   ;
LE6A6                                                                          ;
lda      $A8,x                         ; 0x1e6b6 $E6A6 B5 A8                   ;; Enemy State
and      #$DF                          ; 0x1e6b8 $E6A8 29 DF                   ; keep bits xx.x xxxx
sta      $A8,x                         ; 0x1e6ba $E6AA 95 A8                   ;; Enemy State
LE6AC                                                                          ;
clc                                    ; 0x1e6bc $E6AC 18                      ; Carry = 0 means sword hits nothing
LE6AD                                                                          ;
rts                                    ; 0x1e6bd $E6AD 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6AE                                                                          ;
ldy      $A1,x                         ; 0x1e6be $E6AE B4 A1                   ; Enemy Code
lda      $0B                           ; 0x1e6c0 $E6B0 A5 0B                   ;
bne      LE6BE                         ; 0x1e6c2 $E6B2 D0 0A                   ;
lda      $6DD5,y                       ; 0x1e6c4 $E6B4 B9 D5 6D                ; Enemy Attributes Table (palette, exp., etc)
and      #$20                          ; 0x1e6c7 $E6B7 29 20                   ; keep bits ..x. ....
beq      LE6BE                         ; 0x1e6c9 $E6B9 F0 03                   ; Bit 5 = 1 means no damage from sword (fire)
jmp      LE654                         ; 0x1e6cb $E6BB 4C 54 E6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6BE                                                                          ;
lda      $0B                           ; 0x1e6ce $E6BE A5 0B                   ;
bne      LE6CB                         ; 0x1e6d0 $E6C0 D0 09                   ;
cpy      #$01                          ; 0x1e6d2 $E6C2 C0 01                   ;
bne      LE6CB                         ; 0x1e6d4 $E6C4 D0 05                   ;
lda      $040E,x                       ; 0x1e6d6 $E6C6 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
bne      LE6AC                         ; 0x1e6d9 $E6C9 D0 E1                   ;
LE6CB                                                                          ;
lda      $0B                           ; 0x1e6db $E6CB A5 0B                   ;
beq      LE6F3                         ; 0x1e6dd $E6CD F0 24                   ;
lda      $6DD5,y                       ; 0x1e6df $E6CF B9 D5 6D                ; Enemy Attributes Table (palette, exp., etc)
and      #$20                          ; 0x1e6e2 $E6D2 29 20                   ; keep bits ..x. ....
beq      LE6DD                         ; 0x1e6e4 $E6D4 F0 07                   ;
ldy      $11                           ; 0x1e6e6 $E6D6 A4 11                   ;
lda      $05CA,y                       ; 0x1e6e8 $E6D8 B9 CA 05                ;
bne      LE6E6                         ; 0x1e6eb $E6DB D0 09                   ;
LE6DD                                                                          ;
ldy      $A1,x                         ; 0x1e6ed $E6DD B4 A1                   ; Enemy Code
lda      $6DF9,y                       ; 0x1e6ef $E6DF B9 F9 6D                ; Another Enemy Attributes Table
and      #$20                          ; 0x1e6f2 $E6E2 29 20                   ; keep bits ..x. ....
beq      LE6F3                         ; 0x1e6f4 $E6E4 F0 0D                   ;
LE6E6                                                                          ;
ldy      $11                           ; 0x1e6f6 $E6E6 A4 11                   ;
LE6E8                                                                          ;
lda      #$00                          ; 0x1e6f8 $E6E8 A9 00                   ; A = 00
sta      $7D,y                         ; 0x1e6fa $E6EA 99 7D 00                ;
lda      #$F2                          ; 0x1e6fd $E6ED A9 F2                   ; A = F2
sta      $8D,y                         ; 0x1e6ff $E6EF 99 8D 00                ;
rts                                    ; 0x1e702 $E6F2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE6F3                                                                          ;
lda      $80                           ; 0x1e703 $E6F3 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$08                          ; 0x1e705 $E6F5 C9 08                   ; 08 = Up Stab
bne      LE708                         ; 0x1e707 $E6F7 D0 0F                   ;
lda      $0B                           ; 0x1e709 $E6F9 A5 0B                   ;
bne      LE708                         ; 0x1e70b $E6FB D0 0B                   ;
lda      $29                           ; 0x1e70d $E6FD A5 29                   ; Link Y Position
cmp      $2A,x                         ; 0x1e70f $E6FF D5 2A                   ; Enemy Y Position
bcc      LE6A6                         ; 0x1e711 $E701 90 A3                   ;
lda      #$00                          ; 0x1e713 $E703 A9 00                   ; A = 00
sta      $057D                         ; 0x1e715 $E705 8D 7D 05                ; $057D = Link Jumping State ?
LE708                                                                          ;
lda      $A8,x                         ; 0x1e718 $E708 B5 A8                   ;; Enemy State
and      #$20                          ; 0x1e71a $E70A 29 20                   ; keep bits ..x. ....
bne      LE6AD                         ; 0x1e71c $E70C D0 9F                   ;
lda      $A8,x                         ; 0x1e71e $E70E B5 A8                   ;; Enemy State
ora      #$20                          ; 0x1e720 $E710 09 20                   ; set  bits ..x. ....
sta      $A8,x                         ; 0x1e722 $E712 95 A8                   ;; Enemy State
lda      $80                           ; 0x1e724 $E714 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$09                          ; 0x1e726 $E716 C9 09                   ; 09 = Down Stab
bne      LE723                         ; 0x1e728 $E718 D0 09                   ;
lda      $0B                           ; 0x1e72a $E71A A5 0B                   ;
bne      LE723                         ; 0x1e72c $E71C D0 05                   ;
lda      #$FE                          ; 0x1e72e $E71E A9 FE                   ; A = FE
sta      $057D                         ; 0x1e730 $E720 8D 7D 05                ; Link's Y Velocity
LE723                                                                          ;
ldy      $0777                         ; 0x1e733 $E723 AC 77 07                ; Attack Power
LE726                                                                          ;
lda      #$30                          ; 0x1e736 $E726 A9 30                   ; A = 30
sta      $040E,x                       ; 0x1e738 $E728 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
lda      #$10                          ; 0x1e73b $E72B A9 10                   ; A = 10
sta      $ED                           ; 0x1e73d $E72D 85 ED                   ; Sound Effects Type 2
lda      $C2,x                         ; 0x1e73f $E72F B5 C2                   ; Enemy HP
sec                                    ; 0x1e741 $E731 38                      ;
sbc      LE66C,y                       ; 0x1e742 $E732 F9 6C E6                ; refer to table at $1E66C (+1)
sta      $C2,x                         ; 0x1e745 $E735 95 C2                   ;; Enemy Current HP
beq      LE74C                         ; 0x1e747 $E737 F0 13                   ; if (HP == 0)
bcc      LE74C                         ; 0x1e749 $E739 90 11                   ; or (HP is Negative) goto $1E74C (enemy dead)
lda      $A1,x                         ; 0x1e74b $E73B B5 A1                   ; Enemy Code
cmp      #$01                          ; 0x1e74d $E73D C9 01                   ; 01 = Red Jar
beq      LE755                         ; 0x1e74f $E73F F0 14                   ;
lda      $80                           ; 0x1e751 $E741 A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$09                          ; 0x1e753 $E743 C9 09                   ;
beq      LE74A                         ; 0x1e755 $E745 F0 03                   ;
jsr      bank7_code37                  ; 0x1e757 $E747 20 71 E3                ;
LE74A                                                                          ;
sec                                    ; 0x1e75a $E74A 38                      ;
rts                                    ; 0x1e75b $E74B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE74C                                                                          ;
ldy      $A1,x                         ; 0x1e75c $E74C B4 A1                   ; Enemy Code
cpy      #$01                          ; 0x1e75e $E74E C0 01                   ; 01 = Red Jar
beq      LE755                         ; 0x1e760 $E750 F0 03                   ;
jmp      bank7_monster_death           ; 0x1e762 $E752 4C 80 E8                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE755                                                                          ;
;item gets stabbed ?                                                           ;
lda      $AF,x                         ; 0x1e765 $E755 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e767 $E757 29 7F                   ; keep bits .xxx xxxx
cmp      #$08                          ; 0x1e769 $E759 C9 08                   ;
bcc      LE769                         ; 0x1e76b $E75B 90 0C                   ;
cmp      #$0E                          ; 0x1e76d $E75D C9 0E                   ;
bcc      bank7_get_item                ; 0x1e76f $E75F 90 10                   ;
cmp      #$10                          ; 0x1e771 $E761 C9 10                   ;
beq      bank7_get_item                ; 0x1e773 $E763 F0 0C                   ;
cmp      #$11                          ; 0x1e775 $E765 C9 11                   ;
beq      bank7_get_item                ; 0x1e777 $E767 F0 08                   ;
LE769                                                                          ;
lda      #$00                          ; 0x1e779 $E769 A9 00                   ; A = 00
sta      $040E,x                       ; 0x1e77b $E76B 9D 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
sta      $ED                           ; 0x1e77e $E76E 85 ED                   ;; Sound Effects Type 2; Sound Effects Type 2
rts                                    ; 0x1e780 $E770 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_get_item                                                                 ;
lda      $AF,x                         ; 0x1e781 $E771 B5 AF                   ;; Various enemy state variables
bmi      LE77D                         ; 0x1e783 $E773 30 08                   ;
lda      $3C,x                         ; 0x1e785 $E775 B5 3C                   ; Enemy X position (high byte)
tax                                    ; 0x1e787 $E777 AA                      ;
jsr      Set_Item_RAM_bit_to_0__Bits_0_3; 0x1e788 $E778 20 95 C2               ; set Item as taken in RAM
ldx      $10                           ; 0x1e78b $E77B A6 10                   ;; used as monster x register ;draw boss hp bar
LE77D                                                                          ;
lda      $AF,x                         ; 0x1e78d $E77D B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e78f $E77F 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1e791 $E781 A8                      ;
cpy      #$08                          ; 0x1e792 $E782 C0 08                   ;
bcs      LE79A                         ; 0x1e794 $E784 B0 14                   ; check if Item Code > 8
lda      #$A0                          ; 0x1e796 $E786 A9 A0                   ; A = A0
sta      $074B                         ; 0x1e798 $E788 8D 4B 07                ; Spell Flash Counter (bit 7 set = decor flash)
lda      #$10                          ; 0x1e79b $E78B A9 10                   ; A = 10
sta      $EB                           ; 0x1e79d $E78D 85 EB                   ; Music
lda      $0785,y                       ; 0x1e79f $E78F B9 85 07                ; Have Item Y
ora      #$01                          ; 0x1e7a2 $E792 09 01                   ; set  bits .... ...x
sta      $0785,y                       ; 0x1e7a4 $E794 99 85 07                ;
LE797                                                                          ;
jmp      bank7_remove_enemy_or_item    ; 0x1e7a7 $E797 4C 47 DD                ; Remove Enemy/Item
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE79A                                                                          ;
lda      #$08                          ; 0x1e7aa $E79A A9 08                   ; A = 08
sta      $EF                           ; 0x1e7ac $E79C 85 EF                   ; Sound Effects Type 4
cpy      #$08                          ; 0x1e7ae $E79E C0 08                   ;
bne      LE7BB                         ; 0x1e7b0 $E7A0 D0 19                   ;
lda      $0728                         ; 0x1e7b2 $E7A2 AD 28 07                ; Related to boss key state
beq      LE7B5                         ; 0x1e7b5 $E7A5 F0 0E                   ;
lda      #$00                          ; 0x1e7b7 $E7A7 A9 00                   ; A = 00
sta      $0728                         ; 0x1e7b9 $E7A9 8D 28 07                ;;_728_FreezeScrolling		= $728	;1=freeze screen, prevent from exiting left/right
lda      $07FB                         ; 0x1e7bc $E7AC AD FB 07                ;
bne      LE7B5                         ; 0x1e7bf $E7AF D0 04                   ;
;                                                                              ;Restart Music after taking a key that falls after beating a boss
lda      #$02                          ; 0x1e7c1 $E7B1 A9 02                   ; A = 02 (04 = quiet version of Palace theme)
sta      $EB                           ; 0x1e7c3 $E7B3 85 EB                   ; Music
LE7B5                                                                          ;
inc      $0793                         ; 0x1e7c5 $E7B5 EE 93 07                ; Number of Keys
jmp      LE797                         ; 0x1e7c8 $E7B8 4C 97 E7                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE7BB                                                                          ;
cpy      #$0E                          ; 0x1e7cb $E7BB C0 0E                   ;
bcc      bank7_code42                  ; 0x1e7cd $E7BD 90 35                   ;
cpy      #$10                          ; 0x1e7cf $E7BF C0 10                   ;
bcs      LE80C                         ; 0x1e7d1 $E7C1 B0 49                   ;
;Item is Magic (0E) or Heart (0F) Container                                    ;
lda      #$10                          ; 0x1e7d3 $E7C3 A9 10                   ; A = 10
sta      $EB                           ; 0x1e7d5 $E7C5 85 EB                   ; Music
lda      #$00                          ; 0x1e7d7 $E7C7 A9 00                   ; A = 00
sta      $EF                           ; 0x1e7d9 $E7C9 85 EF                   ; Sound Effects Type 4
tya                                    ; 0x1e7db $E7CB 98                      ;
tax                                    ; 0x1e7dc $E7CC AA                      ;
inc      $0775,x                       ; 0x1e7dd $E7CD FE 75 07                ; 0E = Magic Containers, 0F = Heart Containers
cpx      #$0E                          ; 0x1e7e0 $E7D0 E0 0E                   ;
bne      LE7E3                         ; 0x1e7e2 $E7D2 D0 0F                   ;
ldy      $0775,x                       ; 0x1e7e4 $E7D4 BC 75 07                ;
cpy      #$07                          ; 0x1e7e7 $E7D7 C0 07                   ; check if Link has 7 Magic Containers
bcc      LE7E3                         ; 0x1e7e9 $E7D9 90 08                   ;
lda      $079D                         ; 0x1e7eb $E7DB AD 9D 07                ;; Have 7 Magic Containers (08)
ora      #$08                          ; 0x1e7ee $E7DE 09 08                   ; set  bits .... x...
sta      $079D                         ; 0x1e7f0 $E7E0 8D 9D 07                ; set bit for 7 Magic Containers (08) (Kasuto)
LE7E3                                                                          ;
tya                                    ; 0x1e7f3 $E7E3 98                      ;
asl                                    ; 0x1e7f4 $E7E4 0A                      ;
asl                                    ; 0x1e7f5 $E7E5 0A                      ;
LE7E6                                                                          ;
asl                                    ; 0x1e7f6 $E7E6 0A                      ;
asl                                    ; 0x1e7f7 $E7E7 0A                      ;
sta      $06FE,x                       ; 0x1e7f8 $E7E8 9D FE 06                ; Magic/Life to be added to Magic/Life Meter
ldx      $10                           ; 0x1e7fb $E7EB A6 10                   ;; used as monster x register ;draw boss hp bar
jmp      bank7_remove_enemy_or_item    ; 0x1e7fd $E7ED 4C 47 DD                ; Remove Enemy/Item
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table24                                                                  ;
.byt    $07,$09,$0B,$0D                ; 0x1e800 $E7F0 07 09 0B 0D             ;
; ---------------------------------------------------------------------------- ;
bank7_code42                                                                   ;
jsr      bank7_monster_death           ; 0x1e804 $E7F4 20 80 E8                ;
lda      $AF,x                         ; 0x1e807 $E7F7 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1e809 $E7F9 29 7F                   ; keep bits .xxx xxxx
tay                                    ; 0x1e80b $E7FB A8                      ;
lda      LE7E6,y                       ; 0x1e80c $E7FC B9 E6 E7                ;
sta      $0414,x                       ; 0x1e80f $E7FF 9D 14 04                ;
lda      #$08                          ; 0x1e812 $E802 A9 08                   ; A = 08
sta      $EF                           ; 0x1e814 $E804 85 EF                   ; Sound Effects Type 4
lda      #$00                          ; 0x1e816 $E806 A9 00                   ; A = 00
sta      $0504,x                       ; 0x1e818 $E808 9D 04 05                ;; Timer for Enemy
rts                                    ; 0x1e81b $E80B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LE80C                                                                          ;
lda      #$10                          ; 0x1e81c $E80C A9 10                   ; A = 10
sta      $EB                           ; 0x1e81e $E80E 85 EB                   ; Music
lda      #$00                          ; 0x1e820 $E810 A9 00                   ; A = 00
sta      $EF                           ; 0x1e822 $E812 85 EF                   ; Sound Effects Type 4
cpy      #$12                          ; 0x1e824 $E814 C0 12                   ; 12 = Doll
bne      LE81D                         ; 0x1e826 $E816 D0 05                   ;
inc      $0700                         ; 0x1e828 $E818 EE 00 07                ; Number of Lives
bne      LE86D                         ; 0x1e82b $E81B D0 50                   ;
LE81D                                                                          ;
cpy      #$13                          ; 0x1e82d $E81D C0 13                   ; 13 = Kidnapped Child
bne      LE82B                         ; 0x1e82f $E81F D0 0A                   ;
lda      $079C                         ; 0x1e831 $E821 AD 9C 07                ;; Have collected Lost Child (20)
ora      #$20                          ; 0x1e834 $E824 09 20                   ; set  bits ..x. ....
sta      $079C                         ; 0x1e836 $E826 8D 9C 07                ;; Have collected Lost Child (20)
bne      LE86D                         ; 0x1e839 $E829 D0 42                   ;
LE82B                                                                          ;
cpy      #$14                          ; 0x1e83b $E82B C0 14                   ; 14 = Trophy
bne      LE839                         ; 0x1e83d $E82D D0 0A                   ;
lda      $0798                         ; 0x1e83f $E82F AD 98 07                ;; Trophy In Inventory (10 - Yes); Have collected Trophy (10)
ora      #$10                          ; 0x1e842 $E832 09 10                   ; set  bits ...x ....
sta      $0798                         ; 0x1e844 $E834 8D 98 07                ;; Trophy In Inventory (10 - Yes); Have collected Trophy (10)
bne      LE86D                         ; 0x1e847 $E837 D0 34                   ;
LE839                                                                          ;
cpy      #$15                          ; 0x1e849 $E839 C0 15                   ; 15 = Medicine
bne      LE847                         ; 0x1e84b $E83B D0 0A                   ;
lda      $079A                         ; 0x1e84d $E83D AD 9A 07                ;; Have collected note from Bagu (08) Medicine (40)
ora      #$40                          ; 0x1e850 $E840 09 40                   ; set bits  .x.. ....
sta      $079A                         ; 0x1e852 $E842 8D 9A 07                ;; Have collected note from Bagu (08) Medicine (40)
bne      LE86D                         ; 0x1e855 $E845 D0 26                   ;
LE847                                                                          ;
lda      #$08                          ; 0x1e857 $E847 A9 08                   ; A = 08
sta      $EF                           ; 0x1e859 $E849 85 EF                   ; Sound Effects Type 4
lda      #$00                          ; 0x1e85b $E84B A9 00                   ; A = 00
sta      $EB                           ; 0x1e85d $E84D 85 EB                   ; Music
lda      #$10                          ; 0x1e85f $E84F A9 10                   ; A = 10
sta      $05E2                         ; 0x1e861 $E851 8D E2 05                ; Amount of Magic to restore for Blue Jar
lda      $0783                         ; 0x1e864 $E854 AD 83 07                ; Number of Magic Containers
asl                                    ; 0x1e867 $E857 0A                      ;
asl                                    ; 0x1e868 $E858 0A                      ;
asl                                    ; 0x1e869 $E859 0A                      ;
asl                                    ; 0x1e86a $E85A 0A                      ;
sta      $05E3                         ; 0x1e86b $E85B 8D E3 05                ; Amount of Magic to restore for Red Jar
tya                                    ; 0x1e86e $E85E 98                      ;
sec                                    ; 0x1e86f $E85F 38                      ;
sbc      #$10                          ; 0x1e870 $E860 E9 10                   ;
tay                                    ; 0x1e872 $E862 A8                      ;
lda      $070C                         ; 0x1e873 $E863 AD 0C 07                ;add 5E2 to 70C for blue jar=magic	;add 5E3 to 70D for red jar=hp
clc                                    ; 0x1e876 $E866 18                      ;
adc      $05E2,y                       ; 0x1e877 $E867 79 E2 05                ;
sta      $070C                         ; 0x1e87a $E86A 8D 0C 07                ;add to link MP
LE86D                                                                          ;
jmp      bank7_remove_enemy_or_item    ; 0x1e87d $E86D 4C 47 DD                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Table_for_Probability_for_Item_given_by_killed_enemy                     ;
.byt    $90,$90,$8A,$90,$90,$90,$90,$90; 0x1e880 $E870 90 90 8A 90 90 90 90 90 ;Weak Enemy
.byt    $91,$8C,$91,$8C,$8C,$91,$8C,$91; 0x1e888 $E878 91 8C 91 8C 8C 91 8C 91 ;Strong Enemy
; ---------------------------------------------------------------------------- ;
bank7_monster_death                                                            ;
ldy      $A1,x                         ; 0x1e890 $E880 B4 A1                   ; Enemy Code
lda      $6DD5,y                       ; 0x1e892 $E882 B9 D5 6D                ; Enemy Properties (Palette, Exp. Code, etc.)
and      #$0F                          ; 0x1e895 $E885 29 0F                   ; keep bits .... xxxx
sta      $0414,x                       ; 0x1e897 $E887 9D 14 04                ;
lda      $6DF9,y                       ; 0x1e89a $E88A B9 F9 6D                ; Enemy Vulnerability/Damage Code
and      #$C0                          ; 0x1e89d $E88D 29 C0                   ; keep bits xx.. ....
beq      LE8BF                         ; 0x1e89f $E88F F0 2E                   ; if enemy never give special items, skip
bank7_Drop_Item                                                                ;
lsr                                    ; 0x1e8a1 $E891 4A                      ;
lsr                                    ; 0x1e8a2 $E892 4A                      ;
lsr                                    ; 0x1e8a3 $E893 4A                      ;
lsr                                    ; 0x1e8a4 $E894 4A                      ;
lsr                                    ; 0x1e8a5 $E895 4A                      ;
lsr                                    ; 0x1e8a6 $E896 4A                      ;
tax                                    ; 0x1e8a7 $E897 AA                      ;
tay                                    ; 0x1e8a8 $E898 A8                      ;
inc      $05DE,x                       ; 0x1e8a9 $E899 FE DE 05                ; Current number of enemies killed for item
lda      $05DE,x                       ; 0x1e8ac $E89C BD DE 05                ;; Current number of enemies killed for magic/bag
cmp      #$06                          ; 0x1e8af $E89F C9 06                   ; Number of enemies to kill for item
bne      LE8BF                         ; 0x1e8b1 $E8A1 D0 1C                   ;
lda      #$00                          ; 0x1e8b3 $E8A3 A9 00                   ; A = 00
sta      $05DE,x                       ; 0x1e8b5 $E8A5 9D DE 05                ; Reset item counter
ldx      $10                           ; 0x1e8b8 $E8A8 A6 10                   ;; used as monster x register ;draw boss hp bar
ror      $0414,x                       ; 0x1e8ba $E8AA 7E 14 04                ;
lda      $051B,x                       ; 0x1e8bd $E8AD BD 1B 05                ; Randomizer
and      #$07                          ; 0x1e8c0 $E8B0 29 07                   ; keep bits .... .xxx
cpy      #$02                          ; 0x1e8c2 $E8B2 C0 02                   ; 02 = Strong Enemy (200P and Red Jar)
bne      LE8B8                         ; 0x1e8c4 $E8B4 D0 02                   ;
adc      #$07                          ; 0x1e8c6 $E8B6 69 07                   ; the Carry is set, so it's 8
LE8B8                                                                          ;
tay                                    ; 0x1e8c8 $E8B8 A8                      ;
lda      bank7_Table_for_Probability_for_Item_given_by_killed_enemy,y; 0x1e8c9 $E8B9 B9 70 E8;
sta      $048E,x                       ; 0x1e8cc $E8BC 9D 8E 04                ;; Dropped Item Code
LE8BF                                                                          ;
ldx      $10                           ; 0x1e8cf $E8BF A6 10                   ;; used as monster x register ;draw boss hp bar
lda      #$25                          ; 0x1e8d1 $E8C1 A9 25                   ; A = 25 (timer for kill animation)
sta      $0504,x                       ; 0x1e8d3 $E8C3 9D 04 05                ;; Timer for Enemy
lda      #$00                          ; 0x1e8d6 $E8C6 A9 00                   ; A = 00
sta      $043E,x                       ; 0x1e8d8 $E8C8 9D 3E 04                ;
lda      #$02                          ; 0x1e8db $E8CB A9 02                   ; A = 02
sta      $B6,x                         ; 0x1e8dd $E8CD 95 B6                   ; Generated Enemy Slot
lda      #$04                          ; 0x1e8df $E8CF A9 04                   ; A = 04
sta      $EF                           ; 0x1e8e1 $E8D1 85 EF                   ; Sound Effects Type 4
sec                                    ; 0x1e8e3 $E8D3 38                      ;
rts                                    ; 0x1e8e4 $E8D4 60                      ;try jmping at this point and check monster id then drop custom item	(Y=monID	X=monX register	)
                                                                               ;
; ---------------------------------------------------------------------------- ;
lda      $2A,x                         ; 0x1e8e5 $E8D5 B5 2A                   ; Enemy Y Position
sta      $05                           ; 0x1e8e7 $E8D7 85 05                   ;
lda      #$08                          ; 0x1e8e9 $E8D9 A9 08                   ; A = 08
sta      $07                           ; 0x1e8eb $E8DB 85 07                   ;
lda      $CD                           ; 0x1e8ed $E8DD A5 CD                   ;
sta      $04                           ; 0x1e8ef $E8DF 85 04                   ;
lda      #$08                          ; 0x1e8f1 $E8E1 A9 08                   ; A = 08
sta      $06                           ; 0x1e8f3 $E8E3 85 06                   ;
jsr      bank7_code44                  ; 0x1e8f5 $E8E5 20 A2 E9                ;
jmp      LE6A1                         ; 0x1e8f8 $E8E8 4C A1 E6                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Change_Enemy_Facing_Direction_and_X_Velocity                             ;
lda      $60,x                         ; 0x1e8fb $E8EB B5 60                   ; Enemy Facing Direction
eor      #$03                          ; 0x1e8fd $E8ED 49 03                   ; flip bits .... ..xx
sta      $60,x                         ; 0x1e8ff $E8EF 95 60                   ;; Enemy facing direction
lda      $71,x                         ; 0x1e901 $E8F1 B5 71                   ; Enemy X Velocity
eor      #$FF                          ; 0x1e903 $E8F3 49 FF                   ; flip all bits
tay                                    ; 0x1e905 $E8F5 A8                      ;
iny                                    ; 0x1e906 $E8F6 C8                      ;
sty      $71,x                         ; 0x1e907 $E8F7 94 71                   ;; Enemy X Velocity
rts                                    ; 0x1e909 $E8F9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN0                                                                 ;
.byt    $02,$0C,$03,$17,$02,$0C,$03,$0A; 0x1e90a $E8FA 02 0C 03 17 02 0C 03 0A ;
.byt    $04,$08,$0B,$03,$00,$18,$22,$08; 0x1e912 $E902 04 08 0B 03 00 18 22 08 ;
.byt    $FE,$0C,$00,$30,$00,$08,$00,$08; 0x1e91a $E90A FE 0C 00 30 00 08 00 08 ;
.byt    $03,$02,$03,$70,$00,$08,$F6,$20; 0x1e922 $E912 03 02 03 70 00 08 F6 20 ;
.byt    $0E,$04,$00,$10,$FC,$18,$10,$10; 0x1e92a $E91A 0E 04 00 10 FC 18 10 10 ;
.byt    $00,$10,$00,$18,$08,$10,$00,$30; 0x1e932 $E922 00 10 00 18 08 10 00 30 ;
.byt    $F4,$28,$00,$20,$00,$60,$00,$80; 0x1e93a $E92A F4 28 00 20 00 60 00 80 ;
.byt    $0E,$04,$10,$0E,$01,$06,$08,$03; 0x1e942 $E932 0E 04 10 0E 01 06 08 03 ;
.byt    $00,$20,$08,$18,$04,$10,$18,$18; 0x1e94a $E93A 00 20 08 18 04 10 18 18 ;
LE942                                                                          ;
.byt    $B4,$A1,$B9,$1D,$6E,$0A,$0A,$A8; 0x1e952 $E942 B4 A1 B9 1D 6E 0A 0A A8 ;
.byt    $A5,$CD,$18,$79,$FA,$E8,$85,$04; 0x1e95a $E94A A5 CD 18 79 FA E8 85 04 ;
.byt    $B9,$FB,$E8,$85,$06,$B5,$2A,$18; 0x1e962 $E952 B9 FB E8 85 06 B5 2A 18 ;
.byt    $79,$FC,$E8,$85,$05,$B9,$FD,$E8; 0x1e96a $E95A 79 FC E8 85 05 B9 FD E8 ;
.byt    $85,$07,$A5,$04,$65,$06,$90,$06; 0x1e972 $E962 85 07 A5 04 65 06 90 06 ;
.byt    $A5,$04,$49,$FF,$85,$06,$60    ; 0x1e97a $E96A A5 04 49 FF 85 06 60    ;
LE971                                                                          ;
.byt    $04,$00                        ; 0x1e981 $E971 04 00                   ;
LE973                                                                          ;
.byt    $19,$1D                        ; 0x1e983 $E973 19 1D                   ;
; ---------------------------------------------------------------------------- ;
bank7_code43                                                                   ;
lda      $CC                           ; 0x1e985 $E975 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e987 $E977 18                      ;
adc      #$09                          ; 0x1e988 $E978 69 09                   ;
sta      L0000                         ; 0x1e98a $E97A 85 00                   ;
lda      #$0D                          ; 0x1e98c $E97C A9 0D                   ; A = 0D
sta      $02                           ; 0x1e98e $E97E 85 02                   ;
ldy      $17                           ; 0x1e990 $E980 A4 17                   ; Link's Shield Position
lda      $29                           ; 0x1e992 $E982 A5 29                   ; Link's Y Position
clc                                    ; 0x1e994 $E984 18                      ;
adc      LE971,y                       ; 0x1e995 $E985 79 71 E9                ; refer to table at $1E971
sta      $01                           ; 0x1e998 $E988 85 01                   ;
lda      LE973,y                       ; 0x1e99a $E98A B9 73 E9                ; refer to table at $1E973
sta      $03                           ; 0x1e99d $E98D 85 03                   ;
lda      L0000                         ; 0x1e99f $E98F A5 00                   ;
adc      $02                           ; 0x1e9a1 $E991 65 02                   ;
bcc      LE99B                         ; 0x1e9a3 $E993 90 06                   ;
lda      L0000                         ; 0x1e9a5 $E995 A5 00                   ;
eor      #$FF                          ; 0x1e9a7 $E997 49 FF                   ; flip all bits
sta      $02                           ; 0x1e9a9 $E999 85 02                   ;
LE99B                                                                          ;
rts                                    ; 0x1e9ab $E99B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table26                                                                  ;
.byt    $F8,$02                        ; 0x1e9ac $E99C F8 02                   ;
LE99E                                                                          ;
.byt    $07,$00                        ; 0x1e9ae $E99E 07 00                   ;
LE9A0                                                                          ;
.byt    $03,$03                        ; 0x1e9b0 $E9A0 03 03                   ;
; ---------------------------------------------------------------------------- ;
bank7_code44                                                                   ;
ldy      #$00                          ; 0x1e9b2 $E9A2 A0 00                   ; Y = 00
lda      $047E                         ; 0x1e9b4 $E9A4 AD 7E 04                ;
pha                                    ; 0x1e9b7 $E9A7 48                      ;
cmp      $CC                           ; 0x1e9b8 $E9A8 C5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
bcs      LE9AD                         ; 0x1e9ba $E9AA B0 01                   ;
iny                                    ; 0x1e9bc $E9AC C8                      ;
LE9AD                                                                          ;
pla                                    ; 0x1e9bd $E9AD 68                      ;
clc                                    ; 0x1e9be $E9AE 18                      ;
adc      bank7_table26,y               ; 0x1e9bf $E9AF 79 9C E9                ;
sta      L0000                         ; 0x1e9c2 $E9B2 85 00                   ;
lda      #$0E                          ; 0x1e9c4 $E9B4 A9 0E                   ; A = 0E
sta      $02                           ; 0x1e9c6 $E9B6 85 02                   ;
ldy      #$00                          ; 0x1e9c8 $E9B8 A0 00                   ; Y = 00
lda      $80                           ; 0x1e9ca $E9BA A5 80                   ;; Controller 1 Last Poll; Current Animation Frame for Link (OW and SS)	;animation frame, powerful: can cause link to attack
cmp      #$08                          ; 0x1e9cc $E9BC C9 08                   ;
beq      LE9C4                         ; 0x1e9ce $E9BE F0 04                   ;
cmp      #$09                          ; 0x1e9d0 $E9C0 C9 09                   ;
bne      LE9C5                         ; 0x1e9d2 $E9C2 D0 01                   ;
LE9C4                                                                          ;
iny                                    ; 0x1e9d4 $E9C4 C8                      ;
LE9C5                                                                          ;
lda      $0480                         ; 0x1e9d5 $E9C5 AD 80 04                ;
clc                                    ; 0x1e9d8 $E9C8 18                      ;
adc      LE99E,y                       ; 0x1e9d9 $E9C9 79 9E E9                ;
sta      $01                           ; 0x1e9dc $E9CC 85 01                   ;
lda      LE9A0,y                       ; 0x1e9de $E9CE B9 A0 E9                ;
sta      $03                           ; 0x1e9e1 $E9D1 85 03                   ;
rts                                    ; 0x1e9e3 $E9D3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table27                                                                  ;
.byt    $0E,$FF                        ; 0x1e9e4 $E9D4 0E FF                   ;
LE9D6                                                                          ;
.byt    $11,$02                        ; 0x1e9e6 $E9D6 11 02                   ;
; ---------------------------------------------------------------------------- ;
bank7_code45                                                                   ;
ldy      $9F                           ; 0x1e9e8 $E9D8 A4 9F                   ;;link facedir SideScroll		; Direction arrow pressed (1 = right, 2 = left)
dey                                    ; 0x1e9ea $E9DA 88                      ;
lda      $CC                           ; 0x1e9eb $E9DB A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
clc                                    ; 0x1e9ed $E9DD 18                      ;
adc      #$08                          ; 0x1e9ee $E9DE 69 08                   ;
clc                                    ; 0x1e9f0 $E9E0 18                      ;
adc      bank7_table27,y               ; 0x1e9f1 $E9E1 79 D4 E9                ; refer to table at $1E9D4
sta      L0000                         ; 0x1e9f4 $E9E4 85 00                   ;
lda      #$05                          ; 0x1e9f6 $E9E6 A9 05                   ; A = 05
sta      $02                           ; 0x1e9f8 $E9E8 85 02                   ;
ldy      $17                           ; 0x1e9fa $E9EA A4 17                   ; Link's Shield Position
lda      $29                           ; 0x1e9fc $E9EC A5 29                   ; Link's Y Position
clc                                    ; 0x1e9fe $E9EE 18                      ;
adc      LE9D6,y                       ; 0x1e9ff $E9EF 79 D6 E9                ; refer to table at $1E9D6
sta      $01                           ; 0x1ea02 $E9F2 85 01                   ;
lda      #$0C                          ; 0x1ea04 $E9F4 A9 0C                   ; A = 0C
sta      $03                           ; 0x1ea06 $E9F6 85 03                   ;
rts                                    ; 0x1ea08 $E9F8 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_idem__maybe                                                              ;
ldx      #$01                          ; 0x1ea09 $E9F9 A2 01                   ; X = 01
LE9FB                                                                          ;
lda      $04,x                         ; 0x1ea0b $E9FB B5 04                   ;
sec                                    ; 0x1ea0d $E9FD 38                      ;
sbc      L0000,x                       ; 0x1ea0e $E9FE F5 00                   ;
clc                                    ; 0x1ea10 $EA00 18                      ;
adc      $06,x                         ; 0x1ea11 $EA01 75 06                   ;
sta      $0F                           ; 0x1ea13 $EA03 85 0F                   ;
lda      $02,x                         ; 0x1ea15 $EA05 B5 02                   ;
clc                                    ; 0x1ea17 $EA07 18                      ;
adc      $06,x                         ; 0x1ea18 $EA08 75 06                   ;
cmp      $0F                           ; 0x1ea1a $EA0A C5 0F                   ;
bcc      LEA11                         ; 0x1ea1c $EA0C 90 03                   ;
dex                                    ; 0x1ea1e $EA0E CA                      ;
bpl      LE9FB                         ; 0x1ea1f $EA0F 10 EA                   ;
LEA11                                                                          ;
ldx      $10                           ; 0x1ea21 $EA11 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1ea23 $EA13 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
ldy      #$1E                          ; 0x1ea24 $EA14 A0 1E                   ; Y = 1E
bne      LEA1E                         ; 0x1ea26 $EA16 D0 06                   ;
LEA18                                                                          ;
ldy      #$1E                          ; 0x1ea28 $EA18 A0 1E                   ; Y = 1E
bne      LEA24                         ; 0x1ea2a $EA1A D0 08                   ;
LEA1C                                                                          ;
ldy      #$1F                          ; 0x1ea2c $EA1C A0 1F                   ; Y = 1F
LEA1E                                                                          ;
lda      $30,x                         ; 0x1ea2e $EA1E B5 30                   ; Projectile Y Position
cmp      #$90                          ; 0x1ea30 $EA20 C9 90                   ;
bcc      LEA31                         ; 0x1ea32 $EA22 90 0D                   ;
LEA24                                                                          ;
txa                                    ; 0x1ea34 $EA24 8A                      ;
clc                                    ; 0x1ea35 $EA25 18                      ;
adc      #$07                          ; 0x1ea36 $EA26 69 07                   ;
tax                                    ; 0x1ea38 $EA28 AA                      ;
jsr      bank7_Generic_Collision_Test_with_Level_Objects; 0x1ea39 $EA29 20 E8 EA;
jsr      bank5_code3                   ; 0x1ea3c $EA2C 20 0C 85                ;
ldx      $10                           ; 0x1ea3f $EA2F A6 10                   ;; used as monster x register ;draw boss hp bar
LEA31                                                                          ;
rts                                    ; 0x1ea41 $EA31 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LEA32                                                                          ;
ldy      $A1,x                         ; 0x1ea42 $EA32 B4 A1                   ; Enemy Code
lda      $6E41,y                       ; 0x1ea44 $EA34 B9 41 6E                ;
and      #$0F                          ; 0x1ea47 $EA37 29 0F                   ; keep bits .... xxxx
sta      $09                           ; 0x1ea49 $EA39 85 09                   ;
inx                                    ; 0x1ea4b $EA3B E8                      ;
lda      $A7,x                         ; 0x1ea4c $EA3C B5 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
and      #$F0                          ; 0x1ea4e $EA3E 29 F0                   ; keep bits xxxx ....
sta      $A7,x                         ; 0x1ea50 $EA40 95 A7                   ;;collision bits for Link - 0000ABLR (above,below,left,right)
lda      #$15                          ; 0x1ea52 $EA42 A9 15                   ; A = 15
clc                                    ; 0x1ea54 $EA44 18                      ;
adc      $09                           ; 0x1ea55 $EA45 65 09                   ;
sta      L0000                         ; 0x1ea57 $EA47 85 00                   ;
lda      #$00                          ; 0x1ea59 $EA49 A9 00                   ; A = 00
sta      $01                           ; 0x1ea5b $EA4B 85 01                   ;
jsr      LE1BE                         ; 0x1ea5d $EA4D 20 BE E1                ;
lda      #$14                          ; 0x1ea60 $EA50 A9 14                   ; A = 14
clc                                    ; 0x1ea62 $EA52 18                      ;
adc      $09                           ; 0x1ea63 $EA53 65 09                   ;
sta      L0000                         ; 0x1ea65 $EA55 85 00                   ;
lda      #$00                          ; 0x1ea67 $EA57 A9 00                   ; A = 00
sta      $01                           ; 0x1ea69 $EA59 85 01                   ;
jsr      LE1BE                         ; 0x1ea6b $EA5B 20 BE E1                ;
lda      $02                           ; 0x1ea6e $EA5E A5 02                   ;
sec                                    ; 0x1ea70 $EA60 38                      ;
sbc      #$10                          ; 0x1ea71 $EA61 E9 10                   ;
sta      $044B                         ; 0x1ea73 $EA63 8D 4B 04                ;
lda      L000E                         ; 0x1ea76 $EA66 A5 0E                   ;
sta      $DA                           ; 0x1ea78 $EA68 85 DA                   ;
lda      $0F                           ; 0x1ea7a $EA6A A5 0F                   ;
sta      $DB                           ; 0x1ea7c $EA6C 85 DB                   ;
lda      #$01                          ; 0x1ea7e $EA6E A9 01                   ; A = 01
ldy      $70,x                         ; 0x1ea80 $EA70 B4 70                   ;;hspeed (Link's horizontal velocity)
bmi      LEA75                         ; 0x1ea82 $EA72 30 01                   ;
lsr                                    ; 0x1ea84 $EA74 4A                      ;
LEA75                                                                          ;
clc                                    ; 0x1ea85 $EA75 18                      ;
adc      #$10                          ; 0x1ea86 $EA76 69 10                   ;
clc                                    ; 0x1ea88 $EA78 18                      ;
adc      $09                           ; 0x1ea89 $EA79 65 09                   ;
sta      L0000                         ; 0x1ea8b $EA7B 85 00                   ;
pha                                    ; 0x1ea8d $EA7D 48                      ;
lda      #$00                          ; 0x1ea8e $EA7E A9 00                   ; A = 00
sta      $01                           ; 0x1ea90 $EA80 85 01                   ;
jsr      LE1BE                         ; 0x1ea92 $EA82 20 BE E1                ;
pla                                    ; 0x1ea95 $EA85 68                      ;
clc                                    ; 0x1ea96 $EA86 18                      ;
adc      #$02                          ; 0x1ea97 $EA87 69 02                   ;
sta      L0000                         ; 0x1ea99 $EA89 85 00                   ;
lda      #$00                          ; 0x1ea9b $EA8B A9 00                   ; A = 00
sta      $01                           ; 0x1ea9d $EA8D 85 01                   ;
jsr      LE1BE                         ; 0x1ea9f $EA8F 20 BE E1                ;
dex                                    ; 0x1eaa2 $EA92 CA                      ;
lda      L000E                         ; 0x1eaa3 $EA93 A5 0E                   ;
sta      $DC                           ; 0x1eaa5 $EA95 85 DC                   ;
lda      $0F                           ; 0x1eaa7 $EA97 A5 0F                   ;
sta      $DD                           ; 0x1eaa9 $EA99 85 DD                   ;
lda      $03                           ; 0x1eaab $EA9B A5 03                   ;
sta      $D9                           ; 0x1eaad $EA9D 85 D9                   ;; Thunder Spell modifier ?
rts                                    ; 0x1eaaf $EA9F 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table28                                                                  ;
.byt    $17,$09,$17,$09,$14,$0C,$14,$0C; 0x1eab0 $EAA0 17 09 17 09 14 0C 14 0C ;
.byt    $15,$0B,$15,$0B,$12,$0E,$12,$0E; 0x1eab8 $EAA8 15 0B 15 0B 12 0E 12 0E ;
.byt    $0E,$02,$0E,$02,$08,$08,$0E,$02; 0x1eac0 $EAB0 0E 02 0E 02 08 08 0E 02 ;
.byt    $0E,$02,$08,$08,$00,$0F,$04,$04; 0x1eac8 $EAB8 0E 02 08 08 00 0F 04 04 ;
LEAC0                                                                          ;
.byt    $E6,$E6,$FA,$FA,$00,$00,$E0,$E0; 0x1ead0 $EAC0 E6 E6 FA FA 00 00 E0 E0 ;
.byt    $EC,$EC,$F0,$F0,$FA,$FA,$E8,$E8; 0x1ead8 $EAC8 EC EC F0 F0 FA FA E8 E8 ;
.byt    $E7,$E7,$F8,$F8,$00,$EA,$E5,$E5; 0x1eae0 $EAD0 E7 E7 F8 F8 00 EA E5 E5 ;
.byt    $EB,$EB,$F0,$E1,$E0,$00,$F0,$E8; 0x1eae8 $EAD8 EB EB F0 E1 E0 00 F0 E8 ;
bank7_Tables_for_generating_pointers_in_the_6000_7FFF_range                    ;
.byt    $00,$D0,$A0,$70                ; 0x1eaf0 $EAE0 00 D0 A0 70             ;6000	60D0	61A0	6270
LEAE4                                                                          ;
.byt    $60,$60,$61,$62                ; 0x1eaf4 $EAE4 60 60 61 62             ;
; ---------------------------------------------------------------------------- ;
bank7_Generic_Collision_Test_with_Level_Objects                                ;
;bank7_Generic_Collision_Test_with_Level_Objects                               ;
;sets $e $f $2 and $3	, with Y as offset: based on location of link, below his foot	;60D3	Y=B0	54B0
;----                                                                          ;
;Collision Test with Level Objects                                             ;
;Determine Collision Tile Code                                                 ;
;                                                                              ;
;$0C = Link/Enemy Y Position Offset Index ?                                    ;
;                                                                              ;
;Output                                                                        ;
;                                                                              ;
;$03 = Row Number for Tile Code                                                ;
;$02 = Column Number for Tile Code                                             ;
;$02-$03 = Address of Tile Code in the 6000-633F range                         ;
sty      $0C                           ; 0x1eaf8 $EAE8 84 0C                   ;
lda      $4D,x                         ; 0x1eafa $EAEA B5 4D                   ; Link/Enemy X position (low byte)
clc                                    ; 0x1eafc $EAEC 18                      ;
adc      bank7_table28,y               ; 0x1eafd $EAED 79 A0 EA                ;
sta      L000E                         ; 0x1eb00 $EAF0 85 0E                   ;
lda      $3B,x                         ; 0x1eb02 $EAF2 B5 3B                   ; Link/Enemy X position (high byte)
adc      #$00                          ; 0x1eb04 $EAF4 69 00                   ;
cmp      #$04                          ; 0x1eb06 $EAF6 C9 04                   ;
bcs      LEB1D                         ; 0x1eb08 $EAF8 B0 23                   ;
tay                                    ; 0x1eb0a $EAFA A8                      ;
lda      L000E                         ; 0x1eb0b $EAFB A5 0E                   ;
lsr                                    ; 0x1eb0d $EAFD 4A                      ;
lsr                                    ; 0x1eb0e $EAFE 4A                      ;
lsr                                    ; 0x1eb0f $EAFF 4A                      ;
lsr                                    ; 0x1eb10 $EB00 4A                      ;
clc                                    ; 0x1eb11 $EB01 18                      ;
adc      bank7_Tables_for_generating_pointers_in_the_6000_7FFF_range,y; 0x1eb12 $EB02 79 E0 EA;
sta      L000E                         ; 0x1eb15 $EB05 85 0E                   ;
lda      LEAE4,y                       ; 0x1eb17 $EB07 B9 E4 EA                ;
sta      $0F                           ; 0x1eb1a $EB0A 85 0F                   ;
ldy      $0C                           ; 0x1eb1c $EB0C A4 0C                   ;
lda      $29,x                         ; 0x1eb1e $EB0E B5 29                   ; Link/Enemy Y Position
clc                                    ; 0x1eb20 $EB10 18                      ;
adc      LEAC0,y                       ; 0x1eb21 $EB11 79 C0 EA                ;
and      #$F0                          ; 0x1eb24 $EB14 29 F0                   ; keep bits xxxx ....
sta      $02                           ; 0x1eb26 $EB16 85 02                   ;
tay                                    ; 0x1eb28 $EB18 A8                      ;
cpy      #$D0                          ; 0x1eb29 $EB19 C0 D0                   ;
bcc      Label_EB20                    ; 0x1eb2b $EB1B 90 03                   ;
LEB1D                                                                          ;
lda      #$40                          ; 0x1eb2d $EB1D A9 40                   ; A = 40
Label_EB20 = * + $0001                                                         ;
; read from side scroll tile data ? 6000 to 63FF                               ;
; $EB20:B1 0E    LDA ($0E),Y 	@ $6151 = #$40                                   ;
bit      $0EB1                         ; 0x1eb2f $EB1F 2C B1 0E                ;
sta      $03                           ; 0x1eb32 $EB22 85 03                   ;
rts                                    ; 0x1eb34 $EB24 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN1                                                                 ;
.byt    $F5                            ; 0x1eb35 $EB25 F5                      ;Tile Mapping for Slashing Sword ?
LEB26                                                                          ;
.byt    $00                            ; 0x1eb36 $EB26 00                      ;
LEB27                                                                          ;
.byt    $02,$F5,$04,$06,$F5,$08,$0A,$F5; 0x1eb37 $EB27 02 F5 04 06 F5 08 0A F5 ;
.byt    $0C,$0E,$F5,$00,$02,$F5,$10,$12; 0x1eb3f $EB2F 0C 0E F5 00 02 F5 10 12 ;
.byt    $F5,$46,$48,$F5,$4A,$4C,$F5,$00; 0x1eb47 $EB37 F5 46 48 F5 4A 4C F5 00 ;
.byt    $02,$F5,$26,$06,$28,$2A,$30,$2C; 0x1eb4f $EB3F 02 F5 26 06 28 2A 30 2C ;
.byt    $2E,$F5,$34,$36,$38,$F5,$3A,$3C; 0x1eb57 $EB47 2E F5 34 36 38 F5 3A 3C ;
.byt    $F5,$46,$48,$4E,$50,$52,$56,$58; 0x1eb5f $EB4F F5 46 48 4E 50 52 56 58 ;
.byt    $F5,$5A,$5C,$5E,$F5,$1C,$1E,$F5; 0x1eb67 $EB57 F5 5A 5C 5E F5 1C 1E F5 ;
.byt    $20,$22,$F5,$08,$0A,$F5,$0C,$24; 0x1eb6f $EB5F 20 22 F5 08 0A F5 0C 24 ;
.byt    $28,$2A,$2C,$F5,$2E,$60,$34,$36; 0x1eb77 $EB67 28 2A 2C F5 2E 60 34 36 ;
.byt    $38,$F5,$3A,$62,$F5,$14,$16,$F5; 0x1eb7f $EB6F 38 F5 3A 62 F5 14 16 F5 ;
.byt    $18,$1A,$F5,$3E,$40,$F5,$42,$44; 0x1eb87 $EB77 18 1A F5 3E 40 F5 42 44 ;
.byt    $F5,$01,$01,$F5,$03,$03,$F5,$71; 0x1eb8f $EB7F F5 01 01 F5 03 03 F5 71 ;
.byt    $73,$F5,$75,$77,$F5,$21,$23,$F5; 0x1eb97 $EB87 73 F5 75 77 F5 21 23 F5 ;
.byt    $25,$27,$F5,$81,$83,$F5,$AD,$AF; 0x1eb9f $EB8F 25 27 F5 81 83 F5 AD AF ;
LEB97                                                                          ;
.byt    $00,$06,$0C,$18,$1E,$24,$12,$30; 0x1eba7 $EB97 00 06 0C 18 1E 24 12 30 ;
.byt    $36,$54,$4E,$5A,$60,$66,$6C,$10; 0x1ebaf $EB9F 36 54 4E 5A 60 66 6C 10 ;
.byt    $0C,$00,$04,$04                ; 0x1ebb7 $EBA7 0C 00 04 04             ;
LEBAB                                                                          ;
.byt    $00,$14                        ; 0x1ebbb $EBAB 00 14                   ;
LEBAD                                                                          ;
.byt    $EC,$0C,$08                    ; 0x1ebbd $EBAD EC 0C 08                ;
bank7_Table_for_Fairy_floating_movement                                        ;
.byt    $01,$02,$03,$04,$03,$02,$01,$00; 0x1ebc0 $EBB0 01 02 03 04 03 02 01 00 ;
; ---------------------------------------------------------------------------- ;
bank7_code47                                                                   ;
lda      $C8                           ; 0x1ebc8 $EBB8 A5 C8                   ;; go outside: set $c8 to 3
and      #$06                          ; 0x1ebca $EBBA 29 06                   ; keep bits .... .xx.
bne      LEBEF                         ; 0x1ebcc $EBBC D0 31                   ; if not Swamp, skip
lda      $12                           ; 0x1ebce $EBBE A5 12                   ;; Frame Counter (ascending)
and      #$38                          ; 0x1ebd0 $EBC0 29 38                   ; keep bits ..xx x...
lsr                                    ; 0x1ebd2 $EBC2 4A                      ;
lsr                                    ; 0x1ebd3 $EBC3 4A                      ;
lsr                                    ; 0x1ebd4 $EBC4 4A                      ;
tay                                    ; 0x1ebd5 $EBC5 A8                      ;
lda      $29                           ; 0x1ebd6 $EBC6 A5 29                   ; Link's Y position
adc      #$08                          ; 0x1ebd8 $EBC8 69 08                   ;
adc      bank7_Table_for_Fairy_floating_movement,y; 0x1ebda $EBCA 79 B0 EB     ;
sta      $0208                         ; 0x1ebdd $EBCD 8D 08 02                ;
lda      $CC                           ; 0x1ebe0 $EBD0 A5 CC                   ;; Link's X Position on Screen; Player X On Screen; Link's X Position on Screen
adc      #$0C                          ; 0x1ebe2 $EBD2 69 0C                   ;
sta      $020B                         ; 0x1ebe4 $EBD4 8D 0B 02                ;
lda      $12                           ; 0x1ebe7 $EBD7 A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1ebe9 $EBD9 29 04                   ; keep bits .... .x..
lsr                                    ; 0x1ebeb $EBDB 4A                      ;
adc      #$68                          ; 0x1ebec $EBDC 69 68                   ;
sta      $0209                         ; 0x1ebee $EBDE 8D 09 02                ;
ldy      #$01                          ; 0x1ebf1 $EBE1 A0 01                   ; Y = 01
lda      $050C                         ; 0x1ebf3 $EBE3 AD 0C 05                ; Timer for Link being in injured state
beq      LEBEC                         ; 0x1ebf6 $EBE6 F0 04                   ;
lsr                                    ; 0x1ebf8 $EBE8 4A                      ;
and      #$03                          ; 0x1ebf9 $EBE9 29 03                   ; keep bits .... ..xx
tay                                    ; 0x1ebfb $EBEB A8                      ;
LEBEC                                                                          ;
sty      $020A                         ; 0x1ebfc $EBEC 8C 0A 02                ;
LEBEF                                                                          ;
rts                                    ; 0x1ebff $EBEF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Links_Display_Routine                                                    ;
lda      $048D                         ; 0x1ec00 $EBF0 AD 8D 04                ; related to Link's flicker after being hit ?
bne      LEBEF                         ; 0x1ec03 $EBF3 D0 FA                   ;
ldx      #$00                          ; 0x1ec05 $EBF5 A2 00                   ; X = 00
stx      $11                           ; 0x1ec07 $EBF7 86 11                   ;
lda      #$08                          ; 0x1ec09 $EBF9 A9 08                   ; A = 08
sta      $90                           ; 0x1ec0b $EBFB 85 90                   ;
ldy      #$00                          ; 0x1ec0d $EBFD A0 00                   ; Y = 00
jsr      bank7_code51                  ; 0x1ec0f $EBFF 20 7D F2                ;
LEC02                                                                          ;
ldx      $11                           ; 0x1ec12 $EC02 A6 11                   ;
lda      $29,x                         ; 0x1ec14 $EC04 B5 29                   ; Link's Y Position ( ,X ?)
cpx      #$00                          ; 0x1ec16 $EC06 E0 00                   ;
bne      LEC17                         ; 0x1ec18 $EC08 D0 0D                   ;
ldy      $0479                         ; 0x1ec1a $EC0A AC 79 04                ;;jumping_state (2=going up, 1=coming down, 0=not jumping); Link is in mid-air ? (1 = mid-air, 0 = on ground); Link is in mid-air ? (1 = mid-air, 0 = on ground)
beq      LEC17                         ; 0x1ec1d $EC0D F0 08                   ;
ldy      $80,x                         ; 0x1ec1f $EC0F B4 80                   ; Link's Animation Frame
cpy      #$06                          ; 0x1ec21 $EC11 C0 06                   ; 06 = Ducked
bne      LEC17                         ; 0x1ec23 $EC13 D0 02                   ;
sbc      #$04                          ; 0x1ec25 $EC15 E9 04                   ;
LEC17                                                                          ;
sta      L0000                         ; 0x1ec27 $EC17 85 00                   ;
lda      #$F8                          ; 0x1ec29 $EC19 A9 F8                   ; A = F8
sta      $0480,x                       ; 0x1ec2b $EC1B 9D 80 04                ;
lda      $13                           ; 0x1ec2e $EC1E A5 13                   ;; Fairy state (0 = Not in Fairy state)	faery, flip from 8=faery,0=link (set $076F to 0, then set $13 to 0)	setting 76F to ff, changes 76F to 3B which prevents changing $13 from 8 to 0
bne      bank7_code47                  ; 0x1ec30 $EC20 D0 96                   ;
lda      $0752                         ; 0x1ec32 $EC22 AD 52 07                ;
beq      LEC40                         ; 0x1ec35 $EC25 F0 19                   ;
lda      $29                           ; 0x1ec37 $EC27 A5 29                   ; Link's Y Position
bpl      LEC40                         ; 0x1ec39 $EC29 10 15                   ;
lda      $70                           ; 0x1ec3b $EC2B A5 70                   ; Link's Walking Velocity
beq      LEC40                         ; 0x1ec3d $EC2D F0 11                   ;
lda      $12                           ; 0x1ec3f $EC2F A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1ec41 $EC31 4A                      ;
lsr                                    ; 0x1ec42 $EC32 4A                      ;
lsr                                    ; 0x1ec43 $EC33 4A                      ;
lsr                                    ; 0x1ec44 $EC34 4A                      ;
and      #$07                          ; 0x1ec45 $EC35 29 07                   ; keep bits .... .xxx
tay                                    ; 0x1ec47 $EC37 A8                      ;
lda      L0000                         ; 0x1ec48 $EC38 A5 00                   ;
sec                                    ; 0x1ec4a $EC3A 38                      ;
sbc      bank7_Table_for_Fairy_floating_movement,y; 0x1ec4b $EC3B F9 B0 EB     ;
sta      L0000                         ; 0x1ec4e $EC3E 85 00                   ;
LEC40                                                                          ;
ldy      $90,x                         ; 0x1ec50 $EC40 B4 90                   ;
lda      $80,x                         ; 0x1ec52 $EC42 B5 80                   ; Link's Animation Frame
tax                                    ; 0x1ec54 $EC44 AA                      ;
lda      LEB97,x                       ; 0x1ec55 $EC45 BD 97 EB                ;
tax                                    ; 0x1ec58 $EC48 AA                      ;
lda      $C8                           ; 0x1ec59 $EC49 A5 C8                   ;; go outside: set $c8 to 3
and      #$C0                          ; 0x1ec5b $EC4B 29 C0                   ; keep bits xx.. ....
bne      LEC62                         ; 0x1ec5d $EC4D D0 13                   ;
lda      $0752                         ; 0x1ec5f $EC4F AD 52 07                ;
pha                                    ; 0x1ec62 $EC52 48                      ;
lda      $070E                         ; 0x1ec63 $EC53 AD 0E 07                ;;setting to 1 will make link sink (duck into the chimney)
bne      LEC5B                         ; 0x1ec66 $EC56 D0 03                   ;
sta      $0752                         ; 0x1ec68 $EC58 8D 52 07                ;
LEC5B                                                                          ;
jsr      bank7_Sword_Slash_Display_maybe; 0x1ec6b $EC5B 20 7A ED               ;
pla                                    ; 0x1ec6e $EC5E 68                      ;
sta      $0752                         ; 0x1ec6f $EC5F 8D 52 07                ;
LEC62                                                                          ;
lda      $C8                           ; 0x1ec72 $EC62 A5 C8                   ;; go outside: set $c8 to 3
and      #$30                          ; 0x1ec74 $EC64 29 30                   ; keep bits ..xx ....
bne      LEC6B                         ; 0x1ec76 $EC66 D0 03                   ;
jsr      bank7_Sword_Slash_Display_maybe; 0x1ec78 $EC68 20 7A ED               ;
LEC6B                                                                          ;
ldy      #$14                          ; 0x1ec7b $EC6B A0 14                   ; Y = 14
LEC6D                                                                          ;
lda      $0209,y                       ; 0x1ec7d $EC6D B9 09 02                ;
cmp      #$F5                          ; 0x1ec80 $EC70 C9 F5                   ;
bne      LEC79                         ; 0x1ec82 $EC72 D0 05                   ;
lda      #$F8                          ; 0x1ec84 $EC74 A9 F8                   ; A = F8
sta      $0208,y                       ; 0x1ec86 $EC76 99 08 02                ;
LEC79                                                                          ;
dey                                    ; 0x1ec89 $EC79 88                      ;
dey                                    ; 0x1ec8a $EC7A 88                      ;
dey                                    ; 0x1ec8b $EC7B 88                      ;
dey                                    ; 0x1ec8c $EC7C 88                      ;
bpl      LEC6D                         ; 0x1ec8d $EC7D 10 EE                   ;
ldx      $11                           ; 0x1ec8f $EC7F A6 11                   ;
ldy      $90,x                         ; 0x1ec91 $EC81 B4 90                   ;
lda      $0203,y                       ; 0x1ec93 $EC83 B9 03 02                ;
sta      $15,x                         ; 0x1ec96 $EC86 95 15                   ;
lda      $80,x                         ; 0x1ec98 $EC88 B5 80                   ; Link's Animation Frame
cmp      #$0B                          ; 0x1ec9a $EC8A C9 0B                   ;
bne      LEC96                         ; 0x1ec9c $EC8C D0 08                   ;
lda      #$40                          ; 0x1ec9e $EC8E A9 40                   ;;A = #$40 0100_0000
sta      $020A,y                       ; 0x1eca0 $EC90 99 0A 02                ;
sta      $0216,y                       ; 0x1eca3 $EC93 99 16 02                ;
LEC96                                                                          ;
pha                                    ; 0x1eca6 $EC96 48                      ;
lda      $9F,x                         ; 0x1eca7 $EC97 B5 9F                   ;
tax                                    ; 0x1eca9 $EC99 AA                      ;
dex                                    ; 0x1ecaa $EC9A CA                      ;
pla                                    ; 0x1ecab $EC9B 68                      ;
cmp      #$05                          ; 0x1ecac $EC9C C9 05                   ; 05 = Sword Strike
bne      bank7_Strike_Ducked           ; 0x1ecae $EC9E D0 30                   ;
lda      #$32                          ; 0x1ecb0 $ECA0 A9 32                   ; A = 32 (tile for sword slash)
sta      $0219,y                       ; 0x1ecb2 $ECA2 99 19 02                ;
ldx      $11                           ; 0x1ecb5 $ECA5 A6 11                   ;
lda      $29,x                         ; 0x1ecb7 $ECA7 B5 29                   ; Link's Y Position ( ,X ?)
sta      $0218,y                       ; 0x1ecb9 $ECA9 99 18 02                ;
LECAC                                                                          ;
lda      $CC,x                         ; 0x1ecbc $ECAC B5 CC                   ;
pha                                    ; 0x1ecbe $ECAE 48                      ;
lda      $9F,x                         ; 0x1ecbf $ECAF B5 9F                   ;
tax                                    ; 0x1ecc1 $ECB1 AA                      ;
pla                                    ; 0x1ecc2 $ECB2 68                      ;
clc                                    ; 0x1ecc3 $ECB3 18                      ;
adc      #$0C                          ; 0x1ecc4 $ECB4 69 0C                   ;
clc                                    ; 0x1ecc6 $ECB6 18                      ;
adc      LEBAB,x                       ; 0x1ecc7 $ECB7 7D AB EB                ;
sta      $021B,y                       ; 0x1ecca $ECBA 99 1B 02                ;
php                                    ; 0x1eccd $ECBD 08                      ;
dex                                    ; 0x1ecce $ECBE CA                      ;
beq      LECC5                         ; 0x1eccf $ECBF F0 04                   ;
pla                                    ; 0x1ecd1 $ECC1 68                      ;
eor      #$01                          ; 0x1ecd2 $ECC2 49 01                   ; flip bits .... ...x
pha                                    ; 0x1ecd4 $ECC4 48                      ;
LECC5                                                                          ;
plp                                    ; 0x1ecd5 $ECC5 28                      ;
bcc      LECCD                         ; 0x1ecd6 $ECC6 90 05                   ;
lda      #$F8                          ; 0x1ecd8 $ECC8 A9 F8                   ; A = F8
sta      $0218,y                       ; 0x1ecda $ECCA 99 18 02                ;
LECCD                                                                          ;
jmp      LED67                         ; 0x1ecdd $ECCD 4C 67 ED                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Strike_Ducked                                                            ;
cmp      #$07                          ; 0x1ece0 $ECD0 C9 07                   ;
bne      bank7_Up_Stab                 ; 0x1ece2 $ECD2 D0 12                   ;
lda      #$54                          ; 0x1ece4 $ECD4 A9 54                   ; A = 54
sta      $0219,y                       ; 0x1ece6 $ECD6 99 19 02                ;
ldx      $11                           ; 0x1ece9 $ECD9 A6 11                   ;
lda      $29,x                         ; 0x1eceb $ECDB B5 29                   ;;y_pos (Link's y position in sideview)
clc                                    ; 0x1eced $ECDD 18                      ;
adc      #$10                          ; 0x1ecee $ECDE 69 10                   ;
sta      $0218,y                       ; 0x1ecf0 $ECE0 99 18 02                ;
jmp      LECAC                         ; 0x1ecf3 $ECE3 4C AC EC                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Up_Stab                                                                  ;
cmp      #$08                          ; 0x1ecf6 $ECE6 C9 08                   ;
bne      LED02                         ; 0x1ecf8 $ECE8 D0 18                   ;
LECEA                                                                          ;
ldx      $11                           ; 0x1ecfa $ECEA A6 11                   ;
lda      $15,x                         ; 0x1ecfc $ECEC B5 15                   ;
ldy      $9F,x                         ; 0x1ecfe $ECEE B4 9F                   ;
clc                                    ; 0x1ed00 $ECF0 18                      ;
adc      LEBAD,y                       ; 0x1ed01 $ECF1 79 AD EB                ;
sta      $047E,x                       ; 0x1ed04 $ECF4 9D 7E 04                ;
ldy      $90,x                         ; 0x1ed07 $ECF7 B4 90                   ;
lda      $29,x                         ; 0x1ed09 $ECF9 B5 29                   ;;y_pos (Link's y position in sideview)
sec                                    ; 0x1ed0b $ECFB 38                      ;
sbc      #$04                          ; 0x1ed0c $ECFC E9 04                   ;
sta      $0480,x                       ; 0x1ed0e $ECFE 9D 80 04                ;
rts                                    ; 0x1ed11 $ED01 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LED02                                                                          ;
ldx      $11                           ; 0x1ed12 $ED02 A6 11                   ;
lda      $80,x                         ; 0x1ed14 $ED04 B5 80                   ;
cmp      #$09                          ; 0x1ed16 $ED06 C9 09                   ; 09 = Downstab
bne      LED1B                         ; 0x1ed18 $ED08 D0 11                   ;
jsr      LECEA                         ; 0x1ed1a $ED0A 20 EA EC                ;
clc                                    ; 0x1ed1d $ED0D 18                      ;
adc      #$25                          ; 0x1ed1e $ED0E 69 25                   ;
sta      $0480,x                       ; 0x1ed20 $ED10 9D 80 04                ;
lda      $CC,x                         ; 0x1ed23 $ED13 B5 CC                   ;
clc                                    ; 0x1ed25 $ED15 18                      ;
adc      #$10                          ; 0x1ed26 $ED16 69 10                   ;
sta      $047E,x                       ; 0x1ed28 $ED18 9D 7E 04                ;
LED1B                                                                          ;
lda      $80                           ; 0x1ed2b $ED1B A5 80                   ; Link's Animation Frame
cmp      #$0C                          ; 0x1ed2d $ED1D C9 0C                   ; 0C = Item in hand
bcc      LED66                         ; 0x1ed2f $ED1F 90 45                   ;
lda      $049D                         ; 0x1ed31 $ED21 AD 9D 04                ;;hold item above head: item id	; Related to Palace Item
asl                                    ; 0x1ed34 $ED24 0A                      ;
tay                                    ; 0x1ed35 $ED25 A8                      ;
lda      LEE7F,y                       ; 0x1ed36 $ED26 B9 7F EE                ; Tile Mapping for Item Y
sta      $0221                         ; 0x1ed39 $ED29 8D 21 02                ;
lda      LEE80,y                       ; 0x1ed3c $ED2C B9 80 EE                ;
sta      $0225                         ; 0x1ed3f $ED2F 8D 25 02                ;
lda      $29                           ; 0x1ed42 $ED32 A5 29                   ; Link's Y Position
sec                                    ; 0x1ed44 $ED34 38                      ;
sbc      #$10                          ; 0x1ed45 $ED35 E9 10                   ;
sta      $0220                         ; 0x1ed47 $ED37 8D 20 02                ;
sta      $0224                         ; 0x1ed4a $ED3A 8D 24 02                ;
lda      $CC                           ; 0x1ed4d $ED3D A5 CC                   ; Link's X Position on Screen
clc                                    ; 0x1ed4f $ED3F 18                      ;
adc      #$08                          ; 0x1ed50 $ED40 69 08                   ;
sta      $0223                         ; 0x1ed52 $ED42 8D 23 02                ;
adc      #$08                          ; 0x1ed55 $ED45 69 08                   ;
sta      $0227                         ; 0x1ed57 $ED47 8D 27 02                ;
lda      #$01                          ; 0x1ed5a $ED4A A9 01                   ; A = 01
sta      $0222                         ; 0x1ed5c $ED4C 8D 22 02                ;
lda      #$41                          ; 0x1ed5f $ED4F A9 41                   ; A = 41
sta      $0226                         ; 0x1ed61 $ED51 8D 26 02                ;
ldy      $049D                         ; 0x1ed64 $ED54 AC 9D 04                ;;hold item above head: item id	; Related to Palace Item
cpy      #$10                          ; 0x1ed67 $ED57 C0 10                   ;
bcc      LED66                         ; 0x1ed69 $ED59 90 0B                   ;
lda      LF0FC,y                       ; 0x1ed6b $ED5B B9 FC F0                ;
sta      $0222                         ; 0x1ed6e $ED5E 8D 22 02                ;
ora      #$40                          ; 0x1ed71 $ED61 09 40                   ; set bits  .x.. ....
sta      $0226                         ; 0x1ed73 $ED63 8D 26 02                ;
LED66                                                                          ;
rts                                    ; 0x1ed76 $ED66 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LED67                                                                          ;
ldx      $11                           ; 0x1ed77 $ED67 A6 11                   ;
lda      $0218,y                       ; 0x1ed79 $ED69 B9 18 02                ;
sta      $0480,x                       ; 0x1ed7c $ED6C 9D 80 04                ;
lda      $021B,y                       ; 0x1ed7f $ED6F B9 1B 02                ;
sta      $047E,x                       ; 0x1ed82 $ED72 9D 7E 04                ;
LED77     = * + $0002                                                          ;
jmp      LED02                         ; 0x1ed85 $ED75 4C 02 ED                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table29                                                                  ;
.byt    $F8,$08                        ; 0x1ed88 $ED78 F8 08                   ;
; ---------------------------------------------------------------------------- ;
bank7_Sword_Slash_Display_maybe                                                ;
sty      $08                           ; 0x1ed8a $ED7A 84 08                   ;
stx      $09                           ; 0x1ed8c $ED7C 86 09                   ;
lda      bank7_UNKNOWN1,x              ; 0x1ed8e $ED7E BD 25 EB                ;
sta      $0201,y                       ; 0x1ed91 $ED81 99 01 02                ;
lda      LEB26,x                       ; 0x1ed94 $ED84 BD 26 EB                ;
sta      $0205,y                       ; 0x1ed97 $ED87 99 05 02                ;
lda      LEB27,x                       ; 0x1ed9a $ED8A BD 27 EB                ;
sta      $0209,y                       ; 0x1ed9d $ED8D 99 09 02                ;
lda      #$00                          ; 0x1eda0 $ED90 A9 00                   ; A = 00
sta      $01                           ; 0x1eda2 $ED92 85 01                   ;
ldx      $11                           ; 0x1eda4 $ED94 A6 11                   ;
lda      $C8,x                         ; 0x1eda6 $ED96 B5 C8                   ;
sta      $0B                           ; 0x1eda8 $ED98 85 0B                   ;
lda      $CC,x                         ; 0x1edaa $ED9A B5 CC                   ;
pha                                    ; 0x1edac $ED9C 48                      ;
lda      $9F,x                         ; 0x1edad $ED9D B5 9F                   ;
ldy      $80,x                         ; 0x1edaf $ED9F B4 80                   ;
tax                                    ; 0x1edb1 $EDA1 AA                      ;
pla                                    ; 0x1edb2 $EDA2 68                      ;
cpy      #$04                          ; 0x1edb3 $EDA3 C0 04                   ;
bne      LEDC1                         ; 0x1edb5 $EDA5 D0 1A                   ;
clc                                    ; 0x1edb7 $EDA7 18                      ;
adc      LED77,x                       ; 0x1edb8 $EDA8 7D 77 ED                ;
pha                                    ; 0x1edbb $EDAB 48                      ;
stx      $D9                           ; 0x1edbc $EDAC 86 D9                   ;; Thunder Spell modifier ?
ldx      #$00                          ; 0x1edbe $EDAE A2 00                   ; X = 00
ldy      #$00                          ; 0x1edc0 $EDB0 A0 00                   ; Y = 00
jsr      LF2D3                         ; 0x1edc2 $EDB2 20 D3 F2                ;
lsr                                    ; 0x1edc5 $EDB5 4A                      ;
lsr                                    ; 0x1edc6 $EDB6 4A                      ;
lsr                                    ; 0x1edc7 $EDB7 4A                      ;
dec      $D9                           ; 0x1edc8 $EDB8 C6 D9                   ;; Thunder Spell modifier ?
bne      LEDBE                         ; 0x1edca $EDBA D0 02                   ;
lsr                                    ; 0x1edcc $EDBC 4A                      ;
lsr                                    ; 0x1edcd $EDBD 4A                      ;
LEDBE                                                                          ;
sta      $0B                           ; 0x1edce $EDBE 85 0B                   ;
pla                                    ; 0x1edd0 $EDC0 68                      ;
LEDC1                                                                          ;
sta      $02                           ; 0x1edd1 $EDC1 85 02                   ;
ldx      $11                           ; 0x1edd3 $EDC3 A6 11                   ;
lda      $9F,x                         ; 0x1edd5 $EDC5 B5 9F                   ;
ldx      $09                           ; 0x1edd7 $EDC7 A6 09                   ;
ldy      $08                           ; 0x1edd9 $EDC9 A4 08                   ;
lsr                                    ; 0x1eddb $EDCB 4A                      ;
bne      LEDE7                         ; 0x1eddc $EDCC D0 19                   ;
asl      $0B                           ; 0x1edde $EDCE 06 0B                   ;
lda      bank7_UNKNOWN1,x              ; 0x1ede0 $EDD0 BD 25 EB                ;
sta      $0209,y                       ; 0x1ede3 $EDD3 99 09 02                ;
lda      LEB27,x                       ; 0x1ede6 $EDD6 BD 27 EB                ;
sta      $0201,y                       ; 0x1ede9 $EDD9 99 01 02                ;
lda      $02                           ; 0x1edec $EDDC A5 02                   ;
clc                                    ; 0x1edee $EDDE 18                      ;
adc      #$08                          ; 0x1edef $EDDF 69 08                   ;
sta      $02                           ; 0x1edf1 $EDE1 85 02                   ;
lda      #$40                          ; 0x1edf3 $EDE3 A9 40                   ; A = 40
sta      $01                           ; 0x1edf5 $EDE5 85 01                   ;
LEDE7                                                                          ;
ldx      $11                           ; 0x1edf7 $EDE7 A6 11                   ;
lda      $050C,x                       ; 0x1edf9 $EDE9 BD 0C 05                ;
beq      LEDF1                         ; 0x1edfc $EDEC F0 03                   ;
lsr                                    ; 0x1edfe $EDEE 4A                      ;
and      #$03                          ; 0x1edff $EDEF 29 03                   ; keep bits .... ..xx
LEDF1                                                                          ;
ora      $01                           ; 0x1ee01 $EDF1 05 01                   ;
ora      $0752,x                       ; 0x1ee03 $EDF3 1D 52 07                ;
ldx      $B5                           ; 0x1ee06 $EDF6 A6 B5                   ;;2 will make link die in lava	;3 move right like when win game at dark link
dex                                    ; 0x1ee08 $EDF8 CA                      ;
beq      LEDFD                         ; 0x1ee09 $EDF9 F0 02                   ;
ora      #$20                          ; 0x1ee0b $EDFB 09 20                   ; set bits  ..x. ....
LEDFD                                                                          ;
sta      $0202,y                       ; 0x1ee0d $EDFD 99 02 02                ;
sta      $0206,y                       ; 0x1ee10 $EE00 99 06 02                ;
sta      $020A,y                       ; 0x1ee13 $EE03 99 0A 02                ;
sta      $020E,y                       ; 0x1ee16 $EE06 99 0E 02                ;
lda      L0000                         ; 0x1ee19 $EE09 A5 00                   ;
sta      $0200,y                       ; 0x1ee1b $EE0B 99 00 02                ;
sta      $0204,y                       ; 0x1ee1e $EE0E 99 04 02                ;
sta      $0208,y                       ; 0x1ee21 $EE11 99 08 02                ;
clc                                    ; 0x1ee24 $EE14 18                      ;
adc      #$10                          ; 0x1ee25 $EE15 69 10                   ;
sta      L0000                         ; 0x1ee27 $EE17 85 00                   ;
lda      #$08                          ; 0x1ee29 $EE19 A9 08                   ; A = 08
sta      $0A                           ; 0x1ee2b $EE1B 85 0A                   ;
ldx      #$03                          ; 0x1ee2d $EE1D A2 03                   ; X = 03
LEE1F                                                                          ;
lda      $0A                           ; 0x1ee2f $EE1F A5 0A                   ;
and      $0B                           ; 0x1ee31 $EE21 25 0B                   ;
beq      LEE2A                         ; 0x1ee33 $EE23 F0 05                   ;
lda      #$F8                          ; 0x1ee35 $EE25 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1ee37 $EE27 99 00 02                ;
LEE2A                                                                          ;
iny                                    ; 0x1ee3a $EE2A C8                      ;
iny                                    ; 0x1ee3b $EE2B C8                      ;
iny                                    ; 0x1ee3c $EE2C C8                      ;
iny                                    ; 0x1ee3d $EE2D C8                      ;
lsr      $0A                           ; 0x1ee3e $EE2E 46 0A                   ;
dex                                    ; 0x1ee40 $EE30 CA                      ;
bne      LEE1F                         ; 0x1ee41 $EE31 D0 EC                   ;
ldy      $08                           ; 0x1ee43 $EE33 A4 08                   ;
ldx      $09                           ; 0x1ee45 $EE35 A6 09                   ;
lda      $02                           ; 0x1ee47 $EE37 A5 02                   ;
sta      $0203,y                       ; 0x1ee49 $EE39 99 03 02                ;
clc                                    ; 0x1ee4c $EE3C 18                      ;
adc      #$08                          ; 0x1ee4d $EE3D 69 08                   ;
sta      $0207,y                       ; 0x1ee4f $EE3F 99 07 02                ;
clc                                    ; 0x1ee52 $EE42 18                      ;
adc      #$08                          ; 0x1ee53 $EE43 69 08                   ;
sta      $020B,y                       ; 0x1ee55 $EE45 99 0B 02                ;
inx                                    ; 0x1ee58 $EE48 E8                      ;
inx                                    ; 0x1ee59 $EE49 E8                      ;
inx                                    ; 0x1ee5a $EE4A E8                      ;
tya                                    ; 0x1ee5b $EE4B 98                      ;
clc                                    ; 0x1ee5c $EE4C 18                      ;
adc      #$0C                          ; 0x1ee5d $EE4D 69 0C                   ;
tay                                    ; 0x1ee5f $EE4F A8                      ;
rts                                    ; 0x1ee60 $EE50 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table_item_sprites_map_to_graphic_image                                  ;
;this means: tile code of the item                                             ;
;the item has a tile code (a number) associated which is used to index in the graphics table (or something);
.byt    $86                            ; 0x1ee61 $EE51 86                      ;
LEE52                                                                          ;
.byt    $86,$88,$88,$DC,$DE,$AC,$AC,$E4; 0x1ee62 $EE52 86 88 88 DC DE AC AC E4 ;
.byt    $E6,$E8,$EA,$C0,$C2,$C0,$C4,$BA; 0x1ee6a $EE5A E6 E8 EA C0 C2 C0 C4 BA ;
.byt    $BC,$C6,$C8,$CA,$CC,$50,$50,$4E; 0x1ee72 $EE62 BC C6 C8 CA CC 50 50 4E ;
.byt    $4E,$7C,$7E,$80,$82,$B6,$B8,$BB; 0x1ee7a $EE6A 4E 7C 7E 80 82 B6 B8 BB ;
.byt    $BD,$BF,$C1,$C3,$C3,$B2,$B2,$B4; 0x1ee82 $EE72 BD BF C1 C3 C3 B2 B2 B4 ;
.byt    $B4,$24,$24,$B0,$B0            ; 0x1ee8a $EE7A B4 24 24 B0 B0          ;
LEE7F                                                                          ;
.byt    $8C                            ; 0x1ee8f $EE7F 8C                      ;
; Tile Mappings for Items (2E bytes)                                           ;
;                                                                              ;
; 8C F5	Candle                                                                 ;
; 8E F5	Glove                                                                  ;
; 90 F5	Raft                                                                   ;
; 92 F5	Boot                                                                   ;
; 94 F5	Flute                                                                  ;
; 96 F5	Cross                                                                  ;
; 98 F5	Hammer                                                                 ;
; 9A F5	Magic Key                                                              ;
; 66 F5	Key                                                                    ;
; 00 F5	Invalid Index                                                          ;
; 72 F5	Experience Bag - 50 pts                                                ;
; 72 F5	Experience Bag - 100 pts                                               ;
; 72 F5	Experience Bag - 200 pts                                               ;
; 72 F5	Experience Bag - 500 pts                                               ;
; 83 83	Magic Container                                                        ;
; 81 81	Heart Container                                                        ;
; 8A F5	Blue Jar                                                               ;
; 8A F5	Red Jar                                                                ;
; A8 F5	Link Doll                                                              ;
; 31 31	Medicine                                                               ;
; 2F 2F	Trophy                                                                 ;
; 31 31	Kidnapped Child                                                        ;
; 67 67	Invalid Index ?                                                        ;
LEE80                                                                          ;
.byt    $F5,$8E,$F5,$90,$F5,$92,$F5,$94; 0x1ee90 $EE80 F5 8E F5 90 F5 92 F5 94 ;
.byt    $F5,$96,$F5,$98,$F5,$9A,$F5,$66; 0x1ee98 $EE88 F5 96 F5 98 F5 9A F5 66 ;
.byt    $F5,$00,$F5,$72,$F5,$72,$F5,$72; 0x1eea0 $EE90 F5 00 F5 72 F5 72 F5 72 ;
.byt    $F5,$72,$F5,$83,$83,$81,$81,$8A; 0x1eea8 $EE98 F5 72 F5 83 83 81 81 8A ;
.byt    $F5,$8A,$F5,$A8,$F5,$31,$31,$2F; 0x1eeb0 $EEA0 F5 8A F5 A8 F5 31 31 2F ;
.byt    $2F,$31,$31,$67,$67,$00,$02,$02; 0x1eeb8 $EEA8 2F 31 31 67 67 00 02 02 ;
.byt    $00,$00                        ; 0x1eec0 $EEB0 00 00                   ;
LEEB2                                                                          ;
.byt    $C0,$18,$90,$11,$98,$9D,$0E,$04; 0x1eec2 $EEB2 C0 18 90 11 98 9D 0E 04 ;
.byt    $B5,$91,$48,$69,$0F,$95,$91,$20; 0x1eeca $EEBA B5 91 48 69 0F 95 91 20 ;
.byt    $11,$EF,$68,$95,$91,$A9,$00,$9D; 0x1eed2 $EEC2 11 EF 68 95 91 A9 00 9D ;
.byt    $0E,$04,$B4,$A1,$B9,$1D,$6E,$48; 0x1eeda $EECA 0E 04 B4 A1 B9 1D 6E 48 ;
.byt    $B5,$2A,$85,$00,$A5,$CD,$85,$01; 0x1eee2 $EED2 B5 2A 85 00 A5 CD 85 01 ;
.byt    $A9,$02,$85,$02,$A5,$12,$0A,$0A; 0x1eeea $EEDA A9 02 85 02 A5 12 0A 0A ;
.byt    $0A,$0A,$0A,$29,$80,$09,$01,$85; 0x1eef2 $EEE2 0A 0A 0A 29 80 09 01 85 ;
.byt    $03,$B4,$91,$BD,$04,$05,$4A,$4A; 0x1eefa $EEEA 03 B4 91 BD 04 05 4A 4A ;
.byt    $4A,$AA,$BD,$AD,$EE,$AA,$20,$16; 0x1ef02 $EEF2 4A AA BD AD EE AA 20 16 ;
.byt    $F2,$20,$08,$EF,$68,$10,$05,$CA; 0x1ef0a $EEFA F2 20 08 EF 68 10 05 CA ;
.byt    $CA                            ; 0x1ef12 $EF02 CA                      ;
; ---------------------------------------------------------------------------- ;
bank7_code49                                                                   ;
jsr      LF216                         ; 0x1ef13 $EF03 20 16 F2                ;
ldx      $10                           ; 0x1ef16 $EF06 A6 10                   ;; used as monster x register ;draw boss hp bar
LEF08                                                                          ;
lda      $01FE,y                       ; 0x1ef18 $EF08 B9 FE 01                ;
ora      #$40                          ; 0x1ef1b $EF0B 09 40                   ; set bits .x.. ....
sta      $01FE,y                       ; 0x1ef1d $EF0D 99 FE 01                ;
rts                                    ; 0x1ef20 $EF10 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Display                                                                  ;
lda      $040E,x                       ; 0x1ef21 $EF11 BD 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LEF19                         ; 0x1ef24 $EF14 F0 03                   ;
dec      $040E,x                       ; 0x1ef26 $EF16 DE 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
LEF19                                                                          ;
lda      $2A,x                         ; 0x1ef29 $EF19 B5 2A                   ; Enemy Y Position
sta      L0000                         ; 0x1ef2b $EF1B 85 00                   ;
lda      $CD                           ; 0x1ef2d $EF1D A5 CD                   ;
sta      $01                           ; 0x1ef2f $EF1F 85 01                   ;
lda      $60,x                         ; 0x1ef31 $EF21 B5 60                   ;; Enemy facing direction
sta      $02                           ; 0x1ef33 $EF23 85 02                   ;
lda      #$00                          ; 0x1ef35 $EF25 A9 00                   ; A = 00
sta      $03                           ; 0x1ef37 $EF27 85 03                   ;
lda      $A1,x                         ; 0x1ef39 $EF29 B5 A1                   ; Enemy Code
tay                                    ; 0x1ef3b $EF2B A8                      ;
lda      $6DD5,y                       ; 0x1ef3c $EF2C B9 D5 6D                ;
asl                                    ; 0x1ef3f $EF2F 0A                      ;
rol      $03                           ; 0x1ef40 $EF30 26 03                   ;
asl                                    ; 0x1ef42 $EF32 0A                      ;
rol      $03                           ; 0x1ef43 $EF33 26 03                   ;
tya                                    ; 0x1ef45 $EF35 98                      ;
asl                                    ; 0x1ef46 $EF36 0A                      ;
tay                                    ; 0x1ef47 $EF37 A8                      ;
lda      $6E65,y                       ; 0x1ef48 $EF38 B9 65 6E                ;
sta      L000E                         ; 0x1ef4b $EF3B 85 0E                   ;
lda      $6E66,y                       ; 0x1ef4d $EF3D B9 66 6E                ;
sta      $0F                           ; 0x1ef50 $EF40 85 0F                   ;
ldy      $91,x                         ; 0x1ef52 $EF42 B4 91                   ;
jmp      (L000E)                       ; 0x1ef54 $EF44 6C 0E 00                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Elevator                                                 ;
ldx      #$06                          ; 0x1ef57 $EF47 A2 06                   ; X = 06
jsr      LF216                         ; 0x1ef59 $EF49 20 16 F2                ;
dex                                    ; 0x1ef5c $EF4C CA                      ;
dex                                    ; 0x1ef5d $EF4D CA                      ;
iny                                    ; 0x1ef5e $EF4E C8                      ;
iny                                    ; 0x1ef5f $EF4F C8                      ;
iny                                    ; 0x1ef60 $EF50 C8                      ;
iny                                    ; 0x1ef61 $EF51 C8                      ;
lda      L0000                         ; 0x1ef62 $EF52 A5 00                   ;
clc                                    ; 0x1ef64 $EF54 18                      ;
adc      #$18                          ; 0x1ef65 $EF55 69 18                   ;
sta      L0000                         ; 0x1ef67 $EF57 85 00                   ;
jsr      LF216                         ; 0x1ef69 $EF59 20 16 F2                ;
lda      L0000                         ; 0x1ef6c $EF5C A5 00                   ;
sec                                    ; 0x1ef6e $EF5E 38                      ;
sbc      #$10                          ; 0x1ef6f $EF5F E9 10                   ;
sta      $0200,y                       ; 0x1ef71 $EF61 99 00 02                ;
sec                                    ; 0x1ef74 $EF64 38                      ;
sbc      #$28                          ; 0x1ef75 $EF65 E9 28                   ;
sta      $01F4,y                       ; 0x1ef77 $EF67 99 F4 01                ;
lda      $01                           ; 0x1ef7a $EF6A A5 01                   ;
clc                                    ; 0x1ef7c $EF6C 18                      ;
adc      #$10                          ; 0x1ef7d $EF6D 69 10                   ;
sta      $01F7,y                       ; 0x1ef7f $EF6F 99 F7 01                ;
sta      $0203,y                       ; 0x1ef82 $EF72 99 03 02                ;
ldx      #$AC                          ; 0x1ef85 $EF75 A2 AC                   ; X = AC
lda      $C9                           ; 0x1ef87 $EF77 A5 C9                   ;
and      #$02                          ; 0x1ef89 $EF79 29 02                   ; keep bits .... ..x.
beq      LEF7F                         ; 0x1ef8b $EF7B F0 02                   ;
ldx      #$F5                          ; 0x1ef8d $EF7D A2 F5                   ; X = F5
LEF7F                                                                          ;
txa                                    ; 0x1ef8f $EF7F 8A                      ;
sta      $01F5,y                       ; 0x1ef90 $EF80 99 F5 01                ;
sta      $0201,y                       ; 0x1ef93 $EF83 99 01 02                ;
lda      #$01                          ; 0x1ef96 $EF86 A9 01                   ; A = 01
sta      $01F6,y                       ; 0x1ef98 $EF88 99 F6 01                ;
sta      $0202,y                       ; 0x1ef9b $EF8B 99 02 02                ;
ldx      $10                           ; 0x1ef9e $EF8E A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1efa0 $EF90 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Bot_and_Bit                                              ;
lda      #$02                          ; 0x1efa1 $EF91 A9 02                   ; A = 02
sta      $02                           ; 0x1efa3 $EF93 85 02                   ;
lda      $81,x                         ; 0x1efa5 $EF95 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$26                          ; 0x1efa7 $EF97 A2 26                   ; X = 26
cmp      #$00                          ; 0x1efa9 $EF99 C9 00                   ;
beq      LEF9F                         ; 0x1efab $EF9B F0 02                   ;
inx                                    ; 0x1efad $EF9D E8                      ;
inx                                    ; 0x1efae $EF9E E8                      ;
LEF9F                                                                          ;
jsr      LF216                         ; 0x1efaf $EF9F 20 16 F2                ;
tya                                    ; 0x1efb2 $EFA2 98                      ;
tax                                    ; 0x1efb3 $EFA3 AA                      ;
ldy      $10                           ; 0x1efb4 $EFA4 A4 10                   ;; used as monster x register ;draw boss hp bar
lda      $AF,y                         ; 0x1efb6 $EFA6 B9 AF 00                ;
beq      LEFB7                         ; 0x1efb9 $EFA9 F0 0C                   ;
lda      $12                           ; 0x1efbb $EFAB A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1efbd $EFAD 29 04                   ; keep bits .... .x..
bne      LEFB7                         ; 0x1efbf $EFAF D0 06                   ;
inc      $01FB,x                       ; 0x1efc1 $EFB1 FE FB 01                ;
dec      $01FF,x                       ; 0x1efc4 $EFB4 DE FF 01                ;
LEFB7                                                                          ;
lda      $01FA,x                       ; 0x1efc7 $EFB7 BD FA 01                ;
ora      #$40                          ; 0x1efca $EFBA 09 40                   ; set  bits .x.. ....
sta      $01FE,x                       ; 0x1efcc $EFBC 9D FE 01                ;
ldx      $10                           ; 0x1efcf $EFBF A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1efd1 $EFC1 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Myu                                                      ;
lda      #$02                          ; 0x1efd2 $EFC2 A9 02                   ; A = 02
sta      $02                           ; 0x1efd4 $EFC4 85 02                   ;
lda      $81,x                         ; 0x1efd6 $EFC6 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$2A                          ; 0x1efd8 $EFC8 A2 2A                   ; A = 2A
asl                                    ; 0x1efda $EFCA 0A                      ;
beq      LEFCF                         ; 0x1efdb $EFCB F0 02                   ;
inx                                    ; 0x1efdd $EFCD E8                      ;
inx                                    ; 0x1efde $EFCE E8                      ;
LEFCF                                                                          ;
jmp      bank7_code49                  ; 0x1efdf $EFCF 4C 03 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_unknown                                                  ;
lda      #$02                          ; 0x1efe2 $EFD2 A9 02                   ; A = 02
sta      $02                           ; 0x1efe4 $EFD4 85 02                   ;
lda      $AF,x                         ; 0x1efe6 $EFD6 B5 AF                   ;; Various enemy state variables
ldx      #$20                          ; 0x1efe8 $EFD8 A2 20                   ; X = 20
cmp      #$00                          ; 0x1efea $EFDA C9 00                   ;
beq      LEFE6                         ; 0x1efec $EFDC F0 08                   ;
ldx      #$22                          ; 0x1efee $EFDE A2 22                   ; X = 22
cmp      #$08                          ; 0x1eff0 $EFE0 C9 08                   ;
bcc      LEFE6                         ; 0x1eff2 $EFE2 90 02                   ;
ldx      #$24                          ; 0x1eff4 $EFE4 A2 24                   ; X = 24
LEFE6                                                                          ;
jmp      LF0C6                         ; 0x1eff6 $EFE6 4C C6 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LEFE9                                                                          ;
.byt    $03                            ; 0x1eff9 $EFE9 03                      ;
.byt    $03                            ; 0x1effa $EFEA 03                      ;
.byt    $02                            ; 0x1effb $EFEB 02                      ;
.byt    $02                            ; 0x1effc $EFEC 02                      ;
ora      ($01,x)                       ; 0x1effd $EFED 01 01                   ;
brk                                    ; 0x1efff $EFEF 00                      ;
brk                                    ; 0x1f000 $EFF0 00                      ;
brk                                    ; 0x1f001 $EFF1 00                      ;
bank7_Enemy_Routines2_Moa                                                      ;
lda      #$01                          ; 0x1f002 $EFF2 A9 01                   ; A = 01
sta      $02                           ; 0x1f004 $EFF4 85 02                   ;
lda      $71,x                         ; 0x1f006 $EFF6 B5 71                   ;; Enemy X Velocity
bpl      LEFFC                         ; 0x1f008 $EFF8 10 02                   ;
inc      $02                           ; 0x1f00a $EFFA E6 02                   ;
LEFFC                                                                          ;
ldx      #$1E                          ; 0x1f00c $EFFC A2 1E                   ; X = 1E
lda      $12                           ; 0x1f00e $EFFE A5 12                   ;; Frame Counter (ascending)
LF000                                                                          ;
and      #$10                          ; 0x1f010 $F000 29 10                   ; keep bits ...x ....
bne      LF00A                         ; 0x1f012 $F002 D0 06                   ;
lda      $03                           ; 0x1f014 $F004 A5 03                   ;
ora      #$80                          ; 0x1f016 $F006 09 80                   ; set  bits x... ....
sta      $03                           ; 0x1f018 $F008 85 03                   ;
LF00A                                                                          ;
jsr      LF216                         ; 0x1f01a $F00A 20 16 F2                ;
ldx      $10                           ; 0x1f01d $F00D A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      $91,x                         ; 0x1f01f $F00F B4 91                   ;
lda      $71,x                         ; 0x1f021 $F011 B5 71                   ;; Enemy X Velocity
bpl      LF017                         ; 0x1f023 $F013 10 02                   ;
eor      #$FF                          ; 0x1f025 $F015 49 FF                   ;;Flip Bits:1111_1111
LF017                                                                          ;
lsr                                    ; 0x1f027 $F017 4A                      ;
lsr                                    ; 0x1f028 $F018 4A                      ;
tax                                    ; 0x1f029 $F019 AA                      ;
lda      $0207,y                       ; 0x1f02a $F01A B9 07 02                ;
sec                                    ; 0x1f02d $F01D 38                      ;
sbc      LEFE9,x                       ; 0x1f02e $F01E FD E9 EF                ;
sta      $0207,y                       ; 0x1f031 $F021 99 07 02                ;
ldx      $10                           ; 0x1f034 $F024 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f036 $F026 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Deeler                                                   ;
lda      $03                           ; 0x1f037 $F027 A5 03                   ;
ldy      $AF,x                         ; 0x1f039 $F029 B4 AF                   ;; Various enemy state variables
bne      LF02F                         ; 0x1f03b $F02B D0 02                   ;
ora      #$80                          ; 0x1f03d $F02D 09 80                   ; set  bits x... .... (vertical flip bit)
LF02F                                                                          ;
cpy      #$00                          ; 0x1f03f $F02F C0 00                   ;
bpl      LF037                         ; 0x1f041 $F031 10 04                   ;
inc      L0000                         ; 0x1f043 $F033 E6 00                   ;
inc      L0000                         ; 0x1f045 $F035 E6 00                   ;
LF037                                                                          ;
sta      $03                           ; 0x1f047 $F037 85 03                   ;
ldy      $91,x                         ; 0x1f049 $F039 B4 91                   ;
lda      $12                           ; 0x1f04b $F03B A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1f04d $F03D 4A                      ;
lsr                                    ; 0x1f04e $F03E 4A                      ;
lsr                                    ; 0x1f04f $F03F 4A                      ;
and      #$01                          ; 0x1f050 $F040 29 01                   ; keep bits .... ...x
tax                                    ; 0x1f052 $F042 AA                      ;
inx                                    ; 0x1f053 $F043 E8                      ;
stx      $02                           ; 0x1f054 $F044 86 02                   ;
ldx      #$10                          ; 0x1f056 $F046 A2 10                   ; X = 10
jsr      LF0C6                         ; 0x1f058 $F048 20 C6 F0                ;
lda      $C9                           ; 0x1f05b $F04B A5 C9                   ;
and      #$0C                          ; 0x1f05d $F04D 29 0C                   ; keep bits .... xx..
bne      LF0A7                         ; 0x1f05f $F04F D0 56                   ;
lda      $AF,x                         ; 0x1f061 $F051 B5 AF                   ;; Various enemy state variables
bmi      LF0A7                         ; 0x1f063 $F053 30 52                   ;
ldy      $91,x                         ; 0x1f065 $F055 B4 91                   ;
lda      $2A,x                         ; 0x1f067 $F057 B5 2A                   ; Enemy Y position
sec                                    ; 0x1f069 $F059 38                      ;
sbc      $05DD                         ; 0x1f06a $F05A ED DD 05                ;
beq      LF0A7                         ; 0x1f06d $F05D F0 48                   ;
ldy      #$FF                          ; 0x1f06f $F05F A0 FF                   ; Y = FF
LF061                                                                          ;
iny                                    ; 0x1f071 $F061 C8                      ;
sec                                    ; 0x1f072 $F062 38                      ;
sbc      #$03                          ; 0x1f073 $F063 E9 03                   ;
bpl      LF061                         ; 0x1f075 $F065 10 FA                   ;
sty      L0000                         ; 0x1f077 $F067 84 00                   ;
ldy      $91,x                         ; 0x1f079 $F069 B4 91                   ;
lda      $12                           ; 0x1f07b $F06B A5 12                   ;; Frame Counter (ascending)
lsr                                    ; 0x1f07d $F06D 4A                      ;
lda      L0000                         ; 0x1f07e $F06E A5 00                   ;
bcc      LF074                         ; 0x1f080 $F070 90 02                   ;
lda      #$00                          ; 0x1f082 $F072 A9 00                   ; A = 00
LF074                                                                          ;
lsr                                    ; 0x1f084 $F074 4A                      ;
clc                                    ; 0x1f085 $F075 18                      ;
adc      $05DD                         ; 0x1f086 $F076 6D DD 05                ;
sta      $0208,y                       ; 0x1f089 $F079 99 08 02                ;
adc      L0000                         ; 0x1f08c $F07C 65 00                   ;
sta      $020C,y                       ; 0x1f08e $F07E 99 0C 02                ;
adc      L0000                         ; 0x1f091 $F081 65 00                   ;
sta      $0210,y                       ; 0x1f093 $F083 99 10 02                ;
lda      $CD                           ; 0x1f096 $F086 A5 CD                   ;
sta      $020B,y                       ; 0x1f098 $F088 99 0B 02                ;
sta      $020F,y                       ; 0x1f09b $F08B 99 0F 02                ;
sta      $0213,y                       ; 0x1f09e $F08E 99 13 02                ;
lda      #$01                          ; 0x1f0a1 $F091 A9 01                   ; A = 01
sta      $020A,y                       ; 0x1f0a3 $F093 99 0A 02                ;
sta      $020E,y                       ; 0x1f0a6 $F096 99 0E 02                ;
sta      $0212,y                       ; 0x1f0a9 $F099 99 12 02                ;
lda      #$BE                          ; 0x1f0ac $F09C A9 BE                   ; A = BE
sta      $0209,y                       ; 0x1f0ae $F09E 99 09 02                ;
sta      $020D,y                       ; 0x1f0b1 $F0A1 99 0D 02                ;
sta      $0211,y                       ; 0x1f0b4 $F0A4 99 11 02                ;
LF0A7                                                                          ;
rts                                    ; 0x1f0b7 $F0A7 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Octorok                                                  ;
lda      L0000                         ; 0x1f0b8 $F0A8 A5 00                   ;
cmp      #$B5                          ; 0x1f0ba $F0AA C9 B5                   ;
bcc      LF0B5                         ; 0x1f0bc $F0AC 90 07                   ;
lda      $03                           ; 0x1f0be $F0AE A5 03                   ;
ora      $0753                         ; 0x1f0c0 $F0B0 0D 53 07                ;
sta      $03                           ; 0x1f0c3 $F0B3 85 03                   ;
LF0B5                                                                          ;
lda      #$12                          ; 0x1f0c5 $F0B5 A9 12                   ; A = 12
bne      LF0BB                         ; 0x1f0c7 $F0B7 D0 02                   ;
bank7_Enemy_Routines2_BagoBago                                                 ;
lda      #$0C                          ; 0x1f0c9 $F0B9 A9 0C                   ; A = 0C
LF0BB                                                                          ;
sta      $05                           ; 0x1f0cb $F0BB 85 05                   ;
lda      $12                           ; 0x1f0cd $F0BD A5 12                   ; Permanent Frame Counter
and      #$08                          ; 0x1f0cf $F0BF 29 08                   ; keep bits .... x...
lsr                                    ; 0x1f0d1 $F0C1 4A                      ;
lsr                                    ; 0x1f0d2 $F0C2 4A                      ;
adc      $05                           ; 0x1f0d3 $F0C3 65 05                   ;
tax                                    ; 0x1f0d5 $F0C5 AA                      ;
LF0C6                                                                          ;
jsr      LF216                         ; 0x1f0d6 $F0C6 20 16 F2                ;
ldx      $10                           ; 0x1f0d9 $F0C9 A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f0db $F0CB 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF0CC                                                                          ;
sta      $05                           ; 0x1f0dc $F0CC 85 05                   ;
lda      $12                           ; 0x1f0de $F0CE A5 12                   ; Permanent Frame Counter
and      #$08                          ; 0x1f0e0 $F0D0 29 08                   ; keep bits .... x...
lsr                                    ; 0x1f0e2 $F0D2 4A                      ;
lsr                                    ; 0x1f0e3 $F0D3 4A                      ;
adc      $05                           ; 0x1f0e4 $F0D4 65 05                   ;
tax                                    ; 0x1f0e6 $F0D6 AA                      ;
LF0D7                                                                          ;
jsr      LF1F4                         ; 0x1f0e7 $F0D7 20 F4 F1                ;
ldx      $10                           ; 0x1f0ea $F0DA A6 10                   ;; used as monster x register ;draw boss hp bar
rts                                    ; 0x1f0ec $F0DC 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Fairy                                                    ;
lda      $C9                           ; 0x1f0ed $F0DD A5 C9                   ;
and      #$08                          ; 0x1f0ef $F0DF 29 08                   ; keep bits .... x...
bne      LF10B                         ; 0x1f0f1 $F0E1 D0 28                   ;
lda      $12                           ; 0x1f0f3 $F0E3 A5 12                   ;; Frame Counter (ascending)
and      #$38                          ; 0x1f0f5 $F0E5 29 38                   ; keep bits ..xx x...
lsr                                    ; 0x1f0f7 $F0E7 4A                      ;
lsr                                    ; 0x1f0f8 $F0E8 4A                      ;
lsr                                    ; 0x1f0f9 $F0E9 4A                      ;
tax                                    ; 0x1f0fa $F0EA AA                      ;
lda      L0000                         ; 0x1f0fb $F0EB A5 00                   ;
adc      #$08                          ; 0x1f0fd $F0ED 69 08                   ;
adc      bank7_Table_for_Fairy_floating_movement,x; 0x1f0ff $F0EF 7D B0 EB     ;
sta      $0200,y                       ; 0x1f102 $F0F2 99 00 02                ;
ldx      $10                           ; 0x1f105 $F0F5 A6 10                   ;; used as monster x register ;draw boss hp bar
lda      $01                           ; 0x1f107 $F0F7 A5 01                   ;
sta      $0203,y                       ; 0x1f109 $F0F9 99 03 02                ;
LF0FC                                                                          ;
lda      #$01                          ; 0x1f10c $F0FC A9 01                   ; A = 01
sta      $0202,y                       ; 0x1f10e $F0FE 99 02 02                ;
lda      $12                           ; 0x1f111 $F101 A5 12                   ;; Frame Counter (ascending)
and      #$04                          ; 0x1f113 $F103 29 04                   ; keep bits .... .x..
lsr                                    ; 0x1f115 $F105 4A                      ;
adc      #$68                          ; 0x1f116 $F106 69 68                   ;
sta      $0201,y                       ; 0x1f118 $F108 99 01 02                ;
LF10B                                                                          ;
rts                                    ; 0x1f11b $F10B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table31                                                                  ;
.byt    $03,$02,$00,$01,$01,$01        ; 0x1f11c $F10C 03 02 00 01 01 01       ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_RedJar                                                   ;
lda      #$02                          ; 0x1f122 $F112 A9 02                   ; A = 02
sta      $02                           ; 0x1f124 $F114 85 02                   ;
lda      $AF,x                         ; 0x1f126 $F116 B5 AF                   ;; Various enemy state variables
and      #$7F                          ; 0x1f128 $F118 29 7F                   ; keep bits .xxx xxxx
tax                                    ; 0x1f12a $F11A AA                      ;
pha                                    ; 0x1f12b $F11B 48                      ;
cpx      #$10                          ; 0x1f12c $F11C E0 10                   ;
bcc      LF125                         ; 0x1f12e $F11E 90 05                   ;
lda      LF0FC,x                       ; 0x1f130 $F120 BD FC F0                ;
sta      $03                           ; 0x1f133 $F123 85 03                   ;
LF125                                                                          ;
pla                                    ; 0x1f135 $F125 68                      ;
asl                                    ; 0x1f136 $F126 0A                      ;
adc      #$2E                          ; 0x1f137 $F127 69 2E                   ;
tax                                    ; 0x1f139 $F129 AA                      ;
jsr      LF0C6                         ; 0x1f13a $F12A 20 C6 F0                ;
lda      $01FD,y                       ; 0x1f13d $F12D B9 FD 01                ;
cmp      #$F5                          ; 0x1f140 $F130 C9 F5                   ;
bne      LF137                         ; 0x1f142 $F132 D0 03                   ;
sta      $01FC,y                       ; 0x1f144 $F134 99 FC 01                ;
LF137                                                                          ;
jmp      LEF08                         ; 0x1f147 $F137 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_LockedDoor                                               ;
lda      $C9                           ; 0x1f14a $F13A A5 C9                   ;
and      #$08                          ; 0x1f14c $F13C 29 08                   ; keep bits .... x...
bne      LF17D                         ; 0x1f14e $F13E D0 3D                   ;
dec      L0000                         ; 0x1f150 $F140 C6 00                   ;
lda      L0000                         ; 0x1f152 $F142 A5 00                   ;
clc                                    ; 0x1f154 $F144 18                      ;
adc      #$10                          ; 0x1f155 $F145 69 10                   ;
sta      $0200,y                       ; 0x1f157 $F147 99 00 02                ;
adc      #$10                          ; 0x1f15a $F14A 69 10                   ;
sec                                    ; 0x1f15c $F14C 38                      ;
sbc      $AF,x                         ; 0x1f15d $F14D F5 AF                   ;; Various enemy state variables
sta      $0204,y                       ; 0x1f15f $F14F 99 04 02                ;
lda      L0000                         ; 0x1f162 $F152 A5 00                   ;
clc                                    ; 0x1f164 $F154 18                      ;
adc      $AF,x                         ; 0x1f165 $F155 75 AF                   ;; Various enemy state variables
sta      $0208,y                       ; 0x1f167 $F157 99 08 02                ;
lda      $01                           ; 0x1f16a $F15A A5 01                   ;
sta      $0203,y                       ; 0x1f16c $F15C 99 03 02                ;
sta      $0207,y                       ; 0x1f16f $F15F 99 07 02                ;
sta      $020B,y                       ; 0x1f172 $F162 99 0B 02                ;
lda      #$76                          ; 0x1f175 $F165 A9 76                   ; A = 76
sta      $0201,y                       ; 0x1f177 $F167 99 01 02                ;
lda      #$74                          ; 0x1f17a $F16A A9 74                   ; A = 74
sta      $0205,y                       ; 0x1f17c $F16C 99 05 02                ;
sta      $0209,y                       ; 0x1f17f $F16F 99 09 02                ;
lda      #$01                          ; 0x1f182 $F172 A9 01                   ; A = 01
sta      $0202,y                       ; 0x1f184 $F174 99 02 02                ;
sta      $0206,y                       ; 0x1f187 $F177 99 06 02                ;
sta      $020A,y                       ; 0x1f18a $F17A 99 0A 02                ;
LF17D                                                                          ;
rts                                    ; 0x1f18d $F17D 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Enemy_Routines2_Ache_and_Acheman                                         ;
lda      $A1,x                         ; 0x1f18e $F17E B5 A1                   ; Enemy Code
cmp      #$0A                          ; 0x1f190 $F180 C9 0A                   ; check if Acheman
bne      LF188                         ; 0x1f192 $F182 D0 04                   ;
lda      $AF,x                         ; 0x1f194 $F184 B5 AF                   ;; Various enemy state variables
bne      LF1AD                         ; 0x1f196 $F186 D0 25                   ;
LF188                                                                          ;
lda      $03                           ; 0x1f198 $F188 A5 03                   ;
ora      #$80                          ; 0x1f19a $F18A 09 80                   ; set  bits x... ....
sta      $03                           ; 0x1f19c $F18C 85 03                   ;
lda      #$02                          ; 0x1f19e $F18E A9 02                   ; A = 02
sta      $02                           ; 0x1f1a0 $F190 85 02                   ;
lda      $81,x                         ; 0x1f1a2 $F192 B5 81                   ;; Current Animation Frame for Enemys
ldx      #$16                          ; 0x1f1a4 $F194 A2 16                   ; X = 16
asl                                    ; 0x1f1a6 $F196 0A                      ;
beq      LF1A7                         ; 0x1f1a7 $F197 F0 0E                   ;
lda      $03                           ; 0x1f1a9 $F199 A5 03                   ;
and      #$0F                          ; 0x1f1ab $F19B 29 0F                   ; keep bits .... xxxx
sta      $03                           ; 0x1f1ad $F19D 85 03                   ;
lda      #$16                          ; 0x1f1af $F19F A9 16                   ; A = 16
jsr      LF0BB                         ; 0x1f1b1 $F1A1 20 BB F0                ;
jmp      LEF08                         ; 0x1f1b4 $F1A4 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1A7                                                                          ;
jsr      LF0C6                         ; 0x1f1b7 $F1A7 20 C6 F0                ;
jmp      LEF08                         ; 0x1f1ba $F1AA 4C 08 EF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1AD                                                                          ;
ldx      #$1A                          ; 0x1f1bd $F1AD A2 1A                   ;;X = #$1a 0001_1010
jsr      LF216                         ; 0x1f1bf $F1AF 20 16 F2                ;
jmp      LF0C6                         ; 0x1f1c2 $F1B2 4C C6 F0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1B5                                                                          ;
ora      $03                           ; 0x1f1c5 $F1B5 05 03                   ;
sty      $09                           ; 0x1f1c7 $F1B7 84 09                   ;
stx      $08                           ; 0x1f1c9 $F1B9 86 08                   ;
ldx      $10                           ; 0x1f1cb $F1BB A6 10                   ;; used as monster x register ;draw boss hp bar
ldy      $040E,x                       ; 0x1f1cd $F1BD BC 0E 04                ;; Enemy Hit State (0 = not in Hit State)	;	causes flashing
beq      LF1CC                         ; 0x1f1d0 $F1C0 F0 0A                   ;
and      #$FC                          ; 0x1f1d2 $F1C2 29 FC                   ; keep bits xxxx xx..
sta      $04                           ; 0x1f1d4 $F1C4 85 04                   ;
tya                                    ; 0x1f1d6 $F1C6 98                      ;
lsr                                    ; 0x1f1d7 $F1C7 4A                      ;
and      #$03                          ; 0x1f1d8 $F1C8 29 03                   ; keep bits .... ..xx
ora      $04                           ; 0x1f1da $F1CA 05 04                   ;
LF1CC                                                                          ;
ldy      $09                           ; 0x1f1dc $F1CC A4 09                   ;
sta      $0202,y                       ; 0x1f1de $F1CE 99 02 02                ;
sta      $0206,y                       ; 0x1f1e1 $F1D1 99 06 02                ;
ldx      $08                           ; 0x1f1e4 $F1D4 A6 08                   ;
rts                                    ; 0x1f1e6 $F1D6 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1D7                                                                          ;
lda      #$08                          ; 0x1f1e7 $F1D7 A9 08                   ; A = 08
sta      $0A                           ; 0x1f1e9 $F1D9 85 0A                   ;
LF1DB                                                                          ;
lda      $0A                           ; 0x1f1eb $F1DB A5 0A                   ;
and      $C9                           ; 0x1f1ed $F1DD 25 C9                   ;
beq      LF1E6                         ; 0x1f1ef $F1DF F0 05                   ;
lda      #$F8                          ; 0x1f1f1 $F1E1 A9 F8                   ; A = F8
sta      $0200,y                       ; 0x1f1f3 $F1E3 99 00 02                ;
LF1E6                                                                          ;
iny                                    ; 0x1f1f6 $F1E6 C8                      ;
iny                                    ; 0x1f1f7 $F1E7 C8                      ;
iny                                    ; 0x1f1f8 $F1E8 C8                      ;
iny                                    ; 0x1f1f9 $F1E9 C8                      ;
lsr      $0A                           ; 0x1f1fa $F1EA 46 0A                   ;
dex                                    ; 0x1f1fc $F1EC CA                      ;
bne      LF1DB                         ; 0x1f1fd $F1ED D0 EC                   ;
ldx      $08                           ; 0x1f1ff $F1EF A6 08                   ;
ldy      $09                           ; 0x1f201 $F1F1 A4 09                   ;
rts                                    ; 0x1f203 $F1F3 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF1F4                                                                          ;
lda      $02                           ; 0x1f204 $F1F4 A5 02                   ;
lsr                                    ; 0x1f206 $F1F6 4A                      ;
lda      $6ED4,x                       ; 0x1f207 $F1F7 BD D4 6E                ;
bcc      LF209                         ; 0x1f20a $F1FA 90 0D                   ;
sta      $0205,y                       ; 0x1f20c $F1FC 99 05 02                ;
lda      $6ED5,x                       ; 0x1f20f $F1FF BD D5 6E                ;
sta      $0201,y                       ; 0x1f212 $F202 99 01 02                ;
lda      #$40                          ; 0x1f215 $F205 A9 40                   ; A = 40
bne      LF214                         ; 0x1f217 $F207 D0 0B                   ;
LF209                                                                          ;
sta      $0201,y                       ; 0x1f219 $F209 99 01 02                ;
lda      $6ED5,x                       ; 0x1f21c $F20C BD D5 6E                ;
sta      $0205,y                       ; 0x1f21f $F20F 99 05 02                ;
lda      #$00                          ; 0x1f222 $F212 A9 00                   ; A = 00
LF214                                                                          ;
bpl      LF236                         ; 0x1f224 $F214 10 20                   ;
LF216                                                                          ;
lda      $02                           ; 0x1f226 $F216 A5 02                   ;
lsr                                    ; 0x1f228 $F218 4A                      ;
lda      bank7_table_item_sprites_map_to_graphic_image,x; 0x1f229 $F219 BD 51 EE;
bcc      LF22B                         ; 0x1f22c $F21C 90 0D                   ;
sta      $0205,y                       ; 0x1f22e $F21E 99 05 02                ;
lda      LEE52,x                       ; 0x1f231 $F221 BD 52 EE                ;
sta      $0201,y                       ; 0x1f234 $F224 99 01 02                ;
lda      #$40                          ; 0x1f237 $F227 A9 40                   ; A = 40
bne      LF236                         ; 0x1f239 $F229 D0 0B                   ;
LF22B                                                                          ;
sta      $0201,y                       ; 0x1f23b $F22B 99 01 02                ;
lda      LEE52,x                       ; 0x1f23e $F22E BD 52 EE                ;
sta      $0205,y                       ; 0x1f241 $F231 99 05 02                ;
lda      #$00                          ; 0x1f244 $F234 A9 00                   ; A = 00
LF236                                                                          ;
pha                                    ; 0x1f246 $F236 48                      ;
lda      #$01                          ; 0x1f247 $F237 A9 01                   ; A = 01
sta      $0F                           ; 0x1f249 $F239 85 0F                   ;
pla                                    ; 0x1f24b $F23B 68                      ;
jsr      LF1B5                         ; 0x1f24c $F23C 20 B5 F1                ;
lda      $C9                           ; 0x1f24f $F23F A5 C9                   ;
and      #$F0                          ; 0x1f251 $F241 29 F0                   ; keep bits xxxx ....
bne      LF25D                         ; 0x1f253 $F243 D0 18                   ;
lda      L0000                         ; 0x1f255 $F245 A5 00                   ;
sta      $0200,y                       ; 0x1f257 $F247 99 00 02                ;
sta      $0204,y                       ; 0x1f25a $F24A 99 04 02                ;
ldx      #$02                          ; 0x1f25d $F24D A2 02                   ; X = 02
jsr      LF1D7                         ; 0x1f25f $F24F 20 D7 F1                ;
lda      $01                           ; 0x1f262 $F252 A5 01                   ;
sta      $0203,y                       ; 0x1f264 $F254 99 03 02                ;
clc                                    ; 0x1f267 $F257 18                      ;
adc      #$08                          ; 0x1f268 $F258 69 08                   ;
sta      $0207,y                       ; 0x1f26a $F25A 99 07 02                ;
LF25D                                                                          ;
lda      L0000                         ; 0x1f26d $F25D A5 00                   ;
clc                                    ; 0x1f26f $F25F 18                      ;
adc      #$10                          ; 0x1f270 $F260 69 10                   ;
sta      L0000                         ; 0x1f272 $F262 85 00                   ;
tya                                    ; 0x1f274 $F264 98                      ;
clc                                    ; 0x1f275 $F265 18                      ;
adc      #$08                          ; 0x1f276 $F266 69 08                   ;
tay                                    ; 0x1f278 $F268 A8                      ;
inx                                    ; 0x1f279 $F269 E8                      ;
inx                                    ; 0x1f27a $F26A E8                      ;
rts                                    ; 0x1f27b $F26B 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Tables_for_Various_Bitmasks2                                             ;
.byt    $80,$40,$20,$10                ; 0x1f27c $F26C 80 40 20 10             ;
LF270                                                                          ;
.byt    $08,$04,$02,$01                ; 0x1f280 $F270 08 04 02 01             ;
LF274                                                                          ;
.byt    $00,$08,$10,$18,$20,$28,$30,$38; 0x1f284 $F274 00 08 10 18 20 28 30 38 ;
.byt    $40                            ; 0x1f28c $F27C 40                      ;
; ---------------------------------------------------------------------------- ;
bank7_code51                                                                   ;
sty      L0000                         ; 0x1f28d $F27D 84 00                   ;
lda      #$00                          ; 0x1f28f $F27F A9 00                   ; A = 00
sta      $C8,y                         ; 0x1f291 $F281 99 C8 00                ;
ldy      #$03                          ; 0x1f294 $F284 A0 03                   ; Y = 03
LF286                                                                          ;
lda      $4D,x                         ; 0x1f296 $F286 B5 4D                   ; Link's Current X position (low byte)
clc                                    ; 0x1f298 $F288 18                      ;
adc      LF274,y                       ; 0x1f299 $F289 79 74 F2                ;
sta      L000E                         ; 0x1f29c $F28C 85 0E                   ;
lda      $3B,x                         ; 0x1f29e $F28E B5 3B                   ; Link's Current X position (high byte)
adc      #$00                          ; 0x1f2a0 $F290 69 00                   ;
sta      $0F                           ; 0x1f2a2 $F292 85 0F                   ;
lda      L000E                         ; 0x1f2a4 $F294 A5 0E                   ;
cmp      $072C                         ; 0x1f2a6 $F296 CD 2C 07                ; Scrolling Offset Low Byte
lda      $0F                           ; 0x1f2a9 $F299 A5 0F                   ;
sbc      $072A                         ; 0x1f2ab $F29B ED 2A 07                ; Scrolling Offset High Byte
beq      LF2AF                         ; 0x1f2ae $F29E F0 0F                   ;
sty      $01                           ; 0x1f2b0 $F2A0 84 01                   ;
lda      LF270,y                       ; 0x1f2b2 $F2A2 B9 70 F2                ;
ldy      L0000                         ; 0x1f2b5 $F2A5 A4 00                   ;
ora      $C8,y                         ; 0x1f2b7 $F2A7 19 C8 00                ;
sta      $C8,y                         ; 0x1f2ba $F2AA 99 C8 00                ;
ldy      $01                           ; 0x1f2bd $F2AD A4 01                   ;
LF2AF                                                                          ;
dey                                    ; 0x1f2bf $F2AF 88                      ;
bpl      LF286                         ; 0x1f2c0 $F2B0 10 D4                   ;
ldy      L0000                         ; 0x1f2c2 $F2B2 A4 00                   ;
lda      $29,x                         ; 0x1f2c4 $F2B4 B5 29                   ; Link's Y Position
clc                                    ; 0x1f2c6 $F2B6 18                      ;
adc      #$10                          ; 0x1f2c7 $F2B7 69 10                   ;
lda      $19,x                         ; 0x1f2c9 $F2B9 B5 19                   ;;fall_or_invisible (0=invisible, 1=normal, 2~FF=fall in hole)
adc      #$00                          ; 0x1f2cb $F2BB 69 00                   ;
cmp      #$01                          ; 0x1f2cd $F2BD C9 01                   ;
beq      LF2C9                         ; 0x1f2cf $F2BF F0 08                   ;
lda      #$F0                          ; 0x1f2d1 $F2C1 A9 F0                   ; A = F0
ora      $C8,y                         ; 0x1f2d3 $F2C3 19 C8 00                ;
sta      $C8,y                         ; 0x1f2d6 $F2C6 99 C8 00                ;
LF2C9                                                                          ;
lda      $4D,x                         ; 0x1f2d9 $F2C9 B5 4D                   ; Link's X Position (low byte)
sec                                    ; 0x1f2db $F2CB 38                      ;
sbc      $072C                         ; 0x1f2dc $F2CC ED 2C 07                ; Scrolling Offset Low Byte
sta      $CC,y                         ; 0x1f2df $F2CF 99 CC 00                ;
rts                                    ; 0x1f2e2 $F2D2 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LF2D3                                                                          ;
lda      #$00                          ; 0x1f2e3 $F2D3 A9 00                   ; A = 00
sta      $02                           ; 0x1f2e5 $F2D5 85 02                   ;
ldy      #$07                          ; 0x1f2e7 $F2D7 A0 07                   ; Y = 07
LF2D9                                                                          ;
lda      $4D,x                         ; 0x1f2e9 $F2D9 B5 4D                   ; Link's X Position (low byte)
clc                                    ; 0x1f2eb $F2DB 18                      ;
adc      LF274,y                       ; 0x1f2ec $F2DC 79 74 F2                ;
sta      L000E                         ; 0x1f2ef $F2DF 85 0E                   ;
lda      $3B,x                         ; 0x1f2f1 $F2E1 B5 3B                   ; Link's X position (high byte)
adc      #$00                          ; 0x1f2f3 $F2E3 69 00                   ;
sta      $0F                           ; 0x1f2f5 $F2E5 85 0F                   ;
lda      L000E                         ; 0x1f2f7 $F2E7 A5 0E                   ;
cmp      $072C                         ; 0x1f2f9 $F2E9 CD 2C 07                ; Scrolling Offset Low Byte
lda      $0F                           ; 0x1f2fc $F2EC A5 0F                   ;
sbc      $072A                         ; 0x1f2fe $F2EE ED 2A 07                ; Scrolling Offset High Byte
beq      LF2FA                         ; 0x1f301 $F2F1 F0 07                   ;
lda      $02                           ; 0x1f303 $F2F3 A5 02                   ;
ora      bank7_Tables_for_Various_Bitmasks2,y; 0x1f305 $F2F5 19 6C F2          ;
sta      $02                           ; 0x1f308 $F2F8 85 02                   ;
LF2FA                                                                          ;
dey                                    ; 0x1f30a $F2FA 88                      ;
bpl      LF2D9                         ; 0x1f30b $F2FB 10 DC                   ;
lda      $02                           ; 0x1f30d $F2FD A5 02                   ;
rts                                    ; 0x1f30f $F2FF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNKNOWN2                                                                 ;
.byt    $55,$AB,$D5,$AA,$5A,$4B,$95,$4A; 0x1f310 $F300 55 AB D5 AA 5A 4B 95 4A ;
.byt    $55,$A9,$54,$D5,$D6,$AA,$A4,$35; 0x1f318 $F308 55 A9 54 D5 D6 AA A4 35 ;
.byt    $4B,$89,$52,$55,$D9,$5B,$5F,$57; 0x1f320 $F310 4B 89 52 55 D9 5B 5F 57 ;
.byt    $75,$2A,$49,$42,$92,$22,$4D,$D5; 0x1f328 $F318 75 2A 49 42 92 22 4D D5 ;
.byt    $76,$DB,$D7,$2A,$A5,$24,$92,$28; 0x1f330 $F320 76 DB D7 2A A5 24 92 28 ;
.byt    $52,$A9,$7F,$DF,$DB,$6D,$4F,$89; 0x1f338 $F328 52 A9 7F DF DB 6D 4F 89 ;
.byt    $20,$24,$82,$88,$D2,$7B,$77,$AD; 0x1f340 $F330 20 24 82 88 D2 7B 77 AD ;
.byt    $AA,$54,$8A,$41,$48,$FF,$7F,$57; 0x1f348 $F338 AA 54 8A 41 48 FF 7F 57 ;
.byt    $7B,$5F,$12,$02,$92,$22,$02,$6A; 0x1f350 $F340 7B 5F 12 02 92 22 02 6A ;
.byt    $7B,$57,$AA,$6A,$A5,$48,$10,$FF; 0x1f358 $F348 7B 57 AA 6A A5 48 10 FF ;
.byt    $FF,$77,$73,$7F,$45,$20,$40,$89; 0x1f360 $F350 FF 77 73 7F 45 20 40 89 ;
.byt    $08,$2A,$B5,$53,$95,$AA,$AA,$24; 0x1f368 $F358 08 2A B5 53 95 AA AA 24 ;
.byt    $6A,$FF,$FF,$BF,$D6,$57,$82,$00; 0x1f370 $F360 6A FF FF BF D6 57 82 00 ;
.byt    $28,$49,$88,$A8,$D6,$AC,$A4,$D2; 0x1f378 $F368 28 49 88 A8 D6 AC A4 D2 ;
.byt    $8C,$DA,$FF,$FF,$BF,$D6,$B5,$08; 0x1f380 $F370 8C DA FF FF BF D6 B5 08 ;
.byt    $08,$20,$29,$82,$90,$D6,$56,$25; 0x1f388 $F378 08 20 29 82 90 D6 56 25 ;
.byt    $A9,$A6,$DD,$FF,$FF,$AF,$DA,$35; 0x1f390 $F380 A9 A6 DD FF FF AF DA 35 ;
.byt    $22,$80,$A0,$A2,$80,$A0,$5A,$A7; 0x1f398 $F388 22 80 A0 A2 80 A0 5A A7 ;
.byt    $94,$4A,$5B,$FD,$FF,$FF,$CD,$7A; 0x1f3a0 $F390 94 4A 5B FD FF FF CD 7A ;
.byt    $8B,$02,$01,$8A,$04,$22,$88,$76; 0x1f3a8 $F398 8B 02 01 8A 04 22 88 76 ;
.byt    $55,$52,$4A,$DB,$FF,$FF,$D7,$76; 0x1f3b0 $F3A0 55 52 4A DB FF FF D7 76 ;
.byt    $3F,$2A,$20,$48,$49,$20,$08,$75; 0x1f3b8 $F3A8 3F 2A 20 48 49 20 08 75 ;
.byt    $97,$8A,$AC,$56,$FA,$CA,$8A,$A8; 0x1f3c0 $F3B0 97 8A AC 56 FA CA 8A A8 ;
.byt    $A5,$4A,$01,$02,$95,$22,$08,$A0; 0x1f3c8 $F3B8 A5 4A 01 02 95 22 08 A0 ;
.byt    $4A,$52,$55,$B5,$55,$33,$95,$4A; 0x1f3d0 $F3C0 4A 52 55 B5 55 33 95 4A ;
.byt    $55,$AB,$55,$A9,$2A,$55,$55,$DD; 0x1f3d8 $F3C8 55 AB 55 A9 2A 55 55 DD ;
.byt    $37,$2A,$09,$4A,$AB,$6D,$57,$4A; 0x1f3e0 $F3D0 37 2A 09 4A AB 6D 57 4A ;
.byt    $29,$AA,$B5,$D5,$9A,$4A,$A5,$54; 0x1f3e8 $F3D8 29 AA B5 D5 9A 4A A5 54 ;
.byt    $AB,$5A,$A5,$52,$55,$AA,$FD,$17; 0x1f3f0 $F3E0 AB 5A A5 52 55 AA FD 17 ;
.byt    $A5,$00,$69,$6B,$7B,$93,$A2,$92; 0x1f3f8 $F3E8 A5 00 69 6B 7B 93 A2 92 ;
.byt    $74,$5B,$6D,$8D,$A2,$92,$5A,$5B; 0x1f400 $F3F0 74 5B 6D 8D A2 92 5A 5B ;
.byt    $AA,$2A,$4A,$DD,$FF,$98,$04,$20; 0x1f408 $F3F8 AA 2A 4A DD FF 98 04 20 ;
.byt    $B7,$76,$AF,$48,$89,$64,$77,$75; 0x1f410 $F400 B7 76 AF 48 89 64 77 75 ;
.byt    $AD,$88,$94,$B2,$B6,$4A,$8B,$A2; 0x1f418 $F408 AD 88 94 B2 B6 4A 8B A2 ;
.byt    $FF,$8F,$29,$00,$74,$CB,$FF,$08; 0x1f420 $F410 FF 8F 29 00 74 CB FF 08 ;
.byt    $2A,$22,$FD,$AD,$5D,$09,$64,$49; 0x1f428 $F418 2A 22 FD AD 5D 09 64 49 ;
.byt    $DD,$2A,$25,$EA,$FF,$D3,$08,$00; 0x1f430 $F420 DD 2A 25 EA FF D3 08 00 ;
.byt    $7E,$F6,$3D,$02,$25,$52,$FF,$D3; 0x1f438 $F428 7E F6 3D 02 25 52 FF D3 ;
.byt    $2D,$00,$35,$5A,$9F,$88,$D6,$FF; 0x1f440 $F430 2D 00 35 5A 9F 88 D6 FF ;
.byt    $B3,$00,$80,$7D,$FE,$0F,$80,$0A; 0x1f448 $F438 B3 00 80 7D FE 0F 80 0A ;
.byt    $ED,$DF,$BA,$02,$90,$A6,$ED,$0A; 0x1f450 $F440 ED DF BA 02 90 A6 ED 0A ;
.byt    $F2,$FF,$D3,$20,$00,$FD,$FC,$2F; 0x1f458 $F448 F2 FF D3 20 00 FD FC 2F ;
.byt    $00,$0C,$DE,$7F,$D3,$02,$C0,$9A; 0x1f460 $F450 00 0C DE 7F D3 02 C0 9A ;
.byt    $BE,$08,$FD,$BF,$0E,$01,$F0,$4F; 0x1f468 $F458 BE 08 FD BF 0E 01 F0 4F ;
.byt    $FF,$02,$40,$D2,$FF,$1D,$0D,$00; 0x1f470 $F460 FF 02 40 D2 FF 1D 0D 00 ;
.byt    $EE,$D1,$23,$F8,$FF,$1C,$08,$E0; 0x1f478 $F468 EE D1 23 F8 FF 1C 08 E0 ;
.byt    $3F,$FF,$03,$00,$C3,$FF,$37,$20; 0x1f480 $F470 3F FF 03 00 C3 FF 37 20 ;
.byt    $00,$FD,$C3,$42,$FF,$3F,$03,$00; 0x1f488 $F478 00 FD C3 42 FF 3F 03 00 ;
.byt    $FC,$DF,$F3,$00,$C0,$F5,$FF,$09; 0x1f490 $F480 FC DF F3 00 C0 F5 FF 09 ;
.byt    $00,$E0,$7F,$20,$F4,$FF,$37,$00; 0x1f498 $F488 00 E0 7F 20 F4 FF 37 00 ;
.byt    $C0,$FF,$3F,$03,$00,$D7,$FF,$13; 0x1f4a0 $F490 C0 FF 3F 03 00 D7 FF 13 ;
.byt    $00,$50,$7F,$03,$F8,$FF,$3B,$00; 0x1f4a8 $F498 00 50 7F 03 F8 FF 3B 00 ;
.byt    $C0,$FF,$3F,$01,$C0,$E7,$FF,$03; 0x1f4b0 $F4A0 C0 FF 3F 01 C0 E7 FF 03 ;
.byt    $00,$B0,$BF,$00,$FD,$FF,$0E,$00; 0x1f4b8 $F4A8 00 B0 BF 00 FD FF 0E 00 ;
.byt    $F8,$FF,$8B,$00,$F0,$F7,$3F,$00; 0x1f4c0 $F4B0 F8 FF 8B 00 F0 F7 3F 00 ;
.byt    $00,$F7,$07,$E0,$FF,$F3,$00,$C0; 0x1f4c8 $F4B8 00 F7 07 E0 FF F3 00 C0 ;
.byt    $FF,$3F,$08,$C0,$EF,$FF,$02,$00; 0x1f4d0 $F4C0 FF 3F 08 C0 EF FF 02 00 ;
.byt    $F0,$3F,$00,$FF,$CF,$03,$80,$FF; 0x1f4d8 $F4C8 F0 3F 00 FF CF 03 80 FF ;
.byt    $F7,$00,$00,$FF,$FF,$03,$00,$D0; 0x1f4e0 $F4D0 F7 00 00 FF FF 03 00 D0 ;
.byt    $BF,$00,$FF,$3F,$0F,$00,$FD,$EF; 0x1f4e8 $F4D8 BF 00 FF 3F 0F 00 FD EF ;
.byt    $03,$00,$FC,$FD,$0F,$00,$C0,$FF; 0x1f4f0 $F4E0 03 00 FC FD 0F 00 C0 FF ;
.byt    $00,$FC,$3F,$0F,$00,$FE,$DF,$03; 0x1f4f8 $F4E8 00 FC 3F 0F 00 FE DF 03 ;
.byt    $00,$FC,$FF,$0F,$00,$40,$FF,$02; 0x1f500 $F4F0 00 FC FF 0F 00 40 FF 02 ;
.byt    $FC,$3F,$0F,$00,$FC,$FF,$03,$00; 0x1f508 $F4F8 FC 3F 0F 00 FC FF 03 00 ;
.byt    $FC,$FF,$0F,$00,$40,$FF,$01,$FC; 0x1f510 $F500 FC FF 0F 00 40 FF 01 FC ;
.byt    $3F,$0F,$00,$FC,$FF,$03,$00,$FC; 0x1f518 $F508 3F 0F 00 FC FF 03 00 FC ;
.byt    $FF,$2F,$00,$00,$FF,$03,$F8,$BF; 0x1f520 $F510 FF 2F 00 00 FF 03 F8 BF ;
.byt    $2E,$00,$FC,$DF,$0F,$00,$F0,$F7; 0x1f528 $F518 2E 00 FC DF 0F 00 F0 F7 ;
.byt    $3F,$00,$00,$FF,$03,$F0,$FF,$BC; 0x1f530 $F520 3F 00 00 FF 03 F0 FF BC ;
.byt    $00,$F0,$FF,$3E,$00,$C0,$DF,$FF; 0x1f538 $F528 00 F0 FF 3E 00 C0 DF FF ;
.byt    $00,$00,$FC,$3F,$00,$FF,$CF,$03; 0x1f540 $F530 00 00 FC 3F 00 FF CF 03 ;
.byt    $00,$FF,$FF,$02,$00,$7E,$FF,$07; 0x1f548 $F538 00 FF FF 02 00 7E FF 07 ;
.byt    $00,$C0,$FF,$02,$F0,$FF,$BB,$00; 0x1f550 $F540 00 C0 FF 02 F0 FF BB 00 ;
.byt    $C0,$FF,$3F,$00,$80,$FF,$FF,$00; 0x1f558 $F548 C0 FF 3F 00 80 FF FF 00 ;
.byt    $00,$FD,$0F,$08,$C1,$FF,$BF,$00; 0x1f560 $F550 00 FD 0F 08 C1 FF BF 00 ;
.byt    $C0,$FF,$3F,$00,$C0,$FF,$5F,$00; 0x1f568 $F558 C0 FF 3F 00 C0 FF 5F 00 ;
.byt    $D0,$DD,$9D,$08,$A2,$FF,$FF,$00; 0x1f570 $F560 D0 DD 9D 08 A2 FF FF 00 ;
.byt    $00,$FC,$FF,$08,$00,$FF,$77,$09; 0x1f578 $F568 00 FC FF 08 00 FF 77 09 ;
.byt    $A0,$D6,$B7,$89,$A4,$62,$FF,$3F; 0x1f580 $F570 A0 D6 B7 89 A4 62 FF 3F ;
.byt    $00,$A0,$FD,$55,$0A,$62,$DD,$55; 0x1f588 $F578 00 A0 FD 55 0A 62 DD 55 ;
.byt    $75,$FF,$07,$00,$C0,$FF,$0F,$40; 0x1f590 $F580 75 FF 07 00 C0 FF 0F 40 ;
.byt    $D0,$FF,$0F,$02,$E8,$DF,$A8,$20; 0x1f598 $F588 D0 FF 0F 02 E8 DF A8 20 ;
.byt    $C8,$FF,$FF,$04,$00,$FC,$FF,$03; 0x1f5a0 $F590 C8 FF FF 04 00 FC FF 03 ;
.byt    $00,$FC,$FF,$0F,$00,$D0,$FF,$03; 0x1f5a8 $F598 00 FC FF 0F 00 D0 FF 03 ;
.byt    $00,$D0,$FF,$FF,$00,$00,$FF,$FF; 0x1f5b0 $F5A0 00 D0 FF FF 00 00 FF FF ;
.byt    $00,$00,$FF,$FF,$03,$00,$FC,$BF; 0x1f5b8 $F5A8 00 00 FF FF 03 00 FC BF ;
.byt    $00,$F0,$FF,$3F,$00,$C0,$FF,$BF; 0x1f5c0 $F5B0 00 F0 FF 3F 00 C0 FF BF ;
.byt    $00,$00,$FD,$FF,$00,$00,$F0,$0F; 0x1f5c8 $F5B8 00 00 FD FF 00 00 F0 0F ;
.byt    $FC,$FF,$3C,$00,$F0,$FF,$3F,$00; 0x1f5d0 $F5C0 FC FF 3C 00 F0 FF 3F 00 ;
.byt    $F0,$FF,$3F,$00,$00,$C0,$F2,$FF; 0x1f5d8 $F5C8 F0 FF 3F 00 00 C0 F2 FF ;
.byt    $DF,$00,$00,$FF,$FF,$00,$00,$FF; 0x1f5e0 $F5D0 DF 00 00 FF FF 00 00 FF ;
.byt    $FF,$01,$00,$00,$FC,$FF,$FF,$00; 0x1f5e8 $F5D8 FF 01 00 00 FC FF FF 00 ;
.byt    $C0,$FF,$7F,$00,$80,$FF,$FF,$00; 0x1f5f0 $F5E0 C0 FF 7F 00 80 FF FF 00 ;
.byt    $00,$00,$FF,$FF,$0F,$30,$FC,$FF; 0x1f5f8 $F5E8 00 00 FF FF 0F 30 FC FF ;
.byt    $0F,$00,$F0,$FF,$0F,$00,$00,$F0; 0x1f600 $F5F0 0F 00 F0 FF 0F 00 00 F0 ;
.byt    $FF,$3F,$F0,$C3,$FF,$3F,$F0,$80; 0x1f608 $F5F8 FF 3F F0 C3 FF 3F F0 80 ;
.byt    $FF,$0F,$00,$00,$F0,$FF,$0F,$F0; 0x1f610 $F600 FF 0F 00 00 F0 FF 0F F0 ;
.byt    $C3,$FF,$2F,$FC,$03,$FC,$03,$F0; 0x1f618 $F608 C3 FF 2F FC 03 FC 03 F0 ;
.byt    $0F,$FC,$FF,$00,$FF,$C0,$FF,$00; 0x1f620 $F610 0F FC FF 00 FF C0 FF 00 ;
.byt    $3F,$00,$2C,$00,$FF,$C0,$FF,$0F; 0x1f628 $F618 3F 00 2C 00 FF C0 FF 0F ;
.byt    $FC,$03,$FC,$2F,$00,$00,$F0,$03; 0x1f630 $F620 FC 03 FC 2F 00 00 F0 03 ;
.byt    $FC,$C0,$FF,$2F,$FC,$00,$F0,$3F; 0x1f638 $F628 FC C0 FF 2F FC 00 F0 3F ;
.byt    $00,$00,$C0,$0B,$3C,$FC,$FF,$0F; 0x1f640 $F630 00 00 C0 0B 3C FC FF 0F ;
.byt    $3F,$00,$FC,$0F,$00,$00,$FE,$03; 0x1f648 $F638 3F 00 FC 0F 00 00 FE 03 ;
.byt    $0F,$FF,$FF,$03,$3F,$70,$FF,$0F; 0x1f650 $F640 0F FF FF 03 3F 70 FF 0F ;
.byt    $00,$00,$F8,$C0,$0F,$FF,$FF,$C3; 0x1f658 $F648 00 00 F8 C0 0F FF FF C3 ;
.byt    $0F,$10,$FF,$03,$00,$00,$FF,$C0; 0x1f660 $F650 0F 10 FF 03 00 00 FF C0 ;
.byt    $C3,$FF,$FF,$C2,$0F,$C0,$FF,$03; 0x1f668 $F658 C3 FF FF C2 0F C0 FF 03 ;
.byt    $00,$00,$3F,$C0,$C3,$FF,$FF,$C0; 0x1f670 $F660 00 00 3F C0 C3 FF FF C0 ;
.byt    $03,$CC,$FF,$03,$00,$00,$BF,$C0; 0x1f678 $F668 03 CC FF 03 00 00 BF C0 ;
.byt    $C3,$FF,$FF,$C3,$03,$CC,$FF,$03; 0x1f680 $F670 C3 FF FF C3 03 CC FF 03 ;
.byt    $00,$00,$FD,$00,$03,$FF,$FF,$07; 0x1f688 $F678 00 00 FD 00 03 FF FF 07 ;
.byt    $0F,$F0,$FF,$0F,$00,$00,$FC,$03; 0x1f690 $F680 0F F0 FF 0F 00 00 FC 03 ;
.byt    $00,$FC,$FF,$3F,$3C,$C0,$FF,$3F; 0x1f698 $F688 00 FC FF 3F 3C C0 FF 3F ;
.byt    $00,$00,$F0,$2F,$00,$00,$FF,$FF; 0x1f6a0 $F690 00 00 F0 2F 00 00 FF FF ;
.byt    $0F,$3F,$F0,$FF,$0F,$00,$00,$FE; 0x1f6a8 $F698 0F 3F F0 FF 0F 00 00 FE ;
.byt    $0F,$00,$00,$FF,$FF,$0F,$00,$F0; 0x1f6b0 $F6A0 0F 00 00 FF FF 0F 00 F0 ;
.byt    $FF,$2F,$00,$00,$FF,$0F,$00,$00; 0x1f6b8 $F6A8 FF 2F 00 00 FF 0F 00 00 ;
.byt    $FE,$FF,$FF,$03,$00,$FF,$0F,$00; 0x1f6c0 $F6B0 FE FF FF 03 00 FF 0F 00 ;
.byt    $00,$FD,$FF,$03,$40,$B6,$FF,$F7; 0x1f6c8 $F6B8 00 FD FF 03 40 B6 FF F7 ;
.byt    $FF,$47,$09,$00,$01,$F0,$2D,$94; 0x1f6d0 $F6C0 FF 47 09 00 01 F0 2D 94 ;
.byt    $22,$77,$6B,$57,$A0,$FD,$DB,$FF; 0x1f6d8 $F6C8 22 77 6B 57 A0 FD DB FF ;
.byt    $21,$29,$CA,$26,$80,$02,$ED,$A9; 0x1f6e0 $F6D0 21 29 CA 26 80 02 ED A9 ;
.byt    $56,$52,$B7,$DA,$2A,$D6,$AD,$FD; 0x1f6e8 $F6D8 56 52 B7 DA 2A D6 AD FD ;
.byt    $09,$D9,$52,$B7,$08,$88,$A9,$4A; 0x1f6f0 $F6E0 09 D9 52 B7 08 88 A9 4A ;
.byt    $73,$29,$AA,$B6,$55,$A9,$AA,$55; 0x1f6f8 $F6E8 73 29 AA B6 55 A9 AA 55 ;
.byt    $5B,$CB,$54,$6D,$55,$AD,$4A,$35; 0x1f700 $F6F0 5B CB 54 6D 55 AD 4A 35 ;
.byt    $55,$93,$2A,$55,$55,$95,$4A,$55; 0x1f708 $F6F8 55 93 2A 55 55 95 4A 55 ;
.byt    $36,$89,$52,$D5,$AD,$8A,$4A,$D5; 0x1f710 $F700 36 89 52 D5 AD 8A 4A D5 ;
.byt    $75,$95,$48,$5A,$5B,$55,$4A,$55; 0x1f718 $F708 75 95 48 5A 5B 55 4A 55 ;
.byt    $6A,$F7,$1F,$00,$88,$FD,$3F,$24; 0x1f720 $F710 6A F7 1F 00 88 FD 3F 24 ;
.byt    $80,$F7,$AF,$09,$82,$FD,$AD,$88; 0x1f728 $F718 80 F7 AF 09 82 FD AD 88 ;
.byt    $50,$AB,$5A,$23,$FB,$FF,$00,$00; 0x1f730 $F720 50 AB 5A 23 FB FF 00 00 ;
.byt    $FC,$FF,$14,$00,$FC,$3F,$8F,$00; 0x1f738 $F728 FC FF 14 00 FC 3F 8F 00 ;
.byt    $FD,$CA,$2A,$80,$2D,$D9,$FF,$BF; 0x1f740 $F730 FD CA 2A 80 2D D9 FF BF ;
.byt    $00,$00,$FC,$FF,$0A,$00,$FC,$FF; 0x1f748 $F738 00 00 FC FF 0A 00 FC FF ;
.byt    $03,$40,$BD,$3E,$0A,$40,$D1,$FF; 0x1f750 $F740 03 40 BD 3E 0A 40 D1 FF ;
.byt    $FF,$00,$00,$FC,$FF,$0F,$00,$F8; 0x1f758 $F748 FF 00 00 FC FF 0F 00 F8 ;
.byt    $FF,$07,$00,$3D,$BD,$02,$80,$F6; 0x1f760 $F750 FF 07 00 3D BD 02 80 F6 ;
.byt    $FF,$5F,$00,$C0,$FF,$7F,$00,$00; 0x1f768 $F758 FF 5F 00 C0 FF 7F 00 00 ;
.byt    $FF,$FF,$03,$00,$F8,$9F,$00,$F0; 0x1f770 $F760 FF FF 03 00 F8 9F 00 F0 ;
.byt    $FF,$FF,$00,$00,$FF,$FF,$00,$00; 0x1f778 $F768 FF FF 00 00 FF FF 00 00 ;
.byt    $FF,$FF,$03,$00,$E0,$3F,$00,$FE; 0x1f780 $F770 FF FF 03 00 E0 3F 00 FE ;
.byt    $FF,$1D,$00,$F0,$FF,$0F,$00,$F0; 0x1f788 $F778 FF 1D 00 F0 FF 0F 00 F0 ;
.byt    $FF,$3F,$00,$00,$FC,$0F,$C0,$FF; 0x1f790 $F780 FF 3F 00 00 FC 0F C0 FF ;
.byt    $7F,$03,$00,$FD,$FF,$00,$00,$FE; 0x1f798 $F788 7F 03 00 FD FF 00 00 FE ;
.byt    $FF,$0F,$00,$80,$FF,$00,$F8,$FF; 0x1f7a0 $F790 FF 0F 00 80 FF 00 F8 FF ;
.byt    $3F,$00,$C0,$FF,$3F,$00,$C0,$FF; 0x1f7a8 $F798 3F 00 C0 FF 3F 00 C0 FF ;
.byt    $FF,$00,$00,$F0,$3F,$00,$FD,$FF; 0x1f7b0 $F7A0 FF 00 00 F0 3F 00 FD FF ;
.byt    $0F,$00,$F8,$FF,$03,$00,$F8,$FF; 0x1f7b8 $F7A8 0F 00 F8 FF 03 00 F8 FF ;
.byt    $3F,$00,$00,$FC,$07,$C0,$FF,$FF; 0x1f7c0 $F7B0 3F 00 00 FC 07 C0 FF FF ;
.byt    $03,$00,$FC,$FF,$01,$00,$FC,$FF; 0x1f7c8 $F7B8 03 00 FC FF 01 00 FC FF ;
.byt    $0F,$00,$C0,$FF,$02,$80,$FF,$FF; 0x1f7d0 $F7C0 0F 00 C0 FF 02 80 FF FF ;
.byt    $03,$00,$FE,$FF,$02,$00,$FC,$FF; 0x1f7d8 $F7C8 03 00 FE FF 02 00 FC FF ;
.byt    $0F,$00,$C0,$FF,$21,$00,$FC,$FF; 0x1f7e0 $F7D0 0F 00 C0 FF 21 00 FC FF ;
.byt    $2F,$00,$F0,$FF,$0F,$00,$F0,$FF; 0x1f7e8 $F7D8 2F 00 F0 FF 0F 00 F0 FF ;
.byt    $3F,$00,$80,$FF,$0F,$00,$60,$FF; 0x1f7f0 $F7E0 3F 00 80 FF 0F 00 60 FF ;
.byt    $FF,$00,$00,$FE,$FF,$03,$00,$FC; 0x1f7f8 $F7E8 FF 00 00 FE FF 03 00 FC ;
.byt    $FF,$07,$00,$FE,$DD,$22,$40,$AD; 0x1f800 $F7F0 FF 07 00 FE DD 22 40 AD ;
.byt    $FD,$FF,$0B,$00,$D8,$DD,$22,$24; 0x1f808 $F7F8 FD FF 0B 00 D8 DD 22 24 ;
.byt    $D5,$6D,$55,$4A,$55,$6B,$A5,$B2; 0x1f810 $F800 D5 6D 55 4A 55 6B A5 B2 ;
.byt    $54,$D5,$B5,$6C,$AB,$A9,$24,$55; 0x1f818 $F808 54 D5 B5 6C AB A9 24 55 ;
.byt    $95,$54,$4B,$AD,$4A,$55,$55,$AB; 0x1f820 $F810 95 54 4B AD 4A 55 55 AB ;
.byt    $56,$A9,$B2,$6A,$AD,$4A,$AD,$AA; 0x1f828 $F818 56 A9 B2 6A AD 4A AD AA ;
.byt    $56,$49,$A9,$6A,$2B,$4A,$55,$B5; 0x1f830 $F820 56 49 A9 6A 2B 4A 55 B5 ;
.byt    $A6,$A5,$52,$75,$AD,$4A,$CA,$5A; 0x1f838 $F828 A6 A5 52 75 AD 4A CA 5A ;
.byt    $AB,$2A,$69,$55,$B5,$2A,$A9,$AA; 0x1f840 $F830 AB 2A 69 55 B5 2A A9 AA ;
.byt    $56,$55,$2A,$55,$AD,$55,$A5,$AA; 0x1f848 $F838 56 55 2A 55 AD 55 A5 AA ;
.byt    $59,$95,$65,$95,$A9,$9A,$AA,$AA; 0x1f850 $F840 59 95 65 95 A9 9A AA AA ;
.byt    $AA,$69,$AA,$A6,$AA,$6A,$D5,$2D; 0x1f858 $F848 AA 69 AA A6 AA 6A D5 2D ;
.byt    $89,$52,$55,$B7,$2A,$A9,$94,$75; 0x1f860 $F850 89 52 55 B7 2A A9 94 75 ;
.byt    $6D,$A5,$48,$6A,$AD,$55,$A5,$54; 0x1f868 $F858 6D A5 48 6A AD 55 A5 54 ;
.byt    $A5,$DA,$FD,$17,$00,$88,$FE,$BF; 0x1f870 $F860 A5 DA FD 17 00 88 FE BF ;
.byt    $50,$20,$F0,$7F,$AB,$09,$82,$F5; 0x1f878 $F868 50 20 F0 7F AB 09 82 F5 ;
.byt    $B7,$8A,$40,$D5,$AA,$56,$49,$FB; 0x1f880 $F870 B7 8A 40 D5 AA 56 49 FB ;
.byt    $FF,$02,$00,$E0,$FF,$0F,$0B,$00; 0x1f888 $F878 FF 02 00 E0 FF 0F 0B 00 ;
.byt    $F7,$5F,$2F,$02,$D8,$2F,$B5,$0A; 0x1f890 $F880 F7 5F 2F 02 D8 2F B5 0A ;
.byt    $60,$4B,$DA,$FF,$FF,$00,$00,$D0; 0x1f898 $F888 60 4B DA FF FF 00 00 D0 ;
.byt    $FF,$AF,$02,$00,$FD,$FF,$07,$00; 0x1f8a0 $F890 FF AF 02 00 FD FF 07 00 ;
.byt    $D6,$E7,$95,$00,$52,$E1,$FF,$FF; 0x1f8a8 $F898 D6 E7 95 00 52 E1 FF FF ;
.byt    $03,$00,$C0,$FF,$FF,$01,$00,$FC; 0x1f8b0 $F8A0 03 00 C0 FF FF 01 00 FC ;
.byt    $FF,$0F,$00,$F0,$E3,$AB,$00,$A0; 0x1f8b8 $F8A8 FF 0F 00 F0 E3 AB 00 A0 ;
.byt    $F6,$FF,$3F,$01,$00,$FC,$FF,$3F; 0x1f8c0 $F8B0 F6 FF 3F 01 00 FC FF 3F ;
.byt    $00,$00,$FF,$FF,$07,$00,$A0,$7F; 0x1f8c8 $F8B8 00 00 FF FF 07 00 A0 7F ;
.byt    $07,$00,$FC,$FF,$FF,$00,$00,$FC; 0x1f8d0 $F8C0 07 00 FC FF FF 00 00 FC ;
.byt    $FF,$0F,$00,$C0,$FF,$FF,$03,$00; 0x1f8d8 $F8C8 FF 0F 00 C0 FF FF 03 00 ;
.byt    $00,$FF,$07,$C0,$FF,$FF,$0E,$00; 0x1f8e0 $F8D0 00 FF 07 C0 FF FF 0E 00 ;
.byt    $C0,$FF,$FF,$00,$00,$FC,$FF,$3F; 0x1f8e8 $F8D8 C0 FF FF 00 00 FC FF 3F ;
.byt    $00,$00,$F8,$3F,$00,$FC,$FF,$F7; 0x1f8f0 $F8E0 00 00 F8 3F 00 FC FF F7 ;
.byt    $00,$00,$FF,$FF,$03,$00,$E0,$FF; 0x1f8f8 $F8E8 00 00 FF FF 03 00 E0 FF ;
.byt    $FF,$02,$00,$C0,$FF,$02,$C0,$FF; 0x1f900 $F8F0 FF 02 00 C0 FF 02 C0 FF ;
.byt    $FF,$03,$00,$F0,$FF,$3F,$00,$00; 0x1f908 $F8F8 FF 03 00 F0 FF 3F 00 00 ;
.byt    $FF,$FF,$0F,$00,$00,$FD,$0F,$00; 0x1f910 $F900 FF FF 0F 00 00 FD 0F 00 ;
.byt    $FF,$FF,$3D,$00,$C0,$FF,$FF,$00; 0x1f918 $F908 FF FF 3D 00 C0 FF FF 00 ;
.byt    $00,$FC,$FF,$3F,$00,$00,$F0,$BF; 0x1f920 $F910 00 FC FF 3F 00 00 F0 BF ;
.byt    $00,$F0,$FF,$FF,$01,$00,$F8,$FF; 0x1f928 $F918 00 F0 FF FF 01 00 F8 FF ;
.byt    $0F,$00,$C0,$FF,$FF,$07,$00,$00; 0x1f930 $F920 0F 00 C0 FF FF 07 00 00 ;
.byt    $FF,$07,$02,$F0,$FF,$FF,$00,$00; 0x1f938 $F928 FF 07 02 F0 FF FF 00 00 ;
.byt    $FF,$FF,$03,$00,$E0,$FF,$FF,$03; 0x1f940 $F930 FF FF 03 00 E0 FF FF 03 ;
.byt    $00,$C0,$FF,$83,$00,$E0,$FF,$FF; 0x1f948 $F938 00 C0 FF 83 00 E0 FF FF ;
.byt    $03,$00,$F0,$FF,$3F,$00,$00,$FF; 0x1f950 $F940 03 00 F0 FF 3F 00 00 FF ;
.byt    $FF,$2F,$00,$80,$FF,$8F,$00,$00; 0x1f958 $F948 FF 2F 00 80 FF 8F 00 00 ;
.byt    $F7,$FF,$3F,$00,$00,$FE,$FF,$0B; 0x1f960 $F950 F7 FF 3F 00 00 FE FF 0B ;
.byt    $00,$E0,$FF,$FF,$00,$00,$7F,$77; 0x1f968 $F958 00 E0 FF FF 00 00 7F 77 ;
.byt    $0B,$40,$55,$DB,$FF,$BF,$02,$00; 0x1f970 $F960 0B 40 55 DB FF BF 02 00 ;
.byt    $74,$77,$8D,$82,$52,$6D,$5B,$95; 0x1f978 $F968 74 77 8D 82 52 6D 5B 95 ;
.byt    $52,$55,$AD,$55,$2A,$53,$55,$6D; 0x1f980 $F970 52 55 AD 55 2A 53 55 6D ;
.byt    $2D,$6D,$AB,$A9,$A2,$A8,$55,$4A; 0x1f988 $F978 2D 6D AB A9 A2 A8 55 4A ;
.byt    $55,$55,$D5,$52,$55,$55,$AD,$6A; 0x1f990 $F980 55 55 D5 52 55 55 AD 6A ;
.byt    $96,$2A,$AB,$56,$AB,$4A,$B5,$AA; 0x1f998 $F988 96 2A AB 56 AB 4A B5 AA ;
.byt    $56,$25,$95,$AA,$D6,$8A,$52,$55; 0x1f9a0 $F990 56 25 95 AA D6 8A 52 55 ;
.byt    $B5,$A6,$AA,$8A,$6A,$5B,$AB,$A2; 0x1f9a8 $F998 B5 A6 AA 8A 6A 5B AB A2 ;
.byt    $D2,$5A,$AD,$2A,$A5,$66,$55,$AB; 0x1f9b0 $F9A0 D2 5A AD 2A A5 66 55 AB ;
.byt    $52,$AA,$AA,$56,$55,$A9,$54,$B5; 0x1f9b8 $F9A8 52 AA AA 56 55 A9 54 B5 ;
.byt    $5A,$55,$A9,$B4,$6A,$55,$65,$AA; 0x1f9c0 $F9B0 5A 55 A9 B4 6A 55 65 AA ;
.byt    $55,$55,$55,$55,$AA,$56,$55,$55; 0x1f9c8 $F9B8 55 55 55 55 AA 56 55 55 ;
.byt    $D7,$56,$A5,$48,$6A,$AD,$55,$55; 0x1f9d0 $F9C0 D7 56 A5 48 6A AD 55 55 ;
.byt    $4A,$55,$A5,$DA,$FF,$95,$80,$80; 0x1f9d8 $F9C8 4A 55 A5 DA FF 95 80 80 ;
.byt    $E8,$FF,$2D,$92,$20,$F0,$FD,$AD; 0x1f9e0 $F9D0 E8 FF 2D 92 20 F0 FD AD ;
.byt    $16,$22,$68,$F7,$AD,$8A,$08,$55; 0x1f9e8 $F9D8 16 22 68 F7 AD 8A 08 55 ;
.byt    $AB,$6A,$55,$D2,$FE,$FF,$00,$00; 0x1f9f0 $F9E0 AB 6A 55 D2 FE FF 00 00 ;
.byt    $40,$FF,$FF,$70,$80,$80,$FF,$37; 0x1f9f8 $F9E8 40 FF FF 70 80 80 FF 37 ;
.byt    $BD,$08,$C0,$FD,$4A,$AD,$02,$62; 0x1fa00 $F9F0 BD 08 C0 FD 4A AD 02 62 ;
.byt    $4B,$A9,$FF,$FF,$2F,$00,$00,$F0; 0x1fa08 $F9F8 4B A9 FF FF 2F 00 00 F0 ;
.byt    $FF,$2F,$0A,$00,$F0,$FF,$DF,$01; 0x1fa10 $FA00 FF 2F 0A 00 F0 FF DF 01 ;
.byt    $00,$DB,$A7,$37,$0A,$A0,$34,$F4; 0x1fa18 $FA08 00 DB A7 37 0A A0 34 F4 ;
.byt    $FF,$FF,$03,$00,$00,$FE,$FF,$3F; 0x1fa20 $FA10 FF FF 03 00 00 FE FF 3F ;
.byt    $00,$00,$FC,$FF,$3F,$00,$40,$5F; 0x1fa28 $FA18 00 00 FC FF 3F 00 40 5F ;
.byt    $F9,$2A,$00,$A1,$DA,$FF,$FF,$12; 0x1fa30 $FA20 F9 2A 00 A1 DA FF FF 12 ;
.byt    $00,$00,$FF,$FF,$3F,$00,$00,$FC; 0x1fa38 $FA28 00 00 FF FF 3F 00 00 FC ;
.byt    $FF,$7F,$02,$00,$A8,$FD,$1D,$00; 0x1fa40 $FA30 FF 7F 02 00 A8 FD 1D 00 ;
.byt    $D0,$FF,$FF,$3F,$00,$00,$FC,$FF; 0x1fa48 $FA38 D0 FF FF 3F 00 00 FC FF ;
.byt    $3F,$00,$00,$F8,$FF,$FF,$01,$00; 0x1fa50 $FA40 3F 00 00 F8 FF FF 01 00 ;
.byt    $00,$FD,$3F,$20,$F0,$FF,$FF,$2C; 0x1fa58 $FA48 00 FD 3F 20 F0 FF FF 2C ;
.byt    $00,$00,$FF,$FF,$0F,$00,$00,$FD; 0x1fa60 $FA50 00 00 FF FF 0F 00 00 FD ;
.byt    $FF,$DF,$00,$00,$40,$FF,$1D,$00; 0x1fa68 $FA58 FF DF 00 00 40 FF 1D 00 ;
.byt    $FD,$FF,$3F,$03,$00,$E0,$FF,$FF; 0x1fa70 $FA60 FD FF 3F 03 00 E0 FF FF ;
.byt    $03,$00,$C0,$FF,$FF,$3B,$00,$00; 0x1fa78 $FA68 03 00 C0 FF FF 3B 00 00 ;
.byt    $C0,$FF,$0B,$00,$FF,$FF,$CF,$02; 0x1fa80 $FA70 C0 FF 0B 00 FF FF CF 02 ;
.byt    $00,$F0,$FF,$FF,$00,$00,$E0,$FF; 0x1fa88 $FA78 00 F0 FF FF 00 00 E0 FF ;
.byt    $FF,$2F,$00,$00,$E0,$FF,$02,$40; 0x1fa90 $FA80 FF 2F 00 00 E0 FF 02 40 ;
.byt    $FF,$FF,$F3,$00,$00,$FC,$FF,$3F; 0x1fa98 $FA88 FF FF F3 00 00 FC FF 3F ;
.byt    $00,$00,$F4,$FF,$FF,$03,$00,$00; 0x1faa0 $FA90 00 00 F4 FF FF 03 00 00 ;
.byt    $F6,$BF,$00,$D0,$FF,$FF,$37,$00; 0x1faa8 $FA98 F6 BF 00 D0 FF FF 37 00 ;
.byt    $00,$FC,$FF,$1F,$00,$00,$FC,$FF; 0x1fab0 $FAA0 00 FC FF 1F 00 00 FC FF ;
.byt    $FF,$03,$00                    ; 0x1fab8 $FAA8 FF 03 00                ;
bank7_UNKNOWN3                                                                 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fabb $FAAB 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fac3 $FAB3 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1facb $FABB DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fad3 $FAC3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fadb $FACB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fae3 $FAD3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1faeb $FADB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1faf3 $FAE3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fafb $FAEB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fb03 $FAF3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fb0b $FAFB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fb13 $FB03 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fb1b $FB0B FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fb23 $FB13 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fb2b $FB1B FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fb33 $FB23 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fb3b $FB2B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fb43 $FB33 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fb4b $FB3B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fb53 $FB43 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fb5b $FB4B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fb63 $FB53 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fb6b $FB5B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fb73 $FB63 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fb7b $FB6B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fb83 $FB73 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fb8b $FB7B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fb93 $FB83 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fb9b $FB8B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fba3 $FB93 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fbab $FB9B 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fbb3 $FBA3 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1fbbb $FBAB DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20,$F0,$FD,$AD,$16,$22,$68; 0x1fbc3 $FBB3 92 20 F0 FD AD 16 22 68 ;
.byt    $F7,$AD,$8A,$08,$55,$AB,$6A,$55; 0x1fbcb $FBBB F7 AD 8A 08 55 AB 6A 55 ;
.byt    $D2,$FE,$FF,$00,$00,$40,$FF,$FF; 0x1fbd3 $FBC3 D2 FE FF 00 00 40 FF FF ;
.byt    $70,$80,$80,$FF,$37,$BD,$08,$C0; 0x1fbdb $FBCB 70 80 80 FF 37 BD 08 C0 ;
.byt    $FD,$4A,$AD,$02,$62,$4B,$A9,$FF; 0x1fbe3 $FBD3 FD 4A AD 02 62 4B A9 FF ;
.byt    $FF,$2F,$00,$00,$F0,$FF,$2F,$0A; 0x1fbeb $FBDB FF 2F 00 00 F0 FF 2F 0A ;
.byt    $00,$F0,$FF,$DF,$01,$00,$DB,$A7; 0x1fbf3 $FBE3 00 F0 FF DF 01 00 DB A7 ;
.byt    $37,$0A,$A0,$34,$F4,$FF,$FF,$03; 0x1fbfb $FBEB 37 0A A0 34 F4 FF FF 03 ;
.byt    $00,$00,$FE,$FF,$3F,$00,$00,$FC; 0x1fc03 $FBF3 00 00 FE FF 3F 00 00 FC ;
.byt    $FF,$3F,$00,$40,$5F,$F9,$2A,$00; 0x1fc0b $FBFB FF 3F 00 40 5F F9 2A 00 ;
.byt    $A1,$DA,$FF,$FF,$12,$00,$00,$FF; 0x1fc13 $FC03 A1 DA FF FF 12 00 00 FF ;
.byt    $FF,$3F,$00,$00,$FC,$FF,$7F,$02; 0x1fc1b $FC0B FF 3F 00 00 FC FF 7F 02 ;
.byt    $00,$A8,$FD,$1D,$00,$D0,$FF,$FF; 0x1fc23 $FC13 00 A8 FD 1D 00 D0 FF FF ;
.byt    $3F,$00,$00,$FC,$FF,$3F,$00,$00; 0x1fc2b $FC1B 3F 00 00 FC FF 3F 00 00 ;
.byt    $F8,$FF,$FF,$01,$00,$00,$FD,$3F; 0x1fc33 $FC23 F8 FF FF 01 00 00 FD 3F ;
.byt    $20,$F0,$FF,$FF,$2C,$00,$00,$FF; 0x1fc3b $FC2B 20 F0 FF FF 2C 00 00 FF ;
.byt    $FF,$0F,$00,$00,$FD,$FF,$DF,$00; 0x1fc43 $FC33 FF 0F 00 00 FD FF DF 00 ;
.byt    $00,$40,$FF,$1D,$00,$FD,$FF,$3F; 0x1fc4b $FC3B 00 40 FF 1D 00 FD FF 3F ;
.byt    $03,$00,$E0,$FF,$FF,$03,$00,$C0; 0x1fc53 $FC43 03 00 E0 FF FF 03 00 C0 ;
.byt    $FF,$FF,$3B,$00,$00,$C0,$FF,$0B; 0x1fc5b $FC4B FF FF 3B 00 00 C0 FF 0B ;
.byt    $00,$FF,$FF,$CF,$02,$00,$F0,$FF; 0x1fc63 $FC53 00 FF FF CF 02 00 F0 FF ;
.byt    $FF,$00,$00,$E0,$FF,$FF,$2F,$00; 0x1fc6b $FC5B FF 00 00 E0 FF FF 2F 00 ;
.byt    $00,$E0,$FF,$02,$40,$FF,$FF,$F3; 0x1fc73 $FC63 00 E0 FF 02 40 FF FF F3 ;
.byt    $00,$00,$FC,$FF,$3F,$00,$00,$F4; 0x1fc7b $FC6B 00 00 FC FF 3F 00 00 F4 ;
.byt    $FF,$FF,$03,$00,$00,$F6,$BF,$00; 0x1fc83 $FC73 FF FF 03 00 00 F6 BF 00 ;
.byt    $D0,$FF,$FF,$37,$00,$00,$FC,$FF; 0x1fc8b $FC7B D0 FF FF 37 00 00 FC FF ;
.byt    $1F,$00,$00,$FC,$FF,$FF,$03,$00; 0x1fc93 $FC83 1F 00 00 FC FF FF 03 00 ;
.byt    $00,$FD,$3F,$00,$40,$D7,$56,$A5; 0x1fc9b $FC8B 00 FD 3F 00 40 D7 56 A5 ;
.byt    $48,$6A,$AD,$55,$55,$4A,$55,$A5; 0x1fca3 $FC93 48 6A AD 55 55 4A 55 A5 ;
.byt    $DA,$FF,$95,$80,$80,$E8,$FF,$2D; 0x1fcab $FC9B DA FF 95 80 80 E8 FF 2D ;
.byt    $92,$20                        ; 0x1fcb3 $FCA3 92 20                   ;
LFCA5                                                                          ;
.byt    $F0,$FD,$AD,$16,$22,$68,$F7,$AD; 0x1fcb5 $FCA5 F0 FD AD 16 22 68 F7 AD ;
.byt    $8A,$08,$55,$AB,$6A,$55,$D2,$FE; 0x1fcbd $FCAD 8A 08 55 AB 6A 55 D2 FE ;
.byt    $FF,$00,$00,$40,$FF,$FF,$70,$80; 0x1fcc5 $FCB5 FF 00 00 40 FF FF 70 80 ;
.byt    $80,$FF,$37,$BD,$08,$C0,$FD,$4A; 0x1fccd $FCBD 80 FF 37 BD 08 C0 FD 4A ;
.byt    $AD,$02,$62,$4B,$A9,$FF,$FF,$2F; 0x1fcd5 $FCC5 AD 02 62 4B A9 FF FF 2F ;
.byt    $00,$00,$F0,$FF,$2F,$0A,$00,$F0; 0x1fcdd $FCCD 00 00 F0 FF 2F 0A 00 F0 ;
.byt    $FF,$DF,$01,$00,$DB,$A7,$37,$0A; 0x1fce5 $FCD5 FF DF 01 00 DB A7 37 0A ;
.byt    $A0,$34,$F4,$FF,$FF,$03,$00,$00; 0x1fced $FCDD A0 34 F4 FF FF 03 00 00 ;
.byt    $FE,$FF,$3F,$00,$00,$FC,$FF,$3F; 0x1fcf5 $FCE5 FE FF 3F 00 00 FC FF 3F ;
.byt    $00,$40,$5F,$F9,$2A,$00,$A1,$DA; 0x1fcfd $FCED 00 40 5F F9 2A 00 A1 DA ;
.byt    $FF,$FF,$12,$00,$00,$FF,$FF,$3F; 0x1fd05 $FCF5 FF FF 12 00 00 FF FF 3F ;
.byt    $00,$00,$FC,$FF,$7F,$02,$00,$A8; 0x1fd0d $FCFD 00 00 FC FF 7F 02 00 A8 ;
.byt    $FD,$1D,$00,$D0,$FF,$FF,$3F,$00; 0x1fd15 $FD05 FD 1D 00 D0 FF FF 3F 00 ;
.byt    $00,$FC,$FF,$3F,$00,$00,$F8,$FF; 0x1fd1d $FD0D 00 FC FF 3F 00 00 F8 FF ;
.byt    $FF,$01,$00,$00,$FD,$3F,$20,$F0; 0x1fd25 $FD15 FF 01 00 00 FD 3F 20 F0 ;
.byt    $FF,$FF,$2C,$00,$00,$FF,$FF,$0F; 0x1fd2d $FD1D FF FF 2C 00 00 FF FF 0F ;
.byt    $00,$00,$FD,$FF,$DF,$00,$00,$40; 0x1fd35 $FD25 00 00 FD FF DF 00 00 40 ;
.byt    $FF,$1D,$00,$FD,$FF,$3F,$03,$00; 0x1fd3d $FD2D FF 1D 00 FD FF 3F 03 00 ;
.byt    $E0,$FF,$FF,$03,$00,$C0,$FF,$FF; 0x1fd45 $FD35 E0 FF FF 03 00 C0 FF FF ;
.byt    $3B,$00,$00,$C0,$FF,$0B,$00,$FF; 0x1fd4d $FD3D 3B 00 00 C0 FF 0B 00 FF ;
.byt    $FF,$CF,$02,$00,$F0,$FF,$FF,$00; 0x1fd55 $FD45 FF CF 02 00 F0 FF FF 00 ;
.byt    $00,$E0,$FF,$FF,$2F,$00,$00,$E0; 0x1fd5d $FD4D 00 E0 FF FF 2F 00 00 E0 ;
.byt    $FF,$02,$40,$FF,$FF,$F3,$00,$00; 0x1fd65 $FD55 FF 02 40 FF FF F3 00 00 ;
.byt    $FC,$FF,$3F,$00,$00,$F4,$FF,$FF; 0x1fd6d $FD5D FC FF 3F 00 00 F4 FF FF ;
.byt    $03,$00,$00,$F6,$BF,$00,$D0,$FF; 0x1fd75 $FD65 03 00 00 F6 BF 00 D0 FF ;
.byt    $FF,$37,$00,$00,$FC,$FF,$1F,$00; 0x1fd7d $FD6D FF 37 00 00 FC FF 1F 00 ;
.byt    $00,$FC,$FF,$FF,$03,$00,$00,$FD; 0x1fd85 $FD75 00 FC FF FF 03 00 00 FD ;
.byt    $3F,$00,$40                    ; 0x1fd8d $FD7D 3F 00 40                ;
LFD80                                                                          ;
.byt    $03,$01                        ; 0x1fd90 $FD80 03 01                   ;
; ---------------------------------------------------------------------------- ;
bank7_code52                                                                   ;
lda      $0720                         ; 0x1fd92 $FD82 AD 20 07                ;
lsr                                    ; 0x1fd95 $FD85 4A                      ;
tax                                    ; 0x1fd96 $FD86 AA                      ;
lda      $071E                         ; 0x1fd97 $FD87 AD 1E 07                ;
and      #$1F                          ; 0x1fd9a $FD8A 29 1F                   ; keep bits ...x xxxx
sec                                    ; 0x1fd9c $FD8C 38                      ;
sbc      LFD80,x                       ; 0x1fd9d $FD8D FD 80 FD                ;
lsr                                    ; 0x1fda0 $FD90 4A                      ;
lsr                                    ; 0x1fda1 $FD91 4A                      ;
clc                                    ; 0x1fda2 $FD92 18                      ;
adc      #$C0                          ; 0x1fda3 $FD93 69 C0                   ;
sta      $01                           ; 0x1fda5 $FD95 85 01                   ;
lda      $071D                         ; 0x1fda7 $FD97 AD 1D 07                ;
ora      #$03                          ; 0x1fdaa $FD9A 09 03                   ; set bits  .... ..xx
sta      L0000                         ; 0x1fdac $FD9C 85 00                   ;
ldx      #$00                          ; 0x1fdae $FD9E A2 00                   ; X = 00
stx      $07AE                         ; 0x1fdb0 $FDA0 8E AE 07                ;
LFDA3                                                                          ;
lda      $2002                         ; 0x1fdb3 $FDA3 AD 02 20                ;
lda      L0000                         ; 0x1fdb6 $FDA6 A5 00                   ;
sta      $2006                         ; 0x1fdb8 $FDA8 8D 06 20                ;
lda      $01                           ; 0x1fdbb $FDAB A5 01                   ;
clc                                    ; 0x1fdbd $FDAD 18                      ;
adc      #$08                          ; 0x1fdbe $FDAE 69 08                   ;
sta      $2006                         ; 0x1fdc0 $FDB0 8D 06 20                ;
sta      $01                           ; 0x1fdc3 $FDB3 85 01                   ;
lda      $0471,x                       ; 0x1fdc5 $FDB5 BD 71 04                ;
sta      $2007                         ; 0x1fdc8 $FDB8 8D 07 20                ;
lda      #$00                          ; 0x1fdcb $FDBB A9 00                   ; A = 00
sta      $0471,x                       ; 0x1fdcd $FDBD 9D 71 04                ;
inx                                    ; 0x1fdd0 $FDC0 E8                      ;
cpx      #$07                          ; 0x1fdd1 $FDC1 E0 07                   ;
bcc      LFDA3                         ; 0x1fdd3 $FDC3 90 DE                   ;
lda      #$FF                          ; 0x1fdd5 $FDC5 A9 FF                   ; A = FF
sty      $03A3                         ; 0x1fdd7 $FDC7 8C A3 03                ;
rts                                    ; 0x1fdda $FDCA 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Continue_Save_Screen_Tile_Mappings                                       ;
.byt    $23,$D8,$7F,$FF                ; 0x1fddb $FDCB 23 D8 7F FF             ;
                                                                               ;
.byt    $23,$F7,$01,$FF                ; 0x1fddf $FDCF 23 F7 01 FF             ;
                                                                               ;
.byt    $20,$CA,$0A,$FA,$F4,$DC,$E8,$E7; 0x1fde3 $FDD3 20 CA 0A FA F4 DC E8 E7 ;CONTINUE (FA = Magic Bag Tile)
.byt    $ED,$E2,$E7,$EE,$DE            ; 0x1fdeb $FDDB ED E2 E7 EE DE          ;
                                                                               ;
.byt    $21,$0C,$04,$EC,$DA,$EF,$DE    ; 0x1fdf0 $FDE0 21 0C 04 EC DA EF DE    ;SAVE
                                                                               ;
.byt    $21,$83,$5A,$CB                ; 0x1fdf7 $FDE7 21 83 5A CB             ;
                                                                               ;
.byt    $23,$03,$5A,$CB                ; 0x1fdfb $FDEB 23 03 5A CB             ;
                                                                               ;
.byt    $21,$A3,$CB,$CC                ; 0x1fdff $FDEF 21 A3 CB CC             ;
                                                                               ;
.byt    $21,$BC,$CB,$CC                ; 0x1fe03 $FDF3 21 BC CB CC             ;
                                                                               ;
.byt    $21,$83,$01,$CA                ; 0x1fe07 $FDF7 21 83 01 CA             ;
                                                                               ;
.byt    $21,$9C,$01,$CA                ; 0x1fe0b $FDFB 21 9C 01 CA             ;
                                                                               ;
.byt    $23,$03,$01,$CA                ; 0x1fe0f $FDFF 23 03 01 CA             ;
                                                                               ;
.byt    $23,$1C,$01,$CA                ; 0x1fe13 $FE03 23 1C 01 CA             ;
                                                                               ;
.byt    $21,$CC,$07,$DC,$DA,$EE,$ED,$E2; 0x1fe17 $FE07 21 CC 07 DC DA EE ED E2 ;CAUTION
.byt    $E8,$E7                        ; 0x1fe1f $FE0F E8 E7                   ;
                                                                               ;
.byt    $22,$05,$16,$ED,$E8,$F4,$DA,$EF; 0x1fe21 $FE11 22 05 16 ED E8 F4 DA EF ;
.byt    $E8,$E2,$DD,$F4,$DD,$DA,$E6,$DA; 0x1fe29 $FE19 E8 E2 DD F4 DD DA E6 DA ;
.byt    $E0,$E2,$E7,$E0,$F4,$E0,$DA,$E6; 0x1fe31 $FE21 E0 E2 E7 E0 F4 E0 DA E6 ;
.byt    $DE                            ; 0x1fe39 $FE29 DE                      ;
                                                                               ;
.byt    $22,$45,$16,$E2,$E7,$DF,$E8,$F4; 0x1fe3a $FE2A 22 45 16 E2 E7 DF E8 F4 ;
.byt    $F4,$EC,$DA,$EF,$DE,$DD,$9C,$F4; 0x1fe42 $FE32 F4 EC DA EF DE DD 9C F4 ;
.byt    $F4,$E1,$E8,$E5,$DD,$F4,$F4,$E2; 0x1fe4a $FE3A F4 E1 E8 E5 DD F4 F4 E2 ;
.byt    $E7                            ; 0x1fe52 $FE42 E7                      ;
                                                                               ;
.byt    $22,$85,$16,$EB,$DE,$EC,$DE,$ED; 0x1fe53 $FE43 22 85 16 EB DE EC DE ED ;
.byt    $F4,$F4,$DB,$EE,$ED,$ED,$E8,$E7; 0x1fe5b $FE4B F4 F4 DB EE ED ED E8 E7 ;
.byt    $F4,$F4,$DA,$EC,$F4,$F4,$F2,$E8; 0x1fe63 $FE53 F4 F4 DA EC F4 F4 F2 E8 ;
.byt    $EE                            ; 0x1fe6b $FE5B EE                      ;
                                                                               ;
.byt    $22,$C5,$16,$ED,$EE,$EB,$E7,$F4; 0x1fe6c $FE5C 22 C5 16 ED EE EB E7 F4 ;
.byt    $E9,$E8,$F0,$DE,$EB,$F4,$E8,$DF; 0x1fe74 $FE64 E9 E8 F0 DE EB F4 E8 DF ;
.byt    $DF,$CF,$F4,$F4,$F4,$F4,$F4,$F4; 0x1fe7c $FE6C DF CF F4 F4 F4 F4 F4 F4 ;
.byt    $F4                            ; 0x1fe84 $FE74 F4                      ;
                                                                               ;
.byt    $FF                            ; 0x1fe85 $FE75 FF                      ;End Byte
; ---------------------------------------------------------------------------- ;
bank7_code53                                                                   ;
jsr      LD15C                         ; 0x1fe86 $FE76 20 5C D1                ;
jsr      bank7_PullAddrFromTableFollowingThisJSR_withIndexOfA_then_JMP; 0x1fe89 $FE79 20 85 D3;
bank7_pointer_table                                                            ;
.word    bank7_code54__Flash_Text_QUIT_Red_and_White; 0x1fe8c $FE7C 87 FE      ;
.word    LCF21_SaveGameWhenChooseSAVEwhenDead__maybe; 0x1fe8e $FE7E 21 CF      ;
.word    LCF05                         ; 0x1fe90 $FE80 05 CF                   ;
.word    LD323                         ; 0x1fe92 $FE82 23 D3                   ;
; ---------------------------------------------------------------------------- ;
bank7_table32                                                                  ;
.byt    $01,$00,$FF                    ; 0x1fe94 $FE84 01 00 FF                ;
; ---------------------------------------------------------------------------- ;
bank7_code54__Flash_Text_QUIT_Red_and_White                                    ;
lda      $07B0                         ; 0x1fe97 $FE87 AD B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
beq      LFEA6                         ; 0x1fe9a $FE8A F0 1A                   ;
dec      $07B0                         ; 0x1fe9c $FE8C CE B0 07                ;;timer used on GameOverScreen for flashing "SAVE" red and white
pha                                    ; 0x1fe9f $FE8F 48                      ;
ldx      #$04                          ; 0x1fea0 $FE90 A2 04                   ; X = 04
LFE92                                                                          ;
lda      bank7_pointer_table+$06,x     ; 0x1fea2 $FE92 BD 82 FE                ;
sta      L0302,x                       ; 0x1fea5 $FE95 9D 02 03                ;
dex                                    ; 0x1fea8 $FE98 CA                      ;
bpl      LFE92                         ; 0x1fea9 $FE99 10 F7                   ;
pla                                    ; 0x1feab $FE9B 68                      ;
and      #$04                          ; 0x1feac $FE9C 29 04                   ; keep bits .... .x..
beq      LFEA5                         ; 0x1feae $FE9E F0 05                   ;
lda      #$FF                          ; 0x1feb0 $FEA0 A9 FF                   ; A = FF
sta      $0305                         ; 0x1feb2 $FEA2 8D 05 03                ;; Empty Row Space Character
LFEA5                                                                          ;
rts                                    ; 0x1feb5 $FEA5 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFEA6                                                                          ;
inc      $0738                         ; 0x1feb6 $FEA6 EE 38 07                ;
rts                                    ; 0x1feb9 $FEA9 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_FEAA                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1feba $FEAA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1fec2 $FEB2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1feca $FEBA FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1fed2 $FEC2 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF        ; 0x1feda $FECA FF FF FF FF FF FF       ;
; ---------------------------------------------------------------------------- ;
bank7_code55                                                                   ;
jsr      bank7_Load_Bank_769_at_0x8000 ; 0x1fee0 $FED0 20 C9 FF                ; Load Bank $0769
LFED3                                                                          ;
stx      $01                           ; 0x1fee3 $FED3 86 01                   ;
lda      $0464,x                       ; 0x1fee5 $FED5 BD 64 04                ;
and      #$C0                          ; 0x1fee8 $FED8 29 C0                   ; keep bits xx.. ....
sta      $03                           ; 0x1feea $FEDA 85 03                   ;
asl                                    ; 0x1feec $FEDC 0A                      ;
rol                                    ; 0x1feed $FEDD 2A                      ;
rol                                    ; 0x1feee $FEDE 2A                      ;
asl                                    ; 0x1feef $FEDF 0A                      ;
tay                                    ; 0x1fef0 $FEE0 A8                      ;
lda      bank5_Pointer_table_for_Objects_Tile_Mappings,y; 0x1fef1 $FEE1 B9 00 85;
sta      L000E                         ; 0x1fef4 $FEE4 85 0E                   ;
lda      bank5_Pointer_table_for_Objects_Tile_Mappings+$01,y; 0x1fef6 $FEE6 B9 01 85;
sta      $0F                           ; 0x1fef9 $FEE9 85 0F                   ;
lda      $0464,x                       ; 0x1fefb $FEEB BD 64 04                ;
and      #$3F                          ; 0x1fefe $FEEE 29 3F                   ; keep bits ..xx xxxx
asl                                    ; 0x1ff00 $FEF0 0A                      ;
asl                                    ; 0x1ff01 $FEF1 0A                      ;
sta      $02                           ; 0x1ff02 $FEF2 85 02                   ;
lda      $0740                         ; 0x1ff04 $FEF4 AD 40 07                ;
and      #$01                          ; 0x1ff07 $FEF7 29 01                   ; keep bits .... ...x
eor      #$01                          ; 0x1ff09 $FEF9 49 01                   ; flip bits .... ...x
asl                                    ; 0x1ff0b $FEFB 0A                      ;
adc      $02                           ; 0x1ff0c $FEFC 65 02                   ;
tay                                    ; 0x1ff0e $FEFE A8                      ;
ldx      L0000                         ; 0x1ff0f $FEFF A6 00                   ;
lda      (L000E),y                     ; 0x1ff11 $FF01 B1 0E                   ;
sta      $03A7,x                       ; 0x1ff13 $FF03 9D A7 03                ;
iny                                    ; 0x1ff16 $FF06 C8                      ;
lda      (L000E),y                     ; 0x1ff17 $FF07 B1 0E                   ;
sta      $03A8,x                       ; 0x1ff19 $FF09 9D A8 03                ;
ldy      $04                           ; 0x1ff1c $FF0C A4 04                   ;
lda      $05                           ; 0x1ff1e $FF0E A5 05                   ;
bne      LFF20                         ; 0x1ff20 $FF10 D0 0E                   ;
lda      $01                           ; 0x1ff22 $FF12 A5 01                   ;
lsr                                    ; 0x1ff24 $FF14 4A                      ;
bcs      LFF30                         ; 0x1ff25 $FF15 B0 19                   ;
rol      $03                           ; 0x1ff27 $FF17 26 03                   ;
rol      $03                           ; 0x1ff29 $FF19 26 03                   ;
rol      $03                           ; 0x1ff2b $FF1B 26 03                   ;
jmp      LFF36                         ; 0x1ff2d $FF1D 4C 36 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFF20                                                                          ;
lda      $01                           ; 0x1ff30 $FF20 A5 01                   ;
lsr                                    ; 0x1ff32 $FF22 4A                      ;
bcs      LFF34                         ; 0x1ff33 $FF23 B0 0F                   ;
lsr      $03                           ; 0x1ff35 $FF25 46 03                   ;
lsr      $03                           ; 0x1ff37 $FF27 46 03                   ;
lsr      $03                           ; 0x1ff39 $FF29 46 03                   ;
lsr      $03                           ; 0x1ff3b $FF2B 46 03                   ;
jmp      LFF36                         ; 0x1ff3d $FF2D 4C 36 FF                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
LFF30                                                                          ;
lsr      $03                           ; 0x1ff40 $FF30 46 03                   ;
lsr      $03                           ; 0x1ff42 $FF32 46 03                   ;
LFF34                                                                          ;
inc      $04                           ; 0x1ff44 $FF34 E6 04                   ;
LFF36                                                                          ;
lda      $0471,y                       ; 0x1ff46 $FF36 B9 71 04                ;
ora      $03                           ; 0x1ff49 $FF39 05 03                   ;
sta      $0471,y                       ; 0x1ff4b $FF3B 99 71 04                ;
inc      L0000                         ; 0x1ff4e $FF3E E6 00                   ;
inc      L0000                         ; 0x1ff50 $FF40 E6 00                   ;
ldx      $01                           ; 0x1ff52 $FF42 A6 01                   ;
inx                                    ; 0x1ff54 $FF44 E8                      ;
cpx      #$0D                          ; 0x1ff55 $FF45 E0 0D                   ;
bcc      LFED3                         ; 0x1ff57 $FF47 90 8A                   ;
jmp      bank7_Load_Bank_0_at_0x8000   ; 0x1ff59 $FF49 4C C5 FF                ; Load Bank 0
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_UNUSED_FF4C                                                              ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff5c $FF4C FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff64 $FF54 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff6c $FF5C FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF; 0x1ff74 $FF64 FF FF FF FF FF FF FF FF ;
.byt    $FF,$FF,$FF,$FF                ; 0x1ff7c $FF6C FF FF FF FF             ;
; ---------------------------------------------------------------------------- ;
bank7_reset                                                                    ;
sei                                    ; 0x1ff80 $FF70 78                      ;
cld                                    ; 0x1ff81 $FF71 D8                      ;
ldx      #$00                          ; 0x1ff82 $FF72 A2 00                   ; X = 00
stx      $2000                         ; 0x1ff84 $FF74 8E 00 20                ;
inx                                    ; 0x1ff87 $FF77 E8                      ;
LFF78                                                                          ;
lda      $2002                         ; 0x1ff88 $FF78 AD 02 20                ;
bpl      LFF78                         ; 0x1ff8b $FF7B 10 FB                   ;
dex                                    ; 0x1ff8d $FF7D CA                      ;
beq      LFF78                         ; 0x1ff8e $FF7E F0 F8                   ;
txs                                    ; 0x1ff90 $FF80 9A                      ;
stx      bank5_nothing                 ; 0x1ff91 $FF81 8E 00 80                ;
stx      LA000                         ; 0x1ff94 $FF84 8E 00 A0                ;
stx      bank7_PowerON_code            ; 0x1ff97 $FF87 8E 00 C0                ;
stx      LE000                         ; 0x1ff9a $FF8A 8E 00 E0                ;
lda      #$0F                          ; 0x1ff9d $FF8D A9 0F                   ; A = 0F
jsr      bank7_Config_Register         ; 0x1ff9f $FF8F 20 9D FF                ;
jsr      bank7_chr_bank_switch__load_A ; 0x1ffa2 $FF92 20 B1 FF                ;
lda      #$07                          ; 0x1ffa5 $FF95 A9 07                   ; A = 07
jsr      LFFCC                         ; 0x1ffa7 $FF97 20 CC FF                ;
jmp      bank7_PowerON_code            ; 0x1ffaa $FF9A 4C 00 C0                ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Config_Register                                                          ;
sta      bank5_nothing                 ; 0x1ffad $FF9D 8D 00 80                ;
lsr                                    ; 0x1ffb0 $FFA0 4A                      ;
sta      bank5_nothing                 ; 0x1ffb1 $FFA1 8D 00 80                ;
lsr                                    ; 0x1ffb4 $FFA4 4A                      ;
sta      bank5_nothing                 ; 0x1ffb5 $FFA5 8D 00 80                ;
lsr                                    ; 0x1ffb8 $FFA8 4A                      ;
sta      bank5_nothing                 ; 0x1ffb9 $FFA9 8D 00 80                ;
lsr                                    ; 0x1ffbc $FFAC 4A                      ;
sta      bank5_nothing                 ; 0x1ffbd $FFAD 8D 00 80                ;
rts                                    ; 0x1ffc0 $FFB0 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_chr_bank_switch__load_A                                                  ;
sta      LA000                         ; 0x1ffc1 $FFB1 8D 00 A0                ;
lsr                                    ; 0x1ffc4 $FFB4 4A                      ;
sta      LA000                         ; 0x1ffc5 $FFB5 8D 00 A0                ;
lsr                                    ; 0x1ffc8 $FFB8 4A                      ;
sta      LA000                         ; 0x1ffc9 $FFB9 8D 00 A0                ;
lsr                                    ; 0x1ffcc $FFBC 4A                      ;
sta      LA000                         ; 0x1ffcd $FFBD 8D 00 A0                ;
lsr                                    ; 0x1ffd0 $FFC0 4A                      ;
sta      LA000                         ; 0x1ffd1 $FFC1 8D 00 A0                ;
rts                                    ; 0x1ffd4 $FFC4 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_Load_Bank_0_at_0x8000                                                    ;
lda      #$00                          ; 0x1ffd5 $FFC5 A9 00                   ; A = 00
beq      LFFCC                         ; 0x1ffd7 $FFC7 F0 03                   ;
bank7_Load_Bank_769_at_0x8000                                                  ;
lda      $0769                         ; 0x1ffd9 $FFC9 AD 69 07                ;; Bank to switch to (other than 0 or 7)
LFFCC                                                                          ;
sta      LE000                         ; 0x1ffdc $FFCC 8D 00 E0                ;
lsr                                    ; 0x1ffdf $FFCF 4A                      ;
sta      LE000                         ; 0x1ffe0 $FFD0 8D 00 E0                ;
lsr                                    ; 0x1ffe3 $FFD3 4A                      ;
sta      LE000                         ; 0x1ffe4 $FFD4 8D 00 E0                ;
lsr                                    ; 0x1ffe7 $FFD7 4A                      ;
sta      LE000                         ; 0x1ffe8 $FFD8 8D 00 E0                ;
lsr                                    ; 0x1ffeb $FFDB 4A                      ;
sta      LE000                         ; 0x1ffec $FFDC 8D 00 E0                ;
rts                                    ; 0x1ffef $FFDF 60                      ;
                                                                               ;
; ---------------------------------------------------------------------------- ;
bank7_table33                                                                  ;
.byt    $4C,$45,$47,$45,$4E,$44,$20,$4F; 0x1fff0 $FFE0 4C 45 47 45 4E 44 20 4F ;
.byt    $46,$20,$5A,$45,$4C,$44,$41,$32; 0x1fff8 $FFE8 46 20 5A 45 4C 44 41 32 ;
.byt    $98,$F2,$DD,$DB,$33,$04,$01,$0F; 0x20000 $FFF0 98 F2 DD DB 33 04 01 0F ;
.byt    $01,$00,$7B,$C0,$70,$FF,$F0,$FF; 0x20008 $FFF8 01 00 7B C0 70 FF F0 FF ;
                                                                               ;
                                                                               ;
